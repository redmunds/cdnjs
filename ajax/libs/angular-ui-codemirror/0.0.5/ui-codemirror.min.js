angular.module("ui.codemirror",[]).constant("uiCodemirrorConfig",{}).directive("uiCodemirror",["uiCodemirrorConfig","$timeout",function(r,e){"use strict";var o=["cursorActivity","viewportChange","gutterClick","focus","blur","scroll","update"];return{restrict:"A",require:"ngModel",link:function(n,i,t,a){var u,c,l,f,s;if("textarea"!==i[0].type)throw new Error("uiCodemirror3 can only be applied to a textarea element");u=r.codemirror||{},c=angular.extend({},u,n.$eval(t.uiCodemirror)),l=function(r){return function(e,o){var i=e.getValue();i!==a.$viewValue&&a.$setViewValue(i),"function"==typeof r&&r(e,o),n.$$phase||n.$apply()}},f=function(){s=CodeMirror.fromTextArea(i[0],c),angular.isDefined(n[t.uiCodemirror])&&n.$watch(t.uiCodemirror,function(r){for(var e in r)r.hasOwnProperty(e)&&s.setOption(e,r[e])},!0),s.on("change",l(c.onChange));for(var r,u=0,f=o.length;u<f;++u)r=c["on"+o[u].charAt(0).toUpperCase()+o[u].slice(1)],void 0!==r&&"function"==typeof r&&s.on(o[u],r);a.$formatters.push(function(r){if(angular.isUndefined(r)||null===r)return"";if(angular.isObject(r)||angular.isArray(r))throw new Error("ui-codemirror cannot use an object or an array as a model");return r}),a.$render=function(){s.setValue(a.$viewValue)},a.$viewValue||(a.$setViewValue(i.text()),a.$render()),t.uiRefresh&&n.$watch(t.uiRefresh,function(r,o){r!==o&&e(function(){s.refresh()})}),angular.isFunction(c.onLoad)&&c.onLoad(s)},e(f)}}}]);
//# sourceMappingURL=ui-codemirror.min.js.map