{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///optimal-select.min.js","webpack:///webpack/bootstrap cfed6550717b8c09fd24","webpack:///./src/index.js","webpack:///./src/adapt.js","webpack:///./src/optimize.js","webpack:///./src/match.js","webpack:///./src/select.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","optimize","select","undefined","_select2","_select3","_optimize2","_optimize3","global","_toArray","arr","Array","isArray","from","adapt","element","options","document","context","parent","ElementPrototype","getPrototypeOf","getOwnPropertyDescriptor","enumerable","get","children","filter","node","type","attribs","attributesNames","keys","NamedNodeMap","reduce","attributes","attributeName","index","name","configurable","length","getAttribute","getElementsByTagName","tagName","HTMLCollection","traverseDescendants","childTags","descendant","push","getElementsByClassName","className","names","trim","replace","split","descendantClassName","class","every","indexOf","querySelectorAll","selectors","_this","_getInstructions","getInstructions","_getInstructions2","discover","ascendings","slice","total","step","contains","inclusive","done","reverse","map","selector","_selector$split","_selector$split2","_slicedToArray","pseudo","validate","instruction","test","substr","nodeClassName","join","getAncestor","_type$replace$split","_type$replace$split2","attributeKey","attributeValue","hasAttribute","_ret","NodeList","v","_typeof","_ret2","_ret3","_ret4","rule","match","kind","parseInt","validatePseudo","compareSet","nodeIndex","findIndex","child","matchedNode","nodes","handler","forEach","progress","Symbol","iterator","constructor","sliceIterator","i","_arr","_n","_d","_e","_s","_i","next","err","TypeError","arguments","globalModified","_adapt2","path","shortened","pop","current","prePart","postPart","pattern","matches","unshift","optimizePart","key","references","l","description","toLowerCase","sort","curr","partial","shift","_references","_description","_adapt","_options$root","_options$skip","skip","_options$ignore","ignore","skipCompare","entry","skipChecks","some","compare","ignoreClass","predicate","toString","RegExp","bind","ignoreAttribute","attribute","defaultPredicate","checkId","checkClassGlobal","checkAttributeGlobal","checkTagGlobal","checkClassLocal","checkAttributeLocal","checkTagLocal","checkClassChild","checkAttributeChild","checkTagChild","parentNode","checkClass","checkIgnore","checkChild","checkAttribute","defaultIgnore","checkTag","tag","check","getQuerySelector","input","getMultiSelector","getSingleSelector","nodeType","Error","_match2","optimized","elements","commonParentNode","commonClassName","commonAttribute","commonTagName","console","log","longer","shorter","classNames","_match","_optimize"],"mappings":"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","file":"optimal-select.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"OptimalSelect\"] = factory();\n\telse\n\t\troot[\"OptimalSelect\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"OptimalSelect\"] = factory();\n\telse\n\t\troot[\"OptimalSelect\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = exports.optimize = exports.select = undefined;\n\t\n\tvar _select2 = __webpack_require__(4);\n\t\n\tvar _select3 = _interopRequireDefault(_select2);\n\t\n\tvar _optimize2 = __webpack_require__(2);\n\t\n\tvar _optimize3 = _interopRequireDefault(_optimize2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.select = _select3.default;\n\texports.optimize = _optimize3.default;\n\texports.default = _select3.default;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\texports.default = adapt;\n\t\n\tfunction _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\t\n\t/**\n\t * # Universal\n\t *\n\t * Check and extend the environment for universal usage\n\t */\n\t\n\t/**\n\t * [adapt description]\n\t * @param  {[type]} element [description]\n\t * @param  {[type]} options [description]\n\t * @return {[type]}         [description]\n\t */\n\tfunction adapt(element, options) {\n\t\n\t  // detect environment setup\n\t  if (global.document) {\n\t    return false;\n\t  }\n\t\n\t  var context = options.context;\n\t\n\t\n\t  global.document = context || function () {\n\t    var root = element;\n\t    while (root.parent) {\n\t      root = root.parent;\n\t    }\n\t    return root;\n\t  }();\n\t\n\t  // https://github.com/fb55/domhandler/blob/master/index.js#L75\n\t  var ElementPrototype = Object.getPrototypeOf(global.document);\n\t\n\t  // alternative descriptor to access elements with filtering invalid elements (e.g. textnodes)\n\t  if (!Object.getOwnPropertyDescriptor(ElementPrototype, 'childTags')) {\n\t    Object.defineProperty(ElementPrototype, 'childTags', {\n\t      enumerable: true,\n\t      get: function get() {\n\t        return this.children.filter(function (node) {\n\t          // https://github.com/fb55/domelementtype/blob/master/index.js#L12\n\t          return node.type === 'tag' || node.type === 'script' || node.type === 'style';\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  if (!Object.getOwnPropertyDescriptor(ElementPrototype, 'attributes')) {\n\t    // https://developer.mozilla.org/en-US/docs/Web/API/Element/attributes\n\t    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap\n\t    Object.defineProperty(ElementPrototype, 'attributes', {\n\t      enumerable: true,\n\t      get: function get() {\n\t        var attribs = this.attribs;\n\t\n\t        var attributesNames = Object.keys(attribs);\n\t        var NamedNodeMap = attributesNames.reduce(function (attributes, attributeName, index) {\n\t          attributes[index] = {\n\t            name: attributeName,\n\t            value: attribs[attributeName]\n\t          };\n\t          return attributes;\n\t        }, {});\n\t        Object.defineProperty(NamedNodeMap, 'length', {\n\t          enumerable: false,\n\t          configurable: false,\n\t          value: attributesNames.length\n\t        });\n\t        return NamedNodeMap;\n\t      }\n\t    });\n\t  }\n\t\n\t  if (!ElementPrototype.getAttribute) {\n\t    // https://docs.webplatform.org/wiki/dom/Element/getAttribute\n\t    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute\n\t    ElementPrototype.getAttribute = function (name) {\n\t      return this.attribs[name] || null;\n\t    };\n\t  }\n\t\n\t  if (!ElementPrototype.getElementsByTagName) {\n\t    // https://docs.webplatform.org/wiki/dom/Document/getElementsByTagName\n\t    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName\n\t    ElementPrototype.getElementsByTagName = function (tagName) {\n\t      var HTMLCollection = [];\n\t      traverseDescendants(this.childTags, function (descendant) {\n\t        if (descendant.name === tagName || tagName === '*') {\n\t          HTMLCollection.push(descendant);\n\t        }\n\t      });\n\t      return HTMLCollection;\n\t    };\n\t  }\n\t\n\t  if (!ElementPrototype.getElementsByClassName) {\n\t    // https://docs.webplatform.org/wiki/dom/Document/getElementsByClassName\n\t    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByClassName\n\t    ElementPrototype.getElementsByClassName = function (className) {\n\t      var names = className.trim().replace(/\\s+/g, ' ').split(' ');\n\t      var HTMLCollection = [];\n\t      traverseDescendants([this], function (descendant) {\n\t        var descendantClassName = descendant.attribs.class;\n\t        if (descendantClassName && names.every(function (name) {\n\t          return descendantClassName.indexOf(name) > -1;\n\t        })) {\n\t          HTMLCollection.push(descendant);\n\t        }\n\t      });\n\t      return HTMLCollection;\n\t    };\n\t  }\n\t\n\t  if (!ElementPrototype.querySelectorAll) {\n\t    // https://docs.webplatform.org/wiki/css/selectors_api/querySelectorAll\n\t    // https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n\t    ElementPrototype.querySelectorAll = function (selectors) {\n\t      var _this = this;\n\t\n\t      selectors = selectors.replace(/(>)(\\S)/g, '$1 $2').trim(); // add space for '>' selector\n\t\n\t      // using right to left execution => https://github.com/fb55/css-select#how-does-it-work\n\t\n\t      var _getInstructions = getInstructions(selectors);\n\t\n\t      var _getInstructions2 = _toArray(_getInstructions);\n\t\n\t      var discover = _getInstructions2[0];\n\t\n\t      var ascendings = _getInstructions2.slice(1);\n\t\n\t      var total = ascendings.length;\n\t      return discover(this).filter(function (node) {\n\t        var step = 0;\n\t        while (step < total) {\n\t          node = ascendings[step](node, _this);\n\t          if (!node) {\n\t            // hierarchy doesn't match\n\t            return false;\n\t          }\n\t          step += 1;\n\t        }\n\t        return true;\n\t      });\n\t    };\n\t  }\n\t\n\t  if (!ElementPrototype.contains) {\n\t    // https://developer.mozilla.org/en-US/docs/Web/API/Node/contains\n\t    ElementPrototype.contains = function (element) {\n\t      var inclusive = false;\n\t      traverseDescendants([this], function (descendant, done) {\n\t        if (descendant === element) {\n\t          inclusive = true;\n\t          done();\n\t        }\n\t      });\n\t      return inclusive;\n\t    };\n\t  }\n\t\n\t  return true;\n\t}\n\t\n\t/**\n\t * [getInstructions description]\n\t * @param  {[type]} selectors [description]\n\t * @return {[type]}           [description]\n\t */\n\tfunction getInstructions(selectors) {\n\t  return selectors.split(' ').reverse().map(function (selector, step) {\n\t    var discover = step === 0;\n\t\n\t    var _selector$split = selector.split(':');\n\t\n\t    var _selector$split2 = _slicedToArray(_selector$split, 2);\n\t\n\t    var type = _selector$split2[0];\n\t    var pseudo = _selector$split2[1];\n\t\n\t\n\t    var validate = null;\n\t    var instruction = null;\n\t\n\t    switch (true) {\n\t\n\t      // child: '>'\n\t      case />/.test(type):\n\t        instruction = function checkParent(node) {\n\t          return function (validate) {\n\t            return validate(node.parent) && node.parent;\n\t          };\n\t        };\n\t        break;\n\t\n\t      // class: '.'\n\t      case /^\\./.test(type):\n\t        var names = type.substr(1).split('.');\n\t        validate = function validate(node) {\n\t          var nodeClassName = node.attribs.class;\n\t          return nodeClassName && names.every(function (name) {\n\t            return nodeClassName.indexOf(name) > -1;\n\t          });\n\t        };\n\t        instruction = function checkClass(node, root) {\n\t          if (discover) {\n\t            return node.getElementsByClassName(names.join(' '));\n\t          }\n\t          return typeof node === 'function' ? node(validate) : getAncestor(node, root, validate);\n\t        };\n\t        break;\n\t\n\t      // attribute: '[key=\"value\"]'\n\t      case /^\\[/.test(type):\n\t        var _type$replace$split = type.replace(/\\[|\\]|\"/g, '').split('=');\n\t\n\t        var _type$replace$split2 = _slicedToArray(_type$replace$split, 2);\n\t\n\t        var attributeKey = _type$replace$split2[0];\n\t        var attributeValue = _type$replace$split2[1];\n\t\n\t        validate = function validate(node) {\n\t          var hasAttribute = Object.keys(node.attribs).indexOf(attributeKey) > -1;\n\t          if (hasAttribute) {\n\t            // regard optional attributeValue\n\t            if (!attributeValue || node.attribs[attributeKey] === attributeValue) {\n\t              return true;\n\t            }\n\t          }\n\t          return false;\n\t        };\n\t        instruction = function checkAttribute(node, root) {\n\t          if (discover) {\n\t            var _ret = function () {\n\t              var NodeList = [];\n\t              traverseDescendants([node], function (descendant) {\n\t                if (validate(descendant)) {\n\t                  NodeList.push(descendant);\n\t                }\n\t              });\n\t              return {\n\t                v: NodeList\n\t              };\n\t            }();\n\t\n\t            if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n\t          }\n\t          return typeof node === 'function' ? node(validate) : getAncestor(node, root, validate);\n\t        };\n\t        break;\n\t\n\t      // id: '#'\n\t      case /^#/.test(type):\n\t        var id = type.substr(1);\n\t        validate = function validate(node) {\n\t          return node.attribs.id === id;\n\t        };\n\t        instruction = function checkId(node, root) {\n\t          if (discover) {\n\t            var _ret2 = function () {\n\t              var NodeList = [];\n\t              traverseDescendants([node], function (descendant, done) {\n\t                if (validate(descendant)) {\n\t                  NodeList.push(descendant);\n\t                  done();\n\t                }\n\t              });\n\t              return {\n\t                v: NodeList\n\t              };\n\t            }();\n\t\n\t            if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === \"object\") return _ret2.v;\n\t          }\n\t          return typeof node === 'function' ? node(validate) : getAncestor(node, root, validate);\n\t        };\n\t        break;\n\t\n\t      // universal: '*'\n\t      case /\\*/.test(type):\n\t        validate = function validate(node) {\n\t          return true;\n\t        };\n\t        instruction = function checkUniversal(node, root) {\n\t          if (discover) {\n\t            var _ret3 = function () {\n\t              var NodeList = [];\n\t              traverseDescendants([node], function (descendant) {\n\t                return NodeList.push(descendant);\n\t              });\n\t              return {\n\t                v: NodeList\n\t              };\n\t            }();\n\t\n\t            if ((typeof _ret3 === 'undefined' ? 'undefined' : _typeof(_ret3)) === \"object\") return _ret3.v;\n\t          }\n\t          return typeof node === 'function' ? node(validate) : getAncestor(node, root, validate);\n\t        };\n\t        break;\n\t\n\t      // tag: '...'\n\t      default:\n\t        validate = function validate(node) {\n\t          return node.name === type;\n\t        };\n\t        instruction = function checkTag(node, root) {\n\t          if (discover) {\n\t            var _ret4 = function () {\n\t              var NodeList = [];\n\t              traverseDescendants([node], function (descendant) {\n\t                if (validate(descendant)) {\n\t                  NodeList.push(descendant);\n\t                }\n\t              });\n\t              return {\n\t                v: NodeList\n\t              };\n\t            }();\n\t\n\t            if ((typeof _ret4 === 'undefined' ? 'undefined' : _typeof(_ret4)) === \"object\") return _ret4.v;\n\t          }\n\t          return typeof node === 'function' ? node(validate) : getAncestor(node, root, validate);\n\t        };\n\t    }\n\t\n\t    if (!pseudo) {\n\t      return instruction;\n\t    }\n\t\n\t    var rule = pseudo.match(/-(child|type)\\((\\d+)\\)$/);\n\t    var kind = rule[1];\n\t    var index = parseInt(rule[2], 10) - 1;\n\t\n\t    var validatePseudo = function validatePseudo(node) {\n\t      if (node) {\n\t        var compareSet = node.parent.childTags;\n\t        if (kind === 'type') {\n\t          compareSet = compareSet.filter(validate);\n\t        }\n\t        var nodeIndex = compareSet.findIndex(function (child) {\n\t          return child === node;\n\t        });\n\t        if (nodeIndex === index) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    };\n\t\n\t    return function enhanceInstruction(node) {\n\t      var match = instruction(node);\n\t      if (discover) {\n\t        return match.reduce(function (NodeList, matchedNode) {\n\t          if (validatePseudo(matchedNode)) {\n\t            NodeList.push(matchedNode);\n\t          }\n\t          return NodeList;\n\t        }, []);\n\t      }\n\t      return validatePseudo(match) && match;\n\t    };\n\t  });\n\t}\n\t\n\t/**\n\t * Recursive walki\n\t * @param  {[type]} nodes   [description]\n\t * @param  {[type]} handler [description]\n\t * @return {[type]}         [description]\n\t */\n\tfunction traverseDescendants(nodes, handler) {\n\t  nodes.forEach(function (node) {\n\t    var progress = true;\n\t    handler(node, function () {\n\t      return progress = false;\n\t    });\n\t    if (node.childTags && progress) {\n\t      traverseDescendants(node.childTags, handler);\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * [getAncestor description]\n\t * @param  {[type]} node     [description]\n\t * @param  {[type]} root     [description]\n\t * @param  {[type]} validate [description]\n\t * @return {[type]}          [description]\n\t */\n\tfunction getAncestor(node, root, validate) {\n\t  while (node.parent) {\n\t    node = node.parent;\n\t    if (validate(node)) {\n\t      return node;\n\t    }\n\t    if (node === root) {\n\t      break;\n\t    }\n\t  }\n\t  return null;\n\t}\n\tmodule.exports = exports['default'];\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = optimize;\n\t\n\tvar _adapt = __webpack_require__(1);\n\t\n\tvar _adapt2 = _interopRequireDefault(_adapt);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Apply different optimization techniques\n\t * @param  {string}      selector - [description]\n\t * @param  {HTMLElement} element  - [description]\n\t * @return {string}               - [description]\n\t */\n\tfunction optimize(selector, element) {\n\t  var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\t\n\t\n\t  var globalModified = (0, _adapt2.default)(element, options);\n\t\n\t  // chunk parts outside of quotes (http://stackoverflow.com/a/25663729)\n\t  var path = selector.replace(/> /g, '>').split(/\\s+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n\t\n\t  if (path.length < 3) {\n\t    return selector;\n\t  }\n\t\n\t  var shortened = [path.pop()];\n\t  while (path.length > 1) {\n\t    var current = path.pop();\n\t    var prePart = path.join(' ');\n\t    var postPart = shortened.join(' ');\n\t\n\t    var pattern = prePart + ' ' + postPart;\n\t    var matches = document.querySelectorAll(pattern);\n\t    if (matches.length !== 1) {\n\t      shortened.unshift(optimizePart(prePart, current, postPart, element));\n\t    }\n\t  }\n\t  shortened.unshift(path[0]);\n\t  path = shortened;\n\t\n\t  // optimize start + end\n\t  path[0] = optimizePart('', path[0], path.slice(1).join(' '), element);\n\t  path[path.length - 1] = optimizePart(path.slice(0, -1).join(' '), path[path.length - 1], '', element);\n\t\n\t  if (globalModified) {\n\t    delete global.document;\n\t  }\n\t\n\t  return path.join(' ').replace(/>/g, '> ').trim();\n\t}\n\t\n\t/**\n\t * Improve a chunk of the selector\n\t * @param  {string}      prePart  - [description]\n\t * @param  {string}      current  - [description]\n\t * @param  {string}      postPart - [description]\n\t * @param  {HTMLElement} element  - [description]\n\t * @return {string}               - [description]\n\t */\n\t/**\n\t * # Optimize\n\t *\n\t * 1.) Improve efficiency through shorter selectors by removing redundancy\n\t * 2.) Improve robustness through selector transformation\n\t */\n\t\n\tfunction optimizePart(prePart, current, postPart, element) {\n\t  if (prePart.length) prePart = prePart + ' ';\n\t  if (postPart.length) postPart = ' ' + postPart;\n\t\n\t  // robustness: attribute without value (generalization)\n\t  if (/\\[*\\]/.test(current)) {\n\t    var key = current.replace(/=.*$/, ']');\n\t    var pattern = '' + prePart + key + postPart;\n\t    var matches = document.querySelectorAll(pattern);\n\t    if (matches.length === 1 && matches[0] === element) {\n\t      current = key;\n\t    } else {\n\t      // robustness: replace specific key-value with tag (heuristic)\n\t      var references = document.querySelectorAll('' + prePart + key);\n\t      for (var i = 0, l = references.length; i < l; i++) {\n\t        if (references[i].contains(element)) {\n\t          var description = references[i].tagName.toLowerCase();\n\t          var pattern = '' + prePart + description + postPart;\n\t          var matches = document.querySelectorAll(pattern);\n\t          if (matches.length === 1 && matches[0] === element) {\n\t            current = description;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // robustness: descendant instead child (heuristic)\n\t  if (/>/.test(current)) {\n\t    var descendant = current.replace(/>/, '');\n\t    var pattern = '' + prePart + descendant + postPart;\n\t    var matches = document.querySelectorAll(pattern);\n\t    if (matches.length === 1 && matches[0] === element) {\n\t      current = descendant;\n\t    }\n\t  }\n\t\n\t  // robustness: 'nth-of-type' instead 'nth-child' (heuristic)\n\t  if (/:nth-child/.test(current)) {\n\t    // TODO: consider complete coverage of 'nth-of-type' replacement\n\t    var type = current.replace(/nth-child/g, 'nth-of-type');\n\t    var pattern = '' + prePart + type + postPart;\n\t    var matches = document.querySelectorAll(pattern);\n\t    if (matches.length === 1 && matches[0] === element) {\n\t      current = type;\n\t    }\n\t  }\n\t\n\t  // efficiency: combinations of classname (partial permutations)\n\t  if (/\\.\\S+\\.\\S+/.test(current)) {\n\t    var names = current.trim().split('.').slice(1).map(function (name) {\n\t      return '.' + name;\n\t    }).sort(function (curr, next) {\n\t      return curr.length - next.length;\n\t    });\n\t    while (names.length) {\n\t      var partial = current.replace(names.shift(), '');\n\t      var pattern = '' + prePart + partial + postPart;\n\t      var matches = document.querySelectorAll(pattern);\n\t      if (matches.length === 1 && matches[0] === element) {\n\t        current = partial;\n\t      }\n\t    }\n\t    // robustness: degrade complex classname (heuristic)\n\t    if (current && current.match(/\\./g).length > 2) {\n\t      var _references = document.querySelectorAll('' + prePart + current);\n\t      for (var i = 0, l = _references.length; i < l; i++) {\n\t        if (_references[i].contains(element)) {\n\t          // TODO:\n\t          // - check using attributes + regard excludes\n\t          var _description = _references[i].tagName.toLowerCase();\n\t          var pattern = '' + prePart + _description + postPart;\n\t          var matches = document.querySelectorAll(pattern);\n\t          if (matches.length === 1 && matches[0] === element) {\n\t            current = _description;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return current;\n\t}\n\tmodule.exports = exports['default'];\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = match;\n\t/**\n\t * # Match\n\t *\n\t * Retrieves selector\n\t */\n\t\n\tvar defaultIgnore = {\n\t  attribute: function attribute(attributeName) {\n\t    return ['style', 'data-reactid', 'data-react-checksum'].indexOf(attributeName) > -1;\n\t  }\n\t};\n\t\n\t/**\n\t * Get the path of the element\n\t * @param  {HTMLElement} node    - [description]\n\t * @param  {Object}      options - [description]\n\t * @return {String}              - [description]\n\t */\n\tfunction match(node, options) {\n\t  var path = [];\n\t  var element = node;\n\t  var length = path.length;\n\t\n\t  var _options$root = options.root;\n\t  var root = _options$root === undefined ? document : _options$root;\n\t  var _options$skip = options.skip;\n\t  var skip = _options$skip === undefined ? null : _options$skip;\n\t  var _options$ignore = options.ignore;\n\t  var ignore = _options$ignore === undefined ? {} : _options$ignore;\n\t\n\t\n\t  var skipCompare = skip && (Array.isArray(skip) ? skip : [skip]).map(function (entry) {\n\t    if (typeof entry !== 'function') {\n\t      return function (element) {\n\t        return element === entry;\n\t      };\n\t    }\n\t    return entry;\n\t  });\n\t\n\t  var skipChecks = function skipChecks(element) {\n\t    return skip && skipCompare.some(function (compare) {\n\t      return compare(element);\n\t    });\n\t  };\n\t\n\t  var ignoreClass = false;\n\t\n\t  Object.keys(ignore).forEach(function (type) {\n\t    if (type === 'class') {\n\t      ignoreClass = true;\n\t    }\n\t    var predicate = ignore[type];\n\t    if (typeof predicate === 'function') return;\n\t    if (typeof predicate === 'number') {\n\t      predicate = predicate.toString();\n\t    }\n\t    if (typeof predicate === 'string') {\n\t      predicate = new RegExp(predicate);\n\t    }\n\t    // check class-/attributename for regex\n\t    ignore[type] = predicate.test.bind(predicate);\n\t  });\n\t\n\t  if (ignoreClass) {\n\t    (function () {\n\t      var ignoreAttribute = ignore.attribute;\n\t      ignore.attribute = function (name, value, defaultPredicate) {\n\t        return ignore.class(value) || ignoreAttribute && ignoreAttribute(name, value, defaultPredicate);\n\t      };\n\t    })();\n\t  }\n\t\n\t  while (element !== root) {\n\t\n\t    if (skipChecks(element) !== true) {\n\t      // global\n\t      if (checkId(element, path, ignore)) break;\n\t      if (checkClassGlobal(element, path, ignore, root)) break;\n\t      if (checkAttributeGlobal(element, path, ignore, root)) break;\n\t      if (checkTagGlobal(element, path, ignore, root)) break;\n\t\n\t      // local\n\t      checkClassLocal(element, path, ignore);\n\t\n\t      // define only one selector each iteration\n\t      if (path.length === length) {\n\t        checkAttributeLocal(element, path, ignore);\n\t      }\n\t      if (path.length === length) {\n\t        checkTagLocal(element, path, ignore);\n\t      }\n\t\n\t      if (path.length === length) {\n\t        checkClassChild(element, path, ignore);\n\t      }\n\t      if (path.length === length) {\n\t        checkAttributeChild(element, path, ignore);\n\t      }\n\t      if (path.length === length) {\n\t        checkTagChild(element, path, ignore);\n\t      }\n\t    }\n\t\n\t    element = element.parentNode;\n\t    length = path.length;\n\t  }\n\t\n\t  if (element === root) {\n\t    path.unshift('*');\n\t  }\n\t\n\t  return path.join(' ');\n\t}\n\t\n\t/**\n\t * [checkClassGlobal description]\n\t * @param  {HTMLElement} element - [description]\n\t * @param  {Array}       path    - [description]\n\t * @param  {Object}      ignore  - [description]\n\t * @return {Boolean}             - [description]\n\t */\n\tfunction checkClassGlobal(element, path, ignore, root) {\n\t  return checkClass(element, path, ignore, root);\n\t}\n\t\n\t/**\n\t * [checkClassLocal description]\n\t * @param  {HTMLElement} element - [description]\n\t * @param  {Array}       path    - [description]\n\t * @param  {Object}      ignore  - [description]\n\t * @return {Boolean}             - [description]\n\t */\n\tfunction checkClassLocal(element, path, ignore) {\n\t  return checkClass(element, path, ignore, element.parentNode);\n\t}\n\t\n\t/**\n\t * [checkClassChild description]\n\t * @param  {HTMLElement} element - [description]\n\t * @param  {Array}       path    - [description]\n\t * @param  {Object}      ignore  - [description]\n\t * @return {Boolean}             - [description]\n\t */\n\tfunction checkClassChild(element, path, ignore) {\n\t  var className = element.getAttribute('class');\n\t  if (checkIgnore(ignore.class, className)) {\n\t    return false;\n\t  }\n\t  return checkChild(element, path, '.' + className.trim().replace(/\\s+/g, '.'));\n\t}\n\t\n\t/**\n\t * [checkAttributeGlobal description]\n\t * @param  {HTMLElement} element - [description]\n\t * @param  {Array}       path    - [description]\n\t * @param  {Object}      ignore  - [description]\n\t * @return {Boolean}             - [description]\n\t */\n\tfunction checkAttributeGlobal(element, path, ignore, root) {\n\t  return checkAttribute(element, path, ignore, root);\n\t}\n\t\n\t/**\n\t * [checkAttributeLocal description]\n\t * @param  {HTMLElement} element - [description]\n\t * @param  {Array}       path    - [description]\n\t * @param  {Object}      ignore  - [description]\n\t * @return {Boolean}             - [description]\n\t */\n\tfunction checkAttributeLocal(element, path, ignore) {\n\t  return checkAttribute(element, path, ignore, element.parentNode);\n\t}\n\t\n\t/**\n\t * [checkAttributeChild description]\n\t * @param  {HTMLElement} element - [description]\n\t * @param  {Array}       path    - [description]\n\t * @param  {Object}      ignore  - [description]\n\t * @return {Boolean}             - [description]\n\t */\n\tfunction checkAttributeChild(element, path, ignore) {\n\t  var attributes = element.attributes;\n\t  return Object.keys(attributes).some(function (key) {\n\t    var attribute = attributes[key];\n\t    var attributeName = attribute.name;\n\t    var attributeValue = attribute.value;\n\t    if (checkIgnore(ignore.attribute, attributeName, attributeValue, defaultIgnore.attribute)) {\n\t      return false;\n\t    }\n\t    var pattern = '[' + attributeName + '=\"' + attributeValue + '\"]';\n\t    return checkChild(element, path, pattern);\n\t  });\n\t}\n\t\n\t/**\n\t * [checkTagGlobal description]\n\t * @param  {HTMLElement} element - [description]\n\t * @param  {Array}       path    - [description]\n\t * @param  {Object}      ignore  - [description]\n\t * @return {Boolean}             - [description]\n\t */\n\tfunction checkTagGlobal(element, path, ignore, root) {\n\t  return checkTag(element, path, ignore, root);\n\t}\n\t\n\t/**\n\t * [checkTagLocal description]\n\t * @param  {HTMLElement} element - [description]\n\t * @param  {Array}       path    - [description]\n\t * @param  {Object}      ignore  - [description]\n\t * @return {Boolean}             - [description]\n\t */\n\tfunction checkTagLocal(element, path, ignore) {\n\t  return checkTag(element, path, ignore, element.parentNode);\n\t}\n\t\n\t/**\n\t * [checkTabChildren description]\n\t * @param  {HTMLElement} element - [description]\n\t * @param  {Array}       path    - [description]\n\t * @param  {Object}      ignore  - [description]\n\t * @return {Boolean}             - [description]\n\t */\n\tfunction checkTagChild(element, path, ignore) {\n\t  var tagName = element.tagName.toLowerCase();\n\t  if (checkIgnore(ignore.tag, tagName)) {\n\t    return false;\n\t  }\n\t  return checkChild(element, path, tagName);\n\t}\n\t\n\t/**\n\t * [checkId description]\n\t * @param  {HTMLElement} element - [description]\n\t * @param  {Array}       path    - [description]\n\t * @param  {Object}      ignore  - [description]\n\t * @return {Boolean}             - [description]\n\t */\n\tfunction checkId(element, path, ignore) {\n\t  var id = element.getAttribute('id');\n\t  if (checkIgnore(ignore.id, id)) {\n\t    return false;\n\t  }\n\t  path.unshift('#' + id);\n\t  return true;\n\t}\n\t\n\t/**\n\t * [checkClass description]\n\t * @param  {HTMLElement} element - [description]\n\t * @param  {Array}       path    - [description]\n\t * @param  {Object}      ignore  - [description]\n\t * @param  {HTMLElement} parent  - [description]\n\t * @return {Boolean}             - [description]\n\t */\n\tfunction checkClass(element, path, ignore, parent) {\n\t  var className = element.getAttribute('class');\n\t  if (checkIgnore(ignore.class, className)) {\n\t    return false;\n\t  }\n\t  var matches = parent.getElementsByClassName(className);\n\t  if (matches.length === 1) {\n\t    path.unshift('.' + className.trim().replace(/\\s+/g, '.'));\n\t    return true;\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * [checkAttribute description]\n\t * @param  {HTMLElement} element - [description]\n\t * @param  {Array}       path    - [description]\n\t * @param  {Object}      ignore  - [description]\n\t * @param  {HTMLElement} parent  - [description]\n\t * @return {Boolean}             - [description]\n\t */\n\tfunction checkAttribute(element, path, ignore, parent) {\n\t  var attributes = element.attributes;\n\t  return Object.keys(attributes).some(function (key) {\n\t    var attribute = attributes[key];\n\t    var attributeName = attribute.name;\n\t    var attributeValue = attribute.value;\n\t    if (checkIgnore(ignore.attribute, attributeName, attributeValue, defaultIgnore.attribute)) {\n\t      return false;\n\t    }\n\t    var pattern = '[' + attributeName + '=\"' + attributeValue + '\"]';\n\t    var matches = parent.querySelectorAll(pattern);\n\t    if (matches.length === 1) {\n\t      path.unshift(pattern);\n\t      return true;\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * [checkTag description]\n\t * @param  {HTMLElement} element - [description]\n\t * @param  {Array}       path    - [description]\n\t * @param  {HTMLElement} parent  - [description]\n\t * @param  {Object}      ignore  - [description]\n\t * @return {Boolean}             - [description]\n\t */\n\tfunction checkTag(element, path, ignore, parent) {\n\t  var tagName = element.tagName.toLowerCase();\n\t  if (checkIgnore(ignore.tag, tagName)) {\n\t    return false;\n\t  }\n\t  var matches = parent.getElementsByTagName(tagName);\n\t  if (matches.length === 1) {\n\t    path.unshift(tagName);\n\t    return true;\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * [checkChild description]\n\t * Note: childTags is a custom property to use a view filter for tags on for virutal elements\n\t * @param  {HTMLElement} element  - [description]\n\t * @param  {Array}       path     - [description]\n\t * @param  {String}      selector - [description]\n\t * @return {Boolean}              - [description]\n\t */\n\tfunction checkChild(element, path, selector) {\n\t  var parent = element.parentNode;\n\t  var children = parent.childTags || parent.children;\n\t  for (var i = 0, l = children.length; i < l; i++) {\n\t    if (children[i] === element) {\n\t      path.unshift('> ' + selector + ':nth-child(' + (i + 1) + ')');\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * [checkIgnore description]\n\t * @param  {Function} predicate        [description]\n\t * @param  {string}   name             [description]\n\t * @param  {string}   value            [description]\n\t * @param  {Function} defaultPredicate [description]\n\t * @return {boolean}                   [description]\n\t */\n\tfunction checkIgnore(predicate, name, value, defaultPredicate) {\n\t  if (!name) {\n\t    return true;\n\t  }\n\t  var check = predicate || defaultPredicate;\n\t  if (!check) {\n\t    return false;\n\t  }\n\t  return check(name, value || name, defaultPredicate);\n\t}\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }; /**\n\t                                                                                                                                                                                                                                                   * # Select\n\t                                                                                                                                                                                                                                                   *\n\t                                                                                                                                                                                                                                                   * Construct a unique CSS queryselector to access the selected DOM element(s).\n\t                                                                                                                                                                                                                                                   * Applies different matching and optimization strategies for efficiency.\n\t                                                                                                                                                                                                                                                   */\n\t\n\texports.default = getQuerySelector;\n\texports.getSingleSelector = getSingleSelector;\n\texports.getMultiSelector = getMultiSelector;\n\t\n\tvar _adapt = __webpack_require__(1);\n\t\n\tvar _adapt2 = _interopRequireDefault(_adapt);\n\t\n\tvar _match = __webpack_require__(3);\n\t\n\tvar _match2 = _interopRequireDefault(_match);\n\t\n\tvar _optimize = __webpack_require__(2);\n\t\n\tvar _optimize2 = _interopRequireDefault(_optimize);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Choose action depending on the input (single/multi)\n\t * @param  {HTMLElement|Array} input   - [description]\n\t * @param  {Object}            options - [description]\n\t * @return {string}                    - [description]\n\t */\n\tfunction getQuerySelector(input) {\n\t  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t  if (Array.isArray(input)) {\n\t    return getMultiSelector(input, options);\n\t  }\n\t  return getSingleSelector(input, options);\n\t}\n\t\n\t/**\n\t * Get a selector for the provided element\n\t * @param  {HTMLElement} element - [description]\n\t * @param  {Object}      options - [description]\n\t * @return {String}              - [description]\n\t */\n\tfunction getSingleSelector(element, options) {\n\t\n\t  if (element.nodeType === 3) {\n\t    return getSingleSelector(element.parentNode);\n\t  }\n\t  if (element.nodeType !== 1) {\n\t    throw new Error('Invalid input - only HTMLElements or representations of them are supported! (not \"' + (typeof element === 'undefined' ? 'undefined' : _typeof(element)) + '\")');\n\t  }\n\t\n\t  var globalModified = (0, _adapt2.default)(element, options);\n\t\n\t  var selector = (0, _match2.default)(element, options);\n\t  var optimized = (0, _optimize2.default)(selector, element, options);\n\t\n\t  // debug\n\t  // console.log(`\n\t  //   selector: ${selector}\n\t  //   optimized:${optimized}\n\t  // `)\n\t\n\t  if (globalModified) {\n\t    delete global.document;\n\t  }\n\t\n\t  return optimized;\n\t}\n\t\n\t/**\n\t * Get a selector to match multiple children from a parent\n\t * @param  {Array}  elements - [description]\n\t * @param  {Object} options  - [description]\n\t * @return {string}          - [description]\n\t */\n\tfunction getMultiSelector(elements, options) {\n\t  var commonParentNode = null;\n\t  var commonClassName = null;\n\t  var commonAttribute = null;\n\t  var commonTagName = null;\n\t\n\t  for (var i = 0, l = elements.length; i < l; i++) {\n\t    var element = elements[i];\n\t    if (!commonParentNode) {\n\t      // 1st entry\n\t      commonParentNode = element.parentNode;\n\t      commonClassName = element.className;\n\t      // commonAttribute = element.attributes\n\t      commonTagName = element.tagName;\n\t    } else if (commonParentNode !== element.parentNode) {\n\t      return console.log('Can\\'t be efficiently mapped. It probably best to use multiple single selectors instead!');\n\t    }\n\t    if (element.className !== commonClassName) {\n\t      var classNames = [];\n\t      var longer, shorter;\n\t      if (element.className.length > commonClassName.length) {\n\t        longer = element.className;\n\t        shorter = commonClassName;\n\t      } else {\n\t        longer = commonClassName;\n\t        shorter = element.className;\n\t      }\n\t      shorter.split(' ').forEach(function (name) {\n\t        if (longer.indexOf(name) > -1) {\n\t          classNames.push(name);\n\t        }\n\t      });\n\t      commonClassName = classNames.join(' ');\n\t    }\n\t    // TODO:\n\t    // - check attributes\n\t    // if (element.attributes !== commonAttribute) {\n\t    //\n\t    // }\n\t    if (element.tagName !== commonTagName) {\n\t      commonTagName = null;\n\t    }\n\t  }\n\t\n\t  var selector = getSingleSelector(commonParentNode, options);\n\t  console.log(selector, commonClassName, commonAttribute, commonTagName);\n\t\n\t  if (commonClassName) {\n\t    return selector + ' > .' + commonClassName.replace(/ /g, '.');\n\t  }\n\t  // if (commonAttribute) {\n\t  //\n\t  // }\n\t  if (commonTagName) {\n\t    return selector + ' > ' + commonTagName.toLowerCase();\n\t  }\n\t  return selector + ' > *';\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** optimal-select.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap cfed6550717b8c09fd24\n **/","export select from './select'\nexport optimize from './optimize'\n\nexport default from './select'\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","/**\n * # Universal\n *\n * Check and extend the environment for universal usage\n */\n\n/**\n * [adapt description]\n * @param  {[type]} element [description]\n * @param  {[type]} options [description]\n * @return {[type]}         [description]\n */\nexport default function adapt (element, options) {\n\n  // detect environment setup\n  if (global.document) {\n    return false\n  }\n\n  const { context } = options\n\n  global.document = context || (() => {\n    var root = element\n    while (root.parent) {\n      root = root.parent\n    }\n    return root\n  })()\n\n  // https://github.com/fb55/domhandler/blob/master/index.js#L75\n  const ElementPrototype = Object.getPrototypeOf(global.document)\n\n  // alternative descriptor to access elements with filtering invalid elements (e.g. textnodes)\n  if (!Object.getOwnPropertyDescriptor(ElementPrototype, 'childTags')) {\n    Object.defineProperty(ElementPrototype, 'childTags', {\n      enumerable: true,\n      get () {\n        return this.children.filter((node) => {\n          // https://github.com/fb55/domelementtype/blob/master/index.js#L12\n          return node.type === 'tag' || node.type === 'script' || node.type === 'style'\n        })\n      }\n    })\n  }\n\n  if (!Object.getOwnPropertyDescriptor(ElementPrototype, 'attributes')) {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/attributes\n    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap\n    Object.defineProperty(ElementPrototype, 'attributes', {\n      enumerable: true,\n      get () {\n        const { attribs } = this\n        const attributesNames = Object.keys(attribs)\n        const NamedNodeMap = attributesNames.reduce((attributes, attributeName, index) => {\n          attributes[index] = {\n            name: attributeName,\n            value: attribs[attributeName]\n          }\n          return attributes\n        }, { })\n        Object.defineProperty(NamedNodeMap, 'length', {\n          enumerable: false,\n          configurable: false,\n          value: attributesNames.length\n        })\n        return NamedNodeMap\n      }\n    })\n  }\n\n  if (!ElementPrototype.getAttribute) {\n    // https://docs.webplatform.org/wiki/dom/Element/getAttribute\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute\n    ElementPrototype.getAttribute = function (name) {\n      return this.attribs[name] || null\n    }\n  }\n\n  if (!ElementPrototype.getElementsByTagName) {\n    // https://docs.webplatform.org/wiki/dom/Document/getElementsByTagName\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName\n    ElementPrototype.getElementsByTagName = function (tagName) {\n      const HTMLCollection = []\n      traverseDescendants(this.childTags, (descendant) => {\n        if (descendant.name === tagName || tagName === '*') {\n          HTMLCollection.push(descendant)\n        }\n      })\n      return HTMLCollection\n    }\n  }\n\n  if (!ElementPrototype.getElementsByClassName) {\n    // https://docs.webplatform.org/wiki/dom/Document/getElementsByClassName\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByClassName\n    ElementPrototype.getElementsByClassName = function (className) {\n      const names = className.trim().replace(/\\s+/g, ' ').split(' ')\n      const HTMLCollection = []\n      traverseDescendants([this], (descendant) => {\n        const descendantClassName = descendant.attribs.class\n        if (descendantClassName && names.every((name) => descendantClassName.indexOf(name) > -1)) {\n          HTMLCollection.push(descendant)\n        }\n      })\n      return HTMLCollection\n    }\n  }\n\n  if (!ElementPrototype.querySelectorAll) {\n    // https://docs.webplatform.org/wiki/css/selectors_api/querySelectorAll\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n    ElementPrototype.querySelectorAll = function (selectors) {\n      selectors = selectors.replace(/(>)(\\S)/g, '$1 $2').trim() // add space for '>' selector\n\n      // using right to left execution => https://github.com/fb55/css-select#how-does-it-work\n      const [discover, ...ascendings] = getInstructions(selectors)\n      const total = ascendings.length\n      return discover(this).filter((node) => {\n        var step = 0\n        while (step < total) {\n          node = ascendings[step](node, this)\n          if (!node) { // hierarchy doesn't match\n            return false\n          }\n          step += 1\n        }\n        return true\n      })\n    }\n  }\n\n  if (!ElementPrototype.contains) {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Node/contains\n    ElementPrototype.contains = function (element) {\n      var inclusive = false\n      traverseDescendants([this], (descendant, done) => {\n        if (descendant === element) {\n          inclusive = true\n          done()\n        }\n      })\n      return inclusive\n    }\n  }\n\n  return true\n}\n\n/**\n * [getInstructions description]\n * @param  {[type]} selectors [description]\n * @return {[type]}           [description]\n */\nfunction getInstructions (selectors) {\n  return selectors.split(' ').reverse().map((selector, step) => {\n    const discover = step === 0\n    const [type, pseudo] = selector.split(':')\n\n    var validate = null\n    var instruction = null\n\n    switch (true) {\n\n      // child: '>'\n      case />/.test(type):\n        instruction = function checkParent (node) {\n          return (validate) => validate(node.parent) && node.parent\n        }\n        break\n\n      // class: '.'\n      case /^\\./.test(type):\n        const names = type.substr(1).split('.')\n        validate = (node) => {\n          const nodeClassName = node.attribs.class\n          return nodeClassName && names.every((name) => nodeClassName.indexOf(name) > -1)\n        }\n        instruction = function checkClass (node, root) {\n          if (discover) {\n            return node.getElementsByClassName(names.join(' '))\n          }\n          return (typeof node === 'function') ? node(validate) : getAncestor(node, root, validate)\n        }\n        break\n\n      // attribute: '[key=\"value\"]'\n      case /^\\[/.test(type):\n        const [attributeKey, attributeValue] = type.replace(/\\[|\\]|\"/g, '').split('=')\n        validate = (node) => {\n          const hasAttribute = Object.keys(node.attribs).indexOf(attributeKey) > -1\n          if (hasAttribute) { // regard optional attributeValue\n            if (!attributeValue || (node.attribs[attributeKey] === attributeValue)) {\n              return true\n            }\n          }\n          return false\n        }\n        instruction = function checkAttribute (node, root) {\n          if (discover) {\n            const NodeList = []\n            traverseDescendants([node], (descendant) => {\n              if (validate(descendant)) {\n                NodeList.push(descendant)\n              }\n            })\n            return NodeList\n          }\n          return (typeof node === 'function') ? node(validate) : getAncestor(node, root, validate)\n        }\n        break\n\n      // id: '#'\n      case /^#/.test(type):\n        const id = type.substr(1)\n        validate = (node) => {\n          return node.attribs.id === id\n        }\n        instruction = function checkId (node, root) {\n          if (discover) {\n            const NodeList = []\n            traverseDescendants([node], (descendant, done) => {\n              if (validate(descendant)) {\n                NodeList.push(descendant)\n                done()\n              }\n            })\n            return NodeList\n          }\n          return (typeof node === 'function') ? node(validate) : getAncestor(node, root, validate)\n        }\n        break\n\n      // universal: '*'\n      case /\\*/.test(type):\n        validate = (node) => true\n        instruction = function checkUniversal (node, root) {\n          if (discover) {\n            const NodeList = []\n            traverseDescendants([node], (descendant) => NodeList.push(descendant))\n            return NodeList\n          }\n          return (typeof node === 'function') ? node(validate) : getAncestor(node, root, validate)\n        }\n        break\n\n      // tag: '...'\n      default:\n        validate = (node) => {\n          return node.name === type\n        }\n        instruction = function checkTag (node, root) {\n          if (discover) {\n            const NodeList = []\n            traverseDescendants([node], (descendant) => {\n              if (validate(descendant)) {\n                NodeList.push(descendant)\n              }\n            })\n            return NodeList\n          }\n          return (typeof node === 'function') ? node(validate) : getAncestor(node, root, validate)\n        }\n    }\n\n    if (!pseudo) {\n      return instruction\n    }\n\n    const rule = pseudo.match(/-(child|type)\\((\\d+)\\)$/)\n    const kind = rule[1]\n    const index = parseInt(rule[2], 10) - 1\n\n    const validatePseudo = (node) => {\n      if (node) {\n        var compareSet = node.parent.childTags\n        if (kind === 'type') {\n          compareSet = compareSet.filter(validate)\n        }\n        const nodeIndex = compareSet.findIndex((child) => child === node)\n        if (nodeIndex === index) {\n          return true\n        }\n      }\n      return false\n    }\n\n    return function enhanceInstruction (node) {\n      const match = instruction(node)\n      if (discover) {\n        return match.reduce((NodeList, matchedNode) => {\n          if (validatePseudo(matchedNode)) {\n            NodeList.push(matchedNode)\n          }\n          return NodeList\n        }, [])\n      }\n      return validatePseudo(match) && match\n    }\n  })\n}\n\n/**\n * Recursive walki\n * @param  {[type]} nodes   [description]\n * @param  {[type]} handler [description]\n * @return {[type]}         [description]\n */\nfunction traverseDescendants (nodes, handler) {\n  nodes.forEach((node) => {\n    var progress = true\n    handler(node, () => progress = false)\n    if (node.childTags && progress) {\n      traverseDescendants(node.childTags, handler)\n    }\n  })\n}\n\n/**\n * [getAncestor description]\n * @param  {[type]} node     [description]\n * @param  {[type]} root     [description]\n * @param  {[type]} validate [description]\n * @return {[type]}          [description]\n */\nfunction getAncestor (node, root, validate) {\n  while (node.parent) {\n    node = node.parent\n    if (validate(node)) {\n      return node\n    }\n    if (node === root) {\n      break\n    }\n  }\n  return null\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/adapt.js\n **/","/**\n * # Optimize\n *\n * 1.) Improve efficiency through shorter selectors by removing redundancy\n * 2.) Improve robustness through selector transformation\n */\n\nimport adapt from './adapt'\n\n/**\n * Apply different optimization techniques\n * @param  {string}      selector - [description]\n * @param  {HTMLElement} element  - [description]\n * @return {string}               - [description]\n */\nexport default function optimize (selector, element, options = {}) {\n\n  const globalModified = adapt(element, options)\n\n  // chunk parts outside of quotes (http://stackoverflow.com/a/25663729)\n  var path = selector.replace(/> /g, '>').split(/\\s+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/)\n\n  if (path.length < 3) {\n    return selector\n  }\n\n  const shortened = [path.pop()]\n  while (path.length > 1)  {\n    const current = path.pop()\n    const prePart = path.join(' ')\n    const postPart = shortened.join(' ')\n\n    const pattern = `${prePart} ${postPart}`\n    const matches = document.querySelectorAll(pattern)\n    if (matches.length !== 1) {\n      shortened.unshift(optimizePart(prePart, current, postPart, element))\n    }\n  }\n  shortened.unshift(path[0])\n  path = shortened\n\n  // optimize start + end\n  path[0] = optimizePart('', path[0], path.slice(1).join(' '), element)\n  path[path.length-1] = optimizePart(path.slice(0, -1).join(' '), path[path.length-1], '', element)\n\n  if (globalModified) {\n    delete global.document\n  }\n\n  return path.join(' ').replace(/>/g, '> ').trim()\n}\n\n/**\n * Improve a chunk of the selector\n * @param  {string}      prePart  - [description]\n * @param  {string}      current  - [description]\n * @param  {string}      postPart - [description]\n * @param  {HTMLElement} element  - [description]\n * @return {string}               - [description]\n */\nfunction optimizePart (prePart, current, postPart, element) {\n  if (prePart.length) prePart = `${prePart} `\n  if (postPart.length) postPart = ` ${postPart}`\n\n  // robustness: attribute without value (generalization)\n  if (/\\[*\\]/.test(current)) {\n    const key = current.replace(/=.*$/, ']')\n    var pattern = `${prePart}${key}${postPart}`\n    var matches = document.querySelectorAll(pattern)\n    if (matches.length === 1 && matches[0] === element) {\n      current = key\n    } else {\n      // robustness: replace specific key-value with tag (heuristic)\n      const references = document.querySelectorAll(`${prePart}${key}`)\n      for (var i = 0, l = references.length; i < l; i++) {\n        if (references[i].contains(element)) {\n          const description = references[i].tagName.toLowerCase()\n          var pattern = `${prePart}${description}${postPart}`\n          var matches = document.querySelectorAll(pattern)\n          if (matches.length === 1 && matches[0] === element) {\n            current = description\n          }\n          break\n        }\n      }\n    }\n  }\n\n  // robustness: descendant instead child (heuristic)\n  if (/>/.test(current)) {\n    const descendant = current.replace(/>/, '')\n    var pattern = `${prePart}${descendant}${postPart}`\n    var matches = document.querySelectorAll(pattern)\n    if (matches.length === 1 && matches[0] === element) {\n      current = descendant\n    }\n  }\n\n  // robustness: 'nth-of-type' instead 'nth-child' (heuristic)\n  if (/:nth-child/.test(current)) {\n    // TODO: consider complete coverage of 'nth-of-type' replacement\n    const type = current.replace(/nth-child/g, 'nth-of-type')\n    var pattern = `${prePart}${type}${postPart}`\n    var matches = document.querySelectorAll(pattern)\n    if (matches.length === 1 && matches[0] === element) {\n      current = type\n    }\n  }\n\n  // efficiency: combinations of classname (partial permutations)\n  if (/\\.\\S+\\.\\S+/.test(current)) {\n    const names = current.trim().split('.').slice(1).map((name) => `.${name}`)\n                                .sort((curr, next) => curr.length - next.length)\n    while (names.length) {\n      var partial = current.replace(names.shift(), '')\n      var pattern = `${prePart}${partial}${postPart}`\n      var matches = document.querySelectorAll(pattern)\n      if (matches.length === 1 && matches[0] === element) {\n        current = partial\n      }\n    }\n    // robustness: degrade complex classname (heuristic)\n    if (current && current.match(/\\./g).length > 2) {\n      const references = document.querySelectorAll(`${prePart}${current}`)\n      for (var i = 0, l = references.length; i < l; i++) {\n        if (references[i].contains(element)) {\n          // TODO:\n          // - check using attributes + regard excludes\n          const description = references[i].tagName.toLowerCase()\n          var pattern = `${prePart}${description}${postPart}`\n          var matches = document.querySelectorAll(pattern)\n          if (matches.length === 1 && matches[0] === element) {\n            current = description\n          }\n          break\n        }\n      }\n    }\n  }\n\n  return current\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/optimize.js\n **/","/**\n * # Match\n *\n * Retrieves selector\n */\n\nconst defaultIgnore = {\n  attribute (attributeName) {\n    return [\n      'style',\n      'data-reactid',\n      'data-react-checksum'\n    ].indexOf(attributeName) > -1\n  }\n}\n\n/**\n * Get the path of the element\n * @param  {HTMLElement} node    - [description]\n * @param  {Object}      options - [description]\n * @return {String}              - [description]\n */\nexport default function match (node, options) {\n  const path = []\n  var element = node\n  var length = path.length\n\n  const {\n    root = document,\n    skip = null,\n    ignore = {}\n  } = options\n\n  const skipCompare = skip && (Array.isArray(skip) ? skip : [skip]).map((entry) => {\n    if (typeof entry !== 'function') {\n      return (element) => element === entry\n    }\n    return entry\n  })\n\n  const skipChecks = (element) => {\n    return skip && skipCompare.some((compare) => compare(element))\n  }\n\n  var ignoreClass = false\n\n  Object.keys(ignore).forEach((type) => {\n    if (type === 'class') {\n      ignoreClass = true\n    }\n    var predicate = ignore[type]\n    if (typeof predicate === 'function') return\n    if (typeof predicate === 'number') {\n      predicate = predicate.toString()\n    }\n    if (typeof predicate === 'string') {\n      predicate = new RegExp(predicate)\n    }\n    // check class-/attributename for regex\n    ignore[type] = predicate.test.bind(predicate)\n  })\n\n  if (ignoreClass) {\n    const ignoreAttribute = ignore.attribute\n    ignore.attribute = (name, value, defaultPredicate) => {\n      return ignore.class(value) || ignoreAttribute && ignoreAttribute(name, value, defaultPredicate)\n    }\n  }\n\n  while (element !== root) {\n\n    if (skipChecks(element) !== true) {\n      // global\n      if (checkId(element, path, ignore)) break\n      if (checkClassGlobal(element, path, ignore, root)) break\n      if (checkAttributeGlobal(element, path, ignore, root)) break\n      if (checkTagGlobal(element, path, ignore, root)) break\n\n      // local\n      checkClassLocal(element, path, ignore)\n\n      // define only one selector each iteration\n      if (path.length === length) {\n        checkAttributeLocal(element, path, ignore)\n      }\n      if (path.length === length) {\n        checkTagLocal(element, path, ignore)\n      }\n\n      if (path.length === length) {\n        checkClassChild(element, path, ignore)\n      }\n      if (path.length === length) {\n        checkAttributeChild(element, path, ignore)\n      }\n      if (path.length === length) {\n        checkTagChild(element, path, ignore)\n      }\n    }\n\n    element = element.parentNode\n    length = path.length\n  }\n\n  if (element === root) {\n    path.unshift('*')\n  }\n\n  return path.join(' ')\n}\n\n\n/**\n * [checkClassGlobal description]\n * @param  {HTMLElement} element - [description]\n * @param  {Array}       path    - [description]\n * @param  {Object}      ignore  - [description]\n * @return {Boolean}             - [description]\n */\nfunction checkClassGlobal (element, path, ignore, root) {\n  return checkClass(element, path, ignore, root)\n}\n\n/**\n * [checkClassLocal description]\n * @param  {HTMLElement} element - [description]\n * @param  {Array}       path    - [description]\n * @param  {Object}      ignore  - [description]\n * @return {Boolean}             - [description]\n */\nfunction checkClassLocal (element, path, ignore) {\n  return checkClass(element, path, ignore, element.parentNode)\n}\n\n/**\n * [checkClassChild description]\n * @param  {HTMLElement} element - [description]\n * @param  {Array}       path    - [description]\n * @param  {Object}      ignore  - [description]\n * @return {Boolean}             - [description]\n */\nfunction checkClassChild (element, path, ignore) {\n  const className = element.getAttribute('class')\n  if (checkIgnore(ignore.class, className)) {\n    return false\n  }\n  return checkChild(element, path, `.${className.trim().replace(/\\s+/g, '.')}`)\n}\n\n/**\n * [checkAttributeGlobal description]\n * @param  {HTMLElement} element - [description]\n * @param  {Array}       path    - [description]\n * @param  {Object}      ignore  - [description]\n * @return {Boolean}             - [description]\n */\nfunction checkAttributeGlobal (element, path, ignore, root) {\n  return checkAttribute(element, path, ignore, root)\n}\n\n/**\n * [checkAttributeLocal description]\n * @param  {HTMLElement} element - [description]\n * @param  {Array}       path    - [description]\n * @param  {Object}      ignore  - [description]\n * @return {Boolean}             - [description]\n */\nfunction checkAttributeLocal (element, path, ignore) {\n  return checkAttribute(element, path, ignore, element.parentNode)\n}\n\n/**\n * [checkAttributeChild description]\n * @param  {HTMLElement} element - [description]\n * @param  {Array}       path    - [description]\n * @param  {Object}      ignore  - [description]\n * @return {Boolean}             - [description]\n */\nfunction checkAttributeChild (element, path, ignore) {\n  const attributes = element.attributes\n  return Object.keys(attributes).some((key) => {\n    const attribute = attributes[key]\n    const attributeName = attribute.name\n    const attributeValue = attribute.value\n    if (checkIgnore(ignore.attribute, attributeName, attributeValue, defaultIgnore.attribute)) {\n      return false\n    }\n    const pattern = `[${attributeName}=\"${attributeValue}\"]`\n    return checkChild(element, path, pattern)\n  })\n}\n\n/**\n * [checkTagGlobal description]\n * @param  {HTMLElement} element - [description]\n * @param  {Array}       path    - [description]\n * @param  {Object}      ignore  - [description]\n * @return {Boolean}             - [description]\n */\nfunction checkTagGlobal (element, path, ignore, root) {\n  return checkTag(element, path, ignore, root)\n}\n\n/**\n * [checkTagLocal description]\n * @param  {HTMLElement} element - [description]\n * @param  {Array}       path    - [description]\n * @param  {Object}      ignore  - [description]\n * @return {Boolean}             - [description]\n */\nfunction checkTagLocal (element, path, ignore) {\n  return checkTag(element, path, ignore, element.parentNode)\n}\n\n/**\n * [checkTabChildren description]\n * @param  {HTMLElement} element - [description]\n * @param  {Array}       path    - [description]\n * @param  {Object}      ignore  - [description]\n * @return {Boolean}             - [description]\n */\nfunction checkTagChild (element, path, ignore) {\n  const tagName = element.tagName.toLowerCase()\n  if (checkIgnore(ignore.tag, tagName)) {\n    return false\n  }\n  return checkChild(element, path, tagName)\n}\n\n/**\n * [checkId description]\n * @param  {HTMLElement} element - [description]\n * @param  {Array}       path    - [description]\n * @param  {Object}      ignore  - [description]\n * @return {Boolean}             - [description]\n */\nfunction checkId (element, path, ignore) {\n  const id = element.getAttribute('id')\n  if (checkIgnore(ignore.id, id)) {\n    return false\n  }\n  path.unshift(`#${id}`)\n  return true\n}\n\n/**\n * [checkClass description]\n * @param  {HTMLElement} element - [description]\n * @param  {Array}       path    - [description]\n * @param  {Object}      ignore  - [description]\n * @param  {HTMLElement} parent  - [description]\n * @return {Boolean}             - [description]\n */\nfunction checkClass (element, path, ignore, parent) {\n  const className = element.getAttribute('class')\n  if (checkIgnore(ignore.class, className)) {\n    return false\n  }\n  const matches = parent.getElementsByClassName(className)\n  if (matches.length === 1) {\n    path.unshift(`.${className.trim().replace(/\\s+/g, '.')}`)\n    return true\n  }\n  return false\n}\n\n/**\n * [checkAttribute description]\n * @param  {HTMLElement} element - [description]\n * @param  {Array}       path    - [description]\n * @param  {Object}      ignore  - [description]\n * @param  {HTMLElement} parent  - [description]\n * @return {Boolean}             - [description]\n */\nfunction checkAttribute (element, path, ignore, parent) {\n  const attributes = element.attributes\n  return Object.keys(attributes).some((key) => {\n    const attribute = attributes[key]\n    const attributeName = attribute.name\n    const attributeValue = attribute.value\n    if (checkIgnore(ignore.attribute, attributeName, attributeValue, defaultIgnore.attribute)) {\n      return false\n    }\n    const pattern = `[${attributeName}=\"${attributeValue}\"]`\n    const matches = parent.querySelectorAll(pattern)\n    if (matches.length === 1) {\n      path.unshift(pattern)\n      return true\n    }\n  })\n}\n\n/**\n * [checkTag description]\n * @param  {HTMLElement} element - [description]\n * @param  {Array}       path    - [description]\n * @param  {HTMLElement} parent  - [description]\n * @param  {Object}      ignore  - [description]\n * @return {Boolean}             - [description]\n */\nfunction checkTag (element, path, ignore, parent) {\n  const tagName = element.tagName.toLowerCase()\n  if (checkIgnore(ignore.tag, tagName)) {\n    return false\n  }\n  const matches = parent.getElementsByTagName(tagName)\n  if (matches.length === 1) {\n    path.unshift(tagName)\n    return true\n  }\n  return false\n}\n\n/**\n * [checkChild description]\n * Note: childTags is a custom property to use a view filter for tags on for virutal elements\n * @param  {HTMLElement} element  - [description]\n * @param  {Array}       path     - [description]\n * @param  {String}      selector - [description]\n * @return {Boolean}              - [description]\n */\nfunction checkChild (element, path, selector) {\n  const parent = element.parentNode\n  const children = parent.childTags || parent.children\n  for (var i = 0, l = children.length; i < l; i++) {\n    if (children[i] === element) {\n      path.unshift(`> ${selector}:nth-child(${i+1})`)\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * [checkIgnore description]\n * @param  {Function} predicate        [description]\n * @param  {string}   name             [description]\n * @param  {string}   value            [description]\n * @param  {Function} defaultPredicate [description]\n * @return {boolean}                   [description]\n */\nfunction checkIgnore (predicate, name, value, defaultPredicate) {\n  if (!name) {\n    return true\n  }\n  const check = predicate || defaultPredicate\n  if (!check) {\n    return false\n  }\n  return check(name, value || name, defaultPredicate)\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/match.js\n **/","/**\n * # Select\n *\n * Construct a unique CSS queryselector to access the selected DOM element(s).\n * Applies different matching and optimization strategies for efficiency.\n */\n\nimport adapt from './adapt'\nimport match from './match'\nimport optimize from './optimize'\n\n/**\n * Choose action depending on the input (single/multi)\n * @param  {HTMLElement|Array} input   - [description]\n * @param  {Object}            options - [description]\n * @return {string}                    - [description]\n */\nexport default function getQuerySelector (input, options = {}) {\n  if (Array.isArray(input)) {\n    return getMultiSelector(input, options)\n  }\n  return getSingleSelector(input, options)\n}\n\n/**\n * Get a selector for the provided element\n * @param  {HTMLElement} element - [description]\n * @param  {Object}      options - [description]\n * @return {String}              - [description]\n */\nexport function getSingleSelector (element, options) {\n\n  if (element.nodeType === 3) {\n    return getSingleSelector(element.parentNode)\n  }\n  if (element.nodeType !== 1) {\n    throw new Error(`Invalid input - only HTMLElements or representations of them are supported! (not \"${typeof element}\")`)\n  }\n\n  const globalModified = adapt(element, options)\n\n  const selector = match(element, options)\n  const optimized = optimize(selector, element, options)\n\n  // debug\n  // console.log(`\n  //   selector: ${selector}\n  //   optimized:${optimized}\n  // `)\n\n  if (globalModified) {\n    delete global.document\n  }\n\n  return optimized\n}\n\n/**\n * Get a selector to match multiple children from a parent\n * @param  {Array}  elements - [description]\n * @param  {Object} options  - [description]\n * @return {string}          - [description]\n */\nexport function getMultiSelector (elements, options) {\n  var commonParentNode = null\n  var commonClassName = null\n  var commonAttribute = null\n  var commonTagName = null\n\n  for (var i = 0, l = elements.length; i < l; i++) {\n    var element = elements[i]\n    if (!commonParentNode) { // 1st entry\n      commonParentNode = element.parentNode\n      commonClassName = element.className\n      // commonAttribute = element.attributes\n      commonTagName = element.tagName\n    } else if (commonParentNode !== element.parentNode) {\n      return console.log('Can\\'t be efficiently mapped. It probably best to use multiple single selectors instead!')\n    }\n    if (element.className !== commonClassName) {\n      var classNames = []\n      var longer, shorter\n      if (element.className.length > commonClassName.length) {\n        longer = element.className\n        shorter = commonClassName\n      } else {\n        longer = commonClassName\n        shorter = element.className\n      }\n      shorter.split(' ').forEach((name) => {\n        if (longer.indexOf(name) > -1) {\n          classNames.push(name)\n        }\n      })\n      commonClassName = classNames.join(' ')\n    }\n    // TODO:\n    // - check attributes\n    // if (element.attributes !== commonAttribute) {\n    //\n    // }\n    if (element.tagName !== commonTagName) {\n      commonTagName = null\n    }\n  }\n\n  const selector = getSingleSelector(commonParentNode, options)\n  console.log(selector, commonClassName, commonAttribute, commonTagName)\n\n  if (commonClassName) {\n    return `${selector} > .${commonClassName.replace(/ /g, '.')}`\n  }\n  // if (commonAttribute) {\n  //\n  // }\n  if (commonTagName) {\n    return `${selector} > ${commonTagName.toLowerCase()}`\n  }\n  return `${selector} > *`\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/select.js\n **/"],"sourceRoot":""}