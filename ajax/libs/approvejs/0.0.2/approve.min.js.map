{"version":3,"sources":["approve.js"],"names":["String","prototype","format","col","arrFn","slice","call","arguments","this","replace","m","n","root","factory","_approve","approve","define","amd","exports","module","NAME","DESCRIPTION","VERSION","DEPENDENCIES","tests","required","validate","value","message","expects","email","regex","test","url","cc","alphaNumeric","numeric","alpha","decimal","currency","ip","ipv4","ipv6","min","pars","length","max","range","equal","other","document","getElementById","field","Object","toString","console","error","_formatErrors","errors","title","i","_message","rule","rules","hasOwnProperty","Array","isArray","result","approved","ret","valid","push","concat","getErrors","prop","extend","obj","e","addTest","name","noconflict","config","minimum","minimumBonus","messages","0","1","2","3","4","5","6","strength","score","text","isMinimum","hasLower","hasUpper","hasNumber","hasSpecial","isBonus","match","Math","ceil","bonus"],"mappings":"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","file":"approve.min.js","sourcesContent":["/*!\r\n * approve.js 0.0.2\r\n * A simple validation library.\r\n * Author: Charl Gottschalk\r\n * @license: MIT\r\n */\r\n\r\n// A helper function for formatting strings:\r\n// 'i can speak {language} since i was {age}'.format({language:'javascript',age:10});\r\n// 'i can speak {0} since i was {1}'.format('javascript',10});\r\nString.prototype.format = function(col) {\r\n    col = typeof col === 'object' ? col : arrFn.slice.call(arguments, 1);\r\n    return this.replace(/\\{\\{|\\}\\}|\\{(\\w+)\\}/g, function (m, n) {\r\n        if (m == \"{{\") { return \"{\"; }\r\n        if (m == \"}}\") { return \"}\"; }\r\n        return col[n];\r\n    });\r\n};\r\n\r\n// AMD with global, Node, or global\r\n;(function(root, factory) {    // eslint-disable-line no-extra-semi\r\n    // Save the previous value of 'approve'\r\n    root._approve = root.approve;\r\n\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define(function() {\r\n            // Also create a global in case some scripts\r\n            // that are loaded still are looking for\r\n            // a global even when an AMD loader is in use.\r\n            return (root.approve = factory(root));\r\n        });\r\n    } else if (typeof exports === 'object') {\r\n        // Node. Does not work with strict CommonJS, but\r\n        // only CommonJS-like enviroments that support module.exports,\r\n        // like Node.\r\n        module.exports = factory(root);\r\n    } else {\r\n        // Browser globals (root is self)\r\n        root.approve = factory(root);\r\n    }\r\n}(this, function(root) {\r\n    var approve = {};\r\n\r\n    approve.NAME = 'ApproveJs';\r\n    approve.DESCRIPTION = 'Provides for simple form input value validation.';\r\n    approve.VERSION = '0.0.2';\r\n    approve.DEPENDENCIES = [];\r\n\r\n    approve.tests = {\r\n        required: {\r\n            validate: function(value) {\r\n                return !!value;\r\n            },\r\n            message: '{title} is required',\r\n            expects: false\r\n        },\r\n        email: {\r\n            regex: /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i, // eslint-disable-line no-control-regex\r\n            validate: function(value) {\r\n                return this.regex.test(value);\r\n            },\r\n            message: '{title} must be a valid email address',\r\n            expects: false\r\n        },\r\n        url: {\r\n            regex: /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/i,\r\n            validate: function(value) {\r\n                return this.regex.test(value);\r\n            },\r\n            message: '{title} must be a valid web address',\r\n            expects: false\r\n        },\r\n        cc: {\r\n            regex: /^(?:(4[0-9]{12}(?:[0-9]{3})?)|(5[1-5][0-9]{14})|(6(?:011|5[0-9]{2})[0-9]{12})|(3[47][0-9]{13})|(3(?:0[0-5]|[68][0-9])[0-9]{11})|((?:2131|1800|35[0-9]{3})[0-9]{11}))$/,\r\n            validate: function(value) {\r\n                return this.regex.test(value);\r\n            },\r\n            message: '{title} must be a valid credit card number',\r\n            expects: false\r\n        },\r\n        alphaNumeric: {\r\n            regex: /^[A-Za-z0-9]+$/i,\r\n            validate: function(value) {\r\n                return this.regex.test(value);\r\n            },\r\n            message: '{title} may only contain [Aa-Zz] and [0-9]',\r\n            expects: false\r\n        },\r\n        numeric: {\r\n            regex: /^[0-9]+$/,\r\n            validate: function(value) {\r\n                return this.regex.test(value);\r\n            },\r\n            message: '{title} may only contain [0-9]',\r\n            expects: false\r\n        },\r\n        alpha: {\r\n            regex: /^[A-Za-z]+$/,\r\n            validate: function(value) {\r\n                return this.regex.test(value);\r\n            },\r\n            message: '{title} may only contain [Aa-Zz]',\r\n            expects: false\r\n        },\r\n        decimal: {\r\n            regex: /^\\s*(\\+|-)?((\\d+(\\.\\d+)?)|(\\.\\d+))\\s*$/,\r\n            validate: function(value) {\r\n                return this.regex.test(value);\r\n            },\r\n            message: '{title} must be a valid decimal',\r\n            expects: false\r\n        },\r\n        currency: {\r\n            regex: /^\\s*(\\+|-)?((\\d+(\\.\\d\\d)?)|(\\.\\d\\d))\\s*$/,\r\n            validate: function(value) {\r\n                return this.regex.test(value);\r\n            },\r\n            message: '{title} must be a valid currency value',\r\n            expects: false\r\n        },\r\n        ip: {\r\n            regex: {\r\n                ipv4: /^(?:(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])\\.){3}(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])$/,\r\n                ipv6: /^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i\r\n            },\r\n            validate: function(value) {\r\n                return this.regex.ipv4.test(value) || this.regex.ipv6.test(value);\r\n            },\r\n            message: '{title} must be a valid IP address',\r\n            expects: false\r\n        },\r\n        min: {\r\n            validate: function(value, pars) {\r\n                return typeof value === 'string' && value.length >= pars.min;\r\n            },\r\n            message: '{title} must be a minimum of {min} characters',\r\n            expects: ['min']\r\n        },\r\n        max: {\r\n            validate: function(value, pars) {\r\n                return typeof value === 'string' && value.length <= pars.max;\r\n            },\r\n            message: '{title} must be a maximum of {max} characters',\r\n            expects: ['max']\r\n        },\r\n        range: {\r\n            validate: function(value, pars) {\r\n                return typeof value === 'string' && value.length >= pars.min && value.length <= pars.max;\r\n            },\r\n            message: '{title} must be a minimum of {min} and a maximum of {max} characters',\r\n            expects: ['min', 'max']\r\n        },\r\n        equal: {\r\n            validate: function(value, pars) {\r\n                var other = document.getElementById(pars.field);\r\n                return '' + value === '' + other.value;\r\n            },\r\n            message: '{title} must be equal to {field}',\r\n            expects: ['field']\r\n        },\r\n        format: {\r\n            validate: function(value, pars) {\r\n                if (Object.prototype.toString.call(pars.regex) === '[object RegExp]') {\r\n                    return pars.regex.test(value);\r\n                }\r\n                console.error('approve.tests.format(value, regex): regex is not a valid regular expression.');\r\n                return false;\r\n            },\r\n            message: '{title} did not pass the [{regex}] test',\r\n            expects: ['regex']\r\n        }\r\n    };\r\n\r\n    approve._formatErrors = function(errors, title) {\r\n        var format = {title: title};\r\n        for (var i = errors.length - 1; i >= 0; i--) {\r\n            errors[i] = errors[i].format(format);\r\n        }\r\n        return errors;  \r\n    };\r\n\r\n    approve._message = function(rule, rules, title) {\r\n        // Does the provided rule have a custom message?\r\n        if (rules[rule].hasOwnProperty('message')) {\r\n            // The rule has a custom message, return it.\r\n            return rules[rule].message;\r\n        }\r\n        else {\r\n            // The rule does not have a custom message.\r\n            // Get the default message from the tests.\r\n            var message = this.tests[rule].message,\r\n                format = {};\r\n            // Does the test for the rule expect parameters?\r\n            if (Array.isArray(this.tests[rule].expects)) {\r\n                // The test for the rule expects paramaters.\r\n                // Loop through expected paramaters for the rule's test.\r\n                for (var i = this.tests[rule].expects.length - 1; i >= 0; i--) {\r\n                    var expects = this.tests[rule].expects[i];\r\n                    // Check if the rule object has the required parameter.\r\n                    if (rules[rule].hasOwnProperty(expects)) {\r\n                        // Add the expected parameter's format to the parameter value.\r\n                        format[expects] = rules[rule][expects];\r\n                    }\r\n                }\r\n            }\r\n            // Check if the rule has a name property?\r\n            // This is used to format the message with the field name.\r\n            if (rules[rule].hasOwnProperty('title')) {\r\n                // Format the message to include the field name.\r\n                format.title = rules[rule].title;\r\n            } else {\r\n                // Format the message to include the provided title paramater as the field name.\r\n                format.title = title;\r\n            }\r\n            message = message.format(format);\r\n            // Return the formatted message.\r\n            return message;\r\n        }        \r\n    };\r\n\r\n    approve.value = function(value, rules, title) {\r\n        if (typeof rules !== 'object') {\r\n            console.error('approve.value(value, rules): rules is not a valid object.');\r\n        }\r\n\r\n        var result = {\r\n            approved: true,\r\n            errors: []\r\n        };\r\n\r\n        // Loop through provided rules.\r\n        for (var rule in rules) {\r\n            if (rules.hasOwnProperty(rule)) {\r\n                title = title || '';\r\n                // Check if rule exists in tests.\r\n                if (this.tests.hasOwnProperty(rule)) {\r\n                    // Create a pars object for required parameters.\r\n                    var pars = {};\r\n                    // Does the test for this rule expect any paramaters?\r\n                    if (Array.isArray(this.tests[rule].expects)) {\r\n                        // This test expects paramaters.\r\n                        // Loop through the test's expected parameters and add the values from the rule.\r\n                        for (var i = this.tests[rule].expects.length - 1; i >= 0; i--) {\r\n                            var expects = this.tests[rule].expects[i];\r\n                            // Check if the rule object has the required parameter.\r\n                            if (rules[rule].hasOwnProperty(expects)) {\r\n                                // Add the expected parameter value to the pars object.\r\n                                pars[expects] = rules[rule][expects];\r\n                            } else {\r\n                                // Set the parameter to the rule's value.\r\n                                pars[expects] = rules[rule];\r\n                            }\r\n                        }\r\n                    }\r\n                    // Test the value.\r\n                    var ret = this.tests[rule].validate(value, pars);\r\n                    // Check if the returned value is an object.\r\n                    if(typeof ret === 'object')\r\n                    {\r\n                        // An object was returned.\r\n                        // Check if the test was successful.\r\n                        if (!ret.valid) {\r\n                            // The test failed, set the result object properties.\r\n                            result.approved = false;\r\n                            result.errors.push(this._message(rule, rules, title));\r\n                        }\r\n                        result.errors = result.errors.concat(this._formatErrors(ret.getErrors(), title));\r\n                        for (var prop in ret) {\r\n                            if (ret.hasOwnProperty(prop)) {\r\n                                result[prop] = ret[prop];\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // Check if the returned value is a boolean\r\n                        if (typeof ret !== 'boolean') {\r\n                            // We don't process if it's not a boolean or object.\r\n                            result.approved = false;\r\n                            result.errors.push(this._message(rule, rules, title));\r\n                        } else {\r\n                            if (!ret) {\r\n                                // The test failed, set the result object properties.\r\n                                result.approved = false;\r\n                                result.errors.push(this._message(rule, rules, title));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Return the result object.\r\n        return result;\r\n    };\r\n\r\n    approve.extend = function(tests) {\r\n        if (typeof obj !== 'object') {\r\n            console.error('approve.extend(tests): tests is not a valid object.');\r\n        }\r\n        try {\r\n            for (var test in tests) {\r\n                if (tests.hasOwnProperty(test)) {\r\n                    if (!this.tests.hasOwnProperty(test)) {\r\n                        this.tests[test] = tests[test];\r\n                    }\r\n                }\r\n            }\r\n        } catch(e) {\r\n            console.error('approve.extend(): ' + e.message);\r\n        }\r\n    };\r\n\r\n    approve.addTest = function(obj, name) {\r\n        if (typeof obj !== 'object') {\r\n            console.error('approve.addTest(obj, name): obj is not a valid object.');\r\n        }\r\n        try {\r\n            if (!this.tests.hasOwnProperty(name)) {\r\n                this.tests[name] = obj;\r\n            }\r\n        } catch (e) {\r\n            console.error('approve.addTest(): ' + e.message);\r\n        }\r\n    };\r\n\r\n    approve.noconflict = function() {\r\n        root.approve = root._approve;\r\n        return this;\r\n    };\r\n    \r\n    return approve;\r\n}));\r\n\r\napprove.addTest({\r\n    config: {\r\n        minimum: 8,\r\n        minimumBonus: 10,\r\n        messages: {\r\n            0: 'Very Weak',\r\n            1: 'Weak',\r\n            2: 'Better',\r\n            3: 'Almost',\r\n            4: 'Acceptable',\r\n            5: 'Strong',\r\n            6: 'Very Strong'\r\n        }\r\n    },\r\n    validate: function(value) {\r\n        return this.strength(value);\r\n    },\r\n    message: '{title} did not pass the strength test.',\r\n    expects: false,\r\n    score: function(text) {\r\n        var score = {\r\n            value: 0,\r\n            isMinimum: false,\r\n            hasLower: false,\r\n            hasUpper: false,\r\n            hasNumber: false,\r\n            hasSpecial: false,\r\n            isBonus: false,\r\n            strength: 0\r\n        };\r\n        // If password is longer than minimum give 1 point\r\n        if (text.length > this.config.minimum){\r\n            score.value++;\r\n            score.isMinimum = true;\r\n        } else {\r\n            score.value = 1;\r\n            score.isMinimum = false;\r\n        }\r\n        // If password has lowercase characters give 1 point\r\n        if ( text.match(/[a-z]/) ) {\r\n            if(score.isMinimum) {\r\n                score.value++;\r\n            }\r\n            score.hasLower = true;\r\n        }\r\n        // If password has uppercase characters give 1 point\r\n        if ( text.match(/[A-Z]/) ) {\r\n            if(score.isMinimum) {\r\n                score.value++;\r\n            }\r\n            score.hasUpper = true;\r\n        }\r\n        // If password has at least one number give 1 point\r\n        if (text.match(/\\d+/)) {\r\n            if(score.isMinimum) {\r\n                score.value++;\r\n            }\r\n            score.hasNumber = true;\r\n        }\r\n        // If password has at least one special caracther give 1 point\r\n        if ( text.match(/.[!,@,#,$,%,^,&,*,?,_,~,-,(,)]/) ) {\r\n            if(score.isMinimum) {\r\n                score.value++;\r\n            }\r\n            score.hasSpecial = true;\r\n        }\r\n        // If password is longer than minimumBonus give another 1 point\r\n        if (text.length > this.config.minimumBonus) {\r\n            score.value++;\r\n            score.isBonus = true;\r\n        }\r\n        score.strength = Math.ceil((score.value / 6) * 100);\r\n\r\n        return score;\r\n    },\r\n    strength: function (text) {\r\n        var min = this.config.minimum,\r\n            bonus = this.config.minimumBonus,\r\n            message = this.config.messages[0];\r\n        var result = {           \r\n            message: message,\r\n            minimum: min,\r\n            minimumBonus: bonus,\r\n            score: {\r\n                value: 0,\r\n                isMinimum: false,\r\n                hasLower: false,\r\n                hasUpper: false,\r\n                hasNumber: false,\r\n                hasSpecial: false,\r\n                isBonus: false,\r\n                strength: 0\r\n            },\r\n            valid: false,\r\n            getErrors: function() {\r\n                var errors = [];\r\n                if (!this.score.isMinimum) {\r\n                    errors.push('{title} must be at least ' + min + ' characters');\r\n                }\r\n                if (!this.score.hasLower) {\r\n                    errors.push('{title} must have at least 1 lower case character');\r\n                }\r\n                if (!this.score.hasUpper) {\r\n                    errors.push('{title} must have at least 1 upper case character');\r\n                }\r\n                if (!this.score.hasSpecial) {\r\n                    errors.push('{title} must have at least 1 special character');\r\n                }\r\n                if (!this.score.hasNumber) {\r\n                    errors.push('{title} must have at least 1 number');\r\n                }\r\n                return errors;\r\n            }\r\n        };\r\n        result.score = this.score(text);\r\n        result.message = this.config.messages[result.score.value];\r\n        if (result.score.value > 4) {\r\n          result.valid = true;\r\n        }\r\n        return result;\r\n    }\r\n}, 'strength');"],"sourceRoot":"/source/"}