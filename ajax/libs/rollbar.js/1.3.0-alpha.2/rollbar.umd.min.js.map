{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///rollbar.umd.min.js","webpack:///webpack/bootstrap 782e46b46bc68d2f3abe","webpack:///./src/bundles/rollbar.umd.js","webpack:///./src/globalnotifier.js","webpack:///./src/notifier.js","webpack:///./vendor/json2.min.js","webpack:///./src/error_parser.js","webpack:///./src/util.js","webpack:///./src/xhr.js","webpack:///./~/script-loader/addScript.js","webpack:///./vendor/json2.min.js?101e","webpack:///./~/error-stack-parser/error-stack-parser.js","webpack:///./~/error-stack-parser/~/stackframe/stackframe.js"],"names":["root","factory","exports","module","define","amd","a","i","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","setupJSON","JSONObject","JSON","customJSON","setupCustomJSON","globalnotifier","notifier","config","window","_rollbarConfig","alias","globalAlias","shimRunning","shimId","wrapper","init","Rollbar","RollbarNotifier","Notifier","_rollbarWindowOnError","client","old","args","_rollbarWrappedError","uncaughtError","apply","_extendListenerPrototype","prototype","hasOwnProperty","oldAddEventListener","addEventListener","event","callback","bubble","wrap","oldRemoveEventListener","removeEventListener","_wrapped","parent","configure","captureUncaught","onerror","Array","slice","arguments","global","globals","length","processPayloads","RollbarJSON","xhr","topLevelNotifier","_topLevelNotifier","parentNotifier","protocol","location","indexOf","endpoint","DEFAULT_ENDPOINT","options","enabled","environment","scrubFields","Util","copy","DEFAULT_SCRUB_FIELDS","checkIgnore","logLevel","DEFAULT_LOG_LEVEL","reportLevel","DEFAULT_REPORT_LEVEL","uncaughtErrorLevel","DEFAULT_UNCAUGHT_ERROR_LEVEL","payload","lastError","plugins","logger","console","log","concat","_wrapNotifierFn","fn","ctx","self","e","_guessErrorClass","errMsg","errClassMatch","match","ERR_CLASS_REGEXP","errClass","replace","_payloadProcessorTimer","immediate","payloadObj","_rollbarPayloadQueue","shift","_processPayload","endpointUrl","accessToken","payloadProcessorTimeout","setTimeout","url","now","Date","getTime","rateLimitStartTime","rateLimitPerMinCounter","globalRateLimit","_globalRollbarOptions","maxItems","globalRateLimitPerMin","itemsPerMinute","checkOverRateLimit","ignoreRateLimit","rateLimitCounter","checkOverRateLimitPerMin","Error","_log","XHR","post","err","resp","error_parser","NOTIFIER_VERSION","DEFAULT_ITEMS_PER_MIN","DEFAULT_MAX_ITEMS","LEVELS","debug","info","warning","error","critical","startTime","_generateLogFn","level","_getLogArgs","message","custom","ts","argT","arg","constructor","name","DOMException","_route","path","endpointTrailingSlash","test","pathBeginningSlash","substring","_processShimQueue","shimQueue","shim","obj","method","parentShim","shimToNotifier","_buildPayload","stackInfo","notifierOptions","uuid","uuid4","undefined","payloadData","platform","framework","language","body","_buildBody","request","href","query_string","search","user_ip","runtime_ms","timestamp","Math","round","javascript","browser","navigator","userAgent","cookie_enabled","cookieEnabled","screen","width","height","_getBrowserPlugins","server","version","access_token","data","merge","_scrub","_buildPayloadBodyTrace","_buildPayloadBodyMessage","stringify","result","extra","description","guess","className","trace","exception","class","stack","stackFrame","frame","code","pre","contextLength","mid","frames","filename","sanitizeUrl","lineno","line","func","colno","column","context","floor","push","reverse","_browserPlugins","cur","navPlugins","numPlugins","redactQueryParam","paramPart","dummy1","dummy2","dummy3","valPart","redact","paramScrubber","v","queryRes","valScrubber","k","paramRes","scrubber","tmpV","_getScrubFieldRegexs","_getScrubQueryParamRegexs","traverse","pat","ret","RegExp","_urlIsWhitelisted","whitelist","frameLength","listLength","urlRegex","j","hostWhiteList","_messageIsIgnored","exceptionMessage","ignoredMessages","len","messageIsIgnored","rIgnoredMessage","_enqueuePayload","isUncaught","callerArgs","payloadToSend","ignoredCallback","msg","_internalCheckIgnore","verbose","logFunction","transform","levelVal","jquery","ignoreAjaxErrors","messagejquery_ajax_error","_savedStackTrace","parse","warn","lineNo","colNo","guessFunctionName","gatherContext","mode","document","useragent","scope","payloadOptions","scopedNotifier","f","ctxFn","_isWrap","_rollbarContext","_wrappedSource","toString","prop","UNKNOWN_FUNCTION","Frame","_stackFrame","fileName","lineNumber","functionName","columnNumber","Stack","getStack","parserStack","ErrorStackParser","src","copyIsArray","clone","target","deep","Object","dest","parseUriOptions","strictMode","key","q","parser","strict","loose","parseUri","str","String","o","exec","uri","$0","$1","$2","baseUrlParts","anchor","source","query","isObj","keys","val","join","d","r","random","XMLHttpFactories","XMLHttpRequest","ActiveXObject","createXMLHTTPObject","xmlhttp","factories","numFactories","onreadystatechange","readyState","status","responseText","ex","exc","open","setRequestHeader","send","e1","XDomainRequest","ontimeout","onload","onprogress","e2","execScript","eval","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","StackFrame","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","stacktrace","parseOpera","parseV8OrIE","parseFFOrSafari","extractLocation","urlLike","locationParts","split","lastNumber","pop","possibleNumber","isNaN","parseFloat","isFinite","map","tokens","filter","parseOpera9","parseOpera11","parseOpera10","lineRE","lines","argsRaw","functionCall","_isNumber","n","setFunctionName","setArgs","setFileName","setLineNumber","setColumnNumber","getFunctionName","getArgs","TypeError","getFileName","getLineNumber","Number","getColumnNumber"],"mappings":"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","file":"rollbar.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar globalnotifier = __webpack_require__(1);\n\tvar notifier = __webpack_require__(2);\n\t\n\tfunction setupJSON() {\n\t  var JSONObject = JSON;\n\t\n\t  if (true) {\n\t    // This adds the script to this context. We need it since this library\n\t    // is not a CommonJs or AMD module.\n\t    __webpack_require__(3);\n\t\n\t    var customJSON = {};\n\t    setupCustomJSON(customJSON);\n\t\n\t    JSONObject = customJSON;\n\t  }\n\t\n\t  globalnotifier.setupJSON(JSONObject);\n\t}\n\t\n\tsetupJSON();\n\t\n\tvar config = window._rollbarConfig;\n\tvar alias = config && config.globalAlias || 'Rollbar';\n\tvar shimRunning = window[alias] && typeof window[alias].shimId !== 'undefined';\n\t\n\t/* We must not initialize the full notifier here if the\n\t * shim is loaded, snippet_callback will do that for us\n\t */\n\tif (!shimRunning && config) {\n\t  globalnotifier.wrapper.init(config);\n\t} else {\n\t  window.Rollbar = globalnotifier.wrapper;\n\t  // We need to expose Notifier for the snippet\n\t  window.RollbarNotifier = notifier.Notifier;\n\t}\n\t\n\tmodule.exports = globalnotifier.wrapper;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar notifier = __webpack_require__(2);\n\t\n\tvar Notifier = notifier.Notifier;\n\t// Stub out the wrapped error which is set \n\twindow._rollbarWrappedError = null;\n\t\n\tfunction setupJSON(JSON) {\n\t  notifier.setupJSON(JSON);\n\t}\n\t\n\t// Global window.onerror handler\n\tfunction _rollbarWindowOnError(client, old, args) {\n\t  if (!args[4] && window._rollbarWrappedError) {\n\t    args[4] = window._rollbarWrappedError;\n\t    window._rollbarWrappedError = null;\n\t  }\n\t\n\t  client.uncaughtError.apply(client, args);\n\t  if (old) {\n\t    old.apply(window, args);\n\t  }\n\t}\n\t\n\tfunction _extendListenerPrototype(client, prototype) {\n\t  if (prototype.hasOwnProperty && prototype.hasOwnProperty('addEventListener')) {\n\t    var oldAddEventListener = prototype.addEventListener;\n\t    prototype.addEventListener = function(event, callback, bubble) {\n\t      oldAddEventListener.call(this, event, client.wrap(callback), bubble);\n\t    };\n\t\n\t    var oldRemoveEventListener = prototype.removeEventListener;\n\t    prototype.removeEventListener = function(event, callback, bubble) {\n\t      oldRemoveEventListener.call(this, event, callback && callback._wrapped || callback, bubble);\n\t    };\n\t  }\n\t}\n\t\n\t// Add an init() method to do the same things that the shim would do\n\tvar wrapper = {};\n\twrapper.init = function(config, parent) {\n\t  var notifier = new Notifier(parent);\n\t  notifier.configure(config);\n\t\n\t  if (config.captureUncaught) {\n\t    // Set the global onerror handler\n\t    var old = window.onerror;\n\t\n\t    window.onerror = function() {\n\t      var args = Array.prototype.slice.call(arguments, 0);\n\t      _rollbarWindowOnError(notifier, old, args);\n\t    };\n\t\n\t    // Adapted from https://github.com/bugsnag/bugsnag-js\n\t    var globals = ['EventTarget', 'Window', 'Node', 'ApplicationCache', 'AudioTrackList', 'ChannelMergerNode', 'CryptoOperation', 'EventSource',\n\t     'FileReader', 'HTMLUnknownElement', 'IDBDatabase', 'IDBRequest', 'IDBTransaction', 'KeyOperation', 'MediaController',\n\t     'MessagePort', 'ModalWindow', 'Notification', 'SVGElementInstance', 'Screen', 'TextTrack', 'TextTrackCue',\n\t     'TextTrackList', 'WebSocket', 'WebSocketWorker', 'Worker', 'XMLHttpRequest', 'XMLHttpRequestEventTarget',\n\t     'XMLHttpRequestUpload'];\n\t\n\t    var i;\n\t    var global;\n\t    for (i = 0; i < globals.length; ++i) {\n\t      global = globals[i];\n\t\n\t      if (window[global] && window[global].prototype) {\n\t        _extendListenerPrototype(notifier, window[global].prototype);\n\t      }\n\t    }\n\t  }\n\t\n\t  window.Rollbar = notifier;\n\t  // Finally, start processing payloads using the global notifier\n\t  Notifier.processPayloads();\n\t  return notifier;\n\t};\n\t\n\t\n\tmodule.exports = {\n\t  wrapper: wrapper,\n\t  setupJSON: setupJSON\n\t};\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar error_parser = __webpack_require__(4);\n\tvar Util = __webpack_require__(5);\n\tvar xhr = __webpack_require__(6);\n\t\n\tvar XHR = xhr.XHR;\n\tvar RollbarJSON = null;\n\t\n\tfunction setupJSON(JSON) {\n\t  RollbarJSON = JSON;\n\t  xhr.setupJSON(JSON);\n\t}\n\t\n\t// Updated by the build process to match package.json\n\tNotifier.NOTIFIER_VERSION = (\"1.2.2\");\n\tNotifier.DEFAULT_ENDPOINT = (\"api.rollbar.com/api/1/\");\n\tNotifier.DEFAULT_SCRUB_FIELDS = ([\"pw\",\"pass\",\"passwd\",\"password\",\"secret\",\"confirm_password\",\"confirmPassword\",\"password_confirmation\",\"passwordConfirmation\",\"access_token\",\"accessToken\",\"secret_key\",\"secretKey\",\"secretToken\"]);\n\tNotifier.DEFAULT_LOG_LEVEL = (\"debug\");\n\tNotifier.DEFAULT_REPORT_LEVEL = (\"debug\");\n\tNotifier.DEFAULT_UNCAUGHT_ERROR_LEVEL = (\"warning\");\n\tNotifier.DEFAULT_ITEMS_PER_MIN = (60);\n\tNotifier.DEFAULT_MAX_ITEMS = (0);\n\t\n\tNotifier.LEVELS = {\n\t  debug: 0,\n\t  info: 1,\n\t  warning: 2,\n\t  error: 3,\n\t  critical: 4\n\t};\n\t\n\t// This is the global queue where all notifiers will put their\n\t// payloads to be sent to Rollbar.\n\twindow._rollbarPayloadQueue = [];\n\t\n\t// This contains global options for all Rollbar notifiers.\n\twindow._globalRollbarOptions = {\n\t  startTime: (new Date()).getTime(),\n\t  maxItems: Notifier.DEFAULT_MAX_ITEMS,\n\t  itemsPerMinute: Notifier.DEFAULT_ITEMS_PER_MIN\n\t};\n\t\n\tvar _topLevelNotifier;\n\t\n\tfunction topLevelNotifier() {\n\t  return _topLevelNotifier;\n\t}\n\t\n\tfunction Notifier(parentNotifier) {\n\t  // Save the first notifier so we can use it to send system messages like\n\t  // when the rate limit is reached.\n\t  _topLevelNotifier = _topLevelNotifier || this;\n\t\n\t  var protocol = window.location.protocol;\n\t  if (protocol.indexOf('http') !== 0) {\n\t    protocol = 'https:';\n\t  }\n\t  var endpoint = protocol + '//' + Notifier.DEFAULT_ENDPOINT;\n\t  this.options = {\n\t    enabled: true,\n\t    endpoint: endpoint,\n\t    environment: 'production',\n\t    scrubFields: Util.copy(Notifier.DEFAULT_SCRUB_FIELDS),\n\t    checkIgnore: null,\n\t    logLevel: Notifier.DEFAULT_LOG_LEVEL,\n\t    reportLevel: Notifier.DEFAULT_REPORT_LEVEL,\n\t    uncaughtErrorLevel: Notifier.DEFAULT_UNCAUGHT_ERROR_LEVEL,\n\t    payload: {}\n\t  };\n\t\n\t  this.lastError = null;\n\t  this.plugins = {};\n\t  this.parentNotifier = parentNotifier;\n\t  this.logger = function() {\n\t    if (window.console && typeof window.console.log === 'function') {\n\t      var args = ['Rollbar:'].concat(Array.prototype.slice.call(arguments, 0));\n\t      window.console.log(args);\n\t    }\n\t  };\n\t\n\t  if (parentNotifier) {\n\t    // If the parent notifier has the shimId\n\t    // property it means that it's a Rollbar shim.\n\t    if (parentNotifier.hasOwnProperty('shimId')) {\n\t      // After we set this, the shim is just a proxy to this\n\t      // Notifier instance.\n\t      parentNotifier.notifier = this;\n\t    } else {\n\t      this.logger = parentNotifier.logger;\n\t      this.configure(parentNotifier.options);\n\t    }\n\t  }\n\t}\n\t\n\t\n\tNotifier._generateLogFn = function(level) {\n\t  return _wrapNotifierFn(function _logFn() {\n\t    var args = this._getLogArgs(arguments);\n\t\n\t    return this._log(level || args.level || this.options.logLevel || Notifier.DEFAULT_LOG_LEVEL,\n\t        args.message, args.err, args.custom, args.callback);\n\t  });\n\t};\n\t\n\t\n\t/*\n\t * Returns an Object with keys:\n\t * {\n\t *  message: String,\n\t *  err: Error,\n\t *  custom: Object\n\t * }\n\t */\n\tNotifier.prototype._getLogArgs = function(args) {\n\t  var level = this.options.logLevel || Notifier.DEFAULT_LOG_LEVEL;\n\t  var ts;\n\t  var message;\n\t  var err;\n\t  var custom;\n\t  var callback;\n\t\n\t  var argT;\n\t  var arg;\n\t  for (var i = 0; i < args.length; ++i) {\n\t    arg = args[i];\n\t    argT = typeof arg;\n\t    if (argT === 'string') {\n\t      message = arg;\n\t    } else if (argT === 'function') {\n\t      callback = _wrapNotifierFn(arg, this);  // wrap the callback in a try/catch block\n\t    } else if (arg && argT === 'object') {\n\t      if (arg.constructor.name === 'Date') {\n\t        ts = arg;\n\t      } else if (arg instanceof Error ||\n\t          arg.prototype === Error.prototype ||\n\t          arg.hasOwnProperty('stack') ||\n\t          (typeof DOMException !== \"undefined\" && arg instanceof DOMException)) {\n\t        err = arg;\n\t      } else {\n\t        custom = arg;\n\t      }\n\t    }\n\t  }\n\t\n\t  // TODO(cory): somehow pass in timestamp too...\n\t\n\t  return {\n\t    level: level,\n\t    message: message,\n\t    err: err,\n\t    custom: custom,\n\t    callback: callback\n\t  };\n\t};\n\t\n\t\n\tNotifier.prototype._route = function(path) {\n\t  var endpoint = this.options.endpoint;\n\t\n\t  var endpointTrailingSlash = /\\/$/.test(endpoint);\n\t  var pathBeginningSlash = /^\\//.test(path);\n\t\n\t  if (endpointTrailingSlash && pathBeginningSlash) {\n\t    path = path.substring(1);\n\t  } else if (!endpointTrailingSlash && !pathBeginningSlash) {\n\t    path = '/' + path;\n\t  }\n\t\n\t  return endpoint + path;\n\t};\n\t\n\t\n\t/*\n\t * Given a queue containing each call to the shim, call the\n\t * corresponding method on this instance.\n\t *\n\t * shim queue contains:\n\t *\n\t * {shim: Rollbar, method: 'info', args: ['hello world', exc], ts: Date}\n\t */\n\tNotifier.prototype._processShimQueue = function(shimQueue) {\n\t  // implement me\n\t  var shim;\n\t  var obj;\n\t  var tmp;\n\t  var method;\n\t  var args;\n\t  var shimToNotifier = {};\n\t  var parentShim;\n\t  var parentNotifier;\n\t  var notifier;\n\t\n\t  // For each of the messages in the shimQueue we need to:\n\t  // 1. get/create the notifier for that shim\n\t  // 2. apply the message to the notifier\n\t  while ((obj = shimQueue.shift())) {\n\t    shim = obj.shim;\n\t    method = obj.method;\n\t    args = obj.args;\n\t    parentShim = shim.parentShim;\n\t\n\t    // Get the current notifier based on the shimId\n\t    notifier = shimToNotifier[shim.shimId];\n\t    if (!notifier) {\n\t\n\t      // If there is no notifier associated with the shimId\n\t      // Check to see if there's a parent shim\n\t      if (parentShim) {\n\t\n\t        // If there is a parent shim, get the parent notifier\n\t        // and create a new notifier for the current shim.\n\t        parentNotifier = shimToNotifier[parentShim.shimId];\n\t\n\t        // Create a new Notifier which will process all of the shim's\n\t        // messages\n\t        notifier = new Notifier(parentNotifier);\n\t      } else {\n\t        // If there is no parent, assume the shim is the top\n\t        // level shim and thus, should use this as the notifier.\n\t        notifier = this;\n\t      }\n\t\n\t      // Save off the shimId->notifier mapping\n\t      shimToNotifier[shim.shimId] = notifier;\n\t    }\n\t\n\t    if (notifier[method] && typeof notifier[method] === 'function') {\n\t      notifier[method].apply(notifier, args);\n\t    }\n\t  }\n\t};\n\t\n\t\n\t/*\n\t * Builds and returns an Object that will be enqueued onto the\n\t * window._rollbarPayloadQueue array to be sent to Rollbar.\n\t */\n\tNotifier.prototype._buildPayload = function(ts, level, message, stackInfo, custom) {\n\t  var accessToken = this.options.accessToken;\n\t\n\t  // NOTE(cory): DEPRECATED\n\t  // Pass in {payload: {environment: 'production'}} instead of just {environment: 'production'}\n\t  var environment = this.options.environment;\n\t\n\t  var notifierOptions = Util.copy(this.options.payload);\n\t  var uuid = Util.uuid4();\n\t\n\t  if (Notifier.LEVELS[level] === undefined) {\n\t    throw new Error('Invalid level');\n\t  }\n\t\n\t  if (!message && !stackInfo && !custom) {\n\t    throw new Error('No message, stack info or custom data');\n\t  }\n\t\n\t  var payloadData = {\n\t    environment: environment,\n\t    endpoint: this.options.endpoint,\n\t    uuid: uuid,\n\t    level: level,\n\t    platform: 'browser',\n\t    framework: 'browser-js',\n\t    language: 'javascript',\n\t    body: this._buildBody(message, stackInfo, custom),\n\t    request: {\n\t      url: window.location.href,\n\t      query_string: window.location.search,\n\t      user_ip: \"$remote_ip\"\n\t    },\n\t    client: {\n\t      runtime_ms: ts.getTime() - window._globalRollbarOptions.startTime,\n\t      timestamp: Math.round(ts.getTime() / 1000),\n\t      javascript: {\n\t        browser: window.navigator.userAgent,\n\t        language: window.navigator.language,\n\t        cookie_enabled: window.navigator.cookieEnabled,\n\t        screen: {\n\t          width: window.screen.width,\n\t          height: window.screen.height\n\t        },\n\t        plugins: this._getBrowserPlugins()\n\t      }\n\t    },\n\t    server: {},\n\t    notifier: {\n\t      name: 'rollbar-browser-js',\n\t      version: Notifier.NOTIFIER_VERSION\n\t    }\n\t  };\n\t\n\t  if (notifierOptions.body) {\n\t    delete notifierOptions.body;\n\t  }\n\t\n\t  // Overwrite the options from configure() with the payload\n\t  // data.\n\t  var payload = {\n\t    access_token: accessToken,\n\t    data: Util.merge(payloadData, notifierOptions)\n\t  };\n\t\n\t  // Only scrub the data section since we never want to scrub \"access_token\"\n\t  // even if it's in the scrub fields\n\t  this._scrub(payload.data);\n\t\n\t  return payload;\n\t};\n\t\n\t\n\tNotifier.prototype._buildBody = function(message, stackInfo, custom) {\n\t  var body;\n\t  if (stackInfo) {\n\t    body = this._buildPayloadBodyTrace(message, stackInfo, custom);\n\t  } else {\n\t    body = this._buildPayloadBodyMessage(message, custom);\n\t  }\n\t  return body;\n\t};\n\t\n\t\n\tNotifier.prototype._buildPayloadBodyMessage = function(message, custom) {\n\t  if (!message) {\n\t    if (custom) {\n\t      message = RollbarJSON.stringify(custom);\n\t    } else {\n\t      message = '';\n\t    }\n\t  }\n\t  var result = {\n\t    body: message\n\t  };\n\t\n\t  if (custom) {\n\t    result.extra = Util.copy(custom);\n\t  }\n\t\n\t  return {\n\t    message: result\n\t  };\n\t};\n\t\n\t\n\tNotifier.prototype._buildPayloadBodyTrace = function(description, stackInfo, custom) {\n\t  var guess = _guessErrorClass(stackInfo.message);\n\t  var className = stackInfo.name || guess[0];\n\t  var message = guess[1];\n\t  var trace = {\n\t    exception: {\n\t      'class': className,\n\t      message: message\n\t    }\n\t  };\n\t\n\t  if (description) {\n\t    trace.exception.description = description || 'uncaught exception';\n\t  }\n\t\n\t  // Transform a TraceKit stackInfo object into a Rollbar trace\n\t  if (stackInfo.stack) {\n\t    var stackFrame;\n\t    var frame;\n\t    var code;\n\t    var pre;\n\t    var post;\n\t    var contextLength;\n\t    var i, j, mid;\n\t\n\t    trace.frames = [];\n\t    for (i = 0; i < stackInfo.stack.length; ++i) {\n\t      stackFrame = stackInfo.stack[i];\n\t      frame = {\n\t        filename: stackFrame.url ? Util.sanitizeUrl(stackFrame.url) : '(unknown)',\n\t        lineno: stackFrame.line || null,\n\t        method: (!stackFrame.func || stackFrame.func === '?') ? '[anonymous]' : stackFrame.func,\n\t        colno: stackFrame.column\n\t      };\n\t\n\t      code = pre = post = null;\n\t      contextLength = stackFrame.context ? stackFrame.context.length : 0;\n\t      if (contextLength) {\n\t        mid = Math.floor(contextLength / 2);\n\t        pre = stackFrame.context.slice(0, mid);\n\t        code = stackFrame.context[mid];\n\t        post = stackFrame.context.slice(mid);\n\t      }\n\t\n\t      if (code) {\n\t        frame.code = code;\n\t      }\n\t\n\t      if (pre || post) {\n\t        frame.context = {};\n\t        if (pre && pre.length) {\n\t          frame.context.pre = pre;\n\t        }\n\t        if (post && post.length) {\n\t          frame.context.post = post;\n\t        }\n\t      }\n\t\n\t      if (stackFrame.args) {\n\t        frame.args = stackFrame.args;\n\t      }\n\t\n\t      trace.frames.push(frame);\n\t    }\n\t\n\t    // NOTE(cory): reverse the frames since rollbar.com expects the most recent call last\n\t    trace.frames.reverse();\n\t\n\t    if (custom) {\n\t      trace.extra = Util.copy(custom);\n\t    }\n\t    return {trace: trace};\n\t  } else {\n\t    // no frames - not useful as a trace. just report as a message.\n\t    return this._buildPayloadBodyMessage(className + ': ' + message, custom);\n\t  }\n\t};\n\t\n\t\n\tNotifier.prototype._getBrowserPlugins = function() {\n\t  if (!this._browserPlugins) {\n\t    var navPlugins = (window.navigator.plugins || []);\n\t    var cur;\n\t    var numPlugins = navPlugins.length;\n\t    var plugins = [];\n\t    var i;\n\t    for (i = 0; i < numPlugins; ++i) {\n\t      cur = navPlugins[i];\n\t      plugins.push({name: cur.name, description: cur.description});\n\t    }\n\t    this._browserPlugins = plugins;\n\t  }\n\t  return this._browserPlugins;\n\t};\n\t\n\t\n\t/*\n\t * Does an in-place modification of obj such that:\n\t * 1. All keys that match the notifier's options.scrubFields\n\t *    list will be normalized into all '*'\n\t * 2. Any query string params that match the same criteria will have\n\t *    their values normalized as well.\n\t */\n\tNotifier.prototype._scrub = function(obj) {\n\t  function redactQueryParam(match, paramPart, dummy1,\n\t      dummy2, dummy3, valPart, offset, string) {\n\t    return paramPart + Util.redact(valPart);\n\t  }\n\t\n\t  function paramScrubber(v) {\n\t    var i;\n\t    if (typeof(v) === 'string') {\n\t      for (i = 0; i < queryRes.length; ++i) {\n\t        v = v.replace(queryRes[i], redactQueryParam);\n\t      }\n\t    }\n\t    return v;\n\t  }\n\t\n\t  function valScrubber(k, v) {\n\t    var i;\n\t    for (i = 0; i < paramRes.length; ++i) {\n\t      if (paramRes[i].test(k)) {\n\t        v = Util.redact(v);\n\t        break;\n\t      }\n\t    }\n\t    return v;\n\t  }\n\t\n\t  function scrubber(k, v) {\n\t    var tmpV = valScrubber(k, v);\n\t    if (tmpV === v) {\n\t      return paramScrubber(tmpV);\n\t    } else {\n\t      return tmpV;\n\t    }\n\t  }\n\t\n\t  var scrubFields = this.options.scrubFields;\n\t  var paramRes = this._getScrubFieldRegexs(scrubFields);\n\t  var queryRes = this._getScrubQueryParamRegexs(scrubFields);\n\t\n\t  Util.traverse(obj, scrubber);\n\t  return obj;\n\t};\n\t\n\t\n\tNotifier.prototype._getScrubFieldRegexs = function(scrubFields) {\n\t  var ret = [];\n\t  var pat;\n\t  for (var i = 0; i < scrubFields.length; ++i) {\n\t    pat = '\\\\[?(%5[bB])?' + scrubFields[i] + '\\\\[?(%5[bB])?\\\\]?(%5[dD])?';\n\t    ret.push(new RegExp(pat, 'i'));\n\t  }\n\t  return ret;\n\t};\n\t\n\t\n\tNotifier.prototype._getScrubQueryParamRegexs = function(scrubFields) {\n\t  var ret = [];\n\t  var pat;\n\t  for (var i = 0; i < scrubFields.length; ++i) {\n\t    pat = '\\\\[?(%5[bB])?' + scrubFields[i] + '\\\\[?(%5[bB])?\\\\]?(%5[dD])?';\n\t    ret.push(new RegExp('(' + pat + '=)([^&\\\\n]+)', 'igm'));\n\t  }\n\t  return ret;\n\t};\n\t\n\tNotifier.prototype._urlIsWhitelisted = function(payload){\n\t  var whitelist, trace, frame, filename, frameLength, url, listLength, urlRegex;\n\t  var i, j;\n\t\n\t  try {\n\t    whitelist = this.options.hostWhiteList;\n\t    trace = payload.data.body.trace;\n\t\n\t    if (!whitelist || whitelist.length === 0) { return true; }\n\t    if (!trace) { return true; }\n\t\n\t    listLength = whitelist.length;\n\t    frameLength = trace.frames.length;\n\t    for (i = 0; i < frameLength; i++) {\n\t      frame = trace.frames[i];\n\t      filename = frame.filename;\n\t      if (typeof filename !== \"string\") { return true; }\n\t      for (j = 0; j < listLength; j++) {\n\t        url = whitelist[j];\n\t        urlRegex = new RegExp(url);\n\t\n\t        if (urlRegex.test(filename)){\n\t          return true;\n\t        }\n\t      }\n\t    }\n\t  } catch (e) {\n\t    this.configure({hostWhiteList: null});\n\t    this.error(\"Error while reading your configuration's hostWhiteList option. Removing custom hostWhiteList.\", e);\n\t    return true;\n\t  }\n\t\n\t  return false;\n\t};\n\t\n\tNotifier.prototype._messageIsIgnored = function(payload){\n\t  var exceptionMessage, i, ignoredMessages, len, messageIsIgnored, rIgnoredMessage, trace;\n\t  try {\n\t    messageIsIgnored = false;\n\t    ignoredMessages = this.options.ignoredMessages;\n\t    trace = payload.data.body.trace;\n\t\n\t    if(!ignoredMessages || ignoredMessages.length === 0) { return false; }\n\t    if(!trace) { return false; }\n\t    exceptionMessage = trace.exception.message;\n\t\n\t    len = ignoredMessages.length;\n\t    for(i=0; i < len; i++) {\n\t      rIgnoredMessage = new RegExp(ignoredMessages[i], \"gi\");\n\t      messageIsIgnored = rIgnoredMessage.test(exceptionMessage);\n\t\n\t      if(messageIsIgnored){\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  catch(e) {\n\t    this.configure({ignoredMessages: null});\n\t    this.error(\"Error while reading your configuration's ignoredMessages option. Removing custom ignoredMessages.\");\n\t  }\n\t\n\t  return messageIsIgnored;\n\t};\n\t\n\tNotifier.prototype._enqueuePayload = function(payload, isUncaught, callerArgs, callback) {\n\t\n\t  var payloadToSend = {\n\t    callback: callback,\n\t    accessToken: this.options.accessToken,\n\t    endpointUrl: this._route('item/'),\n\t    payload: payload\n\t  };\n\t\n\t  var ignoredCallback = function() {\n\t    if (callback) {\n\t      // If the item was ignored call the callback anyway\n\t      var msg = 'This item was not sent to Rollbar because it was ignored. ' +\n\t                'This can happen if a custom checkIgnore() function was used ' +\n\t                'or if the item\\'s level was less than the notifier\\' reportLevel. ' +\n\t                'See https://rollbar.com/docs/notifier/rollbar.js/configuration for more details.';\n\t\n\t      callback(null, {err: 0, result: {id: null, uuid: null, message: msg}});\n\t    }\n\t  };\n\t\n\t  // Internal checkIgnore will check the level against the minimum\n\t  // report level from this.options\n\t  if (this._internalCheckIgnore(isUncaught, callerArgs, payload)) {\n\t    ignoredCallback();\n\t    return;\n\t  }\n\t\n\t  // Users can set their own ignore criteria using this.options.checkIgnore()\n\t  try {\n\t    if (this.options.checkIgnore &&\n\t        typeof this.options.checkIgnore === 'function' &&\n\t        this.options.checkIgnore(isUncaught, callerArgs, payload)) {\n\t      ignoredCallback();\n\t      return;\n\t    }\n\t  } catch (e) {\n\t    // Disable the custom checkIgnore and report errors in the checkIgnore function\n\t    this.configure({checkIgnore: null});\n\t    this.error('Error while calling custom checkIgnore() function. Removing custom checkIgnore().', e);\n\t  }\n\t\n\t  if (!this._urlIsWhitelisted(payload)) {\n\t    return;\n\t  }\n\t\n\t  if (this._messageIsIgnored(payload)) {\n\t    return;\n\t  }\n\t\n\t  if (this.options.verbose) {\n\t    if (payload.data && payload.data.body && payload.data.body.trace) {\n\t      var trace = payload.data.body.trace;\n\t      var exceptionMessage = trace.exception.message;\n\t      this.logger(exceptionMessage);\n\t    }\n\t\n\t    // FIXME: Some browsers do not output objects as json to the console, and\n\t    // instead write [object Object], so let's write the message first to ensure that is logged.\n\t    this.logger('Sending payload -', payloadToSend);\n\t  }\n\t\n\t  if (typeof this.options.logFunction === \"function\") {\n\t    this.options.logFunction(payloadToSend);\n\t  }\n\t\n\t  try {\n\t    if (typeof this.options.transform === 'function') {\n\t      this.options.transform(payload);\n\t    }\n\t  } catch (e) {\n\t    this.configure({transform: null});\n\t    this.error('Error while calling custom transform() function. Removing custom transform().', e);\n\t  }\n\t\n\t  if (!!this.options.enabled) {\n\t    window._rollbarPayloadQueue.push(payloadToSend);\n\t  }\n\t};\n\t\n\t\n\tNotifier.prototype._internalCheckIgnore = function(isUncaught, callerArgs, payload) {\n\t  var level = callerArgs[0];\n\t  var levelVal = Notifier.LEVELS[level] || 0;\n\t  var reportLevel = Notifier.LEVELS[this.options.reportLevel] || 0;\n\t\n\t  if (levelVal < reportLevel) {\n\t    return true;\n\t  }\n\t\n\t  var plugins = this.options ? this.options.plugins : {};\n\t  if (plugins && plugins.jquery && plugins.jquery.ignoreAjaxErrors &&\n\t        payload.body.message) {\n\t    return payload.body.messagejquery_ajax_error;\n\t  }\n\t\n\t  return false;\n\t};\n\t\n\t\n\t/*\n\t * Logs stuff to Rollbar using the default\n\t * logging level.\n\t *\n\t * Can be called with the following, (order doesn't matter but type does):\n\t * - message: String\n\t * - err: Error object, must have a .stack property or it will be\n\t *   treated as custom data\n\t * - custom: Object containing custom data to be sent along with\n\t *   the item\n\t * - callback: Function to call once the item is reported to Rollbar\n\t * - isUncaught: True if this error originated from an uncaught exception handler\n\t * - ignoreRateLimit: True if this item should be allowed despite rate limit checks\n\t */\n\tNotifier.prototype._log = function(level, message, err, custom, callback, isUncaught, ignoreRateLimit) {\n\t  var stackInfo = null;\n\t  if (err) {\n\t    // If we've already calculated the stack trace for the error, use it.\n\t    // This can happen for wrapped errors that don't have a \"stack\" property.\n\t    stackInfo = err._savedStackTrace ? err._savedStackTrace : error_parser.parse(err);\n\t\n\t    // Don't report the same error more than once\n\t    if (err === this.lastError) {\n\t      return;\n\t    }\n\t\n\t    this.lastError = err;\n\t  }\n\t\n\t  var payload = this._buildPayload(new Date(), level, message, stackInfo, custom);\n\t  if (ignoreRateLimit) {\n\t    payload.ignoreRateLimit = true;\n\t  }\n\t  this._enqueuePayload(payload, isUncaught ? true : false, [level, message, err, custom], callback);\n\t};\n\t\n\tNotifier.prototype.log = Notifier._generateLogFn();\n\tNotifier.prototype.debug = Notifier._generateLogFn('debug');\n\tNotifier.prototype.info = Notifier._generateLogFn('info');\n\tNotifier.prototype.warn = Notifier._generateLogFn('warning'); // for console.warn() compatibility\n\tNotifier.prototype.warning = Notifier._generateLogFn('warning');\n\tNotifier.prototype.error = Notifier._generateLogFn('error');\n\tNotifier.prototype.critical = Notifier._generateLogFn('critical');\n\t\n\t// Adapted from tracekit.js\n\tNotifier.prototype.uncaughtError = _wrapNotifierFn(function(message, url, lineNo, colNo, err, context) {\n\t  context = context || null;\n\t  if (err && err.stack) {\n\t    this._log(this.options.uncaughtErrorLevel, message, err, context, null, true);\n\t    return;\n\t  }\n\t\n\t  // NOTE(cory): sometimes users will trigger an \"error\" event\n\t  // on the window object directly which will result in errMsg\n\t  // being an Object instead of a string.\n\t  //\n\t  if (url && url.stack) {\n\t    this._log(this.options.uncaughtErrorLevel, message, url, context, null, true);\n\t    return;\n\t  }\n\t\n\t  var location = {\n\t    'url': url || '',\n\t    'line': lineNo\n\t  };\n\t  location.func = error_parser.guessFunctionName(location.url, location.line);\n\t  location.context = error_parser.gatherContext(location.url, location.line);\n\t  var stack = {\n\t    'mode': 'onerror',\n\t    'message': message || 'uncaught exception',\n\t    'url': document.location.href,\n\t    'stack': [location],\n\t    'useragent': navigator.userAgent\n\t  };\n\t  if (err) {\n\t    stack = err._savedStackTrace || error_parser.parse(err);\n\t  }\n\t\n\t  var payload = this._buildPayload(new Date(), this.options.uncaughtErrorLevel, message, stack);\n\t  this._enqueuePayload(payload, true, [this.options.uncaughtErrorLevel, message, url, lineNo, colNo, err]);\n\t});\n\t\n\t\n\tNotifier.prototype.global = _wrapNotifierFn(function(options) {\n\t  options = options || {};\n\t  Util.merge(window._globalRollbarOptions, options);\n\t  if (options.maxItems !== undefined) {\n\t    rateLimitCounter = 0;\n\t  }\n\t\n\t  if (options.itemsPerMinute !== undefined) {\n\t    rateLimitPerMinCounter = 0;\n\t  }\n\t});\n\t\n\t\n\tNotifier.prototype.configure = _wrapNotifierFn(function(options) {\n\t  // TODO(cory): only allow non-payload keys that we understand\n\t\n\t  // Make a copy of the options object for this notifier\n\t  Util.merge(this.options, options);\n\t});\n\t\n\t/*\n\t * Create a new Notifier instance which has the same options\n\t * as the current notifier + options to override them.\n\t */\n\tNotifier.prototype.scope = _wrapNotifierFn(function(payloadOptions) {\n\t  var scopedNotifier = new Notifier(this);\n\t  Util.merge(scopedNotifier.options.payload, payloadOptions);\n\t  return scopedNotifier;\n\t});\n\t\n\tNotifier.prototype.wrap = function(f, context) {\n\t  var _this = this;\n\t  var ctxFn;\n\t  if (typeof context === 'function') {\n\t    ctxFn = context;\n\t  } else {\n\t    ctxFn = function() { return context || {}; };\n\t  }\n\t\n\t  if (typeof f !== 'function') {\n\t    return f;\n\t  }\n\t\n\t  // If the given function is already a wrapped function, just\n\t  // return it instead of wrapping twice\n\t  if (f._isWrap) {\n\t    return f;\n\t  }\n\t\n\t  if (!f._wrapped) {\n\t    f._wrapped = function () {\n\t      try {\n\t        return f.apply(this, arguments);\n\t      } catch(e) {\n\t        if (!e.stack) {\n\t          e._savedStackTrace = error_parser.parse(e);\n\t        }\n\t        e._rollbarContext = ctxFn() || {};\n\t        e._rollbarContext._wrappedSource = f.toString();\n\t\n\t        window._rollbarWrappedError = e;\n\t        throw e;\n\t      }\n\t    };\n\t\n\t    f._wrapped._isWrap = true;\n\t\n\t    for (var prop in f) {\n\t      if (f.hasOwnProperty(prop)) {\n\t        f._wrapped[prop] = f[prop];\n\t      }\n\t    }\n\t  }\n\t\n\t  return f._wrapped;\n\t};\n\t\n\t/***** Misc *****/\n\t\n\tfunction _wrapNotifierFn(fn, ctx) {\n\t  return function() {\n\t    var self = ctx || this;\n\t    try {\n\t      return fn.apply(self, arguments);\n\t    } catch (e) {\n\t      if (self) {\n\t        self.logger(e);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t\n\tvar ERR_CLASS_REGEXP = new RegExp('^(([a-zA-Z0-9-_$ ]*): *)?(Uncaught )?([a-zA-Z0-9-_$ ]*): ');\n\tfunction _guessErrorClass(errMsg) {\n\t  if (!errMsg) {\n\t    return [\"Unknown error. There was no error message to display.\", \"\"];\n\t  }\n\t  var errClassMatch = errMsg.match(ERR_CLASS_REGEXP);\n\t  var errClass = '(unknown)';\n\t\n\t  if (errClassMatch) {\n\t    errClass = errClassMatch[errClassMatch.length - 1];\n\t    errMsg = errMsg.replace((errClassMatch[errClassMatch.length - 2] || '') + errClass + ':', '');\n\t    errMsg = errMsg.replace(/(^[\\s]+|[\\s]+$)/g, '');\n\t  }\n\t  return [errClass, errMsg];\n\t}\n\t\n\t/***** Payload processor *****/\n\t\n\tvar payloadProcessorTimeout;\n\tNotifier.processPayloads = function(immediate) {\n\t  if (!payloadProcessorTimeout || immediate) {\n\t    _payloadProcessorTimer(immediate);\n\t  }\n\t};\n\t\n\t\n\tfunction _payloadProcessorTimer(immediate) {\n\t  var payloadObj;\n\t  while ((payloadObj = window._rollbarPayloadQueue.shift())) {\n\t    _processPayload(payloadObj.endpointUrl, payloadObj.accessToken, payloadObj.payload, payloadObj.callback);\n\t  }\n\t  if (!immediate) {\n\t    payloadProcessorTimeout = setTimeout(_payloadProcessorTimer, 1000);\n\t  }\n\t}\n\t\n\t\n\tvar rateLimitStartTime = new Date().getTime();\n\tvar rateLimitCounter = 0;\n\tvar rateLimitPerMinCounter = 0;\n\tfunction _processPayload(url, accessToken, payload, callback) {\n\t  callback = callback || function cb() {};\n\t  var now = new Date().getTime();\n\t  if (now - rateLimitStartTime >= 60000) {\n\t    rateLimitStartTime = now;\n\t    rateLimitPerMinCounter = 0;\n\t  }\n\t\n\t  // Check to see if we have a rate limit set or if\n\t  // the rate limit has been met/exceeded.\n\t  var globalRateLimit = window._globalRollbarOptions.maxItems;\n\t  var globalRateLimitPerMin = window._globalRollbarOptions.itemsPerMinute;\n\t  var checkOverRateLimit = function() { return !payload.ignoreRateLimit && globalRateLimit >= 1 && rateLimitCounter >= globalRateLimit; };\n\t  var checkOverRateLimitPerMin = function() { return !payload.ignoreRateLimit && globalRateLimitPerMin >= 1 && rateLimitPerMinCounter >= globalRateLimitPerMin; };\n\t\n\t  if (checkOverRateLimit()) {\n\t    callback(new Error(globalRateLimit + ' max items reached'));\n\t    return;\n\t  } else if (checkOverRateLimitPerMin()) {\n\t    callback(new Error(globalRateLimitPerMin + ' items per minute reached'));\n\t    return;\n\t  } else {\n\t    rateLimitCounter++;\n\t    rateLimitPerMinCounter++;\n\t\n\t    // Check to see if we have just reached the rate limit. If so, notify the customer.\n\t    if (checkOverRateLimit()) {\n\t      _topLevelNotifier._log(_topLevelNotifier.options.uncaughtErrorLevel, //level\n\t          'maxItems has been hit. Ignoring errors for the remainder of the current page load.', // message\n\t          null, // err\n\t          {maxItems: globalRateLimit}, // custom\n\t          null,  // callback\n\t          false, // isUncaught\n\t          true); // ignoreRateLimit\n\t    }\n\t    // remove this key since it's only used for internal notifier logic\n\t    if (payload.ignoreRateLimit) {\n\t      delete payload.ignoreRateLimit;\n\t    }\n\t  }\n\t\n\t  // There's either no rate limit or we haven't met it yet so\n\t  // go ahead and send it.\n\t  XHR.post(url, accessToken, payload, function xhrCallback(err, resp) {\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t\n\t    // TODO(cory): parse resp as JSON\n\t    return callback(null, resp);\n\t  });\n\t}\n\t\n\tmodule.exports = {\n\t  Notifier: Notifier,\n\t  setupJSON: setupJSON,\n\t  topLevelNotifier: topLevelNotifier\n\t};\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(7)(__webpack_require__(8)+\"\\n\\n// SCRIPT-LOADER FOOTER\\n//# sourceURL=script:///home/jon/rollbar/rollbar.js/vendor/json2.min.js\")\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ErrorStackParser = __webpack_require__(9);\n\t\n\tvar UNKNOWN_FUNCTION = '?';\n\t\n\t\n\tfunction guessFunctionName(url, line) {\n\t  return UNKNOWN_FUNCTION;\n\t}\n\t\n\tfunction gatherContext(url, line) {\n\t  return null;\n\t}\n\t\n\tfunction Frame(stackFrame) {\n\t  var data = {};\n\t\n\t  data._stackFrame = stackFrame;\n\t\n\t  data.url = stackFrame.fileName;\n\t  data.line = stackFrame.lineNumber;\n\t  data.func = stackFrame.functionName;\n\t  data.column = stackFrame.columnNumber;\n\t  data.args = stackFrame.args;\n\t\n\t  data.context = gatherContext(data.url, data.line);\n\t\n\t  return data;\n\t};\n\t\n\tfunction Stack(e) {\n\t  function getStack() {\n\t    var parserStack = [];\n\t\n\t    try {\n\t      parserStack = ErrorStackParser.parse(e);\n\t    } catch(e) {\n\t      parserStack = [];\n\t    }\n\t\n\t    var stack = [];\n\t\n\t    for (var i = 0; i < parserStack.length; i++) {\n\t      stack.push(new Frame(parserStack[i]));\n\t    }\n\t\n\t    return stack;\n\t  }\n\t\n\t  return {\n\t    stack: getStack(),\n\t    message: e.message,\n\t    name: e.name\n\t  };\n\t};\n\t\n\tfunction parse(e) {\n\t  return new Stack(e);\n\t}\n\t\n\tmodule.exports = {\n\t  guessFunctionName: guessFunctionName,\n\t  gatherContext: gatherContext,\n\t  parse: parse,\n\t  Stack: Stack,\n\t  Frame: Frame\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Util = {\n\t  // modified from https://github.com/jquery/jquery/blob/master/src/core.js#L127\n\t  merge: function() {\n\t    var options, name, src, copy, copyIsArray, clone,\n\t      target = arguments[0] || {},\n\t      i = 1,\n\t      length = arguments.length,\n\t      deep = true;\n\t\n\t    // Handle case when target is a string or something (possible in deep copy)\n\t    if (typeof target !== \"object\" && typeof target !== 'function') {\n\t      target = {};\n\t    }\n\t\n\t    for (; i < length; i++) {\n\t      // Only deal with non-null/undefined values\n\t      if ((options = arguments[i]) !== null) {\n\t        // Extend the base object\n\t        for (name in options) {\n\t          // IE8 will iterate over properties of objects like \"indexOf\"\n\t          if (!options.hasOwnProperty(name)) {\n\t            continue;\n\t          }\n\t\n\t          src = target[name];\n\t          copy = options[name];\n\t\n\t          // Prevent never-ending loop\n\t          if (target === copy) {\n\t            continue;\n\t          }\n\t\n\t          // Recurse if we're merging plain objects or arrays\n\t          if (deep && copy && (copy.constructor == Object || (copyIsArray = (copy.constructor == Array)))) {\n\t            if (copyIsArray) {\n\t              copyIsArray = false;\n\t              // Overwrite the source with a copy of the array to merge in\n\t              clone = [];\n\t            } else {\n\t              clone = src && src.constructor == Object ? src : {};\n\t            }\n\t\n\t            // Never move original objects, clone them\n\t            target[name] = Util.merge(clone, copy);\n\t\n\t          // Don't bring in undefined values\n\t          } else if (copy !== undefined) {\n\t            target[name] = copy;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    // Return the modified object\n\t    return target;\n\t  },\n\t\n\t  copy: function(obj) {\n\t    var dest;\n\t    if (typeof obj === 'object') {\n\t      if (obj.constructor == Object) {\n\t        dest = {};\n\t      } else if (obj.constructor == Array) {\n\t        dest = [];\n\t      }\n\t    }\n\t\n\t    Util.merge(dest, obj);\n\t    return dest;\n\t  },\n\t\n\t  parseUriOptions: {\n\t    strictMode: false,\n\t    key: [\"source\",\"protocol\",\"authority\",\"userInfo\",\"user\",\"password\",\"host\",\"port\",\"relative\",\"path\",\"directory\",\"file\",\"query\",\"anchor\"],\n\t    q:   {\n\t      name:   \"queryKey\",\n\t      parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n\t    },\n\t    parser: {\n\t      strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n\t      loose:  /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n\t    }\n\t  },\n\t\n\t  parseUri: function(str) {\n\t    if (!str || (typeof str !== 'string' && !(str instanceof String))) {\n\t      throw new Error('Util.parseUri() received invalid input');\n\t    }\n\t\n\t    var o = Util.parseUriOptions;\n\t    var m = o.parser[o.strictMode ? \"strict\" : \"loose\"].exec(str);\n\t    var uri = {};\n\t    var i = 14;\n\t\n\t    while (i--) {\n\t      uri[o.key[i]] = m[i] || \"\";\n\t    }\n\t\n\t    uri[o.q.name] = {};\n\t    uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n\t      if ($1) {\n\t        uri[o.q.name][$1] = $2;\n\t      }\n\t    });\n\t\n\t    return uri;\n\t  },\n\t\n\t  sanitizeUrl: function(url) {\n\t    if (!url || (typeof url !== 'string' && !(url instanceof String))) {\n\t      throw new Error('Util.sanitizeUrl() received invalid input');\n\t    }\n\t\n\t    var baseUrlParts = Util.parseUri(url);\n\t    // remove a trailing # if there is no anchor\n\t    if (baseUrlParts.anchor === '') {\n\t      baseUrlParts.source = baseUrlParts.source.replace('#', '');\n\t    }\n\t\n\t    url = baseUrlParts.source.replace('?' + baseUrlParts.query, '');\n\t    return url;\n\t  },\n\t\n\t  traverse: function(obj, func) {\n\t    var k;\n\t    var v;\n\t    var i;\n\t    var isObj = typeof obj === 'object';\n\t    var keys = [];\n\t\n\t    if (isObj) {\n\t      if (obj.constructor === Object) {\n\t        for (k in obj) {\n\t          if (obj.hasOwnProperty(k)) {\n\t            keys.push(k);\n\t          }\n\t        }\n\t      } else if (obj.constructor === Array) {\n\t        for (i = 0; i < obj.length; ++i) {\n\t          keys.push(i);\n\t        }\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < keys.length; ++i) {\n\t      k = keys[i];\n\t      v = obj[k];\n\t      isObj = typeof v === 'object';\n\t      if (isObj) {\n\t        if (v === null) {\n\t          obj[k] = func(k, v);\n\t        } else if (v.constructor === Object) {\n\t          obj[k] = Util.traverse(v, func);\n\t        } else if (v.constructor === Array) {\n\t          obj[k] = Util.traverse(v, func);\n\t        } else {\n\t          obj[k] = func(k, v);\n\t        }\n\t      } else {\n\t        obj[k] = func(k, v);\n\t      }\n\t    }\n\t\n\t    return obj;\n\t\n\t  },\n\t\n\t  redact: function(val) {\n\t    val = String(val);\n\t    return new Array(val.length + 1).join('*');\n\t  },\n\t\n\t  // from http://stackoverflow.com/a/8809472/1138191\n\t  uuid4: function() {\n\t    var d = new Date().getTime();\n\t    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n\t      var r = (d + Math.random()*16)%16 | 0;\n\t      d = Math.floor(d/16);\n\t      return (c=='x' ? r : (r&0x7|0x8)).toString(16);\n\t    });\n\t    return uuid;\n\t  }\n\t};\n\t\n\tmodule.exports = Util;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar RollbarJSON = null;\n\t\n\tfunction setupJSON(JSON) {\n\t  RollbarJSON = JSON;\n\t}\n\t\n\tvar XHR = {\n\t  XMLHttpFactories: [\n\t      function () {return new XMLHttpRequest();},\n\t      function () {return new ActiveXObject(\"Msxml2.XMLHTTP\");},\n\t      function () {return new ActiveXObject(\"Msxml3.XMLHTTP\");},\n\t      function () {return new ActiveXObject(\"Microsoft.XMLHTTP\");}\n\t  ],\n\t  createXMLHTTPObject: function() {\n\t    var xmlhttp = false;\n\t    var factories = XHR.XMLHttpFactories;\n\t    var i;\n\t    var numFactories = factories.length;\n\t    for (i = 0; i < numFactories; i++) {\n\t      try {\n\t        xmlhttp = factories[i]();\n\t        break;\n\t      } catch (e) {\n\t        // pass\n\t      }\n\t    }\n\t    return xmlhttp;\n\t  },\n\t  post: function(url, accessToken, payload, callback) {\n\t    if (typeof payload !== 'object') {\n\t      throw new Error('Expected an object to POST');\n\t    }\n\t    payload = RollbarJSON.stringify(payload);\n\t    callback = callback || function() {};\n\t    var request = XHR.createXMLHTTPObject();\n\t    if (request) {\n\t      try {\n\t        try {\n\t          var onreadystatechange = function(args) {\n\t            try {\n\t              if (onreadystatechange && request.readyState === 4) {\n\t                onreadystatechange = undefined;\n\t\n\t                // TODO(cory): have the notifier log an internal error on non-200 response codes\n\t                if (request.status === 200) {\n\t                  callback(null, RollbarJSON.parse(request.responseText));\n\t                } else if (typeof(request.status) === \"number\" &&\n\t                            request.status >= 400  && request.status < 600) {\n\t                  // return valid http status codes\n\t                  callback(new Error(request.status.toString()));\n\t                } else {\n\t                  // IE will return a status 12000+ on some sort of connection failure,\n\t                  // so we return a blank error\n\t                  // http://msdn.microsoft.com/en-us/library/aa383770%28VS.85%29.aspx\n\t                  callback(new Error());\n\t                }\n\t              }\n\t            } catch (ex) {\n\t              //jquery source mentions firefox may error out while accessing the\n\t              //request members if there is a network error\n\t              //https://github.com/jquery/jquery/blob/a938d7b1282fc0e5c52502c225ae8f0cef219f0a/src/ajax/xhr.js#L111\n\t              var exc;\n\t              if (typeof ex === 'object' && ex.stack) {\n\t                exc = ex;\n\t              } else {\n\t                exc = new Error(ex);\n\t              }\n\t              callback(exc);\n\t            }\n\t          };\n\t\n\t          request.open('POST', url, true);\n\t          if (request.setRequestHeader) {\n\t            request.setRequestHeader('Content-Type', 'application/json');\n\t            request.setRequestHeader('X-Rollbar-Access-Token', accessToken);\n\t          }\n\t          request.onreadystatechange = onreadystatechange;\n\t          request.send(payload);\n\t        } catch (e1) {\n\t          // Sending using the normal xmlhttprequest object didn't work, try XDomainRequest\n\t          if (typeof XDomainRequest !== \"undefined\") {\n\t            var ontimeout = function(args) {\n\t              callback(new Error());\n\t            };\n\t\n\t            var onerror = function(args) {\n\t              callback(new Error());\n\t            };\n\t\n\t            var onload = function(args) {\n\t              callback(null, RollbarJSON.parse(request.responseText));\n\t            };\n\t\n\t            request = new XDomainRequest();\n\t            request.onprogress = function() {};\n\t            request.ontimeout = ontimeout;\n\t            request.onerror = onerror;\n\t            request.onload = onload;\n\t            request.open('POST', url, true);\n\t            request.send(payload);\n\t          }\n\t        }\n\t      } catch (e2) {\n\t        callback(e2);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = {\n\t  XHR: XHR,\n\t  setupJSON: setupJSON\n\t};\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\tmodule.exports = function(src) {\r\n\t\tif (typeof execScript === \"function\")\r\n\t\t\texecScript(src);\r\n\t\telse\r\n\t\t\teval.call(null, src);\r\n\t}\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"var setupCustomJSON=function(JSON){function f(a){return 10>a?\\\"0\\\"+a:a}function quote(a){return escapable.lastIndex=0,escapable.test(a)?'\\\"'+a.replace(escapable,function(a){var b=meta[a];return\\\"string\\\"==typeof b?b:\\\"\\\\\\\\u\\\"+(\\\"0000\\\"+a.charCodeAt(0).toString(16)).slice(-4)})+'\\\"':'\\\"'+a+'\\\"'}function str(a,b){var c,d,e,f,g,h=gap,i=b[a];switch(\\\"function\\\"==typeof rep&&(i=rep.call(b,a,i)),typeof i){case\\\"string\\\":return quote(i);case\\\"number\\\":return isFinite(i)?String(i):\\\"null\\\";case\\\"boolean\\\":case\\\"null\\\":return String(i);case\\\"object\\\":if(!i)return\\\"null\\\";if(gap+=indent,g=[],\\\"[object Array]\\\"===Object.prototype.toString.apply(i)){for(f=i.length,c=0;f>c;c+=1)g[c]=str(c,i)||\\\"null\\\";return e=0===g.length?\\\"[]\\\":gap?\\\"[\\\\n\\\"+gap+g.join(\\\",\\\\n\\\"+gap)+\\\"\\\\n\\\"+h+\\\"]\\\":\\\"[\\\"+g.join(\\\",\\\")+\\\"]\\\",gap=h,e}if(rep&&\\\"object\\\"==typeof rep)for(f=rep.length,c=0;f>c;c+=1)\\\"string\\\"==typeof rep[c]&&(d=rep[c],e=str(d,i),e&&g.push(quote(d)+(gap?\\\": \\\":\\\":\\\")+e));else for(d in i)Object.prototype.hasOwnProperty.call(i,d)&&(e=str(d,i),e&&g.push(quote(d)+(gap?\\\": \\\":\\\":\\\")+e));return e=0===g.length?\\\"{}\\\":gap?\\\"{\\\\n\\\"+gap+g.join(\\\",\\\\n\\\"+gap)+\\\"\\\\n\\\"+h+\\\"}\\\":\\\"{\\\"+g.join(\\\",\\\")+\\\"}\\\",gap=h,e}}\\\"function\\\"!=typeof Date.prototype.toJSON&&(Date.prototype.toJSON=function(){return isFinite(this.valueOf())?this.getUTCFullYear()+\\\"-\\\"+f(this.getUTCMonth()+1)+\\\"-\\\"+f(this.getUTCDate())+\\\"T\\\"+f(this.getUTCHours())+\\\":\\\"+f(this.getUTCMinutes())+\\\":\\\"+f(this.getUTCSeconds())+\\\"Z\\\":null},String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(){return this.valueOf()});var cx=/[\\\\u0000\\\\u00ad\\\\u0600-\\\\u0604\\\\u070f\\\\u17b4\\\\u17b5\\\\u200c-\\\\u200f\\\\u2028-\\\\u202f\\\\u2060-\\\\u206f\\\\ufeff\\\\ufff0-\\\\uffff]/g,escapable=/[\\\\\\\\\\\\\\\"\\\\x00-\\\\x1f\\\\x7f-\\\\x9f\\\\u00ad\\\\u0600-\\\\u0604\\\\u070f\\\\u17b4\\\\u17b5\\\\u200c-\\\\u200f\\\\u2028-\\\\u202f\\\\u2060-\\\\u206f\\\\ufeff\\\\ufff0-\\\\uffff]/g,gap,indent,meta={\\\"\\\\b\\\":\\\"\\\\\\\\b\\\",\\\"\\t\\\":\\\"\\\\\\\\t\\\",\\\"\\\\n\\\":\\\"\\\\\\\\n\\\",\\\"\\\\f\\\":\\\"\\\\\\\\f\\\",\\\"\\\\r\\\":\\\"\\\\\\\\r\\\",'\\\"':'\\\\\\\\\\\"',\\\"\\\\\\\\\\\":\\\"\\\\\\\\\\\\\\\\\\\"},rep;\\\"function\\\"!=typeof JSON.stringify&&(JSON.stringify=function(a,b,c){var d;if(gap=\\\"\\\",indent=\\\"\\\",\\\"number\\\"==typeof c)for(d=0;c>d;d+=1)indent+=\\\" \\\";else\\\"string\\\"==typeof c&&(indent=c);if(rep=b,b&&\\\"function\\\"!=typeof b&&(\\\"object\\\"!=typeof b||\\\"number\\\"!=typeof b.length))throw new Error(\\\"JSON.stringify\\\");return str(\\\"\\\",{\\\"\\\":a})}),\\\"function\\\"!=typeof JSON.parse&&(JSON.parse=function(text,reviver){function walk(a,b){var c,d,e=a[b];if(e&&\\\"object\\\"==typeof e)for(c in e)Object.prototype.hasOwnProperty.call(e,c)&&(d=walk(e,c),void 0!==d?e[c]=d:delete e[c]);return reviver.call(a,b,e)}var j;if(text=String(text),cx.lastIndex=0,cx.test(text)&&(text=text.replace(cx,function(a){return\\\"\\\\\\\\u\\\"+(\\\"0000\\\"+a.charCodeAt(0).toString(16)).slice(-4)})),/^[\\\\],:{}\\\\s]*$/.test(text.replace(/\\\\\\\\(?:[\\\"\\\\\\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g,\\\"@\\\").replace(/\\\"[^\\\"\\\\\\\\\\\\n\\\\r]*\\\"|true|false|null|-?\\\\d+(?:\\\\.\\\\d*)?(?:[eE][+\\\\-]?\\\\d+)?/g,\\\"]\\\").replace(/(?:^|:|,)(?:\\\\s*\\\\[)+/g,\\\"\\\")))return j=eval(\\\"(\\\"+text+\\\")\\\"),\\\"function\\\"==typeof reviver?walk({\\\"\\\":j},\\\"\\\"):j;throw new SyntaxError(\\\"JSON.parse\\\")})};\"\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n\t    'use strict';\n\t    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(10)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports === 'object') {\n\t        module.exports = factory(require('stackframe'));\n\t    } else {\n\t        root.ErrorStackParser = factory(root.StackFrame);\n\t    }\n\t}(this, function ErrorStackParser(StackFrame) {\n\t    'use strict';\n\t\n\t    var FIREFOX_SAFARI_STACK_REGEXP = /\\S+\\:\\d+/;\n\t    var CHROME_IE_STACK_REGEXP = /\\s+at /;\n\t\n\t    return {\n\t        /**\n\t         * Given an Error object, extract the most information from it.\n\t         * @param error {Error}\n\t         * @return Array[StackFrame]\n\t         */\n\t        parse: function ErrorStackParser$$parse(error) {\n\t            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n\t                return this.parseOpera(error);\n\t            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n\t                return this.parseV8OrIE(error);\n\t            } else if (error.stack && error.stack.match(FIREFOX_SAFARI_STACK_REGEXP)) {\n\t                return this.parseFFOrSafari(error);\n\t            } else {\n\t                throw new Error('Cannot parse given Error object');\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Separate line and column numbers from a URL-like string.\n\t         * @param urlLike String\n\t         * @return Array[String]\n\t         */\n\t        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n\t            // Fail-fast but return locations like \"(native)\"\n\t            if (urlLike.indexOf(':') === -1) {\n\t                return [urlLike];\n\t            }\n\t\n\t            var locationParts = urlLike.replace(/[\\(\\)\\s]/g, '').split(':');\n\t            var lastNumber = locationParts.pop();\n\t            var possibleNumber = locationParts[locationParts.length - 1];\n\t            if (!isNaN(parseFloat(possibleNumber)) && isFinite(possibleNumber)) {\n\t                var lineNumber = locationParts.pop();\n\t                return [locationParts.join(':'), lineNumber, lastNumber];\n\t            } else {\n\t                return [locationParts.join(':'), lastNumber, undefined];\n\t            }\n\t        },\n\t\n\t        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n\t            return error.stack.split('\\n').slice(1).map(function (line) {\n\t                var tokens = line.replace(/^\\s+/, '').split(/\\s+/).slice(1);\n\t                var locationParts = this.extractLocation(tokens.pop());\n\t                var functionName = (!tokens[0] || tokens[0] === 'Anonymous') ? undefined : tokens[0];\n\t                return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2]);\n\t            }, this);\n\t        },\n\t\n\t        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n\t            return error.stack.split('\\n').filter(function (line) {\n\t                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP);\n\t            }, this).map(function (line) {\n\t                var tokens = line.split('@');\n\t                var locationParts = this.extractLocation(tokens.pop());\n\t                var functionName = tokens.shift() || undefined;\n\t                return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2]);\n\t            }, this);\n\t        },\n\t\n\t        parseOpera: function ErrorStackParser$$parseOpera(e) {\n\t            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n\t                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n\t                return this.parseOpera9(e);\n\t            } else if (!e.stack) {\n\t                return this.parseOpera10(e);\n\t            } else {\n\t                return this.parseOpera11(e);\n\t            }\n\t        },\n\t\n\t        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n\t            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n\t            var lines = e.message.split('\\n');\n\t            var result = [];\n\t\n\t            for (var i = 2, len = lines.length; i < len; i += 2) {\n\t                var match = lineRE.exec(lines[i]);\n\t                if (match) {\n\t                    result.push(new StackFrame(undefined, undefined, match[2], match[1]));\n\t                }\n\t            }\n\t\n\t            return result;\n\t        },\n\t\n\t        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n\t            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n\t            var lines = e.stacktrace.split('\\n');\n\t            var result = [];\n\t\n\t            for (var i = 0, len = lines.length; i < len; i += 2) {\n\t                var match = lineRE.exec(lines[i]);\n\t                if (match) {\n\t                    result.push(new StackFrame(match[3] || undefined, undefined, match[2], match[1]));\n\t                }\n\t            }\n\t\n\t            return result;\n\t        },\n\t\n\t        // Opera 10.65+ Error.stack very similar to FF/Safari\n\t        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n\t            return error.stack.split('\\n').filter(function (line) {\n\t                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) &&\n\t                    !line.match(/^Error created at/);\n\t            }, this).map(function (line) {\n\t                var tokens = line.split('@');\n\t                var locationParts = this.extractLocation(tokens.pop());\n\t                var functionCall = (tokens.shift() || '');\n\t                var functionName = functionCall\n\t                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n\t                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n\t                var argsRaw;\n\t                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n\t                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n\t                }\n\t                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ? undefined : argsRaw.split(',');\n\t                return new StackFrame(functionName, args, locationParts[0], locationParts[1], locationParts[2]);\n\t            }, this);\n\t        }\n\t    };\n\t}));\n\t\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n\t    'use strict';\n\t    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports === 'object') {\n\t        module.exports = factory();\n\t    } else {\n\t        root.StackFrame = factory();\n\t    }\n\t}(this, function () {\n\t    'use strict';\n\t    function _isNumber(n) {\n\t        return !isNaN(parseFloat(n)) && isFinite(n);\n\t    }\n\t\n\t    function StackFrame(functionName, args, fileName, lineNumber, columnNumber) {\n\t        if (functionName !== undefined) {\n\t            this.setFunctionName(functionName);\n\t        }\n\t        if (args !== undefined) {\n\t            this.setArgs(args);\n\t        }\n\t        if (fileName !== undefined) {\n\t            this.setFileName(fileName);\n\t        }\n\t        if (lineNumber !== undefined) {\n\t            this.setLineNumber(lineNumber);\n\t        }\n\t        if (columnNumber !== undefined) {\n\t            this.setColumnNumber(columnNumber);\n\t        }\n\t    }\n\t\n\t    StackFrame.prototype = {\n\t        getFunctionName: function () {\n\t            return this.functionName;\n\t        },\n\t        setFunctionName: function (v) {\n\t            this.functionName = String(v);\n\t        },\n\t\n\t        getArgs: function () {\n\t            return this.args;\n\t        },\n\t        setArgs: function (v) {\n\t            if (Object.prototype.toString.call(v) !== '[object Array]') {\n\t                throw new TypeError('Args must be an Array');\n\t            }\n\t            this.args = v;\n\t        },\n\t\n\t        // NOTE: Property name may be misleading as it includes the path,\n\t        // but it somewhat mirrors V8's JavaScriptStackTraceApi\n\t        // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's\n\t        // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14\n\t        getFileName: function () {\n\t            return this.fileName;\n\t        },\n\t        setFileName: function (v) {\n\t            this.fileName = String(v);\n\t        },\n\t\n\t        getLineNumber: function () {\n\t            return this.lineNumber;\n\t        },\n\t        setLineNumber: function (v) {\n\t            if (!_isNumber(v)) {\n\t                throw new TypeError('Line Number must be a Number');\n\t            }\n\t            this.lineNumber = Number(v);\n\t        },\n\t\n\t        getColumnNumber: function () {\n\t            return this.columnNumber;\n\t        },\n\t        setColumnNumber: function (v) {\n\t            if (!_isNumber(v)) {\n\t                throw new TypeError('Column Number must be a Number');\n\t            }\n\t            this.columnNumber = Number(v);\n\t        },\n\t\n\t        toString: function() {\n\t            var functionName = this.getFunctionName() || '{anonymous}';\n\t            var args = '(' + (this.getArgs() || []).join(',') + ')';\n\t            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n\t            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n\t            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n\t            return functionName + args + fileName + lineNumber + columnNumber;\n\t        }\n\t    };\n\t\n\t    return StackFrame;\n\t}));\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** rollbar.umd.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 782e46b46bc68d2f3abe\n **/","var globalnotifier = require('../globalnotifier');\nvar notifier = require('../notifier');\n\nfunction setupJSON() {\n  var JSONObject = JSON;\n\n  if (__USE_JSON__) {\n    // This adds the script to this context. We need it since this library\n    // is not a CommonJs or AMD module.\n    require(\"script!../../vendor/json2.min.js\");\n\n    var customJSON = {};\n    setupCustomJSON(customJSON);\n\n    JSONObject = customJSON;\n  }\n\n  globalnotifier.setupJSON(JSONObject);\n}\n\nsetupJSON();\n\nvar config = window._rollbarConfig;\nvar alias = config && config.globalAlias || 'Rollbar';\nvar shimRunning = window[alias] && typeof window[alias].shimId !== 'undefined';\n\n/* We must not initialize the full notifier here if the\n * shim is loaded, snippet_callback will do that for us\n */\nif (!shimRunning && config) {\n  globalnotifier.wrapper.init(config);\n} else {\n  window.Rollbar = globalnotifier.wrapper;\n  // We need to expose Notifier for the snippet\n  window.RollbarNotifier = notifier.Notifier;\n}\n\nmodule.exports = globalnotifier.wrapper;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/bundles/rollbar.umd.js\n ** module id = 0\n ** module chunks = 0\n **/","var notifier = require('./notifier');\n\nvar Notifier = notifier.Notifier;\n// Stub out the wrapped error which is set \nwindow._rollbarWrappedError = null;\n\nfunction setupJSON(JSON) {\n  notifier.setupJSON(JSON);\n}\n\n// Global window.onerror handler\nfunction _rollbarWindowOnError(client, old, args) {\n  if (!args[4] && window._rollbarWrappedError) {\n    args[4] = window._rollbarWrappedError;\n    window._rollbarWrappedError = null;\n  }\n\n  client.uncaughtError.apply(client, args);\n  if (old) {\n    old.apply(window, args);\n  }\n}\n\nfunction _extendListenerPrototype(client, prototype) {\n  if (prototype.hasOwnProperty && prototype.hasOwnProperty('addEventListener')) {\n    var oldAddEventListener = prototype.addEventListener;\n    prototype.addEventListener = function(event, callback, bubble) {\n      oldAddEventListener.call(this, event, client.wrap(callback), bubble);\n    };\n\n    var oldRemoveEventListener = prototype.removeEventListener;\n    prototype.removeEventListener = function(event, callback, bubble) {\n      oldRemoveEventListener.call(this, event, callback && callback._wrapped || callback, bubble);\n    };\n  }\n}\n\n// Add an init() method to do the same things that the shim would do\nvar wrapper = {};\nwrapper.init = function(config, parent) {\n  var notifier = new Notifier(parent);\n  notifier.configure(config);\n\n  if (config.captureUncaught) {\n    // Set the global onerror handler\n    var old = window.onerror;\n\n    window.onerror = function() {\n      var args = Array.prototype.slice.call(arguments, 0);\n      _rollbarWindowOnError(notifier, old, args);\n    };\n\n    // Adapted from https://github.com/bugsnag/bugsnag-js\n    var globals = ['EventTarget', 'Window', 'Node', 'ApplicationCache', 'AudioTrackList', 'ChannelMergerNode', 'CryptoOperation', 'EventSource',\n     'FileReader', 'HTMLUnknownElement', 'IDBDatabase', 'IDBRequest', 'IDBTransaction', 'KeyOperation', 'MediaController',\n     'MessagePort', 'ModalWindow', 'Notification', 'SVGElementInstance', 'Screen', 'TextTrack', 'TextTrackCue',\n     'TextTrackList', 'WebSocket', 'WebSocketWorker', 'Worker', 'XMLHttpRequest', 'XMLHttpRequestEventTarget',\n     'XMLHttpRequestUpload'];\n\n    var i;\n    var global;\n    for (i = 0; i < globals.length; ++i) {\n      global = globals[i];\n\n      if (window[global] && window[global].prototype) {\n        _extendListenerPrototype(notifier, window[global].prototype);\n      }\n    }\n  }\n\n  window.Rollbar = notifier;\n  // Finally, start processing payloads using the global notifier\n  Notifier.processPayloads();\n  return notifier;\n};\n\n\nmodule.exports = {\n  wrapper: wrapper,\n  setupJSON: setupJSON\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/globalnotifier.js\n ** module id = 1\n ** module chunks = 0\n **/","var error_parser = require('./error_parser');\nvar Util = require('./util');\nvar xhr = require('./xhr');\n\nvar XHR = xhr.XHR;\nvar RollbarJSON = null;\n\nfunction setupJSON(JSON) {\n  RollbarJSON = JSON;\n  xhr.setupJSON(JSON);\n}\n\n// Updated by the build process to match package.json\nNotifier.NOTIFIER_VERSION = __NOTIFIER_VERSION__;\nNotifier.DEFAULT_ENDPOINT = __DEFAULT_ENDPOINT__;\nNotifier.DEFAULT_SCRUB_FIELDS = __DEFAULT_SCRUB_FIELDS__;\nNotifier.DEFAULT_LOG_LEVEL = __DEFAULT_LOG_LEVEL__;\nNotifier.DEFAULT_REPORT_LEVEL = __DEFAULT_REPORT_LEVEL__;\nNotifier.DEFAULT_UNCAUGHT_ERROR_LEVEL = __DEFAULT_UNCAUGHT_ERROR_LEVEL;\nNotifier.DEFAULT_ITEMS_PER_MIN = __DEFAULT_ITEMS_PER_MIN__;\nNotifier.DEFAULT_MAX_ITEMS = __DEFAULT_MAX_ITEMS__;\n\nNotifier.LEVELS = {\n  debug: 0,\n  info: 1,\n  warning: 2,\n  error: 3,\n  critical: 4\n};\n\n// This is the global queue where all notifiers will put their\n// payloads to be sent to Rollbar.\nwindow._rollbarPayloadQueue = [];\n\n// This contains global options for all Rollbar notifiers.\nwindow._globalRollbarOptions = {\n  startTime: (new Date()).getTime(),\n  maxItems: Notifier.DEFAULT_MAX_ITEMS,\n  itemsPerMinute: Notifier.DEFAULT_ITEMS_PER_MIN\n};\n\nvar _topLevelNotifier;\n\nfunction topLevelNotifier() {\n  return _topLevelNotifier;\n}\n\nfunction Notifier(parentNotifier) {\n  // Save the first notifier so we can use it to send system messages like\n  // when the rate limit is reached.\n  _topLevelNotifier = _topLevelNotifier || this;\n\n  var protocol = window.location.protocol;\n  if (protocol.indexOf('http') !== 0) {\n    protocol = 'https:';\n  }\n  var endpoint = protocol + '//' + Notifier.DEFAULT_ENDPOINT;\n  this.options = {\n    enabled: true,\n    endpoint: endpoint,\n    environment: 'production',\n    scrubFields: Util.copy(Notifier.DEFAULT_SCRUB_FIELDS),\n    checkIgnore: null,\n    logLevel: Notifier.DEFAULT_LOG_LEVEL,\n    reportLevel: Notifier.DEFAULT_REPORT_LEVEL,\n    uncaughtErrorLevel: Notifier.DEFAULT_UNCAUGHT_ERROR_LEVEL,\n    payload: {}\n  };\n\n  this.lastError = null;\n  this.plugins = {};\n  this.parentNotifier = parentNotifier;\n  this.logger = function() {\n    if (window.console && typeof window.console.log === 'function') {\n      var args = ['Rollbar:'].concat(Array.prototype.slice.call(arguments, 0));\n      window.console.log(args);\n    }\n  };\n\n  if (parentNotifier) {\n    // If the parent notifier has the shimId\n    // property it means that it's a Rollbar shim.\n    if (parentNotifier.hasOwnProperty('shimId')) {\n      // After we set this, the shim is just a proxy to this\n      // Notifier instance.\n      parentNotifier.notifier = this;\n    } else {\n      this.logger = parentNotifier.logger;\n      this.configure(parentNotifier.options);\n    }\n  }\n}\n\n\nNotifier._generateLogFn = function(level) {\n  return _wrapNotifierFn(function _logFn() {\n    var args = this._getLogArgs(arguments);\n\n    return this._log(level || args.level || this.options.logLevel || Notifier.DEFAULT_LOG_LEVEL,\n        args.message, args.err, args.custom, args.callback);\n  });\n};\n\n\n/*\n * Returns an Object with keys:\n * {\n *  message: String,\n *  err: Error,\n *  custom: Object\n * }\n */\nNotifier.prototype._getLogArgs = function(args) {\n  var level = this.options.logLevel || Notifier.DEFAULT_LOG_LEVEL;\n  var ts;\n  var message;\n  var err;\n  var custom;\n  var callback;\n\n  var argT;\n  var arg;\n  for (var i = 0; i < args.length; ++i) {\n    arg = args[i];\n    argT = typeof arg;\n    if (argT === 'string') {\n      message = arg;\n    } else if (argT === 'function') {\n      callback = _wrapNotifierFn(arg, this);  // wrap the callback in a try/catch block\n    } else if (arg && argT === 'object') {\n      if (arg.constructor.name === 'Date') {\n        ts = arg;\n      } else if (arg instanceof Error ||\n          arg.prototype === Error.prototype ||\n          arg.hasOwnProperty('stack') ||\n          (typeof DOMException !== \"undefined\" && arg instanceof DOMException)) {\n        err = arg;\n      } else {\n        custom = arg;\n      }\n    }\n  }\n\n  // TODO(cory): somehow pass in timestamp too...\n\n  return {\n    level: level,\n    message: message,\n    err: err,\n    custom: custom,\n    callback: callback\n  };\n};\n\n\nNotifier.prototype._route = function(path) {\n  var endpoint = this.options.endpoint;\n\n  var endpointTrailingSlash = /\\/$/.test(endpoint);\n  var pathBeginningSlash = /^\\//.test(path);\n\n  if (endpointTrailingSlash && pathBeginningSlash) {\n    path = path.substring(1);\n  } else if (!endpointTrailingSlash && !pathBeginningSlash) {\n    path = '/' + path;\n  }\n\n  return endpoint + path;\n};\n\n\n/*\n * Given a queue containing each call to the shim, call the\n * corresponding method on this instance.\n *\n * shim queue contains:\n *\n * {shim: Rollbar, method: 'info', args: ['hello world', exc], ts: Date}\n */\nNotifier.prototype._processShimQueue = function(shimQueue) {\n  // implement me\n  var shim;\n  var obj;\n  var tmp;\n  var method;\n  var args;\n  var shimToNotifier = {};\n  var parentShim;\n  var parentNotifier;\n  var notifier;\n\n  // For each of the messages in the shimQueue we need to:\n  // 1. get/create the notifier for that shim\n  // 2. apply the message to the notifier\n  while ((obj = shimQueue.shift())) {\n    shim = obj.shim;\n    method = obj.method;\n    args = obj.args;\n    parentShim = shim.parentShim;\n\n    // Get the current notifier based on the shimId\n    notifier = shimToNotifier[shim.shimId];\n    if (!notifier) {\n\n      // If there is no notifier associated with the shimId\n      // Check to see if there's a parent shim\n      if (parentShim) {\n\n        // If there is a parent shim, get the parent notifier\n        // and create a new notifier for the current shim.\n        parentNotifier = shimToNotifier[parentShim.shimId];\n\n        // Create a new Notifier which will process all of the shim's\n        // messages\n        notifier = new Notifier(parentNotifier);\n      } else {\n        // If there is no parent, assume the shim is the top\n        // level shim and thus, should use this as the notifier.\n        notifier = this;\n      }\n\n      // Save off the shimId->notifier mapping\n      shimToNotifier[shim.shimId] = notifier;\n    }\n\n    if (notifier[method] && typeof notifier[method] === 'function') {\n      notifier[method].apply(notifier, args);\n    }\n  }\n};\n\n\n/*\n * Builds and returns an Object that will be enqueued onto the\n * window._rollbarPayloadQueue array to be sent to Rollbar.\n */\nNotifier.prototype._buildPayload = function(ts, level, message, stackInfo, custom) {\n  var accessToken = this.options.accessToken;\n\n  // NOTE(cory): DEPRECATED\n  // Pass in {payload: {environment: 'production'}} instead of just {environment: 'production'}\n  var environment = this.options.environment;\n\n  var notifierOptions = Util.copy(this.options.payload);\n  var uuid = Util.uuid4();\n\n  if (Notifier.LEVELS[level] === undefined) {\n    throw new Error('Invalid level');\n  }\n\n  if (!message && !stackInfo && !custom) {\n    throw new Error('No message, stack info or custom data');\n  }\n\n  var payloadData = {\n    environment: environment,\n    endpoint: this.options.endpoint,\n    uuid: uuid,\n    level: level,\n    platform: 'browser',\n    framework: 'browser-js',\n    language: 'javascript',\n    body: this._buildBody(message, stackInfo, custom),\n    request: {\n      url: window.location.href,\n      query_string: window.location.search,\n      user_ip: \"$remote_ip\"\n    },\n    client: {\n      runtime_ms: ts.getTime() - window._globalRollbarOptions.startTime,\n      timestamp: Math.round(ts.getTime() / 1000),\n      javascript: {\n        browser: window.navigator.userAgent,\n        language: window.navigator.language,\n        cookie_enabled: window.navigator.cookieEnabled,\n        screen: {\n          width: window.screen.width,\n          height: window.screen.height\n        },\n        plugins: this._getBrowserPlugins()\n      }\n    },\n    server: {},\n    notifier: {\n      name: 'rollbar-browser-js',\n      version: Notifier.NOTIFIER_VERSION\n    }\n  };\n\n  if (notifierOptions.body) {\n    delete notifierOptions.body;\n  }\n\n  // Overwrite the options from configure() with the payload\n  // data.\n  var payload = {\n    access_token: accessToken,\n    data: Util.merge(payloadData, notifierOptions)\n  };\n\n  // Only scrub the data section since we never want to scrub \"access_token\"\n  // even if it's in the scrub fields\n  this._scrub(payload.data);\n\n  return payload;\n};\n\n\nNotifier.prototype._buildBody = function(message, stackInfo, custom) {\n  var body;\n  if (stackInfo) {\n    body = this._buildPayloadBodyTrace(message, stackInfo, custom);\n  } else {\n    body = this._buildPayloadBodyMessage(message, custom);\n  }\n  return body;\n};\n\n\nNotifier.prototype._buildPayloadBodyMessage = function(message, custom) {\n  if (!message) {\n    if (custom) {\n      message = RollbarJSON.stringify(custom);\n    } else {\n      message = '';\n    }\n  }\n  var result = {\n    body: message\n  };\n\n  if (custom) {\n    result.extra = Util.copy(custom);\n  }\n\n  return {\n    message: result\n  };\n};\n\n\nNotifier.prototype._buildPayloadBodyTrace = function(description, stackInfo, custom) {\n  var guess = _guessErrorClass(stackInfo.message);\n  var className = stackInfo.name || guess[0];\n  var message = guess[1];\n  var trace = {\n    exception: {\n      'class': className,\n      message: message\n    }\n  };\n\n  if (description) {\n    trace.exception.description = description || 'uncaught exception';\n  }\n\n  // Transform a TraceKit stackInfo object into a Rollbar trace\n  if (stackInfo.stack) {\n    var stackFrame;\n    var frame;\n    var code;\n    var pre;\n    var post;\n    var contextLength;\n    var i, j, mid;\n\n    trace.frames = [];\n    for (i = 0; i < stackInfo.stack.length; ++i) {\n      stackFrame = stackInfo.stack[i];\n      frame = {\n        filename: stackFrame.url ? Util.sanitizeUrl(stackFrame.url) : '(unknown)',\n        lineno: stackFrame.line || null,\n        method: (!stackFrame.func || stackFrame.func === '?') ? '[anonymous]' : stackFrame.func,\n        colno: stackFrame.column\n      };\n\n      code = pre = post = null;\n      contextLength = stackFrame.context ? stackFrame.context.length : 0;\n      if (contextLength) {\n        mid = Math.floor(contextLength / 2);\n        pre = stackFrame.context.slice(0, mid);\n        code = stackFrame.context[mid];\n        post = stackFrame.context.slice(mid);\n      }\n\n      if (code) {\n        frame.code = code;\n      }\n\n      if (pre || post) {\n        frame.context = {};\n        if (pre && pre.length) {\n          frame.context.pre = pre;\n        }\n        if (post && post.length) {\n          frame.context.post = post;\n        }\n      }\n\n      if (stackFrame.args) {\n        frame.args = stackFrame.args;\n      }\n\n      trace.frames.push(frame);\n    }\n\n    // NOTE(cory): reverse the frames since rollbar.com expects the most recent call last\n    trace.frames.reverse();\n\n    if (custom) {\n      trace.extra = Util.copy(custom);\n    }\n    return {trace: trace};\n  } else {\n    // no frames - not useful as a trace. just report as a message.\n    return this._buildPayloadBodyMessage(className + ': ' + message, custom);\n  }\n};\n\n\nNotifier.prototype._getBrowserPlugins = function() {\n  if (!this._browserPlugins) {\n    var navPlugins = (window.navigator.plugins || []);\n    var cur;\n    var numPlugins = navPlugins.length;\n    var plugins = [];\n    var i;\n    for (i = 0; i < numPlugins; ++i) {\n      cur = navPlugins[i];\n      plugins.push({name: cur.name, description: cur.description});\n    }\n    this._browserPlugins = plugins;\n  }\n  return this._browserPlugins;\n};\n\n\n/*\n * Does an in-place modification of obj such that:\n * 1. All keys that match the notifier's options.scrubFields\n *    list will be normalized into all '*'\n * 2. Any query string params that match the same criteria will have\n *    their values normalized as well.\n */\nNotifier.prototype._scrub = function(obj) {\n  function redactQueryParam(match, paramPart, dummy1,\n      dummy2, dummy3, valPart, offset, string) {\n    return paramPart + Util.redact(valPart);\n  }\n\n  function paramScrubber(v) {\n    var i;\n    if (typeof(v) === 'string') {\n      for (i = 0; i < queryRes.length; ++i) {\n        v = v.replace(queryRes[i], redactQueryParam);\n      }\n    }\n    return v;\n  }\n\n  function valScrubber(k, v) {\n    var i;\n    for (i = 0; i < paramRes.length; ++i) {\n      if (paramRes[i].test(k)) {\n        v = Util.redact(v);\n        break;\n      }\n    }\n    return v;\n  }\n\n  function scrubber(k, v) {\n    var tmpV = valScrubber(k, v);\n    if (tmpV === v) {\n      return paramScrubber(tmpV);\n    } else {\n      return tmpV;\n    }\n  }\n\n  var scrubFields = this.options.scrubFields;\n  var paramRes = this._getScrubFieldRegexs(scrubFields);\n  var queryRes = this._getScrubQueryParamRegexs(scrubFields);\n\n  Util.traverse(obj, scrubber);\n  return obj;\n};\n\n\nNotifier.prototype._getScrubFieldRegexs = function(scrubFields) {\n  var ret = [];\n  var pat;\n  for (var i = 0; i < scrubFields.length; ++i) {\n    pat = '\\\\[?(%5[bB])?' + scrubFields[i] + '\\\\[?(%5[bB])?\\\\]?(%5[dD])?';\n    ret.push(new RegExp(pat, 'i'));\n  }\n  return ret;\n};\n\n\nNotifier.prototype._getScrubQueryParamRegexs = function(scrubFields) {\n  var ret = [];\n  var pat;\n  for (var i = 0; i < scrubFields.length; ++i) {\n    pat = '\\\\[?(%5[bB])?' + scrubFields[i] + '\\\\[?(%5[bB])?\\\\]?(%5[dD])?';\n    ret.push(new RegExp('(' + pat + '=)([^&\\\\n]+)', 'igm'));\n  }\n  return ret;\n};\n\nNotifier.prototype._urlIsWhitelisted = function(payload){\n  var whitelist, trace, frame, filename, frameLength, url, listLength, urlRegex;\n  var i, j;\n\n  try {\n    whitelist = this.options.hostWhiteList;\n    trace = payload.data.body.trace;\n\n    if (!whitelist || whitelist.length === 0) { return true; }\n    if (!trace) { return true; }\n\n    listLength = whitelist.length;\n    frameLength = trace.frames.length;\n    for (i = 0; i < frameLength; i++) {\n      frame = trace.frames[i];\n      filename = frame.filename;\n      if (typeof filename !== \"string\") { return true; }\n      for (j = 0; j < listLength; j++) {\n        url = whitelist[j];\n        urlRegex = new RegExp(url);\n\n        if (urlRegex.test(filename)){\n          return true;\n        }\n      }\n    }\n  } catch (e) {\n    this.configure({hostWhiteList: null});\n    this.error(\"Error while reading your configuration's hostWhiteList option. Removing custom hostWhiteList.\", e);\n    return true;\n  }\n\n  return false;\n};\n\nNotifier.prototype._messageIsIgnored = function(payload){\n  var exceptionMessage, i, ignoredMessages, len, messageIsIgnored, rIgnoredMessage, trace;\n  try {\n    messageIsIgnored = false;\n    ignoredMessages = this.options.ignoredMessages;\n    trace = payload.data.body.trace;\n\n    if(!ignoredMessages || ignoredMessages.length === 0) { return false; }\n    if(!trace) { return false; }\n    exceptionMessage = trace.exception.message;\n\n    len = ignoredMessages.length;\n    for(i=0; i < len; i++) {\n      rIgnoredMessage = new RegExp(ignoredMessages[i], \"gi\");\n      messageIsIgnored = rIgnoredMessage.test(exceptionMessage);\n\n      if(messageIsIgnored){\n        break;\n      }\n    }\n  }\n  catch(e) {\n    this.configure({ignoredMessages: null});\n    this.error(\"Error while reading your configuration's ignoredMessages option. Removing custom ignoredMessages.\");\n  }\n\n  return messageIsIgnored;\n};\n\nNotifier.prototype._enqueuePayload = function(payload, isUncaught, callerArgs, callback) {\n\n  var payloadToSend = {\n    callback: callback,\n    accessToken: this.options.accessToken,\n    endpointUrl: this._route('item/'),\n    payload: payload\n  };\n\n  var ignoredCallback = function() {\n    if (callback) {\n      // If the item was ignored call the callback anyway\n      var msg = 'This item was not sent to Rollbar because it was ignored. ' +\n                'This can happen if a custom checkIgnore() function was used ' +\n                'or if the item\\'s level was less than the notifier\\' reportLevel. ' +\n                'See https://rollbar.com/docs/notifier/rollbar.js/configuration for more details.';\n\n      callback(null, {err: 0, result: {id: null, uuid: null, message: msg}});\n    }\n  };\n\n  // Internal checkIgnore will check the level against the minimum\n  // report level from this.options\n  if (this._internalCheckIgnore(isUncaught, callerArgs, payload)) {\n    ignoredCallback();\n    return;\n  }\n\n  // Users can set their own ignore criteria using this.options.checkIgnore()\n  try {\n    if (this.options.checkIgnore &&\n        typeof this.options.checkIgnore === 'function' &&\n        this.options.checkIgnore(isUncaught, callerArgs, payload)) {\n      ignoredCallback();\n      return;\n    }\n  } catch (e) {\n    // Disable the custom checkIgnore and report errors in the checkIgnore function\n    this.configure({checkIgnore: null});\n    this.error('Error while calling custom checkIgnore() function. Removing custom checkIgnore().', e);\n  }\n\n  if (!this._urlIsWhitelisted(payload)) {\n    return;\n  }\n\n  if (this._messageIsIgnored(payload)) {\n    return;\n  }\n\n  if (this.options.verbose) {\n    if (payload.data && payload.data.body && payload.data.body.trace) {\n      var trace = payload.data.body.trace;\n      var exceptionMessage = trace.exception.message;\n      this.logger(exceptionMessage);\n    }\n\n    // FIXME: Some browsers do not output objects as json to the console, and\n    // instead write [object Object], so let's write the message first to ensure that is logged.\n    this.logger('Sending payload -', payloadToSend);\n  }\n\n  if (typeof this.options.logFunction === \"function\") {\n    this.options.logFunction(payloadToSend);\n  }\n\n  try {\n    if (typeof this.options.transform === 'function') {\n      this.options.transform(payload);\n    }\n  } catch (e) {\n    this.configure({transform: null});\n    this.error('Error while calling custom transform() function. Removing custom transform().', e);\n  }\n\n  if (!!this.options.enabled) {\n    window._rollbarPayloadQueue.push(payloadToSend);\n  }\n};\n\n\nNotifier.prototype._internalCheckIgnore = function(isUncaught, callerArgs, payload) {\n  var level = callerArgs[0];\n  var levelVal = Notifier.LEVELS[level] || 0;\n  var reportLevel = Notifier.LEVELS[this.options.reportLevel] || 0;\n\n  if (levelVal < reportLevel) {\n    return true;\n  }\n\n  var plugins = this.options ? this.options.plugins : {};\n  if (plugins && plugins.jquery && plugins.jquery.ignoreAjaxErrors &&\n        payload.body.message) {\n    return payload.body.messagejquery_ajax_error;\n  }\n\n  return false;\n};\n\n\n/*\n * Logs stuff to Rollbar using the default\n * logging level.\n *\n * Can be called with the following, (order doesn't matter but type does):\n * - message: String\n * - err: Error object, must have a .stack property or it will be\n *   treated as custom data\n * - custom: Object containing custom data to be sent along with\n *   the item\n * - callback: Function to call once the item is reported to Rollbar\n * - isUncaught: True if this error originated from an uncaught exception handler\n * - ignoreRateLimit: True if this item should be allowed despite rate limit checks\n */\nNotifier.prototype._log = function(level, message, err, custom, callback, isUncaught, ignoreRateLimit) {\n  var stackInfo = null;\n  if (err) {\n    // If we've already calculated the stack trace for the error, use it.\n    // This can happen for wrapped errors that don't have a \"stack\" property.\n    stackInfo = err._savedStackTrace ? err._savedStackTrace : error_parser.parse(err);\n\n    // Don't report the same error more than once\n    if (err === this.lastError) {\n      return;\n    }\n\n    this.lastError = err;\n  }\n\n  var payload = this._buildPayload(new Date(), level, message, stackInfo, custom);\n  if (ignoreRateLimit) {\n    payload.ignoreRateLimit = true;\n  }\n  this._enqueuePayload(payload, isUncaught ? true : false, [level, message, err, custom], callback);\n};\n\nNotifier.prototype.log = Notifier._generateLogFn();\nNotifier.prototype.debug = Notifier._generateLogFn('debug');\nNotifier.prototype.info = Notifier._generateLogFn('info');\nNotifier.prototype.warn = Notifier._generateLogFn('warning'); // for console.warn() compatibility\nNotifier.prototype.warning = Notifier._generateLogFn('warning');\nNotifier.prototype.error = Notifier._generateLogFn('error');\nNotifier.prototype.critical = Notifier._generateLogFn('critical');\n\n// Adapted from tracekit.js\nNotifier.prototype.uncaughtError = _wrapNotifierFn(function(message, url, lineNo, colNo, err, context) {\n  context = context || null;\n  if (err && err.stack) {\n    this._log(this.options.uncaughtErrorLevel, message, err, context, null, true);\n    return;\n  }\n\n  // NOTE(cory): sometimes users will trigger an \"error\" event\n  // on the window object directly which will result in errMsg\n  // being an Object instead of a string.\n  //\n  if (url && url.stack) {\n    this._log(this.options.uncaughtErrorLevel, message, url, context, null, true);\n    return;\n  }\n\n  var location = {\n    'url': url || '',\n    'line': lineNo\n  };\n  location.func = error_parser.guessFunctionName(location.url, location.line);\n  location.context = error_parser.gatherContext(location.url, location.line);\n  var stack = {\n    'mode': 'onerror',\n    'message': message || 'uncaught exception',\n    'url': document.location.href,\n    'stack': [location],\n    'useragent': navigator.userAgent\n  };\n  if (err) {\n    stack = err._savedStackTrace || error_parser.parse(err);\n  }\n\n  var payload = this._buildPayload(new Date(), this.options.uncaughtErrorLevel, message, stack);\n  this._enqueuePayload(payload, true, [this.options.uncaughtErrorLevel, message, url, lineNo, colNo, err]);\n});\n\n\nNotifier.prototype.global = _wrapNotifierFn(function(options) {\n  options = options || {};\n  Util.merge(window._globalRollbarOptions, options);\n  if (options.maxItems !== undefined) {\n    rateLimitCounter = 0;\n  }\n\n  if (options.itemsPerMinute !== undefined) {\n    rateLimitPerMinCounter = 0;\n  }\n});\n\n\nNotifier.prototype.configure = _wrapNotifierFn(function(options) {\n  // TODO(cory): only allow non-payload keys that we understand\n\n  // Make a copy of the options object for this notifier\n  Util.merge(this.options, options);\n});\n\n/*\n * Create a new Notifier instance which has the same options\n * as the current notifier + options to override them.\n */\nNotifier.prototype.scope = _wrapNotifierFn(function(payloadOptions) {\n  var scopedNotifier = new Notifier(this);\n  Util.merge(scopedNotifier.options.payload, payloadOptions);\n  return scopedNotifier;\n});\n\nNotifier.prototype.wrap = function(f, context) {\n  var _this = this;\n  var ctxFn;\n  if (typeof context === 'function') {\n    ctxFn = context;\n  } else {\n    ctxFn = function() { return context || {}; };\n  }\n\n  if (typeof f !== 'function') {\n    return f;\n  }\n\n  // If the given function is already a wrapped function, just\n  // return it instead of wrapping twice\n  if (f._isWrap) {\n    return f;\n  }\n\n  if (!f._wrapped) {\n    f._wrapped = function () {\n      try {\n        return f.apply(this, arguments);\n      } catch(e) {\n        if (!e.stack) {\n          e._savedStackTrace = error_parser.parse(e);\n        }\n        e._rollbarContext = ctxFn() || {};\n        e._rollbarContext._wrappedSource = f.toString();\n\n        window._rollbarWrappedError = e;\n        throw e;\n      }\n    };\n\n    f._wrapped._isWrap = true;\n\n    for (var prop in f) {\n      if (f.hasOwnProperty(prop)) {\n        f._wrapped[prop] = f[prop];\n      }\n    }\n  }\n\n  return f._wrapped;\n};\n\n/***** Misc *****/\n\nfunction _wrapNotifierFn(fn, ctx) {\n  return function() {\n    var self = ctx || this;\n    try {\n      return fn.apply(self, arguments);\n    } catch (e) {\n      if (self) {\n        self.logger(e);\n      }\n    }\n  };\n}\n\n\nvar ERR_CLASS_REGEXP = new RegExp('^(([a-zA-Z0-9-_$ ]*): *)?(Uncaught )?([a-zA-Z0-9-_$ ]*): ');\nfunction _guessErrorClass(errMsg) {\n  if (!errMsg) {\n    return [\"Unknown error. There was no error message to display.\", \"\"];\n  }\n  var errClassMatch = errMsg.match(ERR_CLASS_REGEXP);\n  var errClass = '(unknown)';\n\n  if (errClassMatch) {\n    errClass = errClassMatch[errClassMatch.length - 1];\n    errMsg = errMsg.replace((errClassMatch[errClassMatch.length - 2] || '') + errClass + ':', '');\n    errMsg = errMsg.replace(/(^[\\s]+|[\\s]+$)/g, '');\n  }\n  return [errClass, errMsg];\n}\n\n/***** Payload processor *****/\n\nvar payloadProcessorTimeout;\nNotifier.processPayloads = function(immediate) {\n  if (!payloadProcessorTimeout || immediate) {\n    _payloadProcessorTimer(immediate);\n  }\n};\n\n\nfunction _payloadProcessorTimer(immediate) {\n  var payloadObj;\n  while ((payloadObj = window._rollbarPayloadQueue.shift())) {\n    _processPayload(payloadObj.endpointUrl, payloadObj.accessToken, payloadObj.payload, payloadObj.callback);\n  }\n  if (!immediate) {\n    payloadProcessorTimeout = setTimeout(_payloadProcessorTimer, 1000);\n  }\n}\n\n\nvar rateLimitStartTime = new Date().getTime();\nvar rateLimitCounter = 0;\nvar rateLimitPerMinCounter = 0;\nfunction _processPayload(url, accessToken, payload, callback) {\n  callback = callback || function cb() {};\n  var now = new Date().getTime();\n  if (now - rateLimitStartTime >= 60000) {\n    rateLimitStartTime = now;\n    rateLimitPerMinCounter = 0;\n  }\n\n  // Check to see if we have a rate limit set or if\n  // the rate limit has been met/exceeded.\n  var globalRateLimit = window._globalRollbarOptions.maxItems;\n  var globalRateLimitPerMin = window._globalRollbarOptions.itemsPerMinute;\n  var checkOverRateLimit = function() { return !payload.ignoreRateLimit && globalRateLimit >= 1 && rateLimitCounter >= globalRateLimit; };\n  var checkOverRateLimitPerMin = function() { return !payload.ignoreRateLimit && globalRateLimitPerMin >= 1 && rateLimitPerMinCounter >= globalRateLimitPerMin; };\n\n  if (checkOverRateLimit()) {\n    callback(new Error(globalRateLimit + ' max items reached'));\n    return;\n  } else if (checkOverRateLimitPerMin()) {\n    callback(new Error(globalRateLimitPerMin + ' items per minute reached'));\n    return;\n  } else {\n    rateLimitCounter++;\n    rateLimitPerMinCounter++;\n\n    // Check to see if we have just reached the rate limit. If so, notify the customer.\n    if (checkOverRateLimit()) {\n      _topLevelNotifier._log(_topLevelNotifier.options.uncaughtErrorLevel, //level\n          'maxItems has been hit. Ignoring errors for the remainder of the current page load.', // message\n          null, // err\n          {maxItems: globalRateLimit}, // custom\n          null,  // callback\n          false, // isUncaught\n          true); // ignoreRateLimit\n    }\n    // remove this key since it's only used for internal notifier logic\n    if (payload.ignoreRateLimit) {\n      delete payload.ignoreRateLimit;\n    }\n  }\n\n  // There's either no rate limit or we haven't met it yet so\n  // go ahead and send it.\n  XHR.post(url, accessToken, payload, function xhrCallback(err, resp) {\n    if (err) {\n      return callback(err);\n    }\n\n    // TODO(cory): parse resp as JSON\n    return callback(null, resp);\n  });\n}\n\nmodule.exports = {\n  Notifier: Notifier,\n  setupJSON: setupJSON,\n  topLevelNotifier: topLevelNotifier\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/notifier.js\n ** module id = 2\n ** module chunks = 0\n **/","require(\"!!/home/jon/rollbar/rollbar.js/node_modules/script-loader/addScript.js\")(require(\"!!/home/jon/rollbar/rollbar.js/node_modules/script-loader/node_modules/raw-loader/index.js!/home/jon/rollbar/rollbar.js/vendor/json2.min.js\")+\"\\n\\n// SCRIPT-LOADER FOOTER\\n//# sourceURL=script:///home/jon/rollbar/rollbar.js/vendor/json2.min.js\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/script-loader!./vendor/json2.min.js\n ** module id = 3\n ** module chunks = 0\n **/","var ErrorStackParser = require('error-stack-parser');\n\nvar UNKNOWN_FUNCTION = '?';\n\n\nfunction guessFunctionName(url, line) {\n  return UNKNOWN_FUNCTION;\n}\n\nfunction gatherContext(url, line) {\n  return null;\n}\n\nfunction Frame(stackFrame) {\n  var data = {};\n\n  data._stackFrame = stackFrame;\n\n  data.url = stackFrame.fileName;\n  data.line = stackFrame.lineNumber;\n  data.func = stackFrame.functionName;\n  data.column = stackFrame.columnNumber;\n  data.args = stackFrame.args;\n\n  data.context = gatherContext(data.url, data.line);\n\n  return data;\n};\n\nfunction Stack(e) {\n  function getStack() {\n    var parserStack = [];\n\n    try {\n      parserStack = ErrorStackParser.parse(e);\n    } catch(e) {\n      parserStack = [];\n    }\n\n    var stack = [];\n\n    for (var i = 0; i < parserStack.length; i++) {\n      stack.push(new Frame(parserStack[i]));\n    }\n\n    return stack;\n  }\n\n  return {\n    stack: getStack(),\n    message: e.message,\n    name: e.name\n  };\n};\n\nfunction parse(e) {\n  return new Stack(e);\n}\n\nmodule.exports = {\n  guessFunctionName: guessFunctionName,\n  gatherContext: gatherContext,\n  parse: parse,\n  Stack: Stack,\n  Frame: Frame\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/error_parser.js\n ** module id = 4\n ** module chunks = 0\n **/","var Util = {\n  // modified from https://github.com/jquery/jquery/blob/master/src/core.js#L127\n  merge: function() {\n    var options, name, src, copy, copyIsArray, clone,\n      target = arguments[0] || {},\n      i = 1,\n      length = arguments.length,\n      deep = true;\n\n    // Handle case when target is a string or something (possible in deep copy)\n    if (typeof target !== \"object\" && typeof target !== 'function') {\n      target = {};\n    }\n\n    for (; i < length; i++) {\n      // Only deal with non-null/undefined values\n      if ((options = arguments[i]) !== null) {\n        // Extend the base object\n        for (name in options) {\n          // IE8 will iterate over properties of objects like \"indexOf\"\n          if (!options.hasOwnProperty(name)) {\n            continue;\n          }\n\n          src = target[name];\n          copy = options[name];\n\n          // Prevent never-ending loop\n          if (target === copy) {\n            continue;\n          }\n\n          // Recurse if we're merging plain objects or arrays\n          if (deep && copy && (copy.constructor == Object || (copyIsArray = (copy.constructor == Array)))) {\n            if (copyIsArray) {\n              copyIsArray = false;\n              // Overwrite the source with a copy of the array to merge in\n              clone = [];\n            } else {\n              clone = src && src.constructor == Object ? src : {};\n            }\n\n            // Never move original objects, clone them\n            target[name] = Util.merge(clone, copy);\n\n          // Don't bring in undefined values\n          } else if (copy !== undefined) {\n            target[name] = copy;\n          }\n        }\n      }\n    }\n\n    // Return the modified object\n    return target;\n  },\n\n  copy: function(obj) {\n    var dest;\n    if (typeof obj === 'object') {\n      if (obj.constructor == Object) {\n        dest = {};\n      } else if (obj.constructor == Array) {\n        dest = [];\n      }\n    }\n\n    Util.merge(dest, obj);\n    return dest;\n  },\n\n  parseUriOptions: {\n    strictMode: false,\n    key: [\"source\",\"protocol\",\"authority\",\"userInfo\",\"user\",\"password\",\"host\",\"port\",\"relative\",\"path\",\"directory\",\"file\",\"query\",\"anchor\"],\n    q:   {\n      name:   \"queryKey\",\n      parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n    },\n    parser: {\n      strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n      loose:  /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n    }\n  },\n\n  parseUri: function(str) {\n    if (!str || (typeof str !== 'string' && !(str instanceof String))) {\n      throw new Error('Util.parseUri() received invalid input');\n    }\n\n    var o = Util.parseUriOptions;\n    var m = o.parser[o.strictMode ? \"strict\" : \"loose\"].exec(str);\n    var uri = {};\n    var i = 14;\n\n    while (i--) {\n      uri[o.key[i]] = m[i] || \"\";\n    }\n\n    uri[o.q.name] = {};\n    uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n      if ($1) {\n        uri[o.q.name][$1] = $2;\n      }\n    });\n\n    return uri;\n  },\n\n  sanitizeUrl: function(url) {\n    if (!url || (typeof url !== 'string' && !(url instanceof String))) {\n      throw new Error('Util.sanitizeUrl() received invalid input');\n    }\n\n    var baseUrlParts = Util.parseUri(url);\n    // remove a trailing # if there is no anchor\n    if (baseUrlParts.anchor === '') {\n      baseUrlParts.source = baseUrlParts.source.replace('#', '');\n    }\n\n    url = baseUrlParts.source.replace('?' + baseUrlParts.query, '');\n    return url;\n  },\n\n  traverse: function(obj, func) {\n    var k;\n    var v;\n    var i;\n    var isObj = typeof obj === 'object';\n    var keys = [];\n\n    if (isObj) {\n      if (obj.constructor === Object) {\n        for (k in obj) {\n          if (obj.hasOwnProperty(k)) {\n            keys.push(k);\n          }\n        }\n      } else if (obj.constructor === Array) {\n        for (i = 0; i < obj.length; ++i) {\n          keys.push(i);\n        }\n      }\n    }\n\n    for (i = 0; i < keys.length; ++i) {\n      k = keys[i];\n      v = obj[k];\n      isObj = typeof v === 'object';\n      if (isObj) {\n        if (v === null) {\n          obj[k] = func(k, v);\n        } else if (v.constructor === Object) {\n          obj[k] = Util.traverse(v, func);\n        } else if (v.constructor === Array) {\n          obj[k] = Util.traverse(v, func);\n        } else {\n          obj[k] = func(k, v);\n        }\n      } else {\n        obj[k] = func(k, v);\n      }\n    }\n\n    return obj;\n\n  },\n\n  redact: function(val) {\n    val = String(val);\n    return new Array(val.length + 1).join('*');\n  },\n\n  // from http://stackoverflow.com/a/8809472/1138191\n  uuid4: function() {\n    var d = new Date().getTime();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = (d + Math.random()*16)%16 | 0;\n      d = Math.floor(d/16);\n      return (c=='x' ? r : (r&0x7|0x8)).toString(16);\n    });\n    return uuid;\n  }\n};\n\nmodule.exports = Util;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util.js\n ** module id = 5\n ** module chunks = 0\n **/","var RollbarJSON = null;\n\nfunction setupJSON(JSON) {\n  RollbarJSON = JSON;\n}\n\nvar XHR = {\n  XMLHttpFactories: [\n      function () {return new XMLHttpRequest();},\n      function () {return new ActiveXObject(\"Msxml2.XMLHTTP\");},\n      function () {return new ActiveXObject(\"Msxml3.XMLHTTP\");},\n      function () {return new ActiveXObject(\"Microsoft.XMLHTTP\");}\n  ],\n  createXMLHTTPObject: function() {\n    var xmlhttp = false;\n    var factories = XHR.XMLHttpFactories;\n    var i;\n    var numFactories = factories.length;\n    for (i = 0; i < numFactories; i++) {\n      try {\n        xmlhttp = factories[i]();\n        break;\n      } catch (e) {\n        // pass\n      }\n    }\n    return xmlhttp;\n  },\n  post: function(url, accessToken, payload, callback) {\n    if (typeof payload !== 'object') {\n      throw new Error('Expected an object to POST');\n    }\n    payload = RollbarJSON.stringify(payload);\n    callback = callback || function() {};\n    var request = XHR.createXMLHTTPObject();\n    if (request) {\n      try {\n        try {\n          var onreadystatechange = function(args) {\n            try {\n              if (onreadystatechange && request.readyState === 4) {\n                onreadystatechange = undefined;\n\n                // TODO(cory): have the notifier log an internal error on non-200 response codes\n                if (request.status === 200) {\n                  callback(null, RollbarJSON.parse(request.responseText));\n                } else if (typeof(request.status) === \"number\" &&\n                            request.status >= 400  && request.status < 600) {\n                  // return valid http status codes\n                  callback(new Error(request.status.toString()));\n                } else {\n                  // IE will return a status 12000+ on some sort of connection failure,\n                  // so we return a blank error\n                  // http://msdn.microsoft.com/en-us/library/aa383770%28VS.85%29.aspx\n                  callback(new Error());\n                }\n              }\n            } catch (ex) {\n              //jquery source mentions firefox may error out while accessing the\n              //request members if there is a network error\n              //https://github.com/jquery/jquery/blob/a938d7b1282fc0e5c52502c225ae8f0cef219f0a/src/ajax/xhr.js#L111\n              var exc;\n              if (typeof ex === 'object' && ex.stack) {\n                exc = ex;\n              } else {\n                exc = new Error(ex);\n              }\n              callback(exc);\n            }\n          };\n\n          request.open('POST', url, true);\n          if (request.setRequestHeader) {\n            request.setRequestHeader('Content-Type', 'application/json');\n            request.setRequestHeader('X-Rollbar-Access-Token', accessToken);\n          }\n          request.onreadystatechange = onreadystatechange;\n          request.send(payload);\n        } catch (e1) {\n          // Sending using the normal xmlhttprequest object didn't work, try XDomainRequest\n          if (typeof XDomainRequest !== \"undefined\") {\n            var ontimeout = function(args) {\n              callback(new Error());\n            };\n\n            var onerror = function(args) {\n              callback(new Error());\n            };\n\n            var onload = function(args) {\n              callback(null, RollbarJSON.parse(request.responseText));\n            };\n\n            request = new XDomainRequest();\n            request.onprogress = function() {};\n            request.ontimeout = ontimeout;\n            request.onerror = onerror;\n            request.onload = onload;\n            request.open('POST', url, true);\n            request.send(payload);\n          }\n        }\n      } catch (e2) {\n        callback(e2);\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  XHR: XHR,\n  setupJSON: setupJSON\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/xhr.js\n ** module id = 6\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(src) {\r\n\tif (typeof execScript === \"function\")\r\n\t\texecScript(src);\r\n\telse\r\n\t\teval.call(null, src);\r\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/script-loader/addScript.js\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = \"var setupCustomJSON=function(JSON){function f(a){return 10>a?\\\"0\\\"+a:a}function quote(a){return escapable.lastIndex=0,escapable.test(a)?'\\\"'+a.replace(escapable,function(a){var b=meta[a];return\\\"string\\\"==typeof b?b:\\\"\\\\\\\\u\\\"+(\\\"0000\\\"+a.charCodeAt(0).toString(16)).slice(-4)})+'\\\"':'\\\"'+a+'\\\"'}function str(a,b){var c,d,e,f,g,h=gap,i=b[a];switch(\\\"function\\\"==typeof rep&&(i=rep.call(b,a,i)),typeof i){case\\\"string\\\":return quote(i);case\\\"number\\\":return isFinite(i)?String(i):\\\"null\\\";case\\\"boolean\\\":case\\\"null\\\":return String(i);case\\\"object\\\":if(!i)return\\\"null\\\";if(gap+=indent,g=[],\\\"[object Array]\\\"===Object.prototype.toString.apply(i)){for(f=i.length,c=0;f>c;c+=1)g[c]=str(c,i)||\\\"null\\\";return e=0===g.length?\\\"[]\\\":gap?\\\"[\\\\n\\\"+gap+g.join(\\\",\\\\n\\\"+gap)+\\\"\\\\n\\\"+h+\\\"]\\\":\\\"[\\\"+g.join(\\\",\\\")+\\\"]\\\",gap=h,e}if(rep&&\\\"object\\\"==typeof rep)for(f=rep.length,c=0;f>c;c+=1)\\\"string\\\"==typeof rep[c]&&(d=rep[c],e=str(d,i),e&&g.push(quote(d)+(gap?\\\": \\\":\\\":\\\")+e));else for(d in i)Object.prototype.hasOwnProperty.call(i,d)&&(e=str(d,i),e&&g.push(quote(d)+(gap?\\\": \\\":\\\":\\\")+e));return e=0===g.length?\\\"{}\\\":gap?\\\"{\\\\n\\\"+gap+g.join(\\\",\\\\n\\\"+gap)+\\\"\\\\n\\\"+h+\\\"}\\\":\\\"{\\\"+g.join(\\\",\\\")+\\\"}\\\",gap=h,e}}\\\"function\\\"!=typeof Date.prototype.toJSON&&(Date.prototype.toJSON=function(){return isFinite(this.valueOf())?this.getUTCFullYear()+\\\"-\\\"+f(this.getUTCMonth()+1)+\\\"-\\\"+f(this.getUTCDate())+\\\"T\\\"+f(this.getUTCHours())+\\\":\\\"+f(this.getUTCMinutes())+\\\":\\\"+f(this.getUTCSeconds())+\\\"Z\\\":null},String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(){return this.valueOf()});var cx=/[\\\\u0000\\\\u00ad\\\\u0600-\\\\u0604\\\\u070f\\\\u17b4\\\\u17b5\\\\u200c-\\\\u200f\\\\u2028-\\\\u202f\\\\u2060-\\\\u206f\\\\ufeff\\\\ufff0-\\\\uffff]/g,escapable=/[\\\\\\\\\\\\\\\"\\\\x00-\\\\x1f\\\\x7f-\\\\x9f\\\\u00ad\\\\u0600-\\\\u0604\\\\u070f\\\\u17b4\\\\u17b5\\\\u200c-\\\\u200f\\\\u2028-\\\\u202f\\\\u2060-\\\\u206f\\\\ufeff\\\\ufff0-\\\\uffff]/g,gap,indent,meta={\\\"\\\\b\\\":\\\"\\\\\\\\b\\\",\\\"\\t\\\":\\\"\\\\\\\\t\\\",\\\"\\\\n\\\":\\\"\\\\\\\\n\\\",\\\"\\\\f\\\":\\\"\\\\\\\\f\\\",\\\"\\\\r\\\":\\\"\\\\\\\\r\\\",'\\\"':'\\\\\\\\\\\"',\\\"\\\\\\\\\\\":\\\"\\\\\\\\\\\\\\\\\\\"},rep;\\\"function\\\"!=typeof JSON.stringify&&(JSON.stringify=function(a,b,c){var d;if(gap=\\\"\\\",indent=\\\"\\\",\\\"number\\\"==typeof c)for(d=0;c>d;d+=1)indent+=\\\" \\\";else\\\"string\\\"==typeof c&&(indent=c);if(rep=b,b&&\\\"function\\\"!=typeof b&&(\\\"object\\\"!=typeof b||\\\"number\\\"!=typeof b.length))throw new Error(\\\"JSON.stringify\\\");return str(\\\"\\\",{\\\"\\\":a})}),\\\"function\\\"!=typeof JSON.parse&&(JSON.parse=function(text,reviver){function walk(a,b){var c,d,e=a[b];if(e&&\\\"object\\\"==typeof e)for(c in e)Object.prototype.hasOwnProperty.call(e,c)&&(d=walk(e,c),void 0!==d?e[c]=d:delete e[c]);return reviver.call(a,b,e)}var j;if(text=String(text),cx.lastIndex=0,cx.test(text)&&(text=text.replace(cx,function(a){return\\\"\\\\\\\\u\\\"+(\\\"0000\\\"+a.charCodeAt(0).toString(16)).slice(-4)})),/^[\\\\],:{}\\\\s]*$/.test(text.replace(/\\\\\\\\(?:[\\\"\\\\\\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g,\\\"@\\\").replace(/\\\"[^\\\"\\\\\\\\\\\\n\\\\r]*\\\"|true|false|null|-?\\\\d+(?:\\\\.\\\\d*)?(?:[eE][+\\\\-]?\\\\d+)?/g,\\\"]\\\").replace(/(?:^|:|,)(?:\\\\s*\\\\[)+/g,\\\"\\\")))return j=eval(\\\"(\\\"+text+\\\")\\\"),\\\"function\\\"==typeof reviver?walk({\\\"\\\":j},\\\"\\\"):j;throw new SyntaxError(\\\"JSON.parse\\\")})};\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/script-loader/~/raw-loader!./vendor/json2.min.js\n ** module id = 8\n ** module chunks = 0\n **/","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /\\S+\\:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /\\s+at /;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         * @param error {Error}\n         * @return Array[StackFrame]\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack && error.stack.match(FIREFOX_SAFARI_STACK_REGEXP)) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        /**\n         * Separate line and column numbers from a URL-like string.\n         * @param urlLike String\n         * @return Array[String]\n         */\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var locationParts = urlLike.replace(/[\\(\\)\\s]/g, '').split(':');\n            var lastNumber = locationParts.pop();\n            var possibleNumber = locationParts[locationParts.length - 1];\n            if (!isNaN(parseFloat(possibleNumber)) && isFinite(possibleNumber)) {\n                var lineNumber = locationParts.pop();\n                return [locationParts.join(':'), lineNumber, lastNumber];\n            } else {\n                return [locationParts.join(':'), lastNumber, undefined];\n            }\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            return error.stack.split('\\n').slice(1).map(function (line) {\n                var tokens = line.replace(/^\\s+/, '').split(/\\s+/).slice(1);\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = (!tokens[0] || tokens[0] === 'Anonymous') ? undefined : tokens[0];\n                return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2]);\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            return error.stack.split('\\n').filter(function (line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP);\n            }, this).map(function (line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = tokens.shift() || undefined;\n                return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2]);\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame(undefined, undefined, match[2], match[1]));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame(match[3] || undefined, undefined, match[2], match[1]));\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            return error.stack.split('\\n').filter(function (line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) &&\n                    !line.match(/^Error created at/);\n            }, this).map(function (line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ? undefined : argsRaw.split(',');\n                return new StackFrame(functionName, args, locationParts[0], locationParts[1], locationParts[2]);\n            }, this);\n        }\n    };\n}));\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/error-stack-parser/error-stack-parser.js\n ** module id = 9\n ** module chunks = 0\n **/","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function () {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function StackFrame(functionName, args, fileName, lineNumber, columnNumber) {\n        if (functionName !== undefined) {\n            this.setFunctionName(functionName);\n        }\n        if (args !== undefined) {\n            this.setArgs(args);\n        }\n        if (fileName !== undefined) {\n            this.setFileName(fileName);\n        }\n        if (lineNumber !== undefined) {\n            this.setLineNumber(lineNumber);\n        }\n        if (columnNumber !== undefined) {\n            this.setColumnNumber(columnNumber);\n        }\n    }\n\n    StackFrame.prototype = {\n        getFunctionName: function () {\n            return this.functionName;\n        },\n        setFunctionName: function (v) {\n            this.functionName = String(v);\n        },\n\n        getArgs: function () {\n            return this.args;\n        },\n        setArgs: function (v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        // NOTE: Property name may be misleading as it includes the path,\n        // but it somewhat mirrors V8's JavaScriptStackTraceApi\n        // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's\n        // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14\n        getFileName: function () {\n            return this.fileName;\n        },\n        setFileName: function (v) {\n            this.fileName = String(v);\n        },\n\n        getLineNumber: function () {\n            return this.lineNumber;\n        },\n        setLineNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Line Number must be a Number');\n            }\n            this.lineNumber = Number(v);\n        },\n\n        getColumnNumber: function () {\n            return this.columnNumber;\n        },\n        setColumnNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Column Number must be a Number');\n            }\n            this.columnNumber = Number(v);\n        },\n\n        toString: function() {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    return StackFrame;\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/error-stack-parser/~/stackframe/stackframe.js\n ** module id = 10\n ** module chunks = 0\n **/"],"sourceRoot":""}