{"version":3,"file":null,"sources":["../src/_helpers.js","../src/Target.js","../src/EventHandler.js","../src/Overlay.js","../src/_options.js","../src/Zooming.js","../src/main.js"],"sourcesContent":["const body = document.body\nconst docElm = document.documentElement\nconst trans = sniffTransition(document.createElement('div'))\n\nfunction divide (denominator) {\n  return (numerator) => {\n    return numerator / denominator\n  }\n}\n\nfunction toggleListener (el, type, handler, add) {\n  if (add) {\n    el.addEventListener(type, handler[type])\n  } else {\n    el.removeEventListener(type, handler[type])\n  }\n}\n\nfunction sniffTransition (el) {\n  let ret     = {}\n  const trans = ['webkitTransition', 'transition', 'mozTransition']\n  const tform = ['webkitTransform', 'transform', 'mozTransform']\n  const end   = {\n    'transition'       : 'transitionend',\n    'mozTransition'    : 'transitionend',\n    'webkitTransition' : 'webkitTransitionEnd'\n  }\n\n  trans.some(prop => {\n    if (el.style[prop] !== undefined) {\n      ret.transitionProp = prop\n      ret.transEndEvent = end[prop]\n      return true\n    }\n  })\n\n  tform.some(prop => {\n    if (el.style[prop] !== undefined) {\n      ret.transformProp = prop\n      ret.transformCssProp = prop.replace(/(.*)Transform/, '-$1-transform')\n      return true\n    }\n  })\n\n  return ret\n}\n\nfunction checkTrans (styles) {\n  const transitionProp = trans.transitionProp\n  const transformProp = trans.transformProp\n\n  let value\n  if (styles.transition) {\n    value = styles.transition\n    delete styles.transition\n    styles[transitionProp] = value\n  }\n  if (styles.transform) {\n    value = styles.transform\n    delete styles.transform\n    styles[transformProp] = value\n  }\n}\n\nfunction isLink (el) {\n  return el.tagName === 'A'\n}\n\nfunction isValidImage (filename) {\n  return (/\\.(gif|jpg|jpeg|png)$/i).test(filename)\n}\n\nfunction isImageLink (el) {\n  return isLink(el) && isValidImage(el.getAttribute('href'))\n}\n\nfunction hasComputedStyle (el, prop, value) {\n  return getComputedStyle(el)[prop] === value\n}\n\nexport const webkitPrefix = 'WebkitAppearance' in docElm.style\n  ? '-webkit-'\n  : ''\n\nexport const cursor = {\n  default: 'auto',\n  zoomIn: `${webkitPrefix}zoom-in`,\n  zoomOut: `${webkitPrefix}zoom-out`,\n  grab: `${webkitPrefix}grab`,\n  move: 'move'\n}\n\nexport const half = divide(2)\nexport const transformCssProp = trans.transformCssProp\nexport const transEndEvent = trans.transEndEvent\n\nexport function scrollTop () {\n  return window.pageYOffset ||\n    (docElm || body.parentNode || body).scrollTop\n}\n\nexport function getWindowCenter () {\n  const docWidth = docElm.clientWidth || body.clientWidth\n  const docHeight = docElm.clientHeight || body.clientHeight\n\n  return {\n    x: half(docWidth),\n    y: half(docHeight)\n  }\n}\n\nexport function toggleGrabListeners (el, handler, add) {\n  ['mousedown', 'mousemove', 'mouseup','touchstart', 'touchmove', 'touchend']\n  .forEach(type => {\n    toggleListener(el, type, handler, add)\n  })\n}\n\nexport function setStyle (el, styles, remember) {\n  checkTrans(styles)\n\n  let s = el.style\n  let original = {}\n\n  for (let key in styles) {\n    if (remember) original[key] = s[key] || ''\n    s[key] = styles[key]\n  }\n\n  return original\n}\n\nexport function bindAll (_this, that) {\n  const methods = (\n    Object.getOwnPropertyNames(\n      Object.getPrototypeOf(_this)\n    )\n  )\n\n  methods.forEach(method => {\n    _this[method] = _this[method].bind(that)\n  })\n}\n\nexport function loadImage (src, cb) {\n  if (!src) return\n  \n  const img = new Image()\n  img.onload = function () {\n    if (cb) cb(img)\n  }\n  img.src = src\n}\n\nexport function checkOriginalImage (el, cb) {\n  let srcOriginal = null\n\n  if (el.hasAttribute('data-original')) {\n    srcOriginal = el.getAttribute('data-original')\n  } else if (isImageLink(el.parentNode)) {\n    srcOriginal = el.parentNode.getAttribute('href')\n  }\n\n  cb(srcOriginal)\n}\n\nexport function getParents (el, match) {\n  let parents = []\n\n  for (; el && el !== document; el = el.parentNode) {\n    if (match) {\n      if (match(el)) {\n        parents.push(el)\n      }\n    } else {\n      parents.push(el)\n    }\n  }\n\n  return parents\n}\n\nexport function isOverflowHidden (el) {\n  return hasComputedStyle(el, 'overflow', 'hidden')\n}\n","import {\n  transformCssProp,\n  setStyle,\n  half,\n  getWindowCenter,\n  cursor,\n  getParents,\n  isOverflowHidden\n} from './_helpers'\n\nexport default class Target {\n\n  constructor (el, instance) {\n    this.el = el\n    this.instance = instance\n    this.overflowHiddenParents = getParents(this.el.parentNode, isOverflowHidden)\n    this.translate = null\n    this.scale = null\n    this.srcThumbnail = this.el.getAttribute('src')\n    this.style = {\n      open: null,\n      close: null,\n      overflowHiddenParents: {}\n    }\n  }\n\n  removeOverflowHidden () {\n    this.overflowHiddenParents.forEach(parent => {\n      this.style.overflowHiddenParents[parent] = setStyle(parent, {\n        overflow: 'visible'\n      }, true)\n    })\n  }\n\n  restoreOverflowHidden () {\n    this.overflowHiddenParents.forEach(parent => {\n      setStyle(parent, this.style.overflowHiddenParents[parent])\n    })\n  }\n\n  zoomIn () {\n    const options = this.instance.options\n\n    const rect = this.el.getBoundingClientRect()\n    this.translate = calculateTranslate(rect)\n    this.scale = calculateScale(rect, options.scaleBase, options.customSize)\n\n    // force layout update\n    this.el.offsetWidth\n\n    this.style.open = {\n      position: 'relative',\n      zIndex: 999,\n      cursor: options.enableGrab\n        ? cursor.grab\n        : cursor.zoomOut,\n      transition: `${transformCssProp}\n        ${options.transitionDuration}s\n        ${options.transitionTimingFunction}`,\n      transform: `translate(${this.translate.x}px, ${this.translate.y}px)\n        scale(${this.scale.x},${this.scale.y})`\n    }\n\n    // trigger transition\n    this.style.close = setStyle(this.el, this.style.open, true)\n  }\n\n  zoomOut () {\n    // force layout update\n    this.el.offsetWidth\n\n    setStyle(this.el, { transform: 'none' })\n  }\n\n  grab (x, y, scaleExtra) {\n    const windowCenter = getWindowCenter()\n    const [dx, dy] = [windowCenter.x - x, windowCenter.y - y]\n\n    setStyle(this.el, {\n      cursor: cursor.move,\n      transform: `translate(\n        ${this.translate.x + dx}px, ${this.translate.y + dy}px)\n        scale(${this.scale.x + scaleExtra},${this.scale.y + scaleExtra})`\n    })\n  }\n\n  move (x, y, scaleExtra) {\n    const windowCenter = getWindowCenter()\n    const [dx, dy] = [windowCenter.x - x, windowCenter.y - y]\n\n    setStyle(this.el, {\n      transition: transformCssProp,\n      transform: `translate(\n        ${this.translate.x + dx}px, ${this.translate.y + dy}px)\n        scale(${this.scale.x + scaleExtra},${this.scale.y + scaleExtra})`\n    })\n  }\n\n  restoreCloseStyle () {\n    setStyle(this.el, this.style.close)\n  }\n\n  restoreOpenStyle () {\n    setStyle(this.el, this.style.open)\n  }\n\n  upgradeSource (dataOriginal) {\n    if (!dataOriginal) return\n\n    const parentNode = this.el.parentNode\n    const temp = this.el.cloneNode(false)\n\n    // force compute the hi-res image in DOM to prevent\n    // image flickering while updating src\n    temp.setAttribute('src', dataOriginal)\n    temp.style.position = 'fixed'\n    temp.style.visibility = 'hidden'\n    parentNode.appendChild(temp)\n\n    setTimeout(() => {\n      this.el.setAttribute('src', dataOriginal)\n      parentNode.removeChild(temp)\n    }, 10)\n  }\n\n  downgradeSource () {\n    this.el.setAttribute('src', this.srcThumbnail)\n  }\n}\n\nfunction calculateTranslate (rect) {\n  const windowCenter = getWindowCenter()\n  const targetCenter = {\n    x: rect.left + half(rect.width),\n    y: rect.top + half(rect.height)\n  }\n\n  // The vector to translate image to the window center\n  return {\n    x: windowCenter.x - targetCenter.x,\n    y: windowCenter.y - targetCenter.y\n  }\n}\n\nfunction calculateScale (rect, scaleBase, customSize) {\n  if (customSize) {\n    return {\n      x: customSize.width / rect.width,\n      y: customSize.height / rect.height\n    }\n  } else {\n    const targetHalfWidth = half(rect.width)\n    const targetHalfHeight = half(rect.height)\n    const windowCenter = getWindowCenter()\n\n    // The distance between target edge and window edge\n    const targetEdgeToWindowEdge = {\n      x: windowCenter.x - targetHalfWidth,\n      y: windowCenter.y - targetHalfHeight\n    }\n\n    const scaleHorizontally = targetEdgeToWindowEdge.x / targetHalfWidth\n    const scaleVertically = targetEdgeToWindowEdge.y / targetHalfHeight\n\n    // The additional scale is based on the smaller value of\n    // scaling horizontally and scaling vertically\n    const scale = scaleBase + Math.min(scaleHorizontally, scaleVertically)\n\n    return {\n      x: scale,\n      y: scale\n    }\n  }\n}\n","import { scrollTop, bindAll } from './_helpers'\n\nconst PRESS_DELAY = 200\nconst MULTITOUCH_SCALE_FACTOR = 2\n\nexport default class EventHandler {\n\n  constructor (instance) {\n    bindAll(this, instance)\n  }\n\n  click (e) {\n    e.preventDefault()\n\n    if (this.shown) {\n      if (this.released) this.close()\n      else this.release()\n    } else {\n      this.open(e.currentTarget)\n    }\n  }\n\n  scroll () {\n    const st = scrollTop()\n\n    if (this.lastScrollPosition === null) {\n      this.lastScrollPosition = st\n    }\n\n    const deltaY = this.lastScrollPosition - st\n\n    if (Math.abs(deltaY) >= this.options.scrollThreshold) {\n      this.lastScrollPosition = null\n      this.close()\n    }\n  }\n\n  keydown (e) {\n    const code = e.key || e.code\n    if (code === 'Escape' || e.keyCode === 27) {\n      if (this.released) this.close()\n      else this.release(() => this.close())\n    }\n  }\n\n  mousedown (e) {\n    if (e.button !== 0) return\n    e.preventDefault()\n\n    this.pressTimer = setTimeout(() => {\n      this.grab(e.clientX, e.clientY)\n    }, PRESS_DELAY)\n  }\n\n  mousemove (e) {\n    if (this.released) return\n    this.move(e.clientX, e.clientY)\n  }\n\n  mouseup (e) {\n    if (e.button !== 0) return\n    clearTimeout(this.pressTimer)\n\n    if (this.released) this.close()\n    else this.release()\n  }\n\n  touchstart (e) {\n    e.preventDefault()\n\n    this.pressTimer = setTimeout(() => {\n      processTouches(e.touches, this.options.scaleExtra,\n        (x, y, scaleExtra) => {\n          this.grab(x, y, scaleExtra)\n        })\n    }, PRESS_DELAY)\n  }\n\n  touchmove (e) {\n    if (this.released) return\n\n    processTouches(e.touches, this.options.scaleExtra,\n      (x, y, scaleExtra) => {\n        this.move(x, y, scaleExtra)\n      })\n  }\n\n  touchend (e) {\n    if (e.targetTouches.length > 0) return\n    clearTimeout(this.pressTimer)\n\n    if (this.released) this.close()\n    else this.release()\n  }\n}\n\nfunction processTouches (touches, currScaleExtra, cb) {\n  const total = touches.length\n  const firstTouch = touches[0]\n  const multitouch = total > 1\n\n  let scaleExtra = currScaleExtra\n  let i = touches.length\n  let [xs, ys] = [0, 0]\n\n  // keep track of the min and max of touch positions\n  let min = { x: firstTouch.clientX, y: firstTouch.clientY }\n  let max = { x: firstTouch.clientX, y: firstTouch.clientY }\n\n  while (i--) {\n    const t = touches[i]\n    const [x, y] = [t.clientX, t.clientY]\n    xs += x\n    ys += y\n\n    if (!multitouch) continue\n\n    if (x < min.x) {\n      min.x = x\n    } else if (x > max.x) {\n      max.x = x\n    }\n\n    if (y < min.y) {\n      min.y = y\n    } else if (y > max.y) {\n      max.y = y\n    }\n  }\n\n  if (multitouch) {\n    // change scaleExtra dynamically\n    const [distX, distY] = [max.x - min.x, max.y - min.y]\n\n    if (distX > distY) {\n      scaleExtra = (distX / window.innerWidth) * MULTITOUCH_SCALE_FACTOR\n    } else {\n      scaleExtra = (distY / window.innerHeight) * MULTITOUCH_SCALE_FACTOR\n    }\n  }\n\n  cb(xs / total, ys / total, scaleExtra)\n}\n","import { setStyle } from './_helpers'\n\nexport default class Overlay {\n\n  constructor (el, instance) {\n    this.el = el\n    this.instance = instance\n    this.parent = document.body\n  }\n\n  init () {\n    const options = this.instance.options\n\n    setStyle(this.el, {\n      zIndex: 998,\n      backgroundColor: options.bgColor,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      opacity: 0,\n      transition: `opacity\n        ${options.transitionDuration}s\n        ${options.transitionTimingFunction}`\n    })\n\n    this.el.addEventListener('click', () => this.instance.close())\n  }\n\n  updateStyle () {\n    const options = this.instance.options\n\n    setStyle(this.el, {\n      backgroundColor: options.bgColor,\n      transition: `opacity\n        ${options.transitionDuration}s\n        ${options.transitionTimingFunction}`\n    })\n  }\n\n  insert () {\n    this.parent.appendChild(this.el)\n  }\n\n  remove () {\n    this.parent.removeChild(this.el)\n  }\n\n  show () {\n    setTimeout(() => this.el.style.opacity = this.instance.options.bgOpacity, 30)\n  }\n\n  hide () {\n    this.el.style.opacity = 0\n  }\n}\n","/**\n * A list of options.\n *\n * @type {Object}\n * @example\n * // Default options\n * var options = {\n *   defaultZoomable: 'img[data-action=\"zoom\"]',\n *   enableGrab: true,\n *   preloadImage: true,\n *   transitionDuration: 0.4,\n *   transitionTimingFunction: 'cubic-bezier(0.4, 0, 0, 1)',\n *   bgColor: 'rgb(255, 255, 255)',\n *   bgOpacity: 1,\n *   scaleBase: 1.0,\n *   scaleExtra: 0.5,\n *   scrollThreshold: 40,\n *   customSize: null,\n *   onOpen: null,\n *   onClose: null,\n *   onRelease: null,\n *   onBeforeOpen: null,\n *   onBeforeClose: null,\n *   onBeforeGrab: null,\n *   onBeforeMove: null,\n *   onBeforeRelease: null\n * }\n */\nconst OPTIONS = {\n  /**\n   * Zoomable elements by default. It can be a css selector or an element.\n   * @type {string|Element}\n   */\n  defaultZoomable: 'img[data-action=\"zoom\"]',\n\n  /**\n   * To be able to grab and drag the image for extra zoom-in.\n   * @type {boolean}\n   */\n  enableGrab: true,\n\n  /**\n   * Preload images with attribute \"data-original\".\n   * @type {boolean}\n   */\n  preloadImage: true,\n\n  /**\n   * Transition duration in seconds.\n   * @type {number}\n   */\n  transitionDuration: 0.4,\n\n  /**\n   * Transition timing function.\n   * @type {string}\n   */\n  transitionTimingFunction: 'cubic-bezier(0.4, 0, 0, 1)',\n\n  /**\n   * Overlay background color.\n   * @type {string}\n   */\n  bgColor: 'rgb(255, 255, 255)',\n\n  /**\n   * Overlay background opacity.\n   * @type {number}\n   */\n  bgOpacity: 1,\n\n  /**\n   * The base scale factor for zooming. By default scale to fit the window.\n   * @type {number}\n   */\n  scaleBase: 1.0,\n\n  /**\n   * The extra scale factor when grabbing the image.\n   * @type {number}\n   */\n  scaleExtra: 0.5,\n\n  /**\n   * How much scrolling it takes before closing out.\n   * @type {number}\n   */\n  scrollThreshold: 40,\n\n  /**\n   * Scale (zoom in) to given width and height. Ignore scaleBase if set.\n   * @type {Object}\n   * @example\n   * customSize: { width: 800, height: 400 }\n   */\n  customSize: null,\n\n  /**\n   * A callback function that will be called when a target is opened and\n   * transition has ended. It will get the target element as the argument.\n   * @type {Function}\n   */\n  onOpen: null,\n\n  /**\n   * Same as above, except fired when closed.\n   * @type {Function}\n   */\n  onClose: null,\n\n  /**\n   * Same as above, except fired when released.\n   * @type {Function}\n   */\n  onRelease: null,\n\n  /**\n   * A callback function that will be called before open.\n   * @type {Function}\n   */\n  onBeforeOpen: null,\n\n  /**\n   * A callback function that will be called before close.\n   * @type {Function}\n   */\n  onBeforeClose: null,\n\n  /**\n   * A callback function that will be called before grab.\n   * @type {Function}\n   */\n  onBeforeGrab: null,\n\n  /**\n   * A callback function that will be called before move.\n   * @type {Function}\n   */\n  onBeforeMove: null,\n\n  /**\n   * A callback function that will be called before release.\n   * @type {Function}\n   */\n  onBeforeRelease: null\n}\n\nexport default OPTIONS\n","import Target from './Target'\nimport Overlay from './Overlay'\nimport EventHandler from './EventHandler'\nimport OPTIONS from './_options'\nimport {\n  toggleGrabListeners,\n  transEndEvent,\n  cursor,\n  loadImage,\n  checkOriginalImage\n} from './_helpers'\n\n/**\n * Zooming instance.\n */\nexport default class Zooming {\n\n  /**\n   * @param {Object} [options] Update default options if provided.\n   */\n  constructor (options) {\n    // elements\n    this.body = document.body\n    this.overlay = new Overlay(document.createElement('div'), this)\n    this.target = null\n\n    // state\n    this.shown = false       // target is open\n    this.lock  = false       // target is in transform\n    this.released = true     // mouse/finger is not pressing down\n    this.lastScrollPosition = null\n    this.pressTimer = null\n\n    this.options = Object.assign({}, OPTIONS)\n    if (options) this.config(options)\n\n    this.eventHandler = new EventHandler(this)\n    this.overlay.init()\n  }\n\n  /**\n   * Make element(s) zoomable.\n   * @param  {string|Element} el A css selector or an Element.\n   * @return {this}\n   */\n  listen (el) {\n    if (typeof el === 'string') {\n      let els = document.querySelectorAll(el), i = els.length\n\n      while (i--) {\n        this.listen(els[i])\n      }\n\n      return this\n    }\n\n    if (el.tagName !== 'IMG') return\n\n    el.style.cursor = cursor.zoomIn\n    el.addEventListener('click', this.eventHandler.click)\n\n    if (this.options.preloadImage) {\n      checkOriginalImage(el, srcOriginal => loadImage(srcOriginal))\n    }\n\n    return this\n  }\n\n  /**\n   * Open (zoom in) the Element.\n   * @param  {Element} el The Element to open.\n   * @param  {Function} [cb=this.options.onOpen] A callback function that will\n   * be called when a target is opened and transition has ended. It will get\n   * the target element as the argument.\n   * @return {this}\n   */\n  open (el, cb = this.options.onOpen) {\n    if (this.shown || this.lock) return\n\n    const target = typeof el === 'string'\n      ? document.querySelector(el)\n      : el\n\n    if (target.tagName !== 'IMG') return\n\n    // onBeforeOpen event\n    if (this.options.onBeforeOpen) this.options.onBeforeOpen(target)\n\n    if (!this.options.preloadImage) {\n      checkOriginalImage(target, srcOriginal => loadImage(srcOriginal))\n    }\n\n    this.target = new Target(target, this)\n\n    this.shown = true\n    this.lock = true\n\n    this.target.removeOverflowHidden()\n    this.target.zoomIn()\n    this.overlay.insert()\n    this.overlay.show()\n\n    document.addEventListener('scroll', this.eventHandler.scroll)\n    document.addEventListener('keydown', this.eventHandler.keydown)\n\n    const onEnd = () => {\n      target.removeEventListener(transEndEvent, onEnd)\n\n      this.lock = false\n\n      checkOriginalImage(target, srcOriginal => this.target.upgradeSource(srcOriginal))\n\n      if (this.options.enableGrab) {\n        toggleGrabListeners(document, this.eventHandler, true)\n      }\n\n      if (cb) cb(target)\n    }\n\n    target.addEventListener(transEndEvent, onEnd)\n\n    return this\n  }\n\n  /**\n   * Close (zoom out) the Element currently opened.\n   * @param  {Function} [cb=this.options.onClose] A callback function that will\n   * be called when a target is closed and transition has ended. It will get\n   * the target element as the argument.\n   * @return {this}\n   */\n  close (cb = this.options.onClose) {\n    if (!this.shown || this.lock) return\n\n    const target = this.target.el\n\n    // onBeforeClose event\n    if (this.options.onBeforeClose) this.options.onBeforeClose(target)\n\n    this.lock = true\n\n    this.body.style.cursor = cursor.default\n    this.overlay.hide()\n    this.target.zoomOut()\n\n    document.removeEventListener('scroll', this.eventHandler.scroll)\n    document.removeEventListener('keydown', this.eventHandler.keydown)\n\n    const onEnd = () => {\n      target.removeEventListener(transEndEvent, onEnd)\n\n      this.shown = false\n      this.lock = false\n\n      checkOriginalImage(target, srcOriginal => {\n        if (srcOriginal) this.target.downgradeSource()\n      })\n\n      if (this.options.enableGrab) {\n        toggleGrabListeners(document, this.eventHandler, false)\n      }\n\n      this.target.restoreOverflowHidden()\n      this.target.restoreCloseStyle()\n      this.overlay.remove()\n\n      if (cb) cb(target)\n    }\n\n    target.addEventListener(transEndEvent, onEnd)\n\n    return this\n  }\n\n  /**\n   * Grab the Element currently opened given a position and apply extra zoom-in.\n   * @param  {number}   x The X-axis of where the press happened.\n   * @param  {number}   y The Y-axis of where the press happened.\n   * @param  {number}   scaleExtra Extra zoom-in to apply.\n   * @param  {Function} [cb=this.options.scaleExtra] A callback function that\n   * will be called when a target is grabbed and transition has ended. It\n   * will get the target element as the argument.\n   * @return {this}\n   */\n  grab (x, y, scaleExtra = this.options.scaleExtra, cb) {\n    if (!this.shown || this.lock) return\n\n    const target = this.target.el\n\n    // onBeforeGrab event\n    if (this.options.onBeforeGrab) this.options.onBeforeGrab(target)\n\n    this.released = false\n    this.target.grab(x, y, scaleExtra)\n\n    const onEnd = () => {\n      target.removeEventListener(transEndEvent, onEnd)\n      if (cb) cb(target)\n    }\n\n    target.addEventListener(transEndEvent, onEnd)\n  }\n\n  /**\n   * Move the Element currently grabbed given a position and apply extra zoom-in.\n   * @param  {number}   x The X-axis of where the press happened.\n   * @param  {number}   y The Y-axis of where the press happened.\n   * @param  {number}   scaleExtra Extra zoom-in to apply.\n   * @param  {Function} [cb=this.options.scaleExtra] A callback function that\n   * will be called when a target is moved and transition has ended. It will\n   * get the target element as the argument.\n   * @return {this}\n   */\n  move (x, y, scaleExtra = this.options.scaleExtra, cb) {\n    if (!this.shown || this.lock) return\n\n    const target = this.target.el\n\n    // onBeforeMove event\n    if (this.options.onBeforeMove) this.options.onBeforeMove(target)\n\n    this.released = false\n\n    this.target.move(x, y, scaleExtra)\n    this.body.style.cursor = cursor.move\n\n    const onEnd = () => {\n      target.removeEventListener(transEndEvent, onEnd)\n      if (cb) cb(target)\n    }\n\n    target.addEventListener(transEndEvent, onEnd)\n  }\n\n  /**\n   * Release the Element currently grabbed.\n   * @param  {Function} [cb=this.options.onRelease] A callback function that\n   * will be called when a target is released and transition has ended. It\n   * will get the target element as the argument.\n   * @return {this}\n   */\n  release (cb = this.options.onRelease) {\n    if (!this.shown || this.lock) return\n\n    const target = this.target.el\n\n    // onBeforeRelease event\n    if (this.options.onBeforeRelease) this.options.onBeforeRelease(target)\n\n    this.lock = true\n\n    this.target.restoreOpenStyle()\n    this.body.style.cursor = cursor.default\n\n    const onEnd = () => {\n      target.removeEventListener(transEndEvent, onEnd)\n\n      this.lock = false\n      this.released = true\n\n      if (cb) cb(target)\n    }\n\n    target.addEventListener(transEndEvent, onEnd)\n\n    return this\n  }\n\n  /**\n   * Update options.\n   * @param  {Object} options An Object that contains this.options.\n   * @return {this}\n   */\n  config (options) {\n    if (!options) return this.options\n\n    for (let key in options) {\n      this.options[key] = options[key]\n    }\n\n    this.overlay.updateStyle()\n\n    return this\n  }\n}\n","import Zooming from './Zooming'\nimport OPTIONS from './_options'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  new Zooming().listen(OPTIONS.defaultZoomable)\n})\n\nexport default Zooming\n"],"names":["divide","denominator","numerator","toggleListener","el","type","handler","add","addEventListener","removeEventListener","sniffTransition","ret","trans","tform","end","some","undefined","style","prop","transitionProp","transEndEvent","transformProp","transformCssProp","replace","checkTrans","styles","value","transition","transform","isLink","tagName","isValidImage","filename","test","isImageLink","getAttribute","hasComputedStyle","getComputedStyle","scrollTop","window","pageYOffset","docElm","body","parentNode","getWindowCenter","docWidth","clientWidth","docHeight","clientHeight","half","toggleGrabListeners","forEach","setStyle","remember","s","original","key","bindAll","_this","that","methods","Object","getOwnPropertyNames","getPrototypeOf","method","bind","loadImage","src","cb","img","Image","onload","checkOriginalImage","srcOriginal","hasAttribute","getParents","match","parents","document","push","isOverflowHidden","calculateTranslate","rect","windowCenter","targetCenter","left","width","top","height","x","y","calculateScale","scaleBase","customSize","targetHalfWidth","targetHalfHeight","targetEdgeToWindowEdge","scaleHorizontally","scaleVertically","scale","Math","min","processTouches","touches","currScaleExtra","total","length","firstTouch","multitouch","scaleExtra","i","xs","ys","clientX","clientY","max","t","distX","distY","innerWidth","MULTITOUCH_SCALE_FACTOR","innerHeight","documentElement","createElement","webkitPrefix","cursor","Target","instance","overflowHiddenParents","this","translate","srcThumbnail","parent","_this2","options","getBoundingClientRect","offsetWidth","open","enableGrab","grab","zoomOut","transitionDuration","transitionTimingFunction","close","dx","dy","move","dataOriginal","temp","cloneNode","setAttribute","position","visibility","appendChild","removeChild","Overlay","bgColor","opacity","bgOpacity","PRESS_DELAY","EventHandler","e","preventDefault","shown","released","release","currentTarget","st","lastScrollPosition","deltaY","abs","scrollThreshold","code","keyCode","button","pressTimer","setTimeout","_this3","targetTouches","OPTIONS","Zooming","overlay","target","lock","assign","config","eventHandler","init","els","querySelectorAll","listen","zoomIn","click","preloadImage","onOpen","querySelector","onBeforeOpen","removeOverflowHidden","insert","show","scroll","keydown","onEnd","upgradeSource","onClose","onBeforeClose","default","hide","downgradeSource","restoreOverflowHidden","restoreCloseStyle","remove","onBeforeGrab","onBeforeMove","onRelease","onBeforeRelease","restoreOpenStyle","updateStyle","defaultZoomable"],"mappings":"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"}