{"version":3,"file":null,"sources":["../src/Target.js","../src/EventHandler.js","../src/_helpers.js","../src/Overlay.js","../src/_options.js","../src/Zooming.js","../src/main.js"],"sourcesContent":["import { transformCssProp, setStyle, half, getWindowCenter, loadImage, cursor } from './_helpers'\n\nexport default class Target {\n\n  constructor (el, instance) {\n    this.el = el\n    this.instance = instance\n    this.body = document.body\n    this.translate = null\n    this.scale = null\n    this.srcThumbnail = null\n    this.style = {\n      open: null,\n      close: null\n    }\n  }\n\n  open () {\n    const options = this.instance.options\n\n    // load hi-res image if preloadImage option is disabled\n    if (!options.preloadImage && this.el.hasAttribute('data-original')) {\n      loadImage(this.el.getAttribute('data-original'))\n    }\n\n    const rect = this.el.getBoundingClientRect()\n    this.translate = calculateTranslate(rect)\n    this.scale = calculateScale(rect, options.scaleBase, options.customSize)\n\n    // force layout update\n    this.el.offsetWidth\n\n    this.style.open = {\n      position: 'relative',\n      zIndex: 999,\n      cursor: options.enableGrab\n        ? cursor.grab\n        : cursor.zoomOut,\n      transition: `${transformCssProp}\n        ${options.transitionDuration}s\n        ${options.transitionTimingFunction}`,\n      transform: `translate(${this.translate.x}px, ${this.translate.y}px)\n        scale(${this.scale.x},${this.scale.y})`\n    }\n\n    // trigger transition\n    this.style.close = setStyle(this.el, this.style.open, true)\n  }\n\n  close () {\n    // force layout update\n    this.el.offsetWidth\n\n    setStyle(this.el, { transform: 'none' })\n  }\n\n  grab (x, y, scaleExtra) {\n    const windowCenter = getWindowCenter()\n    const [dx, dy] = [windowCenter.x - x, windowCenter.y - y]\n\n    setStyle(this.el, {\n      cursor: cursor.move,\n      transform: `translate(\n        ${this.translate.x + dx}px, ${this.translate.y + dy}px)\n        scale(${this.scale.x + scaleExtra},${this.scale.y + scaleExtra})`\n    })\n  }\n\n  move (x, y, scaleExtra) {\n    const windowCenter = getWindowCenter()\n    const [dx, dy] = [windowCenter.x - x, windowCenter.y - y]\n\n    setStyle(this.el, {\n      transition: transformCssProp,\n      transform: `translate(\n        ${this.translate.x + dx}px, ${this.translate.y + dy}px)\n        scale(${this.scale.x + scaleExtra},${this.scale.y + scaleExtra})`\n    })\n  }\n\n  restoreCloseStyle () {\n    setStyle(this.el, this.style.close)\n  }\n\n  restoreOpenStyle () {\n    setStyle(this.el, this.style.open)\n  }\n\n  upgradeSource () {\n    this.srcThumbnail = this.el.getAttribute('src')\n    const dataOriginal = this.el.getAttribute('data-original')\n    const temp = this.el.cloneNode(false)\n\n    // force compute the hi-res image in DOM to prevent\n    // image flickering while updating src\n    temp.setAttribute('src', dataOriginal)\n    temp.style.position = 'fixed'\n    temp.style.visibility = 'hidden'\n    this.body.appendChild(temp)\n\n    setTimeout(() => {\n      this.el.setAttribute('src', dataOriginal)\n      this.body.removeChild(temp)\n    }, 10)\n  }\n\n  downgradeSource () {\n    this.el.setAttribute('src', this.srcThumbnail)\n  }\n}\n\nfunction calculateTranslate (rect) {\n  const windowCenter = getWindowCenter()\n  const targetCenter = {\n    x: rect.left + half(rect.width),\n    y: rect.top + half(rect.height)\n  }\n\n  // The vector to translate image to the window center\n  return {\n    x: windowCenter.x - targetCenter.x,\n    y: windowCenter.y - targetCenter.y\n  }\n}\n\nfunction calculateScale (rect, scaleBase, customSize) {\n  if (customSize) {\n    return {\n      x: customSize.width / rect.width,\n      y: customSize.height / rect.height\n    }\n  } else {\n    const targetHalfWidth = half(rect.width)\n    const targetHalfHeight = half(rect.height)\n    const windowCenter = getWindowCenter()\n\n    // The distance between target edge and window edge\n    const targetEdgeToWindowEdge = {\n      x: windowCenter.x - targetHalfWidth,\n      y: windowCenter.y - targetHalfHeight\n    }\n\n    const scaleHorizontally = targetEdgeToWindowEdge.x / targetHalfWidth\n    const scaleVertically = targetEdgeToWindowEdge.y / targetHalfHeight\n\n    // The additional scale is based on the smaller value of\n    // scaling horizontally and scaling vertically\n    const scale = scaleBase + Math.min(scaleHorizontally, scaleVertically)\n\n    return {\n      x: scale,\n      y: scale\n    }\n  }\n}\n","import { scrollTop, bind } from './_helpers'\n\n/**\n * Press duration (ms) longer than or equal to this value will be recognized\n * as grab, otherwise click.\n * @type {number}\n */\nconst PRESS_DELAY = 200\n\n/**\n * Scale factor for multi-touch.\n * @type {number}\n */\nconst MULTITOUCH_SCALE_FACTOR = 2\n\nexport default class EventHandler {\n\n  constructor (instance) {\n    bind(this, instance)\n  }\n\n  click (e) {\n    e.preventDefault()\n\n    if (this.shown) {\n      if (this.released) this.close()\n      else this.release()\n    } else {\n      this.open(e.currentTarget)\n    }\n  }\n\n  scroll () {\n    const st = scrollTop()\n\n    if (this.lastScrollPosition === null) {\n      this.lastScrollPosition = st\n    }\n\n    const deltaY = this.lastScrollPosition - st\n\n    if (Math.abs(deltaY) >= this.options.scrollThreshold) {\n      this.lastScrollPosition = null\n      this.close()\n    }\n  }\n\n  keydown (e) {\n    const code = e.key || e.code\n    if (code === 'Escape' || e.keyCode === 27) {\n      if (this.released) this.close()\n      else this.release(() => this.close())\n    }\n  }\n\n  mousedown (e) {\n    if (e.button !== 0) return\n    e.preventDefault()\n\n    this.pressTimer = setTimeout(() => {\n      this.grab(e.clientX, e.clientY)\n    }, PRESS_DELAY)\n  }\n\n  mousemove (e) {\n    if (this.released) return\n    this.move(e.clientX, e.clientY)\n  }\n\n  mouseup (e) {\n    if (e.button !== 0) return\n    clearTimeout(this.pressTimer)\n\n    if (this.released) this.close()\n    else this.release()\n  }\n\n  touchstart (e) {\n    e.preventDefault()\n\n    this.pressTimer = setTimeout(() => {\n      processTouches(e.touches, this.options.scaleExtra,\n        (x, y, scaleExtra) => {\n          this.grab(x, y, scaleExtra)\n        })\n    }, PRESS_DELAY)\n  }\n\n  touchmove (e) {\n    if (this.released) return\n\n    processTouches(e.touches, this.options.scaleExtra,\n      (x, y, scaleExtra) => {\n        this.move(x, y, scaleExtra)\n      })\n  }\n\n  touchend (e) {\n    if (e.targetTouches.length > 0) return\n    clearTimeout(this.pressTimer)\n\n    if (this.released) this.close()\n    else this.release()\n  }\n}\n\nfunction processTouches (touches, currScaleExtra, cb) {\n  const total = touches.length\n  const firstTouch = touches[0]\n  const multitouch = total > 1\n\n  let scaleExtra = currScaleExtra\n  let i = touches.length\n  let [xs, ys] = [0, 0]\n\n  // keep track of the min and max of touch positions\n  let min = { x: firstTouch.clientX, y: firstTouch.clientY }\n  let max = { x: firstTouch.clientX, y: firstTouch.clientY }\n\n  while (i--) {\n    const t = touches[i]\n    const [x, y] = [t.clientX, t.clientY]\n    xs += x\n    ys += y\n\n    if (!multitouch) continue\n\n    if (x < min.x) {\n      min.x = x\n    } else if (x > max.x) {\n      max.x = x\n    }\n\n    if (y < min.y) {\n      min.y = y\n    } else if (y > max.y) {\n      max.y = y\n    }\n  }\n\n  if (multitouch) {\n    // change scaleExtra dynamically\n    const [distX, distY] = [max.x - min.x, max.y - min.y]\n\n    if (distX > distY) {\n      scaleExtra = (distX / window.innerWidth) * MULTITOUCH_SCALE_FACTOR\n    } else {\n      scaleExtra = (distY / window.innerHeight) * MULTITOUCH_SCALE_FACTOR\n    }\n  }\n\n  cb(xs / total, ys / total, scaleExtra)\n}\n","const body = document.body\nconst docElm = document.documentElement\nconst webkitPrefix = 'WebkitAppearance' in document.documentElement.style\n  ? '-webkit-'\n  : ''\n\n  const cursor = {\n    default: 'auto',\n    zoomIn: `${webkitPrefix}zoom-in`,\n    zoomOut: `${webkitPrefix}zoom-out`,\n    grab: `${webkitPrefix}grab`,\n    move: 'move'\n  }\n\nconst EVENT_TYPES_GRAB = [\n  'mousedown', 'mousemove', 'mouseup',\n  'touchstart', 'touchmove', 'touchend'\n]\n\nconst divide = (denominator) => {\n  return (numerator) => {\n    return numerator / denominator\n  }\n}\n\nconst half = divide(2)\n\nconst loadImage = (url, cb) => {\n  const img = new Image()\n  img.onload = () => {\n    if (cb) cb(img)\n  }\n  img.src = url\n}\n\nconst scrollTop = () => {\n  return window.pageYOffset ||\n    (docElm || body.parentNode || body).scrollTop\n}\n\nconst getWindowCenter = () => {\n  const docWidth = docElm.clientWidth || body.clientWidth\n  const docHeight = docElm.clientHeight || body.clientHeight\n\n  return {\n    x: half(docWidth),\n    y: half(docHeight)\n  }\n}\n\nconst toggleListeners = (el, types, handler, add = true) => {\n  types.forEach(t => {\n    if (add) {\n      el.addEventListener(t, handler[t])\n    } else {\n      el.removeEventListener(t, handler[t])\n    }\n  })\n}\n\nconst toggleGrabListeners = (el, handler, add) => {\n  return toggleListeners(el, EVENT_TYPES_GRAB, handler, add)\n}\n\nconst sniffTransition = (el) => {\n  let ret     = {}\n  const trans = ['webkitTransition', 'transition', 'mozTransition']\n  const tform = ['webkitTransform', 'transform', 'mozTransform']\n  const end   = {\n    'transition'       : 'transitionend',\n    'mozTransition'    : 'transitionend',\n    'webkitTransition' : 'webkitTransitionEnd'\n  }\n\n  trans.some(prop => {\n    if (el.style[prop] !== undefined) {\n      ret.transitionProp = prop\n      ret.transEndEvent = end[prop]\n      return true\n    }\n  })\n\n  tform.some(prop => {\n    if (el.style[prop] !== undefined) {\n      ret.transformProp = prop\n      ret.transformCssProp = prop.replace(/(.*)Transform/, '-$1-transform')\n      return true\n    }\n  })\n\n  return ret\n}\n\nconst trans = sniffTransition(document.createElement('div'))\nconst transitionProp = trans.transitionProp\nconst transformProp = trans.transformProp\nconst transformCssProp = trans.transformCssProp\nconst transEndEvent = trans.transEndEvent\n\nconst setStyle = (el, styles, remember) => {\n  let value\n  if (styles.transition) {\n    value = styles.transition\n    delete styles.transition\n    styles[transitionProp] = value\n  }\n  if (styles.transform) {\n    value = styles.transform\n    delete styles.transform\n    styles[transformProp] = value\n  }\n\n  let s = el.style\n  let original = {}\n\n  for (let key in styles) {\n    if (remember) original[key] = s[key] || ''\n    s[key] = styles[key]\n  }\n\n  return original\n}\n\nconst bind = (_this, that) => {\n  const methods = (\n    Object.getOwnPropertyNames(\n      Object.getPrototypeOf(_this)\n    )\n  )\n\n  methods.forEach(m => {\n    _this[m] = _this[m].bind(that)\n  })\n}\n\nexport {\n  webkitPrefix,\n  half,\n  loadImage,\n  scrollTop,\n  getWindowCenter,\n  toggleGrabListeners,\n  transformCssProp,\n  transEndEvent,\n  setStyle,\n  cursor,\n  bind\n}\n","import { setStyle } from './_helpers'\n\nexport default class Overlay {\n\n  constructor (el, instance) {\n    this.el = el\n    this.instance = instance\n    this.parent = null\n  }\n\n  init () {\n    const options = this.instance.options\n\n    setStyle(this.el, {\n      zIndex: 998,\n      backgroundColor: options.bgColor,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      opacity: 0,\n      transition: `opacity\n        ${options.transitionDuration}s\n        ${options.transitionTimingFunction}`\n    })\n\n    this.el.addEventListener('click', () => this.instance.close())\n  }\n\n  updateStyle () {\n    const options = this.instance.options\n\n    setStyle(this.el, {\n      backgroundColor: options.bgColor,\n      transition: `opacity\n        ${options.transitionDuration}s\n        ${options.transitionTimingFunction}`\n    })\n  }\n\n  setParent (parent) {\n    this.parent = parent\n  }\n\n  insert () {\n    this.parent.appendChild(this.el)\n  }\n\n  remove () {\n    this.parent.removeChild(this.el)\n  }\n\n  show () {\n    setTimeout(() => this.el.style.opacity = this.instance.options.bgOpacity, 30)\n  }\n\n  hide () {\n    this.el.style.opacity = 0\n  }\n}\n","/**\n * A list of options.\n *\n * @type {Object}\n * @example\n * // Default options\n * var options = {\n *   defaultZoomable: 'img[data-action=\"zoom\"]',\n *   enableGrab: true,\n *   preloadImage: true,\n *   transitionDuration: 0.4,\n *   transitionTimingFunction: 'cubic-bezier(0.4, 0, 0, 1)',\n *   bgColor: 'rgb(255, 255, 255)',\n *   bgOpacity: 1,\n *   scaleBase: 1.0,\n *   scaleExtra: 0.5,\n *   scrollThreshold: 40,\n *   customSize: null,\n *   onOpen: null,\n *   onClose: null,\n *   onRelease: null,\n *   onBeforeOpen: null,\n *   onBeforeClose: null,\n *   onBeforeGrab: null,\n *   onBeforeMove: null,\n *   onBeforeRelease: null\n * }\n */\nexport default {\n  /**\n   * Zoomable elements by default. It can be a css selector or an element.\n   * @type {string|Element}\n   */\n  defaultZoomable: 'img[data-action=\"zoom\"]',\n\n  /**\n   * To be able to grab and drag the image for extra zoom-in.\n   * @type {boolean}\n   */\n  enableGrab: true,\n\n  /**\n   * Preload images with attribute \"data-original\".\n   * @type {boolean}\n   */\n  preloadImage: true,\n\n  /**\n   * Transition duration in seconds.\n   * @type {number}\n   */\n  transitionDuration: 0.4,\n\n  /**\n   * Transition timing function.\n   * @type {string}\n   */\n  transitionTimingFunction: 'cubic-bezier(0.4, 0, 0, 1)',\n\n  /**\n   * Overlay background color.\n   * @type {string}\n   */\n  bgColor: 'rgb(255, 255, 255)',\n\n  /**\n   * Overlay background opacity.\n   * @type {number}\n   */\n  bgOpacity: 1,\n\n  /**\n   * The base scale factor for zooming. By default scale to fit the window.\n   * @type {number}\n   */\n  scaleBase: 1.0,\n\n  /**\n   * The extra scale factor when grabbing the image.\n   * @type {number}\n   */\n  scaleExtra: 0.5,\n\n  /**\n   * How much scrolling it takes before closing out.\n   * @type {number}\n   */\n  scrollThreshold: 40,\n\n  /**\n   * Scale (zoom in) to given width and height. Ignore scaleBase if set.\n   * @type {Object}\n   * @example\n   * customSize: { width: 800, height: 400 }\n   */\n  customSize: null,\n\n  /**\n   * A callback function that will be called when a target is opened and\n   * transition has ended. It will get the target element as the argument.\n   * @type {Function}\n   */\n  onOpen: null,\n\n  /**\n   * Same as above, except fired when closed.\n   * @type {Function}\n   */\n  onClose: null,\n\n  /**\n   * Same as above, except fired when released.\n   * @type {Function}\n   */\n  onRelease: null,\n\n  /**\n   * A callback function that will be called before open.\n   * @type {Function}\n   */\n  onBeforeOpen: null,\n\n  /**\n   * A callback function that will be called before close.\n   * @type {Function}\n   */\n  onBeforeClose: null,\n\n  /**\n   * A callback function that will be called before grab.\n   * @type {Function}\n   */\n  onBeforeGrab: null,\n\n  /**\n   * A callback function that will be called before move.\n   * @type {Function}\n   */\n  onBeforeMove: null,\n\n  /**\n   * A callback function that will be called before release.\n   * @type {Function}\n   */\n  onBeforeRelease: null\n}\n","import Target from './Target'\nimport Overlay from './Overlay'\nimport EventHandler from './EventHandler'\nimport OPTIONS from './_options'\nimport { loadImage, toggleGrabListeners, transEndEvent, cursor } from './_helpers'\n\n/**\n * Zooming instance.\n * @param {Object} [options] Update default options if provided.\n */\nexport default class Zooming {\n\n  constructor (options) {\n    // elements\n    this.body = document.body\n    this.overlay = new Overlay(document.createElement('div'), this)\n    this.target = null\n\n    // state\n    this.shown = false       // target is open\n    this.lock  = false       // target is in transform\n    this.released = true     // mouse/finger is not pressing down\n    this.lastScrollPosition = null\n    this.pressTimer = null\n\n    this.options = Object.assign({}, OPTIONS)\n    if (options) this.config(options)\n\n    this.eventHandler = new EventHandler(this)\n    this.overlay.init()\n  }\n\n  /**\n   * Make element(s) zoomable.\n   * @param  {string|Element} el A css selector or an Element.\n   * @return {this}\n   */\n  listen (el) {\n    if (typeof el === 'string') {\n      let els = document.querySelectorAll(el), i = els.length\n\n      while (i--) {\n        this.listen(els[i])\n      }\n\n      return this\n    }\n\n    if (el.tagName !== 'IMG') return\n\n    el.style.cursor = cursor.zoomIn\n    el.addEventListener('click', this.eventHandler.click)\n\n    if (this.options.preloadImage && el.hasAttribute('data-original')) {\n      loadImage(el.getAttribute('data-original'))\n    }\n\n    return this\n  }\n\n  /**\n   * Open (zoom in) the Element.\n   * @param  {Element} el The Element to open.\n   * @param  {Function} [cb=this.options.onOpen] A callback function that will\n   * be called when a target is opened and transition has ended. It will get\n   * the target element as the argument.\n   * @return {this}\n   */\n  open (el, cb = this.options.onOpen) {\n    if (this.shown || this.lock) return\n\n    const target = typeof el === 'string'\n      ? document.querySelector(el)\n      : el\n\n    if (target.tagName !== 'IMG') return\n\n    this.target = new Target(target, this)\n\n    // onBeforeOpen event\n    if (this.options.onBeforeOpen) this.options.onBeforeOpen(target)\n\n    this.shown = true\n    this.lock = true\n\n    this.target.open()\n    this.overlay.setParent(target.parentNode)\n    this.overlay.insert()\n    this.overlay.show()\n\n    document.addEventListener('scroll', this.eventHandler.scroll)\n    document.addEventListener('keydown', this.eventHandler.keydown)\n\n    const onEnd = () => {\n      target.removeEventListener(transEndEvent, onEnd)\n\n      this.lock = false\n\n      if (this.options.enableGrab) {\n        toggleGrabListeners(document, this.eventHandler, true)\n      }\n\n      if (target.hasAttribute('data-original')) {\n        this.target.upgradeSource()\n      }\n\n      if (cb) cb(target)\n    }\n\n    target.addEventListener(transEndEvent, onEnd)\n\n    return this\n  }\n\n  /**\n   * Close (zoom out) the Element currently opened.\n   * @param  {Function} [cb=this.options.onClose] A callback function that will\n   * be called when a target is closed and transition has ended. It will get\n   * the target element as the argument.\n   * @return {this}\n   */\n  close (cb = this.options.onClose) {\n    if (!this.shown || this.lock) return\n\n    const target = this.target.el\n\n    // onBeforeClose event\n    if (this.options.onBeforeClose) this.options.onBeforeClose(target)\n\n    this.lock = true\n\n    this.body.style.cursor = cursor.default\n    this.overlay.hide()\n    this.target.close()\n\n    document.removeEventListener('scroll', this.eventHandler.scroll)\n    document.removeEventListener('keydown', this.eventHandler.keydown)\n\n    const onEnd = () => {\n      target.removeEventListener(transEndEvent, onEnd)\n\n      this.shown = false\n      this.lock = false\n\n      if (this.options.enableGrab) {\n        toggleGrabListeners(document, this.eventHandler, false)\n      }\n\n      if (target.hasAttribute('data-original')) {\n        this.target.downgradeSource()\n      }\n\n      this.target.restoreCloseStyle()\n      this.overlay.remove()\n\n      if (cb) cb(target)\n    }\n\n    target.addEventListener(transEndEvent, onEnd)\n\n    return this\n  }\n\n  /**\n   * Grab the Element currently opened given a position and apply extra zoom-in.\n   * @param  {number}   x The X-axis of where the press happened.\n   * @param  {number}   y The Y-axis of where the press happened.\n   * @param  {number}   scaleExtra Extra zoom-in to apply.\n   * @param  {Function} [cb=this.options.scaleExtra] A callback function that\n   * will be called when a target is grabbed and transition has ended. It\n   * will get the target element as the argument.\n   * @return {this}\n   */\n  grab (x, y, scaleExtra = this.options.scaleExtra, cb) {\n    if (!this.shown || this.lock) return\n\n    const target = this.target.el\n\n    // onBeforeGrab event\n    if (this.options.onBeforeGrab) this.options.onBeforeGrab(target)\n\n    this.released = false\n    this.target.grab(x, y, scaleExtra)\n\n    const onEnd = () => {\n      target.removeEventListener(transEndEvent, onEnd)\n      if (cb) cb(target)\n    }\n\n    target.addEventListener(transEndEvent, onEnd)\n  }\n\n  /**\n   * Move the Element currently grabbed given a position and apply extra zoom-in.\n   * @param  {number}   x The X-axis of where the press happened.\n   * @param  {number}   y The Y-axis of where the press happened.\n   * @param  {number}   scaleExtra Extra zoom-in to apply.\n   * @param  {Function} [cb=this.options.scaleExtra] A callback function that\n   * will be called when a target is moved and transition has ended. It will\n   * get the target element as the argument.\n   * @return {this}\n   */\n  move (x, y, scaleExtra = this.options.scaleExtra, cb) {\n    if (!this.shown || this.lock) return\n\n    const target = this.target.el\n\n    // onBeforeMove event\n    if (this.options.onBeforeMove) this.options.onBeforeMove(target)\n\n    this.released = false\n\n    this.target.move(x, y, scaleExtra)\n    this.body.style.cursor = cursor.move\n\n    const onEnd = () => {\n      target.removeEventListener(transEndEvent, onEnd)\n      if (cb) cb(target)\n    }\n\n    target.addEventListener(transEndEvent, onEnd)\n  }\n\n  /**\n   * Release the Element currently grabbed.\n   * @param  {Function} [cb=this.options.onRelease] A callback function that\n   * will be called when a target is released and transition has ended. It\n   * will get the target element as the argument.\n   * @return {this}\n   */\n  release (cb = this.options.onRelease) {\n    if (!this.shown || this.lock) return\n\n    const target = this.target.el\n\n    // onBeforeRelease event\n    if (this.options.onBeforeRelease) this.options.onBeforeRelease(target)\n\n    this.lock = true\n\n    this.target.restoreOpenStyle()\n    this.body.style.cursor = cursor.default\n\n    const onEnd = () => {\n      target.removeEventListener(transEndEvent, onEnd)\n\n      this.lock = false\n      this.released = true\n\n      if (cb) cb(target)\n    }\n\n    target.addEventListener(transEndEvent, onEnd)\n\n    return this\n  }\n\n  /**\n   * Update options.\n   * @param  {Object} options An Object that contains this.options.\n   * @return {this}\n   */\n  config (options) {\n    if (!options) return this.options\n\n    for (let key in options) {\n      this.options[key] = options[key]\n    }\n\n    this.overlay.updateStyle()\n\n    return this\n  }\n}\n","import Zooming from './Zooming'\nimport OPTIONS from './_options'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  new Zooming().listen(OPTIONS.defaultZoomable)\n})\n\nexport default Zooming\n"],"names":["calculateTranslate","rect","windowCenter","getWindowCenter","targetCenter","left","half","width","top","height","x","y","calculateScale","scaleBase","customSize","targetHalfWidth","targetHalfHeight","targetEdgeToWindowEdge","scaleHorizontally","scaleVertically","scale","Math","min","processTouches","touches","currScaleExtra","cb","total","length","firstTouch","multitouch","scaleExtra","i","xs","ys","clientX","clientY","max","t","distX","distY","window","innerWidth","MULTITOUCH_SCALE_FACTOR","innerHeight","body","document","docElm","documentElement","webkitPrefix","style","cursor","EVENT_TYPES_GRAB","divide","denominator","numerator","loadImage","url","img","Image","onload","src","scrollTop","pageYOffset","parentNode","docWidth","clientWidth","docHeight","clientHeight","toggleListeners","el","types","handler","add","forEach","addEventListener","removeEventListener","toggleGrabListeners","sniffTransition","ret","trans","tform","end","some","undefined","prop","transitionProp","transEndEvent","transformProp","transformCssProp","replace","createElement","setStyle","styles","remember","value","transition","transform","s","original","key","bind","_this","that","methods","Object","getOwnPropertyNames","getPrototypeOf","m","Target","instance","translate","srcThumbnail","options","this","preloadImage","hasAttribute","getAttribute","getBoundingClientRect","offsetWidth","open","enableGrab","grab","zoomOut","transitionDuration","transitionTimingFunction","close","dx","dy","move","dataOriginal","temp","cloneNode","setAttribute","position","visibility","appendChild","removeChild","Overlay","parent","bgColor","_this2","opacity","bgOpacity","PRESS_DELAY","EventHandler","e","preventDefault","shown","released","release","currentTarget","st","lastScrollPosition","deltaY","abs","scrollThreshold","code","keyCode","button","pressTimer","setTimeout","_this3","targetTouches","Zooming","overlay","target","lock","assign","OPTIONS","config","eventHandler","init","els","querySelectorAll","listen","tagName","zoomIn","click","onOpen","querySelector","onBeforeOpen","setParent","insert","show","scroll","keydown","onEnd","upgradeSource","onClose","onBeforeClose","default","hide","downgradeSource","restoreCloseStyle","remove","onBeforeGrab","onBeforeMove","onRelease","onBeforeRelease","restoreOpenStyle","updateStyle","defaultZoomable"],"mappings":"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"}