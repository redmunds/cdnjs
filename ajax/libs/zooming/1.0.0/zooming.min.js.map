{"version":3,"file":null,"sources":["../src/_style.js","../src/_eventHandler.js","../src/main.js","../src/_helpers.js","../src/_defaults.js","../src/_touch.js","../src/_trans.js"],"sourcesContent":["import { webkitPrefix } from './_helpers'\n\nexport default function Style (options) {\n  return {\n    target: {\n      close: null,\n      open: null,\n    },\n    overlay: {\n      init: {\n        zIndex: 998,\n        backgroundColor: options.bgColor,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        opacity: 0,\n        transition: `opacity\n          ${options.transitionDuration}s\n          ${options.transitionTimingFunction}`\n      }\n    },\n    cursor: {\n      default: 'auto',\n      zoomIn: `${webkitPrefix}zoom-in`,\n      zoomOut: `${webkitPrefix}zoom-out`,\n      grab: `${webkitPrefix}grab`,\n      move: 'move'\n    }\n  }\n}\n","import { scrollTop } from './_helpers'\nimport { PRESS_DELAY } from './_defaults'\nimport { processTouches } from './_touch'\n\nexport default function EventHandler(instance) {\n  \n  const handler = {\n\n    click: function (e) {\n      e.preventDefault()\n\n      if (instance.shown) {\n        if (instance.released) instance.close()\n        else instance.release()\n      } else {\n        instance.open(e.currentTarget)\n      }\n    },\n\n    scroll: function () {\n      const st = scrollTop()\n\n      if (instance.lastScrollPosition === null) {\n        instance.lastScrollPosition = st\n      }\n\n      const deltaY = instance.lastScrollPosition - st\n\n      if (Math.abs(deltaY) >= instance.options.scrollThreshold) {\n        instance.lastScrollPosition = null\n        instance.close()\n      }\n    },\n\n    keydown: function (e) {\n      const code = e.key || e.code\n      if (code === 'Escape' || e.keyCode === 27) {\n        if (instance.released) instance.close()\n        else instance.release(() => instance.close())\n      }\n    },\n\n    mousedown: function (e) {\n      if (e.button !== 0) return\n      e.preventDefault()\n\n      instance.pressTimer = setTimeout(() => {\n        instance.grab(e.clientX, e.clientY)\n      }, PRESS_DELAY)\n    },\n\n    mousemove: function (e) {\n      if (instance.released) return\n      instance.move(e.clientX, e.clientY)\n    },\n\n    mouseup: function (e) {\n      if (e.button !== 0) return\n      clearTimeout(instance.pressTimer)\n\n      if (instance.released) instance.close()\n      else instance.release()\n    },\n\n    touchstart: function (e) {\n      e.preventDefault()\n\n      instance.pressTimer = setTimeout(() => {\n        processTouches(e.touches, instance.options.scaleExtra,\n          (x, y, scaleExtra) => {\n            instance.grab(x, y, scaleExtra)\n          })\n      }, PRESS_DELAY)\n    },\n\n    touchmove: function (e) {\n      if (instance.released) return\n\n      processTouches(e.touches, instance.options.scaleExtra,\n        (x, y, scaleExtra) => {\n          instance.move(x, y, scaleExtra)\n        })\n    },\n\n    touchend: function (e) {\n      if (e.targetTouches.length > 0) return\n      clearTimeout(instance.pressTimer)\n\n      if (instance.released) instance.close()\n      else instance.release()\n    }\n  }\n\n  for (let fn in handler) {\n    handler[fn] = handler[fn].bind(instance)\n  }\n\n  return handler\n}\n","import Style from './_style'\nimport EventHandler from './_eventHandler'\nimport { OPTIONS, EVENT_TYPES_GRAB } from './_defaults'\nimport { loadImage, getWindowCenter, toggleListeners } from './_helpers'\nimport { sniffTransition, checkTrans, calculateTranslate, calculateScale } from './_trans'\n\n/**\n * Zooming instance.\n * @param {Object} [options] Update default options if provided.\n */\nfunction Zooming (options) {\n  this.options = Object.assign({}, OPTIONS)\n  if (options) this.config(options)\n\n  // elements\n  this.body = document.body\n  this.overlay = document.createElement('div')\n  this.target = null\n  this.parent = null\n\n  // state\n  this.shown = false       // target is open\n  this.lock  = false       // target is in transform\n  this.released = true     // mouse/finger is not pressing down\n  this.lastScrollPosition = null\n  this.translate = null\n  this.scale = null\n  this.srcThumbnail = null\n  this.pressTimer = null\n\n  this.style = new Style(this.options)\n  this.eventHandler = new EventHandler(this)\n\n  const trans = sniffTransition(this.overlay)\n  const setStyleHelper = checkTrans(trans.transitionProp, trans.transformProp)\n  this.transformCssProp = trans.transformCssProp\n  this.transEndEvent = trans.transEndEvent\n  this.setStyle = (el, styles, remember) => {\n    return setStyleHelper(el, styles, remember)\n  }\n\n  // init overlay\n  this.setStyle(this.overlay, this.style.overlay.init)\n  this.overlay.addEventListener('click', () => this.close())\n}\n\nZooming.prototype = {\n\n  /**\n   * Make element(s) zoomable.\n   * @param  {string|Element} el A css selector or an Element.\n   * @return {this}\n   */\n  listen: function (el) {\n    if (typeof el === 'string') {\n      let els = document.querySelectorAll(el), i = els.length\n\n      while (i--) {\n        this.listen(els[i])\n      }\n\n      return this\n    }\n\n    if (el.tagName !== 'IMG') return\n\n    el.style.cursor = this.style.cursor.zoomIn\n\n    el.addEventListener('click', this.eventHandler.click)\n\n    if (this.options.preloadImage && el.hasAttribute('data-original')) {\n      loadImage(el.getAttribute('data-original'))\n    }\n\n    return this\n  },\n\n  /**\n   * Open (zoom in) the Element.\n   * @param  {Element} el The Element to open.\n   * @param  {Function} [cb=this.options.onOpen] A callback function that will\n   * be called when a target is opened and transition has ended. It will get\n   * the target element as the argument.\n   * @return {this}\n   */\n  open: function (el, cb = this.options.onOpen) {\n    if (this.shown || this.lock) return\n\n    this.target = typeof el === 'string'\n      ? document.querySelector(el)\n      : el\n\n    if (this.target.tagName !== 'IMG') return\n\n    // onBeforeOpen event\n    if (this.options.onBeforeOpen) this.options.onBeforeOpen(this.target)\n\n    this.shown = true\n    this.lock = true\n    this.parent = this.target.parentNode\n\n    // load hi-res image if preloadImage option is disabled\n    if (!this.options.preloadImage && this.target.hasAttribute('data-original')) {\n      loadImage(this.target.getAttribute('data-original'))\n    }\n\n    const rect = this.target.getBoundingClientRect()\n    this.translate = calculateTranslate(rect)\n    this.scale = calculateScale(rect, this.options.scaleBase)\n\n    // force layout update\n    this.target.offsetWidth\n\n    this.style.target.open = {\n      position: 'relative',\n      zIndex: 999,\n      cursor: this.options.enableGrab\n        ? this.style.cursor.grab\n        : this.style.cursor.zoomOut,\n      transition: `${this.transformCssProp}\n        ${this.options.transitionDuration}s\n        ${this.options.transitionTimingFunction}`,\n      transform: `translate(${this.translate.x}px, ${this.translate.y}px)\n        scale(${this.scale})`\n    }\n\n    // trigger transition\n    this.style.target.close = this.setStyle(this.target, this.style.target.open, true)\n\n    // insert this.overlay\n    this.parent.appendChild(this.overlay)\n    setTimeout(() => this.overlay.style.opacity = this.options.bgOpacity, 30)\n\n    document.addEventListener('scroll', this.eventHandler.scroll)\n    document.addEventListener('keydown', this.eventHandler.keydown)\n\n    const onEnd = () => {\n      this.target.removeEventListener(this.transEndEvent, onEnd)\n\n      this.lock = false\n\n      if (this.options.enableGrab) {\n        toggleListeners(document, EVENT_TYPES_GRAB, this.eventHandler, true)\n      }\n\n      if (this.target.hasAttribute('data-original')) {\n        this.srcThumbnail = this.target.getAttribute('src')\n        const dataOriginal = this.target.getAttribute('data-original')\n        const temp = this.target.cloneNode(false)\n\n        // force compute the hi-res image in DOM to prevent\n        // image flickering while updating src\n        temp.setAttribute('src', dataOriginal)\n        temp.style.position = 'fixed'\n        temp.style.visibility = 'hidden'\n        this.body.appendChild(temp)\n\n        setTimeout(() => {\n          this.target.setAttribute('src', dataOriginal)\n          this.body.removeChild(temp)\n        }, 10)\n      }\n\n      if (cb) cb(this.target)\n    }\n\n    this.target.addEventListener(this.transEndEvent, onEnd)\n\n    return this\n  },\n\n  /**\n   * Close (zoom out) the Element currently opened.\n   * @param  {Function} [cb=this.options.onClose] A callback function that will\n   * be called when a target is closed and transition has ended. It will get\n   * the target element as the argument.\n   * @return {this}\n   */\n  close: function (cb = this.options.onClose) {\n    if (!this.shown || this.lock) return\n\n    // onBeforeClose event\n    if (this.options.onBeforeClose) this.options.onBeforeClose(this.target)\n\n    this.lock = true\n\n    // force layout update\n    this.target.offsetWidth\n\n    this.body.style.cursor = this.style.cursor.default\n    this.overlay.style.opacity = 0\n    this.setStyle(this.target, { transform: 'none' })\n\n    document.removeEventListener('scroll', this.eventHandler.scroll)\n    document.removeEventListener('keydown', this.eventHandler.keydown)\n\n    const onEnd = () => {\n      this.target.removeEventListener(this.transEndEvent, onEnd)\n\n      this.shown = false\n      this.lock = false\n\n      if (this.options.enableGrab) {\n        toggleListeners(document, EVENT_TYPES_GRAB, this.eventHandler, false)\n      }\n\n      if (this.target.hasAttribute('data-original')) {\n        // downgrade source\n        this.target.setAttribute('src', this.srcThumbnail)\n      }\n\n      // trigger transition\n      this.setStyle(this.target, this.style.target.close)\n\n      // remove overlay\n      this.parent.removeChild(this.overlay)\n\n      if (cb) cb(this.target)\n    }\n\n    this.target.addEventListener(this.transEndEvent, onEnd)\n\n    return this\n  },\n\n  /**\n   * Grab the Element currently opened given a position and apply extra zoom-in.\n   * @param  {number}   x The X-axis of where the press happened.\n   * @param  {number}   y The Y-axis of where the press happened.\n   * @param  {number}   scaleExtra Extra zoom-in to apply.\n   * @param  {Function} [cb=this.options.scaleExtra] A callback function that\n   * will be called when a target is grabbed and transition has ended. It\n   * will get the target element as the argument.\n   * @return {this}\n   */\n  grab: function (x, y, scaleExtra = this.options.scaleExtra, cb) {\n    if (!this.shown || this.lock) return\n\n    // onBeforeGrab event\n    if (this.options.onBeforeGrab) this.options.onBeforeGrab(this.target)\n\n    this.released = false\n\n    const windowCenter = getWindowCenter()\n    const [dx, dy] = [windowCenter.x - x, windowCenter.y - y]\n\n    this.setStyle(this.target, {\n      cursor: this.style.cursor.move,\n      transform: `translate(\n        ${this.translate.x + dx}px, ${this.translate.y + dy}px)\n        scale(${this.scale + scaleExtra})`\n    })\n\n    const onEnd = () => {\n      this.target.removeEventListener(this.transEndEvent, onEnd)\n      if (cb) cb(this.target)\n    }\n\n    this.target.addEventListener(this.transEndEvent, onEnd)\n  },\n\n  /**\n   * Move the Element currently grabbed given a position and apply extra zoom-in.\n   * @param  {number}   x The X-axis of where the press happened.\n   * @param  {number}   y The Y-axis of where the press happened.\n   * @param  {number}   scaleExtra Extra zoom-in to apply.\n   * @param  {Function} [cb=this.options.scaleExtra] A callback function that\n   * will be called when a target is moved and transition has ended. It will\n   * get the target element as the argument.\n   * @return {this}\n   */\n  move: function (x, y, scaleExtra = this.options.scaleExtra, cb) {\n    if (!this.shown || this.lock) return\n\n    // onBeforeMove event\n    if (this.options.onBeforeMove) this.options.onBeforeMove(this.target)\n\n    this.released = false\n\n    const windowCenter = getWindowCenter()\n    const [dx, dy] = [windowCenter.x - x, windowCenter.y - y]\n\n    this.setStyle(this.target, {\n      transition: this.transformCssProp,\n      transform: `translate(\n        ${this.translate.x + dx}px, ${this.translate.y + dy}px)\n        scale(${this.scale + scaleExtra})`\n    })\n\n    this.body.style.cursor = this.style.cursor.move\n\n    const onEnd = () => {\n      this.target.removeEventListener(this.transEndEvent, onEnd)\n      if (cb) cb(this.target)\n    }\n\n    this.target.addEventListener(this.transEndEvent, onEnd)\n  },\n\n  /**\n   * Release the Element currently grabbed.\n   * @param  {Function} [cb=this.options.onRelease] A callback function that\n   * will be called when a target is released and transition has ended. It\n   * will get the target element as the argument.\n   * @return {this}\n   */\n  release: function (cb = this.options.onRelease) {\n    if (!this.shown || this.lock) return\n\n    // onBeforeRelease event\n    if (this.options.onBeforeRelease) this.options.onBeforeRelease(this.target)\n\n    this.lock = true\n\n    this.setStyle(this.target, this.style.target.open)\n    this.body.style.cursor = this.style.cursor.default\n\n    const onEnd = () => {\n      this.target.removeEventListener(this.transEndEvent, onEnd)\n\n      this.lock = false\n      this.released = true\n\n      if (cb) cb(this.target)\n    }\n\n    this.target.addEventListener(this.transEndEvent, onEnd)\n\n    return this\n  },\n\n  /**\n   * Update options.\n   * @param  {Object} options An Object that contains this.options.\n   * @return {this}\n   */\n  config: function (options) {\n    if (!options) return this.options\n\n    for (let key in options) {\n      this.options[key] = options[key]\n    }\n\n    this.setStyle(this.overlay, {\n      backgroundColor: this.options.bgColor,\n      transition: `opacity\n        ${this.options.transitionDuration}s\n        ${this.options.transitionTimingFunction}`\n    })\n\n    return this\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  new Zooming().listen(OPTIONS.defaultZoomable)\n})\n\nexport default Zooming\n","const body = document.body\nconst docElm = document.documentElement\nconst webkitPrefix = 'WebkitAppearance' in document.documentElement.style\n  ? '-webkit-'\n  : ''\n\nconst divide = (denominator) => {\n  return (numerator) => {\n    return numerator / denominator\n  }\n}\n\nconst half = divide(2)\n\nconst loadImage = (url, cb) => {\n  const img = new Image()\n  img.onload = () => {\n    if (cb) cb(img)\n  }\n  img.src = url\n}\n\nconst scrollTop = () => {\n  return window.pageYOffset ||\n    (docElm || body.parentNode || body).scrollTop\n}\n\nconst getWindowCenter = () => {\n  const docWidth = docElm.clientWidth || body.clientWidth\n  const docHeight = docElm.clientHeight || body.clientHeight\n\n  return {\n    x: half(docWidth),\n    y: half(docHeight)\n  }\n}\n\nconst toggleListeners = (el, types, handler, add = true) => {\n  types.forEach(t => {\n    if (add) {\n      el.addEventListener(t, handler[t])\n    } else {\n      el.removeEventListener(t, handler[t])\n    }\n  })\n}\n\nexport {\n  webkitPrefix,\n  half,\n  loadImage,\n  scrollTop,\n  getWindowCenter,\n  toggleListeners\n}\n","/**\n * A list of options.\n *\n * @type {Object}\n * @example\n * // Default options\n * var options = {\n *   defaultZoomable: 'img[data-action=\"zoom\"]',\n *   enableGrab: true,\n *   preloadImage: true,\n *   transitionDuration: 0.4,\n *   transitionTimingFunction: 'cubic-bezier(0.4, 0, 0, 1)',\n *   bgColor: 'rgb(255, 255, 255)',\n *   bgOpacity: 1,\n *   scaleBase: 1.0,\n *   scaleExtra: 0.5,\n *   scrollThreshold: 40,\n *   onOpen: null,\n *   onClose: null,\n *   onRelease: null,\n *   onBeforeOpen: null,\n *   onBeforeClose: null,\n *   onBeforeGrab: null,\n *   onBeforeMove: null,\n *   onBeforeRelease: null\n * }\n */\nconst OPTIONS = {\n  /**\n   * Zoomable elements by default. It can be a css selector or an element.\n   * @type {string|Element}\n   */\n  defaultZoomable: 'img[data-action=\"zoom\"]',\n\n  /**\n   * To be able to grab and drag the image for extra zoom-in.\n   * @type {boolean}\n   */\n  enableGrab: true,\n\n  /**\n   * Preload images with attribute \"data-original\".\n   * @type {boolean}\n   */\n  preloadImage: true,\n\n  /**\n   * Transition duration in seconds.\n   * @type {number}\n   */\n  transitionDuration: 0.4,\n\n  /**\n   * Transition timing function.\n   * @type {string}\n   */\n  transitionTimingFunction: 'cubic-bezier(0.4, 0, 0, 1)',\n\n  /**\n   * Overlay background color.\n   * @type {string}\n   */\n  bgColor: 'rgb(255, 255, 255)',\n\n  /**\n   * Overlay background opacity.\n   * @type {number}\n   */\n  bgOpacity: 1,\n\n  /**\n   * The base scale factor for zooming. By default scale to fit the window.\n   * @type {number}\n   */\n  scaleBase: 1.0,\n\n  /**\n   * The extra scale factor when grabbing the image.\n   * @type {number}\n   */\n  scaleExtra: 0.5,\n\n  /**\n   * How much scrolling it takes before closing out.\n   * @type {number}\n   */\n  scrollThreshold: 40,\n\n  /**\n   * A callback function that will be called when a target is opened and\n   * transition has ended. It will get the target element as the argument.\n   * @type {Function}\n   */\n  onOpen: null,\n\n  /**\n   * Same as above, except fired when closed.\n   * @type {Function}\n   */\n  onClose: null,\n\n  /**\n   * Same as above, except fired when released.\n   * @type {Function}\n   */\n  onRelease: null,\n\n  /**\n   * A callback function that will be called before open.\n   * @type {Function}\n   */\n  onBeforeOpen: null,\n\n  /**\n   * A callback function that will be called before close.\n   * @type {Function}\n   */\n  onBeforeClose: null,\n\n  /**\n   * A callback function that will be called before grab.\n   * @type {Function}\n   */\n  onBeforeGrab: null,\n\n  /**\n   * A callback function that will be called before move.\n   * @type {Function}\n   */\n  onBeforeMove: null,\n\n  /**\n   * A callback function that will be called before release.\n   * @type {Function}\n   */\n  onBeforeRelease: null\n}\n\nconst PRESS_DELAY = 200\nconst EVENT_TYPES_GRAB = [\n  'mousedown', 'mousemove', 'mouseup',\n  'touchstart', 'touchmove', 'touchend'\n]\nconst TOUCH_SCALE_FACTOR = 2\n\nexport {\n  OPTIONS,\n  PRESS_DELAY,\n  EVENT_TYPES_GRAB,\n  TOUCH_SCALE_FACTOR\n}\n","import { TOUCH_SCALE_FACTOR } from './_defaults'\n\n\nconst processTouches = (touches, currScaleExtra, cb) => {\n  const total = touches.length\n  const firstTouch = touches[0]\n  const multitouch = total > 1\n\n  let scaleExtra = currScaleExtra\n  let i = touches.length\n  let [xs, ys] = [0, 0]\n\n  // keep track of the min and max of touch positions\n  let min = { x: firstTouch.clientX, y: firstTouch.clientY }\n  let max = { x: firstTouch.clientX, y: firstTouch.clientY }\n\n  while (i--) {\n    const t = touches[i]\n    const [x, y] = [t.clientX, t.clientY]\n    xs += x\n    ys += y\n\n    if (!multitouch) continue\n\n    if (x < min.x) {\n      min.x = x\n    } else if (x > max.x) {\n      max.x = x\n    }\n\n    if (y < min.y) {\n      min.y = y\n    } else if (y > max.y) {\n      max.y = y\n    }\n  }\n\n  if (multitouch) {\n    // change scaleExtra dynamically\n    const [distX, distY] = [max.x - min.x, max.y - min.y]\n\n    if (distX > distY) {\n      scaleExtra = (distX / window.innerWidth) * TOUCH_SCALE_FACTOR\n    } else {\n      scaleExtra = (distY / window.innerHeight) * TOUCH_SCALE_FACTOR\n    }\n  }\n\n  cb(xs / total, ys / total, scaleExtra)\n}\n\nexport {\n  processTouches\n}\n","import { half, getWindowCenter } from './_helpers'\n\nconst sniffTransition = (el) => {\n  let ret     = {}\n  const trans = ['webkitTransition', 'transition', 'mozTransition']\n  const tform = ['webkitTransform', 'transform', 'mozTransform']\n  const end   = {\n    'transition'       : 'transitionend',\n    'mozTransition'    : 'transitionend',\n    'webkitTransition' : 'webkitTransitionEnd'\n  }\n\n  trans.some(prop => {\n    if (el.style[prop] !== undefined) {\n      ret.transitionProp = prop\n      ret.transEndEvent = end[prop]\n      return true\n    }\n  })\n\n  tform.some(prop => {\n    if (el.style[prop] !== undefined) {\n      ret.transformProp = prop\n      ret.transformCssProp = prop.replace(/(.*)Transform/, '-$1-transform')\n      return true\n    }\n  })\n\n  return ret\n}\n\nconst checkTrans = (transitionProp, transformProp) => {\n  return function setStyle(el, styles, remember) {\n    let value\n    if (styles.transition) {\n      value = styles.transition\n      delete styles.transition\n      styles[transitionProp] = value\n    }\n    if (styles.transform) {\n      value = styles.transform\n      delete styles.transform\n      styles[transformProp] = value\n    }\n\n    let s = el.style\n    let original = {}\n\n    for (let key in styles) {\n      if (remember) original[key] = s[key] || ''\n      s[key] = styles[key]\n    }\n\n    return original\n  }\n}\n\nconst calculateTranslate = (rect) => {\n  const windowCenter = getWindowCenter()\n  const targetCenter = {\n    x: rect.left + half(rect.width),\n    y: rect.top + half(rect.height)\n  }\n\n  // The vector to translate image to the window center\n  return {\n    x: windowCenter.x - targetCenter.x,\n    y: windowCenter.y - targetCenter.y\n  }\n}\n\nconst calculateScale = (rect, scaleBase) => {\n  const windowCenter = getWindowCenter()\n  const targetHalfWidth = half(rect.width)\n  const targetHalfHeight = half(rect.height)\n\n  // The distance between target edge and window edge\n  const targetEdgeToWindowEdge = {\n    x: windowCenter.x - targetHalfWidth,\n    y: windowCenter.y - targetHalfHeight\n  }\n\n  const scaleHorizontally = targetEdgeToWindowEdge.x / targetHalfWidth\n  const scaleVertically = targetEdgeToWindowEdge.y / targetHalfHeight\n\n  // The additional scale is based on the smaller value of\n  // scaling horizontally and scaling vertically\n  return scaleBase + Math.min(scaleHorizontally, scaleVertically)\n}\n\nexport {\n  sniffTransition,\n  checkTrans,\n  calculateTranslate,\n  calculateScale\n}\n"],"names":["Style","options","bgColor","transitionDuration","transitionTimingFunction","webkitPrefix","EventHandler","instance","handler","e","preventDefault","shown","released","close","release","open","currentTarget","st","scrollTop","lastScrollPosition","deltaY","Math","abs","scrollThreshold","code","key","keyCode","button","pressTimer","setTimeout","grab","clientX","clientY","PRESS_DELAY","move","touches","scaleExtra","x","y","targetTouches","length","fn","bind","Zooming","Object","assign","OPTIONS","this","config","body","document","overlay","createElement","target","parent","lock","translate","scale","srcThumbnail","style","eventHandler","trans","sniffTransition","setStyleHelper","checkTrans","transitionProp","transformProp","transformCssProp","transEndEvent","setStyle","el","styles","remember","init","addEventListener","_this","docElm","documentElement","divide","denominator","numerator","half","loadImage","url","cb","img","Image","onload","src","window","pageYOffset","parentNode","getWindowCenter","docWidth","clientWidth","docHeight","clientHeight","toggleListeners","types","add","forEach","t","removeEventListener","EVENT_TYPES_GRAB","TOUCH_SCALE_FACTOR","processTouches","currScaleExtra","total","firstTouch","multitouch","i","xs","ys","min","max","distX","distY","innerWidth","innerHeight","ret","tform","end","some","undefined","prop","replace","value","transition","transform","s","original","calculateTranslate","rect","windowCenter","targetCenter","left","width","top","height","calculateScale","scaleBase","targetHalfWidth","targetHalfHeight","targetEdgeToWindowEdge","scaleHorizontally","scaleVertically","prototype","els","querySelectorAll","listen","tagName","cursor","zoomIn","click","preloadImage","hasAttribute","getAttribute","onOpen","querySelector","onBeforeOpen","getBoundingClientRect","offsetWidth","enableGrab","zoomOut","appendChild","_this2","opacity","bgOpacity","scroll","keydown","onEnd","dataOriginal","temp","cloneNode","setAttribute","position","visibility","removeChild","onClose","onBeforeClose","default","_this3","onBeforeGrab","dx","dy","_this4","onBeforeMove","_this5","onRelease","onBeforeRelease","_this6","defaultZoomable"],"mappings":"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"}