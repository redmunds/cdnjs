{"version":3,"file":null,"sources":["../src/helpers.js","../src/options.js","../src/zooming.js"],"sourcesContent":["// webkit prefix\nconst prefix = 'WebkitAppearance' in document.documentElement.style ? '-webkit-' : ''\n\nconst sniffTransition = (el) => {\n  let ret     = {}\n  const trans = ['webkitTransition', 'transition', 'mozTransition']\n  const tform = ['webkitTransform', 'transform', 'mozTransform']\n  const end   = {\n    'transition'       : 'transitionend',\n    'mozTransition'    : 'transitionend',\n    'webkitTransition' : 'webkitTransitionEnd'\n  }\n\n  trans.some(prop => {\n    if (el.style[prop] !== undefined) {\n      ret.transitionProp = prop\n      ret.transEndEvent = end[prop]\n      return true\n    }\n  })\n\n  tform.some(prop => {\n    if (el.style[prop] !== undefined) {\n      ret.transformProp = prop\n      ret.transformCssProp = prop.replace(/(.*)Transform/, '-$1-transform')\n      return true\n    }\n  })\n\n  return ret\n}\n\nconst checkTrans = (transitionProp, transformProp) => {\n  return function setStyle(el, styles, remember) {\n    let value\n    if (styles.transition) {\n      value = styles.transition\n      delete styles.transition\n      styles[transitionProp] = value\n    }\n    if (styles.transform) {\n      value = styles.transform\n      delete styles.transform\n      styles[transformProp] = value\n    }\n\n    let s = el.style\n    let original = {}\n\n    for (let key in styles) {\n      if (remember) original[key] = s[key] || ''\n      s[key] = styles[key]\n    }\n\n    return original\n  }\n}\n\nconst toggleListeners = (el, types, handler, add = true) => {\n  types.forEach(t => {\n    if (add) {\n      el.addEventListener(t, handler[t])\n    } else {\n      el.removeEventListener(t, handler[t])\n    }\n  })\n}\n\nconst preloadImage = (url) => (new Image()).src = url\n\nconst divide = (denominator) => {\n  return (numerator) => {\n    return numerator / denominator\n  }\n}\n\nconst half = divide(2)\n\nconst getWindowCenter = () => {\n  return {\n    x: half(window.innerWidth),\n    y: half(window.innerHeight)\n  }\n}\n\nexport {\n  prefix,\n  sniffTransition,\n  checkTrans,\n  toggleListeners,\n  preloadImage,\n  half,\n  getWindowCenter\n}\n","export const options = {\n  defaultZoomable: 'img[data-action=\"zoom\"]',\n  enableGrab: true,\n  preloadImage: true,\n  transitionDuration: 0.4,\n  transitionTimingFunction: 'cubic-bezier(0.4, 0, 0, 1)',\n  bgColor: 'rgb(255, 255, 255)',\n  bgOpacity: 1,\n  scaleBase: 1.0,\n  scaleExtra: 0.5,\n  scrollThreshold: 40,\n  onOpen: null,\n  onClose: null,\n  onRelease: null,\n  onBeforeOpen: null,\n  onBeforeClose: null,\n  onBeforeGrab: null,\n  onBeforeRelease: null\n}\n","import { prefix, sniffTransition, checkTrans, toggleListeners, preloadImage, half, getWindowCenter } from './helpers'\nimport { options } from './options'\n\n// elements\nconst body    = document.body\nconst overlay = document.createElement('div')\nlet target, parent\n\n// state\nlet shown = false       // image is open\nlet lock  = false       // image is in transform\nlet released = true     // mouse/finger is not pressing down\nlet multitouch = false\nlet lastScrollPosition = null\nlet translate, scale, srcThumbnail, pressTimer, dynamicScaleExtra\n\n// style\nconst style = {\n  close: null,\n  open: null\n}\n\nconst PRESS_DELAY = 200\nconst TOUCH_SCALE_FACTOR = 2\nconst GRAB_EVENT_TYPES = [\n  'mousedown', 'mousemove', 'mouseup',\n  'touchstart', 'touchmove', 'touchend'\n]\n\n// Helpers ---------------------------------------------------------------------\n\nconst trans = sniffTransition(overlay)\nconst transformCssProp = trans.transformCssProp\nconst transEndEvent = trans.transEndEvent\nconst setStyleHelper = checkTrans(trans.transitionProp, trans.transformProp)\n\nconst setStyle = (el, styles, remember) => {\n  return setStyleHelper(el, styles, remember)\n}\n\nconst calculateTranslate = (rect) => {\n  const windowCenter = getWindowCenter()\n  const targetCenter = {\n    x: rect.left + half(rect.width),\n    y: rect.top + half(rect.height)\n  }\n\n  // The vector to translate image to the window center\n  return {\n    x: windowCenter.x - targetCenter.x,\n    y: windowCenter.y - targetCenter.y\n  }\n}\n\nconst calculateScale = (rect, scaleBase) => {\n  const targetHalfWidth = half(rect.width)\n  const targetHalfHeight = half(rect.height)\n  const windowCenter = getWindowCenter()\n\n  // The distance between target edge and window edge\n  const targetEdgeToWindowEdge = {\n    x: windowCenter.x - targetHalfWidth,\n    y: windowCenter.y - targetHalfHeight\n  }\n\n  const scaleHorizontally = targetEdgeToWindowEdge.x / targetHalfWidth\n  const scaleVertically = targetEdgeToWindowEdge.y / targetHalfHeight\n\n  // The additional scale is based on the smaller value of\n  // scaling horizontally and scaling vertically\n  return scaleBase + Math.min(scaleHorizontally, scaleVertically)\n}\n\nconst processTouches = (touches, cb) => {\n  const total = touches.length\n  const firstTouch = touches[0]\n\n  let i = touches.length\n  let [xs, ys] = [0, 0]\n\n  // keep track of the min and max of touch positions\n  let min = { x: firstTouch.clientX, y: firstTouch.clientY }\n  let max = { x: firstTouch.clientX, y: firstTouch.clientY }\n\n  multitouch = total > 1\n\n  while (i--) {\n    const t = touches[i]\n    const [x, y] = [t.clientX, t.clientY]\n    xs += x\n    ys += y\n\n    if (multitouch) {\n      if (x < min.x) min.x = x\n      else if (x > max.x) max.x = x\n\n      if (y < min.y) min.y = y\n      else if (y > max.y) max.y = y\n    }\n  }\n\n  if (multitouch) {\n    // change scaleExtra dynamically\n    const [distX, distY] = [max.x - min.x, max.y - min.y]\n\n    if (distX > distY) {\n      dynamicScaleExtra = (distX / window.innerWidth) * TOUCH_SCALE_FACTOR\n    } else {\n      dynamicScaleExtra = (distY / window.innerHeight) * TOUCH_SCALE_FACTOR\n    }\n  }\n\n  cb(xs / total, ys / total)\n}\n\n// Event handler ---------------------------------------------------------------\n\nconst eventHandler = {\n\n  scroll: function () {\n    const scrollTop = window.pageYOffset ||\n      (document.documentElement || body.parentNode || body).scrollTop\n\n    if (lastScrollPosition === null) lastScrollPosition = scrollTop\n\n    const deltaY = lastScrollPosition - scrollTop\n\n    if (Math.abs(deltaY) >= options.scrollThreshold) {\n      lastScrollPosition = null\n      api.close()\n    }\n  },\n\n  keydown: function (e) {\n    const code = e.key || e.code\n    if (code === 'Escape' || e.keyCode === 27) api.close()\n  },\n\n  mousedown: function (e) {\n    e.preventDefault()\n\n    pressTimer = setTimeout(function () {\n      api.grab(e.clientX, e.clientY, true)\n    }, PRESS_DELAY)\n  },\n\n  mousemove: function (e) {\n    if (released) return\n    api.grab(e.clientX, e.clientY)\n  },\n\n  mouseup: function () {\n    clearTimeout(pressTimer)\n  },\n\n  touchstart: function (e) {\n    e.preventDefault()\n\n    pressTimer = setTimeout(() => {\n      processTouches(e.touches, (x, y) => api.grab(x, y, true))\n    }, PRESS_DELAY)\n  },\n\n  touchmove: function (e) {\n    if (released) return\n    processTouches(e.touches, (x, y) => api.grab(x, y))\n  },\n\n  touchend: function (e) {\n    if (e.targetTouches.length > 0) return\n    clearTimeout(pressTimer)\n\n    if (released) {\n      api.close()\n    } else {\n      api.release()\n    }\n  }\n}\n\n// API -------------------------------------------------------------------------\n\nconst api = {\n\n  listen: (el) => {\n    if (typeof el === 'string') {\n      let els = document.querySelectorAll(el), i = els.length\n\n      while (i--) {\n        api.listen(els[i])\n      }\n\n      return this\n    }\n\n    if (el.tagName !== 'IMG') return\n\n    el.style.cursor = `${prefix}zoom-in`\n\n    el.addEventListener('click', (e) => {\n      e.preventDefault()\n\n      if (shown) {\n        if (released) {\n          api.close()\n        } else {\n          api.release()\n        }\n      } else {\n        api.open(el)\n      }\n    })\n\n    if (options.preloadImage && el.hasAttribute('data-original')) {\n      preloadImage(el.getAttribute('data-original'))\n    }\n\n    return this\n  },\n\n  config: (opts) => {\n    if (!opts) return options\n\n    for (let key in opts) {\n      options[key] = opts[key]\n    }\n\n    setStyle(overlay, {\n      backgroundColor: options.bgColor,\n      transition: `opacity\n        ${options.transitionDuration}s\n        ${options.transitionTimingFunction}`\n    })\n\n    return this\n  },\n\n  open: (el, cb = options.onOpen) => {\n    if (shown || lock) return\n\n    target = typeof el === 'string'\n      ? document.querySelector(el)\n      : el\n\n    if (target.tagName !== 'IMG') return\n\n    // onBeforeOpen event\n    if (options.onBeforeOpen) options.onBeforeOpen(target)\n\n    shown = true\n    lock = true\n    parent = target.parentNode\n\n    const rect = target.getBoundingClientRect()\n    translate = calculateTranslate(rect)\n    scale = calculateScale(rect, options.scaleBase)\n\n    // force layout update\n    target.offsetWidth\n\n    style.open = {\n      position: 'relative',\n      zIndex: 999,\n      cursor: `${prefix}${options.enableGrab ? 'grab' : 'zoom-out'}`,\n      transition: `${transformCssProp}\n        ${options.transitionDuration}s\n        ${options.transitionTimingFunction}`,\n      transform: `translate(${translate.x}px, ${translate.y}px) scale(${scale})`\n    }\n\n    // trigger transition\n    style.close = setStyle(target, style.open, true)\n\n    parent.appendChild(overlay)\n    setTimeout(() => overlay.style.opacity = options.bgOpacity, 30)\n\n    document.addEventListener('scroll', eventHandler.scroll)\n    document.addEventListener('keydown', eventHandler.keydown)\n\n    target.addEventListener(transEndEvent, function onEnd () {\n      target.removeEventListener(transEndEvent, onEnd)\n\n      if (options.enableGrab) toggleListeners(target, GRAB_EVENT_TYPES, eventHandler, true)\n\n      lock = false\n\n      // upgrade source if possible\n      if (target.hasAttribute('data-original')) {\n        srcThumbnail = target.getAttribute('src')\n        target.setAttribute('src', target.getAttribute('data-original'))\n      }\n\n      if (cb) cb(target)\n    })\n\n    return this\n  },\n\n  close: (cb = options.onClose) => {\n    if (!shown || lock) return\n    lock = true\n\n    // onBeforeClose event\n    if (options.onBeforeClose) options.onBeforeClose(target)\n\n    // force layout update\n    target.offsetWidth\n\n    overlay.style.opacity = 0\n    setStyle(target, { transform: 'none' })\n\n    document.removeEventListener('scroll', eventHandler.scroll)\n    document.removeEventListener('keydown', eventHandler.keydown)\n\n    target.addEventListener(transEndEvent, function onEnd () {\n      target.removeEventListener(transEndEvent, onEnd)\n\n      if (options.enableGrab) toggleListeners(target, GRAB_EVENT_TYPES, eventHandler, false)\n\n      shown = false\n      lock = false\n\n      // downgrade source if possible\n      if (target.hasAttribute('data-original')) {\n        target.setAttribute('src', srcThumbnail)\n      }\n\n      setStyle(target, style.close)\n      parent.removeChild(overlay)\n\n      if (cb) cb(target)\n    })\n\n    return this\n  },\n\n  grab: (x, y, start, cb) => {\n    if (!shown || lock) return\n    released = false\n\n    // onBeforeGrab event\n    if (options.onBeforeGrab) options.onBeforeGrab(target)\n\n    const windowCenter = getWindowCenter()\n    const [dx, dy] = [windowCenter.x - x, windowCenter.y - y]\n    const scaleExtra = multitouch ? dynamicScaleExtra : options.scaleExtra\n    const transform = target.style.transform\n      .replace(/translate\\(.*?\\)/i, `translate(${translate.x + dx}px, ${translate.y + dy}px)`)\n      .replace(/scale\\([0-9|\\.]*\\)/i, `scale(${scale + scaleExtra})`)\n\n    setStyle(target, {\n      cursor: 'move',\n      transition: `${transformCssProp} ${start\n        ? options.transitionDuration + 's ' + options.transitionTimingFunction\n        : 'ease'}`,\n      transform: transform\n    })\n\n    target.addEventListener(transEndEvent, function onEnd () {\n     target.removeEventListener(transEndEvent, onEnd)\n     if (cb) cb(target)\n   })\n  },\n\n  release: (cb = options.onRelease) => {\n    if (!shown || lock) return\n    lock = true\n\n    // onBeforeRelease event\n    if (options.onBeforeRelease) options.onBeforeRelease(target)\n\n    setStyle(target, style.open)\n\n    target.addEventListener(transEndEvent, function onEnd () {\n      target.removeEventListener(transEndEvent, onEnd)\n\n      lock = false\n      released = true\n\n      if (cb) cb(target)\n    })\n\n    return this\n  }\n}\n\n// Init ------------------------------------------------------------------------\n\noverlay.setAttribute('id', 'zoom-overlay')\nsetStyle(overlay, {\n  zIndex: 998,\n  backgroundColor: options.bgColor,\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  opacity: 0,\n  transition: `opacity\n    ${options.transitionDuration}s\n    ${options.transitionTimingFunction}`\n})\n\noverlay.addEventListener('click', () => api.close())\ndocument.addEventListener('DOMContentLoaded', () => api.listen(options.defaultZoomable))\n\nexport default api\n"],"names":["prefix","document","documentElement","style","sniffTransition","el","ret","trans","tform","end","some","undefined","prop","transitionProp","transEndEvent","transformProp","transformCssProp","replace","checkTrans","styles","remember","value","transition","transform","s","original","key","toggleListeners","types","handler","add","forEach","addEventListener","t","removeEventListener","preloadImage","url","Image","src","divide","denominator","numerator","half","getWindowCenter","window","innerWidth","innerHeight","options","body","overlay","createElement","target","parent","shown","lock","released","multitouch","lastScrollPosition","translate","scale","srcThumbnail","pressTimer","dynamicScaleExtra","PRESS_DELAY","TOUCH_SCALE_FACTOR","GRAB_EVENT_TYPES","setStyleHelper","setStyle","calculateTranslate","rect","windowCenter","targetCenter","left","width","top","height","x","y","calculateScale","scaleBase","targetHalfWidth","targetHalfHeight","targetEdgeToWindowEdge","scaleHorizontally","scaleVertically","Math","min","processTouches","touches","cb","total","length","firstTouch","i","xs","ys","clientX","clientY","max","distX","distY","eventHandler","scrollTop","pageYOffset","parentNode","deltaY","abs","scrollThreshold","close","e","code","keyCode","api","preventDefault","setTimeout","grab","targetTouches","release","els","querySelectorAll","listen","tagName","cursor","open","hasAttribute","getAttribute","opts","bgColor","transitionDuration","transitionTimingFunction","onOpen","querySelector","onBeforeOpen","getBoundingClientRect","offsetWidth","enableGrab","appendChild","opacity","bgOpacity","scroll","keydown","onEnd","setAttribute","onClose","onBeforeClose","removeChild","start","onBeforeGrab","dx","dy","scaleExtra","onRelease","onBeforeRelease","defaultZoomable"],"mappings":"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"}