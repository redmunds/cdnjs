{"version":3,"file":null,"sources":["../src/_style.js","../src/_eventHandler.js","../src/main.js","../src/_helpers.js","../src/_defaults.js","../src/_touch.js","../src/_trans.js"],"sourcesContent":["import { webkitPrefix } from './_helpers'\n\nexport default function Style (options) {\n  return {\n    target: {\n      close: null,\n      open: null\n    },\n    overlay: {\n      init: {\n        zIndex: 998,\n        backgroundColor: options.bgColor,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        opacity: 0,\n        transition: `opacity\n          ${options.transitionDuration}s\n          ${options.transitionTimingFunction}`\n      }\n    },\n    cursor: {\n      default: 'auto',\n      zoomIn: `${webkitPrefix}zoom-in`,\n      zoomOut: `${webkitPrefix}zoom-out`,\n      grab: `${webkitPrefix}grab`,\n      move: 'move'\n    }\n  }\n}\n","import { scrollTop } from './_helpers'\nimport { PRESS_DELAY } from './_defaults'\nimport { processTouches } from './_touch'\n\nexport default function EventHandler(instance) {\n  \n  const handler = {\n\n    click: function (e) {\n      e.preventDefault()\n\n      if (instance.shown) {\n        if (instance.released) instance.close()\n        else instance.release()\n      } else {\n        instance.open(e.currentTarget)\n      }\n    },\n\n    scroll: function () {\n      const st = scrollTop()\n\n      if (instance.lastScrollPosition === null) {\n        instance.lastScrollPosition = st\n      }\n\n      const deltaY = instance.lastScrollPosition - st\n\n      if (Math.abs(deltaY) >= instance.options.scrollThreshold) {\n        instance.lastScrollPosition = null\n        instance.close()\n      }\n    },\n\n    keydown: function (e) {\n      const code = e.key || e.code\n      if (code === 'Escape' || e.keyCode === 27) {\n        if (instance.released) instance.close()\n        else instance.release(() => instance.close())\n      }\n    },\n\n    mousedown: function (e) {\n      if (e.button !== 0) return\n      e.preventDefault()\n\n      instance.pressTimer = setTimeout(() => {\n        instance.grab(e.clientX, e.clientY)\n      }, PRESS_DELAY)\n    },\n\n    mousemove: function (e) {\n      if (instance.released) return\n      instance.move(e.clientX, e.clientY)\n    },\n\n    mouseup: function (e) {\n      if (e.button !== 0) return\n      clearTimeout(instance.pressTimer)\n\n      if (instance.released) instance.close()\n      else instance.release()\n    },\n\n    touchstart: function (e) {\n      e.preventDefault()\n\n      instance.pressTimer = setTimeout(() => {\n        processTouches(e.touches, instance.options.scaleExtra,\n          (x, y, scaleExtra) => {\n            instance.grab(x, y, scaleExtra)\n          })\n      }, PRESS_DELAY)\n    },\n\n    touchmove: function (e) {\n      if (instance.released) return\n\n      processTouches(e.touches, instance.options.scaleExtra,\n        (x, y, scaleExtra) => {\n          instance.move(x, y, scaleExtra)\n        })\n    },\n\n    touchend: function (e) {\n      if (e.targetTouches.length > 0) return\n      clearTimeout(instance.pressTimer)\n\n      if (instance.released) instance.close()\n      else instance.release()\n    }\n  }\n\n  for (let fn in handler) {\n    handler[fn] = handler[fn].bind(instance)\n  }\n\n  return handler\n}\n","import Style from './_style'\nimport EventHandler from './_eventHandler'\nimport { OPTIONS, EVENT_TYPES_GRAB } from './_defaults'\nimport { loadImage, getWindowCenter, toggleListeners,\n  transformCssProp, transEndEvent, setStyle } from './_helpers'\nimport { calculateTranslate, calculateScale } from './_trans'\n\n/**\n * Zooming instance.\n * @param {Object} [options] Update default options if provided.\n */\nfunction Zooming (options) {\n  // elements\n  this.body = document.body\n  this.overlay = document.createElement('div')\n  this.target = null\n  this.parent = null\n\n  // state\n  this.shown = false       // target is open\n  this.lock  = false       // target is in transform\n  this.released = true     // mouse/finger is not pressing down\n  this.lastScrollPosition = null\n  this.translate = null\n  this.scale = null\n  this.srcThumbnail = null\n  this.pressTimer = null\n\n  this.options = Object.assign({}, OPTIONS)\n  if (options) this.config(options)\n  this.style = new Style(this.options)\n  this.eventHandler = new EventHandler(this)\n\n  // init overlay\n  setStyle(this.overlay, this.style.overlay.init)\n  this.overlay.addEventListener('click', () => this.close())\n}\n\nZooming.prototype = {\n\n  /**\n   * Make element(s) zoomable.\n   * @param  {string|Element} el A css selector or an Element.\n   * @return {this}\n   */\n  listen: function (el) {\n    if (typeof el === 'string') {\n      let els = document.querySelectorAll(el), i = els.length\n\n      while (i--) {\n        this.listen(els[i])\n      }\n\n      return this\n    }\n\n    if (el.tagName !== 'IMG') return\n\n    el.style.cursor = this.style.cursor.zoomIn\n\n    el.addEventListener('click', this.eventHandler.click)\n\n    if (this.options.preloadImage && el.hasAttribute('data-original')) {\n      loadImage(el.getAttribute('data-original'))\n    }\n\n    return this\n  },\n\n  /**\n   * Open (zoom in) the Element.\n   * @param  {Element} el The Element to open.\n   * @param  {Function} [cb=this.options.onOpen] A callback function that will\n   * be called when a target is opened and transition has ended. It will get\n   * the target element as the argument.\n   * @return {this}\n   */\n  open: function (el, cb = this.options.onOpen) {\n    if (this.shown || this.lock) return\n\n    this.target = typeof el === 'string'\n      ? document.querySelector(el)\n      : el\n\n    if (this.target.tagName !== 'IMG') return\n\n    // onBeforeOpen event\n    if (this.options.onBeforeOpen) this.options.onBeforeOpen(this.target)\n\n    this.shown = true\n    this.lock = true\n    this.parent = this.target.parentNode\n\n    // load hi-res image if preloadImage option is disabled\n    if (!this.options.preloadImage && this.target.hasAttribute('data-original')) {\n      loadImage(this.target.getAttribute('data-original'))\n    }\n\n    const rect = this.target.getBoundingClientRect()\n    this.translate = calculateTranslate(rect)\n    this.scale = calculateScale(rect, this.options.scaleBase, this.options.customSize)\n\n    // force layout update\n    this.target.offsetWidth\n\n    this.style.target.open = {\n      position: 'relative',\n      zIndex: 999,\n      cursor: this.options.enableGrab\n        ? this.style.cursor.grab\n        : this.style.cursor.zoomOut,\n      transition: `${transformCssProp}\n        ${this.options.transitionDuration}s\n        ${this.options.transitionTimingFunction}`,\n      transform: `translate(${this.translate.x}px, ${this.translate.y}px)\n        scale(${this.scale.x},${this.scale.y})`\n    }\n\n    // trigger transition\n    this.style.target.close = setStyle(this.target, this.style.target.open, true)\n\n    // insert this.overlay\n    this.parent.appendChild(this.overlay)\n    setTimeout(() => this.overlay.style.opacity = this.options.bgOpacity, 30)\n\n    document.addEventListener('scroll', this.eventHandler.scroll)\n    document.addEventListener('keydown', this.eventHandler.keydown)\n\n    const onEnd = () => {\n      this.target.removeEventListener(transEndEvent, onEnd)\n\n      this.lock = false\n\n      if (this.options.enableGrab) {\n        toggleListeners(document, EVENT_TYPES_GRAB, this.eventHandler, true)\n      }\n\n      if (this.target.hasAttribute('data-original')) {\n        this.srcThumbnail = this.target.getAttribute('src')\n        const dataOriginal = this.target.getAttribute('data-original')\n        const temp = this.target.cloneNode(false)\n\n        // force compute the hi-res image in DOM to prevent\n        // image flickering while updating src\n        temp.setAttribute('src', dataOriginal)\n        temp.style.position = 'fixed'\n        temp.style.visibility = 'hidden'\n        this.body.appendChild(temp)\n\n        setTimeout(() => {\n          this.target.setAttribute('src', dataOriginal)\n          this.body.removeChild(temp)\n        }, 10)\n      }\n\n      if (cb) cb(this.target)\n    }\n\n    this.target.addEventListener(transEndEvent, onEnd)\n\n    return this\n  },\n\n  /**\n   * Close (zoom out) the Element currently opened.\n   * @param  {Function} [cb=this.options.onClose] A callback function that will\n   * be called when a target is closed and transition has ended. It will get\n   * the target element as the argument.\n   * @return {this}\n   */\n  close: function (cb = this.options.onClose) {\n    if (!this.shown || this.lock) return\n\n    // onBeforeClose event\n    if (this.options.onBeforeClose) this.options.onBeforeClose(this.target)\n\n    this.lock = true\n\n    // force layout update\n    this.target.offsetWidth\n\n    this.body.style.cursor = this.style.cursor.default\n    this.overlay.style.opacity = 0\n    setStyle(this.target, { transform: 'none' })\n\n    document.removeEventListener('scroll', this.eventHandler.scroll)\n    document.removeEventListener('keydown', this.eventHandler.keydown)\n\n    const onEnd = () => {\n      this.target.removeEventListener(transEndEvent, onEnd)\n\n      this.shown = false\n      this.lock = false\n\n      if (this.options.enableGrab) {\n        toggleListeners(document, EVENT_TYPES_GRAB, this.eventHandler, false)\n      }\n\n      if (this.target.hasAttribute('data-original')) {\n        // downgrade source\n        this.target.setAttribute('src', this.srcThumbnail)\n      }\n\n      // trigger transition\n      setStyle(this.target, this.style.target.close)\n\n      // remove overlay\n      this.parent.removeChild(this.overlay)\n\n      if (cb) cb(this.target)\n    }\n\n    this.target.addEventListener(transEndEvent, onEnd)\n\n    return this\n  },\n\n  /**\n   * Grab the Element currently opened given a position and apply extra zoom-in.\n   * @param  {number}   x The X-axis of where the press happened.\n   * @param  {number}   y The Y-axis of where the press happened.\n   * @param  {number}   scaleExtra Extra zoom-in to apply.\n   * @param  {Function} [cb=this.options.scaleExtra] A callback function that\n   * will be called when a target is grabbed and transition has ended. It\n   * will get the target element as the argument.\n   * @return {this}\n   */\n  grab: function (x, y, scaleExtra = this.options.scaleExtra, cb) {\n    if (!this.shown || this.lock) return\n\n    // onBeforeGrab event\n    if (this.options.onBeforeGrab) this.options.onBeforeGrab(this.target)\n\n    this.released = false\n\n    const windowCenter = getWindowCenter()\n    const [dx, dy] = [windowCenter.x - x, windowCenter.y - y]\n\n    setStyle(this.target, {\n      cursor: this.style.cursor.move,\n      transform: `translate(\n        ${this.translate.x + dx}px, ${this.translate.y + dy}px)\n        scale(${this.scale.x + scaleExtra},${this.scale.y + scaleExtra})`\n    })\n\n    const onEnd = () => {\n      this.target.removeEventListener(transEndEvent, onEnd)\n      if (cb) cb(this.target)\n    }\n\n    this.target.addEventListener(transEndEvent, onEnd)\n  },\n\n  /**\n   * Move the Element currently grabbed given a position and apply extra zoom-in.\n   * @param  {number}   x The X-axis of where the press happened.\n   * @param  {number}   y The Y-axis of where the press happened.\n   * @param  {number}   scaleExtra Extra zoom-in to apply.\n   * @param  {Function} [cb=this.options.scaleExtra] A callback function that\n   * will be called when a target is moved and transition has ended. It will\n   * get the target element as the argument.\n   * @return {this}\n   */\n  move: function (x, y, scaleExtra = this.options.scaleExtra, cb) {\n    if (!this.shown || this.lock) return\n\n    // onBeforeMove event\n    if (this.options.onBeforeMove) this.options.onBeforeMove(this.target)\n\n    this.released = false\n\n    const windowCenter = getWindowCenter()\n    const [dx, dy] = [windowCenter.x - x, windowCenter.y - y]\n\n    setStyle(this.target, {\n      transition: transformCssProp,\n      transform: `translate(\n        ${this.translate.x + dx}px, ${this.translate.y + dy}px)\n        scale(${this.scale.x + scaleExtra},${this.scale.y + scaleExtra})`\n    })\n\n    this.body.style.cursor = this.style.cursor.move\n\n    const onEnd = () => {\n      this.target.removeEventListener(transEndEvent, onEnd)\n      if (cb) cb(this.target)\n    }\n\n    this.target.addEventListener(transEndEvent, onEnd)\n  },\n\n  /**\n   * Release the Element currently grabbed.\n   * @param  {Function} [cb=this.options.onRelease] A callback function that\n   * will be called when a target is released and transition has ended. It\n   * will get the target element as the argument.\n   * @return {this}\n   */\n  release: function (cb = this.options.onRelease) {\n    if (!this.shown || this.lock) return\n\n    // onBeforeRelease event\n    if (this.options.onBeforeRelease) this.options.onBeforeRelease(this.target)\n\n    this.lock = true\n\n    setStyle(this.target, this.style.target.open)\n    this.body.style.cursor = this.style.cursor.default\n\n    const onEnd = () => {\n      this.target.removeEventListener(transEndEvent, onEnd)\n\n      this.lock = false\n      this.released = true\n\n      if (cb) cb(this.target)\n    }\n\n    this.target.addEventListener(transEndEvent, onEnd)\n\n    return this\n  },\n\n  /**\n   * Update options.\n   * @param  {Object} options An Object that contains this.options.\n   * @return {this}\n   */\n  config: function (options) {\n    if (!options) return this.options\n\n    for (let key in options) {\n      this.options[key] = options[key]\n    }\n\n    setStyle(this.overlay, {\n      backgroundColor: this.options.bgColor,\n      transition: `opacity\n        ${this.options.transitionDuration}s\n        ${this.options.transitionTimingFunction}`\n    })\n\n    return this\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  new Zooming().listen(OPTIONS.defaultZoomable)\n})\n\nexport default Zooming\n","const body = document.body\nconst docElm = document.documentElement\nconst webkitPrefix = 'WebkitAppearance' in document.documentElement.style\n  ? '-webkit-'\n  : ''\n\nconst divide = (denominator) => {\n  return (numerator) => {\n    return numerator / denominator\n  }\n}\n\nconst half = divide(2)\n\nconst loadImage = (url, cb) => {\n  const img = new Image()\n  img.onload = () => {\n    if (cb) cb(img)\n  }\n  img.src = url\n}\n\nconst scrollTop = () => {\n  return window.pageYOffset ||\n    (docElm || body.parentNode || body).scrollTop\n}\n\nconst getWindowCenter = () => {\n  const docWidth = docElm.clientWidth || body.clientWidth\n  const docHeight = docElm.clientHeight || body.clientHeight\n\n  return {\n    x: half(docWidth),\n    y: half(docHeight)\n  }\n}\n\nconst toggleListeners = (el, types, handler, add = true) => {\n  types.forEach(t => {\n    if (add) {\n      el.addEventListener(t, handler[t])\n    } else {\n      el.removeEventListener(t, handler[t])\n    }\n  })\n}\n\nconst sniffTransition = (el) => {\n  let ret     = {}\n  const trans = ['webkitTransition', 'transition', 'mozTransition']\n  const tform = ['webkitTransform', 'transform', 'mozTransform']\n  const end   = {\n    'transition'       : 'transitionend',\n    'mozTransition'    : 'transitionend',\n    'webkitTransition' : 'webkitTransitionEnd'\n  }\n\n  trans.some(prop => {\n    if (el.style[prop] !== undefined) {\n      ret.transitionProp = prop\n      ret.transEndEvent = end[prop]\n      return true\n    }\n  })\n\n  tform.some(prop => {\n    if (el.style[prop] !== undefined) {\n      ret.transformProp = prop\n      ret.transformCssProp = prop.replace(/(.*)Transform/, '-$1-transform')\n      return true\n    }\n  })\n\n  return ret\n}\n\nconst trans = sniffTransition(document.createElement('div'))\nconst transitionProp = trans.transitionProp\nconst transformProp = trans.transformProp\nconst transformCssProp = trans.transformCssProp\nconst transEndEvent = trans.transEndEvent\n\nconst setStyle = (el, styles, remember) => {\n  let value\n  if (styles.transition) {\n    value = styles.transition\n    delete styles.transition\n    styles[transitionProp] = value\n  }\n  if (styles.transform) {\n    value = styles.transform\n    delete styles.transform\n    styles[transformProp] = value\n  }\n\n  let s = el.style\n  let original = {}\n\n  for (let key in styles) {\n    if (remember) original[key] = s[key] || ''\n    s[key] = styles[key]\n  }\n\n  return original\n}\n\nexport {\n  webkitPrefix,\n  half,\n  loadImage,\n  scrollTop,\n  getWindowCenter,\n  toggleListeners,\n  transformCssProp,\n  transEndEvent,\n  setStyle\n}\n","/**\n * A list of options.\n *\n * @type {Object}\n * @example\n * // Default options\n * var options = {\n *   defaultZoomable: 'img[data-action=\"zoom\"]',\n *   enableGrab: true,\n *   preloadImage: true,\n *   transitionDuration: 0.4,\n *   transitionTimingFunction: 'cubic-bezier(0.4, 0, 0, 1)',\n *   bgColor: 'rgb(255, 255, 255)',\n *   bgOpacity: 1,\n *   scaleBase: 1.0,\n *   scaleExtra: 0.5,\n *   scrollThreshold: 40,\n *   customSize: null,\n *   onOpen: null,\n *   onClose: null,\n *   onRelease: null,\n *   onBeforeOpen: null,\n *   onBeforeClose: null,\n *   onBeforeGrab: null,\n *   onBeforeMove: null,\n *   onBeforeRelease: null\n * }\n */\nconst OPTIONS = {\n  /**\n   * Zoomable elements by default. It can be a css selector or an element.\n   * @type {string|Element}\n   */\n  defaultZoomable: 'img[data-action=\"zoom\"]',\n\n  /**\n   * To be able to grab and drag the image for extra zoom-in.\n   * @type {boolean}\n   */\n  enableGrab: true,\n\n  /**\n   * Preload images with attribute \"data-original\".\n   * @type {boolean}\n   */\n  preloadImage: true,\n\n  /**\n   * Transition duration in seconds.\n   * @type {number}\n   */\n  transitionDuration: 0.4,\n\n  /**\n   * Transition timing function.\n   * @type {string}\n   */\n  transitionTimingFunction: 'cubic-bezier(0.4, 0, 0, 1)',\n\n  /**\n   * Overlay background color.\n   * @type {string}\n   */\n  bgColor: 'rgb(255, 255, 255)',\n\n  /**\n   * Overlay background opacity.\n   * @type {number}\n   */\n  bgOpacity: 1,\n\n  /**\n   * The base scale factor for zooming. By default scale to fit the window.\n   * @type {number}\n   */\n  scaleBase: 1.0,\n\n  /**\n   * The extra scale factor when grabbing the image.\n   * @type {number}\n   */\n  scaleExtra: 0.5,\n\n  /**\n   * How much scrolling it takes before closing out.\n   * @type {number}\n   */\n  scrollThreshold: 40,\n\n  /**\n   * Scale (zoom in) to given width and height. Ignore scaleBase if set.\n   * @type {Object}\n   * @example\n   * customSize: { width: 800, height: 400 }\n   */\n  customSize: null,\n\n  /**\n   * A callback function that will be called when a target is opened and\n   * transition has ended. It will get the target element as the argument.\n   * @type {Function}\n   */\n  onOpen: null,\n\n  /**\n   * Same as above, except fired when closed.\n   * @type {Function}\n   */\n  onClose: null,\n\n  /**\n   * Same as above, except fired when released.\n   * @type {Function}\n   */\n  onRelease: null,\n\n  /**\n   * A callback function that will be called before open.\n   * @type {Function}\n   */\n  onBeforeOpen: null,\n\n  /**\n   * A callback function that will be called before close.\n   * @type {Function}\n   */\n  onBeforeClose: null,\n\n  /**\n   * A callback function that will be called before grab.\n   * @type {Function}\n   */\n  onBeforeGrab: null,\n\n  /**\n   * A callback function that will be called before move.\n   * @type {Function}\n   */\n  onBeforeMove: null,\n\n  /**\n   * A callback function that will be called before release.\n   * @type {Function}\n   */\n  onBeforeRelease: null\n}\n\nconst PRESS_DELAY = 200\nconst EVENT_TYPES_GRAB = [\n  'mousedown', 'mousemove', 'mouseup',\n  'touchstart', 'touchmove', 'touchend'\n]\nconst TOUCH_SCALE_FACTOR = 2\n\nexport {\n  OPTIONS,\n  PRESS_DELAY,\n  EVENT_TYPES_GRAB,\n  TOUCH_SCALE_FACTOR\n}\n","import { TOUCH_SCALE_FACTOR } from './_defaults'\n\n\nconst processTouches = (touches, currScaleExtra, cb) => {\n  const total = touches.length\n  const firstTouch = touches[0]\n  const multitouch = total > 1\n\n  let scaleExtra = currScaleExtra\n  let i = touches.length\n  let [xs, ys] = [0, 0]\n\n  // keep track of the min and max of touch positions\n  let min = { x: firstTouch.clientX, y: firstTouch.clientY }\n  let max = { x: firstTouch.clientX, y: firstTouch.clientY }\n\n  while (i--) {\n    const t = touches[i]\n    const [x, y] = [t.clientX, t.clientY]\n    xs += x\n    ys += y\n\n    if (!multitouch) continue\n\n    if (x < min.x) {\n      min.x = x\n    } else if (x > max.x) {\n      max.x = x\n    }\n\n    if (y < min.y) {\n      min.y = y\n    } else if (y > max.y) {\n      max.y = y\n    }\n  }\n\n  if (multitouch) {\n    // change scaleExtra dynamically\n    const [distX, distY] = [max.x - min.x, max.y - min.y]\n\n    if (distX > distY) {\n      scaleExtra = (distX / window.innerWidth) * TOUCH_SCALE_FACTOR\n    } else {\n      scaleExtra = (distY / window.innerHeight) * TOUCH_SCALE_FACTOR\n    }\n  }\n\n  cb(xs / total, ys / total, scaleExtra)\n}\n\nexport {\n  processTouches\n}\n","import { half, getWindowCenter } from './_helpers'\n\nconst calculateTranslate = (rect) => {\n  const windowCenter = getWindowCenter()\n  const targetCenter = {\n    x: rect.left + half(rect.width),\n    y: rect.top + half(rect.height)\n  }\n\n  // The vector to translate image to the window center\n  return {\n    x: windowCenter.x - targetCenter.x,\n    y: windowCenter.y - targetCenter.y\n  }\n}\n\nconst calculateScale = (rect, scaleBase, customSize) => {\n  if (customSize) {\n    return {\n      x: customSize.width / rect.width,\n      y: customSize.height / rect.height\n    }\n  } else {\n    const targetHalfWidth = half(rect.width)\n    const targetHalfHeight = half(rect.height)\n    const windowCenter = getWindowCenter()\n\n    // The distance between target edge and window edge\n    const targetEdgeToWindowEdge = {\n      x: windowCenter.x - targetHalfWidth,\n      y: windowCenter.y - targetHalfHeight\n    }\n\n    const scaleHorizontally = targetEdgeToWindowEdge.x / targetHalfWidth\n    const scaleVertically = targetEdgeToWindowEdge.y / targetHalfHeight\n\n    // The additional scale is based on the smaller value of\n    // scaling horizontally and scaling vertically\n    const scale = scaleBase + Math.min(scaleHorizontally, scaleVertically)\n\n    return {\n      x: scale,\n      y: scale\n    }\n  }\n}\n\nexport {\n  calculateTranslate,\n  calculateScale\n}\n"],"names":["Style","options","bgColor","transitionDuration","transitionTimingFunction","webkitPrefix","EventHandler","instance","handler","e","preventDefault","shown","released","close","release","open","currentTarget","st","scrollTop","lastScrollPosition","deltaY","Math","abs","scrollThreshold","code","key","keyCode","button","pressTimer","setTimeout","grab","clientX","clientY","PRESS_DELAY","move","touches","scaleExtra","x","y","targetTouches","length","fn","bind","Zooming","body","document","overlay","createElement","target","parent","lock","translate","scale","srcThumbnail","Object","assign","OPTIONS","this","config","style","eventHandler","init","addEventListener","_this","docElm","documentElement","divide","denominator","numerator","half","loadImage","url","cb","img","Image","onload","src","window","pageYOffset","parentNode","getWindowCenter","docWidth","clientWidth","docHeight","clientHeight","toggleListeners","el","types","add","forEach","t","removeEventListener","sniffTransition","ret","trans","tform","end","some","undefined","prop","transitionProp","transEndEvent","transformProp","transformCssProp","replace","setStyle","styles","remember","value","transition","transform","s","original","EVENT_TYPES_GRAB","TOUCH_SCALE_FACTOR","processTouches","currScaleExtra","total","firstTouch","multitouch","i","xs","ys","min","max","distX","distY","innerWidth","innerHeight","calculateTranslate","rect","windowCenter","targetCenter","left","width","top","height","calculateScale","scaleBase","customSize","targetHalfWidth","targetHalfHeight","targetEdgeToWindowEdge","scaleHorizontally","scaleVertically","prototype","els","querySelectorAll","listen","tagName","cursor","zoomIn","click","preloadImage","hasAttribute","getAttribute","onOpen","querySelector","onBeforeOpen","getBoundingClientRect","offsetWidth","enableGrab","zoomOut","appendChild","_this2","opacity","bgOpacity","scroll","keydown","onEnd","dataOriginal","temp","cloneNode","setAttribute","position","visibility","removeChild","onClose","onBeforeClose","default","_this3","onBeforeGrab","dx","dy","_this4","onBeforeMove","_this5","onRelease","onBeforeRelease","_this6","defaultZoomable"],"mappings":"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"}