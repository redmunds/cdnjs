/**
 * BehaviorTree.js
 * https://github.com/Calamari/BehaviorTree.js
 *
 * Copyright 2013, Georg Tavonius
 * Licensed under the MIT license.
 *
 * Includes Dean Edward's Base.js, version 1.1a
 * Copyright 2006-2010, Dean Edwards
 * License: http://www.opensource.org/licenses/mit-license.php
 *
 * Version: 0.9.3
 */
var Base=function(){};Base.extend=function(t,e){var n=Base.prototype.extend;Base._prototyping=!0;var r=new this;n.call(r,t),r.base=function(){},delete Base._prototyping;var o=r.constructor,i=r.constructor=function(){if(!Base._prototyping)if(this._constructing||this.constructor==i)this._constructing=!0,o.apply(this,arguments),delete this._constructing;else if(null!=arguments[0])return(arguments[0].extend||n).call(arguments[0],r)};return i.ancestor=this,i.extend=this.extend,i.forEach=this.forEach,i.implement=this.implement,i.prototype=r,i.toString=this.toString,i.valueOf=function(t){return"object"==t?i:o.valueOf()},n.call(i,e),"function"==typeof i.init&&i.init(),i},Base.prototype={extend:function(t,e){if(arguments.length>1){var n=this[t];if(n&&"function"==typeof e&&(!n.valueOf||n.valueOf()!=e.valueOf())&&/\bbase\b/.test(e)){var r=e.valueOf();e=function(){var t=this.base||Base.prototype.base;this.base=n;var e=r.apply(this,arguments);return this.base=t,e},e.valueOf=function(t){return"object"==t?e:r},e.toString=Base.toString}this[t]=e}else if(t){var o=Base.prototype.extend;Base._prototyping||"function"==typeof this||(o=this.extend||o);for(var i={toSource:null},s=["constructor","toString","valueOf"],a=Base._prototyping?0:1;u=s[a++];)t[u]!=i[u]&&o.call(this,u,t[u]);for(var u in t)i[u]||o.call(this,u,t[u])}return this}},Base=Base.extend({constructor:function(){this.extend(arguments[0])}},{ancestor:Object,version:"1.1",forEach:function(t,e,n){for(var r in t)void 0===this.prototype[r]&&e.call(n,t[r],r,t)},implement:function(){for(var t=0;t<arguments.length;t++)"function"==typeof arguments[t]?arguments[t](this.prototype):this.prototype.extend(arguments[t]);return this},toString:function(){return String(this.valueOf())}});
!function(t){"use strict";var n,s=0;n=Base.extend({constructor:function(t){s+=1,this.title=t.title||"btree"+s,this._rootNode=t.tree,this._object=t.object},setObject:function(t){this._object=t},step:function(){this._started&&console.log('the BehaviorTree "'+this.title+'" did call step but one Task did not finish on last call of step.'),this._started=!0;var t=n.getNode(this._rootNode);this._actualNode=t,t.setControl(this),t.start(this._object),t.run(this._object)},running:function(){this._started=!1},success:function(){this._actualNode.end(this._object),this._started=!1},fail:function(){this._actualNode.end(this._object),this._started=!1}}),n._registeredNodes={},n.register=function(t,n){"string"==typeof t?this._registeredNodes[t]=n:this._registeredNodes[t.title]=t},n.getNode=function(t){var s=t instanceof n.Node?t:this._registeredNodes[t];return s||console.log('The node "'+t+'" could not be looked up. Maybe it was never registered?'),s},t.BehaviorTree=n}(window),function(t){!function(t,n){"use strict";var s=n.extend({constructor:function(t){this.base(t)},start:function(){},end:function(){},run:function(){console.log("Warning: run of "+this.title+" not implemented!"),this.fail()},setControl:function(t){this._control=t},running:function(){this._control.running(this)},success:function(){this._control.success()},fail:function(){this._control.fail()}});t.Node=s}(BehaviorTree,Base);var n=t.Node.extend({constructor:function(t){this.base(t),this.children=this.nodes||[]},start:function(){this._actualTask=0},run:function(t){this._object=t,this.start(),this._actualTask<this.children.length&&this._run(),this.end()},_run:function(){var n=t.getNode(this.children[this._actualTask]);this._runningNode=n,n.setControl(this),n.start(this._object),n.run(this._object)},running:function(t){this._nodeRunning=t,this._control.running(t)},success:function(){this._nodeRunning=null,this._runningNode.end(this._object)},fail:function(){this._nodeRunning=null,this._runningNode.end(this._object)}});t.BranchNode=n;var s=t.BranchNode.extend({success:function(){this.base(),this._control.success()},fail:function(){this.base(),this._actualTask+=1,this._actualTask<this.children.length?this._run(this._object):this._control.fail()}});t.Priority=s;var e=t.BranchNode.extend({_run:function(){this._nodeRunning?this._nodeRunning.run(this._object):this.base()},success:function(){this.base(),this._actualTask+=1,this._actualTask<this.children.length?this._run(this._object):this._control.success()},fail:function(){this.base(),this._control.fail()}});t.Sequence=e;var i=t.BranchNode.extend({start:function(){this.base(),this._nodeRunning||(this._actualTask=Math.floor(Math.random()*this.children.length))},success:function(){this.base(),this._control.success()},fail:function(){this.base(),this._control.fail()},_run:function(){this._runningNode?this._runningNode.run(this._object):this.base()}});t.Random=i;var o=t.Node.extend({});t.Task=o;var c=t.Node.extend({constructor:function(n){this.base(n),this.node&&(this.node=t.getNode(this.node))},setNode:function(n){this.node=t.getNode(n)},start:function(){this.node.setControl(this),this.node.start()},end:function(){this.node.end()},run:function(t){this.node.run(t)}});t.Decorator=c;var r=t.Decorator.extend({success:function(){this._control.fail()},fail:function(){this._control.success()}});t.InvertDecorator=r;var h=t.Decorator.extend({success:function(){this._control.success()},fail:function(){this._control.success()}});t.AlwaysSucceedDecorator=h;var a=t.Decorator.extend({success:function(){this._control.fail()},fail:function(){this._control.fail()}});t.AlwaysFailDecorator=a}(BehaviorTree);