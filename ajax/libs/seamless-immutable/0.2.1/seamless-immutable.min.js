!function(){"use strict";function e(e,t,o){Object.defineProperty(e,t,{enumerable:!1,configurable:!1,writable:!1,value:o})}function t(t,o){e(t,o,function(){throw new n("The "+o+" method cannot be invoked on an ImmutableArray.")})}function o(t){e(t,p,!0)}function r(e){return"object"==typeof e?null===e||e.hasOwnProperty(p):!0}function n(){}function a(e,r){for(var n in r)t(e,r[n]);return o(e),Object.freeze(e),e}function u(t,o){var r=t[o];e(t,o,function(){return f(r.apply(t,arguments))})}function c(){var e=[];for(var t in arguments)e.push(f(arguments[t]));for(var t in m){var o=m[t];u(e,o)}return a(e,s)}function i(e){var t={};switch(typeof e){case"object":if(null!==e)for(var o in e)t[o]=f(e[o]);break;case"undefined":break;default:throw new TypeError("ImmutableMap constructor does not accept an argument of type "+typeof e+".")}return a(t,l)}function f(e){return arguments.length>1?c.apply(c,arguments):r(e)?e:e instanceof Array?c.apply(c,e):i(e)}var p="__immutable_invariants_hold",l=["setPrototypeOf"],b=["keys"],s=l.concat(["push","pop","sort","splice","shift","unshift","reverse"]),m=b.concat(["map","filter","slice","concat","reduce","reduceRight"]);n.prototype=Error.prototype,f.isImmutable=r,f.ImmutableError=n,Object.freeze(f),"object"==typeof module?module.exports=f:"object"==typeof exports?exports.Immutable=f:"object"==typeof window?window.Immutable=f:"object"==typeof global&&(global.Immutable=f)}();