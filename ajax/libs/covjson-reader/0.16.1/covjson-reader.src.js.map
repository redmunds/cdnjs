{"version":3,"file":"covjson-reader.src.js","sources":["../../../../../\u0000commonjsHelpers","node_modules/ndarray/node_modules/is-buffer/index.js","node_modules/ndarray/node_modules/iota-array/iota.js","node_modules/ndarray/ndarray.js","node_modules/url-template/lib/url-template.js","src/constants.js","src/util.js","src/http-common.js","src/http.js","../../../../../\u0000babelHelpers","src/Coverage.js","src/CoverageCollection.js","src/reader.js"],"sourcesContent":["\nexport var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {}\n\nexport function createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}","/**\n * Determine if an object is Buffer\n *\n * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * License:  MIT\n *\n * `npm install is-buffer`\n */\n\nmodule.exports = function (obj) {\n  return !!(obj != null &&\n    (obj._isBuffer || // For Safari 5-7 (missing Object.prototype.constructor)\n      (obj.constructor &&\n      typeof obj.constructor.isBuffer === 'function' &&\n      obj.constructor.isBuffer(obj))\n    ))\n}\n","\"use strict\"\n\nfunction iota(n) {\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = i\n  }\n  return result\n}\n\nmodule.exports = iota","var iota = require(\"iota-array\")\nvar isBuffer = require(\"is-buffer\")\n\nvar hasTypedArrays  = ((typeof Float64Array) !== \"undefined\")\n\nfunction compare1st(a, b) {\n  return a[0] - b[0]\n}\n\nfunction order() {\n  var stride = this.stride\n  var terms = new Array(stride.length)\n  var i\n  for(i=0; i<terms.length; ++i) {\n    terms[i] = [Math.abs(stride[i]), i]\n  }\n  terms.sort(compare1st)\n  var result = new Array(terms.length)\n  for(i=0; i<result.length; ++i) {\n    result[i] = terms[i][1]\n  }\n  return result\n}\n\nfunction compileConstructor(dtype, dimension) {\n  var className = [\"View\", dimension, \"d\", dtype].join(\"\")\n  if(dimension < 0) {\n    className = \"View_Nil\" + dtype\n  }\n  var useGetters = (dtype === \"generic\")\n\n  if(dimension === -1) {\n    //Special case for trivial arrays\n    var code =\n      \"function \"+className+\"(a){this.data=a;};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return -1};\\\nproto.size=0;\\\nproto.dimension=-1;\\\nproto.shape=proto.stride=proto.order=[];\\\nproto.lo=proto.hi=proto.transpose=proto.step=\\\nfunction(){return new \"+className+\"(this.data);};\\\nproto.get=proto.set=function(){};\\\nproto.pick=function(){return null};\\\nreturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\"\n    var procedure = new Function(code)\n    return procedure()\n  } else if(dimension === 0) {\n    //Special case for 0d arrays\n    var code =\n      \"function \"+className+\"(a,d) {\\\nthis.data = a;\\\nthis.offset = d\\\n};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return this.offset};\\\nproto.dimension=0;\\\nproto.size=1;\\\nproto.shape=\\\nproto.stride=\\\nproto.order=[];\\\nproto.lo=\\\nproto.hi=\\\nproto.transpose=\\\nproto.step=function \"+className+\"_copy() {\\\nreturn new \"+className+\"(this.data,this.offset)\\\n};\\\nproto.pick=function \"+className+\"_pick(){\\\nreturn TrivialArray(this.data);\\\n};\\\nproto.valueOf=proto.get=function \"+className+\"_get(){\\\nreturn \"+(useGetters ? \"this.data.get(this.offset)\" : \"this.data[this.offset]\")+\n\"};\\\nproto.set=function \"+className+\"_set(v){\\\nreturn \"+(useGetters ? \"this.data.set(this.offset,v)\" : \"this.data[this.offset]=v\")+\"\\\n};\\\nreturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\"\n    var procedure = new Function(\"TrivialArray\", code)\n    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n  }\n\n  var code = [\"'use strict'\"]\n\n  //Create constructor for view\n  var indices = iota(dimension)\n  var args = indices.map(function(i) { return \"i\"+i })\n  var index_str = \"this.offset+\" + indices.map(function(i) {\n        return \"this.stride[\" + i + \"]*i\" + i\n      }).join(\"+\")\n  var shapeArg = indices.map(function(i) {\n      return \"b\"+i\n    }).join(\",\")\n  var strideArg = indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")\n  code.push(\n    \"function \"+className+\"(a,\" + shapeArg + \",\" + strideArg + \",d){this.data=a\",\n      \"this.shape=[\" + shapeArg + \"]\",\n      \"this.stride=[\" + strideArg + \"]\",\n      \"this.offset=d|0}\",\n    \"var proto=\"+className+\".prototype\",\n    \"proto.dtype='\"+dtype+\"'\",\n    \"proto.dimension=\"+dimension)\n\n  //view.size:\n  code.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\nreturn \"+indices.map(function(i) { return \"this.shape[\"+i+\"]\" }).join(\"*\"),\n\"}})\")\n\n  //view.order:\n  if(dimension === 1) {\n    code.push(\"proto.order=[0]\")\n  } else {\n    code.push(\"Object.defineProperty(proto,'order',{get:\")\n    if(dimension < 4) {\n      code.push(\"function \"+className+\"_order(){\")\n      if(dimension === 2) {\n        code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\")\n      } else if(dimension === 3) {\n        code.push(\n\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\nif(s0>s1){\\\nif(s1>s2){\\\nreturn [2,1,0];\\\n}else if(s0>s2){\\\nreturn [1,2,0];\\\n}else{\\\nreturn [1,0,2];\\\n}\\\n}else if(s0>s2){\\\nreturn [2,0,1];\\\n}else if(s2>s1){\\\nreturn [0,1,2];\\\n}else{\\\nreturn [0,2,1];\\\n}}})\")\n      }\n    } else {\n      code.push(\"ORDER})\")\n    }\n  }\n\n  //view.set(i0, ..., v):\n  code.push(\n\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\")\n  if(useGetters) {\n    code.push(\"return this.data.set(\"+index_str+\",v)}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]=v}\")\n  }\n\n  //view.get(i0, ...):\n  code.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\")\n  if(useGetters) {\n    code.push(\"return this.data.get(\"+index_str+\")}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]}\")\n  }\n\n  //view.index:\n  code.push(\n    \"proto.index=function \"+className+\"_index(\", args.join(), \"){return \"+index_str+\"}\")\n\n  //view.hi():\n  code.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return [\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\", i, \"]:i\", i,\"|0\"].join(\"\")\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"this.stride[\"+i + \"]\"\n    }).join(\",\")+\",this.offset)}\")\n\n  //view.lo():\n  var a_vars = indices.map(function(i) { return \"a\"+i+\"=this.shape[\"+i+\"]\" })\n  var c_vars = indices.map(function(i) { return \"c\"+i+\"=this.stride[\"+i+\"]\" })\n  code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"))\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\nd=i\"+i+\"|0;\\\nb+=c\"+i+\"*d;\\\na\"+i+\"-=d}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\"+i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")+\",b)}\")\n\n  //view.step():\n  code.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+\n    indices.map(function(i) {\n      return \"a\"+i+\"=this.shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\"+i+\"=this.stride[\"+i+\"]\"\n    }).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'){\\\nd=i\"+i+\"|0;\\\nif(d<0){\\\nc+=b\"+i+\"*(a\"+i+\"-1);\\\na\"+i+\"=ceil(-a\"+i+\"/d)\\\n}else{\\\na\"+i+\"=ceil(a\"+i+\"/d)\\\n}\\\nb\"+i+\"*=d\\\n}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\" + i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\" + i\n    }).join(\",\")+\",c)}\")\n\n  //view.transpose():\n  var tShape = new Array(dimension)\n  var tStride = new Array(dimension)\n  for(var i=0; i<dimension; ++i) {\n    tShape[i] = \"a[i\"+i+\"]\"\n    tStride[i] = \"b[i\"+i+\"]\"\n  }\n  code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+\n    args.map(function(n,idx) { return n + \"=(\" + n + \"===undefined?\" + idx + \":\" + n + \"|0)\"}).join(\";\"),\n    \"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\")\n\n  //view.pick():\n  code.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\")\n  }\n  code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\")\n\n  //Add return statement\n  code.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+\n    indices.map(function(i) {\n      return \"shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"stride[\"+i+\"]\"\n    }).join(\",\")+\",offset)}\")\n\n  //Compile procedure\n  var procedure = new Function(\"CTOR_LIST\", \"ORDER\", code.join(\"\\n\"))\n  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n}\n\nfunction arrayDType(data) {\n  if(isBuffer(data)) {\n    return \"buffer\"\n  }\n  if(hasTypedArrays) {\n    switch(Object.prototype.toString.call(data)) {\n      case \"[object Float64Array]\":\n        return \"float64\"\n      case \"[object Float32Array]\":\n        return \"float32\"\n      case \"[object Int8Array]\":\n        return \"int8\"\n      case \"[object Int16Array]\":\n        return \"int16\"\n      case \"[object Int32Array]\":\n        return \"int32\"\n      case \"[object Uint8Array]\":\n        return \"uint8\"\n      case \"[object Uint16Array]\":\n        return \"uint16\"\n      case \"[object Uint32Array]\":\n        return \"uint32\"\n      case \"[object Uint8ClampedArray]\":\n        return \"uint8_clamped\"\n    }\n  }\n  if(Array.isArray(data)) {\n    return \"array\"\n  }\n  return \"generic\"\n}\n\nvar CACHED_CONSTRUCTORS = {\n  \"float32\":[],\n  \"float64\":[],\n  \"int8\":[],\n  \"int16\":[],\n  \"int32\":[],\n  \"uint8\":[],\n  \"uint16\":[],\n  \"uint32\":[],\n  \"array\":[],\n  \"uint8_clamped\":[],\n  \"buffer\":[],\n  \"generic\":[]\n}\n\n;(function() {\n  for(var id in CACHED_CONSTRUCTORS) {\n    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n  }\n});\n\nfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n  if(data === undefined) {\n    var ctor = CACHED_CONSTRUCTORS.array[0]\n    return ctor([])\n  } else if(typeof data === \"number\") {\n    data = [data]\n  }\n  if(shape === undefined) {\n    shape = [ data.length ]\n  }\n  var d = shape.length\n  if(stride === undefined) {\n    stride = new Array(d)\n    for(var i=d-1, sz=1; i>=0; --i) {\n      stride[i] = sz\n      sz *= shape[i]\n    }\n  }\n  if(offset === undefined) {\n    offset = 0\n    for(var i=0; i<d; ++i) {\n      if(stride[i] < 0) {\n        offset -= (shape[i]-1)*stride[i]\n      }\n    }\n  }\n  var dtype = arrayDType(data)\n  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n  while(ctor_list.length <= d+1) {\n    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n  }\n  var ctor = ctor_list[d+1]\n  return ctor(data, shape, stride, offset)\n}\n\nmodule.exports = wrappedNDArrayCtor\n","(function (root, factory) {\n    if (typeof exports === 'object') {\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else {\n        root.urltemplate = factory();\n    }\n}(this, function () {\n  /**\n   * @constructor\n   */\n  function UrlTemplate() {\n  }\n\n  /**\n   * @private\n   * @param {string} str\n   * @return {string}\n   */\n  UrlTemplate.prototype.encodeReserved = function (str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n      if (!/%[0-9A-Fa-f]/.test(part)) {\n        part = encodeURI(part).replace(/%5B/g, '[').replace(/%5D/g, ']');\n      }\n      return part;\n    }).join('');\n  };\n\n  /**\n   * @private\n   * @param {string} str\n   * @return {string}\n   */\n  UrlTemplate.prototype.encodeUnreserved = function (str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n      return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n  }\n\n  /**\n   * @private\n   * @param {string} operator\n   * @param {string} value\n   * @param {string} key\n   * @return {string}\n   */\n  UrlTemplate.prototype.encodeValue = function (operator, value, key) {\n    value = (operator === '+' || operator === '#') ? this.encodeReserved(value) : this.encodeUnreserved(value);\n\n    if (key) {\n      return this.encodeUnreserved(key) + '=' + value;\n    } else {\n      return value;\n    }\n  };\n\n  /**\n   * @private\n   * @param {*} value\n   * @return {boolean}\n   */\n  UrlTemplate.prototype.isDefined = function (value) {\n    return value !== undefined && value !== null;\n  };\n\n  /**\n   * @private\n   * @param {string}\n   * @return {boolean}\n   */\n  UrlTemplate.prototype.isKeyOperator = function (operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n  };\n\n  /**\n   * @private\n   * @param {Object} context\n   * @param {string} operator\n   * @param {string} key\n   * @param {string} modifier\n   */\n  UrlTemplate.prototype.getValues = function (context, operator, key, modifier) {\n    var value = context[key],\n        result = [];\n\n    if (this.isDefined(value) && value !== '') {\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        value = value.toString();\n\n        if (modifier && modifier !== '*') {\n          value = value.substring(0, parseInt(modifier, 10));\n        }\n\n        result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n      } else {\n        if (modifier === '*') {\n          if (Array.isArray(value)) {\n            value.filter(this.isDefined).forEach(function (value) {\n              result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n            }, this);\n          } else {\n            Object.keys(value).forEach(function (k) {\n              if (this.isDefined(value[k])) {\n                result.push(this.encodeValue(operator, value[k], k));\n              }\n            }, this);\n          }\n        } else {\n          var tmp = [];\n\n          if (Array.isArray(value)) {\n            value.filter(this.isDefined).forEach(function (value) {\n              tmp.push(this.encodeValue(operator, value));\n            }, this);\n          } else {\n            Object.keys(value).forEach(function (k) {\n              if (this.isDefined(value[k])) {\n                tmp.push(this.encodeUnreserved(k));\n                tmp.push(this.encodeValue(operator, value[k].toString()));\n              }\n            }, this);\n          }\n\n          if (this.isKeyOperator(operator)) {\n            result.push(this.encodeUnreserved(key) + '=' + tmp.join(','));\n          } else if (tmp.length !== 0) {\n            result.push(tmp.join(','));\n          }\n        }\n      }\n    } else {\n      if (operator === ';') {\n        result.push(this.encodeUnreserved(key));\n      } else if (value === '' && (operator === '&' || operator === '?')) {\n        result.push(this.encodeUnreserved(key) + '=');\n      } else if (value === '') {\n        result.push('');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @param {string} template\n   * @return {function(Object):string}\n   */\n  UrlTemplate.prototype.parse = function (template) {\n    var that = this;\n    var operators = ['+', '#', '.', '/', ';', '?', '&'];\n\n    return {\n      expand: function (context) {\n        return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n          if (expression) {\n            var operator = null,\n                values = [];\n\n            if (operators.indexOf(expression.charAt(0)) !== -1) {\n              operator = expression.charAt(0);\n              expression = expression.substr(1);\n            }\n\n            expression.split(/,/g).forEach(function (variable) {\n              var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n              values.push.apply(values, that.getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n            });\n\n            if (operator && operator !== '+') {\n              var separator = ',';\n\n              if (operator === '?') {\n                separator = '&';\n              } else if (operator !== '#') {\n                separator = operator;\n              }\n              return (values.length !== 0 ? operator : '') + values.join(separator);\n            } else {\n              return values.join(',');\n            }\n          } else {\n            return that.encodeReserved(literal);\n          }\n        });\n      }\n    };\n  };\n\n  return new UrlTemplate();\n}));\n","export {DOMAIN, COVERAGE, COVERAGECOLLECTION} from 'covutils'\r\nexport const LINKRELPREFIX = 'http://www.iana.org/assignments/relation/'","export {minMax, indicesOfNearest, indexOfNearest} from 'covutils'\r\n\r\nconst PREFIX = 'https://covjson.org/def/'\r\nexport const CORE_PREFIX = PREFIX + 'core#'\r\nexport const DOMAINTYPES_PREFIX = PREFIX + 'domainTypes#'\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport function assert (condition, message) {\r\n  if (!condition) {\r\n    message = message || 'Assertion failed'\r\n    throw new Error(message)\r\n  }\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport function shallowcopy (obj) {\r\n  let copy = Object.create(Object.getPrototypeOf(obj))\r\n  for (let prop in obj) {\r\n    copy[prop] = obj[prop]\r\n  }\r\n  return copy\r\n}\r\n\r\n/**\r\n * Extracts all the directly included namespaces from the `@context` field,\r\n * not following remote JSON-LD contexts.\r\n * \r\n * @ignore\r\n * @param doc A JSON-LD document. \r\n * @returns {Map<string,string>} \r\n */\r\nexport function getNamespacePrefixes (doc) {\r\n  let context = doc['@context']\r\n  if (!context) {\r\n    return\r\n  }\r\n  if (!Array.isArray(context)) {\r\n    context = [context]\r\n  }\r\n  let prefixes = new Map()\r\n  for (let item of context) {\r\n    if (typeof item === 'string') {\r\n      continue\r\n    }\r\n    for (let key of Object.keys(item)) {\r\n      if (typeof item[key] === 'string') {\r\n        prefixes.set(key, item[key])\r\n      }\r\n    }\r\n  }\r\n  return prefixes\r\n}","export const MEDIATYPE = {\r\n  COVJSON: 'application/prs.coverage+json',\r\n  JSONLD: 'application/ld+json',\r\n  JSON: 'application/json',\r\n  TEXT: 'text/plain'\r\n}\r\n\r\nexport const EXT = {\r\n  COVJSON: '.covjson'\r\n}\r\n\r\nimport {CORE_PREFIX} from './util.js'\r\nexport const COVJSON_PROFILE_STANDALONE = CORE_PREFIX + 'standalone'\r\n\r\n/**\r\n * Returns an Accept header value for requesting CoverageJSON documents.\r\n * \r\n * @param {bool} standalone Whether to include the standalone profile of CoverageJSON or not.\r\n */\r\nexport function getAcceptHeader (standalone) {\r\n  let covjsonProfile = standalone ? '; profile=\"' + COVJSON_PROFILE_STANDALONE + '\"' : ''\r\n  let accept =\r\n    MEDIATYPE.COVJSON + covjsonProfile + '; q=1.0, ' + \r\n    MEDIATYPE.JSONLD + '; q=0.1, ' + \r\n    MEDIATYPE.JSON + '; q=0.1'\r\n  return accept\r\n}\r\n\r\n/**\r\n * Checks if a media type matches any given media types, ignoring any parameters. \r\n * \r\n * @param {string} mediaType The media type.\r\n * @param {string|Array} matchingMediaTypes The media type(s) to match against.\r\n * @return {bool} True if there is a match.\r\n */\r\nexport function matchesMediaTypes (mediaType, matchingMediaTypes) {\r\n  if (!Array.isArray(matchingMediaTypes)) {\r\n    matchingMediaTypes = [matchingMediaTypes]\r\n  }\r\n  return matchingMediaTypes.some(t => mediaType.indexOf(t) === 0)\r\n}\r\n","import {getAcceptHeader} from './http-common.js'\r\n\r\n/**\r\n * See reader.js#load for docs.\r\n * \r\n * Browser implementation.\r\n */\r\nexport function load (url, options = {}, responseType='arraybuffer') {\r\n  if (['arraybuffer', 'text'].indexOf(responseType) === -1) {\r\n    throw new Error()\r\n  }\r\n  let headers = options.headers || {}\r\n  return new Promise((resolve, reject) => {\r\n    var req = new XMLHttpRequest()\r\n    req.open('GET', url)\r\n    req.responseType = responseType\r\n    let accept = getAcceptHeader(options.eagerload)\r\n    req.setRequestHeader('Accept', accept)\r\n    if (headers) {\r\n      for (let header of Object.keys(headers)) {\r\n        req.setRequestHeader(header, headers[header])\r\n      }\r\n    }\r\n\r\n    req.addEventListener('load', () => {\r\n      try {\r\n        if (!(req.status >= 200 && req.status < 300 || req.status === 304)) { // as in jquery\r\n          reject(new Error('Resource \"' + url + '\" not found, HTTP status code: ' + req.status))\r\n          return\r\n        }\r\n        \r\n        let data\r\n        if (responseType === 'arraybuffer') {\r\n          if (window.TextDecoder) {\r\n            let t0 = new Date()\r\n            data = JSON.parse(new TextDecoder().decode(new DataView(req.response)))\r\n            console.log('JSON decoding: ' + (new Date()-t0) + 'ms')\r\n          } else {\r\n            // load again (from cache) to get correct response type\r\n            // Note we use 'text' and not 'json' as we want to throw parsing errors.\r\n            // With 'json', the response is just 'null'.\r\n            reject({responseType: 'text'})\r\n            return\r\n          }\r\n        } else {\r\n          let t0 = new Date()\r\n          data = JSON.parse(req.response)\r\n          console.log('JSON decoding (slow path): ' + (new Date()-t0) + 'ms')\r\n        }\r\n        let responseHeaders = parseResponseHeaders(req.getAllResponseHeaders())\r\n        resolve({\r\n          data,\r\n          headers: responseHeaders\r\n        })\r\n      } catch (e) {\r\n        reject(e)\r\n      }\r\n    })\r\n    req.addEventListener('error', () => {\r\n      reject(new Error('Network error loading resource at ' + url))\r\n    })\r\n\r\n    req.send()\r\n  }).catch(e => {\r\n    if (e.responseType) {\r\n      return load(url, headers, e.responseType)\r\n    } else {\r\n      throw e\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * XmlHttpRequest's getAllResponseHeaders() method returns a string of response\r\n * headers according to the format described here:\r\n * http://www.w3.org/TR/XMLHttpRequest/#the-getallresponseheaders-method\r\n * This method parses that string into a user-friendly key/value pair object.\r\n * Header names are lower-cased.\r\n * \r\n * https://gist.github.com/monsur/706839\r\n */\r\nfunction parseResponseHeaders (headerStr) {\r\n  var headers = {};\r\n  if (!headerStr) {\r\n    return headers;\r\n  }\r\n  var headerPairs = headerStr.split('\\u000d\\u000a');\r\n  for (var i = 0; i < headerPairs.length; i++) {\r\n    var headerPair = headerPairs[i];\r\n    // Can't use split() here because it does the wrong thing\r\n    // if the header value has the string \": \" in it.\r\n    var index = headerPair.indexOf('\\u003a\\u0020');\r\n    if (index > 0) {\r\n      var key = headerPair.substring(0, index).toLowerCase();\r\n      var val = headerPair.substring(index + 2);\r\n      headers[key] = val;\r\n    }\r\n  }\r\n  return headers;\r\n}\r\n","var babelHelpers = {};\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n\nexport var jsx = function () {\n  var REACT_ELEMENT_TYPE = typeof Symbol === \"function\" && Symbol.for && Symbol.for(\"react.element\") || 0xeac7;\n  return function createRawReactElement(type, props, key, children) {\n    var defaultProps = type && type.defaultProps;\n    var childrenLength = arguments.length - 3;\n\n    if (!props && childrenLength !== 0) {\n      props = {};\n    }\n\n    if (props && defaultProps) {\n      for (var propName in defaultProps) {\n        if (props[propName] === void 0) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    } else if (!props) {\n      props = defaultProps || {};\n    }\n\n    if (childrenLength === 1) {\n      props.children = children;\n    } else if (childrenLength > 1) {\n      var childArray = Array(childrenLength);\n\n      for (var i = 0; i < childrenLength; i++) {\n        childArray[i] = arguments[i + 3];\n      }\n\n      props.children = childArray;\n    }\n\n    return {\n      $$typeof: REACT_ELEMENT_TYPE,\n      type: type,\n      key: key === undefined ? null : '' + key,\n      ref: null,\n      props: props,\n      _owner: null\n    };\n  };\n}();\n\nexport var asyncToGenerator = function (fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new Promise(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return Promise.resolve(value).then(function (value) {\n            return step(\"next\", value);\n          }, function (err) {\n            return step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n};\n\nexport var classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nexport var createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nexport var defineEnumerableProperties = function (obj, descs) {\n  for (var key in descs) {\n    var desc = descs[key];\n    desc.configurable = desc.enumerable = true;\n    if (\"value\" in desc) desc.writable = true;\n    Object.defineProperty(obj, key, desc);\n  }\n\n  return obj;\n};\n\nexport var defaults = function (obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n};\n\nexport var defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexport var get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nexport var inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar _instanceof = function (left, right) {\n  if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n    return right[Symbol.hasInstance](left);\n  } else {\n    return left instanceof right;\n  }\n};\n\nexport var interopRequireDefault = function (obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n};\n\nexport var interopRequireWildcard = function (obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n};\n\nexport var newArrowCheck = function (innerThis, boundThis) {\n  if (innerThis !== boundThis) {\n    throw new TypeError(\"Cannot instantiate an arrow function\");\n  }\n};\n\nexport var objectDestructuringEmpty = function (obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n};\n\nexport var objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nexport var possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nexport var selfGlobal = typeof global === \"undefined\" ? self : global;\n\nexport var set = function set(object, property, value, receiver) {\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent !== null) {\n      set(parent, property, value, receiver);\n    }\n  } else if (\"value\" in desc && desc.writable) {\n    desc.value = value;\n  } else {\n    var setter = desc.set;\n\n    if (setter !== undefined) {\n      setter.call(receiver, value);\n    }\n  }\n\n  return value;\n};\n\nexport var slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nexport var slicedToArrayLoose = function (arr, i) {\n  if (Array.isArray(arr)) {\n    return arr;\n  } else if (Symbol.iterator in Object(arr)) {\n    var _arr = [];\n\n    for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {\n      _arr.push(_step.value);\n\n      if (i && _arr.length === i) break;\n    }\n\n    return _arr;\n  } else {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n};\n\nexport var taggedTemplateLiteral = function (strings, raw) {\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n};\n\nexport var taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\nexport var temporalRef = function (val, name, undef) {\n  if (val === undef) {\n    throw new ReferenceError(name + \" is not defined - temporal dead zone\");\n  } else {\n    return val;\n  }\n};\n\nexport var temporalUndefined = {};\n\nexport var toArray = function (arr) {\n  return Array.isArray(arr) ? arr : Array.from(arr);\n};\n\nexport var toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nbabelHelpers;\n\nexport { _typeof as typeof, _extends as extends, _instanceof as instanceof }","/**\r\n * @external {Parameter} https://github.com/Reading-eScience-Centre/coverage-jsapi/blob/master/Parameter.md\r\n * @external {Domain} https://github.com/Reading-eScience-Centre/coverage-jsapi/blob/master/Domain.md\r\n * @external {Range} https://github.com/Reading-eScience-Centre/coverage-jsapi/blob/master/Range.md\r\n */\r\n\r\nimport ndarray from 'ndarray'\r\nimport template from 'url-template'\r\n\r\nimport {minMax, subsetDomainByIndex, subsetByValue as subsetCoverageByValue, normalizeIndexSubsetConstraints} from 'covutils'\r\n\r\nimport {COVERAGE} from './constants.js'\r\nimport {shallowcopy, getNamespacePrefixes, CORE_PREFIX, DOMAINTYPES_PREFIX} from './util.js'\r\n\r\n  \r\n  \r\n//NO FILE EXTENSION, to work around JSPM bug in handling package.json's \"browser\" field\r\n//see https://github.com/jspm/jspm-cli/issues/1062#issuecomment-170342414\r\nimport {load} from './http'\r\n\r\n/** \r\n * Wraps a CoverageJSON Coverage object as a Coverage API object.\r\n * \r\n * @see https://github.com/Reading-eScience-Centre/coverage-jsapi\r\n */\r\nexport default class Coverage {\r\n  \r\n  /**\r\n   * Create a Coverage instance.\r\n   * \r\n   * @param {Object} covjson A CoverageJSON Coverage object.\r\n   * @param {Object} [options] \r\n   * @param {boolean} [options.cacheRanges]\r\n   *   If true, then any range that was loaded remotely is cached.\r\n   *   (The domain is always cached.)\r\n   * @param {Array} [options.referencing]\r\n   *   Referencing info to use (e.g. from containing collection).                        \r\n   */\r\n  constructor (covjson, options) {\r\n    this._covjson = covjson\r\n    \r\n    /**\r\n     * The constant \"Coverage\".\r\n     * \r\n     * @type {string}\r\n     */\r\n    this.type = COVERAGE\r\n    \r\n    /**\r\n     * JSON-LD document\r\n     * \r\n     * @type {Object}\r\n     */\r\n    this.ld = {}\r\n    \r\n    this._exposeLd(covjson)\r\n    \r\n    this.prefixes = getNamespacePrefixes(this.ld)\r\n    \r\n    /**\r\n     * The options object that was passed in to the constructor. \r\n     * \r\n     * @type {Object} \r\n     */\r\n    this.options = options ? shallowcopy(options) : {}\r\n    \r\n    /** \r\n     * ID of the coverage.\r\n     * \r\n     * @type {string|undefined} \r\n     */\r\n    this.id = covjson.id\r\n    \r\n    /**\r\n     * A Map from key to {@link Parameter} object.\r\n     * The key is a short alias of a {@link Parameter}, typically what is called a \"variable name\" or similar.\r\n     * \r\n     * @type {Map<string,Parameter>}\r\n     */\r\n    this.parameters = new Map()\r\n    for (let key of Object.keys(covjson.parameters)) {\r\n      transformParameter(covjson.parameters, key)\r\n      this.parameters.set(key, covjson.parameters[key])\r\n    }\r\n            \r\n    let domainType\r\n    if (typeof this._covjson.domain === 'string') {\r\n      domainType = this._covjson.domainType\r\n    } else {\r\n      domainType = this._covjson.domain.domainType || this._covjson.domainType\r\n    }\r\n    if (domainType && domainType.indexOf(':') === -1) {\r\n      domainType = DOMAINTYPES_PREFIX + domainType\r\n    }\r\n\r\n    /**\r\n     * If defined, then the coverage has a domain that follows the given domain type,\r\n     * either a full URI or a namespace-prefixed term. (See .prefixes)\r\n     *  \r\n     * @type {string|undefined} \r\n     */\r\n    this.domainType = domainType\r\n    \r\n    this._updateLoadStatus()\r\n  }\r\n    \r\n  _updateLoadStatus () {\r\n    let isLoaded = prop => typeof prop === 'object' \r\n    let domainLoaded = isLoaded(this._covjson.domain)\r\n    let rangesLoaded = Object.keys(this._covjson.ranges).every(key => isLoaded(this._covjson.ranges[key]))\r\n    \r\n    /**\r\n     * A boolean which indicates whether all coverage data is already loaded in memory.\r\n     * If true then this typically means that calls to .loadDomain(), .loadRange(),\r\n     * .loadRanges(), .subsetByIndex(), and .subsetByValue() will not invoke a network request.\r\n     * \r\n     * @type {boolean}\r\n     */\r\n    this.loaded = domainLoaded && rangesLoaded\r\n  }\r\n  \r\n  _exposeLd (covjson) {\r\n    if (!covjson['@context']) {\r\n      // no LD love here...\r\n      return\r\n    }\r\n    // make a deep copy since the object gets modified in-place later\r\n    // but first, remove domain and range which may be embedded\r\n    let copy = shallowcopy(covjson)\r\n    delete copy.domain\r\n    delete copy.ranges\r\n    this.ld = JSON.parse(JSON.stringify(copy))\r\n  }\r\n    \r\n  /**\r\n   * Returns a Promise succeeding with a {@link Domain} object.\r\n   * \r\n   * @return {Promise<Domain>}\r\n   */\r\n  loadDomain () {\r\n    let domainOrUrl = this._covjson.domain\r\n    if (this._domainPromise) return this._domainPromise\r\n    let promise\r\n    if (typeof domainOrUrl === 'object') {\r\n      let domain = domainOrUrl\r\n      transformDomain(domain, this.options.referencing, this.domainType)\r\n      promise = Promise.resolve(domain)\r\n    } else {\r\n      let url = domainOrUrl\r\n      promise = load(url).then(result => {\r\n        let domain = result.data\r\n        transformDomain(domain, this.options.referencing, this.domainType)\r\n        this._covjson.domain = domain\r\n        this._updateLoadStatus()\r\n        return domain\r\n      })\r\n    }\r\n    /* The promise gets cached so that the domain is not loaded twice remotely.\r\n     * This might otherwise happen when loadDomain and loadRange is used\r\n     * with Promise.all(). Remember that loadRange also invokes loadDomain.\r\n     */ \r\n    this._domainPromise = promise\r\n    return promise\r\n  }\r\n  \r\n  /**\r\n   * Returns a Promise succeeding with a {@link Range} object.\r\n   * \r\n   * Note that this method implicitly loads the domain as well. \r\n   * \r\n   * @example\r\n   * cov.loadRange('salinity').then(function (sal) {\r\n   *   // work with Range object\r\n   * }).catch(function (e) {\r\n   *   // there was an error when loading the range\r\n   *   console.log(e.message)\r\n   * }) \r\n   * @param {string} paramKey The key of the Parameter for which to load the range.\r\n   * @return {Promise<Range>} A Promise object which loads the requested range data and succeeds with a Range object.\r\n   */\r\n  loadRange (paramKey) {\r\n    return loadRangeFn(this)(paramKey)\r\n  }\r\n  \r\n  /**\r\n   * Returns the requested range data as a Promise.\r\n   * \r\n   * Note that this method implicitly loads the domain as well. \r\n   * \r\n   * @example\r\n   * cov.loadRanges(['salinity','temp']).then(function (ranges) {\r\n   *   // work with Map object\r\n   *   console.log(ranges.get('salinity').values)\r\n   * }).catch(function (e) {\r\n   *   // there was an error when loading the range data\r\n   *   console.log(e)\r\n   * }) \r\n   * @param {iterable<string>} [paramKeys] An iterable of parameter keys for which to load the range data. If not given, loads all range data.\r\n   * @return {Promise<Map<string,Range>>} A Promise object which loads the requested range data and succeeds with a Map object.\r\n   */\r\n  loadRanges (paramKeys) {\r\n    return loadRangesFn(this)(paramKeys)\r\n  }\r\n  \r\n  /**\r\n   * Returns a Promise object which provides a copy of this Coverage object\r\n   * with the domain subsetted by the given indices specification.\r\n   * \r\n   * Note that the coverage type and/or domain type of the resulting coverage\r\n   * may be different than in the original coverage.\r\n   * \r\n   * Note that the subsetted ranges are a view over the original ranges, meaning\r\n   * that no copying is done but also no memory is released if the original\r\n   * coverage is garbage collected.\r\n   * \r\n   * @example\r\n   * cov.subsetByIndex({t: 4, z: {start: 10, stop: 20} }).then(function(subsetCov) {\r\n   *   // work with subsetted coverage\r\n   * })\r\n   * @param {Object} constraints An object which describes the subsetting constraints.\r\n   *   Every property of it refers to an axis name as defined in Domain.names,\r\n   *   and its value must either be an integer\r\n   *   or an object with start, stop, and optionally step (defaults to 1) properties\r\n   *   whose values are integers.\r\n   *   Properties that have the values undefined or null are ignored. \r\n   *   All integers must be non-negative, step must not be zero.\r\n   *   An integer constrains the axis to the given index,\r\n   *   a start/stop/step object to a range of indices:\r\n   *   If step=1, this includes all indices starting at start and ending at stop (exclusive);\r\n   *   if step>1, all indices start, start + step, ..., start + (q + r - 1) step where \r\n   *   q and r are the quotient and remainder obtained by dividing stop - start by step.\r\n   * @returns {Promise<Coverage>} A Promise object with the subsetted coverage object as result.\r\n   */\r\n  subsetByIndex (constraints) {\r\n    return subsetByIndexFn(this)(constraints)\r\n  }\r\n  \r\n  /**\r\n   * Returns a Promise object which provides a copy of this Coverage object\r\n   * with the domain subsetted by the given value specification.\r\n   * \r\n   * Note that the coverage type and/or domain type of the resulting coverage\r\n   * may be different than in the original coverage.\r\n   * \r\n   * Note that the subsetted ranges are a view over the original ranges, meaning\r\n   * that no copying is done but also no memory is released if the original\r\n   * coverage is garbage collected.\r\n   * \r\n   * @example\r\n   * cov.subsetByValue({\r\n   *   t: '2015-01-01T01:00:00',\r\n   *   z: {start: -10, stop: -5} \r\n   * }).then(function(subsetCov) {\r\n   *   // work with subsetted coverage\r\n   * })\r\n   * @example\r\n   * cov.subsetByValue({z: {target: -10} }).then(function(subsetCov) {\r\n   *   // work with subsetted coverage\r\n   * }\r\n   * @param {Object} constraints An object which describes the subsetting constraints.\r\n   *  Every property of it refers to an axis name as defined in Domain.names,\r\n   *  and its value must either be a number or string, or,\r\n   *  if the axis has an ordering relation, an object with start and stop properties\r\n   *  whose values are numbers or strings, or an object with a target property\r\n   *  whose value is a number or string.\r\n   *  Properties that have the values undefined or null are ignored.\r\n   *  A number or string constrains the axis to exactly the given value,\r\n   *  a start/stop object to the values intersecting the extent,\r\n   *  and a target object to the value closest to the given value.\r\n   * @returns {Promise<Coverage>} A Promise object with the subsetted coverage object as result.\r\n   */\r\n  subsetByValue (constraints) {\r\n    return subsetCoverageByValue(this, constraints)\r\n  }\r\n}\r\n\r\nfunction getRangeAxisOrder (domain, range) {\r\n  if (!domain) {\r\n    return range._axisNames\r\n  }\r\n  // backwards-compatibility, in the future the range always has an explicit axis ordering\r\n  let needsRangeAxisOrder = [...domain.axes.values()].filter(axis => axis.values.length > 1).length > 1\r\n  \r\n  // domain is checked for backwards-compatibility\r\n  let axisOrder = domain._rangeAxisOrder || range._axisNames\r\n  if (needsRangeAxisOrder && !axisOrder) {\r\n    throw new Error('Range axis order missing')\r\n  }\r\n  axisOrder = axisOrder || [...domain.axes.keys()]\r\n  return axisOrder\r\n}\r\n\r\nfunction getRangeShapeArray (domain, range) {\r\n  if (!domain) {\r\n    return range._shape\r\n  }\r\n  // mostly backwards-compatibility, in the future this just returns range._shape\r\n  let axisOrder = getRangeAxisOrder(domain, range)\r\n  let shape = axisOrder.map(k => domain.axes.get(k).values.length)\r\n  if (range._shape) {\r\n    let matchesDomain = range._shape.length === shape.length && range._shape.every((v,i) => v === shape[i])\r\n    if (!matchesDomain) {\r\n      throw new Error('range.shape must match domain axis sizes')\r\n    }\r\n  }\r\n  return shape\r\n}\r\n\r\nfunction loadRangesFn (cov) {\r\n  return paramKeys => {\r\n    if (paramKeys === undefined) paramKeys = cov.parameters.keys()\r\n    paramKeys = Array.from(paramKeys)\r\n    return Promise.all(paramKeys.map(k => cov.loadRange(k))).then(ranges => {\r\n      let map = new Map()\r\n      for (let i=0; i < paramKeys.length; i++) {\r\n        map.set(paramKeys[i], ranges[i])\r\n      }\r\n      return map\r\n    })\r\n  }\r\n}\r\n\r\nfunction loadRangeFn (cov, globalConstraints) {\r\n  return paramKey => {\r\n    // Since the shape of the range array is derived from the domain, it has to be loaded as well.\r\n    return cov.loadDomain().then(() => {\r\n      let rangeOrUrl = cov._covjson.ranges[paramKey]\r\n      if (typeof rangeOrUrl === 'object') {\r\n        let rawRange = rangeOrUrl\r\n        // we need the original domain here, not a potentially subsetted one,\r\n        // therefore we access cov._covjson directly\r\n        // this legacy code will disappear once the old range format is not supported anymore\r\n        return doLoadRange(cov, paramKey, rawRange, cov._covjson.domain, globalConstraints)\r\n      } else {\r\n        let url = rangeOrUrl\r\n        return load(url).then(result => {\r\n          let rawRange = result.data\r\n          return doLoadRange(cov, paramKey, rawRange, cov._covjson.domain, globalConstraints)\r\n        })\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction doLoadRange (cov, paramKey, range, domain, globalConstraints={}) {\r\n  globalConstraints = normalizeIndexSubsetConstraints(domain, globalConstraints)\r\n  \r\n  if (range.type === 'NdArray' || range.type === 'Range') {\r\n    // if an NdArray, then we modify it in-place (only done the first time)\r\n    transformNdArrayRange(range, domain)\r\n    if (cov.options.cacheRanges) {\r\n      cov._covjson.ranges[paramKey] = range\r\n      cov._updateLoadStatus()\r\n    }\r\n    \r\n    let newrange = subsetNdArrayRangeByIndex(range, domain, globalConstraints)    \r\n    return Promise.resolve(newrange)\r\n    \r\n  } else if (range.type === 'TiledNdArray') {\r\n    return loadTiledNdArraySubset(range, globalConstraints)\r\n    \r\n  } else {\r\n    throw new Error('Unsupported: ' + range.type)\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n * @param {object} range TiledNdArray range object\r\n * @param {object} constraints subsetting constraints\r\n * @returns {Promise<Range>}\r\n */\r\nfunction loadTiledNdArraySubset (range, constraints) {\r\n  let constraintsArr = range.axisNames.map(name => constraints[name])\r\n  \r\n  // step 1: select tileset with least network effort\r\n  let fillNulls = tileShape => tileShape.map((v,i) => v === null ? range.shape[i] : v)    \r\n  let tilesetsStats = range.tileSets.map(ts => getTilesetStats(fillNulls(ts.tileShape), constraintsArr))\r\n  let idxBestTileset = indexOfBestTileset(tilesetsStats)\r\n  let tileset = range.tileSets[idxBestTileset]\r\n  let tileShape = fillNulls(tileset.tileShape)\r\n      \r\n  // step 2: determine the tiles to load\r\n  let subsetTilesetAxes = []\r\n  for (let ax=0; ax < tileShape.length; ax++) {\r\n    let {start,stop,step} = constraintsArr[ax]\r\n    let tileSize = tileShape[ax]\r\n    \r\n    // the indices of the first and last tile containing the subsetting constraints\r\n    let tileStart = Math.floor(start / tileSize) // inclusive\r\n    let tileStop = Math.ceil(stop / tileSize) // exclusive\r\n    \r\n    let tilesetAxis = []\r\n    for (let t=tileStart; t < tileStop; t++) {\r\n      let mid = (t + 0.5) * tileSize\r\n      // regard the subset constraint as a list of [x,y) half-closed intervals and find out where 'mid' falls into\r\n      let iv = Math.floor((mid - start) / step)\r\n      \r\n      // start and end point of the interval in range index space\r\n      let ivStart = start + iv * step\r\n      let ivStop = start + (iv + 1) * step\r\n      \r\n      // tile start and end in range index space\r\n      let tileStartR = t * tileSize\r\n      let tileStopR = (t + 1) * tileSize\r\n      \r\n      // check if the start or end point of the interval lies within the tile\r\n      if (ivStart >= tileStartR || tileStopR <= ivStop) {\r\n        tilesetAxis.push(t)\r\n      }\r\n    }\r\n    subsetTilesetAxes.push(tilesetAxis)\r\n  }\r\n  \r\n  // step 3: create an empty ndarray of the subset shape that will be filled with tile data\r\n  // TODO check if only a single tile will be loaded and avoid copying data around in that case\r\n  let subsetShape = constraintsArr.map(({start,stop,step}) => Math.floor((stop - start) / step) + (stop - start) % step)\r\n  let subsetSize = subsetShape.reduce((l,r) => l*r)\r\n  let subsetNdArr = ndarray(new Array(subsetSize), subsetShape)\r\n  \r\n  // step 4: load tiles and fill subset ndarray\r\n  let urlTemplate = template.parse(tileset.urlTemplate)\r\n  let tiles = cartesianProduct(subsetTilesetAxes)\r\n  let promises = tiles.map(tile => {\r\n    let tileUrlVars = {}\r\n    tile.forEach((v,i) => tileUrlVars[range.axisNames[i]] = v)\r\n    let url = urlTemplate.expand(tileUrlVars)\r\n    return load(url).then(result => {\r\n      let tileRange = result.data\r\n      transformNdArrayRange(tileRange)\r\n      \r\n      // figure out which parts of the tile to copy into which part of the final ndarray\r\n      let tileOffsets = tile.map((v,i) => v * tileShape[i])\r\n      \r\n      // iterate all tile values and for each check if they are part of the subset\r\n      // TODO this code is probably quite slow, consider pre-compiling etc\r\n      let tileAxesSubsetIndices = []\r\n      for (let ax=0; ax < tileShape.length; ax++) {\r\n        let {start,stop,step} = constraintsArr[ax]\r\n        let tileAxisSize = tileShape[ax]\r\n        let tileAxisOffset = tileOffsets[ax]\r\n        let tileAxisSubsetIndices = []\r\n        let startIdx = 0\r\n        if (tileAxisOffset < start) {\r\n          startIdx = start - tileAxisOffset\r\n        }\r\n        let stopIdx = tileAxisSize\r\n        if (tileAxisOffset + stopIdx > stop) {\r\n          stopIdx = stop - tileAxisOffset\r\n        }\r\n        \r\n        for (let i=startIdx; i < stopIdx; i++) {\r\n          let idx = tileAxisOffset + i\r\n          if ((idx - start) % step === 0) {\r\n            tileAxisSubsetIndices.push(i)\r\n          }\r\n        }\r\n        tileAxesSubsetIndices.push(tileAxisSubsetIndices)\r\n      }\r\n      let tileSubsetIndices = cartesianProduct(tileAxesSubsetIndices)\r\n      for (let tileInd of tileSubsetIndices) {\r\n        let val = tileRange._ndarr.get(...tileInd)\r\n        let subsetInd = tileInd.map((i,ax) => {\r\n          let idx = tileOffsets[ax] + i\r\n          return Math.floor((idx - constraintsArr[ax].start) / constraintsArr[ax].step)\r\n        })\r\n        subsetNdArr.set(...subsetInd, val)\r\n      }\r\n    })\r\n  })\r\n  \r\n  // step 5: create and return the new range\r\n  return Promise.all(promises).then(() => {\r\n    let newrange = {\r\n      dataType: range.dataType,\r\n      get: createRangeGetFunction(subsetNdArr, range.axisNames),\r\n      _ndarr: subsetNdArr,\r\n      _axisNames: range.axisNames,\r\n      _shape: subsetShape\r\n    }\r\n    newrange.shape = new Map(range.axisNames.map((v,i) => [v, subsetNdArr.shape[i]]))\r\n    return newrange\r\n  })\r\n}\r\n\r\n/**\r\n * Return the cartesian product of the given arrays.\r\n * \r\n * @see http://stackoverflow.com/a/36234242\r\n */\r\nfunction cartesianProduct (arr) {\r\n  return arr.reduce((a,b) => a.map(x => b.map(y => x.concat(y))).reduce((a,b) => a.concat(b), []), [[]])\r\n}\r\n\r\n/**\r\n * Returns the number of tiles and values that have to be loaded, given a set of subsetting constraints.\r\n * \r\n * @param {Array<number>} tileShape\r\n * @param {Array<object>} constraints - start/stop/step subset constraints for each axis, stop is exclusive\r\n * @returns {number}\r\n */\r\nfunction getTilesetStats (tileShape, constraints) {\r\n  let tileCount = 1\r\n  for (let i=0; i < tileShape.length; i++) {\r\n    let {start, stop, step} = constraints[i]\r\n    let tileSize = tileShape[i]\r\n    \r\n    // the indices of the first and last tile containing the subsetting constraints\r\n    let tileStart = Math.floor(start / tileSize) // inclusive\r\n    let tileStop = Math.ceil(stop / tileSize) // exclusive\r\n    \r\n    // total number of values within the tiles containing the subsetting constraints\r\n    let nvalues = tileSize * (tileStop - tileStart)\r\n\r\n    // number of tiles that intersect with the subsetting constraints\r\n    tileCount *= Math.ceil(nvalues / (Math.max(step, tileSize)))\r\n  }\r\n  // the value count is an upper bound as it doesn't account for edge tiles that may be smaller\r\n  let valueCount = tileCount * tileShape.reduce((l,r) => l*r)\r\n  \r\n  return {tileCount, valueCount}\r\n}\r\n\r\n/**\r\n * Returns the index of the tileset with minimum network effort based on the given tileset statistics.\r\n * Effort here means a combination of number of requested tiles and values.\r\n * \r\n * @param {Array<object>} tilesetsStats\r\n * @returns {number} index of the tileset with minimum network effort\r\n */\r\nfunction indexOfBestTileset (tilesetsStats) {\r\n  // one tile request shall have an equal effort as receiving 1000 values\r\n  let tileValueRatio = 1000\r\n  let efforts = tilesetsStats.map(s => s.tileCount + s.valueCount / tileValueRatio)\r\n  let minEffortIdx = efforts.reduce((imin, x, i, arr) => x < arr[imin] ? i : imin, 0)\r\n  return minEffortIdx\r\n}\r\n\r\nfunction subsetNdArrayRangeByIndex (range, domain, constraints) {\r\n  let ndarr = range._ndarr\r\n        \r\n  // fast ndarray view\r\n  let axisNames = getRangeAxisOrder(domain, range)\r\n  let los = axisNames.map(name => constraints[name].start)\r\n  let his = axisNames.map(name => constraints[name].stop)\r\n  let steps = axisNames.map(name => constraints[name].step)\r\n  let newndarr = ndarr.hi(...his).lo(...los).step(...steps)\r\n  \r\n  let newrange = {\r\n    dataType: range.dataType,\r\n    get: createRangeGetFunction(newndarr, axisNames),\r\n    _ndarr: newndarr,\r\n    _axisNames: axisNames,\r\n    _shape: newndarr.shape\r\n  }\r\n  newrange.shape = new Map(axisNames.map((v,i) => [v, newndarr.shape[i]]))\r\n  return newrange\r\n}\r\n\r\nfunction subsetByIndexFn (cov, globalConstraints) {\r\n  return constraints => {\r\n    return cov.loadDomain().then(domain => {\r\n      constraints = normalizeIndexSubsetConstraints(domain, constraints)\r\n      let newdomain = subsetDomainByIndex(domain, constraints)\r\n      \r\n      let newGlobalConstraints = toGlobalSubsetConstraints(constraints, globalConstraints)\r\n      \r\n      // backwards-compatibility\r\n      if (domain._rangeAxisOrder) {\r\n        newdomain._rangeAxisOrder = domain._rangeAxisOrder\r\n      }\r\n      \r\n      // assemble everything to a new coverage\r\n      let newcov = {\r\n        _covjson: cov._covjson,\r\n        options: cov.options,\r\n        type: COVERAGE,\r\n        // TODO are the profiles still valid?\r\n        domainProfiles: cov.domainProfiles,\r\n        domainType: cov.domainType,\r\n        parameters: cov.parameters,\r\n        loadDomain: () => Promise.resolve(newdomain)\r\n      }\r\n      newcov.loadRange = loadRangeFn(newcov, newGlobalConstraints)\r\n      newcov.loadRanges = loadRangesFn(newcov)\r\n      newcov.subsetByIndex = subsetByIndexFn(newcov, newGlobalConstraints)\r\n      newcov.subsetByValue = subsetCoverageByValue.bind(null, newcov)\r\n      return newcov\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Currently unused, but may need in future.\r\n * This determines the best array type for categorical data which\r\n * doesn't have missing values.\r\n */\r\n/*\r\nfunction arrayType (validMin, validMax) {\r\n  let type\r\n  if (validMin !== undefined) {\r\n    if (validMin >= 0) {\r\n      if (validMax < Math.pow(2,8)) {\r\n        type = Uint8Array\r\n      } else if (validMax < Math.pow(2,16)) {\r\n        type = Uint16Array\r\n      } else if (validMax < Math.pow(2,32)) {\r\n        type = Uint32Array\r\n      } else {\r\n        type = Array\r\n      }\r\n    } else {\r\n      let max = Math.max(Math.abs(validMin), validMax)\r\n      if (max < Math.pow(2,8)) {\r\n        type = Int8Array\r\n      } else if (validMax < Math.pow(2,16)) {\r\n        type = Int16Array\r\n      } else if (validMax < Math.pow(2,32)) {\r\n        type = Int32Array\r\n      } else {\r\n        type = Array\r\n      }\r\n    }\r\n  } else {\r\n    type = Array\r\n  }\r\n  return type\r\n}\r\n*/\r\n\r\n/**\r\n * Transforms a CoverageJSON parameter to the Coverage API format, that is,\r\n * some elements are converted from objects to Maps. Transformation is made in-place.\r\n * \r\n * @param {Object} param The original parameter.\r\n * @access private\r\n */\r\nexport function transformParameter (params, key) {\r\n  if ('__transformDone' in params[key]) return\r\n  let param = params[key]\r\n  param.key = key\r\n  if (param.unit) {\r\n    if (typeof param.unit.symbol === 'string') {\r\n      param.unit.symbol = {\r\n        value: param.unit.symbol\r\n        // no type member, since the scheme is unknown\r\n      }\r\n    }\r\n  }\r\n  if (param.categoryEncoding) {\r\n    let map = new Map()\r\n    for (let category of Object.keys(param.categoryEncoding)) {\r\n      let vals = param.categoryEncoding[category]\r\n      if (!Array.isArray(vals)) {\r\n        vals = [vals]\r\n      }\r\n      map.set(category, vals)\r\n    }\r\n    param.categoryEncoding = map\r\n  }\r\n  param.__transformDone = true  \r\n}\r\n\r\n/**\r\n * Transforms a CoverageJSON NdArray range to the Coverage API format. Transformation is made in-place.\r\n * \r\n * @param {Object} range The original NdArray range.\r\n * @param {Object} [domain] The CoverageJSON domain object. \r\n * @return {Object} The transformed range.\r\n */\r\nfunction transformNdArrayRange (range, domain) {\r\n  if ('__transformDone' in range) return\r\n  \r\n  const values = range.values\r\n    \r\n  if (range.actualMin === undefined) {\r\n    let [min,max] = minMax(values)\r\n    if (min !== null) {\r\n      range.actualMin = min\r\n      range.actualMax = max\r\n    }\r\n  }\r\n  \r\n  // store the array as we will expose a Map on range.shape in the next step\r\n  if (range.shape) {\r\n    range._shape = range.shape\r\n  }\r\n  if (range.axisNames) {\r\n    // not part of public API\r\n    range._axisNames = range.axisNames\r\n    delete range.axisNames\r\n  }\r\n  \r\n  let axisNames = getRangeAxisOrder(domain, range)\r\n  let shapeArr = getRangeShapeArray(domain, range)\r\n  \r\n  let ndarr = ndarray(values, shapeArr)\r\n  range._ndarr = ndarr\r\n  range.get = createRangeGetFunction(ndarr, axisNames)\r\n  range.shape = new Map(axisNames.map((v,i) => [v, shapeArr[i]]))\r\n  \r\n  range.__transformDone = true  \r\n  return range\r\n}\r\n\r\n/**\r\n * \r\n * @param axisOrder An array of axis names.\r\n * @returns Function\r\n */\r\nfunction createRangeGetFunction (ndarr, axisOrder) {\r\n  // see below for slower reference version\r\n  let ndargs = ''\r\n  for (let i=0; i < axisOrder.length; i++) {\r\n    if (ndargs) ndargs += ','\r\n    ndargs += `'${axisOrder[i]}' in obj ? obj['${axisOrder[i]}'] : 0`\r\n  }\r\n  let fn = new Function('ndarr', `return function ndarrget (obj) { return ndarr.get(${ndargs}) }`)(ndarr)\r\n  return fn\r\n}\r\n\r\n/*\r\n * Reference version of createRangeGetFunction().\r\n * Around 50% slower (on Chrome 46) compared to precompiled version.\r\n * \r\nfunction createRangeGetFunction (ndarr, axisOrder) {\r\n  axisOrder = axisOrder.slice() // help the JIT (possibly..)\r\n  const axisCount = axisOrder.length\r\n  return obj => {\r\n    let indices = new Array(axisCount)\r\n    for (let i=0; i < axisCount; i++) {\r\n      indices[i] = axisOrder[i] in obj ? obj[axisOrder[i]] : 0\r\n    }\r\n    return ndarr.get(...indices)\r\n  }\r\n}\r\n*/\r\n\r\n/**\r\n * Transforms a CoverageJSON domain to the Coverage API format.\r\n * Transformation is made in-place.\r\n * \r\n * @param {Object} domain The original domain object.\r\n * @param {Array} [referencing] Referencing info to inject.\r\n * @return {Object} The transformed domain object.\r\n * @access private\r\n */\r\nexport function transformDomain (domain, referencing, domainType) {\r\n  if ('__transformDone' in domain) return\r\n  \r\n  domainType = domain.domainType || domainType\r\n  if (domainType && domainType.indexOf(':') === -1) {\r\n    domainType = DOMAINTYPES_PREFIX + domainType\r\n  }\r\n  domain.domainType = domainType\r\n\r\n  let axes = new Map() // axis name -> axis object\r\n  \r\n  for (let axisName of Object.keys(domain.axes)) {\r\n    axes.set(axisName, domain.axes[axisName])\r\n  }\r\n  domain.axes = axes\r\n  \r\n  // expand start/stop/num regular axes\r\n  // replace 1D numeric axis arrays with typed arrays for efficiency\r\n  for (let [key, axis] of axes) {\r\n    axis.key = key\r\n    \r\n    if (axis.dataType && axis.dataType.indexOf(':') === -1) {\r\n      axis.dataType = CORE_PREFIX + axis.dataType\r\n    }\r\n    \r\n    // TODO remove this if-block later, just here for backwards-compatibility \r\n    if (axis.components) {\r\n      axis.coordinates = axis.components\r\n    }\r\n    \r\n    if (!axis.coordinates) {\r\n      axis.coordinates = [key]\r\n    }\r\n    \r\n    // TODO remove this line later, just here for backwards-compatibility \r\n    axis.components = axis.coordinates\r\n    \r\n    \r\n    if ('start' in axis && 'stop' in axis && 'num' in axis) {\r\n      let arr = new Float64Array(axis.num)\r\n      let step\r\n      if (axis.num === 1) {\r\n        if (axis.start !== axis.stop) {\r\n          throw new Error('regular axis of length 1 must have equal start/stop values')\r\n        }\r\n        step = 0\r\n      } else {\r\n        step = (axis.stop - axis.start) / (axis.num - 1)\r\n      }\r\n      for (let i=0; i < axis.num; i++) {\r\n        arr[i] = axis.start + i * step\r\n      }\r\n      \r\n      axis.values = arr\r\n      delete axis.start\r\n      delete axis.stop\r\n      delete axis.num\r\n    }\r\n    \r\n    if (Array.isArray(axis.values) && typeof axis.values[0] === 'number') {\r\n      let arr = new Float64Array(axis.values.length)\r\n      for (let i=0; i < axis.values.length; i++) {\r\n        arr[i] = axis.values[i]\r\n      }\r\n      axis.values = arr\r\n    }\r\n    \r\n    axis.bounds = wrapBounds(axis)\r\n  }\r\n  \r\n  if (referencing) {\r\n    domain.referencing = referencing\r\n  }\r\n  \r\n  // TODO remove this later, just here for backwards-compatibility \r\n  for (let obj of domain.referencing) {\r\n    if (obj.components) {\r\n      obj.coordinates = obj.components\r\n    }\r\n  }\r\n  \r\n  if (domain.rangeAxisOrder) {\r\n    domain._rangeAxisOrder = domain.rangeAxisOrder\r\n    delete domain.rangeAxisOrder\r\n  }\r\n  \r\n  domain.__transformDone = true\r\n  \r\n  return domain\r\n}\r\n\r\n/**\r\n * Applies the local index subset constraints to the existing global constraints.\r\n * Both constraint objects must be normalized, that is, must contain the same axes\r\n * as start/stop/step objects.\r\n * \r\n * @example\r\n * var local = {x: {start: 0, stop: 50, step: 2}}\r\n * var global = {x: {start: 500, stop: 1000}}\r\n * var newGlobal = toGlobalSubsetConstraints(local, global)\r\n * // newGlobal == {x: {start: 500, stop: 550, step: 2}}\r\n * \r\n * @example\r\n * var local = {x: {start: 5, stop: 10, step: 2}} // 5, 7, 9\r\n * var global = {x: {start: 500, stop: 1000, step: 10}} // 500, 510, 520,...\r\n * var newGlobal = toGlobalSubsetConstraints(local, global) \r\n * // newGlobal == {x: {start: 550, stop: 600, step: 20}} // 550, 570, 590\r\n */\r\nfunction toGlobalSubsetConstraints (localConstraints, globalConstraints={}) {\r\n  let res = {}\r\n  for (let axis of Object.keys(localConstraints)) {\r\n    let local = localConstraints[axis]\r\n    let {start: globalStart=0, step: globalStep=1} = globalConstraints[axis] || {}\r\n    res[axis] = {\r\n      start: globalStart + globalStep*local.start,\r\n      stop: globalStart + globalStep*local.stop,\r\n      step: globalStep * local.step\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nfunction wrapBounds (axis) {\r\n  if (axis.bounds) {\r\n    let bounds = axis.bounds\r\n    return {\r\n      get: i => [bounds[2*i], bounds[2*i + 1]]\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @external {CollectionQuery} https://github.com/Reading-eScience-Centre/coverage-jsapi/blob/master/CoverageCollectionQuery.md\r\n */\r\n\r\nimport {COVERAGECOLLECTION} from './constants.js'\r\nimport {default as Coverage, transformDomain, transformParameter} from './Coverage.js'\r\nimport {shallowcopy, getNamespacePrefixes, DOMAINTYPES_PREFIX} from './util.js'\r\nimport {CollectionQuery} from 'covutils'\r\n\r\n/** \r\n * Wraps a CoverageJSON Collection object as a CoverageCollection API object.\r\n * \r\n * @see https://github.com/Reading-eScience-Centre/coverage-jsapi\r\n * \r\n */\r\nexport default class CoverageCollection {\r\n  /**\r\n   * @param {Object} covjson The CoverageJSON Collection document.\r\n   */\r\n  constructor(covjson) {\r\n    /**\r\n     * The constant \"CoverageCollection\".\r\n     * \r\n     * @type {string}\r\n     */\r\n    this.type = COVERAGECOLLECTION\r\n    \r\n    /**\r\n     * JSON-LD document\r\n     * \r\n     * @type {Object}\r\n     */\r\n    this.ld = {}\r\n    \r\n    this._exposeLd(covjson)\r\n    \r\n    this.prefixes = getNamespacePrefixes(this.ld)\r\n    \r\n    /** \r\n     * ID of the coverage collection.\r\n     * \r\n     * @type {string|undefined} \r\n     */\r\n    this.id = covjson.id\r\n    \r\n    \r\n    let domainType = covjson.domainType\r\n    if (domainType && domainType.indexOf(':') === -1) {\r\n      domainType = DOMAINTYPES_PREFIX + domainType\r\n    }\r\n\r\n    /**\r\n     * If defined, every coverage in the collection has the given domain type, typically a URI.\r\n     * \r\n     * @type {string|undefined}\r\n     */\r\n    this.domainType = domainType\r\n    \r\n    \r\n    let covs = []\r\n    let rootParams = covjson.parameters ? covjson.parameters : {}\r\n    // generate local parameter IDs if not existing\r\n    // this is to keep track of same parameters when copied into the coverages\r\n    // (e.g. to synchronize legends etc.)\r\n    for (let key of Object.keys(rootParams)) {\r\n      let param = rootParams[key]\r\n      if (!param.id) {\r\n        param.id = Math.round(new Date().getTime() * Math.random()).toString()\r\n      }\r\n    }\r\n    \r\n    let covOptions = {}\r\n    if (covjson.referencing) {\r\n      covOptions.referencing = covjson.referencing\r\n    }\r\n    for (let coverage of covjson.coverages) {\r\n      if (!coverage.domainType) {\r\n        coverage.domainType = domainType\r\n      }\r\n      if (!coverage.parameters) {\r\n        coverage.parameters = {}\r\n      }\r\n      for (let key of Object.keys(rootParams)) {\r\n        if (key in coverage.ranges) {\r\n          coverage.parameters[key] = rootParams[key]\r\n        }\r\n      }\r\n      if (covjson['@context']) {\r\n        coverage['@context'] = covjson['@context']\r\n      }\r\n      covs.push(new Coverage(coverage, covOptions))\r\n    }\r\n    \r\n    /** \r\n     * The Coverages of this collection.\r\n     * \r\n     * @type {Array<Coverage>} \r\n     */\r\n    this.coverages = covs\r\n    if (covjson.parameters) {\r\n      /**\r\n       * A Map from key to {@link Parameter} object.\r\n       * The key is a short alias of a {@link Parameter}, typically what is called a \"variable name\" or similar.\r\n       * \r\n       * @type {Map<string,Parameter>}\r\n       */\r\n      this.parameters = new Map()\r\n      for (let key of Object.keys(covjson.parameters)) {\r\n        transformParameter(covjson.parameters, key)\r\n        this.parameters.set(key, covjson.parameters[key])\r\n      }\r\n    }\r\n    if (covjson.domainTemplate) {\r\n      transformDomain(covjson.domainTemplate)\r\n      /**\r\n       * @ignore\r\n       */\r\n      this.domainTemplate = covjson.domainTemplate\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * \r\n   * @return {CollectionQuery}\r\n   */\r\n  query () {\r\n    return new CollectionQuery(this)\r\n  }\r\n  \r\n  _exposeLd (covjson) {\r\n    if (!covjson['@context']) {\r\n      // no LD love here...\r\n      return\r\n    }\r\n    // make a deep copy since the object gets modified in-place later\r\n    // but first, remove the coverages (those have their own .ld property)\r\n    let copy = shallowcopy(covjson)\r\n    delete copy.coverages\r\n    this.ld = JSON.parse(JSON.stringify(copy))\r\n  }\r\n}\r\n","import Coverage from './Coverage.js'\r\nimport {transformDomain} from './Coverage.js'\r\nimport CoverageCollection from './CoverageCollection.js'\r\nimport {assert} from './util.js'\r\nimport {COVERAGE, COVERAGECOLLECTION, DOMAIN, LINKRELPREFIX} from './constants.js'\r\n\r\n// NO FILE EXTENSION, to work around JSPM bug in handling package.json's \"browser\" field\r\n// see https://github.com/jspm/jspm-cli/issues/1062#issuecomment-170342414\r\nimport * as http from './http'\r\n\r\n/**\r\n * Loads a CoverageJSON document from a given URL and returns a {@link Promise} object\r\n * that succeeds with the unmodified CoverageJSON object.\r\n * \r\n * @param {string} url The URL to load the CoverageJSON document from.\r\n * @param {Object} [options] An options object. \r\n * @param {Object} [options.headers] Additional HTTP headers to send if input is a URL.\r\n * @param {Object} [options.eagerload]\r\n *   Request a stand-alone CoverageJSON document (with domain and ranges embedded) if input is a URL.\r\n *   Note that the server may ignore that preference.\r\n * @return {Promise}\r\n *   A Promise succeeding with an object <code>{data, headers}</code> where data is the CoverageJSON object\r\n *   and headers are the HTTP response headers with lower-cased header names as object keys.\r\n *   The promise fails if the resource at the given URL is not a valid JSON or CBOR document. \r\n */\r\nexport function load (url, options) {\r\n  return http.load(url, options)\r\n}\r\n\r\n/**\r\n * Reads a CoverageJSON document and returns a {@link Promise} that succeeds with\r\n * a Domain, {@link Coverage}, or {@link CoverageCollection} object.\r\n * \r\n * Note that if the document references external domain or range documents,\r\n * then these are not loaded immediately. \r\n * \r\n * \r\n * @example\r\n * CovJSON.read('http://example.com/coverage.covjson').then(function (cov) {\r\n *   // work with Coverage data object\r\n * }).catch(function (e) {\r\n *   // there was an error when loading the coverage data\r\n *   console.log(e)\r\n * })\r\n * @param {Object|string} input \r\n *    A CoverageJSON Domain, Coverage, or Coverage Collection document, as URL or object.\r\n * @param {Object} [options]\r\n *   An options object. \r\n * @param {Object} [options.headers]\r\n *   Additional HTTP headers to send if input is a URL.\r\n * @param {Object} [options.eagerload]\r\n *   Request a stand-alone CoverageJSON document (with domain and ranges embedded) if input is a URL.\r\n *   Note that the server may ignore that preference. \r\n * @return {Promise} \r\n *    A promise object succeeding with a Domain, {@link Coverage}, or {@link CoverageCollection} object,\r\n *    and failing with an {@link Error} object.\r\n */\r\nexport function read (input, options = {}) {\r\n  if (typeof input === 'object') {\r\n    return Promise.resolve().then(() => transformCovJSON(input))\r\n  } else {\r\n    return load(input, options).then(({data,headers}) => transformCovJSON(data, headers))\r\n  }\r\n}\r\n\r\n/**\r\n * Transforms a CoverageJSON object into one or more Coverage objects.\r\n *  \r\n * @param {object} obj A CoverageJSON object of type Coverage or CoverageCollection.\r\n * @param {array} headers An optional array of HTTP headers. Keys are lower-cased header names.\r\n * @return {Coverage|Array of Coverage}\r\n */\r\nfunction transformCovJSON (obj, headers) {\r\n  checkValidCovJSON(obj)\r\n  if ([COVERAGE, COVERAGECOLLECTION, DOMAIN].indexOf(obj.type) === -1) {\r\n    throw new Error('CoverageJSON document must be of Coverage, CoverageCollection, or Domain type')\r\n  }\r\n  \r\n  let result\r\n  if (obj.type === DOMAIN) {\r\n    transformDomain(obj)\r\n    result = obj\r\n  } else  if (obj.type === COVERAGE) {\r\n    result = new Coverage(obj)\r\n  } else {\r\n    result = new CoverageCollection(obj)\r\n  }\r\n  \r\n  if (obj.type === COVERAGE || obj.type === COVERAGECOLLECTION) {\r\n    addLinkRelations(result, headers)\r\n  }\r\n    \r\n  return result\r\n}\r\n\r\n/**\r\n * Scans the supplied HTTP headers for Link relations and adds them\r\n * to the .ld property of the Coverage/CoverageCollection.\r\n */    \r\nfunction addLinkRelations (cov, headers) {  \r\n  if (!headers || !headers['link']) {\r\n    return\r\n  }\r\n  \r\n  let ld = cov.ld\r\n  \r\n  for (let link of headers['link'].split(',')) {\r\n    link = link.trim()\r\n    // FIXME this will fail if the URL contains a \";\" which is valid (see RFC5988)\r\n    let parts = link.split(';')\r\n    let url = parts[0].substr(1, parts[0].length-2)\r\n    for (let param of parts.slice(1)) {\r\n      let relStart = param.indexOf('rel=')\r\n      if (relStart === -1) {\r\n        continue\r\n      }\r\n      let rel = param.substring(relStart+5, param.length-1)\r\n      if (!rel.startsWith('http://') && !rel.startsWith('https://')) {\r\n        rel = LINKRELPREFIX + rel\r\n      }\r\n      if (ld[rel]) {\r\n        if (Array.isArray(ld[rel])) {\r\n          ld[rel].push(url)\r\n        } else {\r\n          ld[rel] = [ld[rel], url]\r\n        }\r\n      } else {\r\n        ld[rel] = url\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Performs basic structural checks to validate whether a given object is a CoverageJSON object.\r\n * \r\n * Note that this method is not comprehensive and should not be used for checking\r\n * whether an object fully conforms to the CoverageJSON specification.\r\n * \r\n * @param obj\r\n * @throws {Error} when obj is not a valid CoverageJSON document \r\n */\r\nfunction checkValidCovJSON (obj) {\r\n  assert('type' in obj, '\"type\" missing')\r\n  if (obj.type === COVERAGE) {\r\n    assert('parameters' in obj, '\"parameters\" missing')\r\n    assert('domain' in obj, '\"domain\" missing')\r\n    assert('ranges' in obj, '\"ranges\" missing')\r\n  } else if (obj.type === COVERAGECOLLECTION) {\r\n    assert(Array.isArray(obj.coverages), '\"coverages\" must be an array')\r\n  }\r\n}\r\n"],"names":["this","load","COVERAGE","subsetCoverageByValue","normalizeIndexSubsetConstraints","ndarray","subsetDomainByIndex","minMax","COVERAGECOLLECTION","CollectionQuery","http.load","DOMAIN"],"mappings":"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"}