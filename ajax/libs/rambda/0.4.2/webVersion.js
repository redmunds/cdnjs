(function webpackUniversalModuleDefinition(d,e){if(typeof exports==='object'&&typeof module==='object')module.exports=e();else if(typeof define==='function'&&define.amd)define([],e);else{var a=e();for(var i in a)(typeof exports==='object'?exports:d)[i]=a[i];}})(this,function(){return function(f){var g={};function __webpack_require__(h){if(g[h])return g[h].exports;var j=g[h]={i:h,l:!1,exports:{}};f[h].call(j.exports,j,j.exports,__webpack_require__);j.l=!0;return j.exports;}__webpack_require__.m=f;__webpack_require__.c=g;__webpack_require__.i=function(k){return k;};__webpack_require__.d=function(l,m,n){if(!__webpack_require__.o(l,m)){Object.defineProperty(l,m,{configurable:!1,enumerable:!0,get:n});}};__webpack_require__.n=function(o){var p=o&&o.__esModule?function getDefault(){return o['default'];}:function getModuleExports(){return o;};__webpack_require__.d(p,'a',p);return p;};__webpack_require__.o=function(q,r){return Object.prototype.hasOwnProperty.call(q,r);};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=1);}([function(s,t){function add(a,b){if(b===void 0){return c=>add(a,c);}return a+b;}function adjust(u,v,w){if(v===void 0){return(x,y)=>adjust(u,x,y);}else if(w===void 0){return z=>adjust(u,v,z);}return w.map((A,B)=>{if(B===v){return u(w[v]);}return A;});}function any(C,D){if(D===void 0){return E=>any(C,E);}let F=0;while(F<D.length){if(C(D[F])){return!0;}F++;}return!1;}function append(G,H){if(H===void 0){return I=>append(G,I);}const J=H;J.push(G);return J;}function isFunction(K){return typeof K==="function";}function compose(){const L=arguments;let M=L.length;while(M--){if(!isFunction(L[M])){throw new TypeError();}}return function(){let N=arguments,O=L.length;while(O--){N=[L[O].apply(this,N)];}return N[0];};}function filter(P,Q){if(Q===void 0){return S=>filter(P,S);}let T=-1,U=0;const V=Q.length,W=[];while(++T<V){const X=Q[T];if(P(X)){W[U++]=X;}}return W;}function find(Y,Z){if(Z===void 0){return a1=>find(Y,a1);}return Z.find(Y);}function findIndex(fn,c1){if(c1===void 0){return d1=>findIndex(fn,d1);}const e1=c1.length;let f1=0;while(++f1<e1){if(fn(c1[f1])){return f1;}}return-1;}function flatten(g1,h1){h1=h1===void 0?[]:h1;for(let i=0;i<g1.length;i++){if(Array.isArray(g1[i])){flatten(g1[i],h1);}else{h1.push(g1[i]);}}return h1;}function drop(i1,j1){if(j1===void 0){return k1=>drop(i1,k1);}const l1=j1;return l1.slice(i1);}function dropLast(m1,n1){if(n1===void 0){return o1=>dropLast(m1,o1);}const p1=n1;return p1.slice(0,-m1);}function equals(a,b){if(b===void 0){return q1=>equals(a,q1);}else if(a===b){return a!==0||1/a===1/b;}const r1=type(a);if(r1!==type(b)){return!1;}if(r1==="Array"){const s1=a,t1=b;return s1.sort().toString()===t1.sort().toString();}if(r1==="Object"){const u1=Object.keys(a);if(u1.length===Object.keys(b).length){if(u1.length===0){return!0;}let v1=!0;u1.map(w1=>{if(v1){const x1=type(a[w1]),y1=type(b[w1]);if(x1===y1){if(x1==="Object"){if(Object.keys(a[w1]).length===Object.keys(b[w1]).length){if(Object.keys(a[w1]).length!==0){if(!equals(a[w1],b[w1])){v1=!1;}}}else{v1=!1;}}else if(!equals(a[w1],b[w1])){v1=!1;}}else{v1=!1;}}});return v1;}}return!1;}function contains(z1,A1){if(A1===void 0){return B1=>contains(z1,B1);}let C1=-1,D1=!1;while(++C1<A1.length&&!D1){if(equals(A1[C1],z1)){D1=!0;}}return D1;}function head(a){if(typeof a==="string"){return a[0]||"";}return a[0];}function indexOf(E1,F1){if(F1===void 0){return G1=>indexOf(E1,G1);}let H1=-1;const I1=F1.length;while(++H1<I1){if(F1[H1]===E1){return H1;}}return-1;}function baseSlice(J1,K1,L1){let M1=-1,N1=J1.length;L1=L1>N1?N1:L1;if(L1<0){L1+=N1;}N1=K1>L1?0:L1-K1>>>0;K1>>>=0;const O1=Array(N1);while(++M1<N1){O1[M1]=J1[M1+K1];}return O1;}function init(a){if(typeof a==="string"){return a.slice(0,-1);}return a.length?baseSlice(a,0,-1):[];}function join(P1,Q1){if(Q1===void 0){return R1=>join(P1,R1);}return Q1.join(P1);}function map(fn,T1){if(T1===void 0){return U1=>map(fn,U1);}let V1=-1;const W1=T1.length,X1=Array(W1);while(++V1<W1){X1[V1]=fn(T1[V1]);}return X1;}function last(a){if(typeof a==="string"){return a[a.length-1]||"";}return a[a.length-1];}function length(Y1){return Y1.length;}function match(Z1,a2){if(a2===void 0){return b2=>match(Z1,b2);}const c2=a2.match(Z1);return c2===null?[]:c2;}function merge(d2,e2){if(e2===void 0){return f2=>merge(d2,f2);}return Object.assign({},d2,e2);}function omit(g2,h2){if(h2===void 0){return i2=>omit(g2,i2);}const j2={};for(key in h2){if(!g2.includes(key)){j2[key]=h2[key];}}return j2;}function path(k2,l2){if(l2===void 0){return m2=>path(k2,m2);}let n2=l2,o2=0;while(o2<k2.length){if(n2===null){return void 0;}n2=n2[k2[o2]];o2++;}return n2;}function pick(p2,q2){if(q2===void 0){return r2=>pick(p2,r2);}const s2={};let t2=0;while(t2<p2.length){if(p2[t2]in q2){s2[p2[t2]]=q2[p2[t2]];}t2++;}return s2;}function prepend(u2,v2){if(v2===void 0){return w2=>prepend(u2,w2);}const x2=v2;x2.unshift(u2);return x2;}function prop(y2,z2){if(z2===void 0){return A2=>prop(y2,A2);}return z2[y2];}function propEq(B2,C2,D2){if(C2===void 0){return(E2,F2)=>propEq(B2,E2,F2);}else if(D2===void 0){return G2=>propEq(B2,C2,G2);}return D2[B2]===C2;}function range(H2,I2){const J2=[];for(let i=H2;i<I2;i++){J2.push(i);}return J2;}function repeat(a,K2){if(K2===void 0){return L2=>repeat(a,L2);}const M2=Array(K2);return M2.fill(a);}function replace(N2,O2,P2){if(O2===void 0){return(Q2,R2)=>replace(N2,Q2,R2);}else if(P2===void 0){return S2=>replace(N2,O2,S2);}return P2.replace(N2,O2);}function subtract(a,b){if(b===void 0){return T2=>subtract(a,T2);}return a-b;}function sort(fn,V2){if(V2===void 0){return W2=>sort(fn,W2);}const X2=V2;return X2.sort(fn);}function sortBy(fn,Z2){if(Z2===void 0){return a3=>sortBy(fn,a3);}const b3=Z2;return b3.sort((a,b)=>{const c3=fn(a),d3=fn(b);return c3<d3?-1:c3>d3?1:0;});}function split(e3,f3){if(f3===void 0){return g3=>split(e3,g3);}return f3.split(e3);}function splitEvery(h3,a){if(a===void 0){return i3=>splitEvery(h3,i3);}h3=h3>1?h3:1;const j3=[];let k3=0;while(k3<a.length){j3.push(a.slice(k3,k3+=h3));}return j3;}function tail(l3){return drop(1,l3);}function take(m3,a){if(a===void 0){return n3=>take(m3,n3);}else if(typeof a==="string"){return a.slice(0,m3);}return baseSlice(a,0,m3);}function takeLast(o3,a){if(a===void 0){return p3=>takeLast(o3,p3);}const q3=a.length;o3=o3>q3?q3:o3;if(typeof a==="string"){return a.slice(q3-o3);}o3=q3-o3;return baseSlice(a,o3,q3);}function toLower(r3){return r3.toLowerCase();}function toUpper(s3){return s3.toUpperCase();}function test(t3,u3){if(u3===void 0){return v3=>test(t3,v3);}return u3.search(t3)===-1?!1:!0;}function trim(w3){return w3.trim();}function type(a){if(a===null){return"Null";}else if(Array.isArray(a)){return"Array";}else if(typeof a==="boolean"){return"Boolean";}else if(typeof a==="number"){return"Number";}else if(typeof a==="string"){return"String";}else if(a===void 0){return"Undefined";}else if(a instanceof RegExp){return"RegExp";}return"Object";}function values(x3){const y3=[];for(key in x3){y3.push(x3[key]);}return y3;}function uniq(z3){let A3=-1;const B3=[];while(++A3<z3.length){const C3=z3[A3];if(!contains(C3,B3)){B3.push(C3);}}return B3;}function update(D3,E3,F3){if(E3===void 0){return(G3,H3)=>update(D3,G3,H3);}else if(F3===void 0){return I3=>update(D3,E3,I3);}const J3=F3;return J3.fill(E3,D3,D3+1);}s.exports.add=add;s.exports.adjust=adjust;s.exports.any=any;s.exports.append=append;s.exports.compose=compose;s.exports.contains=contains;s.exports.drop=drop;s.exports.dropLast=dropLast;s.exports.equals=equals;s.exports.filter=filter;s.exports.find=find;s.exports.findIndex=findIndex;s.exports.flatten=flatten;s.exports.head=head;s.exports.indexOf=indexOf;s.exports.init=init;s.exports.join=join;s.exports.last=last;s.exports.length=length;s.exports.map=map;s.exports.match=match;s.exports.merge=merge;s.exports.omit=omit;s.exports.path=path;s.exports.pick=pick;s.exports.prepend=prepend;s.exports.prop=prop;s.exports.propEq=propEq;s.exports.range=range;s.exports.repeat=repeat;s.exports.replace=replace;s.exports.sort=sort;s.exports.sortBy=sortBy;s.exports.split=split;s.exports.splitEvery=splitEvery;s.exports.subtract=subtract;s.exports.tail=tail;s.exports.take=take;s.exports.takeLast=takeLast;s.exports.test=test;s.exports.toLower=toLower;s.exports.toUpper=toUpper;s.exports.trim=trim;s.exports.type=type;s.exports.uniq=uniq;s.exports.update=update;s.exports.values=values;},function(K3,L3,M3){const R=M3(0);K3.exports={R:R};}]);});