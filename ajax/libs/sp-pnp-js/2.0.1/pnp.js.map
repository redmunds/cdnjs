{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap dce6d66a12d39ac8c093","webpack:///./lib/pnp.js","webpack:///./lib/utils/util.js","webpack:///./lib/utils/decorators.js","webpack:///./lib/utils/logging.js","webpack:///./lib/configuration/pnplibconfig.js","webpack:///./lib/net/fetchclient.js","webpack:///./lib/utils/storage.js","webpack:///./lib/configuration/configuration.js","webpack:///./lib/collections/collections.js","webpack:///./lib/sharepoint/rest.js","webpack:///./lib/sharepoint/search.js","webpack:///./lib/sharepoint/queryable.js","webpack:///./lib/sharepoint/odata.js","webpack:///./lib/net/httpclient.js","webpack:///./lib/net/digestcache.js","webpack:///./lib/utils/exceptions.js","webpack:///./lib/sharepoint/queryablerequest.js","webpack:///./lib/sharepoint/caching.js","webpack:///./lib/sharepoint/searchsuggest.js","webpack:///./lib/sharepoint/site.js","webpack:///./lib/sharepoint/webs.js","webpack:///./lib/sharepoint/queryablesecurable.js","webpack:///./lib/sharepoint/roles.js","webpack:///./lib/sharepoint/sitegroups.js","webpack:///./lib/sharepoint/siteusers.js","webpack:///./lib/sharepoint/lists.js","webpack:///./lib/sharepoint/items.js","webpack:///./lib/sharepoint/folders.js","webpack:///./lib/sharepoint/files.js","webpack:///./lib/sharepoint/webparts.js","webpack:///./lib/sharepoint/contenttypes.js","webpack:///./lib/sharepoint/attachmentfiles.js","webpack:///./lib/sharepoint/views.js","webpack:///./lib/sharepoint/fields.js","webpack:///./lib/sharepoint/types.js","webpack:///./lib/sharepoint/forms.js","webpack:///./lib/sharepoint/subscriptions.js","webpack:///./lib/sharepoint/usercustomactions.js","webpack:///./lib/sharepoint/navigation.js","webpack:///./lib/sharepoint/features.js","webpack:///./lib/sharepoint/userprofiles.js","webpack:///./lib/utils/files.js","webpack:///./lib/types/index.js","webpack:///./lib/sharepoint/index.js","webpack:///./lib/net/sprequestexecutorclient.js","webpack:///./lib/net/nodefetchclientbrowser.js","webpack:///./lib/configuration/providers/index.js","webpack:///./lib/configuration/providers/cachingConfigurationProvider.js","webpack:///./lib/configuration/providers/spListConfigurationProvider.js"],"names":["__export","m","p","exports","hasOwnProperty","util_1","require","storage_1","configuration_1","logging_1","rest_1","pnplibconfig_1","util","Util","sp","Rest","storage","PnPClientStorage","config","Settings","log","Logger","setup","setRuntimeConfig","Def","Object","defineProperty","value","default","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","d","Reflect","decorate","i","decorators_1","context","method","params","apply","name","replace","regex","RegExp","test","location","search","results","exec","decodeURIComponent","getUrlParamByName","isFalse","index","s","substring","date","interval","units","ret","Date","toLocaleString","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","undefined","path","avoidCache","encodeURIComponent","toString","head","document","getElementsByTagName","e","createElement","appendChild","setAttribute","paths","filter","map","join","chars","text","Array","possible","charAt","Math","floor","random","guid","candidateFunction","array","isArray","constructor","source","noOverwrite","check","o","getOwnPropertyNames","v","reduce","t","url","isUrlAbsolute","global","_spPageContextInfo","combinePaths","webAbsoluteUrl","webServerRelativeUrl","candidateUrl","Promise","resolve","RuntimeConfig","baseUrl","indexOf","substr","deprecated","message","propertyKey","descriptor","data","level","LogLevel","Warning","args","listeners","instance","subscribe","listener","clearSubscribers","Verbose","json","JSON","stringify","entry","f","measure","activeLogLevel","_instance","LoggerImpl","count","subscribers","push","slice","subscriber","console","profile","profileEnd","ConsoleListener","msg","format","Info","warn","Error","error","FunctionListener","fetchclient_1","RuntimeConfigImpl","_headers","_defaultCachingStore","_defaultCachingTimeoutSeconds","_globalCacheDisable","_fetchClientFactory","FetchClient","_baseUrl","_spfxContext","headers","globalCacheDisable","defaultCachingStore","defaultCachingTimeoutSeconds","fetchClientFactory","spfxContext","pageContext","web","absoluteUrl","_runtimeConfig","set","options","fetch","PnPClientStorageWrapper","store","defaultTimeoutMinutes","enabled","getItem","persistable","parse","expiration","delete","expire","setItem","createPersistable","removeItem","getter","get","then","put","str","dateAdd","local","localStorage","session","sessionStorage","collections_1","_settings","Dictionary","add","hash","reject","merge","provider","getConfiguration","catch","reason","keys","values","sourceAsDictionary","getKeys","sourceAsHash","val","splice","search_1","searchsuggest_1","site_1","webs_1","userprofiles_1","exceptions_1","query","finalQuery","querytext","SearchSuggest","execute","Querytext","Search","createBatch","addInWebUrl","hostWebUrl","_cdImpl","Site","Web","factory","urlPart","UrlException","UserProfileQuery","queryable_1","formattedBody","SelectProperties","RefinementFilters","SortList","HithighlightedProperties","ReorderingRules","Properties","postBody","request","extend","post","body","SearchResults","QueryableInstance","rawResponse","response","postquery","PrimarySearchResults","formatSearchResults","PrimaryQueryResult","RelevantResults","Table","Rows","RawSearchResults","ElapsedTime","RowCount","TotalRows","TotalRowsIncludingDuplicates","rawResults","tempResults","SearchResult","Cells","rawItem","item","Key","configurable","enumerable","Value","writable","SortDirection","ReorderingRuleMatchType","QueryPropertyValueType","odata_1","queryablerequest_1","Queryable","pathPart","_url","hasBatch","_batch","addBatchDependency","_parentUrl","_query","urlStr","lastIndexOf","q","batch","AlreadyInBatchException","_useCaching","_cachingOptions","toUrl","parentUrl","parent","parser","ODataDefaultParser","getOptions","toRequestContext","pipe","postOptions","patchOptions","deleteOptions","verb","dependencyDispose","toAbsoluteUrl","toUrlAndQuery","batchDependency","cachingOptions","isBatched","isCached","requestAbsoluteUrl","requestId","getGUID","QueryableCollection","selects","expands","orderBy","ascending","asc","skip","top","httpclient_1","exceptions_2","extractOdataId","candidate","__metadata","id","ODataIdException","ODataParserBase","handleError","has","parseFloat","status","parseODataJSON","ok","ProcessHttpClientResponseException","statusText","result","ODataRawParserImpl","ODataValueParserImpl","ODataEntityParserImpl","getEntityUrl","ODataEntityArrayParserImpl","entity","uri","write","ODataRaw","ODataValue","ODataEntity","ODataEntityArray","ODataBatch","_batchId","_requests","_batchDependencies","info","toUpperCase","resolver","promise","executeImpl","client","HttpClient","batchBody","currentChangeSetId","reqInfo","absoluteRequestUrl","batchHeaders","batchOptions","_parseResponse","responses","BatchParseException","chain","header","statusRegExp","lines","split","state","line","trim","parts","parseInt","Response","TextFileParser","BlobFileParser","blob","JSONFileParser","BufferFileParser","isFunction","arrayBuffer","buffer","digestcache_1","_impl","_digestCache","DigestCache","opts","cache","credentials","Headers","mergeHeaders","append","APIUrlException","webUrl","getDigest","digest","fetchRaw","rawHeaders","retry","ctx","delay","attempts","retryCount","setTimeout","getCtxCallback","retryContext","call","temp","Request","forEach","CachedDigest","_httpClient","_digests","cachedDigest","now","GetContextWebInformation","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","clear","defaultLog","NoCacheAvailableException","AuthUrlException","NodeFetchClientUnsupportedException","SPRequestExecutorUndefinedException","MaxCommentLengthException","NotSupportedInBatchException","operation","FunctionExpectedException","caching_1","pipeline","PipelineMethods","logStart","caching","send","logEnd","next","returnResult","requestPipelineMethod","alwaysRun","hasResult","cacheOptions","CachingOptions","setResult","CachingParserWrapper","storeName","_parser","_cacheOptions","mapQueryToQueryString","SearchSuggestResult","personalCount","preQuery","hitHighlighting","capitalize","culture","stemming","includePeople","queryRules","prefixMatch","PeopleNames","suggest","PersonalResults","Queries","usercustomactions_1","features_1","SupportedSchemaVersions","absoluteWebUrl","GetDocumentLibraries","absolutePageUrl","GetWebUrlFromPageUrl","Features","UserCustomActions","queryablesecurable_1","lists_1","fields_1","navigation_1","sitegroups_1","contenttypes_1","folders_1","roles_1","files_1","lists_2","siteusers_1","Webs","webPath","title","description","template","language","inheritPermissions","additionalSettings","props","Description","Language","Title","Url","UseSamePermissionsAsParentSite","WebTemplate","folderRelativeUrl","Folder","fileRelativeUrl","File","listRelativeUrl","List","properties","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","concat","perms","loginName","logonName","includeCrossLanugage","type","select","SiteUser","filename","size","progId","ContentTypes","Lists","Fields","Navigation","SiteUsers","SiteGroups","CurrentUser","Folders","RoleDefinitions","QueryableSecurable","copyRoleAssignments","clearSubscopes","Breaker","copy","b","break","Resetter","reset","RoleAssignments","principalId","roleDefId","a","ra","RoleAssignment","RoleDefinitionBindings","RoleDefinition","roleTypeKind","order","basePermissions","BasePermissions","Name","Order","definition","getById","Id","retDef","getParent","getByName","PrincipalType","group","groupName","SiteGroup","sg","g","retGroup","email","su","LoginName","getByLoginName","user","items_1","views_1","forms_1","subscriptions_1","list","enableContentTypes","getByTitle","update","created","viewId","View","eTag","retList","expand","Recycle","viewXml","RenderListData","itemId","formId","mode","ListData","ReserveListItemId","getAs","ListItemEntityTypeFullName","Items","Views","Forms","Subscriptions","attachmentfiles_1","Item","PagedItemCollectionParser","listItemEntityTypeFullName","doAdd","listItemEntityType","postAs","parentList","removeDependency","getListItemEntityTypeFullName","n","ItemUpdatedParser","action","GetWOPIFrameUrl","formValues","newDocumentUpdate","bNewDocumentUpdate","AttachmentFiles","ContentType","PagedItemCollection","nextUrl","hasNext","items","getPaged","__next","folder","Files","webparts_1","content","shouldOverWrite","file","progress","chunkSize","adder","setContentChunked","fileUrl","templateFileType","comment","uploadId","checkinType","CheckinType","Major","scope","WebPartsPersonalizationScope","Shared","LimitedWebPartManager","moveOperations","MoveOperations","Overwrite","setter","self","fileSize","blockCount","blockNumber","currentPointer","stage","totalBlocks","startUpload","pointer","continueUpload","finishUpload","fragment","fileOffset","ServerRelativeUrl","Versions","versionId","Version","label","TemplateFileType","exporter","webPartId","xml","importer","webPartXml","WebPartDefinitions","WebPartDefinition","deleter","WebPart","ct","contentTypeId","contentType","FieldLinks","fl","FieldLink","AttachmentFile","personalView","view","ViewFields","fieldTitleOrInternalName","fieldInternalName","Types","Field","SchemaXml","field","fieldType","maxLength","FieldTypeKind","MaxLength","formula","dateFormat","outputType","FieldTypes","Text","DateFormat","Formula","OutputType","displayFormat","DateTimeFieldFormatType","DateOnly","calendarType","CalendarType","Gregorian","friendlyDisplayFormat","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","minValue","maxValue","MinimumValue","MaximumValue","currencyLocalId","CurrencyLocaleId","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","UrlFieldFormatType","Hyperlink","show","ControlMode","AddFieldOptions","PageType","Form","subscriptionId","subscription","Subscription","notificationUrl","expirationDate","clientState","patch","uca","UserCustomAction","NavigationNodes","node","NavigationNode","visible","IsVisible","nodeId","previousNodeId","mover","feature","Feature","force","featdefScope","featureId","remover","idGet","remove","DefinitionId","FileUtil","profileLoader","ProfileLoader","maxCount","propertyName","follower","followee","profilePicSource","readBlobAsArrayBuffer","String","fromCharCode","Uint16Array","emails","createPersonalSiteEnqueueBulk","interactiveRequest","createPersonalSite","share","shareAllSocialData","ownerUserProfile","userProfile","readBlobAsText","readBlobAs","reader","FileReader","onload","readAsText","readAsArrayBuffer","sprequestexecutorclient_1","SPRequestExecutorClient","nodefetchclient_1","NodeFetchClient","convertToResponse","spResponse","responseHeaders","h","statusCode","SP","RequestExecutor","addinWebUrl","executor","iterator","entries","done","requestOptions","success","binaryStringRequestBody","executeAsync","cachingConfigurationProvider_1","CachingConfigurationProvider","spListConfigurationProvider_1","SPListConfigurationProvider","wrappedProvider","cacheKey","cacheStore","selectPnPCache","cachedConfig","providerPromise","providedConfig","pnpCache","sourceWeb","sourceListTitle","lists","listTitle","configuration"],"mappings":"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","file":"pnp.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"$pnp\"] = factory();\n\telse\n\t\troot[\"$pnp\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dce6d66a12d39ac8c093","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nconst util_1 = require(\"./utils/util\");\nconst storage_1 = require(\"./utils/storage\");\nconst configuration_1 = require(\"./configuration/configuration\");\nconst logging_1 = require(\"./utils/logging\");\nconst rest_1 = require(\"./sharepoint/rest\");\nconst pnplibconfig_1 = require(\"./configuration/pnplibconfig\");\n/**\n * Root class of the Patterns and Practices namespace, provides an entry point to the library\n */\n/**\n * Utility methods\n */\nexports.util = util_1.Util;\n/**\n * Provides access to the REST interface\n */\nexports.sp = new rest_1.Rest();\n/**\n * Provides access to local and session storage\n */\nexports.storage = new storage_1.PnPClientStorage();\n/**\n * Global configuration instance to which providers can be added\n */\nexports.config = new configuration_1.Settings();\n/**\n * Global logging instance to which subscribers can be registered and messages written\n */\nexports.log = logging_1.Logger;\n/**\n * Allows for the configuration of the library\n */\nexports.setup = pnplibconfig_1.setRuntimeConfig;\n/**\n * Expose a subset of classes from the library for public consumption\n */\n__export(require(\"./types/index\"));\n// creating this class instead of directly assigning to default fixes issue #116\nlet Def = {\n    /**\n     * Global configuration instance to which providers can be added\n     */\n    config: exports.config,\n    /**\n     * Global logging instance to which subscribers can be registered and messages written\n     */\n    log: exports.log,\n    /**\n     * Provides access to local and session storage\n     */\n    setup: exports.setup,\n    /**\n     * Provides access to the REST interface\n     */\n    sp: exports.sp,\n    /**\n     * Provides access to local and session storage\n     */\n    storage: exports.storage,\n    /**\n     * Utility methods\n     */\n    util: exports.util,\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Enables use of the import pnp from syntax\n */\nexports.default = Def;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/pnp.js","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst decorators_1 = require(\"./decorators\");\nconst pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nclass Util {\n    /**\n     * Gets a callback function which will maintain context across async calls.\n     * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\n     *\n     * @param context The object that will be the 'this' value in the callback\n     * @param method The method to which we will apply the context and parameters\n     * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\n     */\n    static getCtxCallback(context, method, ...params) {\n        return function () {\n            method.apply(context, params);\n        };\n    }\n    /**\n     * Tests if a url param exists\n     *\n     * @param name The name of the url paramter to check\n     */\n    static urlParamExists(name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        let regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        return regex.test(location.search);\n    }\n    /**\n     * Gets a url param value by name\n     *\n     * @param name The name of the paramter for which we want the value\n     */\n    static getUrlParamByName(name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        let regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        let results = regex.exec(location.search);\n        return results == null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n    }\n    /**\n     * Gets a url param by name and attempts to parse a bool value\n     *\n     * @param name The name of the paramter for which we want the boolean value\n     */\n    static getUrlParamBoolByName(name) {\n        let p = this.getUrlParamByName(name);\n        let isFalse = (p === \"\" || /false|0/i.test(p));\n        return !isFalse;\n    }\n    /**\n     * Inserts the string s into the string target as the index specified by index\n     *\n     * @param target The string into which we will insert s\n     * @param index The location in target to insert s (zero based)\n     * @param s The string to insert into target at position index\n     */\n    static stringInsert(target, index, s) {\n        if (index > 0) {\n            return target.substring(0, index) + s + target.substring(index, target.length);\n        }\n        return s + target;\n    }\n    /**\n     * Adds a value to a date\n     *\n     * @param date The date to which we will add units, done in local time\n     * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\n     * @param units The amount to add to date of the given interval\n     *\n     * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\n     */\n    static dateAdd(date, interval, units) {\n        let ret = new Date(date.toLocaleString()); // don't change original date\n        switch (interval.toLowerCase()) {\n            case \"year\":\n                ret.setFullYear(ret.getFullYear() + units);\n                break;\n            case \"quarter\":\n                ret.setMonth(ret.getMonth() + 3 * units);\n                break;\n            case \"month\":\n                ret.setMonth(ret.getMonth() + units);\n                break;\n            case \"week\":\n                ret.setDate(ret.getDate() + 7 * units);\n                break;\n            case \"day\":\n                ret.setDate(ret.getDate() + units);\n                break;\n            case \"hour\":\n                ret.setTime(ret.getTime() + units * 3600000);\n                break;\n            case \"minute\":\n                ret.setTime(ret.getTime() + units * 60000);\n                break;\n            case \"second\":\n                ret.setTime(ret.getTime() + units * 1000);\n                break;\n            default:\n                ret = undefined;\n                break;\n        }\n        return ret;\n    }\n    /**\n     * Loads a stylesheet into the current page\n     *\n     * @param path The url to the stylesheet\n     * @param avoidCache If true a value will be appended as a query string to avoid browser caching issues\n     */\n    static loadStylesheet(path, avoidCache) {\n        if (avoidCache) {\n            path += \"?\" + encodeURIComponent((new Date()).getTime().toString());\n        }\n        let head = document.getElementsByTagName(\"head\");\n        if (head.length > 0) {\n            let e = document.createElement(\"link\");\n            head[0].appendChild(e);\n            e.setAttribute(\"type\", \"text/css\");\n            e.setAttribute(\"rel\", \"stylesheet\");\n            e.setAttribute(\"href\", path);\n        }\n    }\n    /**\n     * Combines an arbitrary set of paths ensuring that the slashes are normalized\n     *\n     * @param paths 0 to n path parts to combine\n     */\n    static combinePaths(...paths) {\n        return paths\n            .filter(path => typeof path !== \"undefined\" && path !== null)\n            .map(path => path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"))\n            .join(\"/\")\n            .replace(/\\\\/g, \"/\");\n    }\n    /**\n     * Gets a random string of chars length\n     *\n     * @param chars The length of the random string to generate\n     */\n    static getRandomString(chars) {\n        let text = new Array(chars);\n        let possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        for (let i = 0; i < chars; i++) {\n            text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text.join(\"\");\n    }\n    /**\n     * Gets a random GUID value\n     *\n     * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n     */\n    /* tslint:disable no-bitwise */\n    static getGUID() {\n        let d = new Date().getTime();\n        let guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n            let r = (d + Math.random() * 16) % 16 | 0;\n            d = Math.floor(d / 16);\n            return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        return guid;\n    }\n    /* tslint:enable */\n    /**\n     * Determines if a given value is a function\n     *\n     * @param candidateFunction The thing to test for being a function\n     */\n    static isFunction(candidateFunction) {\n        return typeof candidateFunction === \"function\";\n    }\n    /**\n     * @returns whether the provided parameter is a JavaScript Array or not.\n    */\n    static isArray(array) {\n        if (Array.isArray) {\n            return Array.isArray(array);\n        }\n        return array && typeof array.length === \"number\" && array.constructor === Array;\n    }\n    /**\n     * Determines if a string is null or empty or undefined\n     *\n     * @param s The string to test\n     */\n    static stringIsNullOrEmpty(s) {\n        return typeof s === \"undefined\" || s === null || s === \"\";\n    }\n    /**\n     * Provides functionality to extend the given object by doing a shallow copy\n     *\n     * @param target The object to which properties will be copied\n     * @param source The source object from which properties will be copied\n     * @param noOverwrite If true existing properties on the target are not overwritten from the source\n     *\n     */\n    static extend(target, source, noOverwrite = false) {\n        if (source === null || typeof source === \"undefined\") {\n            return target;\n        }\n        // ensure we don't overwrite things we don't want overwritten\n        let check = noOverwrite ? (o, i) => !(i in o) : () => true;\n        return Object.getOwnPropertyNames(source)\n            .filter((v) => check(target, v))\n            .reduce((t, v) => {\n            t[v] = source[v];\n            return t;\n        }, target);\n    }\n    /**\n     * Determines if a given url is absolute\n     *\n     * @param url The url to check to see if it is absolute\n     */\n    static isUrlAbsolute(url) {\n        return /^https?:\\/\\/|^\\/\\//i.test(url);\n    }\n    /**\n     * Attempts to make the supplied relative url absolute based on the _spPageContextInfo object, if available\n     *\n     * @param url The relative url to make absolute\n     */\n    static makeUrlAbsolute(url) {\n        if (Util.isUrlAbsolute(url)) {\n            return url;\n        }\n        if (typeof global._spPageContextInfo !== \"undefined\") {\n            if (global._spPageContextInfo.hasOwnProperty(\"webAbsoluteUrl\")) {\n                return Util.combinePaths(global._spPageContextInfo.webAbsoluteUrl, url);\n            }\n            else if (global._spPageContextInfo.hasOwnProperty(\"webServerRelativeUrl\")) {\n                return Util.combinePaths(global._spPageContextInfo.webServerRelativeUrl, url);\n            }\n        }\n        else {\n            return url;\n        }\n    }\n    /**\n     * Ensures that a given url is absolute for the current web based on context\n     *\n     * @param candidateUrl The url to make absolute\n     *\n     */\n    static toAbsoluteUrl(candidateUrl) {\n        return new Promise((resolve) => {\n            if (Util.isUrlAbsolute(candidateUrl)) {\n                // if we are already absolute, then just return the url\n                return resolve(candidateUrl);\n            }\n            if (pnplibconfig_1.RuntimeConfig.baseUrl !== null) {\n                // base url specified either with baseUrl of spfxContext config property\n                return resolve(Util.combinePaths(pnplibconfig_1.RuntimeConfig.baseUrl, candidateUrl));\n            }\n            if (typeof global._spPageContextInfo !== \"undefined\") {\n                // operating in classic pages\n                if (global._spPageContextInfo.hasOwnProperty(\"webAbsoluteUrl\")) {\n                    return resolve(Util.combinePaths(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\n                }\n                else if (global._spPageContextInfo.hasOwnProperty(\"webServerRelativeUrl\")) {\n                    return resolve(Util.combinePaths(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\n                }\n            }\n            // does window.location exist and have _layouts in it?\n            if (typeof global.location !== \"undefined\") {\n                let index = global.location.toString().toLowerCase().indexOf(\"/_layouts/\");\n                if (index > 0) {\n                    // we are likely in the workbench in /_layouts/\n                    return resolve(Util.combinePaths(global.location.toString().substr(0, index), candidateUrl));\n                }\n            }\n            return resolve(candidateUrl);\n        });\n    }\n}\n__decorate([\n    decorators_1.deprecated(\"The Util.makeUrlAbsolute method is deprecated and will be removed from future releases. Use Util.toAbsoluteUrl instead\")\n], Util, \"makeUrlAbsolute\", null);\nexports.Util = Util;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/util.js","\"use strict\";\nconst logging_1 = require(\"./logging\");\nfunction deprecated(message) {\n    return function (target, propertyKey, descriptor) {\n        let method = descriptor.value;\n        descriptor.value = function (...args) {\n            logging_1.Logger.log({\n                data: {\n                    descriptor: descriptor,\n                    propertyKey: propertyKey,\n                    target: target,\n                },\n                level: logging_1.LogLevel.Warning,\n                message: message,\n            });\n            return method.apply(this, args);\n        };\n    };\n}\nexports.deprecated = deprecated;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/decorators.js","\"use strict\";\n/**\n * A set of logging levels\n *\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\n/**\n * Class used to subscribe ILogListener and log messages throughout an application\n *\n */\nclass Logger {\n    static get activeLogLevel() {\n        return Logger.instance.activeLogLevel;\n    }\n    static set activeLogLevel(value) {\n        Logger.instance.activeLogLevel = value;\n    }\n    static get instance() {\n        if (typeof Logger._instance === \"undefined\" || Logger._instance === null) {\n            Logger._instance = new LoggerImpl();\n        }\n        return Logger._instance;\n    }\n    /**\n     * Adds ILogListener instances to the set of subscribed listeners\n     *\n     * @param listeners One or more listeners to subscribe to this log\n     */\n    static subscribe(...listeners) {\n        listeners.map(listener => Logger.instance.subscribe(listener));\n    }\n    /**\n     * Clears the subscribers collection, returning the collection before modifiction\n     */\n    static clearSubscribers() {\n        return Logger.instance.clearSubscribers();\n    }\n    /**\n     * Gets the current subscriber count\n     */\n    static get count() {\n        return Logger.instance.count;\n    }\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param message The message to write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    static write(message, level = LogLevel.Verbose) {\n        Logger.instance.log({ level: level, message: message });\n    }\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param json The json object to stringify and write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    static writeJSON(json, level = LogLevel.Verbose) {\n        Logger.instance.log({ level: level, message: JSON.stringify(json) });\n    }\n    /**\n     * Logs the supplied entry to the subscribed listeners\n     *\n     * @param entry The message to log\n     */\n    static log(entry) {\n        Logger.instance.log(entry);\n    }\n    /**\n     * Logs performance tracking data for the the execution duration of the supplied function using console.profile\n     *\n     * @param name The name of this profile boundary\n     * @param f The function to execute and track within this performance boundary\n     */\n    static measure(name, f) {\n        return Logger.instance.measure(name, f);\n    }\n}\nexports.Logger = Logger;\nclass LoggerImpl {\n    constructor(activeLogLevel = LogLevel.Warning, subscribers = []) {\n        this.activeLogLevel = activeLogLevel;\n        this.subscribers = subscribers;\n    }\n    subscribe(listener) {\n        this.subscribers.push(listener);\n    }\n    clearSubscribers() {\n        let s = this.subscribers.slice(0);\n        this.subscribers.length = 0;\n        return s;\n    }\n    get count() {\n        return this.subscribers.length;\n    }\n    write(message, level = LogLevel.Verbose) {\n        this.log({ level: level, message: message });\n    }\n    log(entry) {\n        if (typeof entry === \"undefined\" || entry.level < this.activeLogLevel) {\n            return;\n        }\n        this.subscribers.map(subscriber => subscriber.log(entry));\n    }\n    measure(name, f) {\n        console.profile(name);\n        try {\n            return f();\n        }\n        finally {\n            console.profileEnd();\n        }\n    }\n}\n/**\n * Implementation of ILogListener which logs to the browser console\n *\n */\nclass ConsoleListener {\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    log(entry) {\n        let msg = this.format(entry);\n        switch (entry.level) {\n            case LogLevel.Verbose:\n            case LogLevel.Info:\n                console.log(msg);\n                break;\n            case LogLevel.Warning:\n                console.warn(msg);\n                break;\n            case LogLevel.Error:\n                console.error(msg);\n                break;\n        }\n    }\n    /**\n     * Formats the message\n     *\n     * @param entry The information to format into a string\n     */\n    format(entry) {\n        return \"Message: \" + entry.message + \" Data: \" + JSON.stringify(entry.data);\n    }\n}\nexports.ConsoleListener = ConsoleListener;\n/**\n * Implementation of ILogListener which logs to the supplied function\n *\n */\nclass FunctionListener {\n    /**\n     * Creates a new instance of the FunctionListener class\n     *\n     * @constructor\n     * @param  method The method to which any logging data will be passed\n     */\n    constructor(method) {\n        this.method = method;\n    }\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    log(entry) {\n        this.method(entry);\n    }\n}\nexports.FunctionListener = FunctionListener;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/logging.js","\"use strict\";\nconst fetchclient_1 = require(\"../net/fetchclient\");\nclass RuntimeConfigImpl {\n    constructor() {\n        // these are our default values for the library\n        this._headers = null;\n        this._defaultCachingStore = \"session\";\n        this._defaultCachingTimeoutSeconds = 30;\n        this._globalCacheDisable = false;\n        this._fetchClientFactory = () => new fetchclient_1.FetchClient();\n        this._baseUrl = null;\n        this._spfxContext = null;\n    }\n    set(config) {\n        if (config.hasOwnProperty(\"headers\")) {\n            this._headers = config.headers;\n        }\n        if (config.hasOwnProperty(\"globalCacheDisable\")) {\n            this._globalCacheDisable = config.globalCacheDisable;\n        }\n        if (config.hasOwnProperty(\"defaultCachingStore\")) {\n            this._defaultCachingStore = config.defaultCachingStore;\n        }\n        if (config.hasOwnProperty(\"defaultCachingTimeoutSeconds\")) {\n            this._defaultCachingTimeoutSeconds = config.defaultCachingTimeoutSeconds;\n        }\n        if (config.hasOwnProperty(\"fetchClientFactory\")) {\n            this._fetchClientFactory = config.fetchClientFactory;\n        }\n        if (config.hasOwnProperty(\"baseUrl\")) {\n            this._baseUrl = config.baseUrl;\n        }\n        if (config.hasOwnProperty(\"spFXContext\")) {\n            this._spfxContext = config.spfxContext;\n        }\n    }\n    get headers() {\n        return this._headers;\n    }\n    get defaultCachingStore() {\n        return this._defaultCachingStore;\n    }\n    get defaultCachingTimeoutSeconds() {\n        return this._defaultCachingTimeoutSeconds;\n    }\n    get globalCacheDisable() {\n        return this._globalCacheDisable;\n    }\n    get fetchClientFactory() {\n        return this._fetchClientFactory;\n    }\n    get baseUrl() {\n        if (this._baseUrl !== null) {\n            return this._baseUrl;\n        }\n        else if (this._spfxContext !== null) {\n            return this._spfxContext.pageContext.web.absoluteUrl;\n        }\n        return null;\n    }\n}\nexports.RuntimeConfigImpl = RuntimeConfigImpl;\nlet _runtimeConfig = new RuntimeConfigImpl();\nexports.RuntimeConfig = _runtimeConfig;\nfunction setRuntimeConfig(config) {\n    _runtimeConfig.set(config);\n}\nexports.setRuntimeConfig = setRuntimeConfig;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/configuration/pnplibconfig.js","\"use strict\";\n/**\n * Makes requests using the fetch API\n */\nclass FetchClient {\n    fetch(url, options) {\n        return global.fetch(url, options);\n    }\n}\nexports.FetchClient = FetchClient;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/net/fetchclient.js","\"use strict\";\nconst util_1 = require(\"./util\");\n/**\n * A wrapper class to provide a consistent interface to browser based storage\n *\n */\nclass PnPClientStorageWrapper {\n    /**\n     * Creates a new instance of the PnPClientStorageWrapper class\n     *\n     * @constructor\n     */\n    constructor(store, defaultTimeoutMinutes) {\n        this.store = store;\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\n        this.defaultTimeoutMinutes = (defaultTimeoutMinutes === void 0) ? 5 : defaultTimeoutMinutes;\n        this.enabled = this.test();\n    }\n    /**\n     * Get a value from storage, or null if that value does not exist\n     *\n     * @param key The key whose value we want to retrieve\n     */\n    get(key) {\n        if (!this.enabled) {\n            return null;\n        }\n        let o = this.store.getItem(key);\n        if (o == null) {\n            return null;\n        }\n        let persistable = JSON.parse(o);\n        if (new Date(persistable.expiration) <= new Date()) {\n            this.delete(key);\n            return null;\n        }\n        else {\n            return persistable.value;\n        }\n    }\n    /**\n     * Adds a value to the underlying storage\n     *\n     * @param key The key to use when storing the provided value\n     * @param o The value to store\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    put(key, o, expire) {\n        if (this.enabled) {\n            this.store.setItem(key, this.createPersistable(o, expire));\n        }\n    }\n    /**\n     * Deletes a value from the underlying storage\n     *\n     * @param key The key of the pair we want to remove from storage\n     */\n    delete(key) {\n        if (this.enabled) {\n            this.store.removeItem(key);\n        }\n    }\n    /**\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\n     *\n     * @param key The key to use when storing the provided value\n     * @param getter A function which will upon execution provide the desired value\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    getOrPut(key, getter, expire) {\n        if (!this.enabled) {\n            return getter();\n        }\n        return new Promise((resolve) => {\n            let o = this.get(key);\n            if (o == null) {\n                getter().then((d) => {\n                    this.put(key, d, expire);\n                    resolve(d);\n                });\n            }\n            else {\n                resolve(o);\n            }\n        });\n    }\n    /**\n     * Used to determine if the wrapped storage is available currently\n     */\n    test() {\n        let str = \"test\";\n        try {\n            this.store.setItem(str, str);\n            this.store.removeItem(str);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Creates the persistable to store\n     */\n    createPersistable(o, expire) {\n        if (typeof expire === \"undefined\") {\n            expire = util_1.Util.dateAdd(new Date(), \"minute\", this.defaultTimeoutMinutes);\n        }\n        return JSON.stringify({ expiration: expire, value: o });\n    }\n}\nexports.PnPClientStorageWrapper = PnPClientStorageWrapper;\n/**\n * A class that will establish wrappers for both local and session storage\n */\nclass PnPClientStorage {\n    /**\n     * Creates a new instance of the PnPClientStorage class\n     *\n     * @constructor\n     */\n    constructor() {\n        this.local = typeof localStorage !== \"undefined\" ? new PnPClientStorageWrapper(localStorage) : null;\n        this.session = typeof sessionStorage !== \"undefined\" ? new PnPClientStorageWrapper(sessionStorage) : null;\n    }\n}\nexports.PnPClientStorage = PnPClientStorage;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/storage.js","\"use strict\";\nconst collections_1 = require(\"../collections/collections\");\n/**\n * Class used to manage the current application settings\n *\n */\nclass Settings {\n    /**\n     * Creates a new instance of the settings class\n     *\n     * @constructor\n     */\n    constructor() {\n        this._settings = new collections_1.Dictionary();\n    }\n    /**\n     * Adds a new single setting, or overwrites a previous setting with the same key\n     *\n     * @param {string} key The key used to store this setting\n     * @param {string} value The setting value to store\n     */\n    add(key, value) {\n        this._settings.add(key, value);\n    }\n    /**\n     * Adds a JSON value to the collection as a string, you must use getJSON to rehydrate the object when read\n     *\n     * @param {string} key The key used to store this setting\n     * @param {any} value The setting value to store\n     */\n    addJSON(key, value) {\n        this._settings.add(key, JSON.stringify(value));\n    }\n    /**\n     * Applies the supplied hash to the setting collection overwriting any existing value, or created new values\n     *\n     * @param {TypedHash<any>} hash The set of values to add\n     */\n    apply(hash) {\n        return new Promise((resolve, reject) => {\n            try {\n                this._settings.merge(hash);\n                resolve();\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    }\n    /**\n     * Loads configuration settings into the collection from the supplied provider and returns a Promise\n     *\n     * @param {IConfigurationProvider} provider The provider from which we will load the settings\n     */\n    load(provider) {\n        return new Promise((resolve, reject) => {\n            provider.getConfiguration().then((value) => {\n                this._settings.merge(value);\n                resolve();\n            }).catch((reason) => {\n                reject(reason);\n            });\n        });\n    }\n    /**\n     * Gets a value from the configuration\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {string} string value from the configuration\n     */\n    get(key) {\n        return this._settings.get(key);\n    }\n    /**\n     * Gets a JSON value, rehydrating the stored string to the original object\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {any} object from the configuration\n     */\n    getJSON(key) {\n        let o = this.get(key);\n        if (typeof o === \"undefined\" || o === null) {\n            return o;\n        }\n        return JSON.parse(o);\n    }\n}\nexports.Settings = Settings;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/configuration/configuration.js","\"use strict\";\n/**\n * Generic dictionary\n */\nclass Dictionary {\n    /**\n     * Creates a new instance of the Dictionary<T> class\n     *\n     * @constructor\n     */\n    constructor(keys = [], values = []) {\n        this.keys = keys;\n        this.values = values;\n    }\n    /**\n     * Gets a value from the collection using the specified key\n     *\n     * @param key The key whose value we want to return, returns null if the key does not exist\n     */\n    get(key) {\n        let index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        return this.values[index];\n    }\n    /**\n     * Adds the supplied key and value to the dictionary\n     *\n     * @param key The key to add\n     * @param o The value to add\n     */\n    add(key, o) {\n        let index = this.keys.indexOf(key);\n        if (index > -1) {\n            this.values[index] = o;\n        }\n        else {\n            this.keys.push(key);\n            this.values.push(o);\n        }\n    }\n    /**\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\n     */\n    merge(source) {\n        if (\"getKeys\" in source) {\n            let sourceAsDictionary = source;\n            sourceAsDictionary.getKeys().map(key => {\n                this.add(key, sourceAsDictionary.get(key));\n            });\n        }\n        else {\n            let sourceAsHash = source;\n            for (let key in sourceAsHash) {\n                if (sourceAsHash.hasOwnProperty(key)) {\n                    this.add(key, sourceAsHash[key]);\n                }\n            }\n        }\n    }\n    /**\n     * Removes a value from the dictionary\n     *\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\n     */\n    remove(key) {\n        let index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        let val = this.values[index];\n        this.keys.splice(index, 1);\n        this.values.splice(index, 1);\n        return val;\n    }\n    /**\n     * Returns all the keys currently in the dictionary as an array\n     */\n    getKeys() {\n        return this.keys;\n    }\n    /**\n     * Returns all the values currently in the dictionary as an array\n     */\n    getValues() {\n        return this.values;\n    }\n    /**\n     * Clears the current dictionary\n     */\n    clear() {\n        this.keys = [];\n        this.values = [];\n    }\n    /**\n     * Gets a count of the items currently in the dictionary\n     */\n    count() {\n        return this.keys.length;\n    }\n}\nexports.Dictionary = Dictionary;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/collections/collections.js","\"use strict\";\nconst search_1 = require(\"./search\");\nconst searchsuggest_1 = require(\"./searchsuggest\");\nconst site_1 = require(\"./site\");\nconst webs_1 = require(\"./webs\");\nconst util_1 = require(\"../utils/util\");\nconst userprofiles_1 = require(\"./userprofiles\");\nconst exceptions_1 = require(\"../utils/exceptions\");\n/**\n * Root of the SharePoint REST module\n */\nclass Rest {\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    searchSuggest(query) {\n        let finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { querytext: query };\n        }\n        else {\n            finalQuery = query;\n        }\n        return new searchsuggest_1.SearchSuggest(\"\").execute(finalQuery);\n    }\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    search(query) {\n        let finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { Querytext: query };\n        }\n        else {\n            finalQuery = query;\n        }\n        return new search_1.Search(\"\").execute(finalQuery);\n    }\n    /**\n     * Begins a site collection scoped REST request\n     *\n     */\n    get site() {\n        return new site_1.Site(\"\");\n    }\n    /**\n     * Begins a web scoped REST request\n     *\n     */\n    get web() {\n        return new webs_1.Web(\"\");\n    }\n    /**\n     * Access to user profile methods\n     *\n     */\n    get profiles() {\n        return new userprofiles_1.UserProfileQuery(\"\");\n    }\n    /**\n     * Creates a new batch object for use with the Queryable.addToBatch method\n     *\n     */\n    createBatch() {\n        return this.web.createBatch();\n    }\n    /**\n     * Begins a cross-domain, host site scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    crossDomainSite(addInWebUrl, hostWebUrl) {\n        return this._cdImpl(site_1.Site, addInWebUrl, hostWebUrl, \"site\");\n    }\n    /**\n     * Begins a cross-domain, host web scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    crossDomainWeb(addInWebUrl, hostWebUrl) {\n        return this._cdImpl(webs_1.Web, addInWebUrl, hostWebUrl, \"web\");\n    }\n    /**\n     * Implements the creation of cross domain REST urls\n     *\n     * @param factory The constructor of the object to create Site | Web\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     * @param urlPart String part to append to the url \"site\" | \"web\"\n     */\n    _cdImpl(factory, addInWebUrl, hostWebUrl, urlPart) {\n        if (!util_1.Util.isUrlAbsolute(addInWebUrl)) {\n            throw new exceptions_1.UrlException(\"The addInWebUrl parameter must be an absolute url.\");\n        }\n        if (!util_1.Util.isUrlAbsolute(hostWebUrl)) {\n            throw new exceptions_1.UrlException(\"The hostWebUrl parameter must be an absolute url.\");\n        }\n        let url = util_1.Util.combinePaths(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\n        let instance = new factory(url, urlPart);\n        instance.query.add(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\n        return instance;\n    }\n}\nexports.Rest = Rest;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/rest.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst util_1 = require(\"../utils/util\");\n/**\n * Describes the search API\n *\n */\nclass Search extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the Search class\n     *\n     * @param baseUrl The url for the search context\n     * @param query The SearchQuery object to execute\n     */\n    constructor(baseUrl, path = \"_api/search/postquery\") {\n        super(baseUrl, path);\n    }\n    /**\n     * .......\n     * @returns Promise\n     */\n    execute(query) {\n        let formattedBody;\n        formattedBody = query;\n        if (formattedBody.SelectProperties) {\n            formattedBody.SelectProperties = { results: query.SelectProperties };\n        }\n        if (formattedBody.RefinementFilters) {\n            formattedBody.RefinementFilters = { results: query.RefinementFilters };\n        }\n        if (formattedBody.SortList) {\n            formattedBody.SortList = { results: query.SortList };\n        }\n        if (formattedBody.HithighlightedProperties) {\n            formattedBody.HithighlightedProperties = { results: query.HithighlightedProperties };\n        }\n        if (formattedBody.ReorderingRules) {\n            formattedBody.ReorderingRules = { results: query.ReorderingRules };\n        }\n        if (formattedBody.Properties) {\n            formattedBody.Properties = { results: query.Properties };\n        }\n        let postBody = JSON.stringify({\n            request: util_1.Util.extend({\n                \"__metadata\": { \"type\": \"Microsoft.Office.Server.Search.REST.SearchRequest\" },\n            }, formattedBody),\n        });\n        return this.post({ body: postBody }).then((data) => new SearchResults(data));\n    }\n}\nexports.Search = Search;\n/**\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\n */\nclass SearchResults {\n    /**\n     * Creates a new instance of the SearchResult class\n     *\n     */\n    constructor(rawResponse) {\n        let response = rawResponse.postquery ? rawResponse.postquery : rawResponse;\n        this.PrimarySearchResults = this.formatSearchResults(response.PrimaryQueryResult.RelevantResults.Table.Rows);\n        this.RawSearchResults = response;\n        this.ElapsedTime = response.ElapsedTime;\n        this.RowCount = response.PrimaryQueryResult.RelevantResults.RowCount;\n        this.TotalRows = response.PrimaryQueryResult.RelevantResults.TotalRows;\n        this.TotalRowsIncludingDuplicates = response.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\n    }\n    /**\n     * Formats a search results array\n     *\n     * @param rawResults The array to process\n     */\n    formatSearchResults(rawResults) {\n        let results = new Array(), tempResults = rawResults.results ? rawResults.results : rawResults;\n        for (let i of tempResults) {\n            results.push(new SearchResult(i.Cells));\n        }\n        return results;\n    }\n}\nexports.SearchResults = SearchResults;\n/**\n * Describes the SearchResult class\n */\nclass SearchResult {\n    /**\n     * Creates a new instance of the SearchResult class\n     *\n     */\n    constructor(rawItem) {\n        let item = rawItem.results ? rawItem.results : rawItem;\n        for (let i of item) {\n            Object.defineProperty(this, i.Key, {\n                configurable: false,\n                enumerable: false,\n                value: i.Value,\n                writable: false,\n            });\n        }\n    }\n}\nexports.SearchResult = SearchResult;\n/**\n * defines the SortDirection enum\n */\nvar SortDirection;\n(function (SortDirection) {\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\n})(SortDirection = exports.SortDirection || (exports.SortDirection = {}));\n/**\n * defines the ReorderingRuleMatchType  enum\n */\nvar ReorderingRuleMatchType;\n(function (ReorderingRuleMatchType) {\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\n})(ReorderingRuleMatchType = exports.ReorderingRuleMatchType || (exports.ReorderingRuleMatchType = {}));\n/**\n * Specifies the type value for the property\n */\nvar QueryPropertyValueType;\n(function (QueryPropertyValueType) {\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32TYpe\"] = 2] = \"Int32TYpe\";\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\n})(QueryPropertyValueType = exports.QueryPropertyValueType || (exports.QueryPropertyValueType = {}));\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/search.js","\"use strict\";\nconst util_1 = require(\"../utils/util\");\nconst collections_1 = require(\"../collections/collections\");\nconst odata_1 = require(\"./odata\");\nconst pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nconst exceptions_1 = require(\"../utils/exceptions\");\nconst queryablerequest_1 = require(\"./queryablerequest\");\n/**\n * Queryable Base Class\n *\n */\nclass Queryable {\n    /**\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\n     *\n     * @param pathPart The string to concatonate to the url\n     */\n    concat(pathPart) {\n        this._url += pathPart;\n    }\n    /**\n     * Appends the given string and normalizes \"/\" chars\n     *\n     * @param pathPart The string to append\n     */\n    append(pathPart) {\n        this._url = util_1.Util.combinePaths(this._url, pathPart);\n    }\n    /**\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\n     */\n    addBatchDependency() {\n        if (this.hasBatch) {\n            return this._batch.addBatchDependency();\n        }\n        return () => null;\n    }\n    /**\n     * Indicates if the current query has a batch associated\n     *\n     */\n    get hasBatch() {\n        return this._batch !== null;\n    }\n    /**\n     * Gets the parent url used when creating this instance\n     *\n     */\n    get parentUrl() {\n        return this._parentUrl;\n    }\n    /**\n     * Provides access to the query builder for this url\n     *\n     */\n    get query() {\n        return this._query;\n    }\n    /**\n     * Creates a new instance of the Queryable class\n     *\n     * @constructor\n     * @param baseUrl A string or Queryable that should form the base part of the url\n     *\n     */\n    constructor(baseUrl, path) {\n        this._query = new collections_1.Dictionary();\n        this._batch = null;\n        if (typeof baseUrl === \"string\") {\n            // we need to do some extra parsing to get the parent url correct if we are\n            // being created from just a string.\n            let urlStr = baseUrl;\n            if (util_1.Util.isUrlAbsolute(urlStr) || urlStr.lastIndexOf(\"/\") < 0) {\n                this._parentUrl = urlStr;\n                this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n            else if (urlStr.lastIndexOf(\"/\") > urlStr.lastIndexOf(\"(\")) {\n                // .../items(19)/fields\n                let index = urlStr.lastIndexOf(\"/\");\n                this._parentUrl = urlStr.slice(0, index);\n                path = util_1.Util.combinePaths(urlStr.slice(index), path);\n                this._url = util_1.Util.combinePaths(this._parentUrl, path);\n            }\n            else {\n                // .../items(19)\n                let index = urlStr.lastIndexOf(\"(\");\n                this._parentUrl = urlStr.slice(0, index);\n                this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n        }\n        else {\n            let q = baseUrl;\n            this._parentUrl = q._url;\n            let target = q._query.get(\"@target\");\n            if (target !== null) {\n                this._query.add(\"@target\", target);\n            }\n            this._url = util_1.Util.combinePaths(this._parentUrl, path);\n        }\n    }\n    /**\n     * Adds this query to the supplied batch\n     *\n     * @example\n     * ```\n     *\n     * let b = pnp.sp.createBatch();\n     * pnp.sp.web.inBatch(b).get().then(...);\n     * b.execute().then(...)\n     * ```\n     */\n    inBatch(batch) {\n        if (this._batch !== null) {\n            throw new exceptions_1.AlreadyInBatchException();\n        }\n        this._batch = batch;\n        return this;\n    }\n    /**\n     * Enables caching for this request\n     *\n     * @param options Defines the options used when caching this request\n     */\n    usingCaching(options) {\n        if (!pnplibconfig_1.RuntimeConfig.globalCacheDisable) {\n            this._useCaching = true;\n            this._cachingOptions = options;\n        }\n        return this;\n    }\n    /**\n     * Gets the currentl url, made absolute based on the availability of the _spPageContextInfo object\n     *\n     */\n    toUrl() {\n        return this._url;\n    }\n    /**\n     * Gets the full url with query information\n     *\n     */\n    toUrlAndQuery() {\n        let url = this.toUrl();\n        if (this._query.count() > 0) {\n            url += `?${this._query.getKeys().map(key => `${key}=${this._query.get(key)}`).join(\"&\")}`;\n        }\n        return url;\n    }\n    /**\n     * Gets a parent for this instance as specified\n     *\n     * @param factory The contructor for the class to create\n     */\n    getParent(factory, baseUrl = this.parentUrl, path) {\n        let parent = new factory(baseUrl, path);\n        let target = this.query.get(\"@target\");\n        if (target !== null) {\n            parent.query.add(\"@target\", target);\n        }\n        return parent;\n    }\n    /**\n     * Executes the currently built request\n     *\n     * @param parser Allows you to specify a parser to handle the result\n     * @param getOptions The options used for this request\n     */\n    get(parser = new odata_1.ODataDefaultParser(), getOptions = {}) {\n        return this.toRequestContext(\"GET\", getOptions, parser).then(context => queryablerequest_1.pipe(context));\n    }\n    getAs(parser = new odata_1.ODataDefaultParser(), getOptions = {}) {\n        return this.toRequestContext(\"GET\", getOptions, parser).then(context => queryablerequest_1.pipe(context));\n    }\n    post(postOptions = {}, parser = new odata_1.ODataDefaultParser()) {\n        return this.toRequestContext(\"POST\", postOptions, parser).then(context => queryablerequest_1.pipe(context));\n    }\n    postAs(postOptions = {}, parser = new odata_1.ODataDefaultParser()) {\n        return this.toRequestContext(\"POST\", postOptions, parser).then(context => queryablerequest_1.pipe(context));\n    }\n    patch(patchOptions = {}, parser = new odata_1.ODataDefaultParser()) {\n        return this.toRequestContext(\"PATCH\", patchOptions, parser).then(context => queryablerequest_1.pipe(context));\n    }\n    delete(deleteOptions = {}, parser = new odata_1.ODataDefaultParser()) {\n        return this.toRequestContext(\"DELETE\", deleteOptions, parser).then(context => queryablerequest_1.pipe(context));\n    }\n    toRequestContext(verb, options = {}, parser) {\n        let dependencyDispose = this.hasBatch ? this.addBatchDependency() : () => { return; };\n        return util_1.Util.toAbsoluteUrl(this.toUrlAndQuery()).then(url => {\n            // build our request context\n            let context = {\n                batch: this._batch,\n                batchDependency: dependencyDispose,\n                cachingOptions: this._cachingOptions,\n                isBatched: this.hasBatch,\n                isCached: this._useCaching,\n                options: options,\n                parser: parser,\n                requestAbsoluteUrl: url,\n                requestId: util_1.Util.getGUID(),\n                verb: verb,\n            };\n            return context;\n        });\n    }\n}\nexports.Queryable = Queryable;\n/**\n * Represents a REST collection which can be filtered, paged, and selected\n *\n */\nclass QueryableCollection extends Queryable {\n    /**\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\n     *\n     * @param filter The string representing the filter query\n     */\n    filter(filter) {\n        this._query.add(\"$filter\", filter);\n        return this;\n    }\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    select(...selects) {\n        this._query.add(\"$select\", selects.join(\",\"));\n        return this;\n    }\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    expand(...expands) {\n        this._query.add(\"$expand\", expands.join(\",\"));\n        return this;\n    }\n    /**\n     * Orders based on the supplied fields ascending\n     *\n     * @param orderby The name of the field to sort on\n     * @param ascending If false DESC is appended, otherwise ASC (default)\n     */\n    orderBy(orderBy, ascending = true) {\n        let keys = this._query.getKeys();\n        let query = [];\n        let asc = ascending ? \" asc\" : \" desc\";\n        for (let i = 0; i < keys.length; i++) {\n            if (keys[i] === \"$orderby\") {\n                query.push(this._query.get(\"$orderby\"));\n                break;\n            }\n        }\n        query.push(`${orderBy}${asc}`);\n        this._query.add(\"$orderby\", query.join(\",\"));\n        return this;\n    }\n    /**\n     * Skips the specified number of items\n     *\n     * @param skip The number of items to skip\n     */\n    skip(skip) {\n        this._query.add(\"$skip\", skip.toString());\n        return this;\n    }\n    /**\n     * Limits the query to only return the specified number of items\n     *\n     * @param top The query row limit\n     */\n    top(top) {\n        this._query.add(\"$top\", top.toString());\n        return this;\n    }\n}\nexports.QueryableCollection = QueryableCollection;\n/**\n * Represents an instance that can be selected\n *\n */\nclass QueryableInstance extends Queryable {\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    select(...selects) {\n        this._query.add(\"$select\", selects.join(\",\"));\n        return this;\n    }\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    expand(...expands) {\n        this._query.add(\"$expand\", expands.join(\",\"));\n        return this;\n    }\n}\nexports.QueryableInstance = QueryableInstance;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/queryable.js","\"use strict\";\nconst util_1 = require(\"../utils/util\");\nconst logging_1 = require(\"../utils/logging\");\nconst httpclient_1 = require(\"../net/httpclient\");\nconst pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nconst exceptions_1 = require(\"../utils/exceptions\");\nconst exceptions_2 = require(\"../utils/exceptions\");\nfunction extractOdataId(candidate) {\n    if (candidate.hasOwnProperty(\"odata.id\")) {\n        return candidate[\"odata.id\"];\n    }\n    else if (candidate.hasOwnProperty(\"__metadata\") && candidate.__metadata.hasOwnProperty(\"id\")) {\n        return candidate.__metadata.id;\n    }\n    else {\n        throw new exceptions_1.ODataIdException(candidate);\n    }\n}\nexports.extractOdataId = extractOdataId;\nclass ODataParserBase {\n    parse(r) {\n        return new Promise((resolve, reject) => {\n            if (this.handleError(r, reject)) {\n                if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\n                    resolve({});\n                }\n                else {\n                    r.json().then(json => resolve(this.parseODataJSON(json)));\n                }\n            }\n        });\n    }\n    handleError(r, reject) {\n        if (!r.ok) {\n            r.json().then(json => {\n                reject(new exceptions_2.ProcessHttpClientResponseException(r.status, r.statusText, json));\n            });\n        }\n        return r.ok;\n    }\n    parseODataJSON(json) {\n        let result = json;\n        if (json.hasOwnProperty(\"d\")) {\n            if (json.d.hasOwnProperty(\"results\")) {\n                result = json.d.results;\n            }\n            else {\n                result = json.d;\n            }\n        }\n        else if (json.hasOwnProperty(\"value\")) {\n            result = json.value;\n        }\n        return result;\n    }\n}\nexports.ODataParserBase = ODataParserBase;\nclass ODataDefaultParser extends ODataParserBase {\n}\nexports.ODataDefaultParser = ODataDefaultParser;\nclass ODataRawParserImpl {\n    parse(r) {\n        return r.json();\n    }\n}\nexports.ODataRawParserImpl = ODataRawParserImpl;\nclass ODataValueParserImpl extends ODataParserBase {\n    parse(r) {\n        return super.parse(r).then(d => d);\n    }\n}\nclass ODataEntityParserImpl extends ODataParserBase {\n    constructor(factory) {\n        super();\n        this.factory = factory;\n    }\n    parse(r) {\n        return super.parse(r).then(d => {\n            let o = new this.factory(getEntityUrl(d), null);\n            return util_1.Util.extend(o, d);\n        });\n    }\n}\nclass ODataEntityArrayParserImpl extends ODataParserBase {\n    constructor(factory) {\n        super();\n        this.factory = factory;\n    }\n    parse(r) {\n        return super.parse(r).then((d) => {\n            return d.map(v => {\n                let o = new this.factory(getEntityUrl(v), null);\n                return util_1.Util.extend(o, v);\n            });\n        });\n    }\n}\nfunction getEntityUrl(entity) {\n    if (entity.hasOwnProperty(\"odata.editLink\")) {\n        // we are dealign with minimal metadata (default)\n        return util_1.Util.combinePaths(\"_api\", entity[\"odata.editLink\"]);\n    }\n    else if (entity.hasOwnProperty(\"__metadata\")) {\n        // we are dealing with verbose, which has an absolute uri\n        return entity.__metadata.uri;\n    }\n    else {\n        // we are likely dealing with nometadata, so don't error but we won't be able to\n        // chain off these objects\n        logging_1.Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", logging_1.LogLevel.Warning);\n        return \"\";\n    }\n}\nexports.ODataRaw = new ODataRawParserImpl();\nfunction ODataValue() {\n    return new ODataValueParserImpl();\n}\nexports.ODataValue = ODataValue;\nfunction ODataEntity(factory) {\n    return new ODataEntityParserImpl(factory);\n}\nexports.ODataEntity = ODataEntity;\nfunction ODataEntityArray(factory) {\n    return new ODataEntityArrayParserImpl(factory);\n}\nexports.ODataEntityArray = ODataEntityArray;\n/**\n * Manages a batch of OData operations\n */\nclass ODataBatch {\n    constructor(baseUrl, _batchId = util_1.Util.getGUID()) {\n        this.baseUrl = baseUrl;\n        this._batchId = _batchId;\n        this._requests = [];\n        this._batchDependencies = Promise.resolve();\n    }\n    /**\n     * Adds a request to a batch (not designed for public use)\n     *\n     * @param url The full url of the request\n     * @param method The http method GET, POST, etc\n     * @param options Any options to include in the request\n     * @param parser The parser that will hadle the results of the request\n     */\n    add(url, method, options, parser) {\n        let info = {\n            method: method.toUpperCase(),\n            options: options,\n            parser: parser,\n            reject: null,\n            resolve: null,\n            url: url,\n        };\n        let p = new Promise((resolve, reject) => {\n            info.resolve = resolve;\n            info.reject = reject;\n        });\n        this._requests.push(info);\n        return p;\n    }\n    /**\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\n     * MUST be cleared using the returned resolve delegate to allow batches to run\n     */\n    addBatchDependency() {\n        let resolver;\n        let promise = new Promise((resolve) => {\n            resolver = resolve;\n        });\n        this._batchDependencies = this._batchDependencies.then(() => promise);\n        return resolver;\n    }\n    /**\n     * Execute the current batch and resolve the associated promises\n     *\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\n     */\n    execute() {\n        return this._batchDependencies.then(() => this.executeImpl());\n    }\n    executeImpl() {\n        logging_1.Logger.write(`Executing batch with ${this._requests.length} requests.`, logging_1.LogLevel.Info);\n        // if we don't have any requests, don't bother sending anything\n        // this could be due to caching further upstream, or just an empty batch\n        if (this._requests.length < 1) {\n            logging_1.Logger.write(`Resolving empty batch.`, logging_1.LogLevel.Info);\n            return Promise.resolve();\n        }\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\n        // below to be correct\n        let client = new httpclient_1.HttpClient();\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\n        // and for sending the entire batch\n        return util_1.Util.toAbsoluteUrl(this.baseUrl).then(absoluteRequestUrl => {\n            // build all the requests, send them, pipe results in order to parsers\n            let batchBody = [];\n            let currentChangeSetId = \"\";\n            this._requests.map((reqInfo) => {\n                if (reqInfo.method === \"GET\") {\n                    if (currentChangeSetId.length > 0) {\n                        // end an existing change set\n                        batchBody.push(`--changeset_${currentChangeSetId}--\\n\\n`);\n                        currentChangeSetId = \"\";\n                    }\n                    batchBody.push(`--batch_${this._batchId}\\n`);\n                }\n                else {\n                    if (currentChangeSetId.length < 1) {\n                        // start new change set\n                        currentChangeSetId = util_1.Util.getGUID();\n                        batchBody.push(`--batch_${this._batchId}\\n`);\n                        batchBody.push(`Content-Type: multipart/mixed; boundary=\"changeset_${currentChangeSetId}\"\\n\\n`);\n                    }\n                    batchBody.push(`--changeset_${currentChangeSetId}\\n`);\n                }\n                // common batch part prefix\n                batchBody.push(`Content-Type: application/http\\n`);\n                batchBody.push(`Content-Transfer-Encoding: binary\\n\\n`);\n                let headers = {\n                    \"Accept\": \"application/json;\",\n                };\n                // this is the url of the individual request within the batch\n                let url = util_1.Util.isUrlAbsolute(reqInfo.url) ? reqInfo.url : util_1.Util.combinePaths(absoluteRequestUrl, reqInfo.url);\n                logging_1.Logger.write(`Adding request ${reqInfo.method} ${url} to batch.`, logging_1.LogLevel.Verbose);\n                if (reqInfo.method !== \"GET\") {\n                    let method = reqInfo.method;\n                    if (reqInfo.hasOwnProperty(\"options\") && reqInfo.options.hasOwnProperty(\"headers\") && typeof reqInfo.options.headers[\"X-HTTP-Method\"] !== \"undefined\") {\n                        method = reqInfo.options.headers[\"X-HTTP-Method\"];\n                        delete reqInfo.options.headers[\"X-HTTP-Method\"];\n                    }\n                    batchBody.push(`${method} ${url} HTTP/1.1\\n`);\n                    headers = util_1.Util.extend(headers, { \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\" });\n                }\n                else {\n                    batchBody.push(`${reqInfo.method} ${url} HTTP/1.1\\n`);\n                }\n                if (typeof pnplibconfig_1.RuntimeConfig.headers !== \"undefined\") {\n                    headers = util_1.Util.extend(headers, pnplibconfig_1.RuntimeConfig.headers);\n                }\n                if (reqInfo.options && reqInfo.options.headers) {\n                    headers = util_1.Util.extend(headers, reqInfo.options.headers);\n                }\n                for (let name in headers) {\n                    if (headers.hasOwnProperty(name)) {\n                        batchBody.push(`${name}: ${headers[name]}\\n`);\n                    }\n                }\n                batchBody.push(\"\\n\");\n                if (reqInfo.options.body) {\n                    batchBody.push(`${reqInfo.options.body}\\n\\n`);\n                }\n            });\n            if (currentChangeSetId.length > 0) {\n                // Close the changeset\n                batchBody.push(`--changeset_${currentChangeSetId}--\\n\\n`);\n                currentChangeSetId = \"\";\n            }\n            batchBody.push(`--batch_${this._batchId}--\\n`);\n            let batchHeaders = {\n                \"Content-Type\": `multipart/mixed; boundary=batch_${this._batchId}`,\n            };\n            let batchOptions = {\n                \"body\": batchBody.join(\"\"),\n                \"headers\": batchHeaders,\n            };\n            logging_1.Logger.write(\"Sending batch request.\", logging_1.LogLevel.Info);\n            return client.post(util_1.Util.combinePaths(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\n                .then(r => r.text())\n                .then(this._parseResponse)\n                .then((responses) => {\n                if (responses.length !== this._requests.length) {\n                    throw new exceptions_1.BatchParseException(\"Could not properly parse responses to match requests in batch.\");\n                }\n                logging_1.Logger.write(\"Resolving batched requests.\", logging_1.LogLevel.Info);\n                return responses.reduce((chain, response, index) => {\n                    let request = this._requests[index];\n                    logging_1.Logger.write(`Resolving request ${request.method} ${request.url}.`, logging_1.LogLevel.Verbose);\n                    return chain.then(_ => request.parser.parse(response).then(request.resolve).catch(request.reject));\n                }, Promise.resolve());\n            });\n        });\n    }\n    /**\n     * Parses the response from a batch request into an array of Response instances\n     *\n     * @param body Text body of the response from the batch request\n     */\n    _parseResponse(body) {\n        return new Promise((resolve, reject) => {\n            let responses = [];\n            let header = \"--batchresponse_\";\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\n            let statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\n            let lines = body.split(\"\\n\");\n            let state = \"batch\";\n            let status;\n            let statusText;\n            for (let i = 0; i < lines.length; ++i) {\n                let line = lines[i];\n                switch (state) {\n                    case \"batch\":\n                        if (line.substr(0, header.length) === header) {\n                            state = \"batchHeaders\";\n                        }\n                        else {\n                            if (line.trim() !== \"\") {\n                                throw new exceptions_1.BatchParseException(`Invalid response, line ${i}`);\n                            }\n                        }\n                        break;\n                    case \"batchHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"status\";\n                        }\n                        break;\n                    case \"status\":\n                        let parts = statusRegExp.exec(line);\n                        if (parts.length !== 3) {\n                            throw new exceptions_1.BatchParseException(`Invalid status, line ${i}`);\n                        }\n                        status = parseInt(parts[1], 10);\n                        statusText = parts[2];\n                        state = \"statusHeaders\";\n                        break;\n                    case \"statusHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"body\";\n                        }\n                        break;\n                    case \"body\":\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\n                        state = \"batch\";\n                        break;\n                }\n            }\n            if (state !== \"status\") {\n                reject(new exceptions_1.BatchParseException(\"Unexpected end of input\"));\n            }\n            resolve(responses);\n        });\n    }\n}\nexports.ODataBatch = ODataBatch;\nclass TextFileParser {\n    parse(r) {\n        return r.text();\n    }\n}\nexports.TextFileParser = TextFileParser;\nclass BlobFileParser {\n    parse(r) {\n        return r.blob();\n    }\n}\nexports.BlobFileParser = BlobFileParser;\nclass JSONFileParser {\n    parse(r) {\n        return r.json();\n    }\n}\nexports.JSONFileParser = JSONFileParser;\nclass BufferFileParser {\n    parse(r) {\n        if (util_1.Util.isFunction(r.arrayBuffer)) {\n            return r.arrayBuffer();\n        }\n        return r.buffer();\n    }\n}\nexports.BufferFileParser = BufferFileParser;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/odata.js","\"use strict\";\nconst digestcache_1 = require(\"./digestcache\");\nconst util_1 = require(\"../utils/util\");\nconst pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nconst exceptions_1 = require(\"../utils/exceptions\");\nclass HttpClient {\n    constructor() {\n        this._impl = pnplibconfig_1.RuntimeConfig.fetchClientFactory();\n        this._digestCache = new digestcache_1.DigestCache(this);\n    }\n    fetch(url, options = {}) {\n        let opts = util_1.Util.extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\n        let headers = new Headers();\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\n        this.mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.headers);\n        // second we add the local options so we can overwrite the globals\n        this.mergeHeaders(headers, options.headers);\n        // lastly we apply any default headers we need that may not exist\n        if (!headers.has(\"Accept\")) {\n            headers.append(\"Accept\", \"application/json\");\n        }\n        if (!headers.has(\"Content-Type\")) {\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n        }\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:2.0.1\");\n        }\n        opts = util_1.Util.extend(opts, { headers: headers });\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\n            if (!headers.has(\"X-RequestDigest\")) {\n                let index = url.indexOf(\"_api/\");\n                if (index < 0) {\n                    throw new exceptions_1.APIUrlException();\n                }\n                let webUrl = url.substr(0, index);\n                return this._digestCache.getDigest(webUrl)\n                    .then((digest) => {\n                    headers.append(\"X-RequestDigest\", digest);\n                    return this.fetchRaw(url, opts);\n                });\n            }\n        }\n        return this.fetchRaw(url, opts);\n    }\n    fetchRaw(url, options = {}) {\n        // here we need to normalize the headers\n        let rawHeaders = new Headers();\n        this.mergeHeaders(rawHeaders, options.headers);\n        options = util_1.Util.extend(options, { headers: rawHeaders });\n        let retry = (ctx) => {\n            this._impl.fetch(url, options).then((response) => ctx.resolve(response)).catch((response) => {\n                // grab our current delay\n                let delay = ctx.delay;\n                // Check if request was throttled - http status code 429\n                // Check is request failed due to server unavailable - http status code 503\n                if (response.status !== 429 && response.status !== 503) {\n                    ctx.reject(response);\n                }\n                // Increment our counters.\n                ctx.delay *= 2;\n                ctx.attempts++;\n                // If we have exceeded the retry count, reject.\n                if (ctx.retryCount <= ctx.attempts) {\n                    ctx.reject(response);\n                }\n                // Set our retry timeout for {delay} milliseconds.\n                setTimeout(util_1.Util.getCtxCallback(this, retry, ctx), delay);\n            });\n        };\n        return new Promise((resolve, reject) => {\n            let retryContext = {\n                attempts: 0,\n                delay: 100,\n                reject: reject,\n                resolve: resolve,\n                retryCount: 7,\n            };\n            retry.call(this, retryContext);\n        });\n    }\n    get(url, options = {}) {\n        let opts = util_1.Util.extend(options, { method: \"GET\" });\n        return this.fetch(url, opts);\n    }\n    post(url, options = {}) {\n        let opts = util_1.Util.extend(options, { method: \"POST\" });\n        return this.fetch(url, opts);\n    }\n    patch(url, options = {}) {\n        let opts = util_1.Util.extend(options, { method: \"PATCH\" });\n        return this.fetch(url, opts);\n    }\n    delete(url, options = {}) {\n        let opts = util_1.Util.extend(options, { method: \"DELETE\" });\n        return this.fetch(url, opts);\n    }\n    mergeHeaders(target, source) {\n        if (typeof source !== \"undefined\" && source !== null) {\n            let temp = new Request(\"\", { headers: source });\n            temp.headers.forEach((value, name) => {\n                target.append(name, value);\n            });\n        }\n    }\n}\nexports.HttpClient = HttpClient;\n;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/net/httpclient.js","\"use strict\";\nconst collections_1 = require(\"../collections/collections\");\nconst util_1 = require(\"../utils/util\");\nconst odata_1 = require(\"../sharepoint/odata\");\nclass CachedDigest {\n}\nexports.CachedDigest = CachedDigest;\nclass DigestCache {\n    constructor(_httpClient, _digests = new collections_1.Dictionary()) {\n        this._httpClient = _httpClient;\n        this._digests = _digests;\n    }\n    getDigest(webUrl) {\n        let cachedDigest = this._digests.get(webUrl);\n        if (cachedDigest !== null) {\n            let now = new Date();\n            if (now < cachedDigest.expiration) {\n                return Promise.resolve(cachedDigest.value);\n            }\n        }\n        let url = util_1.Util.combinePaths(webUrl, \"/_api/contextinfo\");\n        return this._httpClient.fetchRaw(url, {\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            headers: {\n                \"Accept\": \"application/json;odata=verbose\",\n                \"Content-type\": \"application/json;odata=verbose;charset=utf-8\",\n            },\n            method: \"POST\",\n        }).then((response) => {\n            let parser = new odata_1.ODataDefaultParser();\n            return parser.parse(response).then((d) => d.GetContextWebInformation);\n        }).then((data) => {\n            let newCachedDigest = new CachedDigest();\n            newCachedDigest.value = data.FormDigestValue;\n            let seconds = data.FormDigestTimeoutSeconds;\n            let expiration = new Date();\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\n            newCachedDigest.expiration = expiration;\n            this._digests.add(webUrl, newCachedDigest);\n            return newCachedDigest.value;\n        });\n    }\n    clear() {\n        this._digests.clear();\n    }\n}\nexports.DigestCache = DigestCache;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/net/digestcache.js","\"use strict\";\nconst logging_1 = require(\"../utils/logging\");\nfunction defaultLog(error) {\n    logging_1.Logger.log({ data: {}, level: logging_1.LogLevel.Error, message: `[${error.name}]::${error.message}` });\n}\n/**\n * Represents an exception with an HttpClient request\n *\n */\nclass ProcessHttpClientResponseException extends Error {\n    constructor(status, statusText, data) {\n        super(`Error making HttpClient request in queryable: [${status}] ${statusText}`);\n        this.status = status;\n        this.statusText = statusText;\n        this.data = data;\n        this.name = \"ProcessHttpClientResponseException\";\n        logging_1.Logger.log({ data: this.data, level: logging_1.LogLevel.Error, message: this.message });\n    }\n}\nexports.ProcessHttpClientResponseException = ProcessHttpClientResponseException;\nclass NoCacheAvailableException extends Error {\n    constructor(msg = \"Cannot create a caching configuration provider since cache is not available.\") {\n        super(msg);\n        this.name = \"NoCacheAvailableException\";\n        defaultLog(this);\n    }\n}\nexports.NoCacheAvailableException = NoCacheAvailableException;\nclass APIUrlException extends Error {\n    constructor(msg = \"Unable to determine API url.\") {\n        super(msg);\n        this.name = \"APIUrlException\";\n        defaultLog(this);\n    }\n}\nexports.APIUrlException = APIUrlException;\nclass AuthUrlException extends Error {\n    constructor(data, msg = \"Auth URL Endpoint could not be determined from data. Data logged.\") {\n        super(msg);\n        this.name = \"APIUrlException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: this.message });\n    }\n}\nexports.AuthUrlException = AuthUrlException;\nclass NodeFetchClientUnsupportedException extends Error {\n    constructor(msg = \"Using NodeFetchClient in the browser is not supported.\") {\n        super(msg);\n        this.name = \"NodeFetchClientUnsupportedException\";\n        defaultLog(this);\n    }\n}\nexports.NodeFetchClientUnsupportedException = NodeFetchClientUnsupportedException;\nclass SPRequestExecutorUndefinedException extends Error {\n    constructor() {\n        let msg = [\n            \"SP.RequestExecutor is undefined. \",\n            \"Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\",\n        ].join(\" \");\n        super(msg);\n        this.name = \"SPRequestExecutorUndefinedException\";\n        defaultLog(this);\n    }\n}\nexports.SPRequestExecutorUndefinedException = SPRequestExecutorUndefinedException;\nclass MaxCommentLengthException extends Error {\n    constructor(msg = \"The maximum comment length is 1023 characters.\") {\n        super(msg);\n        this.name = \"MaxCommentLengthException\";\n        defaultLog(this);\n    }\n}\nexports.MaxCommentLengthException = MaxCommentLengthException;\nclass NotSupportedInBatchException extends Error {\n    constructor(operation = \"This operation\") {\n        super(`${operation} is not supported as part of a batch.`);\n        this.name = \"NotSupportedInBatchException\";\n        defaultLog(this);\n    }\n}\nexports.NotSupportedInBatchException = NotSupportedInBatchException;\nclass ODataIdException extends Error {\n    constructor(data, msg = \"Could not extract odata id in object, you may be using nometadata. Object data logged to logger.\") {\n        super(msg);\n        this.name = \"ODataIdException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: this.message });\n    }\n}\nexports.ODataIdException = ODataIdException;\nclass BatchParseException extends Error {\n    constructor(msg) {\n        super(msg);\n        this.name = \"BatchParseException\";\n        defaultLog(this);\n    }\n}\nexports.BatchParseException = BatchParseException;\nclass AlreadyInBatchException extends Error {\n    constructor(msg = \"This query is already part of a batch.\") {\n        super(msg);\n        this.name = \"AlreadyInBatchException\";\n        defaultLog(this);\n    }\n}\nexports.AlreadyInBatchException = AlreadyInBatchException;\nclass FunctionExpectedException extends Error {\n    constructor(msg = \"This query is already part of a batch.\") {\n        super(msg);\n        this.name = \"FunctionExpectedException\";\n        defaultLog(this);\n    }\n}\nexports.FunctionExpectedException = FunctionExpectedException;\nclass UrlException extends Error {\n    constructor(msg) {\n        super(msg);\n        this.name = \"UrlException\";\n        defaultLog(this);\n    }\n}\nexports.UrlException = UrlException;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/exceptions.js","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst caching_1 = require(\"./caching\");\nconst httpclient_1 = require(\"../net/httpclient\");\nconst logging_1 = require(\"../utils/logging\");\nconst util_1 = require(\"../utils/util\");\n/**\n * Processes a given context through the request pipeline\n *\n * @param context The request context we are processing\n */\nfunction pipe(context) {\n    // this is the beginning of the extensible pipeline in future versions\n    let pipeline = [\n        PipelineMethods.logStart,\n        PipelineMethods.caching,\n        PipelineMethods.send,\n        PipelineMethods.logEnd,\n    ];\n    return pipeline.reduce((chain, next) => chain.then(c => next(c)), Promise.resolve(context))\n        .then(ctx => PipelineMethods.returnResult(ctx))\n        .catch((e) => {\n        logging_1.Logger.log({\n            data: e,\n            level: logging_1.LogLevel.Error,\n            message: `Error in request pipeline: ${e.message}`,\n        });\n        throw e;\n    });\n}\nexports.pipe = pipe;\n/**\n * decorator factory applied to methods in the pipeline to control behavior\n */\nfunction requestPipelineMethod(alwaysRun = false) {\n    return function (target, propertyKey, descriptor) {\n        let method = descriptor.value;\n        descriptor.value = function (...args) {\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\n            if (!alwaysRun && args.length > 0 && args[0].hasOwnProperty(\"hasResult\") && args[0].hasResult) {\n                logging_1.Logger.write(`[${args[0].requestId}] (${(new Date()).getTime()}) Skipping request pipeline method ${propertyKey}, existing result in pipeline.`, logging_1.LogLevel.Verbose);\n                return Promise.resolve(args[0]);\n            }\n            // apply the tagged method\n            logging_1.Logger.write(`[${args[0].requestId}] (${(new Date()).getTime()}) Calling request pipeline method ${propertyKey}.`, logging_1.LogLevel.Verbose);\n            return method.apply(target, args);\n        };\n    };\n}\n/**\n * Contains the methods used within the request pipeline\n */\nclass PipelineMethods {\n    /**\n     * Logs the start of the request\n     */\n    static logStart(context) {\n        return new Promise(resolve => {\n            logging_1.Logger.log({\n                data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                level: logging_1.LogLevel.Info,\n                message: `[${context.requestId}] (${(new Date()).getTime()}) Beginning ${context.verb} request to ${context.requestAbsoluteUrl}`,\n            });\n            resolve(context);\n        });\n    }\n    /**\n     * Handles caching of the request\n     */\n    static caching(context) {\n        return new Promise(resolve => {\n            // handle caching, if applicable\n            if (context.verb === \"GET\" && context.isCached) {\n                logging_1.Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Caching is enabled for request, checking cache...`, logging_1.LogLevel.Info);\n                let cacheOptions = new caching_1.CachingOptions(context.requestAbsoluteUrl.toLowerCase());\n                if (typeof context.cachingOptions !== \"undefined\") {\n                    cacheOptions = util_1.Util.extend(cacheOptions, context.cachingOptions);\n                }\n                // we may not have a valid store, i.e. on node\n                if (cacheOptions.store !== null) {\n                    // check if we have the data in cache and if so resolve the promise and return\n                    let data = cacheOptions.store.get(cacheOptions.key);\n                    if (data !== null) {\n                        // ensure we clear any help batch dependency we are resolving from the cache\n                        logging_1.Logger.log({\n                            data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : data,\n                            level: logging_1.LogLevel.Info,\n                            message: `[${context.requestId}] (${(new Date()).getTime()}) Value returned from cache.`,\n                        });\n                        context.batchDependency();\n                        return PipelineMethods.setResult(context, data).then(ctx => resolve(ctx));\n                    }\n                }\n                logging_1.Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Value not found in cache.`, logging_1.LogLevel.Info);\n                // if we don't then wrap the supplied parser in the caching parser wrapper\n                // and send things on their way\n                context.parser = new caching_1.CachingParserWrapper(context.parser, cacheOptions);\n            }\n            return resolve(context);\n        });\n    }\n    /**\n     * Sends the request\n     */\n    static send(context) {\n        return new Promise((resolve, reject) => {\n            // send or batch the request\n            if (context.isBatched) {\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\n                let p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser);\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\n                context.batchDependency();\n                logging_1.Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Batching request.`, logging_1.LogLevel.Info);\n                resolve(p.then(result => PipelineMethods.setResult(context, result)));\n            }\n            else {\n                logging_1.Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Sending request.`, logging_1.LogLevel.Info);\n                // we are not part of a batch, so proceed as normal\n                let client = new httpclient_1.HttpClient();\n                let opts = util_1.Util.extend(context.options, { method: context.verb });\n                client.fetch(context.requestAbsoluteUrl, opts)\n                    .then(response => context.parser.parse(response))\n                    .then(result => PipelineMethods.setResult(context, result))\n                    .then(ctx => resolve(ctx))\n                    .catch(e => reject(e));\n            }\n        });\n    }\n    /**\n     * Logs the end of the request\n     */\n    static logEnd(context) {\n        return new Promise(resolve => {\n            logging_1.Logger.log({\n                data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                level: logging_1.LogLevel.Info,\n                message: `[${context.requestId}] (${(new Date()).getTime()}) Completing ${context.verb} request to ${context.requestAbsoluteUrl}`,\n            });\n            resolve(context);\n        });\n    }\n    /**\n     * At the end of the pipeline resolves the request's result\n     */\n    static returnResult(context) {\n        logging_1.Logger.log({\n            data: context.result,\n            level: logging_1.LogLevel.Verbose,\n            message: `[${context.requestId}] (${(new Date()).getTime()}) Returning, see data property for value.`,\n        });\n        return Promise.resolve(context.result);\n    }\n    /**\n     * Sets the result on the context\n     */\n    static setResult(context, value) {\n        return new Promise((resolve) => {\n            context.result = value;\n            context.hasResult = true;\n            resolve(context);\n        });\n    }\n}\n__decorate([\n    requestPipelineMethod(true)\n], PipelineMethods, \"logStart\", null);\n__decorate([\n    requestPipelineMethod()\n], PipelineMethods, \"caching\", null);\n__decorate([\n    requestPipelineMethod()\n], PipelineMethods, \"send\", null);\n__decorate([\n    requestPipelineMethod(true)\n], PipelineMethods, \"logEnd\", null);\n__decorate([\n    requestPipelineMethod(true)\n], PipelineMethods, \"returnResult\", null);\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/queryablerequest.js","\"use strict\";\nconst storage_1 = require(\"../utils/storage\");\nconst util_1 = require(\"../utils/util\");\nconst pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nclass CachingOptions {\n    constructor(key) {\n        this.key = key;\n        this.expiration = util_1.Util.dateAdd(new Date(), \"second\", pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds);\n        this.storeName = pnplibconfig_1.RuntimeConfig.defaultCachingStore;\n    }\n    get store() {\n        if (this.storeName === \"local\") {\n            return CachingOptions.storage.local;\n        }\n        else {\n            return CachingOptions.storage.session;\n        }\n    }\n}\nCachingOptions.storage = new storage_1.PnPClientStorage();\nexports.CachingOptions = CachingOptions;\nclass CachingParserWrapper {\n    constructor(_parser, _cacheOptions) {\n        this._parser = _parser;\n        this._cacheOptions = _cacheOptions;\n    }\n    parse(response) {\n        // add this to the cache based on the options\n        return this._parser.parse(response).then(data => {\n            if (this._cacheOptions.store !== null) {\n                this._cacheOptions.store.put(this._cacheOptions.key, data, this._cacheOptions.expiration);\n            }\n            return data;\n        });\n    }\n}\nexports.CachingParserWrapper = CachingParserWrapper;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/caching.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nclass SearchSuggest extends queryable_1.QueryableInstance {\n    constructor(baseUrl, path = \"_api/search/suggest\") {\n        super(baseUrl, path);\n    }\n    execute(query) {\n        this.mapQueryToQueryString(query);\n        return this.get().then(response => new SearchSuggestResult(response));\n    }\n    mapQueryToQueryString(query) {\n        this.query.add(\"querytext\", `'${query.querytext}'`);\n        if (query.hasOwnProperty(\"count\")) {\n            this.query.add(\"inumberofquerysuggestions\", query.count.toString());\n        }\n        if (query.hasOwnProperty(\"personalCount\")) {\n            this.query.add(\"inumberofresultsuggestions\", query.personalCount.toString());\n        }\n        if (query.hasOwnProperty(\"preQuery\")) {\n            this.query.add(\"fprequerysuggestions\", query.preQuery.toString());\n        }\n        if (query.hasOwnProperty(\"hitHighlighting\")) {\n            this.query.add(\"fhithighlighting\", query.hitHighlighting.toString());\n        }\n        if (query.hasOwnProperty(\"capitalize\")) {\n            this.query.add(\"fcapitalizefirstletters\", query.capitalize.toString());\n        }\n        if (query.hasOwnProperty(\"culture\")) {\n            this.query.add(\"culture\", query.culture.toString());\n        }\n        if (query.hasOwnProperty(\"stemming\")) {\n            this.query.add(\"enablestemming\", query.stemming.toString());\n        }\n        if (query.hasOwnProperty(\"includePeople\")) {\n            this.query.add(\"showpeoplenamesuggestions\", query.includePeople.toString());\n        }\n        if (query.hasOwnProperty(\"queryRules\")) {\n            this.query.add(\"enablequeryrules\", query.queryRules.toString());\n        }\n        if (query.hasOwnProperty(\"prefixMatch\")) {\n            this.query.add(\"fprefixmatchallterms\", query.prefixMatch.toString());\n        }\n    }\n}\nexports.SearchSuggest = SearchSuggest;\nclass SearchSuggestResult {\n    constructor(json) {\n        if (json.hasOwnProperty(\"suggest\")) {\n            // verbose\n            this.PeopleNames = json.suggest.PeopleNames.results;\n            this.PersonalResults = json.suggest.PersonalResults.results;\n            this.Queries = json.suggest.Queries.results;\n        }\n        else {\n            this.PeopleNames = json.PeopleNames;\n            this.PersonalResults = json.PersonalResults;\n            this.Queries = json.Queries;\n        }\n    }\n}\nexports.SearchSuggestResult = SearchSuggestResult;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/searchsuggest.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst webs_1 = require(\"./webs\");\nconst usercustomactions_1 = require(\"./usercustomactions\");\nconst odata_1 = require(\"./odata\");\nconst features_1 = require(\"./features\");\n/**\n * Describes a site collection\n *\n */\nclass Site extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the RoleAssignments class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path = \"_api/site\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets the root web of the site collection\n     *\n     */\n    get rootWeb() {\n        return new webs_1.Web(this, \"rootweb\");\n    }\n    /**\n     * Gets the active features for this site\n     *\n     */\n    get features() {\n        return new features_1.Features(this);\n    }\n    /**\n     * Get all custom actions on a site collection\n     *\n     */\n    get userCustomActions() {\n        return new usercustomactions_1.UserCustomActions(this);\n    }\n    /**\n     * Gets the context information for the site.\n     */\n    getContextInfo() {\n        let q = new Site(this.parentUrl, \"_api/contextinfo\");\n        return q.post().then(data => {\n            if (data.hasOwnProperty(\"GetContextWebInformation\")) {\n                let info = data.GetContextWebInformation;\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\n                return info;\n            }\n            else {\n                return data;\n            }\n        });\n    }\n    /**\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\n     *\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\n     */\n    getDocumentLibraries(absoluteWebUrl) {\n        let q = new queryable_1.Queryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\n        q.query.add(\"@v\", \"'\" + absoluteWebUrl + \"'\");\n        return q.get().then(data => {\n            if (data.hasOwnProperty(\"GetDocumentLibraries\")) {\n                return data.GetDocumentLibraries;\n            }\n            else {\n                return data;\n            }\n        });\n    }\n    /**\n     * Gets the site URL from a page URL.\n     *\n     * @param absolutePageUrl The absolute url of the page\n     */\n    getWebUrlFromPageUrl(absolutePageUrl) {\n        let q = new queryable_1.Queryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\n        q.query.add(\"@v\", \"'\" + absolutePageUrl + \"'\");\n        return q.get().then(data => {\n            if (data.hasOwnProperty(\"GetWebUrlFromPageUrl\")) {\n                return data.GetWebUrlFromPageUrl;\n            }\n            else {\n                return data;\n            }\n        });\n    }\n    /**\n     * Creates a new batch for requests within the context of context this site\n     *\n     */\n    createBatch() {\n        return new odata_1.ODataBatch(this.parentUrl);\n    }\n}\nexports.Site = Site;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/site.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst queryablesecurable_1 = require(\"./queryablesecurable\");\nconst lists_1 = require(\"./lists\");\nconst fields_1 = require(\"./fields\");\nconst navigation_1 = require(\"./navigation\");\nconst sitegroups_1 = require(\"./sitegroups\");\nconst contenttypes_1 = require(\"./contenttypes\");\nconst folders_1 = require(\"./folders\");\nconst roles_1 = require(\"./roles\");\nconst files_1 = require(\"./files\");\nconst util_1 = require(\"../utils/util\");\nconst lists_2 = require(\"./lists\");\nconst siteusers_1 = require(\"./siteusers\");\nconst usercustomactions_1 = require(\"./usercustomactions\");\nconst odata_1 = require(\"./odata\");\nconst features_1 = require(\"./features\");\nclass Webs extends queryable_1.QueryableCollection {\n    constructor(baseUrl, webPath = \"webs\") {\n        super(baseUrl, webPath);\n    }\n    /**\n     * Adds a new web to the collection\n     *\n     * @param title The new web's title\n     * @param url The new web's relative url\n     * @param description The web web's description\n     * @param template The web's template\n     * @param language The language code to use for this web\n     * @param inheritPermissions If true permissions will be inherited from the partent web\n     * @param additionalSettings Will be passed as part of the web creation body\n     */\n    add(title, url, description = \"\", template = \"STS\", language = 1033, inheritPermissions = true, additionalSettings = {}) {\n        let props = util_1.Util.extend({\n            Description: description,\n            Language: language,\n            Title: title,\n            Url: url,\n            UseSamePermissionsAsParentSite: inheritPermissions,\n            WebTemplate: template,\n        }, additionalSettings);\n        let postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\n            }, props),\n        });\n        let q = new Webs(this, \"add\");\n        return q.post({ body: postBody }).then((data) => {\n            return {\n                data: data,\n                web: new Web(odata_1.extractOdataId(data).replace(/_api\\/web\\/?/i, \"\")),\n            };\n        });\n    }\n}\nexports.Webs = Webs;\n/**\n * Describes a web\n *\n */\nclass Web extends queryablesecurable_1.QueryableSecurable {\n    constructor(baseUrl, path = \"_api/web\") {\n        super(baseUrl, path);\n    }\n    get webs() {\n        return new Webs(this);\n    }\n    /**\n     * Get the content types available in this web\n     *\n     */\n    get contentTypes() {\n        return new contenttypes_1.ContentTypes(this);\n    }\n    /**\n     * Get the lists in this web\n     *\n     */\n    get lists() {\n        return new lists_1.Lists(this);\n    }\n    /**\n     * Gets the fields in this web\n     *\n     */\n    get fields() {\n        return new fields_1.Fields(this);\n    }\n    /**\n     * Gets the active features for this web\n     *\n     */\n    get features() {\n        return new features_1.Features(this);\n    }\n    /**\n     * Gets the available fields in this web\n     *\n     */\n    get availablefields() {\n        return new fields_1.Fields(this, \"availablefields\");\n    }\n    /**\n     * Get the navigation options in this web\n     *\n     */\n    get navigation() {\n        return new navigation_1.Navigation(this);\n    }\n    /**\n     * Gets the site users\n     *\n     */\n    get siteUsers() {\n        return new siteusers_1.SiteUsers(this);\n    }\n    /**\n     * Gets the site groups\n     *\n     */\n    get siteGroups() {\n        return new sitegroups_1.SiteGroups(this);\n    }\n    /**\n     * Gets the current user\n     */\n    get currentUser() {\n        return new siteusers_1.CurrentUser(this);\n    }\n    /**\n     * Get the folders in this web\n     *\n     */\n    get folders() {\n        return new folders_1.Folders(this);\n    }\n    /**\n     * Get all custom actions on a site\n     *\n     */\n    get userCustomActions() {\n        return new usercustomactions_1.UserCustomActions(this);\n    }\n    /**\n     * Gets the collection of RoleDefinition resources.\n     *\n     */\n    get roleDefinitions() {\n        return new roles_1.RoleDefinitions(this);\n    }\n    /**\n     * Creates a new batch for requests within the context of context this web\n     *\n     */\n    createBatch() {\n        return new odata_1.ODataBatch(this.parentUrl);\n    }\n    /**\n     * Get a folder by server relative url\n     *\n     * @param folderRelativeUrl the server relative path to the folder (including /sites/ if applicable)\n     */\n    getFolderByServerRelativeUrl(folderRelativeUrl) {\n        return new folders_1.Folder(this, `getFolderByServerRelativeUrl('${folderRelativeUrl}')`);\n    }\n    /**\n     * Get a file by server relative url\n     *\n     * @param fileRelativeUrl the server relative path to the file (including /sites/ if applicable)\n     */\n    getFileByServerRelativeUrl(fileRelativeUrl) {\n        return new files_1.File(this, `getFileByServerRelativeUrl('${fileRelativeUrl}')`);\n    }\n    /**\n     * Get a list by server relative url (list's root folder)\n     *\n     * @param listRelativeUrl the server relative path to the list's root folder (including /sites/ if applicable)\n     */\n    getList(listRelativeUrl) {\n        return new lists_2.List(this, `getList('${listRelativeUrl}')`);\n    }\n    /**\n     * Updates this web intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the web\n     */\n    update(properties) {\n        let postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.Web\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then((data) => {\n            return {\n                data: data,\n                web: this,\n            };\n        });\n    }\n    /**\n     * Delete this web\n     *\n     */\n    delete() {\n        return super.delete();\n    }\n    /**\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site.\n     *\n     * @param colorPaletteUrl Server-relative URL of the color palette file.\n     * @param fontSchemeUrl Server-relative URL of the font scheme.\n     * @param backgroundImageUrl Server-relative URL of the background image.\n     * @param shareGenerated true to store the generated theme files in the root site, or false to store them in this site.\n     */\n    applyTheme(colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\n        let postBody = JSON.stringify({\n            backgroundImageUrl: backgroundImageUrl,\n            colorPaletteUrl: colorPaletteUrl,\n            fontSchemeUrl: fontSchemeUrl,\n            shareGenerated: shareGenerated,\n        });\n        let q = new Web(this, \"applytheme\");\n        return q.post({ body: postBody });\n    }\n    /**\n     * Applies the specified site definition or site template to the Web site that has no template applied to it.\n     *\n     * @param template Name of the site definition or the name of the site template\n     */\n    applyWebTemplate(template) {\n        let q = new Web(this, \"applywebtemplate\");\n        q.concat(`(@t)`);\n        q.query.add(\"@t\", template);\n        return q.post();\n    }\n    /**\n     * Returns whether the current user has the given set of permissions.\n     *\n     * @param perms The high and low permission range.\n     */\n    doesUserHavePermissions(perms) {\n        let q = new Web(this, \"doesuserhavepermissions\");\n        q.concat(`(@p)`);\n        q.query.add(\"@p\", JSON.stringify(perms));\n        return q.get();\n    }\n    /**\n     * Checks whether the specified login name belongs to a valid user in the site. If the user doesn't exist, adds the user to the site.\n     *\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\n     */\n    ensureUser(loginName) {\n        // TODO:: this should resolve to a User\n        let postBody = JSON.stringify({\n            logonName: loginName,\n        });\n        let q = new Web(this, \"ensureuser\");\n        return q.post({ body: postBody });\n    }\n    /**\n     * Returns a collection of site templates available for the site.\n     *\n     * @param language The LCID of the site templates to get.\n     * @param true to include language-neutral site templates; otherwise false\n     */\n    availableWebTemplates(language = 1033, includeCrossLanugage = true) {\n        return new queryable_1.QueryableCollection(this, `getavailablewebtemplates(lcid=${language}, doincludecrosslanguage=${includeCrossLanugage})`);\n    }\n    /**\n     * Returns the list gallery on the site.\n     *\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\n     */\n    getCatalog(type) {\n        let q = new Web(this, `getcatalog(${type})`);\n        q.select(\"Id\");\n        return q.get().then((data) => {\n            return new lists_2.List(odata_1.extractOdataId(data));\n        });\n    }\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\n     */\n    getChanges(query) {\n        let postBody = JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\n        // don't change \"this\" instance, make a new one\n        let q = new Web(this, \"getchanges\");\n        return q.post({ body: postBody });\n    }\n    /**\n     * Gets the custom list templates for the site.\n     *\n     */\n    get customListTemplate() {\n        return new queryable_1.QueryableCollection(this, \"getcustomlisttemplates\");\n    }\n    /**\n     * Returns the user corresponding to the specified member identifier for the current site.\n     *\n     * @param id The ID of the user.\n     */\n    getUserById(id) {\n        return new siteusers_1.SiteUser(this, `getUserById(${id})`);\n    }\n    /**\n     * Returns the name of the image file for the icon that is used to represent the specified file.\n     *\n     * @param filename The file name. If this parameter is empty, the server returns an empty string.\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1.\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\n     */\n    mapToIcon(filename, size = 0, progId = \"\") {\n        let q = new Web(this, `maptoicon(filename='${filename}', progid='${progId}', size=${size})`);\n        return q.get();\n    }\n}\nexports.Web = Web;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/webs.js","\"use strict\";\nconst roles_1 = require(\"./roles\");\nconst queryable_1 = require(\"./queryable\");\nclass QueryableSecurable extends queryable_1.QueryableInstance {\n    /**\n     * Gets the set of role assignments for this item\n     *\n     */\n    get roleAssignments() {\n        return new roles_1.RoleAssignments(this);\n    }\n    /**\n     * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\n     *\n     */\n    get firstUniqueAncestorSecurableObject() {\n        return new queryable_1.QueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\n    }\n    /**\n     * Gets the effective permissions for the user supplied\n     *\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\n     */\n    getUserEffectivePermissions(loginName) {\n        let perms = new queryable_1.Queryable(this, \"getUserEffectivePermissions(@user)\");\n        perms.query.add(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return perms;\n    }\n    /**\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\n     *\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\n     */\n    breakRoleInheritance(copyRoleAssignments = false, clearSubscopes = false) {\n        class Breaker extends queryable_1.Queryable {\n            constructor(baseUrl, copy, clear) {\n                super(baseUrl, `breakroleinheritance(copyroleassignments=${copy}, clearsubscopes=${clear})`);\n            }\n            break() {\n                return this.post();\n            }\n        }\n        let b = new Breaker(this, copyRoleAssignments, clearSubscopes);\n        return b.break();\n    }\n    /**\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\n     *\n     */\n    resetRoleInheritance() {\n        class Resetter extends queryable_1.Queryable {\n            constructor(baseUrl) {\n                super(baseUrl, \"resetroleinheritance\");\n            }\n            reset() {\n                return this.post();\n            }\n        }\n        let r = new Resetter(this);\n        return r.reset();\n    }\n}\nexports.QueryableSecurable = QueryableSecurable;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/queryablesecurable.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst sitegroups_1 = require(\"./sitegroups\");\nconst util_1 = require(\"../utils/util\");\n/**\n * Describes a set of role assignments for the current scope\n *\n */\nclass RoleAssignments extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the RoleAssignments class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path = \"roleassignments\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Adds a new role assignment with the specified principal and role definitions to the collection.\n     *\n     * @param principalId The ID of the user or group to assign permissions to\n     * @param roleDefId The ID of the role definition that defines the permissions to assign\n     *\n     */\n    add(principalId, roleDefId) {\n        let a = new RoleAssignments(this, `addroleassignment(principalid=${principalId}, roledefid=${roleDefId})`);\n        return a.post();\n    }\n    /**\n     * Removes the role assignment with the specified principal and role definition from the collection\n     *\n     * @param principalId The ID of the user or group in the role assignment.\n     * @param roleDefId The ID of the role definition in the role assignment\n     *\n     */\n    remove(principalId, roleDefId) {\n        let a = new RoleAssignments(this, `removeroleassignment(principalid=${principalId}, roledefid=${roleDefId})`);\n        return a.post();\n    }\n    /**\n     * Gets the role assignment associated with the specified principal ID from the collection.\n     *\n     * @param id The id of the role assignment\n     */\n    getById(id) {\n        let ra = new RoleAssignment(this);\n        ra.concat(`(${id})`);\n        return ra;\n    }\n}\nexports.RoleAssignments = RoleAssignments;\nclass RoleAssignment extends queryable_1.QueryableInstance {\n    /**\n * Creates a new instance of the RoleAssignment class\n *\n * @param baseUrl The url or Queryable which forms the parent of this fields collection\n */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    get groups() {\n        return new sitegroups_1.SiteGroups(this, \"groups\");\n    }\n    /**\n     * Get the role definition bindings for this role assignment\n     *\n     */\n    get bindings() {\n        return new RoleDefinitionBindings(this);\n    }\n    /**\n     * Delete this role assignment\n     *\n     */\n    delete() {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    }\n}\nexports.RoleAssignment = RoleAssignment;\nclass RoleDefinitions extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the RoleDefinitions class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path\n     *\n     */\n    constructor(baseUrl, path = \"roledefinitions\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets the role definition with the specified ID from the collection.\n     *\n     * @param id The ID of the role definition.\n     *\n     */\n    getById(id) {\n        return new RoleDefinition(this, `getById(${id})`);\n    }\n    /**\n     * Gets the role definition with the specified name.\n     *\n     * @param name The name of the role definition.\n     *\n     */\n    getByName(name) {\n        return new RoleDefinition(this, `getbyname('${name}')`);\n    }\n    /**\n     * Gets the role definition with the specified type.\n     *\n     * @param name The name of the role definition.\n     *\n     */\n    getByType(roleTypeKind) {\n        return new RoleDefinition(this, `getbytype(${roleTypeKind})`);\n    }\n    /**\n     * Create a role definition\n     *\n     * @param name The new role definition's name\n     * @param description The new role definition's description\n     * @param order The order in which the role definition appears\n     * @param basePermissions The permissions mask for this role definition\n     *\n     */\n    add(name, description, order, basePermissions) {\n        let postBody = JSON.stringify({\n            BasePermissions: util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\n            Description: description,\n            Name: name,\n            Order: order,\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\n        });\n        return this.post({ body: postBody }).then((data) => {\n            return {\n                data: data,\n                definition: this.getById(data.Id),\n            };\n        });\n    }\n}\nexports.RoleDefinitions = RoleDefinitions;\nclass RoleDefinition extends queryable_1.QueryableInstance {\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Updates this web intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the web\n     */\n    /* tslint:disable no-string-literal */\n    update(properties) {\n        if (typeof properties.hasOwnProperty(\"BasePermissions\") !== \"undefined\") {\n            properties[\"BasePermissions\"] = util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, properties[\"BasePermissions\"]);\n        }\n        let postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.RoleDefinition\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then((data) => {\n            let retDef = this;\n            if (properties.hasOwnProperty(\"Name\")) {\n                let parent = this.getParent(RoleDefinitions, this.parentUrl, \"\");\n                retDef = parent.getByName(properties[\"Name\"]);\n            }\n            return {\n                data: data,\n                definition: retDef,\n            };\n        });\n    }\n    /* tslint:enable */\n    /**\n     * Delete this role definition\n     *\n     */\n    delete() {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    }\n}\nexports.RoleDefinition = RoleDefinition;\nclass RoleDefinitionBindings extends queryable_1.QueryableCollection {\n    constructor(baseUrl, path = \"roledefinitionbindings\") {\n        super(baseUrl, path);\n    }\n}\nexports.RoleDefinitionBindings = RoleDefinitionBindings;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/roles.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst siteusers_1 = require(\"./siteusers\");\nconst util_1 = require(\"../utils/util\");\n/**\n * Principal Type enum\n *\n */\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\n/**\n * Describes a collection of site users\n *\n */\nclass SiteGroups extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the SiteUsers class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user collection\n     */\n    constructor(baseUrl, path = \"sitegroups\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Adds a new group to the site collection\n     *\n     * @param props The properties to be updated\n     */\n    add(properties) {\n        let postBody = JSON.stringify(util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties));\n        return this.post({ body: postBody }).then((data) => {\n            return {\n                data: data,\n                group: this.getById(data.Id),\n            };\n        });\n    }\n    /**\n     * Gets a group from the collection by name\n     *\n     * @param email The name of the group\n     */\n    getByName(groupName) {\n        return new SiteGroup(this, `getByName('${groupName}')`);\n    }\n    /**\n     * Gets a group from the collection by id\n     *\n     * @param id The id of the group\n     */\n    getById(id) {\n        let sg = new SiteGroup(this);\n        sg.concat(`(${id})`);\n        return sg;\n    }\n    /**\n     * Removes the group with the specified member ID from the collection.\n     *\n     * @param id The id of the group to remove\n     */\n    removeById(id) {\n        let g = new SiteGroups(this, `removeById('${id}')`);\n        return g.post();\n    }\n    /**\n     * Removes a user from the collection by login name\n     *\n     * @param loginName The login name of the user\n     */\n    removeByLoginName(loginName) {\n        let g = new SiteGroups(this, `removeByLoginName('${loginName}')`);\n        return g.post();\n    }\n}\nexports.SiteGroups = SiteGroups;\n/**\n * Describes a single group\n *\n */\nclass SiteGroup extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the Group class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this site group\n     * @param path Optional, passes the path to the group\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Get's the users for this group\n     *\n     */\n    get users() {\n        return new siteusers_1.SiteUsers(this, \"users\");\n    }\n    /**\n    * Updates this group instance with the supplied properties\n    *\n    * @param properties A GroupWriteableProperties object of property names and values to update for the user\n    */\n    /* tslint:disable no-string-literal */\n    update(properties) {\n        let postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties);\n        return this.post({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then((data) => {\n            let retGroup = this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retGroup = this.getParent(SiteGroup, this.parentUrl, `getByName('${properties[\"Title\"]}')`);\n            }\n            return {\n                data: data,\n                group: retGroup,\n            };\n        });\n    }\n}\nexports.SiteGroup = SiteGroup;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/sitegroups.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst sitegroups_1 = require(\"./sitegroups\");\nconst util_1 = require(\"../utils/util\");\n/**\n * Describes a collection of all site collection users\n *\n */\nclass SiteUsers extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the Users class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user collection\n     */\n    constructor(baseUrl, path = \"siteusers\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a user from the collection by email\n     *\n     * @param email The email of the user\n     */\n    getByEmail(email) {\n        return new SiteUser(this, `getByEmail('${email}')`);\n    }\n    /**\n     * Gets a user from the collection by id\n     *\n     * @param id The id of the user\n     */\n    getById(id) {\n        return new SiteUser(this, `getById(${id})`);\n    }\n    /**\n     * Gets a user from the collection by login name\n     *\n     * @param loginName The email address of the user\n     */\n    getByLoginName(loginName) {\n        let su = new SiteUser(this);\n        su.concat(\"(@v)\");\n        su.query.add(\"@v\", encodeURIComponent(loginName));\n        return su;\n    }\n    /**\n     * Removes a user from the collection by id\n     *\n     * @param id The id of the user\n     */\n    removeById(id) {\n        let o = new SiteUsers(this, `removeById(${id})`);\n        return o.post();\n    }\n    /**\n     * Removes a user from the collection by login name\n     *\n     * @param loginName The login name of the user\n     */\n    removeByLoginName(loginName) {\n        let o = new SiteUsers(this, `removeByLoginName(@v)`);\n        o.query.add(\"@v\", encodeURIComponent(loginName));\n        return o.post();\n    }\n    /**\n     * Add a user to a group\n     *\n     * @param loginName The login name of the user to add to the group\n     *\n     */\n    add(loginName) {\n        let postBody = JSON.stringify({ \"__metadata\": { \"type\": \"SP.User\" }, LoginName: loginName });\n        return this.post({ body: postBody }).then(() => this.getByLoginName(loginName));\n    }\n}\nexports.SiteUsers = SiteUsers;\n/**\n * Describes a single user\n *\n */\nclass SiteUser extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the User class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional, passes the path to the user\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Get's the groups for this user.\n     *\n     */\n    get groups() {\n        return new sitegroups_1.SiteGroups(this, \"groups\");\n    }\n    /**\n    * Updates this user instance with the supplied properties\n    *\n    * @param properties A plain object of property names and values to update for the user\n    */\n    update(properties) {\n        let postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.User\" } }, properties);\n        return this.post({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then((data) => {\n            return {\n                data: data,\n                user: this,\n            };\n        });\n    }\n    /**\n     * Delete this user\n     *\n     */\n    delete() {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    }\n}\nexports.SiteUser = SiteUser;\n/**\n * Represents the current user\n */\nclass CurrentUser extends queryable_1.QueryableInstance {\n    constructor(baseUrl, path = \"currentuser\") {\n        super(baseUrl, path);\n    }\n}\nexports.CurrentUser = CurrentUser;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/siteusers.js","\"use strict\";\nconst items_1 = require(\"./items\");\nconst views_1 = require(\"./views\");\nconst contenttypes_1 = require(\"./contenttypes\");\nconst fields_1 = require(\"./fields\");\nconst forms_1 = require(\"./forms\");\nconst subscriptions_1 = require(\"./subscriptions\");\nconst queryable_1 = require(\"./queryable\");\nconst queryablesecurable_1 = require(\"./queryablesecurable\");\nconst util_1 = require(\"../utils/util\");\nconst usercustomactions_1 = require(\"./usercustomactions\");\nconst odata_1 = require(\"./odata\");\nconst exceptions_1 = require(\"../utils/exceptions\");\n/**\n * Describes a collection of List objects\n *\n */\nclass Lists extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path = \"lists\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a list from the collection by title\n     *\n     * @param title The title of the list\n     */\n    getByTitle(title) {\n        return new List(this, `getByTitle('${title}')`);\n    }\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the list (GUID)\n     */\n    getById(id) {\n        let list = new List(this);\n        list.concat(`('${id}')`);\n        return list;\n    }\n    /**\n     * Adds a new list to the collection\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body\n     */\n    add(title, description = \"\", template = 100, enableContentTypes = false, additionalSettings = {}) {\n        let postBody = JSON.stringify(util_1.Util.extend({\n            \"AllowContentTypes\": enableContentTypes,\n            \"BaseTemplate\": template,\n            \"ContentTypesEnabled\": enableContentTypes,\n            \"Description\": description,\n            \"Title\": title,\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, additionalSettings));\n        return this.post({ body: postBody }).then((data) => {\n            return { data: data, list: this.getByTitle(title) };\n        });\n    }\n    /**\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\n     */\n    ensure(title, description = \"\", template = 100, enableContentTypes = false, additionalSettings = {}) {\n        if (this.hasBatch) {\n            throw new exceptions_1.NotSupportedInBatchException(\"The ensure list method\");\n        }\n        return new Promise((resolve, reject) => {\n            let list = this.getByTitle(title);\n            list.get().then(_ => {\n                list.update(additionalSettings).then(d => {\n                    resolve({ created: false, data: d, list: list });\n                }).catch(e => reject(e));\n            }).catch(_ => {\n                this.add(title, description, template, enableContentTypes, additionalSettings).then((r) => {\n                    resolve({ created: true, data: r.data, list: this.getByTitle(title) });\n                }).catch((e) => reject(e));\n            });\n        });\n    }\n    /**\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\n     */\n    ensureSiteAssetsLibrary() {\n        let q = new Lists(this, \"ensuresiteassetslibrary\");\n        return q.post().then((json) => {\n            return new List(odata_1.extractOdataId(json));\n        });\n    }\n    /**\n     * Gets a list that is the default location for wiki pages.\n     */\n    ensureSitePagesLibrary() {\n        let q = new Lists(this, \"ensuresitepageslibrary\");\n        return q.post().then((json) => {\n            return new List(odata_1.extractOdataId(json));\n        });\n    }\n}\nexports.Lists = Lists;\n/**\n * Describes a single List instance\n *\n */\nclass List extends queryablesecurable_1.QueryableSecurable {\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets the content types in this list\n     *\n     */\n    get contentTypes() {\n        return new contenttypes_1.ContentTypes(this);\n    }\n    /**\n     * Gets the items in this list\n     *\n     */\n    get items() {\n        return new items_1.Items(this);\n    }\n    /**\n     * Gets the views in this list\n     *\n     */\n    get views() {\n        return new views_1.Views(this);\n    }\n    /**\n     * Gets the fields in this list\n     *\n     */\n    get fields() {\n        return new fields_1.Fields(this);\n    }\n    /**\n     * Gets the forms in this list\n     *\n     */\n    get forms() {\n        return new forms_1.Forms(this);\n    }\n    /**\n     * Gets the default view of this list\n     *\n     */\n    get defaultView() {\n        return new queryable_1.QueryableInstance(this, \"DefaultView\");\n    }\n    /**\n     * Get all custom actions on a site collection\n     *\n     */\n    get userCustomActions() {\n        return new usercustomactions_1.UserCustomActions(this);\n    }\n    /**\n     * Gets the effective base permissions of this list\n     *\n     */\n    get effectiveBasePermissions() {\n        return new queryable_1.Queryable(this, \"EffectiveBasePermissions\");\n    }\n    /**\n     * Gets the event receivers attached to this list\n     *\n     */\n    get eventReceivers() {\n        return new queryable_1.QueryableCollection(this, \"EventReceivers\");\n    }\n    /**\n     * Gets the related fields of this list\n     *\n     */\n    get relatedFields() {\n        return new queryable_1.Queryable(this, \"getRelatedFields\");\n    }\n    /**\n     * Gets the IRM settings for this list\n     *\n     */\n    get informationRightsManagementSettings() {\n        return new queryable_1.Queryable(this, \"InformationRightsManagementSettings\");\n    }\n    /**\n     * Gets the webhook subscriptions of this list\n     *\n     */\n    get subscriptions() {\n        return new subscriptions_1.Subscriptions(this);\n    }\n    /**\n     * Gets a view by view guid id\n     *\n     */\n    getView(viewId) {\n        return new views_1.View(this, `getView('${viewId}')`);\n    }\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    /* tslint:disable no-string-literal */\n    update(properties, eTag = \"*\") {\n        let postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then((data) => {\n            let retList = this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retList = this.getParent(List, this.parentUrl, `getByTitle('${properties[\"Title\"]}')`);\n            }\n            return {\n                data: data,\n                list: retList,\n            };\n        });\n    }\n    /* tslint:enable */\n    /**\n     * Delete this list\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    delete(eTag = \"*\") {\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    }\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\n     */\n    getChanges(query) {\n        let postBody = JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\n        // don't change \"this\" instance of the List, make a new one\n        let q = new List(this, \"getchanges\");\n        return q.post({ body: postBody });\n    }\n    /**\n     * Returns a collection of items from the list based on the specified query.\n     *\n     * @param CamlQuery The Query schema of Collaborative Application Markup\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\n     * to define queries against list data.\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\n     *\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\n     * the Entry or Collection of Entries identified by the Resource Path\n     * section of the URI must be represented inline (i.e. eagerly loaded).\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\n     *\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\n     */\n    getItemsByCAMLQuery(query, ...expands) {\n        let postBody = JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) });\n        // don't change \"this\" instance of the List, make a new one\n        let q = new List(this, \"getitems\");\n        q = q.expand.apply(q, expands);\n        return q.post({ body: postBody });\n    }\n    /**\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\n     */\n    getListItemChangesSinceToken(query) {\n        let postBody = JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) });\n        // don't change \"this\" instance of the List, make a new one\n        let q = new List(this, \"getlistitemchangessincetoken\");\n        // note we are using a custom parser to return text as the response is an xml doc\n        return q.post({ body: postBody }, { parse(r) { return r.text(); } });\n    }\n    /**\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    recycle() {\n        this.append(\"recycle\");\n        return this.post().then(data => {\n            if (data.hasOwnProperty(\"Recycle\")) {\n                return data.Recycle;\n            }\n            else {\n                return data;\n            }\n        });\n    }\n    /**\n     * Renders list data based on the view xml provided\n     */\n    renderListData(viewXml) {\n        // don't change \"this\" instance of the List, make a new one\n        let q = new List(this, \"renderlistdata(@viewXml)\");\n        q.query.add(\"@viewXml\", \"'\" + viewXml + \"'\");\n        return q.post().then(data => {\n            // data will be a string, so we parse it again\n            data = JSON.parse(data);\n            if (data.hasOwnProperty(\"RenderListData\")) {\n                return data.RenderListData;\n            }\n            else {\n                return data;\n            }\n        });\n    }\n    /**\n     * Gets the field values and field schema attributes for a list item.\n     */\n    renderListFormData(itemId, formId, mode) {\n        // don't change \"this\" instance of the List, make a new one\n        let q = new List(this, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode=\" + mode + \")\");\n        return q.post().then(data => {\n            // data will be a string, so we parse it again\n            data = JSON.parse(data);\n            if (data.hasOwnProperty(\"ListData\")) {\n                return data.ListData;\n            }\n            else {\n                return data;\n            }\n        });\n    }\n    /**\n     * Reserves a list item ID for idempotent list item creation.\n     */\n    reserveListItemId() {\n        // don't change \"this\" instance of the List, make a new one\n        let q = new List(this, \"reservelistitemid\");\n        return q.post().then(data => {\n            if (data.hasOwnProperty(\"ReserveListItemId\")) {\n                return data.ReserveListItemId;\n            }\n            else {\n                return data;\n            }\n        });\n    }\n    /**\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items\n     *\n     */\n    getListItemEntityTypeFullName() {\n        let q = new queryable_1.QueryableInstance(this);\n        return q.select(\"ListItemEntityTypeFullName\").getAs().then(o => o.ListItemEntityTypeFullName);\n    }\n}\nexports.List = List;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/lists.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst queryablesecurable_1 = require(\"./queryablesecurable\");\nconst folders_1 = require(\"./folders\");\nconst files_1 = require(\"./files\");\nconst contenttypes_1 = require(\"./contenttypes\");\nconst util_1 = require(\"../utils/util\");\nconst odata_1 = require(\"./odata\");\nconst attachmentfiles_1 = require(\"./attachmentfiles\");\nconst lists_1 = require(\"./lists\");\n/**\n * Describes a collection of Item objects\n *\n */\nclass Items extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the Items class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path = \"items\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets an Item by id\n     *\n     * @param id The integer id of the item to retrieve\n     */\n    getById(id) {\n        let i = new Item(this);\n        i.concat(`(${id})`);\n        return i;\n    }\n    /**\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\n     *\n     * @param skip The starting id where the page should start, use with top to specify pages\n     */\n    skip(skip) {\n        this._query.add(\"$skiptoken\", encodeURIComponent(`Paged=TRUE&p_ID=${skip}`));\n        return this;\n    }\n    /**\n     * Gets a collection designed to aid in paging through data\n     *\n     */\n    getPaged() {\n        return this.getAs(new PagedItemCollectionParser());\n    }\n    /**\n     * Adds a new item to the collection\n     *\n     * @param properties The new items's properties\n     */\n    add(properties = {}, listItemEntityTypeFullName = null) {\n        let doAdd = (listItemEntityType) => {\n            let postBody = JSON.stringify(util_1.Util.extend({\n                \"__metadata\": { \"type\": listItemEntityType },\n            }, properties));\n            return this.postAs({ body: postBody }).then((data) => {\n                return {\n                    data: data,\n                    item: this.getById(data.Id),\n                };\n            });\n        };\n        if (!listItemEntityTypeFullName) {\n            let parentList = this.getParent(lists_1.List);\n            let removeDependency = this.addBatchDependency();\n            return parentList.getListItemEntityTypeFullName().then(n => {\n                let promise = doAdd(n);\n                removeDependency();\n                return promise;\n            });\n        }\n        else {\n            return doAdd(listItemEntityTypeFullName);\n        }\n    }\n}\nexports.Items = Items;\n/**\n * Descrines a single Item instance\n *\n */\nclass Item extends queryablesecurable_1.QueryableSecurable {\n    /**\n     * Creates a new instance of the Items class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets the set of attachments for this item\n     *\n     */\n    get attachmentFiles() {\n        return new attachmentfiles_1.AttachmentFiles(this);\n    }\n    /**\n     * Gets the content type for this item\n     *\n     */\n    get contentType() {\n        return new contenttypes_1.ContentType(this, \"ContentType\");\n    }\n    /**\n     * Gets the effective base permissions for the item\n     *\n     */\n    get effectiveBasePermissions() {\n        return new queryable_1.Queryable(this, \"EffectiveBasePermissions\");\n    }\n    /**\n     * Gets the effective base permissions for the item in a UI context\n     *\n     */\n    get effectiveBasePermissionsForUI() {\n        return new queryable_1.Queryable(this, \"EffectiveBasePermissionsForUI\");\n    }\n    /**\n     * Gets the field values for this list item in their HTML representation\n     *\n     */\n    get fieldValuesAsHTML() {\n        return new queryable_1.QueryableInstance(this, \"FieldValuesAsHTML\");\n    }\n    /**\n     * Gets the field values for this list item in their text representation\n     *\n     */\n    get fieldValuesAsText() {\n        return new queryable_1.QueryableInstance(this, \"FieldValuesAsText\");\n    }\n    /**\n     * Gets the field values for this list item for use in editing controls\n     *\n     */\n    get fieldValuesForEdit() {\n        return new queryable_1.QueryableInstance(this, \"FieldValuesForEdit\");\n    }\n    /**\n     * Gets the folder associated with this list item (if this item represents a folder)\n     *\n     */\n    get folder() {\n        return new folders_1.Folder(this, \"folder\");\n    }\n    /**\n     * Gets the folder associated with this list item (if this item represents a folder)\n     *\n     */\n    get file() {\n        return new files_1.File(this, \"file\");\n    }\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    update(properties, eTag = \"*\") {\n        return new Promise((resolve, reject) => {\n            let removeDependency = this.addBatchDependency();\n            let parentList = this.getParent(queryable_1.QueryableInstance, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\")));\n            parentList.select(\"ListItemEntityTypeFullName\").getAs().then((d) => {\n                let postBody = JSON.stringify(util_1.Util.extend({\n                    \"__metadata\": { \"type\": d.ListItemEntityTypeFullName },\n                }, properties));\n                this.post({\n                    body: postBody,\n                    headers: {\n                        \"IF-Match\": eTag,\n                        \"X-HTTP-Method\": \"MERGE\",\n                    },\n                }, new ItemUpdatedParser()).then((data) => {\n                    removeDependency();\n                    resolve({\n                        data: data,\n                        item: this,\n                    });\n                });\n            }).catch(e => reject(e));\n        });\n    }\n    /**\n     * Delete this item\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    delete(eTag = \"*\") {\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    }\n    /**\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    recycle() {\n        let i = new Item(this, \"recycle\");\n        return i.post();\n    }\n    /**\n     * Gets a string representation of the full URL to the WOPI frame.\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\n     *\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\n     */\n    getWopiFrameUrl(action = 0) {\n        let i = new Item(this, \"getWOPIFrameUrl(@action)\");\n        i._query.add(\"@action\", action);\n        return i.post().then((data) => {\n            return data.GetWOPIFrameUrl;\n        });\n    }\n    /**\n     * Validates and sets the values of the specified collection of fields for the list item.\n     *\n     * @param formValues The fields to change and their new values.\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\n     */\n    /* tslint:disable max-line-length */\n    validateUpdateListItem(formValues, newDocumentUpdate = false) {\n        let postBody = JSON.stringify({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate });\n        let item = new Item(this, \"validateupdatelistitem\");\n        return item.post({ body: postBody });\n    }\n}\nexports.Item = Item;\n/**\n * Provides paging functionality for list items\n */\nclass PagedItemCollection {\n    constructor(nextUrl, results) {\n        this.nextUrl = nextUrl;\n        this.results = results;\n    }\n    /**\n     * If true there are more results available in the set, otherwise there are not\n     */\n    get hasNext() {\n        return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\n    }\n    /**\n     * Gets the next set of results, or resolves to null if no results are available\n     */\n    getNext() {\n        if (this.hasNext) {\n            let items = new Items(this.nextUrl, null);\n            return items.getPaged();\n        }\n        return new Promise(r => r(null));\n    }\n}\nexports.PagedItemCollection = PagedItemCollection;\nclass PagedItemCollectionParser extends odata_1.ODataParserBase {\n    parse(r) {\n        return new Promise((resolve, reject) => {\n            if (this.handleError(r, reject)) {\n                r.json().then(json => {\n                    let nextUrl = json.hasOwnProperty(\"d\") && json.d.hasOwnProperty(\"__next\") ? json.d.__next : json[\"odata.nextLink\"];\n                    resolve(new PagedItemCollection(nextUrl, this.parseODataJSON(json)));\n                });\n            }\n        });\n    }\n}\nclass ItemUpdatedParser extends odata_1.ODataParserBase {\n    parse(r) {\n        return new Promise((resolve, reject) => {\n            if (this.handleError(r, reject)) {\n                resolve({\n                    \"odata.etag\": r.headers.get(\"etag\"),\n                });\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/items.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst files_1 = require(\"./files\");\n/**\n * Describes a collection of Folder objects\n *\n */\nclass Folders extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the Folders class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path = \"folders\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a folder by folder name\n     *\n     */\n    getByName(name) {\n        let f = new Folder(this);\n        f.concat(`('${name}')`);\n        return f;\n    }\n    /**\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\n     *\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\n     * @returns The new Folder and the raw response.\n     */\n    add(url) {\n        return new Folders(this, `add('${url}')`).post().then((response) => {\n            return {\n                data: response,\n                folder: this.getByName(url),\n            };\n        });\n    }\n}\nexports.Folders = Folders;\n/**\n * Describes a single Folder instance\n *\n */\nclass Folder extends queryable_1.QueryableInstance {\n    //\n    // TODO:\n    //      Properties (https://msdn.microsoft.com/en-us/library/office/dn450841.aspx#bk_FolderProperties)\n    //          UniqueContentTypeOrder (setter)\n    //          WelcomePage (setter)\n    //\n    /**\n     * Creates a new instance of the Folder class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Specifies the sequence in which content types are displayed.\n     *\n     */\n    get contentTypeOrder() {\n        return new queryable_1.QueryableCollection(this, \"contentTypeOrder\");\n    }\n    /**\n     * Gets this folder's files\n     *\n     */\n    get files() {\n        return new files_1.Files(this);\n    }\n    /**\n     * Gets this folder's sub folders\n     *\n     */\n    get folders() {\n        return new Folders(this);\n    }\n    /**\n     * Gets this folder's list item field values\n     *\n     */\n    get listItemAllFields() {\n        return new queryable_1.QueryableCollection(this, \"listItemAllFields\");\n    }\n    /**\n     * Gets the parent folder, if available\n     *\n     */\n    get parentFolder() {\n        return new Folder(this, \"parentFolder\");\n    }\n    /**\n     * Gets this folder's properties\n     *\n     */\n    get properties() {\n        return new queryable_1.QueryableInstance(this, \"properties\");\n    }\n    /**\n     * Gets this folder's server relative url\n     *\n     */\n    get serverRelativeUrl() {\n        return new queryable_1.Queryable(this, \"serverRelativeUrl\");\n    }\n    /**\n     * Gets a value that specifies the content type order.\n     *\n     */\n    get uniqueContentTypeOrder() {\n        return new queryable_1.QueryableCollection(this, \"uniqueContentTypeOrder\");\n    }\n    /**\n    * Delete this folder\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    delete(eTag = \"*\") {\n        return new Folder(this).post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    }\n    /**\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    recycle() {\n        return new Folder(this, \"recycle\").post();\n    }\n}\nexports.Folder = Folder;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/folders.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst odata_1 = require(\"./odata\");\nconst util_1 = require(\"../utils/util\");\nconst exceptions_1 = require(\"../utils/exceptions\");\nconst webparts_1 = require(\"./webparts\");\n/**\n * Describes a collection of File objects\n *\n */\nclass Files extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the Files class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path = \"files\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    getByName(name) {\n        let f = new File(this);\n        f.concat(`('${name}')`);\n        return f;\n    }\n    /**\n     * Uploads a file.\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The file contents blob.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @returns The new File and the raw response.\n     */\n    add(url, content, shouldOverWrite = true) {\n        return new Files(this, `add(overwrite=${shouldOverWrite},url='${url}')`)\n            .post({\n            body: content,\n        }).then((response) => {\n            return {\n                data: response,\n                file: this.getByName(url),\n            };\n        });\n    }\n    /**\n     * Uploads a file.\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The Blob file content to add\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     * @returns The new File and the raw response.\n     */\n    addChunked(url, content, progress, shouldOverWrite = true, chunkSize = 10485760) {\n        let adder = new Files(this, `add(overwrite=${shouldOverWrite},url='${url}')`);\n        return adder.post().then(() => this.getByName(url)).then(file => file.setContentChunked(content, progress, chunkSize)).then((response) => {\n            return {\n                data: response,\n                file: this.getByName(url),\n            };\n        });\n    }\n    /**\n     * Adds a ghosted file to an existing list or document library.\n     *\n     * @param fileUrl The server-relative url where you want to save the file.\n     * @param templateFileType The type of use to create the file.\n     * @returns The template file that was added and the raw response.\n     */\n    addTemplateFile(fileUrl, templateFileType) {\n        return new Files(this, `addTemplateFile(urloffile='${fileUrl}',templatefiletype=${templateFileType})`)\n            .post().then((response) => {\n            return {\n                data: response,\n                file: this.getByName(fileUrl),\n            };\n        });\n    }\n}\nexports.Files = Files;\n/**\n * Describes a single File instance\n *\n */\nclass File extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the File class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a value that specifies the list item field values for the list item corresponding to the file.\n     *\n     */\n    get listItemAllFields() {\n        return new queryable_1.QueryableCollection(this, \"listItemAllFields\");\n    }\n    /**\n     * Gets a collection of versions\n     *\n     */\n    get versions() {\n        return new Versions(this);\n    }\n    /**\n     * Approves the file submitted for content approval with the specified comment.\n     * Only documents in lists that are enabled for content approval can be approved.\n     *\n     * @param comment The comment for the approval.\n     */\n    approve(comment) {\n        return new File(this, `approve(comment='${comment}')`).post();\n    }\n    /**\n     * Stops the chunk upload session without saving the uploaded data.\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     */\n    cancelUpload(uploadId) {\n        return new File(this, `cancelUpload(uploadId=guid'${uploadId}')`).post();\n    }\n    /**\n     * Checks the file in to a document library based on the check-in type.\n     *\n     * @param comment A comment for the check-in. Its length must be <= 1023.\n     * @param checkinType The check-in type for the file.\n     */\n    checkin(comment = \"\", checkinType = CheckinType.Major) {\n        // TODO: Enforce comment length <= 1023\n        return new File(this, `checkin(comment='${comment}',checkintype=${checkinType})`).post();\n    }\n    /**\n     * Checks out the file from a document library.\n     */\n    checkout() {\n        return new File(this, \"checkout\").post();\n    }\n    /**\n     * Copies the file to the destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to copy to.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\n     */\n    copyTo(url, shouldOverWrite = true) {\n        return new File(this, `copyTo(strnewurl='${url}',boverwrite=${shouldOverWrite})`).post();\n    }\n    /**\n     * Delete this file.\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    delete(eTag = \"*\") {\n        return new File(this).post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    }\n    /**\n     * Denies approval for a file that was submitted for content approval.\n     * Only documents in lists that are enabled for content approval can be denied.\n     *\n     * @param comment The comment for the denial.\n     */\n    deny(comment = \"\") {\n        return new File(this, `deny(comment='${comment}')`).post();\n    }\n    /**\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\n     * An exception is thrown if the file is not an ASPX page.\n     *\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\n     */\n    getLimitedWebPartManager(scope = WebPartsPersonalizationScope.Shared) {\n        return new webparts_1.LimitedWebPartManager(this, `getLimitedWebPartManager(scope=${scope})`);\n    }\n    /**\n     * Moves the file to the specified destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to move to.\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\n     */\n    moveTo(url, moveOperations = MoveOperations.Overwrite) {\n        return new File(this, `moveTo(newurl='${url}',flags=${moveOperations})`).post();\n    }\n    /**\n     * Submits the file for content approval with the specified comment.\n     *\n     * @param comment The comment for the published file. Its length must be <= 1023.\n     */\n    publish(comment = \"\") {\n        return new File(this, `publish(comment='${comment}')`).post();\n    }\n    /**\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     *\n     * @returns The GUID of the recycled file.\n     */\n    recycle() {\n        return new File(this, \"recycle\").post();\n    }\n    /**\n     * Reverts an existing checkout for the file.\n     *\n     */\n    undoCheckout() {\n        return new File(this, \"undoCheckout\").post();\n    }\n    /**\n     * Removes the file from content approval or unpublish a major version.\n     *\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\n     */\n    unpublish(comment = \"\") {\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return new File(this, `unpublish(comment='${comment}')`).post();\n    }\n    /**\n     * Gets the contents of the file as text\n     *\n     */\n    getText() {\n        return new File(this, \"$value\").get(new odata_1.TextFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    }\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js\n     *\n     */\n    getBlob() {\n        return new File(this, \"$value\").get(new odata_1.BlobFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    }\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    getBuffer() {\n        return new File(this, \"$value\").get(new odata_1.BufferFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    }\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    getJSON() {\n        return new File(this, \"$value\").get(new odata_1.JSONFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    }\n    /**\n     * Sets the content of a file, for large files use setContentChunked\n     *\n     * @param content The file content\n     *\n     */\n    setContent(content) {\n        let setter = new File(this, \"$value\");\n        return setter.post({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(_ => new File(this));\n    }\n    /**\n     * Sets the contents of a file using a chunked upload approach\n     *\n     * @param file The file to upload\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     */\n    setContentChunked(file, progress, chunkSize = 10485760) {\n        if (typeof progress === \"undefined\") {\n            progress = () => null;\n        }\n        let self = this;\n        let fileSize = file.size;\n        let blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\n        let uploadId = util_1.Util.getGUID();\n        // start the chain with the first fragment\n        progress({ blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\n        let chain = self.startUpload(uploadId, file.slice(0, chunkSize));\n        // skip the first and last blocks\n        for (let i = 2; i < blockCount; i++) {\n            chain = chain.then(pointer => {\n                progress({ blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\n                return self.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\n            });\n        }\n        return chain.then(pointer => {\n            progress({ blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\n            return self.finishUpload(uploadId, pointer, file.slice(pointer));\n        }).then(_ => {\n            return self;\n        });\n    }\n    /**\n     * Starts a new chunk upload session and uploads the first fragment.\n     * The current file content is not changed when this method completes.\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\n     * The upload session ends either when you use the CancelUpload method or when you successfully\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    startUpload(uploadId, fragment) {\n        return new File(this, `startUpload(uploadId=guid'${uploadId}')`).postAs({ body: fragment }).then(n => parseFloat(n));\n    }\n    /**\n     * Continues the chunk upload session with an additional fragment.\n     * The current file content is not changed.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    continueUpload(uploadId, fileOffset, fragment) {\n        return new File(this, `continueUpload(uploadId=guid'${uploadId}',fileOffset=${fileOffset})`).postAs({ body: fragment }).then(n => parseFloat(n));\n    }\n    /**\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The newly uploaded file.\n     */\n    finishUpload(uploadId, fileOffset, fragment) {\n        return new File(this, `finishUpload(uploadId=guid'${uploadId}',fileOffset=${fileOffset})`)\n            .postAs({ body: fragment }).then((response) => {\n            return {\n                data: response,\n                file: new File(response.ServerRelativeUrl),\n            };\n        });\n    }\n}\nexports.File = File;\n/**\n * Describes a collection of Version objects\n *\n */\nclass Versions extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the File class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path = \"versions\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a version by id\n     *\n     * @param versionId The id of the version to retrieve\n     */\n    getById(versionId) {\n        let v = new Version(this);\n        v.concat(`(${versionId})`);\n        return v;\n    }\n    /**\n     * Deletes all the file version objects in the collection.\n     *\n     */\n    deleteAll() {\n        return new Versions(this, \"deleteAll\").post();\n    }\n    /**\n     * Deletes the specified version of the file.\n     *\n     * @param versionId The ID of the file version to delete.\n     */\n    deleteById(versionId) {\n        return new Versions(this, `deleteById(vid=${versionId})`).post();\n    }\n    /**\n     * Deletes the file version object with the specified version label.\n     *\n     * @param label The version label of the file version to delete, for example: 1.2\n     */\n    deleteByLabel(label) {\n        return new Versions(this, `deleteByLabel(versionlabel='${label}')`).post();\n    }\n    /**\n     * Creates a new file version from the file specified by the version label.\n     *\n     * @param label The version label of the file version to restore, for example: 1.2\n     */\n    restoreByLabel(label) {\n        return new Versions(this, `restoreByLabel(versionlabel='${label}')`).post();\n    }\n}\nexports.Versions = Versions;\n/**\n * Describes a single Version instance\n *\n */\nclass Version extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the Version class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n    * Delete a specific version of a file.\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    delete(eTag = \"*\") {\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    }\n}\nexports.Version = Version;\nvar CheckinType;\n(function (CheckinType) {\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\n})(CheckinType = exports.CheckinType || (exports.CheckinType = {}));\nvar WebPartsPersonalizationScope;\n(function (WebPartsPersonalizationScope) {\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\n})(WebPartsPersonalizationScope = exports.WebPartsPersonalizationScope || (exports.WebPartsPersonalizationScope = {}));\nvar MoveOperations;\n(function (MoveOperations) {\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\n})(MoveOperations = exports.MoveOperations || (exports.MoveOperations = {}));\nvar TemplateFileType;\n(function (TemplateFileType) {\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\n})(TemplateFileType = exports.TemplateFileType || (exports.TemplateFileType = {}));\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/files.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nclass LimitedWebPartManager extends queryable_1.Queryable {\n    /**\n     * Creates a new instance of the LimitedWebPartManager class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets the set of web part definitions contained by this web part manager\n     *\n     */\n    get webparts() {\n        return new WebPartDefinitions(this, \"webparts\");\n    }\n    /**\n     * Exports a webpart definition\n     *\n     * @param id the GUID id of the definition to export\n     */\n    export(id) {\n        let exporter = new LimitedWebPartManager(this, \"ExportWebPart\");\n        return exporter.post({\n            body: JSON.stringify({ webPartId: id }),\n        });\n    }\n    /**\n     * Imports a webpart\n     *\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\n     */\n    import(xml) {\n        let importer = new LimitedWebPartManager(this, \"ImportWebPart\");\n        return importer.post({\n            body: JSON.stringify({ webPartXml: xml }),\n        });\n    }\n}\nexports.LimitedWebPartManager = LimitedWebPartManager;\nclass WebPartDefinitions extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the WebPartDefinitions class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a web part definition from the collection by id\n     *\n     * @param id GUID id of the web part definition to get\n     */\n    getById(id) {\n        return new WebPartDefinition(this, `getbyid('${id}')`);\n    }\n}\nexports.WebPartDefinitions = WebPartDefinitions;\nclass WebPartDefinition extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the WebPartDefinition class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets the webpart information associated with this definition\n     */\n    get webpart() {\n        return new WebPart(this);\n    }\n    /**\n     * Removes a webpart from a page, all settings will be lost\n     */\n    delete() {\n        let deleter = new WebPartDefinition(this, \"DeleteWebPart\");\n        return deleter.post();\n    }\n}\nexports.WebPartDefinition = WebPartDefinition;\nclass WebPart extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the WebPart class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\n     */\n    constructor(baseUrl, path = \"webpart\") {\n        super(baseUrl, path);\n    }\n}\nexports.WebPart = WebPart;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/webparts.js","\"use strict\";\nconst util_1 = require(\"../utils/util\");\nconst queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of content types\n *\n */\nclass ContentTypes extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the ContentTypes class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this content types collection\n     */\n    constructor(baseUrl, path = \"contenttypes\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a ContentType by content type id\n     */\n    getById(id) {\n        let ct = new ContentType(this);\n        ct.concat(`('${id}')`);\n        return ct;\n    }\n    /**\n     * Adds an existing contenttype to a content type collection\n     *\n     * @param contentTypeId in the following format, for example: 0x010102\n     */\n    addAvailableContentType(contentTypeId) {\n        let postBody = JSON.stringify({\n            \"contentTypeId\": contentTypeId,\n        });\n        return new ContentTypes(this, `addAvailableContentType`).postAs({ body: postBody }).then((data) => {\n            return {\n                contentType: this.getById(data.id),\n                data: data,\n            };\n        });\n    }\n    /**\n     * Adds a new content type to the collection\n     *\n     * @param id The desired content type id for the new content type (also determines the parent content type)\n     * @param name The name of the content type\n     * @param description The description of the content type\n     * @param group The group in which to add the content type\n     * @param additionalSettings Any additional settings to provide when creating the content type\n     *\n     */\n    add(id, name, description = \"\", group = \"Custom Content Types\", additionalSettings = {}) {\n        let postBody = JSON.stringify(util_1.Util.extend({\n            \"Description\": description,\n            \"Group\": group,\n            \"Id\": { \"StringValue\": id },\n            \"Name\": name,\n            \"__metadata\": { \"type\": \"SP.ContentType\" },\n        }, additionalSettings));\n        return this.post({ body: postBody }).then((data) => {\n            return { contentType: this.getById(data.id), data: data };\n        });\n    }\n}\nexports.ContentTypes = ContentTypes;\n/**\n * Describes a single ContentType instance\n *\n */\nclass ContentType extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the ContentType class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this content type instance\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets the column (also known as field) references in the content type.\n    */\n    get fieldLinks() {\n        return new FieldLinks(this);\n    }\n    /**\n     * Gets a value that specifies the collection of fields for the content type.\n     */\n    get fields() {\n        return new queryable_1.QueryableCollection(this, \"fields\");\n    }\n    /**\n     * Gets the parent content type of the content type.\n     */\n    get parent() {\n        return new ContentType(this, \"parent\");\n    }\n    /**\n     * Gets a value that specifies the collection of workflow associations for the content type.\n     */\n    get workflowAssociations() {\n        return new queryable_1.QueryableCollection(this, \"workflowAssociations\");\n    }\n}\nexports.ContentType = ContentType;\n/**\n * Represents a collection of field link instances\n */\nclass FieldLinks extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the ContentType class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this content type instance\n     */\n    constructor(baseUrl, path = \"fieldlinks\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a FieldLink by GUID id\n     *\n     * @param id The GUID id of the field link\n     */\n    getById(id) {\n        let fl = new FieldLink(this);\n        fl.concat(`(guid'${id}')`);\n        return fl;\n    }\n}\nexports.FieldLinks = FieldLinks;\n/**\n * Represents a field link instance\n */\nclass FieldLink extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the ContentType class\n    *\n    * @param baseUrl The url or Queryable which forms the parent of this content type instance\n    */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n}\nexports.FieldLink = FieldLink;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/contenttypes.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst odata_1 = require(\"./odata\");\n/**\n * Describes a collection of Item objects\n *\n */\nclass AttachmentFiles extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the AttachmentFiles class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this attachments collection\n     */\n    constructor(baseUrl, path = \"AttachmentFiles\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a Attachment File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    getByName(name) {\n        let f = new AttachmentFile(this);\n        f.concat(`('${name}')`);\n        return f;\n    }\n    /**\n     * Adds a new attachment to the collection\n     *\n     * @param name The name of the file, including extension.\n     * @param content The Base64 file content.\n     */\n    add(name, content) {\n        return new AttachmentFiles(this, `add(FileName='${name}')`)\n            .post({\n            body: content,\n        }).then((response) => {\n            return {\n                data: response,\n                file: this.getByName(name),\n            };\n        });\n    }\n}\nexports.AttachmentFiles = AttachmentFiles;\n/**\n * Describes a single attachment file instance\n *\n */\nclass AttachmentFile extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the AttachmentFile class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this attachment file\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets the contents of the file as text\n     *\n     */\n    getText() {\n        return new AttachmentFile(this, \"$value\").get(new odata_1.TextFileParser());\n    }\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js\n     *\n     */\n    getBlob() {\n        return new AttachmentFile(this, \"$value\").get(new odata_1.BlobFileParser());\n    }\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    getBuffer() {\n        return new AttachmentFile(this, \"$value\").get(new odata_1.BufferFileParser());\n    }\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    getJSON() {\n        return new AttachmentFile(this, \"$value\").get(new odata_1.JSONFileParser());\n    }\n    /**\n     * Sets the content of a file\n     *\n     * @param content The value to set for the file contents\n     */\n    setContent(content) {\n        let setter = new AttachmentFile(this, \"$value\");\n        return setter.post({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(_ => new AttachmentFile(this));\n    }\n    /**\n     * Delete this attachment file\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    delete(eTag = \"*\") {\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    }\n}\nexports.AttachmentFile = AttachmentFile;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/attachmentfiles.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst util_1 = require(\"../utils/util\");\n/**\n * Describes the views available in the current context\n *\n */\nclass Views extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the Views class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl) {\n        super(baseUrl, \"views\");\n    }\n    /**\n     * Gets a view by guid id\n     *\n     * @param id The GUID id of the view\n     */\n    getById(id) {\n        let v = new View(this);\n        v.concat(`('${id}')`);\n        return v;\n    }\n    /**\n     * Gets a view by title (case-sensitive)\n     *\n     * @param title The case-sensitive title of the view\n     */\n    getByTitle(title) {\n        return new View(this, `getByTitle('${title}')`);\n    }\n    /**\n     * Adds a new view to the collection\n     *\n     * @param title The new views's title\n     * @param personalView True if this is a personal view, otherwise false, default = false\n     * @param additionalSettings Will be passed as part of the view creation body\n     */\n    /*tslint:disable max-line-length */\n    add(title, personalView = false, additionalSettings = {}) {\n        let postBody = JSON.stringify(util_1.Util.extend({\n            \"PersonalView\": personalView,\n            \"Title\": title,\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, additionalSettings));\n        return this.postAs({ body: postBody }).then((data) => {\n            return {\n                data: data,\n                view: this.getById(data.Id),\n            };\n        });\n    }\n}\nexports.Views = Views;\n/**\n * Describes a single View instance\n *\n */\nclass View extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the View class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    get fields() {\n        return new ViewFields(this);\n    }\n    /**\n     * Updates this view intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the view\n     */\n    update(properties) {\n        let postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then((data) => {\n            return {\n                data: data,\n                view: this,\n            };\n        });\n    }\n    /**\n     * Delete this view\n     *\n     */\n    delete() {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    }\n    /**\n     * Returns the list view as HTML.\n     *\n     */\n    renderAsHtml() {\n        let q = new queryable_1.Queryable(this, \"renderashtml\");\n        return q.get();\n    }\n}\nexports.View = View;\nclass ViewFields extends queryable_1.QueryableCollection {\n    constructor(baseUrl, path = \"viewfields\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a value that specifies the XML schema that represents the collection.\n     */\n    getSchemaXml() {\n        let q = new queryable_1.Queryable(this, \"schemaxml\");\n        return q.get();\n    }\n    /**\n     * Adds the field with the specified field internal name or display name to the collection.\n     *\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\n     */\n    add(fieldTitleOrInternalName) {\n        let q = new ViewFields(this, `addviewfield('${fieldTitleOrInternalName}')`);\n        return q.post();\n    }\n    /**\n     * Moves the field with the specified field internal name to the specified position in the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\n     * @param index The zero-based index of the new position for the field.\n     */\n    move(fieldInternalName, index) {\n        let q = new ViewFields(this, \"moveviewfieldto\");\n        let postBody = JSON.stringify({ \"field\": fieldInternalName, \"index\": index });\n        return q.post({ body: postBody });\n    }\n    /**\n     * Removes all the fields from the collection.\n     */\n    removeAll() {\n        let q = new ViewFields(this, \"removeallviewfields\");\n        return q.post();\n    }\n    /**\n     * Removes the field with the specified field internal name from the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\n     */\n    remove(fieldInternalName) {\n        let q = new ViewFields(this, `removeviewfield('${fieldInternalName}')`);\n        return q.post();\n    }\n}\nexports.ViewFields = ViewFields;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/views.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst util_1 = require(\"../utils/util\");\nconst Types = require(\"./types\");\n/**\n * Describes a collection of Field objects\n *\n */\nclass Fields extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path = \"fields\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a field from the collection by title\n     *\n     * @param title The case-sensitive title of the field\n     */\n    getByTitle(title) {\n        return new Field(this, `getByTitle('${title}')`);\n    }\n    /**\n     * Gets a field from the collection by using internal name or title\n     *\n     * @param name The case-sensitive internal name or title of the field\n     */\n    getByInternalNameOrTitle(name) {\n        return new Field(this, `getByInternalNameOrTitle('${name}')`);\n    }\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param title The Id of the list\n     */\n    getById(id) {\n        let f = new Field(this);\n        f.concat(`('${id}')`);\n        return f;\n    }\n    /**\n     * Creates a field based on the specified schema\n     */\n    createFieldAsXml(xml) {\n        let info;\n        if (typeof xml === \"string\") {\n            info = { SchemaXml: xml };\n        }\n        else {\n            info = xml;\n        }\n        let postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": {\n                    \"type\": \"SP.XmlSchemaFieldCreationInformation\",\n                },\n            }, info),\n        });\n        let q = new Fields(this, \"createfieldasxml\");\n        return q.postAs({ body: postBody }).then((data) => {\n            return {\n                data: data,\n                field: this.getById(data.Id),\n            };\n        });\n    }\n    /**\n     * Adds a new list to the collection\n     *\n     * @param title The new field's title\n     * @param fieldType The new field's type (ex: SP.FieldText)\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    add(title, fieldType, properties = {}) {\n        let postBody = JSON.stringify(util_1.Util.extend({\n            \"Title\": title,\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.postAs({ body: postBody }).then((data) => {\n            return {\n                data: data,\n                field: this.getById(data.Id),\n            };\n        });\n    }\n    /**\n     * Adds a new SP.FieldText to the collection\n     *\n     * @param title The field title\n     * @param maxLength The maximum number of characters allowed in the value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    addText(title, maxLength = 255, properties) {\n        let props = {\n            FieldTypeKind: 2,\n            MaxLength: maxLength,\n        };\n        return this.add(title, \"SP.FieldText\", util_1.Util.extend(props, properties));\n    }\n    /**\n     * Adds a new SP.FieldCalculated to the collection\n     *\n     * @param title The field title.\n     * @param formula The formula for the field.\n     * @param dateFormat The date and time format that is displayed in the field.\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    addCalculated(title, formula, dateFormat, outputType = Types.FieldTypes.Text, properties) {\n        let props = {\n            DateFormat: dateFormat,\n            FieldTypeKind: 17,\n            Formula: formula,\n            OutputType: outputType,\n        };\n        return this.add(title, \"SP.FieldCalculated\", util_1.Util.extend(props, properties));\n    }\n    /**\n     * Adds a new SP.FieldDateTime to the collection\n     *\n     * @param title The field title\n     * @param displayFormat The format of the date and time that is displayed in the field.\n     * @param calendarType Specifies the calendar type of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    addDateTime(title, displayFormat = Types.DateTimeFieldFormatType.DateOnly, calendarType = Types.CalendarType.Gregorian, friendlyDisplayFormat = 0, properties) {\n        let props = {\n            DateTimeCalendarType: calendarType,\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 4,\n            FriendlyDisplayFormat: friendlyDisplayFormat,\n        };\n        return this.add(title, \"SP.FieldDateTime\", util_1.Util.extend(props, properties));\n    }\n    /**\n     * Adds a new SP.FieldNumber to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    addNumber(title, minValue, maxValue, properties) {\n        let props = { FieldTypeKind: 9 };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldNumber\", util_1.Util.extend(props, properties));\n    }\n    /**\n     * Adds a new SP.FieldCurrency to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    addCurrency(title, minValue, maxValue, currencyLocalId = 1033, properties) {\n        let props = {\n            CurrencyLocaleId: currencyLocalId,\n            FieldTypeKind: 10,\n        };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldCurrency\", util_1.Util.extend(props, properties));\n    }\n    /**\n     * Adds a new SP.FieldMultiLineText to the collection\n     *\n     * @param title The field title\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\n     * @param richText Specifies whether the field supports rich formatting.\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     *\n     */\n    addMultilineText(title, numberOfLines = 6, richText = true, restrictedMode = false, appendOnly = false, allowHyperlink = true, properties) {\n        let props = {\n            AllowHyperlink: allowHyperlink,\n            AppendOnly: appendOnly,\n            FieldTypeKind: 3,\n            NumberOfLines: numberOfLines,\n            RestrictedMode: restrictedMode,\n            RichText: richText,\n        };\n        return this.add(title, \"SP.FieldMultiLineText\", util_1.Util.extend(props, properties));\n    }\n    /**\n     * Adds a new SP.FieldUrl to the collection\n     *\n     * @param title The field title\n     */\n    addUrl(title, displayFormat = Types.UrlFieldFormatType.Hyperlink, properties) {\n        let props = {\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 11,\n        };\n        return this.add(title, \"SP.FieldUrl\", util_1.Util.extend(props, properties));\n    }\n}\nexports.Fields = Fields;\n/**\n * Describes a single of Field instance\n *\n */\nclass Field extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the Field class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this field instance\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Updates this field intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param fieldType The type value, required to update child field type properties\n     */\n    update(properties, fieldType = \"SP.Field\") {\n        let postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then((data) => {\n            return {\n                data: data,\n                field: this,\n            };\n        });\n    }\n    /**\n     * Delete this fields\n     *\n     */\n    delete() {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    }\n    /**\n     * Sets the value of the ShowInDisplayForm property for this field.\n     */\n    setShowInDisplayForm(show) {\n        let q = new Field(this, `setshowindisplayform(${show})`);\n        return q.post();\n    }\n    /**\n     * Sets the value of the ShowInEditForm property for this field.\n     */\n    setShowInEditForm(show) {\n        let q = new Field(this, `setshowineditform(${show})`);\n        return q.post();\n    }\n    /**\n     * Sets the value of the ShowInNewForm property for this field.\n     */\n    setShowInNewForm(show) {\n        let q = new Field(this, `setshowinnewform(${show})`);\n        return q.post();\n    }\n}\nexports.Field = Field;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/fields.js","// reference: https://msdn.microsoft.com/en-us/library/office/dn600183.aspx\n\"use strict\";\n/**\n * Determines the display mode of the given control or view\n */\nvar ControlMode;\n(function (ControlMode) {\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\n})(ControlMode = exports.ControlMode || (exports.ControlMode = {}));\n/**\n * Specifies the type of the field.\n */\nvar FieldTypes;\n(function (FieldTypes) {\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\n})(FieldTypes = exports.FieldTypes || (exports.FieldTypes = {}));\nvar DateTimeFieldFormatType;\n(function (DateTimeFieldFormatType) {\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\n})(DateTimeFieldFormatType = exports.DateTimeFieldFormatType || (exports.DateTimeFieldFormatType = {}));\n/**\n * Specifies the control settings while adding a field.\n */\nvar AddFieldOptions;\n(function (AddFieldOptions) {\n    /**\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\n    /**\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\n    /**\n     * Specify that a new field must not be added to any other content type\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\n    /**\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\n    /**\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\n    /**\n     * Specify that a new field that is added to the specified list must also be added to the default list view\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\n    /**\n     * Specify to confirm that no other field has the same display name\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\n})(AddFieldOptions = exports.AddFieldOptions || (exports.AddFieldOptions = {}));\nvar CalendarType;\n(function (CalendarType) {\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\n})(CalendarType = exports.CalendarType || (exports.CalendarType = {}));\nvar UrlFieldFormatType;\n(function (UrlFieldFormatType) {\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\n})(UrlFieldFormatType = exports.UrlFieldFormatType || (exports.UrlFieldFormatType = {}));\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\nvar PageType;\n(function (PageType) {\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\n    PageType[PageType[\"View\"] = 3] = \"View\";\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\n})(PageType = exports.PageType || (exports.PageType = {}));\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/types.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of Field objects\n *\n */\nclass Forms extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path = \"forms\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a form by id\n     *\n     * @param id The guid id of the item to retrieve\n     */\n    getById(id) {\n        let i = new Form(this);\n        i.concat(`('${id}')`);\n        return i;\n    }\n}\nexports.Forms = Forms;\n/**\n * Describes a single of Form instance\n *\n */\nclass Form extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the Form class\n     *\n     * @param baseUrl The url or Queryable which is the parent of this form instance\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n}\nexports.Form = Form;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/forms.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of webhook subscriptions\n *\n */\nclass Subscriptions extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the Subscriptions class\n     *\n     * @param baseUrl - The url or Queryable which forms the parent of this webhook subscriptions collection\n     */\n    constructor(baseUrl, path = \"subscriptions\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Returns all the webhook subscriptions or the specified webhook subscription\n     *\n     */\n    getById(subscriptionId) {\n        let subscription = new Subscription(this);\n        subscription.concat(`('${subscriptionId}')`);\n        return subscription;\n    }\n    /**\n     * Create a new webhook subscription\n     *\n     */\n    add(notificationUrl, expirationDate, clientState) {\n        let postBody = JSON.stringify({\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\n            \"expirationDateTime\": expirationDate,\n            \"notificationUrl\": notificationUrl,\n            \"resource\": this.toUrl(),\n        });\n        return this.post({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(result => {\n            return { data: result, subscription: this.getById(result.id) };\n        });\n    }\n}\nexports.Subscriptions = Subscriptions;\n/**\n * Describes a single webhook subscription instance\n *\n */\nclass Subscription extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the Subscription class\n     *\n     * @param baseUrl - The url or Queryable which forms the parent of this webhook subscription instance\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Update a webhook subscription\n     *\n     */\n    update(expirationDate) {\n        let postBody = JSON.stringify({\n            \"expirationDateTime\": expirationDate,\n        });\n        return this.patch({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(data => {\n            return { data: data, subscription: this };\n        });\n    }\n    /**\n     * Remove a webhook subscription\n     *\n     */\n    delete() {\n        return super.delete();\n    }\n}\nexports.Subscription = Subscription;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/subscriptions.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst util_1 = require(\"../utils/util\");\nclass UserCustomActions extends queryable_1.QueryableCollection {\n    constructor(baseUrl, path = \"usercustomactions\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Returns the custom action with the specified identifier.\n     *\n     * @param id The GUID ID of the user custom action to get.\n     */\n    getById(id) {\n        let uca = new UserCustomAction(this);\n        uca.concat(`('${id}')`);\n        return uca;\n    }\n    /**\n     * Create a custom action\n     *\n     * @param creationInfo The information which defines the new custom action\n     *\n     */\n    add(properties) {\n        let postBody = JSON.stringify(util_1.Util.extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\n        return this.post({ body: postBody }).then((data) => {\n            return {\n                action: this.getById(data.Id),\n                data: data,\n            };\n        });\n    }\n    /**\n     * Deletes all custom actions in the collection.\n     *\n     */\n    clear() {\n        let a = new UserCustomActions(this, \"clear\");\n        return a.post();\n    }\n}\nexports.UserCustomActions = UserCustomActions;\nclass UserCustomAction extends queryable_1.QueryableInstance {\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    update(properties) {\n        let postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.UserCustomAction\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then((data) => {\n            return {\n                action: this,\n                data: data,\n            };\n        });\n    }\n    /**\n    * Remove a custom action\n    *\n    */\n    delete() {\n        return super.delete();\n    }\n}\nexports.UserCustomAction = UserCustomAction;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/usercustomactions.js","\"use strict\";\nconst util_1 = require(\"../utils/util\");\nconst queryable_1 = require(\"./queryable\");\n/**\n * Represents a collection of navigation nodes\n *\n */\nclass NavigationNodes extends queryable_1.QueryableCollection {\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a navigation node by id\n     *\n     * @param id The id of the node\n     */\n    getById(id) {\n        let node = new NavigationNode(this);\n        node.concat(`(${id})`);\n        return node;\n    }\n    /**\n     * Adds a new node to the collection\n     *\n     * @param title Display name of the node\n     * @param url The url of the node\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\n     */\n    add(title, url, visible = true) {\n        let postBody = JSON.stringify({\n            IsVisible: visible,\n            Title: title,\n            Url: url,\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n        });\n        let adder = new NavigationNodes(this);\n        return adder.post({ body: postBody }).then((data) => {\n            return {\n                data: data,\n                node: this.getById(data.Id),\n            };\n        });\n    }\n    /**\n     * Moves a node to be after another node in the navigation\n     *\n     * @param nodeId Id of the node to move\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\n     */\n    moveAfter(nodeId, previousNodeId) {\n        let postBody = JSON.stringify({\n            nodeId: nodeId,\n            previousNodeId: previousNodeId,\n        });\n        let mover = new NavigationNodes(this, \"MoveAfter\");\n        return mover.post({ body: postBody });\n    }\n}\nexports.NavigationNodes = NavigationNodes;\nclass NavigationNode extends queryable_1.QueryableInstance {\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Represents the child nodes of this node\n     */\n    get children() {\n        return new NavigationNodes(this, \"Children\");\n    }\n    /**\n     * Updates this node based on the supplied properties\n     *\n     * @param properties The hash of key/value pairs to update\n     */\n    update(properties) {\n        let postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then((data) => {\n            return {\n                data: data,\n                node: this,\n            };\n        });\n    }\n    /**\n     * Deletes this node and any child nodes\n     */\n    delete() {\n        return super.delete();\n    }\n}\nexports.NavigationNode = NavigationNode;\n/**\n * Exposes the navigation components\n *\n */\nclass Navigation extends queryable_1.Queryable {\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path = \"navigation\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets the quicklaunch navigation for the current context\n     *\n     */\n    get quicklaunch() {\n        return new NavigationNodes(this, \"quicklaunch\");\n    }\n    /**\n     * Gets the top bar navigation navigation for the current context\n     *\n     */\n    get topNavigationBar() {\n        return new NavigationNodes(this, \"topnavigationbar\");\n    }\n}\nexports.Navigation = Navigation;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/navigation.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of List objects\n *\n */\nclass Features extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path = \"features\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the feature (GUID)\n     */\n    getById(id) {\n        let feature = new Feature(this);\n        feature.concat(`('${id}')`);\n        return feature;\n    }\n    /**\n     * Adds a new list to the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature activation will be forced\n     */\n    add(id, force = false) {\n        let adder = new Features(this, \"add\");\n        return adder.post({\n            body: JSON.stringify({\n                featdefScope: 0,\n                featureId: id,\n                force: force,\n            }),\n        }).then(data => {\n            return {\n                data: data,\n                feature: this.getById(id),\n            };\n        });\n    }\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature deactivation will be forced\n     */\n    remove(id, force = false) {\n        let remover = new Features(this, \"remove\");\n        return remover.post({\n            body: JSON.stringify({\n                featureId: id,\n                force: force,\n            }),\n        });\n    }\n}\nexports.Features = Features;\nclass Feature extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param force If true the feature deactivation will be forced\n     */\n    deactivate(force = false) {\n        let removeDependency = this.addBatchDependency();\n        let idGet = new Feature(this).select(\"DefinitionId\");\n        return idGet.getAs().then(feature => {\n            let promise = this.getParent(Features, this.parentUrl, \"\").remove(feature.DefinitionId, force);\n            removeDependency();\n            return promise;\n        });\n    }\n}\nexports.Feature = Feature;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/features.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst FileUtil = require(\"../utils/files\");\nconst odata_1 = require(\"./odata\");\nclass UserProfileQuery extends queryable_1.QueryableInstance {\n    constructor(baseUrl, path = \"_api/sp.userprofiles.peoplemanager\") {\n        super(baseUrl, path);\n        this.profileLoader = new ProfileLoader(baseUrl);\n    }\n    /**\n     * The URL of the edit profile page for the current user.\n     */\n    get editProfileLink() {\n        let q = new UserProfileQuery(this, \"EditProfileLink\");\n        return q.getAs(odata_1.ODataValue());\n    }\n    /**\n     * A Boolean value that indicates whether the current user's People I'm Following list is public.\n     */\n    get isMyPeopleListPublic() {\n        let q = new UserProfileQuery(this, \"IsMyPeopleListPublic\");\n        return q.getAs(odata_1.ODataValue());\n    }\n    /**\n     * A Boolean value that indicates whether the current user's People I'm Following list is public.\n     *\n     * @param loginName The account name of the user\n     */\n    amIFollowedBy(loginName) {\n        let q = new UserProfileQuery(this, \"amifollowedby(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    }\n    /**\n     * Checks whether the current user is following the specified user.\n     *\n     * @param loginName The account name of the user\n     */\n    amIFollowing(loginName) {\n        let q = new UserProfileQuery(this, \"amifollowing(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    }\n    /**\n     * Gets tags that the user is following.\n     *\n     * @param maxCount The maximum number of tags to get.\n     */\n    getFollowedTags(maxCount = 20) {\n        let q = new UserProfileQuery(this, \"getfollowedtags(\" + maxCount + \")\");\n        return q.get();\n    }\n    /**\n     * Gets the people who are following the specified user.\n     *\n     * @param loginName The account name of the user.\n     */\n    getFollowersFor(loginName) {\n        let q = new UserProfileQuery(this, \"getfollowersfor(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    }\n    /**\n     * Gets the people who are following the current user.\n     *\n     */\n    get myFollowers() {\n        return new queryable_1.QueryableCollection(this, \"getmyfollowers\");\n    }\n    /**\n     * Gets user properties for the current user.\n     *\n     */\n    get myProperties() {\n        return new UserProfileQuery(this, \"getmyproperties\");\n    }\n    /**\n     * Gets the people who the specified user is following.\n     *\n     * @param loginName The account name of the user.\n     */\n    getPeopleFollowedBy(loginName) {\n        let q = new UserProfileQuery(this, \"getpeoplefollowedby(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    }\n    /**\n     * Gets user properties for the specified user.\n     *\n     * @param loginName The account name of the user.\n     */\n    getPropertiesFor(loginName) {\n        let q = new UserProfileQuery(this, \"getpropertiesfor(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    }\n    /**\n     * Gets the most popular tags.\n     *\n     */\n    get trendingTags() {\n        let q = new UserProfileQuery(this, null);\n        q.concat(\".gettrendingtags\");\n        return q.get();\n    }\n    /**\n     * Gets the specified user profile property for the specified user.\n     *\n     * @param loginName The account name of the user.\n     * @param propertyName The case-sensitive name of the property to get.\n     */\n    getUserProfilePropertyFor(loginName, propertyName) {\n        let q = new UserProfileQuery(this, `getuserprofilepropertyfor(accountname=@v, propertyname='${propertyName}')`);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    }\n    /**\n     * Removes the specified user from the user's list of suggested people to follow.\n     *\n     * @param loginName The account name of the user.\n     */\n    hideSuggestion(loginName) {\n        let q = new UserProfileQuery(this, \"hidesuggestion(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.post();\n    }\n    /**\n     * Checks whether the first user is following the second user.\n     *\n     * @param follower The account name of the user who might be following followee.\n     * @param followee The account name of the user who might be followed.\n     */\n    isFollowing(follower, followee) {\n        let q = new UserProfileQuery(this, null);\n        q.concat(`.isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)`);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\n        q.query.add(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\n        return q.get();\n    }\n    /**\n     * Uploads and sets the user profile picture\n     *\n     * @param profilePicSource Blob data representing the user's picture\n     */\n    setMyProfilePic(profilePicSource) {\n        return new Promise((resolve, reject) => {\n            FileUtil.readBlobAsArrayBuffer(profilePicSource).then((buffer) => {\n                let request = new UserProfileQuery(this, \"setmyprofilepicture\");\n                request.post({\n                    body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\n                }).then(_ => resolve());\n            }).catch(e => reject(e));\n        });\n    }\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    createPersonalSiteEnqueueBulk(...emails) {\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\n    }\n    /**\n     * Gets the user profile of the site owner.\n     *\n     */\n    get ownerUserProfile() {\n        return this.profileLoader.ownerUserProfile;\n    }\n    /**\n     * Gets the user profile that corresponds to the current user.\n     */\n    get userProfile() {\n        return this.profileLoader.userProfile;\n    }\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false if non-interactively (client) initiated request\n     */\n    createPersonalSite(interactiveRequest = false) {\n        return this.profileLoader.createPersonalSite(interactiveRequest);\n    }\n    /**\n     * Sets the privacy settings for this profile.\n     *\n     * @param share true to make all social data public; false to make all social data private.\n     */\n    shareAllSocialData(share) {\n        return this.profileLoader.shareAllSocialData(share);\n    }\n}\nexports.UserProfileQuery = UserProfileQuery;\nclass ProfileLoader extends queryable_1.Queryable {\n    constructor(baseUrl, path = \"_api/sp.userprofiles.profileloader.getprofileloader\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    createPersonalSiteEnqueueBulk(emails) {\n        let q = new ProfileLoader(this, \"createpersonalsiteenqueuebulk\");\n        let postBody = JSON.stringify({ \"emailIDs\": emails });\n        return q.post({\n            body: postBody,\n        });\n    }\n    /**\n     * Gets the user profile of the site owner.\n     *\n     */\n    get ownerUserProfile() {\n        let q = this.getParent(ProfileLoader, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\n        return q.postAs();\n    }\n    /**\n     * Gets the user profile that corresponds to the current user.\n     *\n     */\n    get userProfile() {\n        let q = new ProfileLoader(this, \"getuserprofile\");\n        return q.postAs();\n    }\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false if non-interactively (client) initiated request\n     */\n    createPersonalSite(interactiveRequest = false) {\n        let q = new ProfileLoader(this, `getuserprofile/createpersonalsiteenque(${interactiveRequest})\",`);\n        return q.post();\n    }\n    /**\n     * Sets the privacy settings for this profile.\n     *\n     * @param share true to make all social data public; false to make all social data private.\n     */\n    shareAllSocialData(share) {\n        let q = new ProfileLoader(this, `getuserprofile/shareallsocialdata(${share})\",`);\n        return q.post();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/userprofiles.js","\"use strict\";\n/**\n * Reads a blob as text\n *\n * @param blob The data to read\n */\nfunction readBlobAsText(blob) {\n    return readBlobAs(blob, \"string\");\n}\nexports.readBlobAsText = readBlobAsText;\n/**\n * Reads a blob into an array buffer\n *\n * @param blob The data to read\n */\nfunction readBlobAsArrayBuffer(blob) {\n    return readBlobAs(blob, \"buffer\");\n}\nexports.readBlobAsArrayBuffer = readBlobAsArrayBuffer;\n/**\n * Generic method to read blob's content\n *\n * @param blob The data to read\n * @param mode The read mode\n */\nfunction readBlobAs(blob, mode) {\n    return new Promise((resolve, reject) => {\n        try {\n            let reader = new FileReader();\n            reader.onload = (e) => {\n                resolve(e.target.result);\n            };\n            switch (mode) {\n                case \"string\":\n                    reader.readAsText(blob);\n                    break;\n                case \"buffer\":\n                    reader.readAsArrayBuffer(blob);\n                    break;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/files.js","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require(\"../sharepoint/index\"));\nvar httpclient_1 = require(\"../net/httpclient\");\nexports.HttpClient = httpclient_1.HttpClient;\nvar sprequestexecutorclient_1 = require(\"../net/sprequestexecutorclient\");\nexports.SPRequestExecutorClient = sprequestexecutorclient_1.SPRequestExecutorClient;\nvar nodefetchclient_1 = require(\"../net/nodefetchclient\");\nexports.NodeFetchClient = nodefetchclient_1.NodeFetchClient;\nvar fetchclient_1 = require(\"../net/fetchclient\");\nexports.FetchClient = fetchclient_1.FetchClient;\n__export(require(\"../configuration/providers/index\"));\nvar collections_1 = require(\"../collections/collections\");\nexports.Dictionary = collections_1.Dictionary;\nvar util_1 = require(\"../utils/util\");\nexports.Util = util_1.Util;\n__export(require(\"../utils/logging\"));\n__export(require(\"../utils/exceptions\"));\n\n\n\n// WEBPACK FOOTER //\n// ./lib/types/index.js","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require(\"./caching\"));\nvar files_1 = require(\"./files\");\nexports.CheckinType = files_1.CheckinType;\nexports.WebPartsPersonalizationScope = files_1.WebPartsPersonalizationScope;\nexports.MoveOperations = files_1.MoveOperations;\nexports.TemplateFileType = files_1.TemplateFileType;\nvar items_1 = require(\"./items\");\nexports.Item = items_1.Item;\nexports.PagedItemCollection = items_1.PagedItemCollection;\nvar navigation_1 = require(\"./navigation\");\nexports.NavigationNodes = navigation_1.NavigationNodes;\nexports.NavigationNode = navigation_1.NavigationNode;\nvar lists_1 = require(\"./lists\");\nexports.List = lists_1.List;\nvar odata_1 = require(\"./odata\");\nexports.extractOdataId = odata_1.extractOdataId;\nexports.ODataParserBase = odata_1.ODataParserBase;\nexports.ODataDefaultParser = odata_1.ODataDefaultParser;\nexports.ODataRaw = odata_1.ODataRaw;\nexports.ODataValue = odata_1.ODataValue;\nexports.ODataEntity = odata_1.ODataEntity;\nexports.ODataEntityArray = odata_1.ODataEntityArray;\nexports.TextFileParser = odata_1.TextFileParser;\nexports.BlobFileParser = odata_1.BlobFileParser;\nexports.BufferFileParser = odata_1.BufferFileParser;\nexports.JSONFileParser = odata_1.JSONFileParser;\nvar roles_1 = require(\"./roles\");\nexports.RoleDefinitionBindings = roles_1.RoleDefinitionBindings;\nvar search_1 = require(\"./search\");\nexports.Search = search_1.Search;\nexports.SearchResult = search_1.SearchResult;\nexports.SearchResults = search_1.SearchResults;\nexports.SortDirection = search_1.SortDirection;\nexports.ReorderingRuleMatchType = search_1.ReorderingRuleMatchType;\nexports.QueryPropertyValueType = search_1.QueryPropertyValueType;\nvar searchsuggest_1 = require(\"./searchsuggest\");\nexports.SearchSuggest = searchsuggest_1.SearchSuggest;\nexports.SearchSuggestResult = searchsuggest_1.SearchSuggestResult;\nvar site_1 = require(\"./site\");\nexports.Site = site_1.Site;\n__export(require(\"./types\"));\nvar webs_1 = require(\"./webs\");\nexports.Web = webs_1.Web;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/index.js","\"use strict\";\nconst util_1 = require(\"../utils/util\");\nconst exceptions_1 = require(\"../utils/exceptions\");\n/**\n * Makes requests using the SP.RequestExecutor library.\n */\nclass SPRequestExecutorClient {\n    constructor() {\n        /**\n         * Converts a SharePoint REST API response to a fetch API response.\n         */\n        this.convertToResponse = (spResponse) => {\n            let responseHeaders = new Headers();\n            for (let h in spResponse.headers) {\n                if (spResponse.headers[h]) {\n                    responseHeaders.append(h, spResponse.headers[h]);\n                }\n            }\n            // issue #256, Cannot have an empty string body when creating a Response with status 204\n            let body = spResponse.statusCode === 204 ? null : spResponse.body;\n            return new Response(body, {\n                headers: responseHeaders,\n                status: spResponse.statusCode,\n                statusText: spResponse.statusText,\n            });\n        };\n    }\n    /**\n     * Fetches a URL using the SP.RequestExecutor library.\n     */\n    fetch(url, options) {\n        if (typeof SP === \"undefined\" || typeof SP.RequestExecutor === \"undefined\") {\n            throw new exceptions_1.SPRequestExecutorUndefinedException();\n        }\n        let addinWebUrl = url.substring(0, url.indexOf(\"/_api\")), executor = new SP.RequestExecutor(addinWebUrl), headers = {}, iterator, temp;\n        if (options.headers && options.headers instanceof Headers) {\n            iterator = options.headers.entries();\n            temp = iterator.next();\n            while (!temp.done) {\n                headers[temp.value[0]] = temp.value[1];\n                temp = iterator.next();\n            }\n        }\n        else {\n            headers = options.headers;\n        }\n        return new Promise((resolve, reject) => {\n            let requestOptions = {\n                error: (error) => {\n                    reject(this.convertToResponse(error));\n                },\n                headers: headers,\n                method: options.method,\n                success: (response) => {\n                    resolve(this.convertToResponse(response));\n                },\n                url: url,\n            };\n            if (options.body) {\n                requestOptions = util_1.Util.extend(requestOptions, { body: options.body });\n            }\n            else {\n                requestOptions = util_1.Util.extend(requestOptions, { binaryStringRequestBody: true });\n            }\n            executor.executeAsync(requestOptions);\n        });\n    }\n}\nexports.SPRequestExecutorClient = SPRequestExecutorClient;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/net/sprequestexecutorclient.js","\"use strict\";\nconst exceptions_1 = require(\"../utils/exceptions\");\n/**\n * This module is substituted for the NodeFetchClient.ts during the packaging process. This helps to reduce the pnp.js file size by\n * not including all of the node dependencies\n */\nclass NodeFetchClient {\n    /**\n     * Always throws an error that NodeFetchClient is not supported for use in the browser\n     */\n    fetch() {\n        throw new exceptions_1.NodeFetchClientUnsupportedException();\n    }\n}\nexports.NodeFetchClient = NodeFetchClient;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/net/nodefetchclientbrowser.js","\"use strict\";\nvar cachingConfigurationProvider_1 = require(\"./cachingConfigurationProvider\");\nexports.CachingConfigurationProvider = cachingConfigurationProvider_1.default;\nvar spListConfigurationProvider_1 = require(\"./spListConfigurationProvider\");\nexports.SPListConfigurationProvider = spListConfigurationProvider_1.default;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/configuration/providers/index.js","\"use strict\";\nconst storage = require(\"../../utils/storage\");\nconst exceptions_1 = require(\"../../utils/exceptions\");\n/**\n * A caching provider which can wrap other non-caching providers\n *\n */\nclass CachingConfigurationProvider {\n    /**\n     * Creates a new caching configuration provider\n     * @constructor\n     * @param {IConfigurationProvider} wrappedProvider Provider which will be used to fetch the configuration\n     * @param {string} cacheKey Key that will be used to store cached items to the cache\n     * @param {IPnPClientStore} cacheStore OPTIONAL storage, which will be used to store cached settings.\n     */\n    constructor(wrappedProvider, cacheKey, cacheStore) {\n        this.wrappedProvider = wrappedProvider;\n        this.store = (cacheStore) ? cacheStore : this.selectPnPCache();\n        this.cacheKey = `_configcache_${cacheKey}`;\n    }\n    /**\n     * Gets the wrapped configuration providers\n     *\n     * @return {IConfigurationProvider} Wrapped configuration provider\n     */\n    getWrappedProvider() {\n        return this.wrappedProvider;\n    }\n    /**\n     * Loads the configuration values either from the cache or from the wrapped provider\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    getConfiguration() {\n        // Cache not available, pass control to  the wrapped provider\n        if ((!this.store) || (!this.store.enabled)) {\n            return this.wrappedProvider.getConfiguration();\n        }\n        // Value is found in cache, return it directly\n        let cachedConfig = this.store.get(this.cacheKey);\n        if (cachedConfig) {\n            return new Promise((resolve) => {\n                resolve(cachedConfig);\n            });\n        }\n        // Get and cache value from the wrapped provider\n        let providerPromise = this.wrappedProvider.getConfiguration();\n        providerPromise.then((providedConfig) => {\n            this.store.put(this.cacheKey, providedConfig);\n        });\n        return providerPromise;\n    }\n    selectPnPCache() {\n        let pnpCache = new storage.PnPClientStorage();\n        if ((pnpCache.local) && (pnpCache.local.enabled)) {\n            return pnpCache.local;\n        }\n        if ((pnpCache.session) && (pnpCache.session.enabled)) {\n            return pnpCache.session;\n        }\n        throw new exceptions_1.NoCacheAvailableException();\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CachingConfigurationProvider;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/configuration/providers/cachingConfigurationProvider.js","\"use strict\";\nconst cachingConfigurationProvider_1 = require(\"./cachingConfigurationProvider\");\n/**\n * A configuration provider which loads configuration values from a SharePoint list\n *\n */\nclass SPListConfigurationProvider {\n    /**\n     * Creates a new SharePoint list based configuration provider\n     * @constructor\n     * @param {string} webUrl Url of the SharePoint site, where the configuration list is located\n     * @param {string} listTitle Title of the SharePoint list, which contains the configuration settings (optional, default = \"config\")\n     */\n    constructor(sourceWeb, sourceListTitle = \"config\") {\n        this.sourceWeb = sourceWeb;\n        this.sourceListTitle = sourceListTitle;\n    }\n    /**\n     * Gets the url of the SharePoint site, where the configuration list is located\n     *\n     * @return {string} Url address of the site\n     */\n    get web() {\n        return this.sourceWeb;\n    }\n    /**\n     * Gets the title of the SharePoint list, which contains the configuration settings\n     *\n     * @return {string} List title\n     */\n    get listTitle() {\n        return this.sourceListTitle;\n    }\n    /**\n     * Loads the configuration values from the SharePoint list\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    getConfiguration() {\n        return this.web.lists.getByTitle(this.listTitle).items.select(\"Title\", \"Value\")\n            .getAs().then((data) => {\n            return data.reduce((configuration, item) => {\n                return Object.defineProperty(configuration, item.Title, {\n                    configurable: false,\n                    enumerable: false,\n                    value: item.Value,\n                    writable: false,\n                });\n            }, {});\n        });\n    }\n    /**\n     * Wraps the current provider in a cache enabled provider\n     *\n     * @return {CachingConfigurationProvider} Caching providers which wraps the current provider\n     */\n    asCaching() {\n        let cacheKey = `splist_${this.web.toUrl()}+${this.listTitle}`;\n        return new cachingConfigurationProvider_1.default(this, cacheKey);\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SPListConfigurationProvider;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/configuration/providers/spListConfigurationProvider.js"],"sourceRoot":""}