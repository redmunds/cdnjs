{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///pnp.min.js","webpack:///webpack/bootstrap 63d3c45970f1a4d9e87f","webpack:///./lib/pnp.js","webpack:///./lib/utils/util.js","webpack:///./lib/utils/storage.js","webpack:///./lib/configuration/configuration.js","webpack:///./lib/collections/collections.js","webpack:///./lib/utils/logging.js","webpack:///./lib/sharepoint/rest.js","webpack:///./lib/sharepoint/search.js","webpack:///./lib/sharepoint/queryable.js","webpack:///./lib/net/httpclient.js","webpack:///./lib/net/digestcache.js","webpack:///./lib/sharepoint/odata.js","webpack:///./lib/configuration/pnplibconfig.js","webpack:///./lib/net/fetchclient.js","webpack:///./lib/utils/exceptions.js","webpack:///./lib/sharepoint/caching.js","webpack:///./lib/sharepoint/searchsuggest.js","webpack:///./lib/sharepoint/site.js","webpack:///./lib/sharepoint/webs.js","webpack:///./lib/sharepoint/queryablesecurable.js","webpack:///./lib/sharepoint/roles.js","webpack:///./lib/sharepoint/sitegroups.js","webpack:///./lib/sharepoint/siteusers.js","webpack:///./lib/sharepoint/lists.js","webpack:///./lib/sharepoint/items.js","webpack:///./lib/sharepoint/folders.js","webpack:///./lib/sharepoint/files.js","webpack:///./lib/sharepoint/contenttypes.js","webpack:///./lib/sharepoint/attachmentfiles.js","webpack:///./lib/sharepoint/views.js","webpack:///./lib/sharepoint/fields.js","webpack:///./lib/sharepoint/types.js","webpack:///./lib/sharepoint/forms.js","webpack:///./lib/sharepoint/subscriptions.js","webpack:///./lib/sharepoint/usercustomactions.js","webpack:///./lib/sharepoint/navigation.js","webpack:///./lib/sharepoint/features.js","webpack:///./lib/sharepoint/userprofiles.js","webpack:///./lib/utils/files.js","webpack:///./lib/types/index.js","webpack:///./lib/sharepoint/index.js","webpack:///./lib/net/sprequestexecutorclient.js","webpack:///./lib/net/nodefetchclientbrowser.js","webpack:///./lib/configuration/providers/index.js","webpack:///./lib/configuration/providers/cachingConfigurationProvider.js","webpack:///./lib/configuration/providers/spListConfigurationProvider.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__export","hasOwnProperty","util_1","storage_1","configuration_1","logging_1","rest_1","pnplibconfig_1","util","Util","sp","Rest","storage","PnPClientStorage","config","Settings","log","Logger","setup","setRuntimeConfig","Def","Object","defineProperty","value","default","global","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","context","method","_len","arguments","params","Array","_key","apply","name","replace","regex","RegExp","test","location","search","results","exec","decodeURIComponent","getUrlParamByName","isFalse","index","s","substring","date","interval","units","ret","Date","toLocaleString","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","undefined","path","avoidCache","encodeURIComponent","toString","head","document","getElementsByTagName","e","createElement","appendChild","setAttribute","_len2","paths","_key2","filter","map","join","chars","text","possible","charAt","Math","floor","random","d","guid","r","candidateFunction","array","isArray","constructor","source","noOverwrite","check","o","getOwnPropertyNames","v","reduce","t","url","isUrlAbsolute","_spPageContextInfo","combinePaths","webAbsoluteUrl","webServerRelativeUrl","PnPClientStorageWrapper","store","defaultTimeoutMinutes","enabled","getItem","persistable","JSON","parse","expiration","delete","expire","setItem","createPersistable","removeItem","getter","_this","Promise","resolve","get","then","put","str","dateAdd","stringify","local","localStorage","session","sessionStorage","collections_1","_settings","Dictionary","add","hash","reject","merge","provider","_this2","getConfiguration","catch","reason","keys","values","indexOf","push","sourceAsDictionary","getKeys","sourceAsHash","val","splice","LogLevel","listeners","listener","subscribe","clearSubscribers","message","level","Verbose","json","entry","f","measure","activeLogLevel","set","_instance","LoggerImpl","count","Warning","subscribers","slice","subscriber","console","profile","profileEnd","ConsoleListener","msg","format","Info","warn","Error","error","data","FunctionListener","search_1","searchsuggest_1","site_1","webs_1","userprofiles_1","exceptions_1","query","finalQuery","querytext","SearchSuggest","execute","Querytext","Search","web","createBatch","addInWebUrl","hostWebUrl","_cdImpl","Site","Web","urlPart","UrlException","UserProfileQuery","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","queryable_1","_queryable_1$Queryabl","baseUrl","getPrototypeOf","formattedBody","SelectProperties","RefinementFilters","SortList","HithighlightedProperties","ReorderingRules","Properties","postBody","request","extend","__metadata","type","post","body","SearchResults","QueryableInstance","rawResponse","response","postquery","PrimarySearchResults","formatSearchResults","PrimaryQueryResult","RelevantResults","Table","Rows","RawSearchResults","ElapsedTime","RowCount","TotalRows","TotalRowsIncludingDuplicates","rawResults","tempResults","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","SearchResult","Cells","err","return","rawItem","item","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Key","Value","SortDirection","ReorderingRuleMatchType","QueryPropertyValueType","_typeof","obj","httpclient_1","odata_1","caching_1","Queryable","_query","_batch","urlStr","lastIndexOf","_parentUrl","_url","q","pathPart","hasBatch","addBatchDependency","batch","AlreadyInBatchException","options","RuntimeConfig","globalCacheDisable","_useCaching","_cachingOptions","makeUrlAbsolute","toUrl","parser","ODataDefaultParser","getOptions","getImpl","postOptions","postImpl","patchOptions","patchImpl","deleteOptions","deleteImpl","parentUrl","parent","CachingOptions","toUrlAndQuery","_ret","CachingParserWrapper","client","HttpClient","patch","QueryableCollection","_Queryable","selects","expands","orderBy","ascending","asc","skip","top","_Queryable2","_len3","_key3","_len4","_key4","digestcache_1","_impl","fetchClientFactory","_digestCache","DigestCache","opts","cache","credentials","headers","Headers","mergeHeaders","has","append","toUpperCase","APIUrlException","webUrl","substr","getDigest","digest","fetchRaw","rawHeaders","retry","ctx","fetch","delay","status","attempts","retryCount","setTimeout","getCtxCallback","retryContext","temp","Request","forEach","CachedDigest","_httpClient","_digests","cachedDigest","now","Accept","Content-type","GetContextWebInformation","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","clear","extractOdataId","candidate","ODataIdException","getEntityUrl","entity","uri","write","ODataValue","ODataValueParserImpl","ODataEntity","ODataEntityParserImpl","ODataEntityArray","ODataEntityArrayParserImpl","_get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","exceptions_2","ODataParserBase","handleError","parseFloat","parseODataJSON","ok","ProcessHttpClientResponseException","statusText","result","_ODataParserBase","ODataRawParserImpl","_ODataParserBase2","_ODataParserBase3","_this4","_this5","_ODataParserBase4","_this6","_this7","ODataRaw","ODataBatch","_batchId","getGUID","_requests","_batchDependencies","info","resolver","promise","_this8","executeImpl","_this9","batchBody","currentChangeSetId","reqInfo","Content-Type","batchHeaders","batchOptions","requestUrl","_parseResponse","responses","BatchParseException","chain","_","header","statusRegExp","lines","split","state","line","trim","parts","parseInt","Response","TextFileParser","BlobFileParser","blob","JSONFileParser","BufferFileParser","isFunction","arrayBuffer","buffer","_runtimeConfig","fetchclient_1","RuntimeConfigImpl","_headers","_defaultCachingStore","_defaultCachingTimeoutSeconds","_globalCacheDisable","_fetchClientFactory","FetchClient","defaultCachingStore","defaultCachingTimeoutSeconds","defaultLog","_Error","NoCacheAvailableException","_Error2","_Error3","_this3","AuthUrlException","_Error4","NodeFetchClientUnsupportedException","_Error5","SPRequestExecutorUndefinedException","_Error6","MaxCommentLengthException","_Error7","NotSupportedInBatchException","_Error8","operation","_Error9","_Error10","_this10","_Error11","_this11","FunctionExpectedException","_Error12","_this12","_Error13","_this13","storeName","_parser","_cacheOptions","mapQueryToQueryString","SearchSuggestResult","personalCount","preQuery","hitHighlighting","capitalize","culture","stemming","includePeople","queryRules","prefixMatch","PeopleNames","suggest","PersonalResults","Queries","usercustomactions_1","features_1","SupportedSchemaVersions","absoluteWebUrl","GetDocumentLibraries","absolutePageUrl","GetWebUrlFromPageUrl","Features","UserCustomActions","queryablesecurable_1","lists_1","fields_1","navigation_1","sitegroups_1","contenttypes_1","folders_1","roles_1","files_1","lists_2","siteusers_1","Webs","webPath","title","description","template","language","inheritPermissions","additionalSettings","Description","Language","Title","Url","UseSamePermissionsAsParentSite","WebTemplate","parameters","_queryablesecurable_","folderRelativeUrl","Folder","fileRelativeUrl","File","listRelativeUrl","List","properties","X-HTTP-Method","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","concat","perms","loginName","logonName","includeCrossLanugage","select","SiteUser","filename","size","progId","ContentTypes","Lists","Fields","Navigation","SiteUsers","SiteGroups","CurrentUser","Folders","RoleDefinitions","QueryableSecurable","copyRoleAssignments","clearSubscopes","Breaker","_queryable_1$Queryabl2","copy","b","break","Resetter","_queryable_1$Queryabl3","reset","RoleAssignments","principalId","roleDefId","a","ra","RoleAssignment","RoleDefinitionBindings","RoleDefinition","roleTypeKind","order","basePermissions","BasePermissions","Name","Order","definition","getById","Id","_queryable_1$Queryabl4","retDef","getParent","getByName","_queryable_1$Queryabl5","PrincipalType","group","groupName","SiteGroup","sg","g","retGroup","email","su","LoginName","getByLoginName","user","items_1","views_1","forms_1","subscriptions_1","list","enableContentTypes","AllowContentTypes","BaseTemplate","ContentTypesEnabled","getByTitle","update","created","viewId","View","eTag","IF-Match","retList","expand","Recycle","viewXml","RenderListData","itemId","formId","mode","ListData","ReserveListItemId","getAs","ListItemEntityTypeFullName","Items","Views","Forms","Subscriptions","attachmentfiles_1","Item","PagedItemCollectionParser","listItemEntityTypeFullName","doAdd","listItemEntityType","postAs","parentList","removeDependency","getListItemEntityTypeFullName","n","ItemUpdatedParser","action","GetWOPIFrameUrl","formValues","newDocumentUpdate","bNewDocumentUpdate","AttachmentFiles","ContentType","PagedItemCollection","nextUrl","hasNext","items","getPaged","_odata_1$ODataParserB","__next","_odata_1$ODataParserB2","odata.etag","folder","Files","content","shouldOverWrite","file","progress","chunkSize","adder","setContentChunked","fileUrl","templateFileType","comment","uploadId","checkinType","CheckinType","Major","scope","WebPartsPersonalizationScope","User","moveOperations","MoveOperations","Overwrite","binaryStringResponseBody","setter","fileSize","blockCount","blockNumber","currentPointer","stage","totalBlocks","startUpload","_loop","pointer","continueUpload","finishUpload","fragment","fileOffset","ServerRelativeUrl","Versions","versionId","Version","label","TemplateFileType","ct","contentTypeId","contentType","StringValue","Group","FieldLinks","fl","FieldLink","AttachmentFile","personalView","PersonalView","view","ViewFields","fieldTitleOrInternalName","fieldInternalName","field","Types","Field","xml","SchemaXml","fieldType","maxLength","FieldTypeKind","MaxLength","formula","dateFormat","outputType","FieldTypes","Text","DateFormat","Formula","OutputType","displayFormat","DateTimeFieldFormatType","DateOnly","calendarType","CalendarType","Gregorian","friendlyDisplayFormat","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","minValue","maxValue","MinimumValue","MaximumValue","currencyLocalId","CurrencyLocaleId","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","UrlFieldFormatType","Hyperlink","show","ControlMode","AddFieldOptions","PageType","Form","subscriptionId","subscription","Subscription","notificationUrl","expirationDate","clientState","resource","expirationDateTime","uca","UserCustomAction","NavigationNodes","node","NavigationNode","visible","IsVisible","nodeId","previousNodeId","mover","feature","Feature","force","featdefScope","featureId","remover","idGet","remove","DefinitionId","FileUtil","profileLoader","ProfileLoader","maxCount","propertyName","follower","followee","profilePicSource","readBlobAsArrayBuffer","String","fromCharCode","Uint16Array","emails","createPersonalSiteEnqueueBulk","interactiveRequest","createPersonalSite","share","shareAllSocialData","ownerUserProfile","userProfile","emailIDs","readBlobAsText","readBlobAs","reader","FileReader","onload","readAsText","readAsArrayBuffer","sprequestexecutorclient_1","SPRequestExecutorClient","nodefetchclient_1","NodeFetchClient","convertToResponse","spResponse","responseHeaders","h","statusCode","SP","RequestExecutor","addinWebUrl","executor","entries","requestOptions","success","binaryStringRequestBody","executeAsync","cachingConfigurationProvider_1","CachingConfigurationProvider","spListConfigurationProvider_1","SPListConfigurationProvider","wrappedProvider","cacheKey","cacheStore","selectPnPCache","cachedConfig","providerPromise","providedConfig","pnpCache","sourceWeb","sourceListTitle","lists","listTitle","configuration"],"mappings":"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","file":"pnp.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"$pnp\"] = factory();\n\telse\n\t\troot[\"$pnp\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/**\n * sp-pnp-js v2.0.0 - A JavaScript library for SharePoint development.\n * MIT (https://github.com/SharePoint/PnP-JS-Core/blob/master/LICENSE)\n * Copyright (c) 2016 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/SharePoint/PnP-JS-Core\n * bugs: https://github.com/SharePoint/PnP-JS-Core/issues\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"$pnp\"] = factory();\n\telse\n\t\troot[\"$pnp\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/assets/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tfunction __export(m) {\n\t  for (var p in m) {\n\t    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t  }\n\t}\n\tvar util_1 = __webpack_require__(1);\n\tvar storage_1 = __webpack_require__(2);\n\tvar configuration_1 = __webpack_require__(3);\n\tvar logging_1 = __webpack_require__(5);\n\tvar rest_1 = __webpack_require__(6);\n\tvar pnplibconfig_1 = __webpack_require__(12);\n\t/**\n\t * Root class of the Patterns and Practices namespace, provides an entry point to the library\n\t */\n\t/**\n\t * Utility methods\n\t */\n\texports.util = util_1.Util;\n\t/**\n\t * Provides access to the REST interface\n\t */\n\texports.sp = new rest_1.Rest();\n\t/**\n\t * Provides access to local and session storage\n\t */\n\texports.storage = new storage_1.PnPClientStorage();\n\t/**\n\t * Global configuration instance to which providers can be added\n\t */\n\texports.config = new configuration_1.Settings();\n\t/**\n\t * Global logging instance to which subscribers can be registered and messages written\n\t */\n\texports.log = logging_1.Logger;\n\t/**\n\t * Allows for the configuration of the library\n\t */\n\texports.setup = pnplibconfig_1.setRuntimeConfig;\n\t/**\n\t * Expose a subset of classes from the library for public consumption\n\t */\n\t__export(__webpack_require__(39));\n\t// creating this class instead of directly assigning to default fixes issue #116\n\tvar Def = {\n\t  /**\n\t   * Global configuration instance to which providers can be added\n\t   */\n\t  config: exports.config,\n\t  /**\n\t   * Global logging instance to which subscribers can be registered and messages written\n\t   */\n\t  log: exports.log,\n\t  /**\n\t   * Provides access to local and session storage\n\t   */\n\t  setup: exports.setup,\n\t  /**\n\t   * Provides access to the REST interface\n\t   */\n\t  sp: exports.sp,\n\t  /**\n\t   * Provides access to local and session storage\n\t   */\n\t  storage: exports.storage,\n\t  /**\n\t   * Utility methods\n\t   */\n\t  util: exports.util\n\t};\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\t/**\n\t * Enables use of the import pnp from syntax\n\t */\n\texports.default = Def;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Util = function () {\n\t    function Util() {\n\t        _classCallCheck(this, Util);\n\t    }\n\t\n\t    _createClass(Util, null, [{\n\t        key: \"getCtxCallback\",\n\t\n\t        /**\n\t         * Gets a callback function which will maintain context across async calls.\n\t         * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\n\t         *\n\t         * @param context The object that will be the 'this' value in the callback\n\t         * @param method The method to which we will apply the context and parameters\n\t         * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\n\t         */\n\t        value: function getCtxCallback(context, method) {\n\t            for (var _len = arguments.length, params = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n\t                params[_key - 2] = arguments[_key];\n\t            }\n\t\n\t            return function () {\n\t                method.apply(context, params);\n\t            };\n\t        }\n\t        /**\n\t         * Tests if a url param exists\n\t         *\n\t         * @param name The name of the url paramter to check\n\t         */\n\t\n\t    }, {\n\t        key: \"urlParamExists\",\n\t        value: function urlParamExists(name) {\n\t            name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n\t            var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n\t            return regex.test(location.search);\n\t        }\n\t        /**\n\t         * Gets a url param value by name\n\t         *\n\t         * @param name The name of the paramter for which we want the value\n\t         */\n\t\n\t    }, {\n\t        key: \"getUrlParamByName\",\n\t        value: function getUrlParamByName(name) {\n\t            name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n\t            var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n\t            var results = regex.exec(location.search);\n\t            return results == null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n\t        }\n\t        /**\n\t         * Gets a url param by name and attempts to parse a bool value\n\t         *\n\t         * @param name The name of the paramter for which we want the boolean value\n\t         */\n\t\n\t    }, {\n\t        key: \"getUrlParamBoolByName\",\n\t        value: function getUrlParamBoolByName(name) {\n\t            var p = this.getUrlParamByName(name);\n\t            var isFalse = p === \"\" || /false|0/i.test(p);\n\t            return !isFalse;\n\t        }\n\t        /**\n\t         * Inserts the string s into the string target as the index specified by index\n\t         *\n\t         * @param target The string into which we will insert s\n\t         * @param index The location in target to insert s (zero based)\n\t         * @param s The string to insert into target at position index\n\t         */\n\t\n\t    }, {\n\t        key: \"stringInsert\",\n\t        value: function stringInsert(target, index, s) {\n\t            if (index > 0) {\n\t                return target.substring(0, index) + s + target.substring(index, target.length);\n\t            }\n\t            return s + target;\n\t        }\n\t        /**\n\t         * Adds a value to a date\n\t         *\n\t         * @param date The date to which we will add units, done in local time\n\t         * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\n\t         * @param units The amount to add to date of the given interval\n\t         *\n\t         * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\n\t         */\n\t\n\t    }, {\n\t        key: \"dateAdd\",\n\t        value: function dateAdd(date, interval, units) {\n\t            var ret = new Date(date.toLocaleString()); // don't change original date\n\t            switch (interval.toLowerCase()) {\n\t                case \"year\":\n\t                    ret.setFullYear(ret.getFullYear() + units);\n\t                    break;\n\t                case \"quarter\":\n\t                    ret.setMonth(ret.getMonth() + 3 * units);\n\t                    break;\n\t                case \"month\":\n\t                    ret.setMonth(ret.getMonth() + units);\n\t                    break;\n\t                case \"week\":\n\t                    ret.setDate(ret.getDate() + 7 * units);\n\t                    break;\n\t                case \"day\":\n\t                    ret.setDate(ret.getDate() + units);\n\t                    break;\n\t                case \"hour\":\n\t                    ret.setTime(ret.getTime() + units * 3600000);\n\t                    break;\n\t                case \"minute\":\n\t                    ret.setTime(ret.getTime() + units * 60000);\n\t                    break;\n\t                case \"second\":\n\t                    ret.setTime(ret.getTime() + units * 1000);\n\t                    break;\n\t                default:\n\t                    ret = undefined;\n\t                    break;\n\t            }\n\t            return ret;\n\t        }\n\t        /**\n\t         * Loads a stylesheet into the current page\n\t         *\n\t         * @param path The url to the stylesheet\n\t         * @param avoidCache If true a value will be appended as a query string to avoid browser caching issues\n\t         */\n\t\n\t    }, {\n\t        key: \"loadStylesheet\",\n\t        value: function loadStylesheet(path, avoidCache) {\n\t            if (avoidCache) {\n\t                path += \"?\" + encodeURIComponent(new Date().getTime().toString());\n\t            }\n\t            var head = document.getElementsByTagName(\"head\");\n\t            if (head.length > 0) {\n\t                var e = document.createElement(\"link\");\n\t                head[0].appendChild(e);\n\t                e.setAttribute(\"type\", \"text/css\");\n\t                e.setAttribute(\"rel\", \"stylesheet\");\n\t                e.setAttribute(\"href\", path);\n\t            }\n\t        }\n\t        /**\n\t         * Combines an arbitrary set of paths ensuring that the slashes are normalized\n\t         *\n\t         * @param paths 0 to n path parts to combine\n\t         */\n\t\n\t    }, {\n\t        key: \"combinePaths\",\n\t        value: function combinePaths() {\n\t            for (var _len2 = arguments.length, paths = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t                paths[_key2] = arguments[_key2];\n\t            }\n\t\n\t            return paths.filter(function (path) {\n\t                return typeof path !== \"undefined\" && path !== null;\n\t            }).map(function (path) {\n\t                return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\");\n\t            }).join(\"/\").replace(/\\\\/g, \"/\");\n\t        }\n\t        /**\n\t         * Gets a random string of chars length\n\t         *\n\t         * @param chars The length of the random string to generate\n\t         */\n\t\n\t    }, {\n\t        key: \"getRandomString\",\n\t        value: function getRandomString(chars) {\n\t            var text = new Array(chars);\n\t            var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\t            for (var i = 0; i < chars; i++) {\n\t                text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\n\t            }\n\t            return text.join(\"\");\n\t        }\n\t        /**\n\t         * Gets a random GUID value\n\t         *\n\t         * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n\t         */\n\t        /* tslint:disable no-bitwise */\n\t\n\t    }, {\n\t        key: \"getGUID\",\n\t        value: function getGUID() {\n\t            var d = new Date().getTime();\n\t            var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n\t                var r = (d + Math.random() * 16) % 16 | 0;\n\t                d = Math.floor(d / 16);\n\t                return (c === \"x\" ? r : r & 0x3 | 0x8).toString(16);\n\t            });\n\t            return guid;\n\t        }\n\t        /* tslint:enable */\n\t        /**\n\t         * Determines if a given value is a function\n\t         *\n\t         * @param candidateFunction The thing to test for being a function\n\t         */\n\t\n\t    }, {\n\t        key: \"isFunction\",\n\t        value: function isFunction(candidateFunction) {\n\t            return typeof candidateFunction === \"function\";\n\t        }\n\t        /**\n\t         * @returns whether the provided parameter is a JavaScript Array or not.\n\t        */\n\t\n\t    }, {\n\t        key: \"isArray\",\n\t        value: function isArray(array) {\n\t            if (Array.isArray) {\n\t                return Array.isArray(array);\n\t            }\n\t            return array && typeof array.length === \"number\" && array.constructor === Array;\n\t        }\n\t        /**\n\t         * Determines if a string is null or empty or undefined\n\t         *\n\t         * @param s The string to test\n\t         */\n\t\n\t    }, {\n\t        key: \"stringIsNullOrEmpty\",\n\t        value: function stringIsNullOrEmpty(s) {\n\t            return typeof s === \"undefined\" || s === null || s === \"\";\n\t        }\n\t        /**\n\t         * Provides functionality to extend the given object by doing a shallow copy\n\t         *\n\t         * @param target The object to which properties will be copied\n\t         * @param source The source object from which properties will be copied\n\t         * @param noOverwrite If true existing properties on the target are not overwritten from the source\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"extend\",\n\t        value: function extend(target, source) {\n\t            var noOverwrite = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\t\n\t            if (source === null || typeof source === \"undefined\") {\n\t                return target;\n\t            }\n\t            // ensure we don't overwrite things we don't want overwritten\n\t            var check = noOverwrite ? function (o, i) {\n\t                return !(i in o);\n\t            } : function () {\n\t                return true;\n\t            };\n\t            return Object.getOwnPropertyNames(source).filter(function (v) {\n\t                return check(target, v);\n\t            }).reduce(function (t, v) {\n\t                t[v] = source[v];\n\t                return t;\n\t            }, target);\n\t        }\n\t        /**\n\t         * Determines if a given url is absolute\n\t         *\n\t         * @param url The url to check to see if it is absolute\n\t         */\n\t\n\t    }, {\n\t        key: \"isUrlAbsolute\",\n\t        value: function isUrlAbsolute(url) {\n\t            return (/^https?:\\/\\/|^\\/\\//i.test(url)\n\t            );\n\t        }\n\t        /**\n\t         * Attempts to make the supplied relative url absolute based on the _spPageContextInfo object, if available\n\t         *\n\t         * @param url The relative url to make absolute\n\t         */\n\t\n\t    }, {\n\t        key: \"makeUrlAbsolute\",\n\t        value: function makeUrlAbsolute(url) {\n\t            if (Util.isUrlAbsolute(url)) {\n\t                return url;\n\t            }\n\t            if (typeof global._spPageContextInfo !== \"undefined\") {\n\t                if (global._spPageContextInfo.hasOwnProperty(\"webAbsoluteUrl\")) {\n\t                    return Util.combinePaths(global._spPageContextInfo.webAbsoluteUrl, url);\n\t                } else if (global._spPageContextInfo.hasOwnProperty(\"webServerRelativeUrl\")) {\n\t                    return Util.combinePaths(global._spPageContextInfo.webServerRelativeUrl, url);\n\t                }\n\t            } else {\n\t                return url;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Util;\n\t}();\n\t\n\texports.Util = Util;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar util_1 = __webpack_require__(1);\n\t/**\n\t * A wrapper class to provide a consistent interface to browser based storage\n\t *\n\t */\n\t\n\tvar PnPClientStorageWrapper = function () {\n\t    /**\n\t     * Creates a new instance of the PnPClientStorageWrapper class\n\t     *\n\t     * @constructor\n\t     */\n\t    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\n\t        _classCallCheck(this, PnPClientStorageWrapper);\n\t\n\t        this.store = store;\n\t        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\n\t        this.defaultTimeoutMinutes = defaultTimeoutMinutes === void 0 ? 5 : defaultTimeoutMinutes;\n\t        this.enabled = this.test();\n\t    }\n\t    /**\n\t     * Get a value from storage, or null if that value does not exist\n\t     *\n\t     * @param key The key whose value we want to retrieve\n\t     */\n\t\n\t\n\t    _createClass(PnPClientStorageWrapper, [{\n\t        key: \"get\",\n\t        value: function get(key) {\n\t            if (!this.enabled) {\n\t                return null;\n\t            }\n\t            var o = this.store.getItem(key);\n\t            if (o == null) {\n\t                return null;\n\t            }\n\t            var persistable = JSON.parse(o);\n\t            if (new Date(persistable.expiration) <= new Date()) {\n\t                this.delete(key);\n\t                return null;\n\t            } else {\n\t                return persistable.value;\n\t            }\n\t        }\n\t        /**\n\t         * Adds a value to the underlying storage\n\t         *\n\t         * @param key The key to use when storing the provided value\n\t         * @param o The value to store\n\t         * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n\t         */\n\t\n\t    }, {\n\t        key: \"put\",\n\t        value: function put(key, o, expire) {\n\t            if (this.enabled) {\n\t                this.store.setItem(key, this.createPersistable(o, expire));\n\t            }\n\t        }\n\t        /**\n\t         * Deletes a value from the underlying storage\n\t         *\n\t         * @param key The key of the pair we want to remove from storage\n\t         */\n\t\n\t    }, {\n\t        key: \"delete\",\n\t        value: function _delete(key) {\n\t            if (this.enabled) {\n\t                this.store.removeItem(key);\n\t            }\n\t        }\n\t        /**\n\t         * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\n\t         *\n\t         * @param key The key to use when storing the provided value\n\t         * @param getter A function which will upon execution provide the desired value\n\t         * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n\t         */\n\t\n\t    }, {\n\t        key: \"getOrPut\",\n\t        value: function getOrPut(key, getter, expire) {\n\t            var _this = this;\n\t\n\t            if (!this.enabled) {\n\t                return getter();\n\t            }\n\t            return new Promise(function (resolve) {\n\t                var o = _this.get(key);\n\t                if (o == null) {\n\t                    getter().then(function (d) {\n\t                        _this.put(key, d, expire);\n\t                        resolve(d);\n\t                    });\n\t                } else {\n\t                    resolve(o);\n\t                }\n\t            });\n\t        }\n\t        /**\n\t         * Used to determine if the wrapped storage is available currently\n\t         */\n\t\n\t    }, {\n\t        key: \"test\",\n\t        value: function test() {\n\t            var str = \"test\";\n\t            try {\n\t                this.store.setItem(str, str);\n\t                this.store.removeItem(str);\n\t                return true;\n\t            } catch (e) {\n\t                return false;\n\t            }\n\t        }\n\t        /**\n\t         * Creates the persistable to store\n\t         */\n\t\n\t    }, {\n\t        key: \"createPersistable\",\n\t        value: function createPersistable(o, expire) {\n\t            if (typeof expire === \"undefined\") {\n\t                expire = util_1.Util.dateAdd(new Date(), \"minute\", this.defaultTimeoutMinutes);\n\t            }\n\t            return JSON.stringify({ expiration: expire, value: o });\n\t        }\n\t    }]);\n\t\n\t    return PnPClientStorageWrapper;\n\t}();\n\t\n\texports.PnPClientStorageWrapper = PnPClientStorageWrapper;\n\t/**\n\t * A class that will establish wrappers for both local and session storage\n\t */\n\t\n\tvar PnPClientStorage =\n\t/**\n\t * Creates a new instance of the PnPClientStorage class\n\t *\n\t * @constructor\n\t */\n\tfunction PnPClientStorage() {\n\t    _classCallCheck(this, PnPClientStorage);\n\t\n\t    this.local = typeof localStorage !== \"undefined\" ? new PnPClientStorageWrapper(localStorage) : null;\n\t    this.session = typeof sessionStorage !== \"undefined\" ? new PnPClientStorageWrapper(sessionStorage) : null;\n\t};\n\t\n\texports.PnPClientStorage = PnPClientStorage;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar collections_1 = __webpack_require__(4);\n\t/**\n\t * Class used to manage the current application settings\n\t *\n\t */\n\t\n\tvar Settings = function () {\n\t    /**\n\t     * Creates a new instance of the settings class\n\t     *\n\t     * @constructor\n\t     */\n\t    function Settings() {\n\t        _classCallCheck(this, Settings);\n\t\n\t        this._settings = new collections_1.Dictionary();\n\t    }\n\t    /**\n\t     * Adds a new single setting, or overwrites a previous setting with the same key\n\t     *\n\t     * @param {string} key The key used to store this setting\n\t     * @param {string} value The setting value to store\n\t     */\n\t\n\t\n\t    _createClass(Settings, [{\n\t        key: \"add\",\n\t        value: function add(key, value) {\n\t            this._settings.add(key, value);\n\t        }\n\t        /**\n\t         * Adds a JSON value to the collection as a string, you must use getJSON to rehydrate the object when read\n\t         *\n\t         * @param {string} key The key used to store this setting\n\t         * @param {any} value The setting value to store\n\t         */\n\t\n\t    }, {\n\t        key: \"addJSON\",\n\t        value: function addJSON(key, value) {\n\t            this._settings.add(key, JSON.stringify(value));\n\t        }\n\t        /**\n\t         * Applies the supplied hash to the setting collection overwriting any existing value, or created new values\n\t         *\n\t         * @param {TypedHash<any>} hash The set of values to add\n\t         */\n\t\n\t    }, {\n\t        key: \"apply\",\n\t        value: function apply(hash) {\n\t            var _this = this;\n\t\n\t            return new Promise(function (resolve, reject) {\n\t                try {\n\t                    _this._settings.merge(hash);\n\t                    resolve();\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            });\n\t        }\n\t        /**\n\t         * Loads configuration settings into the collection from the supplied provider and returns a Promise\n\t         *\n\t         * @param {IConfigurationProvider} provider The provider from which we will load the settings\n\t         */\n\t\n\t    }, {\n\t        key: \"load\",\n\t        value: function load(provider) {\n\t            var _this2 = this;\n\t\n\t            return new Promise(function (resolve, reject) {\n\t                provider.getConfiguration().then(function (value) {\n\t                    _this2._settings.merge(value);\n\t                    resolve();\n\t                }).catch(function (reason) {\n\t                    reject(reason);\n\t                });\n\t            });\n\t        }\n\t        /**\n\t         * Gets a value from the configuration\n\t         *\n\t         * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n\t         * @return {string} string value from the configuration\n\t         */\n\t\n\t    }, {\n\t        key: \"get\",\n\t        value: function get(key) {\n\t            return this._settings.get(key);\n\t        }\n\t        /**\n\t         * Gets a JSON value, rehydrating the stored string to the original object\n\t         *\n\t         * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n\t         * @return {any} object from the configuration\n\t         */\n\t\n\t    }, {\n\t        key: \"getJSON\",\n\t        value: function getJSON(key) {\n\t            var o = this.get(key);\n\t            if (typeof o === \"undefined\" || o === null) {\n\t                return o;\n\t            }\n\t            return JSON.parse(o);\n\t        }\n\t    }]);\n\t\n\t    return Settings;\n\t}();\n\t\n\texports.Settings = Settings;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/**\n\t * Generic dictionary\n\t */\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Dictionary = function () {\n\t    /**\n\t     * Creates a new instance of the Dictionary<T> class\n\t     *\n\t     * @constructor\n\t     */\n\t    function Dictionary() {\n\t        var keys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t        var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\t\n\t        _classCallCheck(this, Dictionary);\n\t\n\t        this.keys = keys;\n\t        this.values = values;\n\t    }\n\t    /**\n\t     * Gets a value from the collection using the specified key\n\t     *\n\t     * @param key The key whose value we want to return, returns null if the key does not exist\n\t     */\n\t\n\t\n\t    _createClass(Dictionary, [{\n\t        key: \"get\",\n\t        value: function get(key) {\n\t            var index = this.keys.indexOf(key);\n\t            if (index < 0) {\n\t                return null;\n\t            }\n\t            return this.values[index];\n\t        }\n\t        /**\n\t         * Adds the supplied key and value to the dictionary\n\t         *\n\t         * @param key The key to add\n\t         * @param o The value to add\n\t         */\n\t\n\t    }, {\n\t        key: \"add\",\n\t        value: function add(key, o) {\n\t            var index = this.keys.indexOf(key);\n\t            if (index > -1) {\n\t                this.values[index] = o;\n\t            } else {\n\t                this.keys.push(key);\n\t                this.values.push(o);\n\t            }\n\t        }\n\t        /**\n\t         * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\n\t         */\n\t\n\t    }, {\n\t        key: \"merge\",\n\t        value: function merge(source) {\n\t            var _this = this;\n\t\n\t            if (\"getKeys\" in source) {\n\t                (function () {\n\t                    var sourceAsDictionary = source;\n\t                    sourceAsDictionary.getKeys().map(function (key) {\n\t                        _this.add(key, sourceAsDictionary.get(key));\n\t                    });\n\t                })();\n\t            } else {\n\t                var sourceAsHash = source;\n\t                for (var key in sourceAsHash) {\n\t                    if (sourceAsHash.hasOwnProperty(key)) {\n\t                        this.add(key, sourceAsHash[key]);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        /**\n\t         * Removes a value from the dictionary\n\t         *\n\t         * @param key The key of the key/value pair to remove. Returns null if the key was not found.\n\t         */\n\t\n\t    }, {\n\t        key: \"remove\",\n\t        value: function remove(key) {\n\t            var index = this.keys.indexOf(key);\n\t            if (index < 0) {\n\t                return null;\n\t            }\n\t            var val = this.values[index];\n\t            this.keys.splice(index, 1);\n\t            this.values.splice(index, 1);\n\t            return val;\n\t        }\n\t        /**\n\t         * Returns all the keys currently in the dictionary as an array\n\t         */\n\t\n\t    }, {\n\t        key: \"getKeys\",\n\t        value: function getKeys() {\n\t            return this.keys;\n\t        }\n\t        /**\n\t         * Returns all the values currently in the dictionary as an array\n\t         */\n\t\n\t    }, {\n\t        key: \"getValues\",\n\t        value: function getValues() {\n\t            return this.values;\n\t        }\n\t        /**\n\t         * Clears the current dictionary\n\t         */\n\t\n\t    }, {\n\t        key: \"clear\",\n\t        value: function clear() {\n\t            this.keys = [];\n\t            this.values = [];\n\t        }\n\t        /**\n\t         * Gets a count of the items currently in the dictionary\n\t         */\n\t\n\t    }, {\n\t        key: \"count\",\n\t        value: function count() {\n\t            return this.keys.length;\n\t        }\n\t    }]);\n\t\n\t    return Dictionary;\n\t}();\n\t\n\texports.Dictionary = Dictionary;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/**\n\t * A set of logging levels\n\t *\n\t */\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar LogLevel;\n\t(function (LogLevel) {\n\t    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\n\t    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\n\t    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\n\t    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n\t    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\n\t})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\n\t/**\n\t * Class used to subscribe ILogListener and log messages throughout an application\n\t *\n\t */\n\t\n\tvar Logger = function () {\n\t    function Logger() {\n\t        _classCallCheck(this, Logger);\n\t    }\n\t\n\t    _createClass(Logger, null, [{\n\t        key: \"subscribe\",\n\t\n\t        /**\n\t         * Adds ILogListener instances to the set of subscribed listeners\n\t         *\n\t         * @param listeners One or more listeners to subscribe to this log\n\t         */\n\t        value: function subscribe() {\n\t            for (var _len = arguments.length, listeners = Array(_len), _key = 0; _key < _len; _key++) {\n\t                listeners[_key] = arguments[_key];\n\t            }\n\t\n\t            listeners.map(function (listener) {\n\t                return Logger.instance.subscribe(listener);\n\t            });\n\t        }\n\t        /**\n\t         * Clears the subscribers collection, returning the collection before modifiction\n\t         */\n\t\n\t    }, {\n\t        key: \"clearSubscribers\",\n\t        value: function clearSubscribers() {\n\t            return Logger.instance.clearSubscribers();\n\t        }\n\t        /**\n\t         * Gets the current subscriber count\n\t         */\n\t\n\t    }, {\n\t        key: \"write\",\n\t\n\t        /**\n\t         * Writes the supplied string to the subscribed listeners\n\t         *\n\t         * @param message The message to write\n\t         * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n\t         */\n\t        value: function write(message) {\n\t            var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : LogLevel.Verbose;\n\t\n\t            Logger.instance.log({ level: level, message: message });\n\t        }\n\t        /**\n\t         * Writes the supplied string to the subscribed listeners\n\t         *\n\t         * @param json The json object to stringify and write\n\t         * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n\t         */\n\t\n\t    }, {\n\t        key: \"writeJSON\",\n\t        value: function writeJSON(json) {\n\t            var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : LogLevel.Verbose;\n\t\n\t            Logger.instance.log({ level: level, message: JSON.stringify(json) });\n\t        }\n\t        /**\n\t         * Logs the supplied entry to the subscribed listeners\n\t         *\n\t         * @param entry The message to log\n\t         */\n\t\n\t    }, {\n\t        key: \"log\",\n\t        value: function log(entry) {\n\t            Logger.instance.log(entry);\n\t        }\n\t        /**\n\t         * Logs performance tracking data for the the execution duration of the supplied function using console.profile\n\t         *\n\t         * @param name The name of this profile boundary\n\t         * @param f The function to execute and track within this performance boundary\n\t         */\n\t\n\t    }, {\n\t        key: \"measure\",\n\t        value: function measure(name, f) {\n\t            return Logger.instance.measure(name, f);\n\t        }\n\t    }, {\n\t        key: \"activeLogLevel\",\n\t        get: function get() {\n\t            return Logger.instance.activeLogLevel;\n\t        },\n\t        set: function set(value) {\n\t            Logger.instance.activeLogLevel = value;\n\t        }\n\t    }, {\n\t        key: \"instance\",\n\t        get: function get() {\n\t            if (typeof Logger._instance === \"undefined\" || Logger._instance === null) {\n\t                Logger._instance = new LoggerImpl();\n\t            }\n\t            return Logger._instance;\n\t        }\n\t    }, {\n\t        key: \"count\",\n\t        get: function get() {\n\t            return Logger.instance.count;\n\t        }\n\t    }]);\n\t\n\t    return Logger;\n\t}();\n\t\n\texports.Logger = Logger;\n\t\n\tvar LoggerImpl = function () {\n\t    function LoggerImpl() {\n\t        var activeLogLevel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : LogLevel.Warning;\n\t        var subscribers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\t\n\t        _classCallCheck(this, LoggerImpl);\n\t\n\t        this.activeLogLevel = activeLogLevel;\n\t        this.subscribers = subscribers;\n\t    }\n\t\n\t    _createClass(LoggerImpl, [{\n\t        key: \"subscribe\",\n\t        value: function subscribe(listener) {\n\t            this.subscribers.push(listener);\n\t        }\n\t    }, {\n\t        key: \"clearSubscribers\",\n\t        value: function clearSubscribers() {\n\t            var s = this.subscribers.slice(0);\n\t            this.subscribers.length = 0;\n\t            return s;\n\t        }\n\t    }, {\n\t        key: \"write\",\n\t        value: function write(message) {\n\t            var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : LogLevel.Verbose;\n\t\n\t            this.log({ level: level, message: message });\n\t        }\n\t    }, {\n\t        key: \"log\",\n\t        value: function log(entry) {\n\t            if (typeof entry === \"undefined\" || entry.level < this.activeLogLevel) {\n\t                return;\n\t            }\n\t            this.subscribers.map(function (subscriber) {\n\t                return subscriber.log(entry);\n\t            });\n\t        }\n\t    }, {\n\t        key: \"measure\",\n\t        value: function measure(name, f) {\n\t            console.profile(name);\n\t            try {\n\t                return f();\n\t            } finally {\n\t                console.profileEnd();\n\t            }\n\t        }\n\t    }, {\n\t        key: \"count\",\n\t        get: function get() {\n\t            return this.subscribers.length;\n\t        }\n\t    }]);\n\t\n\t    return LoggerImpl;\n\t}();\n\t/**\n\t * Implementation of ILogListener which logs to the browser console\n\t *\n\t */\n\t\n\t\n\tvar ConsoleListener = function () {\n\t    function ConsoleListener() {\n\t        _classCallCheck(this, ConsoleListener);\n\t    }\n\t\n\t    _createClass(ConsoleListener, [{\n\t        key: \"log\",\n\t\n\t        /**\n\t         * Any associated data that a given logging listener may choose to log or ignore\n\t         *\n\t         * @param entry The information to be logged\n\t         */\n\t        value: function log(entry) {\n\t            var msg = this.format(entry);\n\t            switch (entry.level) {\n\t                case LogLevel.Verbose:\n\t                case LogLevel.Info:\n\t                    console.log(msg);\n\t                    break;\n\t                case LogLevel.Warning:\n\t                    console.warn(msg);\n\t                    break;\n\t                case LogLevel.Error:\n\t                    console.error(msg);\n\t                    break;\n\t            }\n\t        }\n\t        /**\n\t         * Formats the message\n\t         *\n\t         * @param entry The information to format into a string\n\t         */\n\t\n\t    }, {\n\t        key: \"format\",\n\t        value: function format(entry) {\n\t            return \"Message: \" + entry.message + \". Data: \" + JSON.stringify(entry.data);\n\t        }\n\t    }]);\n\t\n\t    return ConsoleListener;\n\t}();\n\t\n\texports.ConsoleListener = ConsoleListener;\n\t/**\n\t * Implementation of ILogListener which logs to the supplied function\n\t *\n\t */\n\t\n\tvar FunctionListener = function () {\n\t    /**\n\t     * Creates a new instance of the FunctionListener class\n\t     *\n\t     * @constructor\n\t     * @param  method The method to which any logging data will be passed\n\t     */\n\t    function FunctionListener(method) {\n\t        _classCallCheck(this, FunctionListener);\n\t\n\t        this.method = method;\n\t    }\n\t    /**\n\t     * Any associated data that a given logging listener may choose to log or ignore\n\t     *\n\t     * @param entry The information to be logged\n\t     */\n\t\n\t\n\t    _createClass(FunctionListener, [{\n\t        key: \"log\",\n\t        value: function log(entry) {\n\t            this.method(entry);\n\t        }\n\t    }]);\n\t\n\t    return FunctionListener;\n\t}();\n\t\n\texports.FunctionListener = FunctionListener;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar search_1 = __webpack_require__(7);\n\tvar searchsuggest_1 = __webpack_require__(16);\n\tvar site_1 = __webpack_require__(17);\n\tvar webs_1 = __webpack_require__(18);\n\tvar util_1 = __webpack_require__(1);\n\tvar userprofiles_1 = __webpack_require__(37);\n\tvar exceptions_1 = __webpack_require__(14);\n\t/**\n\t * Root of the SharePoint REST module\n\t */\n\t\n\tvar Rest = function () {\n\t    function Rest() {\n\t        _classCallCheck(this, Rest);\n\t    }\n\t\n\t    _createClass(Rest, [{\n\t        key: \"searchSuggest\",\n\t\n\t        /**\n\t         * Executes a search against this web context\n\t         *\n\t         * @param query The SearchQuery definition\n\t         */\n\t        value: function searchSuggest(query) {\n\t            var finalQuery = void 0;\n\t            if (typeof query === \"string\") {\n\t                finalQuery = { querytext: query };\n\t            } else {\n\t                finalQuery = query;\n\t            }\n\t            return new searchsuggest_1.SearchSuggest(\"\").execute(finalQuery);\n\t        }\n\t        /**\n\t         * Executes a search against this web context\n\t         *\n\t         * @param query The SearchQuery definition\n\t         */\n\t\n\t    }, {\n\t        key: \"search\",\n\t        value: function search(query) {\n\t            var finalQuery = void 0;\n\t            if (typeof query === \"string\") {\n\t                finalQuery = { Querytext: query };\n\t            } else {\n\t                finalQuery = query;\n\t            }\n\t            return new search_1.Search(\"\").execute(finalQuery);\n\t        }\n\t        /**\n\t         * Begins a site collection scoped REST request\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"createBatch\",\n\t\n\t        /**\n\t         * Creates a new batch object for use with the Queryable.addToBatch method\n\t         *\n\t         */\n\t        value: function createBatch() {\n\t            return this.web.createBatch();\n\t        }\n\t        /**\n\t         * Begins a cross-domain, host site scoped REST request, for use in add-in webs\n\t         *\n\t         * @param addInWebUrl The absolute url of the add-in web\n\t         * @param hostWebUrl The absolute url of the host web\n\t         */\n\t\n\t    }, {\n\t        key: \"crossDomainSite\",\n\t        value: function crossDomainSite(addInWebUrl, hostWebUrl) {\n\t            return this._cdImpl(site_1.Site, addInWebUrl, hostWebUrl, \"site\");\n\t        }\n\t        /**\n\t         * Begins a cross-domain, host web scoped REST request, for use in add-in webs\n\t         *\n\t         * @param addInWebUrl The absolute url of the add-in web\n\t         * @param hostWebUrl The absolute url of the host web\n\t         */\n\t\n\t    }, {\n\t        key: \"crossDomainWeb\",\n\t        value: function crossDomainWeb(addInWebUrl, hostWebUrl) {\n\t            return this._cdImpl(webs_1.Web, addInWebUrl, hostWebUrl, \"web\");\n\t        }\n\t        /**\n\t         * Implements the creation of cross domain REST urls\n\t         *\n\t         * @param factory The constructor of the object to create Site | Web\n\t         * @param addInWebUrl The absolute url of the add-in web\n\t         * @param hostWebUrl The absolute url of the host web\n\t         * @param urlPart String part to append to the url \"site\" | \"web\"\n\t         */\n\t\n\t    }, {\n\t        key: \"_cdImpl\",\n\t        value: function _cdImpl(factory, addInWebUrl, hostWebUrl, urlPart) {\n\t            if (!util_1.Util.isUrlAbsolute(addInWebUrl)) {\n\t                throw new exceptions_1.UrlException(\"The addInWebUrl parameter must be an absolute url.\");\n\t            }\n\t            if (!util_1.Util.isUrlAbsolute(hostWebUrl)) {\n\t                throw new exceptions_1.UrlException(\"The hostWebUrl parameter must be an absolute url.\");\n\t            }\n\t            var url = util_1.Util.combinePaths(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\n\t            var instance = new factory(url, urlPart);\n\t            instance.query.add(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\n\t            return instance;\n\t        }\n\t    }, {\n\t        key: \"site\",\n\t        get: function get() {\n\t            return new site_1.Site(\"\");\n\t        }\n\t        /**\n\t         * Begins a web scoped REST request\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"web\",\n\t        get: function get() {\n\t            return new webs_1.Web(\"\");\n\t        }\n\t        /**\n\t         * Access to user profile methods\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"profiles\",\n\t        get: function get() {\n\t            return new userprofiles_1.UserProfileQuery(\"\");\n\t        }\n\t    }]);\n\t\n\t    return Rest;\n\t}();\n\t\n\texports.Rest = Rest;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar queryable_1 = __webpack_require__(8);\n\tvar util_1 = __webpack_require__(1);\n\t/**\n\t * Describes the search API\n\t *\n\t */\n\t\n\tvar Search = function (_queryable_1$Queryabl) {\n\t    _inherits(Search, _queryable_1$Queryabl);\n\t\n\t    /**\n\t     * Creates a new instance of the Search class\n\t     *\n\t     * @param baseUrl The url for the search context\n\t     * @param query The SearchQuery object to execute\n\t     */\n\t    function Search(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"_api/search/postquery\";\n\t\n\t        _classCallCheck(this, Search);\n\t\n\t        return _possibleConstructorReturn(this, (Search.__proto__ || Object.getPrototypeOf(Search)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * .......\n\t     * @returns Promise\n\t     */\n\t\n\t\n\t    _createClass(Search, [{\n\t        key: \"execute\",\n\t        value: function execute(query) {\n\t            var formattedBody = void 0;\n\t            formattedBody = query;\n\t            if (formattedBody.SelectProperties) {\n\t                formattedBody.SelectProperties = { results: query.SelectProperties };\n\t            }\n\t            if (formattedBody.RefinementFilters) {\n\t                formattedBody.RefinementFilters = { results: query.RefinementFilters };\n\t            }\n\t            if (formattedBody.SortList) {\n\t                formattedBody.SortList = { results: query.SortList };\n\t            }\n\t            if (formattedBody.HithighlightedProperties) {\n\t                formattedBody.HithighlightedProperties = { results: query.HithighlightedProperties };\n\t            }\n\t            if (formattedBody.ReorderingRules) {\n\t                formattedBody.ReorderingRules = { results: query.ReorderingRules };\n\t            }\n\t            if (formattedBody.Properties) {\n\t                formattedBody.Properties = { results: query.Properties };\n\t            }\n\t            var postBody = JSON.stringify({\n\t                request: util_1.Util.extend({\n\t                    \"__metadata\": { \"type\": \"Microsoft.Office.Server.Search.REST.SearchRequest\" }\n\t                }, formattedBody)\n\t            });\n\t            return this.post({ body: postBody }).then(function (data) {\n\t                return new SearchResults(data);\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Search;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.Search = Search;\n\t/**\n\t * Describes the SearchResults class, which returns the formatted and raw version of the query response\n\t */\n\t\n\tvar SearchResults = function () {\n\t    /**\n\t     * Creates a new instance of the SearchResult class\n\t     *\n\t     */\n\t    function SearchResults(rawResponse) {\n\t        _classCallCheck(this, SearchResults);\n\t\n\t        var response = rawResponse.postquery ? rawResponse.postquery : rawResponse;\n\t        this.PrimarySearchResults = this.formatSearchResults(response.PrimaryQueryResult.RelevantResults.Table.Rows);\n\t        this.RawSearchResults = response;\n\t        this.ElapsedTime = response.ElapsedTime;\n\t        this.RowCount = response.PrimaryQueryResult.RelevantResults.RowCount;\n\t        this.TotalRows = response.PrimaryQueryResult.RelevantResults.TotalRows;\n\t        this.TotalRowsIncludingDuplicates = response.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\n\t    }\n\t    /**\n\t     * Formats a search results array\n\t     *\n\t     * @param rawResults The array to process\n\t     */\n\t\n\t\n\t    _createClass(SearchResults, [{\n\t        key: \"formatSearchResults\",\n\t        value: function formatSearchResults(rawResults) {\n\t            var results = new Array(),\n\t                tempResults = rawResults.results ? rawResults.results : rawResults;\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = tempResults[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var i = _step.value;\n\t\n\t                    results.push(new SearchResult(i.Cells));\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return results;\n\t        }\n\t    }]);\n\t\n\t    return SearchResults;\n\t}();\n\t\n\texports.SearchResults = SearchResults;\n\t/**\n\t * Describes the SearchResult class\n\t */\n\t\n\tvar SearchResult =\n\t/**\n\t * Creates a new instance of the SearchResult class\n\t *\n\t */\n\tfunction SearchResult(rawItem) {\n\t    _classCallCheck(this, SearchResult);\n\t\n\t    var item = rawItem.results ? rawItem.results : rawItem;\n\t    var _iteratorNormalCompletion2 = true;\n\t    var _didIteratorError2 = false;\n\t    var _iteratorError2 = undefined;\n\t\n\t    try {\n\t        for (var _iterator2 = item[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t            var i = _step2.value;\n\t\n\t            Object.defineProperty(this, i.Key, {\n\t                configurable: false,\n\t                enumerable: false,\n\t                value: i.Value,\n\t                writable: false\n\t            });\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError2 = true;\n\t        _iteratorError2 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                _iterator2.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError2) {\n\t                throw _iteratorError2;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\texports.SearchResult = SearchResult;\n\t/**\n\t * defines the SortDirection enum\n\t */\n\tvar SortDirection;\n\t(function (SortDirection) {\n\t    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\n\t    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\n\t    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\n\t})(SortDirection = exports.SortDirection || (exports.SortDirection = {}));\n\t/**\n\t * defines the ReorderingRuleMatchType  enum\n\t */\n\tvar ReorderingRuleMatchType;\n\t(function (ReorderingRuleMatchType) {\n\t    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\n\t    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\n\t    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\n\t    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\n\t    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\n\t    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\n\t    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\n\t    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\n\t    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\n\t})(ReorderingRuleMatchType = exports.ReorderingRuleMatchType || (exports.ReorderingRuleMatchType = {}));\n\t/**\n\t * Specifies the type value for the property\n\t */\n\tvar QueryPropertyValueType;\n\t(function (QueryPropertyValueType) {\n\t    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\n\t    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\n\t    QueryPropertyValueType[QueryPropertyValueType[\"Int32TYpe\"] = 2] = \"Int32TYpe\";\n\t    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\n\t    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\n\t    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\n\t})(QueryPropertyValueType = exports.QueryPropertyValueType || (exports.QueryPropertyValueType = {}));\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar util_1 = __webpack_require__(1);\n\tvar collections_1 = __webpack_require__(4);\n\tvar httpclient_1 = __webpack_require__(9);\n\tvar odata_1 = __webpack_require__(11);\n\tvar caching_1 = __webpack_require__(15);\n\tvar pnplibconfig_1 = __webpack_require__(12);\n\tvar exceptions_1 = __webpack_require__(14);\n\t/**\n\t * Queryable Base Class\n\t *\n\t */\n\t\n\tvar Queryable = function () {\n\t    _createClass(Queryable, [{\n\t        key: \"concat\",\n\t\n\t        /**\n\t         * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\n\t         *\n\t         * @param pathPart The string to concatonate to the url\n\t         */\n\t        value: function concat(pathPart) {\n\t            this._url += pathPart;\n\t        }\n\t        /**\n\t         * Appends the given string and normalizes \"/\" chars\n\t         *\n\t         * @param pathPart The string to append\n\t         */\n\t\n\t    }, {\n\t        key: \"append\",\n\t        value: function append(pathPart) {\n\t            this._url = util_1.Util.combinePaths(this._url, pathPart);\n\t        }\n\t        /**\n\t         * Blocks a batch call from occuring, MUST be cleared by calling the returned function\n\t         */\n\t\n\t    }, {\n\t        key: \"addBatchDependency\",\n\t        value: function addBatchDependency() {\n\t            if (this.hasBatch) {\n\t                return this._batch.addBatchDependency();\n\t            }\n\t            return function () {\n\t                return null;\n\t            };\n\t        }\n\t        /**\n\t         * Indicates if the current query has a batch associated\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"hasBatch\",\n\t        get: function get() {\n\t            return this._batch !== null;\n\t        }\n\t        /**\n\t         * Gets the parent url used when creating this instance\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"parentUrl\",\n\t        get: function get() {\n\t            return this._parentUrl;\n\t        }\n\t        /**\n\t         * Provides access to the query builder for this url\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"query\",\n\t        get: function get() {\n\t            return this._query;\n\t        }\n\t        /**\n\t         * Creates a new instance of the Queryable class\n\t         *\n\t         * @constructor\n\t         * @param baseUrl A string or Queryable that should form the base part of the url\n\t         *\n\t         */\n\t\n\t    }]);\n\t\n\t    function Queryable(baseUrl, path) {\n\t        _classCallCheck(this, Queryable);\n\t\n\t        this._query = new collections_1.Dictionary();\n\t        this._batch = null;\n\t        if (typeof baseUrl === \"string\") {\n\t            // we need to do some extra parsing to get the parent url correct if we are\n\t            // being created from just a string.\n\t            var urlStr = baseUrl;\n\t            if (util_1.Util.isUrlAbsolute(urlStr) || urlStr.lastIndexOf(\"/\") < 0) {\n\t                this._parentUrl = urlStr;\n\t                this._url = util_1.Util.combinePaths(urlStr, path);\n\t            } else if (urlStr.lastIndexOf(\"/\") > urlStr.lastIndexOf(\"(\")) {\n\t                // .../items(19)/fields\n\t                var index = urlStr.lastIndexOf(\"/\");\n\t                this._parentUrl = urlStr.slice(0, index);\n\t                path = util_1.Util.combinePaths(urlStr.slice(index), path);\n\t                this._url = util_1.Util.combinePaths(this._parentUrl, path);\n\t            } else {\n\t                // .../items(19)\n\t                var _index = urlStr.lastIndexOf(\"(\");\n\t                this._parentUrl = urlStr.slice(0, _index);\n\t                this._url = util_1.Util.combinePaths(urlStr, path);\n\t            }\n\t        } else {\n\t            var q = baseUrl;\n\t            this._parentUrl = q._url;\n\t            var target = q._query.get(\"@target\");\n\t            if (target !== null) {\n\t                this._query.add(\"@target\", target);\n\t            }\n\t            this._url = util_1.Util.combinePaths(this._parentUrl, path);\n\t        }\n\t    }\n\t    /**\n\t     * Adds this query to the supplied batch\n\t     *\n\t     * @example\n\t     * ```\n\t     *\n\t     * let b = pnp.sp.createBatch();\n\t     * pnp.sp.web.inBatch(b).get().then(...);\n\t     * b.execute().then(...)\n\t     * ```\n\t     */\n\t\n\t\n\t    _createClass(Queryable, [{\n\t        key: \"inBatch\",\n\t        value: function inBatch(batch) {\n\t            if (this._batch !== null) {\n\t                throw new exceptions_1.AlreadyInBatchException();\n\t            }\n\t            this._batch = batch;\n\t            return this;\n\t        }\n\t        /**\n\t         * Enables caching for this request\n\t         *\n\t         * @param options Defines the options used when caching this request\n\t         */\n\t\n\t    }, {\n\t        key: \"usingCaching\",\n\t        value: function usingCaching(options) {\n\t            if (!pnplibconfig_1.RuntimeConfig.globalCacheDisable) {\n\t                this._useCaching = true;\n\t                this._cachingOptions = options;\n\t            }\n\t            return this;\n\t        }\n\t        /**\n\t         * Gets the currentl url, made absolute based on the availability of the _spPageContextInfo object\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"toUrl\",\n\t        value: function toUrl() {\n\t            return util_1.Util.makeUrlAbsolute(this._url);\n\t        }\n\t        /**\n\t         * Gets the full url with query information\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"toUrlAndQuery\",\n\t        value: function toUrlAndQuery() {\n\t            var _this = this;\n\t\n\t            var url = this.toUrl();\n\t            if (this._query.count() > 0) {\n\t                url += \"?\";\n\t                var keys = this._query.getKeys();\n\t                url += keys.map(function (key) {\n\t                    return key + \"=\" + _this._query.get(key);\n\t                }).join(\"&\");\n\t            }\n\t            return url;\n\t        }\n\t        /**\n\t         * Executes the currently built request\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"get\",\n\t        value: function get() {\n\t            var parser = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new odata_1.ODataDefaultParser();\n\t            var getOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t            return this.getImpl(getOptions, parser);\n\t        }\n\t    }, {\n\t        key: \"getAs\",\n\t        value: function getAs() {\n\t            var parser = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new odata_1.ODataDefaultParser();\n\t            var getOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t            return this.getImpl(getOptions, parser);\n\t        }\n\t    }, {\n\t        key: \"post\",\n\t        value: function post() {\n\t            var postOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t            var parser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new odata_1.ODataDefaultParser();\n\t\n\t            return this.postImpl(postOptions, parser);\n\t        }\n\t    }, {\n\t        key: \"postAs\",\n\t        value: function postAs() {\n\t            var postOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t            var parser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new odata_1.ODataDefaultParser();\n\t\n\t            return this.postImpl(postOptions, parser);\n\t        }\n\t    }, {\n\t        key: \"patch\",\n\t        value: function patch() {\n\t            var patchOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t            var parser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new odata_1.ODataDefaultParser();\n\t\n\t            return this.patchImpl(patchOptions, parser);\n\t        }\n\t    }, {\n\t        key: \"delete\",\n\t        value: function _delete() {\n\t            var deleteOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t            var parser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new odata_1.ODataDefaultParser();\n\t\n\t            return this.deleteImpl(deleteOptions, parser);\n\t        }\n\t        /**\n\t         * Gets a parent for this instance as specified\n\t         *\n\t         * @param factory The contructor for the class to create\n\t         */\n\t\n\t    }, {\n\t        key: \"getParent\",\n\t        value: function getParent(factory) {\n\t            var baseUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.parentUrl;\n\t            var path = arguments[2];\n\t\n\t            var parent = new factory(baseUrl, path);\n\t            var target = this.query.get(\"@target\");\n\t            if (target !== null) {\n\t                parent.query.add(\"@target\", target);\n\t            }\n\t            return parent;\n\t        }\n\t    }, {\n\t        key: \"getImpl\",\n\t        value: function getImpl() {\n\t            var getOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t            var parser = arguments[1];\n\t\n\t            if (this._useCaching) {\n\t                var options = new caching_1.CachingOptions(this.toUrlAndQuery().toLowerCase());\n\t                if (typeof this._cachingOptions !== \"undefined\") {\n\t                    options = util_1.Util.extend(options, this._cachingOptions);\n\t                }\n\t                // we may not have a valid store, i.e. on node\n\t                if (options.store !== null) {\n\t                    var _ret = function () {\n\t                        // check if we have the data in cache and if so return a resolved promise\n\t                        var data = options.store.get(options.key);\n\t                        if (data !== null) {\n\t                            return {\n\t                                v: new Promise(function (resolve) {\n\t                                    return resolve(data);\n\t                                })\n\t                            };\n\t                        }\n\t                    }();\n\t\n\t                    if ((typeof _ret === \"undefined\" ? \"undefined\" : _typeof(_ret)) === \"object\") return _ret.v;\n\t                }\n\t                // if we don't then wrap the supplied parser in the caching parser wrapper\n\t                // and send things on their way\n\t                parser = new caching_1.CachingParserWrapper(parser, options);\n\t            }\n\t            if (!this.hasBatch) {\n\t                // we are not part of a batch, so proceed as normal\n\t                var client = new httpclient_1.HttpClient();\n\t                return client.get(this.toUrlAndQuery(), getOptions).then(function (response) {\n\t                    return parser.parse(response);\n\t                });\n\t            } else {\n\t                return this._batch.add(this.toUrlAndQuery(), \"GET\", getOptions, parser);\n\t            }\n\t        }\n\t    }, {\n\t        key: \"postImpl\",\n\t        value: function postImpl(postOptions, parser) {\n\t            if (!this.hasBatch) {\n\t                // we are not part of a batch, so proceed as normal\n\t                var client = new httpclient_1.HttpClient();\n\t                return client.post(this.toUrlAndQuery(), postOptions).then(function (response) {\n\t                    return parser.parse(response);\n\t                });\n\t            } else {\n\t                return this._batch.add(this.toUrlAndQuery(), \"POST\", postOptions, parser);\n\t            }\n\t        }\n\t    }, {\n\t        key: \"patchImpl\",\n\t        value: function patchImpl(patchOptions, parser) {\n\t            if (!this.hasBatch) {\n\t                // we are not part of a batch, so proceed as normal\n\t                var client = new httpclient_1.HttpClient();\n\t                return client.patch(this.toUrlAndQuery(), patchOptions).then(function (response) {\n\t                    return parser.parse(response);\n\t                });\n\t            } else {\n\t                return this._batch.add(this.toUrlAndQuery(), \"PATCH\", patchOptions, parser);\n\t            }\n\t        }\n\t    }, {\n\t        key: \"deleteImpl\",\n\t        value: function deleteImpl(deleteOptions, parser) {\n\t            if (!this.hasBatch) {\n\t                // we are not part of a batch, so proceed as normal\n\t                var client = new httpclient_1.HttpClient();\n\t                return client.delete(this.toUrlAndQuery(), deleteOptions).then(function (response) {\n\t                    return parser.parse(response);\n\t                });\n\t            } else {\n\t                return this._batch.add(this.toUrlAndQuery(), \"DELETE\", deleteOptions, parser);\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Queryable;\n\t}();\n\t\n\texports.Queryable = Queryable;\n\t/**\n\t * Represents a REST collection which can be filtered, paged, and selected\n\t *\n\t */\n\t\n\tvar QueryableCollection = function (_Queryable) {\n\t    _inherits(QueryableCollection, _Queryable);\n\t\n\t    function QueryableCollection() {\n\t        _classCallCheck(this, QueryableCollection);\n\t\n\t        return _possibleConstructorReturn(this, (QueryableCollection.__proto__ || Object.getPrototypeOf(QueryableCollection)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(QueryableCollection, [{\n\t        key: \"filter\",\n\t\n\t        /**\n\t         * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\n\t         *\n\t         * @param filter The string representing the filter query\n\t         */\n\t        value: function filter(_filter) {\n\t            this._query.add(\"$filter\", _filter);\n\t            return this;\n\t        }\n\t        /**\n\t         * Choose which fields to return\n\t         *\n\t         * @param selects One or more fields to return\n\t         */\n\t\n\t    }, {\n\t        key: \"select\",\n\t        value: function select() {\n\t            for (var _len = arguments.length, selects = Array(_len), _key = 0; _key < _len; _key++) {\n\t                selects[_key] = arguments[_key];\n\t            }\n\t\n\t            this._query.add(\"$select\", selects.join(\",\"));\n\t            return this;\n\t        }\n\t        /**\n\t         * Expands fields such as lookups to get additional data\n\t         *\n\t         * @param expands The Fields for which to expand the values\n\t         */\n\t\n\t    }, {\n\t        key: \"expand\",\n\t        value: function expand() {\n\t            for (var _len2 = arguments.length, expands = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t                expands[_key2] = arguments[_key2];\n\t            }\n\t\n\t            this._query.add(\"$expand\", expands.join(\",\"));\n\t            return this;\n\t        }\n\t        /**\n\t         * Orders based on the supplied fields ascending\n\t         *\n\t         * @param orderby The name of the field to sort on\n\t         * @param ascending If false DESC is appended, otherwise ASC (default)\n\t         */\n\t\n\t    }, {\n\t        key: \"orderBy\",\n\t        value: function orderBy(_orderBy) {\n\t            var ascending = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\t\n\t            var keys = this._query.getKeys();\n\t            var query = [];\n\t            var asc = ascending ? \" asc\" : \" desc\";\n\t            for (var i = 0; i < keys.length; i++) {\n\t                if (keys[i] === \"$orderby\") {\n\t                    query.push(this._query.get(\"$orderby\"));\n\t                    break;\n\t                }\n\t            }\n\t            query.push(\"\" + _orderBy + asc);\n\t            this._query.add(\"$orderby\", query.join(\",\"));\n\t            return this;\n\t        }\n\t        /**\n\t         * Skips the specified number of items\n\t         *\n\t         * @param skip The number of items to skip\n\t         */\n\t\n\t    }, {\n\t        key: \"skip\",\n\t        value: function skip(_skip) {\n\t            this._query.add(\"$skip\", _skip.toString());\n\t            return this;\n\t        }\n\t        /**\n\t         * Limits the query to only return the specified number of items\n\t         *\n\t         * @param top The query row limit\n\t         */\n\t\n\t    }, {\n\t        key: \"top\",\n\t        value: function top(_top) {\n\t            this._query.add(\"$top\", _top.toString());\n\t            return this;\n\t        }\n\t    }]);\n\t\n\t    return QueryableCollection;\n\t}(Queryable);\n\t\n\texports.QueryableCollection = QueryableCollection;\n\t/**\n\t * Represents an instance that can be selected\n\t *\n\t */\n\t\n\tvar QueryableInstance = function (_Queryable2) {\n\t    _inherits(QueryableInstance, _Queryable2);\n\t\n\t    function QueryableInstance() {\n\t        _classCallCheck(this, QueryableInstance);\n\t\n\t        return _possibleConstructorReturn(this, (QueryableInstance.__proto__ || Object.getPrototypeOf(QueryableInstance)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(QueryableInstance, [{\n\t        key: \"select\",\n\t\n\t        /**\n\t         * Choose which fields to return\n\t         *\n\t         * @param selects One or more fields to return\n\t         */\n\t        value: function select() {\n\t            for (var _len3 = arguments.length, selects = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n\t                selects[_key3] = arguments[_key3];\n\t            }\n\t\n\t            this._query.add(\"$select\", selects.join(\",\"));\n\t            return this;\n\t        }\n\t        /**\n\t         * Expands fields such as lookups to get additional data\n\t         *\n\t         * @param expands The Fields for which to expand the values\n\t         */\n\t\n\t    }, {\n\t        key: \"expand\",\n\t        value: function expand() {\n\t            for (var _len4 = arguments.length, expands = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n\t                expands[_key4] = arguments[_key4];\n\t            }\n\t\n\t            this._query.add(\"$expand\", expands.join(\",\"));\n\t            return this;\n\t        }\n\t    }]);\n\t\n\t    return QueryableInstance;\n\t}(Queryable);\n\t\n\texports.QueryableInstance = QueryableInstance;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar digestcache_1 = __webpack_require__(10);\n\tvar util_1 = __webpack_require__(1);\n\tvar pnplibconfig_1 = __webpack_require__(12);\n\tvar exceptions_1 = __webpack_require__(14);\n\t\n\tvar HttpClient = function () {\n\t    function HttpClient() {\n\t        _classCallCheck(this, HttpClient);\n\t\n\t        this._impl = pnplibconfig_1.RuntimeConfig.fetchClientFactory();\n\t        this._digestCache = new digestcache_1.DigestCache(this);\n\t    }\n\t\n\t    _createClass(HttpClient, [{\n\t        key: \"fetch\",\n\t        value: function fetch(url) {\n\t            var _this = this;\n\t\n\t            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t            var opts = util_1.Util.extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\n\t            var headers = new Headers();\n\t            // first we add the global headers so they can be overwritten by any passed in locally to this call\n\t            this.mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.headers);\n\t            // second we add the local options so we can overwrite the globals\n\t            this.mergeHeaders(headers, options.headers);\n\t            // lastly we apply any default headers we need that may not exist\n\t            if (!headers.has(\"Accept\")) {\n\t                headers.append(\"Accept\", \"application/json\");\n\t            }\n\t            if (!headers.has(\"Content-Type\")) {\n\t                headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n\t            }\n\t            if (!headers.has(\"X-ClientService-ClientTag\")) {\n\t                headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:2.0.0\");\n\t            }\n\t            opts = util_1.Util.extend(opts, { headers: headers });\n\t            if (opts.method && opts.method.toUpperCase() !== \"GET\") {\n\t                if (!headers.has(\"X-RequestDigest\")) {\n\t                    var index = url.indexOf(\"_api/\");\n\t                    if (index < 0) {\n\t                        throw new exceptions_1.APIUrlException();\n\t                    }\n\t                    var webUrl = url.substr(0, index);\n\t                    return this._digestCache.getDigest(webUrl).then(function (digest) {\n\t                        headers.append(\"X-RequestDigest\", digest);\n\t                        return _this.fetchRaw(url, opts);\n\t                    });\n\t                }\n\t            }\n\t            return this.fetchRaw(url, opts);\n\t        }\n\t    }, {\n\t        key: \"fetchRaw\",\n\t        value: function fetchRaw(url) {\n\t            var _this2 = this;\n\t\n\t            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t            // here we need to normalize the headers\n\t            var rawHeaders = new Headers();\n\t            this.mergeHeaders(rawHeaders, options.headers);\n\t            options = util_1.Util.extend(options, { headers: rawHeaders });\n\t            var retry = function retry(ctx) {\n\t                _this2._impl.fetch(url, options).then(function (response) {\n\t                    return ctx.resolve(response);\n\t                }).catch(function (response) {\n\t                    // grab our current delay\n\t                    var delay = ctx.delay;\n\t                    // Check if request was throttled - http status code 429 \n\t                    // Check is request failed due to server unavailable - http status code 503 \n\t                    if (response.status !== 429 && response.status !== 503) {\n\t                        ctx.reject(response);\n\t                    }\n\t                    // Increment our counters.\n\t                    ctx.delay *= 2;\n\t                    ctx.attempts++;\n\t                    // If we have exceeded the retry count, reject.\n\t                    if (ctx.retryCount <= ctx.attempts) {\n\t                        ctx.reject(response);\n\t                    }\n\t                    // Set our retry timeout for {delay} milliseconds.\n\t                    setTimeout(util_1.Util.getCtxCallback(_this2, retry, ctx), delay);\n\t                });\n\t            };\n\t            return new Promise(function (resolve, reject) {\n\t                var retryContext = {\n\t                    attempts: 0,\n\t                    delay: 100,\n\t                    reject: reject,\n\t                    resolve: resolve,\n\t                    retryCount: 7\n\t                };\n\t                retry.call(_this2, retryContext);\n\t            });\n\t        }\n\t    }, {\n\t        key: \"get\",\n\t        value: function get(url) {\n\t            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t            var opts = util_1.Util.extend(options, { method: \"GET\" });\n\t            return this.fetch(url, opts);\n\t        }\n\t    }, {\n\t        key: \"post\",\n\t        value: function post(url) {\n\t            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t            var opts = util_1.Util.extend(options, { method: \"POST\" });\n\t            return this.fetch(url, opts);\n\t        }\n\t    }, {\n\t        key: \"patch\",\n\t        value: function patch(url) {\n\t            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t            var opts = util_1.Util.extend(options, { method: \"PATCH\" });\n\t            return this.fetch(url, opts);\n\t        }\n\t    }, {\n\t        key: \"delete\",\n\t        value: function _delete(url) {\n\t            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t            var opts = util_1.Util.extend(options, { method: \"DELETE\" });\n\t            return this.fetch(url, opts);\n\t        }\n\t    }, {\n\t        key: \"mergeHeaders\",\n\t        value: function mergeHeaders(target, source) {\n\t            if (typeof source !== \"undefined\" && source !== null) {\n\t                var temp = new Request(\"\", { headers: source });\n\t                temp.headers.forEach(function (value, name) {\n\t                    target.append(name, value);\n\t                });\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return HttpClient;\n\t}();\n\t\n\texports.HttpClient = HttpClient;\n\t;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar collections_1 = __webpack_require__(4);\n\tvar util_1 = __webpack_require__(1);\n\tvar odata_1 = __webpack_require__(11);\n\t\n\tvar CachedDigest = function CachedDigest() {\n\t    _classCallCheck(this, CachedDigest);\n\t};\n\t\n\texports.CachedDigest = CachedDigest;\n\t\n\tvar DigestCache = function () {\n\t    function DigestCache(_httpClient) {\n\t        var _digests = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new collections_1.Dictionary();\n\t\n\t        _classCallCheck(this, DigestCache);\n\t\n\t        this._httpClient = _httpClient;\n\t        this._digests = _digests;\n\t    }\n\t\n\t    _createClass(DigestCache, [{\n\t        key: \"getDigest\",\n\t        value: function getDigest(webUrl) {\n\t            var _this = this;\n\t\n\t            var cachedDigest = this._digests.get(webUrl);\n\t            if (cachedDigest !== null) {\n\t                var now = new Date();\n\t                if (now < cachedDigest.expiration) {\n\t                    return Promise.resolve(cachedDigest.value);\n\t                }\n\t            }\n\t            var url = util_1.Util.combinePaths(webUrl, \"/_api/contextinfo\");\n\t            return this._httpClient.fetchRaw(url, {\n\t                cache: \"no-cache\",\n\t                credentials: \"same-origin\",\n\t                headers: {\n\t                    \"Accept\": \"application/json;odata=verbose\",\n\t                    \"Content-type\": \"application/json;odata=verbose;charset=utf-8\"\n\t                },\n\t                method: \"POST\"\n\t            }).then(function (response) {\n\t                var parser = new odata_1.ODataDefaultParser();\n\t                return parser.parse(response).then(function (d) {\n\t                    return d.GetContextWebInformation;\n\t                });\n\t            }).then(function (data) {\n\t                var newCachedDigest = new CachedDigest();\n\t                newCachedDigest.value = data.FormDigestValue;\n\t                var seconds = data.FormDigestTimeoutSeconds;\n\t                var expiration = new Date();\n\t                expiration.setTime(expiration.getTime() + 1000 * seconds);\n\t                newCachedDigest.expiration = expiration;\n\t                _this._digests.add(webUrl, newCachedDigest);\n\t                return newCachedDigest.value;\n\t            });\n\t        }\n\t    }, {\n\t        key: \"clear\",\n\t        value: function clear() {\n\t            this._digests.clear();\n\t        }\n\t    }]);\n\t\n\t    return DigestCache;\n\t}();\n\t\n\texports.DigestCache = DigestCache;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar util_1 = __webpack_require__(1);\n\tvar logging_1 = __webpack_require__(5);\n\tvar httpclient_1 = __webpack_require__(9);\n\tvar pnplibconfig_1 = __webpack_require__(12);\n\tvar exceptions_1 = __webpack_require__(14);\n\tvar exceptions_2 = __webpack_require__(14);\n\tfunction extractOdataId(candidate) {\n\t    if (candidate.hasOwnProperty(\"odata.id\")) {\n\t        return candidate[\"odata.id\"];\n\t    } else if (candidate.hasOwnProperty(\"__metadata\") && candidate.__metadata.hasOwnProperty(\"id\")) {\n\t        return candidate.__metadata.id;\n\t    } else {\n\t        throw new exceptions_1.ODataIdException(candidate);\n\t    }\n\t}\n\texports.extractOdataId = extractOdataId;\n\t\n\tvar ODataParserBase = function () {\n\t    function ODataParserBase() {\n\t        _classCallCheck(this, ODataParserBase);\n\t    }\n\t\n\t    _createClass(ODataParserBase, [{\n\t        key: \"parse\",\n\t        value: function parse(r) {\n\t            var _this = this;\n\t\n\t            return new Promise(function (resolve, reject) {\n\t                if (_this.handleError(r, reject)) {\n\t                    if (r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0 || r.status === 204) {\n\t                        resolve({});\n\t                    } else {\n\t                        r.json().then(function (json) {\n\t                            return resolve(_this.parseODataJSON(json));\n\t                        });\n\t                    }\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: \"handleError\",\n\t        value: function handleError(r, reject) {\n\t            if (!r.ok) {\n\t                r.json().then(function (json) {\n\t                    reject(new exceptions_2.ProcessHttpClientResponseException(r.status, r.statusText, json));\n\t                });\n\t            }\n\t            return r.ok;\n\t        }\n\t    }, {\n\t        key: \"parseODataJSON\",\n\t        value: function parseODataJSON(json) {\n\t            var result = json;\n\t            if (json.hasOwnProperty(\"d\")) {\n\t                if (json.d.hasOwnProperty(\"results\")) {\n\t                    result = json.d.results;\n\t                } else {\n\t                    result = json.d;\n\t                }\n\t            } else if (json.hasOwnProperty(\"value\")) {\n\t                result = json.value;\n\t            }\n\t            return result;\n\t        }\n\t    }]);\n\t\n\t    return ODataParserBase;\n\t}();\n\t\n\texports.ODataParserBase = ODataParserBase;\n\t\n\tvar ODataDefaultParser = function (_ODataParserBase) {\n\t    _inherits(ODataDefaultParser, _ODataParserBase);\n\t\n\t    function ODataDefaultParser() {\n\t        _classCallCheck(this, ODataDefaultParser);\n\t\n\t        return _possibleConstructorReturn(this, (ODataDefaultParser.__proto__ || Object.getPrototypeOf(ODataDefaultParser)).apply(this, arguments));\n\t    }\n\t\n\t    return ODataDefaultParser;\n\t}(ODataParserBase);\n\t\n\texports.ODataDefaultParser = ODataDefaultParser;\n\t\n\tvar ODataRawParserImpl = function () {\n\t    function ODataRawParserImpl() {\n\t        _classCallCheck(this, ODataRawParserImpl);\n\t    }\n\t\n\t    _createClass(ODataRawParserImpl, [{\n\t        key: \"parse\",\n\t        value: function parse(r) {\n\t            return r.json();\n\t        }\n\t    }]);\n\t\n\t    return ODataRawParserImpl;\n\t}();\n\t\n\texports.ODataRawParserImpl = ODataRawParserImpl;\n\t\n\tvar ODataValueParserImpl = function (_ODataParserBase2) {\n\t    _inherits(ODataValueParserImpl, _ODataParserBase2);\n\t\n\t    function ODataValueParserImpl() {\n\t        _classCallCheck(this, ODataValueParserImpl);\n\t\n\t        return _possibleConstructorReturn(this, (ODataValueParserImpl.__proto__ || Object.getPrototypeOf(ODataValueParserImpl)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(ODataValueParserImpl, [{\n\t        key: \"parse\",\n\t        value: function parse(r) {\n\t            return _get(ODataValueParserImpl.prototype.__proto__ || Object.getPrototypeOf(ODataValueParserImpl.prototype), \"parse\", this).call(this, r).then(function (d) {\n\t                return d;\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return ODataValueParserImpl;\n\t}(ODataParserBase);\n\t\n\tvar ODataEntityParserImpl = function (_ODataParserBase3) {\n\t    _inherits(ODataEntityParserImpl, _ODataParserBase3);\n\t\n\t    function ODataEntityParserImpl(factory) {\n\t        _classCallCheck(this, ODataEntityParserImpl);\n\t\n\t        var _this4 = _possibleConstructorReturn(this, (ODataEntityParserImpl.__proto__ || Object.getPrototypeOf(ODataEntityParserImpl)).call(this));\n\t\n\t        _this4.factory = factory;\n\t        return _this4;\n\t    }\n\t\n\t    _createClass(ODataEntityParserImpl, [{\n\t        key: \"parse\",\n\t        value: function parse(r) {\n\t            var _this5 = this;\n\t\n\t            return _get(ODataEntityParserImpl.prototype.__proto__ || Object.getPrototypeOf(ODataEntityParserImpl.prototype), \"parse\", this).call(this, r).then(function (d) {\n\t                var o = new _this5.factory(getEntityUrl(d), null);\n\t                return util_1.Util.extend(o, d);\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return ODataEntityParserImpl;\n\t}(ODataParserBase);\n\t\n\tvar ODataEntityArrayParserImpl = function (_ODataParserBase4) {\n\t    _inherits(ODataEntityArrayParserImpl, _ODataParserBase4);\n\t\n\t    function ODataEntityArrayParserImpl(factory) {\n\t        _classCallCheck(this, ODataEntityArrayParserImpl);\n\t\n\t        var _this6 = _possibleConstructorReturn(this, (ODataEntityArrayParserImpl.__proto__ || Object.getPrototypeOf(ODataEntityArrayParserImpl)).call(this));\n\t\n\t        _this6.factory = factory;\n\t        return _this6;\n\t    }\n\t\n\t    _createClass(ODataEntityArrayParserImpl, [{\n\t        key: \"parse\",\n\t        value: function parse(r) {\n\t            var _this7 = this;\n\t\n\t            return _get(ODataEntityArrayParserImpl.prototype.__proto__ || Object.getPrototypeOf(ODataEntityArrayParserImpl.prototype), \"parse\", this).call(this, r).then(function (d) {\n\t                return d.map(function (v) {\n\t                    var o = new _this7.factory(getEntityUrl(v), null);\n\t                    return util_1.Util.extend(o, v);\n\t                });\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return ODataEntityArrayParserImpl;\n\t}(ODataParserBase);\n\t\n\tfunction getEntityUrl(entity) {\n\t    if (entity.hasOwnProperty(\"odata.editLink\")) {\n\t        // we are dealign with minimal metadata (default)\n\t        return util_1.Util.combinePaths(\"_api\", entity[\"odata.editLink\"]);\n\t    } else if (entity.hasOwnProperty(\"__metadata\")) {\n\t        // we are dealing with verbose, which has an absolute uri\n\t        return entity.__metadata.uri;\n\t    } else {\n\t        // we are likely dealing with nometadata, so don't error but we won't be able to\n\t        // chain off these objects\n\t        logging_1.Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", logging_1.LogLevel.Warning);\n\t        return \"\";\n\t    }\n\t}\n\texports.ODataRaw = new ODataRawParserImpl();\n\tfunction ODataValue() {\n\t    return new ODataValueParserImpl();\n\t}\n\texports.ODataValue = ODataValue;\n\tfunction ODataEntity(factory) {\n\t    return new ODataEntityParserImpl(factory);\n\t}\n\texports.ODataEntity = ODataEntity;\n\tfunction ODataEntityArray(factory) {\n\t    return new ODataEntityArrayParserImpl(factory);\n\t}\n\texports.ODataEntityArray = ODataEntityArray;\n\t/**\n\t * Manages a batch of OData operations\n\t */\n\t\n\tvar ODataBatch = function () {\n\t    function ODataBatch(baseUrl) {\n\t        var _batchId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : util_1.Util.getGUID();\n\t\n\t        _classCallCheck(this, ODataBatch);\n\t\n\t        this.baseUrl = baseUrl;\n\t        this._batchId = _batchId;\n\t        this._requests = [];\n\t        this._batchDependencies = Promise.resolve();\n\t    }\n\t    /**\n\t     * Adds a request to a batch (not designed for public use)\n\t     *\n\t     * @param url The full url of the request\n\t     * @param method The http method GET, POST, etc\n\t     * @param options Any options to include in the request\n\t     * @param parser The parser that will hadle the results of the request\n\t     */\n\t\n\t\n\t    _createClass(ODataBatch, [{\n\t        key: \"add\",\n\t        value: function add(url, method, options, parser) {\n\t            var info = {\n\t                method: method.toUpperCase(),\n\t                options: options,\n\t                parser: parser,\n\t                reject: null,\n\t                resolve: null,\n\t                url: url\n\t            };\n\t            var p = new Promise(function (resolve, reject) {\n\t                info.resolve = resolve;\n\t                info.reject = reject;\n\t            });\n\t            this._requests.push(info);\n\t            return p;\n\t        }\n\t    }, {\n\t        key: \"addBatchDependency\",\n\t        value: function addBatchDependency() {\n\t            var resolver = void 0;\n\t            var promise = new Promise(function (resolve) {\n\t                resolver = resolve;\n\t            });\n\t            this._batchDependencies = this._batchDependencies.then(function () {\n\t                return promise;\n\t            });\n\t            return resolver;\n\t        }\n\t        /**\n\t         * Execute the current batch and resolve the associated promises\n\t         *\n\t         * @returns A promise which will be resolved once all of the batch's child promises have resolved\n\t         */\n\t\n\t    }, {\n\t        key: \"execute\",\n\t        value: function execute() {\n\t            var _this8 = this;\n\t\n\t            return this._batchDependencies.then(function () {\n\t                return _this8.executeImpl();\n\t            });\n\t        }\n\t    }, {\n\t        key: \"executeImpl\",\n\t        value: function executeImpl() {\n\t            var _this9 = this;\n\t\n\t            // if we don't have any requests, don't bother sending anything\n\t            // this could be due to caching further upstream, or just an empty batch \n\t            if (this._requests.length < 1) {\n\t                return Promise.resolve();\n\t            }\n\t            // build all the requests, send them, pipe results in order to parsers\n\t            var batchBody = [];\n\t            var currentChangeSetId = \"\";\n\t            this._requests.map(function (reqInfo) {\n\t                if (reqInfo.method === \"GET\") {\n\t                    if (currentChangeSetId.length > 0) {\n\t                        // end an existing change set\n\t                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\n\t                        currentChangeSetId = \"\";\n\t                    }\n\t                    batchBody.push(\"--batch_\" + _this9._batchId + \"\\n\");\n\t                } else {\n\t                    if (currentChangeSetId.length < 1) {\n\t                        // start new change set\n\t                        currentChangeSetId = util_1.Util.getGUID();\n\t                        batchBody.push(\"--batch_\" + _this9._batchId + \"\\n\");\n\t                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\n\t                    }\n\t                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\n\t                }\n\t                // common batch part prefix\n\t                batchBody.push(\"Content-Type: application/http\\n\");\n\t                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\n\t                var headers = {\n\t                    \"Accept\": \"application/json;\"\n\t                };\n\t                if (reqInfo.method !== \"GET\") {\n\t                    var method = reqInfo.method;\n\t                    if (reqInfo.hasOwnProperty(\"options\") && reqInfo.options.hasOwnProperty(\"headers\") && typeof reqInfo.options.headers[\"X-HTTP-Method\"] !== \"undefined\") {\n\t                        method = reqInfo.options.headers[\"X-HTTP-Method\"];\n\t                        delete reqInfo.options.headers[\"X-HTTP-Method\"];\n\t                    }\n\t                    batchBody.push(method + \" \" + reqInfo.url + \" HTTP/1.1\\n\");\n\t                    headers = util_1.Util.extend(headers, { \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\" });\n\t                } else {\n\t                    batchBody.push(reqInfo.method + \" \" + reqInfo.url + \" HTTP/1.1\\n\");\n\t                }\n\t                if (typeof pnplibconfig_1.RuntimeConfig.headers !== \"undefined\") {\n\t                    headers = util_1.Util.extend(headers, pnplibconfig_1.RuntimeConfig.headers);\n\t                }\n\t                if (reqInfo.options && reqInfo.options.headers) {\n\t                    headers = util_1.Util.extend(headers, reqInfo.options.headers);\n\t                }\n\t                for (var name in headers) {\n\t                    if (headers.hasOwnProperty(name)) {\n\t                        batchBody.push(name + \": \" + headers[name] + \"\\n\");\n\t                    }\n\t                }\n\t                batchBody.push(\"\\n\");\n\t                if (reqInfo.options.body) {\n\t                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\n\t                }\n\t            });\n\t            if (currentChangeSetId.length > 0) {\n\t                // Close the changeset\n\t                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\n\t                currentChangeSetId = \"\";\n\t            }\n\t            batchBody.push(\"--batch_\" + this._batchId + \"--\\n\");\n\t            var batchHeaders = {\n\t                \"Content-Type\": \"multipart/mixed; boundary=batch_\" + this._batchId\n\t            };\n\t            var batchOptions = {\n\t                \"body\": batchBody.join(\"\"),\n\t                \"headers\": batchHeaders\n\t            };\n\t            var client = new httpclient_1.HttpClient();\n\t            var requestUrl = util_1.Util.makeUrlAbsolute(util_1.Util.combinePaths(this.baseUrl, \"/_api/$batch\"));\n\t            return client.post(requestUrl, batchOptions).then(function (r) {\n\t                return r.text();\n\t            }).then(this._parseResponse).then(function (responses) {\n\t                if (responses.length !== _this9._requests.length) {\n\t                    throw new exceptions_1.BatchParseException(\"Could not properly parse responses to match requests in batch.\");\n\t                }\n\t                return responses.reduce(function (chain, response, index) {\n\t                    var request = _this9._requests[index];\n\t                    if (!response.ok) {\n\t                        request.reject(new Error(response.statusText));\n\t                    }\n\t                    return chain.then(function (_) {\n\t                        return request.parser.parse(response).then(request.resolve).catch(request.reject);\n\t                    });\n\t                }, Promise.resolve());\n\t            });\n\t        }\n\t        /**\n\t         * Parses the response from a batch request into an array of Response instances\n\t         *\n\t         * @param body Text body of the response from the batch request\n\t         */\n\t\n\t    }, {\n\t        key: \"_parseResponse\",\n\t        value: function _parseResponse(body) {\n\t            return new Promise(function (resolve, reject) {\n\t                var responses = [];\n\t                var header = \"--batchresponse_\";\n\t                // Ex. \"HTTP/1.1 500 Internal Server Error\"\n\t                var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\n\t                var lines = body.split(\"\\n\");\n\t                var state = \"batch\";\n\t                var status = void 0;\n\t                var statusText = void 0;\n\t                for (var i = 0; i < lines.length; ++i) {\n\t                    var line = lines[i];\n\t                    switch (state) {\n\t                        case \"batch\":\n\t                            if (line.substr(0, header.length) === header) {\n\t                                state = \"batchHeaders\";\n\t                            } else {\n\t                                if (line.trim() !== \"\") {\n\t                                    throw new exceptions_1.BatchParseException(\"Invalid response, line \" + i);\n\t                                }\n\t                            }\n\t                            break;\n\t                        case \"batchHeaders\":\n\t                            if (line.trim() === \"\") {\n\t                                state = \"status\";\n\t                            }\n\t                            break;\n\t                        case \"status\":\n\t                            var parts = statusRegExp.exec(line);\n\t                            if (parts.length !== 3) {\n\t                                throw new exceptions_1.BatchParseException(\"Invalid status, line \" + i);\n\t                            }\n\t                            status = parseInt(parts[1], 10);\n\t                            statusText = parts[2];\n\t                            state = \"statusHeaders\";\n\t                            break;\n\t                        case \"statusHeaders\":\n\t                            if (line.trim() === \"\") {\n\t                                state = \"body\";\n\t                            }\n\t                            break;\n\t                        case \"body\":\n\t                            responses.push(status === 204 ? new Response() : new Response(line, { status: status, statusText: statusText }));\n\t                            state = \"batch\";\n\t                            break;\n\t                    }\n\t                }\n\t                if (state !== \"status\") {\n\t                    reject(new exceptions_1.BatchParseException(\"Unexpected end of input\"));\n\t                }\n\t                resolve(responses);\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return ODataBatch;\n\t}();\n\t\n\texports.ODataBatch = ODataBatch;\n\t\n\tvar TextFileParser = function () {\n\t    function TextFileParser() {\n\t        _classCallCheck(this, TextFileParser);\n\t    }\n\t\n\t    _createClass(TextFileParser, [{\n\t        key: \"parse\",\n\t        value: function parse(r) {\n\t            return r.text();\n\t        }\n\t    }]);\n\t\n\t    return TextFileParser;\n\t}();\n\t\n\texports.TextFileParser = TextFileParser;\n\t\n\tvar BlobFileParser = function () {\n\t    function BlobFileParser() {\n\t        _classCallCheck(this, BlobFileParser);\n\t    }\n\t\n\t    _createClass(BlobFileParser, [{\n\t        key: \"parse\",\n\t        value: function parse(r) {\n\t            return r.blob();\n\t        }\n\t    }]);\n\t\n\t    return BlobFileParser;\n\t}();\n\t\n\texports.BlobFileParser = BlobFileParser;\n\t\n\tvar JSONFileParser = function () {\n\t    function JSONFileParser() {\n\t        _classCallCheck(this, JSONFileParser);\n\t    }\n\t\n\t    _createClass(JSONFileParser, [{\n\t        key: \"parse\",\n\t        value: function parse(r) {\n\t            return r.json();\n\t        }\n\t    }]);\n\t\n\t    return JSONFileParser;\n\t}();\n\t\n\texports.JSONFileParser = JSONFileParser;\n\t\n\tvar BufferFileParser = function () {\n\t    function BufferFileParser() {\n\t        _classCallCheck(this, BufferFileParser);\n\t    }\n\t\n\t    _createClass(BufferFileParser, [{\n\t        key: \"parse\",\n\t        value: function parse(r) {\n\t            if (util_1.Util.isFunction(r.arrayBuffer)) {\n\t                return r.arrayBuffer();\n\t            }\n\t            return r.buffer();\n\t        }\n\t    }]);\n\t\n\t    return BufferFileParser;\n\t}();\n\t\n\texports.BufferFileParser = BufferFileParser;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar fetchclient_1 = __webpack_require__(13);\n\t\n\tvar RuntimeConfigImpl = function () {\n\t    function RuntimeConfigImpl() {\n\t        _classCallCheck(this, RuntimeConfigImpl);\n\t\n\t        // these are our default values for the library\n\t        this._headers = null;\n\t        this._defaultCachingStore = \"session\";\n\t        this._defaultCachingTimeoutSeconds = 30;\n\t        this._globalCacheDisable = false;\n\t        this._fetchClientFactory = function () {\n\t            return new fetchclient_1.FetchClient();\n\t        };\n\t    }\n\t\n\t    _createClass(RuntimeConfigImpl, [{\n\t        key: \"set\",\n\t        value: function set(config) {\n\t            if (config.hasOwnProperty(\"headers\")) {\n\t                this._headers = config.headers;\n\t            }\n\t            if (config.hasOwnProperty(\"globalCacheDisable\")) {\n\t                this._globalCacheDisable = config.globalCacheDisable;\n\t            }\n\t            if (config.hasOwnProperty(\"defaultCachingStore\")) {\n\t                this._defaultCachingStore = config.defaultCachingStore;\n\t            }\n\t            if (config.hasOwnProperty(\"defaultCachingTimeoutSeconds\")) {\n\t                this._defaultCachingTimeoutSeconds = config.defaultCachingTimeoutSeconds;\n\t            }\n\t            if (config.hasOwnProperty(\"fetchClientFactory\")) {\n\t                this._fetchClientFactory = config.fetchClientFactory;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"headers\",\n\t        get: function get() {\n\t            return this._headers;\n\t        }\n\t    }, {\n\t        key: \"defaultCachingStore\",\n\t        get: function get() {\n\t            return this._defaultCachingStore;\n\t        }\n\t    }, {\n\t        key: \"defaultCachingTimeoutSeconds\",\n\t        get: function get() {\n\t            return this._defaultCachingTimeoutSeconds;\n\t        }\n\t    }, {\n\t        key: \"globalCacheDisable\",\n\t        get: function get() {\n\t            return this._globalCacheDisable;\n\t        }\n\t    }, {\n\t        key: \"fetchClientFactory\",\n\t        get: function get() {\n\t            return this._fetchClientFactory;\n\t        }\n\t    }]);\n\t\n\t    return RuntimeConfigImpl;\n\t}();\n\t\n\texports.RuntimeConfigImpl = RuntimeConfigImpl;\n\tvar _runtimeConfig = new RuntimeConfigImpl();\n\texports.RuntimeConfig = _runtimeConfig;\n\tfunction setRuntimeConfig(config) {\n\t    _runtimeConfig.set(config);\n\t}\n\texports.setRuntimeConfig = setRuntimeConfig;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t/**\n\t * Makes requests using the fetch API\n\t */\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar FetchClient = function () {\n\t    function FetchClient() {\n\t        _classCallCheck(this, FetchClient);\n\t    }\n\t\n\t    _createClass(FetchClient, [{\n\t        key: \"fetch\",\n\t        value: function fetch(url, options) {\n\t            return global.fetch(url, options);\n\t        }\n\t    }]);\n\t\n\t    return FetchClient;\n\t}();\n\t\n\texports.FetchClient = FetchClient;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar logging_1 = __webpack_require__(5);\n\tfunction defaultLog(error) {\n\t    logging_1.Logger.log({ data: {}, level: logging_1.LogLevel.Error, message: \"[\" + error.name + \"]::\" + error.message });\n\t}\n\t/**\n\t * Represents an exception with an HttpClient request\n\t *\n\t */\n\t\n\tvar ProcessHttpClientResponseException = function (_Error) {\n\t    _inherits(ProcessHttpClientResponseException, _Error);\n\t\n\t    function ProcessHttpClientResponseException(status, statusText, data) {\n\t        _classCallCheck(this, ProcessHttpClientResponseException);\n\t\n\t        var _this = _possibleConstructorReturn(this, (ProcessHttpClientResponseException.__proto__ || Object.getPrototypeOf(ProcessHttpClientResponseException)).call(this, \"Error making HttpClient request in queryable: [\" + status + \"] \" + statusText));\n\t\n\t        _this.status = status;\n\t        _this.statusText = statusText;\n\t        _this.data = data;\n\t        _this.name = \"ProcessHttpClientResponseException\";\n\t        logging_1.Logger.log({ data: _this.data, level: logging_1.LogLevel.Error, message: _this.message });\n\t        return _this;\n\t    }\n\t\n\t    return ProcessHttpClientResponseException;\n\t}(Error);\n\t\n\texports.ProcessHttpClientResponseException = ProcessHttpClientResponseException;\n\t\n\tvar NoCacheAvailableException = function (_Error2) {\n\t    _inherits(NoCacheAvailableException, _Error2);\n\t\n\t    function NoCacheAvailableException() {\n\t        var msg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Cannot create a caching configuration provider since cache is not available.\";\n\t\n\t        _classCallCheck(this, NoCacheAvailableException);\n\t\n\t        var _this2 = _possibleConstructorReturn(this, (NoCacheAvailableException.__proto__ || Object.getPrototypeOf(NoCacheAvailableException)).call(this, msg));\n\t\n\t        _this2.name = \"NoCacheAvailableException\";\n\t        defaultLog(_this2);\n\t        return _this2;\n\t    }\n\t\n\t    return NoCacheAvailableException;\n\t}(Error);\n\t\n\texports.NoCacheAvailableException = NoCacheAvailableException;\n\t\n\tvar APIUrlException = function (_Error3) {\n\t    _inherits(APIUrlException, _Error3);\n\t\n\t    function APIUrlException() {\n\t        var msg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Unable to determine API url.\";\n\t\n\t        _classCallCheck(this, APIUrlException);\n\t\n\t        var _this3 = _possibleConstructorReturn(this, (APIUrlException.__proto__ || Object.getPrototypeOf(APIUrlException)).call(this, msg));\n\t\n\t        _this3.name = \"APIUrlException\";\n\t        defaultLog(_this3);\n\t        return _this3;\n\t    }\n\t\n\t    return APIUrlException;\n\t}(Error);\n\t\n\texports.APIUrlException = APIUrlException;\n\t\n\tvar AuthUrlException = function (_Error4) {\n\t    _inherits(AuthUrlException, _Error4);\n\t\n\t    function AuthUrlException(data) {\n\t        var msg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Auth URL Endpoint could not be determined from data. Data logged.\";\n\t\n\t        _classCallCheck(this, AuthUrlException);\n\t\n\t        var _this4 = _possibleConstructorReturn(this, (AuthUrlException.__proto__ || Object.getPrototypeOf(AuthUrlException)).call(this, msg));\n\t\n\t        _this4.name = \"APIUrlException\";\n\t        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: _this4.message });\n\t        return _this4;\n\t    }\n\t\n\t    return AuthUrlException;\n\t}(Error);\n\t\n\texports.AuthUrlException = AuthUrlException;\n\t\n\tvar NodeFetchClientUnsupportedException = function (_Error5) {\n\t    _inherits(NodeFetchClientUnsupportedException, _Error5);\n\t\n\t    function NodeFetchClientUnsupportedException() {\n\t        var msg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Using NodeFetchClient in the browser is not supported.\";\n\t\n\t        _classCallCheck(this, NodeFetchClientUnsupportedException);\n\t\n\t        var _this5 = _possibleConstructorReturn(this, (NodeFetchClientUnsupportedException.__proto__ || Object.getPrototypeOf(NodeFetchClientUnsupportedException)).call(this, msg));\n\t\n\t        _this5.name = \"NodeFetchClientUnsupportedException\";\n\t        defaultLog(_this5);\n\t        return _this5;\n\t    }\n\t\n\t    return NodeFetchClientUnsupportedException;\n\t}(Error);\n\t\n\texports.NodeFetchClientUnsupportedException = NodeFetchClientUnsupportedException;\n\t\n\tvar SPRequestExecutorUndefinedException = function (_Error6) {\n\t    _inherits(SPRequestExecutorUndefinedException, _Error6);\n\t\n\t    function SPRequestExecutorUndefinedException() {\n\t        _classCallCheck(this, SPRequestExecutorUndefinedException);\n\t\n\t        var msg = [\"SP.RequestExecutor is undefined. \", \"Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\"].join(\" \");\n\t\n\t        var _this6 = _possibleConstructorReturn(this, (SPRequestExecutorUndefinedException.__proto__ || Object.getPrototypeOf(SPRequestExecutorUndefinedException)).call(this, msg));\n\t\n\t        _this6.name = \"SPRequestExecutorUndefinedException\";\n\t        defaultLog(_this6);\n\t        return _this6;\n\t    }\n\t\n\t    return SPRequestExecutorUndefinedException;\n\t}(Error);\n\t\n\texports.SPRequestExecutorUndefinedException = SPRequestExecutorUndefinedException;\n\t\n\tvar MaxCommentLengthException = function (_Error7) {\n\t    _inherits(MaxCommentLengthException, _Error7);\n\t\n\t    function MaxCommentLengthException() {\n\t        var msg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"The maximum comment length is 1023 characters.\";\n\t\n\t        _classCallCheck(this, MaxCommentLengthException);\n\t\n\t        var _this7 = _possibleConstructorReturn(this, (MaxCommentLengthException.__proto__ || Object.getPrototypeOf(MaxCommentLengthException)).call(this, msg));\n\t\n\t        _this7.name = \"MaxCommentLengthException\";\n\t        defaultLog(_this7);\n\t        return _this7;\n\t    }\n\t\n\t    return MaxCommentLengthException;\n\t}(Error);\n\t\n\texports.MaxCommentLengthException = MaxCommentLengthException;\n\t\n\tvar NotSupportedInBatchException = function (_Error8) {\n\t    _inherits(NotSupportedInBatchException, _Error8);\n\t\n\t    function NotSupportedInBatchException() {\n\t        var operation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"This operation\";\n\t\n\t        _classCallCheck(this, NotSupportedInBatchException);\n\t\n\t        var _this8 = _possibleConstructorReturn(this, (NotSupportedInBatchException.__proto__ || Object.getPrototypeOf(NotSupportedInBatchException)).call(this, operation + \" is not supported as part of a batch.\"));\n\t\n\t        _this8.name = \"NotSupportedInBatchException\";\n\t        defaultLog(_this8);\n\t        return _this8;\n\t    }\n\t\n\t    return NotSupportedInBatchException;\n\t}(Error);\n\t\n\texports.NotSupportedInBatchException = NotSupportedInBatchException;\n\t\n\tvar ODataIdException = function (_Error9) {\n\t    _inherits(ODataIdException, _Error9);\n\t\n\t    function ODataIdException(data) {\n\t        var msg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Could not extract odata id in object, you may be using nometadata. Object data logged to logger.\";\n\t\n\t        _classCallCheck(this, ODataIdException);\n\t\n\t        var _this9 = _possibleConstructorReturn(this, (ODataIdException.__proto__ || Object.getPrototypeOf(ODataIdException)).call(this, msg));\n\t\n\t        _this9.name = \"ODataIdException\";\n\t        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: _this9.message });\n\t        return _this9;\n\t    }\n\t\n\t    return ODataIdException;\n\t}(Error);\n\t\n\texports.ODataIdException = ODataIdException;\n\t\n\tvar BatchParseException = function (_Error10) {\n\t    _inherits(BatchParseException, _Error10);\n\t\n\t    function BatchParseException(msg) {\n\t        _classCallCheck(this, BatchParseException);\n\t\n\t        var _this10 = _possibleConstructorReturn(this, (BatchParseException.__proto__ || Object.getPrototypeOf(BatchParseException)).call(this, msg));\n\t\n\t        _this10.name = \"BatchParseException\";\n\t        defaultLog(_this10);\n\t        return _this10;\n\t    }\n\t\n\t    return BatchParseException;\n\t}(Error);\n\t\n\texports.BatchParseException = BatchParseException;\n\t\n\tvar AlreadyInBatchException = function (_Error11) {\n\t    _inherits(AlreadyInBatchException, _Error11);\n\t\n\t    function AlreadyInBatchException() {\n\t        var msg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"This query is already part of a batch.\";\n\t\n\t        _classCallCheck(this, AlreadyInBatchException);\n\t\n\t        var _this11 = _possibleConstructorReturn(this, (AlreadyInBatchException.__proto__ || Object.getPrototypeOf(AlreadyInBatchException)).call(this, msg));\n\t\n\t        _this11.name = \"AlreadyInBatchException\";\n\t        defaultLog(_this11);\n\t        return _this11;\n\t    }\n\t\n\t    return AlreadyInBatchException;\n\t}(Error);\n\t\n\texports.AlreadyInBatchException = AlreadyInBatchException;\n\t\n\tvar FunctionExpectedException = function (_Error12) {\n\t    _inherits(FunctionExpectedException, _Error12);\n\t\n\t    function FunctionExpectedException() {\n\t        var msg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"This query is already part of a batch.\";\n\t\n\t        _classCallCheck(this, FunctionExpectedException);\n\t\n\t        var _this12 = _possibleConstructorReturn(this, (FunctionExpectedException.__proto__ || Object.getPrototypeOf(FunctionExpectedException)).call(this, msg));\n\t\n\t        _this12.name = \"FunctionExpectedException\";\n\t        defaultLog(_this12);\n\t        return _this12;\n\t    }\n\t\n\t    return FunctionExpectedException;\n\t}(Error);\n\t\n\texports.FunctionExpectedException = FunctionExpectedException;\n\t\n\tvar UrlException = function (_Error13) {\n\t    _inherits(UrlException, _Error13);\n\t\n\t    function UrlException(msg) {\n\t        _classCallCheck(this, UrlException);\n\t\n\t        var _this13 = _possibleConstructorReturn(this, (UrlException.__proto__ || Object.getPrototypeOf(UrlException)).call(this, msg));\n\t\n\t        _this13.name = \"UrlException\";\n\t        defaultLog(_this13);\n\t        return _this13;\n\t    }\n\t\n\t    return UrlException;\n\t}(Error);\n\t\n\texports.UrlException = UrlException;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar storage_1 = __webpack_require__(2);\n\tvar util_1 = __webpack_require__(1);\n\tvar pnplibconfig_1 = __webpack_require__(12);\n\t\n\tvar CachingOptions = function () {\n\t    function CachingOptions(key) {\n\t        _classCallCheck(this, CachingOptions);\n\t\n\t        this.key = key;\n\t        this.expiration = util_1.Util.dateAdd(new Date(), \"second\", pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds);\n\t        this.storeName = pnplibconfig_1.RuntimeConfig.defaultCachingStore;\n\t    }\n\t\n\t    _createClass(CachingOptions, [{\n\t        key: \"store\",\n\t        get: function get() {\n\t            if (this.storeName === \"local\") {\n\t                return CachingOptions.storage.local;\n\t            } else {\n\t                return CachingOptions.storage.session;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return CachingOptions;\n\t}();\n\t\n\tCachingOptions.storage = new storage_1.PnPClientStorage();\n\texports.CachingOptions = CachingOptions;\n\t\n\tvar CachingParserWrapper = function () {\n\t    function CachingParserWrapper(_parser, _cacheOptions) {\n\t        _classCallCheck(this, CachingParserWrapper);\n\t\n\t        this._parser = _parser;\n\t        this._cacheOptions = _cacheOptions;\n\t    }\n\t\n\t    _createClass(CachingParserWrapper, [{\n\t        key: \"parse\",\n\t        value: function parse(response) {\n\t            var _this = this;\n\t\n\t            // add this to the cache based on the options\n\t            return this._parser.parse(response).then(function (data) {\n\t                if (_this._cacheOptions.store !== null) {\n\t                    _this._cacheOptions.store.put(_this._cacheOptions.key, data, _this._cacheOptions.expiration);\n\t                }\n\t                return data;\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return CachingParserWrapper;\n\t}();\n\t\n\texports.CachingParserWrapper = CachingParserWrapper;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar queryable_1 = __webpack_require__(8);\n\t\n\tvar SearchSuggest = function (_queryable_1$Queryabl) {\n\t    _inherits(SearchSuggest, _queryable_1$Queryabl);\n\t\n\t    function SearchSuggest(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"_api/search/suggest\";\n\t\n\t        _classCallCheck(this, SearchSuggest);\n\t\n\t        return _possibleConstructorReturn(this, (SearchSuggest.__proto__ || Object.getPrototypeOf(SearchSuggest)).call(this, baseUrl, path));\n\t    }\n\t\n\t    _createClass(SearchSuggest, [{\n\t        key: \"execute\",\n\t        value: function execute(query) {\n\t            this.mapQueryToQueryString(query);\n\t            return this.get().then(function (response) {\n\t                return new SearchSuggestResult(response);\n\t            });\n\t        }\n\t    }, {\n\t        key: \"mapQueryToQueryString\",\n\t        value: function mapQueryToQueryString(query) {\n\t            this.query.add(\"querytext\", \"'\" + query.querytext + \"'\");\n\t            if (query.hasOwnProperty(\"count\")) {\n\t                this.query.add(\"inumberofquerysuggestions\", query.count.toString());\n\t            }\n\t            if (query.hasOwnProperty(\"personalCount\")) {\n\t                this.query.add(\"inumberofresultsuggestions\", query.personalCount.toString());\n\t            }\n\t            if (query.hasOwnProperty(\"preQuery\")) {\n\t                this.query.add(\"fprequerysuggestions\", query.preQuery.toString());\n\t            }\n\t            if (query.hasOwnProperty(\"hitHighlighting\")) {\n\t                this.query.add(\"fhithighlighting\", query.hitHighlighting.toString());\n\t            }\n\t            if (query.hasOwnProperty(\"capitalize\")) {\n\t                this.query.add(\"fcapitalizefirstletters\", query.capitalize.toString());\n\t            }\n\t            if (query.hasOwnProperty(\"culture\")) {\n\t                this.query.add(\"culture\", query.culture.toString());\n\t            }\n\t            if (query.hasOwnProperty(\"stemming\")) {\n\t                this.query.add(\"enablestemming\", query.stemming.toString());\n\t            }\n\t            if (query.hasOwnProperty(\"includePeople\")) {\n\t                this.query.add(\"showpeoplenamesuggestions\", query.includePeople.toString());\n\t            }\n\t            if (query.hasOwnProperty(\"queryRules\")) {\n\t                this.query.add(\"enablequeryrules\", query.queryRules.toString());\n\t            }\n\t            if (query.hasOwnProperty(\"prefixMatch\")) {\n\t                this.query.add(\"fprefixmatchallterms\", query.prefixMatch.toString());\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return SearchSuggest;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.SearchSuggest = SearchSuggest;\n\t\n\tvar SearchSuggestResult = function SearchSuggestResult(json) {\n\t    _classCallCheck(this, SearchSuggestResult);\n\t\n\t    if (json.hasOwnProperty(\"suggest\")) {\n\t        // verbose\n\t        this.PeopleNames = json.suggest.PeopleNames.results;\n\t        this.PersonalResults = json.suggest.PersonalResults.results;\n\t        this.Queries = json.suggest.Queries.results;\n\t    } else {\n\t        this.PeopleNames = json.PeopleNames;\n\t        this.PersonalResults = json.PersonalResults;\n\t        this.Queries = json.Queries;\n\t    }\n\t};\n\t\n\texports.SearchSuggestResult = SearchSuggestResult;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar queryable_1 = __webpack_require__(8);\n\tvar webs_1 = __webpack_require__(18);\n\tvar usercustomactions_1 = __webpack_require__(34);\n\tvar odata_1 = __webpack_require__(11);\n\tvar features_1 = __webpack_require__(36);\n\t/**\n\t * Describes a site collection\n\t *\n\t */\n\t\n\tvar Site = function (_queryable_1$Queryabl) {\n\t    _inherits(Site, _queryable_1$Queryabl);\n\t\n\t    /**\n\t     * Creates a new instance of the RoleAssignments class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n\t     */\n\t    function Site(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"_api/site\";\n\t\n\t        _classCallCheck(this, Site);\n\t\n\t        return _possibleConstructorReturn(this, (Site.__proto__ || Object.getPrototypeOf(Site)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Gets the root web of the site collection\n\t     *\n\t     */\n\t\n\t\n\t    _createClass(Site, [{\n\t        key: \"getContextInfo\",\n\t\n\t        /**\n\t         * Gets the context information for the site.\n\t         */\n\t        value: function getContextInfo() {\n\t            var q = new Site(this.parentUrl, \"_api/contextinfo\");\n\t            return q.post().then(function (data) {\n\t                if (data.hasOwnProperty(\"GetContextWebInformation\")) {\n\t                    var info = data.GetContextWebInformation;\n\t                    info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\n\t                    return info;\n\t                } else {\n\t                    return data;\n\t                }\n\t            });\n\t        }\n\t        /**\n\t         * Gets the document libraries on a site. Static method. (SharePoint Online only)\n\t         *\n\t         * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\n\t         */\n\t\n\t    }, {\n\t        key: \"getDocumentLibraries\",\n\t        value: function getDocumentLibraries(absoluteWebUrl) {\n\t            var q = new queryable_1.Queryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\n\t            q.query.add(\"@v\", \"'\" + absoluteWebUrl + \"'\");\n\t            return q.get().then(function (data) {\n\t                if (data.hasOwnProperty(\"GetDocumentLibraries\")) {\n\t                    return data.GetDocumentLibraries;\n\t                } else {\n\t                    return data;\n\t                }\n\t            });\n\t        }\n\t        /**\n\t         * Gets the site URL from a page URL.\n\t         *\n\t         * @param absolutePageUrl The absolute url of the page\n\t         */\n\t\n\t    }, {\n\t        key: \"getWebUrlFromPageUrl\",\n\t        value: function getWebUrlFromPageUrl(absolutePageUrl) {\n\t            var q = new queryable_1.Queryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\n\t            q.query.add(\"@v\", \"'\" + absolutePageUrl + \"'\");\n\t            return q.get().then(function (data) {\n\t                if (data.hasOwnProperty(\"GetWebUrlFromPageUrl\")) {\n\t                    return data.GetWebUrlFromPageUrl;\n\t                } else {\n\t                    return data;\n\t                }\n\t            });\n\t        }\n\t        /**\n\t         * Creates a new batch for requests within the context of context this site\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"createBatch\",\n\t        value: function createBatch() {\n\t            return new odata_1.ODataBatch(this.parentUrl);\n\t        }\n\t    }, {\n\t        key: \"rootWeb\",\n\t        get: function get() {\n\t            return new webs_1.Web(this, \"rootweb\");\n\t        }\n\t        /**\n\t         * Gets the active features for this site\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"features\",\n\t        get: function get() {\n\t            return new features_1.Features(this);\n\t        }\n\t        /**\n\t         * Get all custom actions on a site collection\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"userCustomActions\",\n\t        get: function get() {\n\t            return new usercustomactions_1.UserCustomActions(this);\n\t        }\n\t    }]);\n\t\n\t    return Site;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.Site = Site;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar queryable_1 = __webpack_require__(8);\n\tvar queryablesecurable_1 = __webpack_require__(19);\n\tvar lists_1 = __webpack_require__(23);\n\tvar fields_1 = __webpack_require__(30);\n\tvar navigation_1 = __webpack_require__(35);\n\tvar sitegroups_1 = __webpack_require__(21);\n\tvar contenttypes_1 = __webpack_require__(27);\n\tvar folders_1 = __webpack_require__(25);\n\tvar roles_1 = __webpack_require__(20);\n\tvar files_1 = __webpack_require__(26);\n\tvar util_1 = __webpack_require__(1);\n\tvar lists_2 = __webpack_require__(23);\n\tvar siteusers_1 = __webpack_require__(22);\n\tvar usercustomactions_1 = __webpack_require__(34);\n\tvar odata_1 = __webpack_require__(11);\n\tvar features_1 = __webpack_require__(36);\n\t\n\tvar Webs = function (_queryable_1$Queryabl) {\n\t    _inherits(Webs, _queryable_1$Queryabl);\n\t\n\t    function Webs(baseUrl) {\n\t        var webPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"webs\";\n\t\n\t        _classCallCheck(this, Webs);\n\t\n\t        return _possibleConstructorReturn(this, (Webs.__proto__ || Object.getPrototypeOf(Webs)).call(this, baseUrl, webPath));\n\t    }\n\t    /**\n\t     * Adds a new web to the collection\n\t     *\n\t     * @param title The new web's title\n\t     * @param url The new web's relative url\n\t     * @param description The web web's description\n\t     * @param template The web's template\n\t     * @param language The language code to use for this web\n\t     * @param inheritPermissions If true permissions will be inherited from the partent web\n\t     * @param additionalSettings Will be passed as part of the web creation body\n\t     */\n\t\n\t\n\t    _createClass(Webs, [{\n\t        key: \"add\",\n\t        value: function add(title, url) {\n\t            var description = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n\t            var template = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"STS\";\n\t            var language = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1033;\n\t            var inheritPermissions = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n\t            var additionalSettings = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : {};\n\t\n\t            var props = util_1.Util.extend({\n\t                Description: description,\n\t                Language: language,\n\t                Title: title,\n\t                Url: url,\n\t                UseSamePermissionsAsParentSite: inheritPermissions,\n\t                WebTemplate: template\n\t            }, additionalSettings);\n\t            var postBody = JSON.stringify({\n\t                \"parameters\": util_1.Util.extend({\n\t                    \"__metadata\": { \"type\": \"SP.WebCreationInformation\" }\n\t                }, props)\n\t            });\n\t            var q = new Webs(this, \"add\");\n\t            return q.post({ body: postBody }).then(function (data) {\n\t                return {\n\t                    data: data,\n\t                    web: new Web(odata_1.extractOdataId(data).replace(/_api\\/web\\/?/i, \"\"))\n\t                };\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Webs;\n\t}(queryable_1.QueryableCollection);\n\t\n\texports.Webs = Webs;\n\t/**\n\t * Describes a web\n\t *\n\t */\n\t\n\tvar Web = function (_queryablesecurable_) {\n\t    _inherits(Web, _queryablesecurable_);\n\t\n\t    function Web(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"_api/web\";\n\t\n\t        _classCallCheck(this, Web);\n\t\n\t        return _possibleConstructorReturn(this, (Web.__proto__ || Object.getPrototypeOf(Web)).call(this, baseUrl, path));\n\t    }\n\t\n\t    _createClass(Web, [{\n\t        key: \"createBatch\",\n\t\n\t        /**\n\t         * Creates a new batch for requests within the context of context this web\n\t         *\n\t         */\n\t        value: function createBatch() {\n\t            return new odata_1.ODataBatch(this.parentUrl);\n\t        }\n\t        /**\n\t         * Get a folder by server relative url\n\t         *\n\t         * @param folderRelativeUrl the server relative path to the folder (including /sites/ if applicable)\n\t         */\n\t\n\t    }, {\n\t        key: \"getFolderByServerRelativeUrl\",\n\t        value: function getFolderByServerRelativeUrl(folderRelativeUrl) {\n\t            return new folders_1.Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\n\t        }\n\t        /**\n\t         * Get a file by server relative url\n\t         *\n\t         * @param fileRelativeUrl the server relative path to the file (including /sites/ if applicable)\n\t         */\n\t\n\t    }, {\n\t        key: \"getFileByServerRelativeUrl\",\n\t        value: function getFileByServerRelativeUrl(fileRelativeUrl) {\n\t            return new files_1.File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\n\t        }\n\t        /**\n\t         * Get a list by server relative url (list's root folder)\n\t         *\n\t         * @param listRelativeUrl the server relative path to the list's root folder (including /sites/ if applicable)\n\t         */\n\t\n\t    }, {\n\t        key: \"getList\",\n\t        value: function getList(listRelativeUrl) {\n\t            return new lists_2.List(this, \"getList('\" + listRelativeUrl + \"')\");\n\t        }\n\t        /**\n\t         * Updates this web intance with the supplied properties\n\t         *\n\t         * @param properties A plain object hash of values to update for the web\n\t         */\n\t\n\t    }, {\n\t        key: \"update\",\n\t        value: function update(properties) {\n\t            var _this3 = this;\n\t\n\t            var postBody = JSON.stringify(util_1.Util.extend({\n\t                \"__metadata\": { \"type\": \"SP.Web\" }\n\t            }, properties));\n\t            return this.post({\n\t                body: postBody,\n\t                headers: {\n\t                    \"X-HTTP-Method\": \"MERGE\"\n\t                }\n\t            }).then(function (data) {\n\t                return {\n\t                    data: data,\n\t                    web: _this3\n\t                };\n\t            });\n\t        }\n\t        /**\n\t         * Delete this web\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"delete\",\n\t        value: function _delete() {\n\t            return _get(Web.prototype.__proto__ || Object.getPrototypeOf(Web.prototype), \"delete\", this).call(this);\n\t        }\n\t        /**\n\t         * Applies the theme specified by the contents of each of the files specified in the arguments to the site.\n\t         *\n\t         * @param colorPaletteUrl Server-relative URL of the color palette file.\n\t         * @param fontSchemeUrl Server-relative URL of the font scheme.\n\t         * @param backgroundImageUrl Server-relative URL of the background image.\n\t         * @param shareGenerated true to store the generated theme files in the root site, or false to store them in this site.\n\t         */\n\t\n\t    }, {\n\t        key: \"applyTheme\",\n\t        value: function applyTheme(colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\n\t            var postBody = JSON.stringify({\n\t                backgroundImageUrl: backgroundImageUrl,\n\t                colorPaletteUrl: colorPaletteUrl,\n\t                fontSchemeUrl: fontSchemeUrl,\n\t                shareGenerated: shareGenerated\n\t            });\n\t            var q = new Web(this, \"applytheme\");\n\t            return q.post({ body: postBody });\n\t        }\n\t        /**\n\t         * Applies the specified site definition or site template to the Web site that has no template applied to it.\n\t         *\n\t         * @param template Name of the site definition or the name of the site template\n\t         */\n\t\n\t    }, {\n\t        key: \"applyWebTemplate\",\n\t        value: function applyWebTemplate(template) {\n\t            var q = new Web(this, \"applywebtemplate\");\n\t            q.concat(\"(@t)\");\n\t            q.query.add(\"@t\", template);\n\t            return q.post();\n\t        }\n\t        /**\n\t         * Returns whether the current user has the given set of permissions.\n\t         *\n\t         * @param perms The high and low permission range.\n\t         */\n\t\n\t    }, {\n\t        key: \"doesUserHavePermissions\",\n\t        value: function doesUserHavePermissions(perms) {\n\t            var q = new Web(this, \"doesuserhavepermissions\");\n\t            q.concat(\"(@p)\");\n\t            q.query.add(\"@p\", JSON.stringify(perms));\n\t            return q.get();\n\t        }\n\t        /**\n\t         * Checks whether the specified login name belongs to a valid user in the site. If the user doesn't exist, adds the user to the site.\n\t         *\n\t         * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\n\t         */\n\t\n\t    }, {\n\t        key: \"ensureUser\",\n\t        value: function ensureUser(loginName) {\n\t            // TODO:: this should resolve to a User\n\t            var postBody = JSON.stringify({\n\t                logonName: loginName\n\t            });\n\t            var q = new Web(this, \"ensureuser\");\n\t            return q.post({ body: postBody });\n\t        }\n\t        /**\n\t         * Returns a collection of site templates available for the site.\n\t         *\n\t         * @param language The LCID of the site templates to get.\n\t         * @param true to include language-neutral site templates; otherwise false\n\t         */\n\t\n\t    }, {\n\t        key: \"availableWebTemplates\",\n\t        value: function availableWebTemplates() {\n\t            var language = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1033;\n\t            var includeCrossLanugage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\t\n\t            return new queryable_1.QueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\n\t        }\n\t        /**\n\t         * Returns the list gallery on the site.\n\t         *\n\t         * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\n\t         * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\n\t         */\n\t        /* tslint:disable member-access */\n\t\n\t    }, {\n\t        key: \"getCatalog\",\n\t        value: function getCatalog(type) {\n\t            var q = new Web(this, \"getcatalog(\" + type + \")\");\n\t            q.select(\"Id\");\n\t            return q.get().then(function (data) {\n\t                return new lists_2.List(odata_1.extractOdataId(data));\n\t            });\n\t        }\n\t        /* tslint:enable */\n\t        /**\n\t         * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\n\t         */\n\t\n\t    }, {\n\t        key: \"getChanges\",\n\t        value: function getChanges(query) {\n\t            var postBody = JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\n\t            // don't change \"this\" instance, make a new one\n\t            var q = new Web(this, \"getchanges\");\n\t            return q.post({ body: postBody });\n\t        }\n\t        /**\n\t         * Gets the custom list templates for the site.\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"getUserById\",\n\t\n\t        /**\n\t         * Returns the user corresponding to the specified member identifier for the current site.\n\t         *\n\t         * @param id The ID of the user.\n\t         */\n\t        value: function getUserById(id) {\n\t            return new siteusers_1.SiteUser(this, \"getUserById(\" + id + \")\");\n\t        }\n\t        /**\n\t         * Returns the name of the image file for the icon that is used to represent the specified file.\n\t         *\n\t         * @param filename The file name. If this parameter is empty, the server returns an empty string.\n\t         * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1.\n\t         * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\n\t         */\n\t\n\t    }, {\n\t        key: \"mapToIcon\",\n\t        value: function mapToIcon(filename) {\n\t            var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\t            var progId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n\t\n\t            var q = new Web(this, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\");\n\t            return q.get();\n\t        }\n\t    }, {\n\t        key: \"webs\",\n\t        get: function get() {\n\t            return new Webs(this);\n\t        }\n\t        /**\n\t         * Get the content types available in this web\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"contentTypes\",\n\t        get: function get() {\n\t            return new contenttypes_1.ContentTypes(this);\n\t        }\n\t        /**\n\t         * Get the lists in this web\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"lists\",\n\t        get: function get() {\n\t            return new lists_1.Lists(this);\n\t        }\n\t        /**\n\t         * Gets the fields in this web\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"fields\",\n\t        get: function get() {\n\t            return new fields_1.Fields(this);\n\t        }\n\t        /**\n\t         * Gets the active features for this web\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"features\",\n\t        get: function get() {\n\t            return new features_1.Features(this);\n\t        }\n\t        /**\n\t         * Gets the available fields in this web\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"availablefields\",\n\t        get: function get() {\n\t            return new fields_1.Fields(this, \"availablefields\");\n\t        }\n\t        /**\n\t         * Get the navigation options in this web\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"navigation\",\n\t        get: function get() {\n\t            return new navigation_1.Navigation(this);\n\t        }\n\t        /**\n\t         * Gets the site users\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"siteUsers\",\n\t        get: function get() {\n\t            return new siteusers_1.SiteUsers(this);\n\t        }\n\t        /**\n\t         * Gets the site groups\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"siteGroups\",\n\t        get: function get() {\n\t            return new sitegroups_1.SiteGroups(this);\n\t        }\n\t        /**\n\t         * Gets the current user\n\t         */\n\t\n\t    }, {\n\t        key: \"currentUser\",\n\t        get: function get() {\n\t            return new siteusers_1.CurrentUser(this);\n\t        }\n\t        /**\n\t         * Get the folders in this web\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"folders\",\n\t        get: function get() {\n\t            return new folders_1.Folders(this);\n\t        }\n\t        /**\n\t         * Get all custom actions on a site\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"userCustomActions\",\n\t        get: function get() {\n\t            return new usercustomactions_1.UserCustomActions(this);\n\t        }\n\t        /**\n\t         * Gets the collection of RoleDefinition resources.\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"roleDefinitions\",\n\t        get: function get() {\n\t            return new roles_1.RoleDefinitions(this);\n\t        }\n\t    }, {\n\t        key: \"customListTemplate\",\n\t        get: function get() {\n\t            return new queryable_1.QueryableCollection(this, \"getcustomlisttemplates\");\n\t        }\n\t    }]);\n\t\n\t    return Web;\n\t}(queryablesecurable_1.QueryableSecurable);\n\t\n\texports.Web = Web;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar roles_1 = __webpack_require__(20);\n\tvar queryable_1 = __webpack_require__(8);\n\t\n\tvar QueryableSecurable = function (_queryable_1$Queryabl) {\n\t    _inherits(QueryableSecurable, _queryable_1$Queryabl);\n\t\n\t    function QueryableSecurable() {\n\t        _classCallCheck(this, QueryableSecurable);\n\t\n\t        return _possibleConstructorReturn(this, (QueryableSecurable.__proto__ || Object.getPrototypeOf(QueryableSecurable)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(QueryableSecurable, [{\n\t        key: \"getUserEffectivePermissions\",\n\t\n\t        /**\n\t         * Gets the effective permissions for the user supplied\n\t         *\n\t         * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\n\t         */\n\t        value: function getUserEffectivePermissions(loginName) {\n\t            var perms = new queryable_1.Queryable(this, \"getUserEffectivePermissions(@user)\");\n\t            perms.query.add(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\n\t            return perms;\n\t        }\n\t        /**\n\t         * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\n\t         *\n\t         * @param copyRoleAssignments If true the permissions are copied from the current parent scope\n\t         * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\n\t         */\n\t\n\t    }, {\n\t        key: \"breakRoleInheritance\",\n\t        value: function breakRoleInheritance() {\n\t            var copyRoleAssignments = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\t            var clearSubscopes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\t\n\t            var Breaker = function (_queryable_1$Queryabl2) {\n\t                _inherits(Breaker, _queryable_1$Queryabl2);\n\t\n\t                function Breaker(baseUrl, copy, clear) {\n\t                    _classCallCheck(this, Breaker);\n\t\n\t                    return _possibleConstructorReturn(this, (Breaker.__proto__ || Object.getPrototypeOf(Breaker)).call(this, baseUrl, \"breakroleinheritance(copyroleassignments=\" + copy + \", clearsubscopes=\" + clear + \")\"));\n\t                }\n\t\n\t                _createClass(Breaker, [{\n\t                    key: \"break\",\n\t                    value: function _break() {\n\t                        return this.post();\n\t                    }\n\t                }]);\n\t\n\t                return Breaker;\n\t            }(queryable_1.Queryable);\n\t\n\t            var b = new Breaker(this, copyRoleAssignments, clearSubscopes);\n\t            return b.break();\n\t        }\n\t        /**\n\t         * Removes the local role assignments so that it re-inherit role assignments from the parent object.\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"resetRoleInheritance\",\n\t        value: function resetRoleInheritance() {\n\t            var Resetter = function (_queryable_1$Queryabl3) {\n\t                _inherits(Resetter, _queryable_1$Queryabl3);\n\t\n\t                function Resetter(baseUrl) {\n\t                    _classCallCheck(this, Resetter);\n\t\n\t                    return _possibleConstructorReturn(this, (Resetter.__proto__ || Object.getPrototypeOf(Resetter)).call(this, baseUrl, \"resetroleinheritance\"));\n\t                }\n\t\n\t                _createClass(Resetter, [{\n\t                    key: \"reset\",\n\t                    value: function reset() {\n\t                        return this.post();\n\t                    }\n\t                }]);\n\t\n\t                return Resetter;\n\t            }(queryable_1.Queryable);\n\t\n\t            var r = new Resetter(this);\n\t            return r.reset();\n\t        }\n\t    }, {\n\t        key: \"roleAssignments\",\n\t\n\t        /**\n\t         * Gets the set of role assignments for this item\n\t         *\n\t         */\n\t        get: function get() {\n\t            return new roles_1.RoleAssignments(this);\n\t        }\n\t        /**\n\t         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"firstUniqueAncestorSecurableObject\",\n\t        get: function get() {\n\t            return new queryable_1.QueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\n\t        }\n\t    }]);\n\t\n\t    return QueryableSecurable;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.QueryableSecurable = QueryableSecurable;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar queryable_1 = __webpack_require__(8);\n\tvar sitegroups_1 = __webpack_require__(21);\n\tvar util_1 = __webpack_require__(1);\n\t/**\n\t * Describes a set of role assignments for the current scope\n\t *\n\t */\n\t\n\tvar RoleAssignments = function (_queryable_1$Queryabl) {\n\t    _inherits(RoleAssignments, _queryable_1$Queryabl);\n\t\n\t    /**\n\t     * Creates a new instance of the RoleAssignments class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n\t     */\n\t    function RoleAssignments(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"roleassignments\";\n\t\n\t        _classCallCheck(this, RoleAssignments);\n\t\n\t        return _possibleConstructorReturn(this, (RoleAssignments.__proto__ || Object.getPrototypeOf(RoleAssignments)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Adds a new role assignment with the specified principal and role definitions to the collection.\n\t     *\n\t     * @param principalId The ID of the user or group to assign permissions to\n\t     * @param roleDefId The ID of the role definition that defines the permissions to assign\n\t     *\n\t     */\n\t\n\t\n\t    _createClass(RoleAssignments, [{\n\t        key: \"add\",\n\t        value: function add(principalId, roleDefId) {\n\t            var a = new RoleAssignments(this, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\");\n\t            return a.post();\n\t        }\n\t        /**\n\t         * Removes the role assignment with the specified principal and role definition from the collection\n\t         *\n\t         * @param principalId The ID of the user or group in the role assignment.\n\t         * @param roleDefId The ID of the role definition in the role assignment\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"remove\",\n\t        value: function remove(principalId, roleDefId) {\n\t            var a = new RoleAssignments(this, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\");\n\t            return a.post();\n\t        }\n\t        /**\n\t         * Gets the role assignment associated with the specified principal ID from the collection.\n\t         *\n\t         * @param id The id of the role assignment\n\t         */\n\t\n\t    }, {\n\t        key: \"getById\",\n\t        value: function getById(id) {\n\t            var ra = new RoleAssignment(this);\n\t            ra.concat(\"(\" + id + \")\");\n\t            return ra;\n\t        }\n\t    }]);\n\t\n\t    return RoleAssignments;\n\t}(queryable_1.QueryableCollection);\n\t\n\texports.RoleAssignments = RoleAssignments;\n\t\n\tvar RoleAssignment = function (_queryable_1$Queryabl2) {\n\t    _inherits(RoleAssignment, _queryable_1$Queryabl2);\n\t\n\t    /**\n\t    * Creates a new instance of the RoleAssignment class\n\t    *\n\t    * @param baseUrl The url or Queryable which forms the parent of this fields collection\n\t    */\n\t    function RoleAssignment(baseUrl, path) {\n\t        _classCallCheck(this, RoleAssignment);\n\t\n\t        return _possibleConstructorReturn(this, (RoleAssignment.__proto__ || Object.getPrototypeOf(RoleAssignment)).call(this, baseUrl, path));\n\t    }\n\t\n\t    _createClass(RoleAssignment, [{\n\t        key: \"delete\",\n\t\n\t        /**\n\t         * Delete this role assignment\n\t         *\n\t         */\n\t        value: function _delete() {\n\t            return this.post({\n\t                headers: {\n\t                    \"X-HTTP-Method\": \"DELETE\"\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: \"groups\",\n\t        get: function get() {\n\t            return new sitegroups_1.SiteGroups(this, \"groups\");\n\t        }\n\t        /**\n\t         * Get the role definition bindings for this role assignment\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"bindings\",\n\t        get: function get() {\n\t            return new RoleDefinitionBindings(this);\n\t        }\n\t    }]);\n\t\n\t    return RoleAssignment;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.RoleAssignment = RoleAssignment;\n\t\n\tvar RoleDefinitions = function (_queryable_1$Queryabl3) {\n\t    _inherits(RoleDefinitions, _queryable_1$Queryabl3);\n\t\n\t    /**\n\t     * Creates a new instance of the RoleDefinitions class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n\t     * @param path\n\t     *\n\t     */\n\t    function RoleDefinitions(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"roledefinitions\";\n\t\n\t        _classCallCheck(this, RoleDefinitions);\n\t\n\t        return _possibleConstructorReturn(this, (RoleDefinitions.__proto__ || Object.getPrototypeOf(RoleDefinitions)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Gets the role definition with the specified ID from the collection.\n\t     *\n\t     * @param id The ID of the role definition.\n\t     *\n\t     */\n\t\n\t\n\t    _createClass(RoleDefinitions, [{\n\t        key: \"getById\",\n\t        value: function getById(id) {\n\t            return new RoleDefinition(this, \"getById(\" + id + \")\");\n\t        }\n\t        /**\n\t         * Gets the role definition with the specified name.\n\t         *\n\t         * @param name The name of the role definition.\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"getByName\",\n\t        value: function getByName(name) {\n\t            return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\n\t        }\n\t        /**\n\t         * Gets the role definition with the specified type.\n\t         *\n\t         * @param name The name of the role definition.\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"getByType\",\n\t        value: function getByType(roleTypeKind) {\n\t            return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\n\t        }\n\t        /**\n\t         * Create a role definition\n\t         *\n\t         * @param name The new role definition's name\n\t         * @param description The new role definition's description\n\t         * @param order The order in which the role definition appears\n\t         * @param basePermissions The permissions mask for this role definition\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"add\",\n\t        value: function add(name, description, order, basePermissions) {\n\t            var _this4 = this;\n\t\n\t            var postBody = JSON.stringify({\n\t                BasePermissions: util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\n\t                Description: description,\n\t                Name: name,\n\t                Order: order,\n\t                __metadata: { \"type\": \"SP.RoleDefinition\" }\n\t            });\n\t            return this.post({ body: postBody }).then(function (data) {\n\t                return {\n\t                    data: data,\n\t                    definition: _this4.getById(data.Id)\n\t                };\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return RoleDefinitions;\n\t}(queryable_1.QueryableCollection);\n\t\n\texports.RoleDefinitions = RoleDefinitions;\n\t\n\tvar RoleDefinition = function (_queryable_1$Queryabl4) {\n\t    _inherits(RoleDefinition, _queryable_1$Queryabl4);\n\t\n\t    function RoleDefinition(baseUrl, path) {\n\t        _classCallCheck(this, RoleDefinition);\n\t\n\t        return _possibleConstructorReturn(this, (RoleDefinition.__proto__ || Object.getPrototypeOf(RoleDefinition)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Updates this web intance with the supplied properties\n\t     *\n\t     * @param properties A plain object hash of values to update for the web\n\t     */\n\t    /* tslint:disable no-string-literal */\n\t\n\t\n\t    _createClass(RoleDefinition, [{\n\t        key: \"update\",\n\t        value: function update(properties) {\n\t            var _this6 = this;\n\t\n\t            if (typeof properties.hasOwnProperty(\"BasePermissions\") !== \"undefined\") {\n\t                properties[\"BasePermissions\"] = util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, properties[\"BasePermissions\"]);\n\t            }\n\t            var postBody = JSON.stringify(util_1.Util.extend({\n\t                \"__metadata\": { \"type\": \"SP.RoleDefinition\" }\n\t            }, properties));\n\t            return this.post({\n\t                body: postBody,\n\t                headers: {\n\t                    \"X-HTTP-Method\": \"MERGE\"\n\t                }\n\t            }).then(function (data) {\n\t                var retDef = _this6;\n\t                if (properties.hasOwnProperty(\"Name\")) {\n\t                    var parent = _this6.getParent(RoleDefinitions, _this6.parentUrl, \"\");\n\t                    retDef = parent.getByName(properties[\"Name\"]);\n\t                }\n\t                return {\n\t                    data: data,\n\t                    definition: retDef\n\t                };\n\t            });\n\t        }\n\t        /* tslint:enable */\n\t        /**\n\t         * Delete this role definition\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"delete\",\n\t        value: function _delete() {\n\t            return this.post({\n\t                headers: {\n\t                    \"X-HTTP-Method\": \"DELETE\"\n\t                }\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return RoleDefinition;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.RoleDefinition = RoleDefinition;\n\t\n\tvar RoleDefinitionBindings = function (_queryable_1$Queryabl5) {\n\t    _inherits(RoleDefinitionBindings, _queryable_1$Queryabl5);\n\t\n\t    function RoleDefinitionBindings(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"roledefinitionbindings\";\n\t\n\t        _classCallCheck(this, RoleDefinitionBindings);\n\t\n\t        return _possibleConstructorReturn(this, (RoleDefinitionBindings.__proto__ || Object.getPrototypeOf(RoleDefinitionBindings)).call(this, baseUrl, path));\n\t    }\n\t\n\t    return RoleDefinitionBindings;\n\t}(queryable_1.QueryableCollection);\n\t\n\texports.RoleDefinitionBindings = RoleDefinitionBindings;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar queryable_1 = __webpack_require__(8);\n\tvar siteusers_1 = __webpack_require__(22);\n\tvar util_1 = __webpack_require__(1);\n\t/**\n\t * Principal Type enum\n\t *\n\t */\n\tvar PrincipalType;\n\t(function (PrincipalType) {\n\t    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n\t    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n\t    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n\t    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n\t    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n\t    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n\t})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\n\t/**\n\t * Describes a collection of site users\n\t *\n\t */\n\t\n\tvar SiteGroups = function (_queryable_1$Queryabl) {\n\t    _inherits(SiteGroups, _queryable_1$Queryabl);\n\t\n\t    /**\n\t     * Creates a new instance of the SiteUsers class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this user collection\n\t     */\n\t    function SiteGroups(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"sitegroups\";\n\t\n\t        _classCallCheck(this, SiteGroups);\n\t\n\t        return _possibleConstructorReturn(this, (SiteGroups.__proto__ || Object.getPrototypeOf(SiteGroups)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Adds a new group to the site collection\n\t     *\n\t     * @param props The properties to be updated\n\t     */\n\t\n\t\n\t    _createClass(SiteGroups, [{\n\t        key: \"add\",\n\t        value: function add(properties) {\n\t            var _this2 = this;\n\t\n\t            var postBody = JSON.stringify(util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties));\n\t            return this.post({ body: postBody }).then(function (data) {\n\t                return {\n\t                    data: data,\n\t                    group: _this2.getById(data.Id)\n\t                };\n\t            });\n\t        }\n\t        /**\n\t         * Gets a group from the collection by name\n\t         *\n\t         * @param email The name of the group\n\t         */\n\t\n\t    }, {\n\t        key: \"getByName\",\n\t        value: function getByName(groupName) {\n\t            return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\n\t        }\n\t        /**\n\t         * Gets a group from the collection by id\n\t         *\n\t         * @param id The id of the group\n\t         */\n\t\n\t    }, {\n\t        key: \"getById\",\n\t        value: function getById(id) {\n\t            var sg = new SiteGroup(this);\n\t            sg.concat(\"(\" + id + \")\");\n\t            return sg;\n\t        }\n\t        /**\n\t         * Removes the group with the specified member ID from the collection.\n\t         *\n\t         * @param id The id of the group to remove\n\t         */\n\t\n\t    }, {\n\t        key: \"removeById\",\n\t        value: function removeById(id) {\n\t            var g = new SiteGroups(this, \"removeById('\" + id + \"')\");\n\t            return g.post();\n\t        }\n\t        /**\n\t         * Removes a user from the collection by login name\n\t         *\n\t         * @param loginName The login name of the user\n\t         */\n\t\n\t    }, {\n\t        key: \"removeByLoginName\",\n\t        value: function removeByLoginName(loginName) {\n\t            var g = new SiteGroups(this, \"removeByLoginName('\" + loginName + \"')\");\n\t            return g.post();\n\t        }\n\t    }]);\n\t\n\t    return SiteGroups;\n\t}(queryable_1.QueryableCollection);\n\t\n\texports.SiteGroups = SiteGroups;\n\t/**\n\t * Describes a single group\n\t *\n\t */\n\t\n\tvar SiteGroup = function (_queryable_1$Queryabl2) {\n\t    _inherits(SiteGroup, _queryable_1$Queryabl2);\n\t\n\t    /**\n\t     * Creates a new instance of the Group class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this site group\n\t     * @param path Optional, passes the path to the group\n\t     */\n\t    function SiteGroup(baseUrl, path) {\n\t        _classCallCheck(this, SiteGroup);\n\t\n\t        return _possibleConstructorReturn(this, (SiteGroup.__proto__ || Object.getPrototypeOf(SiteGroup)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Get's the users for this group\n\t     *\n\t     */\n\t\n\t\n\t    _createClass(SiteGroup, [{\n\t        key: \"update\",\n\t\n\t        /**\n\t        * Updates this group instance with the supplied properties\n\t        *\n\t        * @param properties A GroupWriteableProperties object of property names and values to update for the user\n\t        */\n\t        /* tslint:disable no-string-literal */\n\t        value: function update(properties) {\n\t            var _this4 = this;\n\t\n\t            var postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties);\n\t            return this.post({\n\t                body: JSON.stringify(postBody),\n\t                headers: {\n\t                    \"X-HTTP-Method\": \"MERGE\"\n\t                }\n\t            }).then(function (data) {\n\t                var retGroup = _this4;\n\t                if (properties.hasOwnProperty(\"Title\")) {\n\t                    retGroup = _this4.getParent(SiteGroup, _this4.parentUrl, \"getByName('\" + properties[\"Title\"] + \"')\");\n\t                }\n\t                return {\n\t                    data: data,\n\t                    group: retGroup\n\t                };\n\t            });\n\t        }\n\t    }, {\n\t        key: \"users\",\n\t        get: function get() {\n\t            return new siteusers_1.SiteUsers(this, \"users\");\n\t        }\n\t    }]);\n\t\n\t    return SiteGroup;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.SiteGroup = SiteGroup;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar queryable_1 = __webpack_require__(8);\n\tvar sitegroups_1 = __webpack_require__(21);\n\tvar util_1 = __webpack_require__(1);\n\t/**\n\t * Describes a collection of all site collection users\n\t *\n\t */\n\t\n\tvar SiteUsers = function (_queryable_1$Queryabl) {\n\t    _inherits(SiteUsers, _queryable_1$Queryabl);\n\t\n\t    /**\n\t     * Creates a new instance of the Users class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this user collection\n\t     */\n\t    function SiteUsers(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"siteusers\";\n\t\n\t        _classCallCheck(this, SiteUsers);\n\t\n\t        return _possibleConstructorReturn(this, (SiteUsers.__proto__ || Object.getPrototypeOf(SiteUsers)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Gets a user from the collection by email\n\t     *\n\t     * @param email The email of the user\n\t     */\n\t\n\t\n\t    _createClass(SiteUsers, [{\n\t        key: \"getByEmail\",\n\t        value: function getByEmail(email) {\n\t            return new SiteUser(this, \"getByEmail('\" + email + \"')\");\n\t        }\n\t        /**\n\t         * Gets a user from the collection by id\n\t         *\n\t         * @param id The id of the user\n\t         */\n\t\n\t    }, {\n\t        key: \"getById\",\n\t        value: function getById(id) {\n\t            return new SiteUser(this, \"getById(\" + id + \")\");\n\t        }\n\t        /**\n\t         * Gets a user from the collection by login name\n\t         *\n\t         * @param loginName The email address of the user\n\t         */\n\t\n\t    }, {\n\t        key: \"getByLoginName\",\n\t        value: function getByLoginName(loginName) {\n\t            var su = new SiteUser(this);\n\t            su.concat(\"(@v)\");\n\t            su.query.add(\"@v\", encodeURIComponent(loginName));\n\t            return su;\n\t        }\n\t        /**\n\t         * Removes a user from the collection by id\n\t         *\n\t         * @param id The id of the user\n\t         */\n\t\n\t    }, {\n\t        key: \"removeById\",\n\t        value: function removeById(id) {\n\t            var o = new SiteUsers(this, \"removeById(\" + id + \")\");\n\t            return o.post();\n\t        }\n\t        /**\n\t         * Removes a user from the collection by login name\n\t         *\n\t         * @param loginName The login name of the user\n\t         */\n\t\n\t    }, {\n\t        key: \"removeByLoginName\",\n\t        value: function removeByLoginName(loginName) {\n\t            var o = new SiteUsers(this, \"removeByLoginName(@v)\");\n\t            o.query.add(\"@v\", encodeURIComponent(loginName));\n\t            return o.post();\n\t        }\n\t        /**\n\t         * Add a user to a group\n\t         *\n\t         * @param loginName The login name of the user to add to the group\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"add\",\n\t        value: function add(loginName) {\n\t            var _this2 = this;\n\t\n\t            var postBody = JSON.stringify({ \"__metadata\": { \"type\": \"SP.User\" }, LoginName: loginName });\n\t            return this.post({ body: postBody }).then(function () {\n\t                return _this2.getByLoginName(loginName);\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return SiteUsers;\n\t}(queryable_1.QueryableCollection);\n\t\n\texports.SiteUsers = SiteUsers;\n\t/**\n\t * Describes a single user\n\t *\n\t */\n\t\n\tvar SiteUser = function (_queryable_1$Queryabl2) {\n\t    _inherits(SiteUser, _queryable_1$Queryabl2);\n\t\n\t    /**\n\t     * Creates a new instance of the User class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n\t     * @param path Optional, passes the path to the user\n\t     */\n\t    function SiteUser(baseUrl, path) {\n\t        _classCallCheck(this, SiteUser);\n\t\n\t        return _possibleConstructorReturn(this, (SiteUser.__proto__ || Object.getPrototypeOf(SiteUser)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Get's the groups for this user.\n\t     *\n\t     */\n\t\n\t\n\t    _createClass(SiteUser, [{\n\t        key: \"update\",\n\t\n\t        /**\n\t        * Updates this user instance with the supplied properties\n\t        *\n\t        * @param properties A plain object of property names and values to update for the user\n\t        */\n\t        value: function update(properties) {\n\t            var _this4 = this;\n\t\n\t            var postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.User\" } }, properties);\n\t            return this.post({\n\t                body: JSON.stringify(postBody),\n\t                headers: {\n\t                    \"X-HTTP-Method\": \"MERGE\"\n\t                }\n\t            }).then(function (data) {\n\t                return {\n\t                    data: data,\n\t                    user: _this4\n\t                };\n\t            });\n\t        }\n\t        /**\n\t         * Delete this user\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"delete\",\n\t        value: function _delete() {\n\t            return this.post({\n\t                headers: {\n\t                    \"X-HTTP-Method\": \"DELETE\"\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: \"groups\",\n\t        get: function get() {\n\t            return new sitegroups_1.SiteGroups(this, \"groups\");\n\t        }\n\t    }]);\n\t\n\t    return SiteUser;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.SiteUser = SiteUser;\n\t/**\n\t * Represents the current user\n\t */\n\t\n\tvar CurrentUser = function (_queryable_1$Queryabl3) {\n\t    _inherits(CurrentUser, _queryable_1$Queryabl3);\n\t\n\t    function CurrentUser(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"currentuser\";\n\t\n\t        _classCallCheck(this, CurrentUser);\n\t\n\t        return _possibleConstructorReturn(this, (CurrentUser.__proto__ || Object.getPrototypeOf(CurrentUser)).call(this, baseUrl, path));\n\t    }\n\t\n\t    return CurrentUser;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.CurrentUser = CurrentUser;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar items_1 = __webpack_require__(24);\n\tvar views_1 = __webpack_require__(29);\n\tvar contenttypes_1 = __webpack_require__(27);\n\tvar fields_1 = __webpack_require__(30);\n\tvar forms_1 = __webpack_require__(32);\n\tvar subscriptions_1 = __webpack_require__(33);\n\tvar queryable_1 = __webpack_require__(8);\n\tvar queryablesecurable_1 = __webpack_require__(19);\n\tvar util_1 = __webpack_require__(1);\n\tvar usercustomactions_1 = __webpack_require__(34);\n\tvar odata_1 = __webpack_require__(11);\n\tvar exceptions_1 = __webpack_require__(14);\n\t/**\n\t * Describes a collection of List objects\n\t *\n\t */\n\t\n\tvar Lists = function (_queryable_1$Queryabl) {\n\t    _inherits(Lists, _queryable_1$Queryabl);\n\t\n\t    /**\n\t     * Creates a new instance of the Lists class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n\t     */\n\t    function Lists(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"lists\";\n\t\n\t        _classCallCheck(this, Lists);\n\t\n\t        return _possibleConstructorReturn(this, (Lists.__proto__ || Object.getPrototypeOf(Lists)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Gets a list from the collection by title\n\t     *\n\t     * @param title The title of the list\n\t     */\n\t\n\t\n\t    _createClass(Lists, [{\n\t        key: \"getByTitle\",\n\t        value: function getByTitle(title) {\n\t            return new List(this, \"getByTitle('\" + title + \"')\");\n\t        }\n\t        /**\n\t         * Gets a list from the collection by guid id\n\t         *\n\t         * @param id The Id of the list (GUID)\n\t         */\n\t\n\t    }, {\n\t        key: \"getById\",\n\t        value: function getById(id) {\n\t            var list = new List(this);\n\t            list.concat(\"('\" + id + \"')\");\n\t            return list;\n\t        }\n\t        /**\n\t         * Adds a new list to the collection\n\t         *\n\t         * @param title The new list's title\n\t         * @param description The new list's description\n\t         * @param template The list template value\n\t         * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n\t         * @param additionalSettings Will be passed as part of the list creation body\n\t         */\n\t\n\t    }, {\n\t        key: \"add\",\n\t        value: function add(title) {\n\t            var description = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n\t            var template = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;\n\t\n\t            var _this2 = this;\n\t\n\t            var enableContentTypes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\t            var additionalSettings = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\t\n\t            var postBody = JSON.stringify(util_1.Util.extend({\n\t                \"__metadata\": { \"type\": \"SP.List\" },\n\t                \"AllowContentTypes\": enableContentTypes,\n\t                \"BaseTemplate\": template,\n\t                \"ContentTypesEnabled\": enableContentTypes,\n\t                \"Description\": description,\n\t                \"Title\": title\n\t            }, additionalSettings));\n\t            return this.post({ body: postBody }).then(function (data) {\n\t                return { data: data, list: _this2.getByTitle(title) };\n\t            });\n\t        }\n\t        /**\n\t         * Ensures that the specified list exists in the collection (note: this method not supported for batching)\n\t         *\n\t         * @param title The new list's title\n\t         * @param description The new list's description\n\t         * @param template The list template value\n\t         * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n\t         * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\n\t         */\n\t\n\t    }, {\n\t        key: \"ensure\",\n\t        value: function ensure(title) {\n\t            var description = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n\t            var template = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;\n\t\n\t            var _this3 = this;\n\t\n\t            var enableContentTypes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\t            var additionalSettings = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\t\n\t            if (this.hasBatch) {\n\t                throw new exceptions_1.NotSupportedInBatchException(\"The ensure list method\");\n\t            }\n\t            return new Promise(function (resolve, reject) {\n\t                var list = _this3.getByTitle(title);\n\t                list.get().then(function (_) {\n\t                    list.update(additionalSettings).then(function (d) {\n\t                        resolve({ created: false, data: d, list: list });\n\t                    }).catch(function (e) {\n\t                        return reject(e);\n\t                    });\n\t                }).catch(function () {\n\t                    _this3.add(title, description, template, enableContentTypes, additionalSettings).then(function (r) {\n\t                        resolve({ created: true, data: r.data, list: _this3.getByTitle(title) });\n\t                    });\n\t                }).catch(function (e) {\n\t                    return reject(e);\n\t                });\n\t            });\n\t        }\n\t        /**\n\t         * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\n\t         */\n\t\n\t    }, {\n\t        key: \"ensureSiteAssetsLibrary\",\n\t        value: function ensureSiteAssetsLibrary() {\n\t            var q = new Lists(this, \"ensuresiteassetslibrary\");\n\t            return q.post().then(function (json) {\n\t                return new List(odata_1.extractOdataId(json));\n\t            });\n\t        }\n\t        /**\n\t         * Gets a list that is the default location for wiki pages.\n\t         */\n\t\n\t    }, {\n\t        key: \"ensureSitePagesLibrary\",\n\t        value: function ensureSitePagesLibrary() {\n\t            var q = new Lists(this, \"ensuresitepageslibrary\");\n\t            return q.post().then(function (json) {\n\t                return new List(odata_1.extractOdataId(json));\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Lists;\n\t}(queryable_1.QueryableCollection);\n\t\n\texports.Lists = Lists;\n\t/**\n\t * Describes a single List instance\n\t *\n\t */\n\t\n\tvar List = function (_queryablesecurable_) {\n\t    _inherits(List, _queryablesecurable_);\n\t\n\t    /**\n\t     * Creates a new instance of the Lists class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n\t     * @param path Optional, if supplied will be appended to the supplied baseUrl\n\t     */\n\t    function List(baseUrl, path) {\n\t        _classCallCheck(this, List);\n\t\n\t        return _possibleConstructorReturn(this, (List.__proto__ || Object.getPrototypeOf(List)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Gets the content types in this list\n\t     *\n\t     */\n\t\n\t\n\t    _createClass(List, [{\n\t        key: \"getView\",\n\t\n\t        /**\n\t         * Gets a view by view guid id\n\t         *\n\t         */\n\t        value: function getView(viewId) {\n\t            return new views_1.View(this, \"getView('\" + viewId + \"')\");\n\t        }\n\t        /**\n\t         * Updates this list intance with the supplied properties\n\t         *\n\t         * @param properties A plain object hash of values to update for the list\n\t         * @param eTag Value used in the IF-Match header, by default \"*\"\n\t         */\n\t        /* tslint:disable no-string-literal */\n\t\n\t    }, {\n\t        key: \"update\",\n\t        value: function update(properties) {\n\t            var _this5 = this;\n\t\n\t            var eTag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"*\";\n\t\n\t            var postBody = JSON.stringify(util_1.Util.extend({\n\t                \"__metadata\": { \"type\": \"SP.List\" }\n\t            }, properties));\n\t            return this.post({\n\t                body: postBody,\n\t                headers: {\n\t                    \"IF-Match\": eTag,\n\t                    \"X-HTTP-Method\": \"MERGE\"\n\t                }\n\t            }).then(function (data) {\n\t                var retList = _this5;\n\t                if (properties.hasOwnProperty(\"Title\")) {\n\t                    retList = _this5.getParent(List, _this5.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\n\t                }\n\t                return {\n\t                    data: data,\n\t                    list: retList\n\t                };\n\t            });\n\t        }\n\t        /* tslint:enable */\n\t        /**\n\t         * Delete this list\n\t         *\n\t         * @param eTag Value used in the IF-Match header, by default \"*\"\n\t         */\n\t\n\t    }, {\n\t        key: \"delete\",\n\t        value: function _delete() {\n\t            var eTag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"*\";\n\t\n\t            return this.post({\n\t                headers: {\n\t                    \"IF-Match\": eTag,\n\t                    \"X-HTTP-Method\": \"DELETE\"\n\t                }\n\t            });\n\t        }\n\t        /**\n\t         * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\n\t         */\n\t\n\t    }, {\n\t        key: \"getChanges\",\n\t        value: function getChanges(query) {\n\t            var postBody = JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\n\t            // don't change \"this\" instance of the List, make a new one\n\t            var q = new List(this, \"getchanges\");\n\t            return q.post({ body: postBody });\n\t        }\n\t        /**\n\t         * Returns a collection of items from the list based on the specified query.\n\t         *\n\t         * @param CamlQuery The Query schema of Collaborative Application Markup\n\t         * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\n\t         * to define queries against list data.\n\t         * see:\n\t         *\n\t         * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\n\t         *\n\t         * @param expands A URI with a $expand System Query Option indicates that Entries associated with\n\t         * the Entry or Collection of Entries identified by the Resource Path\n\t         * section of the URI must be represented inline (i.e. eagerly loaded).\n\t         * see:\n\t         *\n\t         * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\n\t         *\n\t         * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\n\t         */\n\t\n\t    }, {\n\t        key: \"getItemsByCAMLQuery\",\n\t        value: function getItemsByCAMLQuery(query) {\n\t            var postBody = JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) });\n\t            // don't change \"this\" instance of the List, make a new one\n\t            var q = new List(this, \"getitems\");\n\t\n\t            for (var _len = arguments.length, expands = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t                expands[_key - 1] = arguments[_key];\n\t            }\n\t\n\t            q = q.expand.apply(q, expands);\n\t            return q.post({ body: postBody });\n\t        }\n\t        /**\n\t         * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\n\t         */\n\t\n\t    }, {\n\t        key: \"getListItemChangesSinceToken\",\n\t        value: function getListItemChangesSinceToken(query) {\n\t            var postBody = JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) });\n\t            // don't change \"this\" instance of the List, make a new one\n\t            var q = new List(this, \"getlistitemchangessincetoken\");\n\t            // note we are using a custom parser to return text as the response is an xml doc\n\t            return q.post({ body: postBody }, {\n\t                parse: function parse(r) {\n\t                    return r.text();\n\t                }\n\t            });\n\t        }\n\t        /**\n\t         * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n\t         */\n\t\n\t    }, {\n\t        key: \"recycle\",\n\t        value: function recycle() {\n\t            this.append(\"recycle\");\n\t            return this.post().then(function (data) {\n\t                if (data.hasOwnProperty(\"Recycle\")) {\n\t                    return data.Recycle;\n\t                } else {\n\t                    return data;\n\t                }\n\t            });\n\t        }\n\t        /**\n\t         * Renders list data based on the view xml provided\n\t         */\n\t\n\t    }, {\n\t        key: \"renderListData\",\n\t        value: function renderListData(viewXml) {\n\t            // don't change \"this\" instance of the List, make a new one\n\t            var q = new List(this, \"renderlistdata(@viewXml)\");\n\t            q.query.add(\"@viewXml\", \"'\" + viewXml + \"'\");\n\t            return q.post().then(function (data) {\n\t                // data will be a string, so we parse it again\n\t                data = JSON.parse(data);\n\t                if (data.hasOwnProperty(\"RenderListData\")) {\n\t                    return data.RenderListData;\n\t                } else {\n\t                    return data;\n\t                }\n\t            });\n\t        }\n\t        /**\n\t         * Gets the field values and field schema attributes for a list item.\n\t         */\n\t\n\t    }, {\n\t        key: \"renderListFormData\",\n\t        value: function renderListFormData(itemId, formId, mode) {\n\t            // don't change \"this\" instance of the List, make a new one\n\t            var q = new List(this, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode=\" + mode + \")\");\n\t            return q.post().then(function (data) {\n\t                // data will be a string, so we parse it again\n\t                data = JSON.parse(data);\n\t                if (data.hasOwnProperty(\"ListData\")) {\n\t                    return data.ListData;\n\t                } else {\n\t                    return data;\n\t                }\n\t            });\n\t        }\n\t        /**\n\t         * Reserves a list item ID for idempotent list item creation.\n\t         */\n\t\n\t    }, {\n\t        key: \"reserveListItemId\",\n\t        value: function reserveListItemId() {\n\t            // don't change \"this\" instance of the List, make a new one\n\t            var q = new List(this, \"reservelistitemid\");\n\t            return q.post().then(function (data) {\n\t                if (data.hasOwnProperty(\"ReserveListItemId\")) {\n\t                    return data.ReserveListItemId;\n\t                } else {\n\t                    return data;\n\t                }\n\t            });\n\t        }\n\t        /**\n\t         * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"getListItemEntityTypeFullName\",\n\t        value: function getListItemEntityTypeFullName() {\n\t            var q = new queryable_1.QueryableInstance(this);\n\t            return q.select(\"ListItemEntityTypeFullName\").getAs().then(function (o) {\n\t                return o.ListItemEntityTypeFullName;\n\t            });\n\t        }\n\t    }, {\n\t        key: \"contentTypes\",\n\t        get: function get() {\n\t            return new contenttypes_1.ContentTypes(this);\n\t        }\n\t        /**\n\t         * Gets the items in this list\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"items\",\n\t        get: function get() {\n\t            return new items_1.Items(this);\n\t        }\n\t        /**\n\t         * Gets the views in this list\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"views\",\n\t        get: function get() {\n\t            return new views_1.Views(this);\n\t        }\n\t        /**\n\t         * Gets the fields in this list\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"fields\",\n\t        get: function get() {\n\t            return new fields_1.Fields(this);\n\t        }\n\t        /**\n\t         * Gets the forms in this list\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"forms\",\n\t        get: function get() {\n\t            return new forms_1.Forms(this);\n\t        }\n\t        /**\n\t         * Gets the default view of this list\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"defaultView\",\n\t        get: function get() {\n\t            return new queryable_1.QueryableInstance(this, \"DefaultView\");\n\t        }\n\t        /**\n\t         * Get all custom actions on a site collection\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"userCustomActions\",\n\t        get: function get() {\n\t            return new usercustomactions_1.UserCustomActions(this);\n\t        }\n\t        /**\n\t         * Gets the effective base permissions of this list\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"effectiveBasePermissions\",\n\t        get: function get() {\n\t            return new queryable_1.Queryable(this, \"EffectiveBasePermissions\");\n\t        }\n\t        /**\n\t         * Gets the event receivers attached to this list\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"eventReceivers\",\n\t        get: function get() {\n\t            return new queryable_1.QueryableCollection(this, \"EventReceivers\");\n\t        }\n\t        /**\n\t         * Gets the related fields of this list\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"relatedFields\",\n\t        get: function get() {\n\t            return new queryable_1.Queryable(this, \"getRelatedFields\");\n\t        }\n\t        /**\n\t         * Gets the IRM settings for this list\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"informationRightsManagementSettings\",\n\t        get: function get() {\n\t            return new queryable_1.Queryable(this, \"InformationRightsManagementSettings\");\n\t        }\n\t        /**\n\t         * Gets the webhook subscriptions of this list\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"subscriptions\",\n\t        get: function get() {\n\t            return new subscriptions_1.Subscriptions(this);\n\t        }\n\t    }]);\n\t\n\t    return List;\n\t}(queryablesecurable_1.QueryableSecurable);\n\t\n\texports.List = List;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar queryable_1 = __webpack_require__(8);\n\tvar queryablesecurable_1 = __webpack_require__(19);\n\tvar folders_1 = __webpack_require__(25);\n\tvar files_1 = __webpack_require__(26);\n\tvar contenttypes_1 = __webpack_require__(27);\n\tvar util_1 = __webpack_require__(1);\n\tvar odata_1 = __webpack_require__(11);\n\tvar attachmentfiles_1 = __webpack_require__(28);\n\tvar lists_1 = __webpack_require__(23);\n\t/**\n\t * Describes a collection of Item objects\n\t *\n\t */\n\t\n\tvar Items = function (_queryable_1$Queryabl) {\n\t    _inherits(Items, _queryable_1$Queryabl);\n\t\n\t    /**\n\t     * Creates a new instance of the Items class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n\t     */\n\t    function Items(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"items\";\n\t\n\t        _classCallCheck(this, Items);\n\t\n\t        return _possibleConstructorReturn(this, (Items.__proto__ || Object.getPrototypeOf(Items)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Gets an Item by id\n\t     *\n\t     * @param id The integer id of the item to retrieve\n\t     */\n\t\n\t\n\t    _createClass(Items, [{\n\t        key: \"getById\",\n\t        value: function getById(id) {\n\t            var i = new Item(this);\n\t            i.concat(\"(\" + id + \")\");\n\t            return i;\n\t        }\n\t        /**\n\t         * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\n\t         *\n\t         * @param skip The starting id where the page should start, use with top to specify pages\n\t         */\n\t\n\t    }, {\n\t        key: \"skip\",\n\t        value: function skip(_skip) {\n\t            this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + _skip));\n\t            return this;\n\t        }\n\t        /**\n\t         * Gets a collection designed to aid in paging through data\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"getPaged\",\n\t        value: function getPaged() {\n\t            return this.getAs(new PagedItemCollectionParser());\n\t        }\n\t        /**\n\t         * Adds a new item to the collection\n\t         *\n\t         * @param properties The new items's properties\n\t         */\n\t\n\t    }, {\n\t        key: \"add\",\n\t        value: function add() {\n\t            var _this2 = this;\n\t\n\t            var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t            var listItemEntityTypeFullName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\t\n\t            var doAdd = function doAdd(listItemEntityType) {\n\t                var postBody = JSON.stringify(util_1.Util.extend({\n\t                    \"__metadata\": { \"type\": listItemEntityType }\n\t                }, properties));\n\t                return _this2.postAs({ body: postBody }).then(function (data) {\n\t                    return {\n\t                        data: data,\n\t                        item: _this2.getById(data.Id)\n\t                    };\n\t                });\n\t            };\n\t            if (!listItemEntityTypeFullName) {\n\t                var _ret = function () {\n\t                    var parentList = _this2.getParent(lists_1.List);\n\t                    var removeDependency = _this2.addBatchDependency();\n\t                    return {\n\t                        v: parentList.getListItemEntityTypeFullName().then(function (n) {\n\t                            var promise = doAdd(n);\n\t                            removeDependency();\n\t                            return promise;\n\t                        })\n\t                    };\n\t                }();\n\t\n\t                if ((typeof _ret === \"undefined\" ? \"undefined\" : _typeof(_ret)) === \"object\") return _ret.v;\n\t            } else {\n\t                return doAdd(listItemEntityTypeFullName);\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Items;\n\t}(queryable_1.QueryableCollection);\n\t\n\texports.Items = Items;\n\t/**\n\t * Descrines a single Item instance\n\t *\n\t */\n\t\n\tvar Item = function (_queryablesecurable_) {\n\t    _inherits(Item, _queryablesecurable_);\n\t\n\t    /**\n\t     * Creates a new instance of the Items class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n\t     */\n\t    function Item(baseUrl, path) {\n\t        _classCallCheck(this, Item);\n\t\n\t        return _possibleConstructorReturn(this, (Item.__proto__ || Object.getPrototypeOf(Item)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Gets the set of attachments for this item\n\t     *\n\t     */\n\t\n\t\n\t    _createClass(Item, [{\n\t        key: \"update\",\n\t\n\t        /**\n\t         * Updates this list intance with the supplied properties\n\t         *\n\t         * @param properties A plain object hash of values to update for the list\n\t         * @param eTag Value used in the IF-Match header, by default \"*\"\n\t         */\n\t        value: function update(properties) {\n\t            var _this4 = this;\n\t\n\t            var eTag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"*\";\n\t\n\t            return new Promise(function (resolve, reject) {\n\t                var removeDependency = _this4.addBatchDependency();\n\t                var parentList = _this4.getParent(queryable_1.QueryableInstance, _this4.parentUrl.substr(0, _this4.parentUrl.lastIndexOf(\"/\")));\n\t                parentList.select(\"ListItemEntityTypeFullName\").getAs().then(function (d) {\n\t                    var postBody = JSON.stringify(util_1.Util.extend({\n\t                        \"__metadata\": { \"type\": d.ListItemEntityTypeFullName }\n\t                    }, properties));\n\t                    _this4.post({\n\t                        body: postBody,\n\t                        headers: {\n\t                            \"IF-Match\": eTag,\n\t                            \"X-HTTP-Method\": \"MERGE\"\n\t                        }\n\t                    }, new ItemUpdatedParser()).then(function (data) {\n\t                        removeDependency();\n\t                        resolve({\n\t                            data: data,\n\t                            item: _this4\n\t                        });\n\t                    });\n\t                }).catch(function (e) {\n\t                    return reject(e);\n\t                });\n\t            });\n\t        }\n\t        /**\n\t         * Delete this item\n\t         *\n\t         * @param eTag Value used in the IF-Match header, by default \"*\"\n\t         */\n\t\n\t    }, {\n\t        key: \"delete\",\n\t        value: function _delete() {\n\t            var eTag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"*\";\n\t\n\t            return this.post({\n\t                headers: {\n\t                    \"IF-Match\": eTag,\n\t                    \"X-HTTP-Method\": \"DELETE\"\n\t                }\n\t            });\n\t        }\n\t        /**\n\t         * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n\t         */\n\t\n\t    }, {\n\t        key: \"recycle\",\n\t        value: function recycle() {\n\t            var i = new Item(this, \"recycle\");\n\t            return i.post();\n\t        }\n\t        /**\n\t         * Gets a string representation of the full URL to the WOPI frame.\n\t         * If there is no associated WOPI application, or no associated action, an empty string is returned.\n\t         *\n\t         * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\n\t         */\n\t\n\t    }, {\n\t        key: \"getWopiFrameUrl\",\n\t        value: function getWopiFrameUrl() {\n\t            var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\t\n\t            var i = new Item(this, \"getWOPIFrameUrl(@action)\");\n\t            i._query.add(\"@action\", action);\n\t            return i.post().then(function (data) {\n\t                return data.GetWOPIFrameUrl;\n\t            });\n\t        }\n\t        /**\n\t         * Validates and sets the values of the specified collection of fields for the list item.\n\t         *\n\t         * @param formValues The fields to change and their new values.\n\t         * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\n\t         */\n\t        /* tslint:disable max-line-length */\n\t\n\t    }, {\n\t        key: \"validateUpdateListItem\",\n\t        value: function validateUpdateListItem(formValues) {\n\t            var newDocumentUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\t\n\t            var postBody = JSON.stringify({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate });\n\t            var item = new Item(this, \"validateupdatelistitem\");\n\t            return item.post({ body: postBody });\n\t        }\n\t    }, {\n\t        key: \"attachmentFiles\",\n\t        get: function get() {\n\t            return new attachmentfiles_1.AttachmentFiles(this);\n\t        }\n\t        /**\n\t         * Gets the content type for this item\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"contentType\",\n\t        get: function get() {\n\t            return new contenttypes_1.ContentType(this, \"ContentType\");\n\t        }\n\t        /**\n\t         * Gets the effective base permissions for the item\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"effectiveBasePermissions\",\n\t        get: function get() {\n\t            return new queryable_1.Queryable(this, \"EffectiveBasePermissions\");\n\t        }\n\t        /**\n\t         * Gets the effective base permissions for the item in a UI context\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"effectiveBasePermissionsForUI\",\n\t        get: function get() {\n\t            return new queryable_1.Queryable(this, \"EffectiveBasePermissionsForUI\");\n\t        }\n\t        /**\n\t         * Gets the field values for this list item in their HTML representation\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"fieldValuesAsHTML\",\n\t        get: function get() {\n\t            return new queryable_1.QueryableInstance(this, \"FieldValuesAsHTML\");\n\t        }\n\t        /**\n\t         * Gets the field values for this list item in their text representation\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"fieldValuesAsText\",\n\t        get: function get() {\n\t            return new queryable_1.QueryableInstance(this, \"FieldValuesAsText\");\n\t        }\n\t        /**\n\t         * Gets the field values for this list item for use in editing controls\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"fieldValuesForEdit\",\n\t        get: function get() {\n\t            return new queryable_1.QueryableInstance(this, \"FieldValuesForEdit\");\n\t        }\n\t        /**\n\t         * Gets the folder associated with this list item (if this item represents a folder)\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"folder\",\n\t        get: function get() {\n\t            return new folders_1.Folder(this, \"folder\");\n\t        }\n\t        /**\n\t         * Gets the folder associated with this list item (if this item represents a folder)\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"file\",\n\t        get: function get() {\n\t            return new files_1.File(this, \"file\");\n\t        }\n\t    }]);\n\t\n\t    return Item;\n\t}(queryablesecurable_1.QueryableSecurable);\n\t\n\texports.Item = Item;\n\t/**\n\t * Provides paging functionality for list items\n\t */\n\t\n\tvar PagedItemCollection = function () {\n\t    function PagedItemCollection(nextUrl, results) {\n\t        _classCallCheck(this, PagedItemCollection);\n\t\n\t        this.nextUrl = nextUrl;\n\t        this.results = results;\n\t    }\n\t    /**\n\t     * If true there are more results available in the set, otherwise there are not\n\t     */\n\t\n\t\n\t    _createClass(PagedItemCollection, [{\n\t        key: \"getNext\",\n\t\n\t        /**\n\t         * Gets the next set of results, or resolves to null if no results are available\n\t         */\n\t        value: function getNext() {\n\t            if (this.hasNext) {\n\t                var items = new Items(this.nextUrl, null);\n\t                return items.getPaged();\n\t            }\n\t            return new Promise(function (r) {\n\t                return r(null);\n\t            });\n\t        }\n\t    }, {\n\t        key: \"hasNext\",\n\t        get: function get() {\n\t            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\n\t        }\n\t    }]);\n\t\n\t    return PagedItemCollection;\n\t}();\n\t\n\texports.PagedItemCollection = PagedItemCollection;\n\t\n\tvar PagedItemCollectionParser = function (_odata_1$ODataParserB) {\n\t    _inherits(PagedItemCollectionParser, _odata_1$ODataParserB);\n\t\n\t    function PagedItemCollectionParser() {\n\t        _classCallCheck(this, PagedItemCollectionParser);\n\t\n\t        return _possibleConstructorReturn(this, (PagedItemCollectionParser.__proto__ || Object.getPrototypeOf(PagedItemCollectionParser)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(PagedItemCollectionParser, [{\n\t        key: \"parse\",\n\t        value: function parse(r) {\n\t            var _this6 = this;\n\t\n\t            return new Promise(function (resolve, reject) {\n\t                if (_this6.handleError(r, reject)) {\n\t                    r.json().then(function (json) {\n\t                        var nextUrl = json.hasOwnProperty(\"d\") && json.d.hasOwnProperty(\"__next\") ? json.d.__next : json[\"odata.nextLink\"];\n\t                        resolve(new PagedItemCollection(nextUrl, _this6.parseODataJSON(json)));\n\t                    });\n\t                }\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return PagedItemCollectionParser;\n\t}(odata_1.ODataParserBase);\n\t\n\tvar ItemUpdatedParser = function (_odata_1$ODataParserB2) {\n\t    _inherits(ItemUpdatedParser, _odata_1$ODataParserB2);\n\t\n\t    function ItemUpdatedParser() {\n\t        _classCallCheck(this, ItemUpdatedParser);\n\t\n\t        return _possibleConstructorReturn(this, (ItemUpdatedParser.__proto__ || Object.getPrototypeOf(ItemUpdatedParser)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(ItemUpdatedParser, [{\n\t        key: \"parse\",\n\t        value: function parse(r) {\n\t            var _this8 = this;\n\t\n\t            return new Promise(function (resolve, reject) {\n\t                if (_this8.handleError(r, reject)) {\n\t                    resolve({\n\t                        \"odata.etag\": r.headers.get(\"etag\")\n\t                    });\n\t                }\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return ItemUpdatedParser;\n\t}(odata_1.ODataParserBase);\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar queryable_1 = __webpack_require__(8);\n\tvar files_1 = __webpack_require__(26);\n\tvar items_1 = __webpack_require__(24);\n\t/**\n\t * Describes a collection of Folder objects\n\t *\n\t */\n\t\n\tvar Folders = function (_queryable_1$Queryabl) {\n\t    _inherits(Folders, _queryable_1$Queryabl);\n\t\n\t    /**\n\t     * Creates a new instance of the Folders class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n\t     */\n\t    function Folders(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"folders\";\n\t\n\t        _classCallCheck(this, Folders);\n\t\n\t        return _possibleConstructorReturn(this, (Folders.__proto__ || Object.getPrototypeOf(Folders)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Gets a folder by folder name\n\t     *\n\t     */\n\t\n\t\n\t    _createClass(Folders, [{\n\t        key: \"getByName\",\n\t        value: function getByName(name) {\n\t            var f = new Folder(this);\n\t            f.concat(\"('\" + name + \"')\");\n\t            return f;\n\t        }\n\t        /**\n\t         * Adds a new folder to the current folder (relative) or any folder (absolute)\n\t         *\n\t         * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\n\t         * @returns The new Folder and the raw response.\n\t         */\n\t\n\t    }, {\n\t        key: \"add\",\n\t        value: function add(url) {\n\t            var _this2 = this;\n\t\n\t            return new Folders(this, \"add('\" + url + \"')\").post().then(function (response) {\n\t                return {\n\t                    data: response,\n\t                    folder: _this2.getByName(url)\n\t                };\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Folders;\n\t}(queryable_1.QueryableCollection);\n\t\n\texports.Folders = Folders;\n\t/**\n\t * Describes a single Folder instance\n\t *\n\t */\n\t\n\tvar Folder = function (_queryable_1$Queryabl2) {\n\t    _inherits(Folder, _queryable_1$Queryabl2);\n\t\n\t    //\n\t    // TODO:\n\t    //      Properties (https://msdn.microsoft.com/en-us/library/office/dn450841.aspx#bk_FolderProperties)\n\t    //          UniqueContentTypeOrder (setter)\n\t    //          WelcomePage (setter)\n\t    //\n\t    /**\n\t     * Creates a new instance of the Folder class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n\t     * @param path Optional, if supplied will be appended to the supplied baseUrl\n\t     */\n\t    function Folder(baseUrl, path) {\n\t        _classCallCheck(this, Folder);\n\t\n\t        return _possibleConstructorReturn(this, (Folder.__proto__ || Object.getPrototypeOf(Folder)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Specifies the sequence in which content types are displayed.\n\t     *\n\t     */\n\t\n\t\n\t    _createClass(Folder, [{\n\t        key: \"delete\",\n\t\n\t        /**\n\t        * Delete this folder\n\t        *\n\t        * @param eTag Value used in the IF-Match header, by default \"*\"\n\t        */\n\t        value: function _delete() {\n\t            var eTag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"*\";\n\t\n\t            return new Folder(this).post({\n\t                headers: {\n\t                    \"IF-Match\": eTag,\n\t                    \"X-HTTP-Method\": \"DELETE\"\n\t                }\n\t            });\n\t        }\n\t        /**\n\t         * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n\t         */\n\t\n\t    }, {\n\t        key: \"recycle\",\n\t        value: function recycle() {\n\t            return new Folder(this, \"recycle\").post();\n\t        }\n\t    }, {\n\t        key: \"contentTypeOrder\",\n\t        get: function get() {\n\t            return new queryable_1.QueryableCollection(this, \"contentTypeOrder\");\n\t        }\n\t        /**\n\t         * Gets this folder's files\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"files\",\n\t        get: function get() {\n\t            return new files_1.Files(this);\n\t        }\n\t        /**\n\t         * Gets this folder's sub folders\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"folders\",\n\t        get: function get() {\n\t            return new Folders(this);\n\t        }\n\t        /**\n\t         * Gets this folder's list item\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"listItemAllFields\",\n\t        get: function get() {\n\t            return new items_1.Item(this, \"listItemAllFields\");\n\t        }\n\t        /**\n\t         * Gets the parent folder, if available\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"parentFolder\",\n\t        get: function get() {\n\t            return new Folder(this, \"parentFolder\");\n\t        }\n\t        /**\n\t         * Gets this folder's properties\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"properties\",\n\t        get: function get() {\n\t            return new queryable_1.QueryableInstance(this, \"properties\");\n\t        }\n\t        /**\n\t         * Gets this folder's server relative url\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"serverRelativeUrl\",\n\t        get: function get() {\n\t            return new queryable_1.Queryable(this, \"serverRelativeUrl\");\n\t        }\n\t        /**\n\t         * Gets a value that specifies the content type order.\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"uniqueContentTypeOrder\",\n\t        get: function get() {\n\t            return new queryable_1.QueryableCollection(this, \"uniqueContentTypeOrder\");\n\t        }\n\t    }]);\n\t\n\t    return Folder;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.Folder = Folder;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar queryable_1 = __webpack_require__(8);\n\tvar items_1 = __webpack_require__(24);\n\tvar odata_1 = __webpack_require__(11);\n\tvar util_1 = __webpack_require__(1);\n\tvar exceptions_1 = __webpack_require__(14);\n\t/**\n\t * Describes a collection of File objects\n\t *\n\t */\n\t\n\tvar Files = function (_queryable_1$Queryabl) {\n\t    _inherits(Files, _queryable_1$Queryabl);\n\t\n\t    /**\n\t     * Creates a new instance of the Files class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n\t     */\n\t    function Files(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"files\";\n\t\n\t        _classCallCheck(this, Files);\n\t\n\t        return _possibleConstructorReturn(this, (Files.__proto__ || Object.getPrototypeOf(Files)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Gets a File by filename\n\t     *\n\t     * @param name The name of the file, including extension.\n\t     */\n\t\n\t\n\t    _createClass(Files, [{\n\t        key: \"getByName\",\n\t        value: function getByName(name) {\n\t            var f = new File(this);\n\t            f.concat(\"('\" + name + \"')\");\n\t            return f;\n\t        }\n\t        /**\n\t         * Uploads a file.\n\t         *\n\t         * @param url The folder-relative url of the file.\n\t         * @param content The file contents blob.\n\t         * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n\t         * @returns The new File and the raw response.\n\t         */\n\t\n\t    }, {\n\t        key: \"add\",\n\t        value: function add(url, content) {\n\t            var _this2 = this;\n\t\n\t            var shouldOverWrite = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\t\n\t            return new Files(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\").post({\n\t                body: content\n\t            }).then(function (response) {\n\t                return {\n\t                    data: response,\n\t                    file: _this2.getByName(url)\n\t                };\n\t            });\n\t        }\n\t        /**\n\t         * Uploads a file.\n\t         *\n\t         * @param url The folder-relative url of the file.\n\t         * @param content The Blob file content to add\n\t         * @param progress A callback function which can be used to track the progress of the upload\n\t         * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n\t         * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n\t         * @returns The new File and the raw response.\n\t         */\n\t\n\t    }, {\n\t        key: \"addChunked\",\n\t        value: function addChunked(url, content, progress) {\n\t            var _this3 = this;\n\t\n\t            var shouldOverWrite = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\t            var chunkSize = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 10485760;\n\t\n\t            var adder = new Files(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\");\n\t            return adder.post().then(function () {\n\t                return _this3.getByName(url);\n\t            }).then(function (file) {\n\t                return file.setContentChunked(content, progress, chunkSize);\n\t            }).then(function (response) {\n\t                return {\n\t                    data: response,\n\t                    file: _this3.getByName(url)\n\t                };\n\t            });\n\t        }\n\t        /**\n\t         * Adds a ghosted file to an existing list or document library.\n\t         *\n\t         * @param fileUrl The server-relative url where you want to save the file.\n\t         * @param templateFileType The type of use to create the file.\n\t         * @returns The template file that was added and the raw response.\n\t         */\n\t\n\t    }, {\n\t        key: \"addTemplateFile\",\n\t        value: function addTemplateFile(fileUrl, templateFileType) {\n\t            var _this4 = this;\n\t\n\t            return new Files(this, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\").post().then(function (response) {\n\t                return {\n\t                    data: response,\n\t                    file: _this4.getByName(fileUrl)\n\t                };\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Files;\n\t}(queryable_1.QueryableCollection);\n\t\n\texports.Files = Files;\n\t/**\n\t * Describes a single File instance\n\t *\n\t */\n\t\n\tvar File = function (_queryable_1$Queryabl2) {\n\t    _inherits(File, _queryable_1$Queryabl2);\n\t\n\t    /**\n\t     * Creates a new instance of the File class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n\t     * @param path Optional, if supplied will be appended to the supplied baseUrl\n\t     */\n\t    function File(baseUrl, path) {\n\t        _classCallCheck(this, File);\n\t\n\t        return _possibleConstructorReturn(this, (File.__proto__ || Object.getPrototypeOf(File)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Gets a value that specifies the list item field values for the list item corresponding to the file.\n\t     *\n\t     */\n\t\n\t\n\t    _createClass(File, [{\n\t        key: \"approve\",\n\t\n\t        /**\n\t         * Approves the file submitted for content approval with the specified comment.\n\t         * Only documents in lists that are enabled for content approval can be approved.\n\t         *\n\t         * @param comment The comment for the approval.\n\t         */\n\t        value: function approve(comment) {\n\t            return new File(this, \"approve(comment='\" + comment + \"')\").post();\n\t        }\n\t        /**\n\t         * Stops the chunk upload session without saving the uploaded data.\n\t         * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\n\t         * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\n\t         * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n\t         * This method is currently available only on Office 365.\n\t         *\n\t         * @param uploadId The unique identifier of the upload session.\n\t         */\n\t\n\t    }, {\n\t        key: \"cancelUpload\",\n\t        value: function cancelUpload(uploadId) {\n\t            return new File(this, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\").post();\n\t        }\n\t        /**\n\t         * Checks the file in to a document library based on the check-in type.\n\t         *\n\t         * @param comment A comment for the check-in. Its length must be <= 1023.\n\t         * @param checkinType The check-in type for the file.\n\t         */\n\t\n\t    }, {\n\t        key: \"checkin\",\n\t        value: function checkin() {\n\t            var comment = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\t            var checkinType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CheckinType.Major;\n\t\n\t            // TODO: Enforce comment length <= 1023\n\t            return new File(this, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").post();\n\t        }\n\t        /**\n\t         * Checks out the file from a document library.\n\t         */\n\t\n\t    }, {\n\t        key: \"checkout\",\n\t        value: function checkout() {\n\t            return new File(this, \"checkout\").post();\n\t        }\n\t        /**\n\t         * Copies the file to the destination url.\n\t         *\n\t         * @param url The absolute url or server relative url of the destination file path to copy to.\n\t         * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\n\t         */\n\t\n\t    }, {\n\t        key: \"copyTo\",\n\t        value: function copyTo(url) {\n\t            var shouldOverWrite = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\t\n\t            return new File(this, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").post();\n\t        }\n\t        /**\n\t         * Delete this file.\n\t         *\n\t         * @param eTag Value used in the IF-Match header, by default \"*\"\n\t         */\n\t\n\t    }, {\n\t        key: \"delete\",\n\t        value: function _delete() {\n\t            var eTag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"*\";\n\t\n\t            return new File(this).post({\n\t                headers: {\n\t                    \"IF-Match\": eTag,\n\t                    \"X-HTTP-Method\": \"DELETE\"\n\t                }\n\t            });\n\t        }\n\t        /**\n\t         * Denies approval for a file that was submitted for content approval.\n\t         * Only documents in lists that are enabled for content approval can be denied.\n\t         *\n\t         * @param comment The comment for the denial.\n\t         */\n\t\n\t    }, {\n\t        key: \"deny\",\n\t        value: function deny() {\n\t            var comment = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\t\n\t            return new File(this, \"deny(comment='\" + comment + \"')\").post();\n\t        }\n\t        /**\n\t         * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\n\t         * An exception is thrown if the file is not an ASPX page.\n\t         *\n\t         * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\n\t         */\n\t\n\t    }, {\n\t        key: \"getLimitedWebPartManager\",\n\t        value: function getLimitedWebPartManager() {\n\t            var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : WebPartsPersonalizationScope.User;\n\t\n\t            return new queryable_1.Queryable(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\n\t        }\n\t        /**\n\t         * Moves the file to the specified destination url.\n\t         *\n\t         * @param url The absolute url or server relative url of the destination file path to move to.\n\t         * @param moveOperations The bitwise MoveOperations value for how to move the file.\n\t         */\n\t\n\t    }, {\n\t        key: \"moveTo\",\n\t        value: function moveTo(url) {\n\t            var moveOperations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : MoveOperations.Overwrite;\n\t\n\t            return new File(this, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").post();\n\t        }\n\t        /**\n\t         * Submits the file for content approval with the specified comment.\n\t         *\n\t         * @param comment The comment for the published file. Its length must be <= 1023.\n\t         */\n\t\n\t    }, {\n\t        key: \"publish\",\n\t        value: function publish() {\n\t            var comment = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\t\n\t            return new File(this, \"publish(comment='\" + comment + \"')\").post();\n\t        }\n\t        /**\n\t         * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n\t         *\n\t         * @returns The GUID of the recycled file.\n\t         */\n\t\n\t    }, {\n\t        key: \"recycle\",\n\t        value: function recycle() {\n\t            return new File(this, \"recycle\").post();\n\t        }\n\t        /**\n\t         * Reverts an existing checkout for the file.\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"undoCheckout\",\n\t        value: function undoCheckout() {\n\t            return new File(this, \"undoCheckout\").post();\n\t        }\n\t        /**\n\t         * Removes the file from content approval or unpublish a major version.\n\t         *\n\t         * @param comment The comment for the unpublish operation. Its length must be <= 1023.\n\t         */\n\t\n\t    }, {\n\t        key: \"unpublish\",\n\t        value: function unpublish() {\n\t            var comment = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\t\n\t            if (comment.length > 1023) {\n\t                throw new exceptions_1.MaxCommentLengthException();\n\t            }\n\t            return new File(this, \"unpublish(comment='\" + comment + \"')\").post();\n\t        }\n\t        /**\n\t         * Gets the contents of the file as text\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"getText\",\n\t        value: function getText() {\n\t            return new File(this, \"$value\").get(new odata_1.TextFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n\t        }\n\t        /**\n\t         * Gets the contents of the file as a blob, does not work in Node.js\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"getBlob\",\n\t        value: function getBlob() {\n\t            return new File(this, \"$value\").get(new odata_1.BlobFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n\t        }\n\t        /**\n\t         * Gets the contents of a file as an ArrayBuffer, works in Node.js\n\t         */\n\t\n\t    }, {\n\t        key: \"getBuffer\",\n\t        value: function getBuffer() {\n\t            return new File(this, \"$value\").get(new odata_1.BufferFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n\t        }\n\t        /**\n\t         * Gets the contents of a file as an ArrayBuffer, works in Node.js\n\t         */\n\t\n\t    }, {\n\t        key: \"getJSON\",\n\t        value: function getJSON() {\n\t            return new File(this, \"$value\").get(new odata_1.JSONFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n\t        }\n\t        /**\n\t         * Sets the content of a file, for large files use setContentChunked\n\t         *\n\t         * @param content The file content\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"setContent\",\n\t        value: function setContent(content) {\n\t            var _this6 = this;\n\t\n\t            var setter = new File(this, \"$value\");\n\t            return setter.post({\n\t                body: content,\n\t                headers: {\n\t                    \"X-HTTP-Method\": \"PUT\"\n\t                }\n\t            }).then(function (_) {\n\t                return new File(_this6);\n\t            });\n\t        }\n\t        /**\n\t         * Sets the contents of a file using a chunked upload approach\n\t         *\n\t         * @param file The file to upload\n\t         * @param progress A callback function which can be used to track the progress of the upload\n\t         * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n\t         */\n\t\n\t    }, {\n\t        key: \"setContentChunked\",\n\t        value: function setContentChunked(file, progress) {\n\t            var chunkSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10485760;\n\t\n\t            if (typeof progress === \"undefined\") {\n\t                progress = function progress() {\n\t                    return null;\n\t                };\n\t            }\n\t            var self = this;\n\t            var fileSize = file.size;\n\t            var blockCount = parseInt((file.size / chunkSize).toString(), 10) + (file.size % chunkSize === 0 ? 1 : 0);\n\t            console.log(\"blockCount: \" + blockCount);\n\t            var uploadId = util_1.Util.getGUID();\n\t            // start the chain with the first fragment\n\t            progress({ blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\n\t            var chain = self.startUpload(uploadId, file.slice(0, chunkSize));\n\t            // skip the first and last blocks\n\t\n\t            var _loop = function _loop(i) {\n\t                chain = chain.then(function (pointer) {\n\t                    progress({ blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\n\t                    return self.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\n\t                });\n\t            };\n\t\n\t            for (var i = 2; i < blockCount; i++) {\n\t                _loop(i);\n\t            }\n\t            return chain.then(function (pointer) {\n\t                progress({ blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\n\t                return self.finishUpload(uploadId, pointer, file.slice(pointer));\n\t            }).then(function (_) {\n\t                return self;\n\t            });\n\t        }\n\t        /**\n\t         * Starts a new chunk upload session and uploads the first fragment.\n\t         * The current file content is not changed when this method completes.\n\t         * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\n\t         * The upload session ends either when you use the CancelUpload method or when you successfully\n\t         * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\n\t         * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\n\t         * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\n\t         * This method is currently available only on Office 365.\n\t         *\n\t         * @param uploadId The unique identifier of the upload session.\n\t         * @param fragment The file contents.\n\t         * @returns The size of the total uploaded data in bytes.\n\t         */\n\t\n\t    }, {\n\t        key: \"startUpload\",\n\t        value: function startUpload(uploadId, fragment) {\n\t            return new File(this, \"startUpload(uploadId=guid'\" + uploadId + \"')\").postAs({ body: fragment }).then(function (n) {\n\t                return parseFloat(n);\n\t            });\n\t        }\n\t        /**\n\t         * Continues the chunk upload session with an additional fragment.\n\t         * The current file content is not changed.\n\t         * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n\t         * This method is currently available only on Office 365.\n\t         *\n\t         * @param uploadId The unique identifier of the upload session.\n\t         * @param fileOffset The size of the offset into the file where the fragment starts.\n\t         * @param fragment The file contents.\n\t         * @returns The size of the total uploaded data in bytes.\n\t         */\n\t\n\t    }, {\n\t        key: \"continueUpload\",\n\t        value: function continueUpload(uploadId, fileOffset, fragment) {\n\t            return new File(this, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\").postAs({ body: fragment }).then(function (n) {\n\t                return parseFloat(n);\n\t            });\n\t        }\n\t        /**\n\t         * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\n\t         * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n\t         * This method is currently available only on Office 365.\n\t         *\n\t         * @param uploadId The unique identifier of the upload session.\n\t         * @param fileOffset The size of the offset into the file where the fragment starts.\n\t         * @param fragment The file contents.\n\t         * @returns The newly uploaded file.\n\t         */\n\t\n\t    }, {\n\t        key: \"finishUpload\",\n\t        value: function finishUpload(uploadId, fileOffset, fragment) {\n\t            return new File(this, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\").postAs({ body: fragment }).then(function (response) {\n\t                return {\n\t                    data: response,\n\t                    file: new File(response.ServerRelativeUrl)\n\t                };\n\t            });\n\t        }\n\t    }, {\n\t        key: \"listItemAllFields\",\n\t        get: function get() {\n\t            return new items_1.Item(this, \"listItemAllFields\");\n\t        }\n\t        /**\n\t         * Gets a collection of versions\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"versions\",\n\t        get: function get() {\n\t            return new Versions(this);\n\t        }\n\t    }]);\n\t\n\t    return File;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.File = File;\n\t/**\n\t * Describes a collection of Version objects\n\t *\n\t */\n\t\n\tvar Versions = function (_queryable_1$Queryabl3) {\n\t    _inherits(Versions, _queryable_1$Queryabl3);\n\t\n\t    /**\n\t     * Creates a new instance of the File class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n\t     */\n\t    function Versions(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"versions\";\n\t\n\t        _classCallCheck(this, Versions);\n\t\n\t        return _possibleConstructorReturn(this, (Versions.__proto__ || Object.getPrototypeOf(Versions)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Gets a version by id\n\t     *\n\t     * @param versionId The id of the version to retrieve\n\t     */\n\t\n\t\n\t    _createClass(Versions, [{\n\t        key: \"getById\",\n\t        value: function getById(versionId) {\n\t            var v = new Version(this);\n\t            v.concat(\"(\" + versionId + \")\");\n\t            return v;\n\t        }\n\t        /**\n\t         * Deletes all the file version objects in the collection.\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"deleteAll\",\n\t        value: function deleteAll() {\n\t            return new Versions(this, \"deleteAll\").post();\n\t        }\n\t        /**\n\t         * Deletes the specified version of the file.\n\t         *\n\t         * @param versionId The ID of the file version to delete.\n\t         */\n\t\n\t    }, {\n\t        key: \"deleteById\",\n\t        value: function deleteById(versionId) {\n\t            return new Versions(this, \"deleteById(vid=\" + versionId + \")\").post();\n\t        }\n\t        /**\n\t         * Deletes the file version object with the specified version label.\n\t         *\n\t         * @param label The version label of the file version to delete, for example: 1.2\n\t         */\n\t\n\t    }, {\n\t        key: \"deleteByLabel\",\n\t        value: function deleteByLabel(label) {\n\t            return new Versions(this, \"deleteByLabel(versionlabel='\" + label + \"')\").post();\n\t        }\n\t        /**\n\t         * Creates a new file version from the file specified by the version label.\n\t         *\n\t         * @param label The version label of the file version to restore, for example: 1.2\n\t         */\n\t\n\t    }, {\n\t        key: \"restoreByLabel\",\n\t        value: function restoreByLabel(label) {\n\t            return new Versions(this, \"restoreByLabel(versionlabel='\" + label + \"')\").post();\n\t        }\n\t    }]);\n\t\n\t    return Versions;\n\t}(queryable_1.QueryableCollection);\n\t\n\texports.Versions = Versions;\n\t/**\n\t * Describes a single Version instance\n\t *\n\t */\n\t\n\tvar Version = function (_queryable_1$Queryabl4) {\n\t    _inherits(Version, _queryable_1$Queryabl4);\n\t\n\t    /**\n\t     * Creates a new instance of the Version class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n\t     * @param path Optional, if supplied will be appended to the supplied baseUrl\n\t     */\n\t    function Version(baseUrl, path) {\n\t        _classCallCheck(this, Version);\n\t\n\t        return _possibleConstructorReturn(this, (Version.__proto__ || Object.getPrototypeOf(Version)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t    * Delete a specific version of a file.\n\t    *\n\t    * @param eTag Value used in the IF-Match header, by default \"*\"\n\t    */\n\t\n\t\n\t    _createClass(Version, [{\n\t        key: \"delete\",\n\t        value: function _delete() {\n\t            var eTag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"*\";\n\t\n\t            return this.post({\n\t                headers: {\n\t                    \"IF-Match\": eTag,\n\t                    \"X-HTTP-Method\": \"DELETE\"\n\t                }\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Version;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.Version = Version;\n\tvar CheckinType;\n\t(function (CheckinType) {\n\t    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\n\t    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\n\t    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\n\t})(CheckinType = exports.CheckinType || (exports.CheckinType = {}));\n\tvar WebPartsPersonalizationScope;\n\t(function (WebPartsPersonalizationScope) {\n\t    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\n\t    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\n\t})(WebPartsPersonalizationScope = exports.WebPartsPersonalizationScope || (exports.WebPartsPersonalizationScope = {}));\n\tvar MoveOperations;\n\t(function (MoveOperations) {\n\t    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\n\t    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\n\t})(MoveOperations = exports.MoveOperations || (exports.MoveOperations = {}));\n\tvar TemplateFileType;\n\t(function (TemplateFileType) {\n\t    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\n\t    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\n\t    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\n\t})(TemplateFileType = exports.TemplateFileType || (exports.TemplateFileType = {}));\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar util_1 = __webpack_require__(1);\n\tvar queryable_1 = __webpack_require__(8);\n\t/**\n\t * Describes a collection of content types\n\t *\n\t */\n\t\n\tvar ContentTypes = function (_queryable_1$Queryabl) {\n\t    _inherits(ContentTypes, _queryable_1$Queryabl);\n\t\n\t    /**\n\t     * Creates a new instance of the ContentTypes class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this content types collection\n\t     */\n\t    function ContentTypes(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"contenttypes\";\n\t\n\t        _classCallCheck(this, ContentTypes);\n\t\n\t        return _possibleConstructorReturn(this, (ContentTypes.__proto__ || Object.getPrototypeOf(ContentTypes)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Gets a ContentType by content type id\n\t     */\n\t\n\t\n\t    _createClass(ContentTypes, [{\n\t        key: \"getById\",\n\t        value: function getById(id) {\n\t            var ct = new ContentType(this);\n\t            ct.concat(\"('\" + id + \"')\");\n\t            return ct;\n\t        }\n\t        /**\n\t         * Adds an existing contenttype to a content type collection\n\t         *\n\t         * @param contentTypeId in the following format, for example: 0x010102\n\t         */\n\t\n\t    }, {\n\t        key: \"addAvailableContentType\",\n\t        value: function addAvailableContentType(contentTypeId) {\n\t            var _this2 = this;\n\t\n\t            var postBody = JSON.stringify({\n\t                \"contentTypeId\": contentTypeId\n\t            });\n\t            return new ContentTypes(this, \"addAvailableContentType\").postAs({ body: postBody }).then(function (data) {\n\t                return {\n\t                    contentType: _this2.getById(data.id),\n\t                    data: data\n\t                };\n\t            });\n\t        }\n\t        /**\n\t         * Adds a new content type to the collection\n\t         *\n\t         * @param id The desired content type id for the new content type (also determines the parent content type)\n\t         * @param name The name of the content type\n\t         * @param description The description of the content type\n\t         * @param group The group in which to add the content type\n\t         * @param additionalSettings Any additional settings to provide when creating the content type\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"add\",\n\t        value: function add(id, name) {\n\t            var description = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n\t\n\t            var _this3 = this;\n\t\n\t            var group = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"Custom Content Types\";\n\t            var additionalSettings = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\t\n\t            var postBody = JSON.stringify(util_1.Util.extend({\n\t                \"__metadata\": { \"type\": \"SP.ContentType\" },\n\t                \"Id\": { \"StringValue\": id },\n\t                \"Name\": name,\n\t                \"Group\": group,\n\t                \"Description\": description\n\t            }, additionalSettings));\n\t            return this.post({ body: postBody }).then(function (data) {\n\t                return { contentType: _this3.getById(data.id), data: data };\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return ContentTypes;\n\t}(queryable_1.QueryableCollection);\n\t\n\texports.ContentTypes = ContentTypes;\n\t/**\n\t * Describes a single ContentType instance\n\t *\n\t */\n\t\n\tvar ContentType = function (_queryable_1$Queryabl2) {\n\t    _inherits(ContentType, _queryable_1$Queryabl2);\n\t\n\t    /**\n\t     * Creates a new instance of the ContentType class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this content type instance\n\t     */\n\t    function ContentType(baseUrl, path) {\n\t        _classCallCheck(this, ContentType);\n\t\n\t        return _possibleConstructorReturn(this, (ContentType.__proto__ || Object.getPrototypeOf(ContentType)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Gets the column (also known as field) references in the content type.\n\t    */\n\t\n\t\n\t    _createClass(ContentType, [{\n\t        key: \"fieldLinks\",\n\t        get: function get() {\n\t            return new FieldLinks(this);\n\t        }\n\t        /**\n\t         * Gets a value that specifies the collection of fields for the content type.\n\t         */\n\t\n\t    }, {\n\t        key: \"fields\",\n\t        get: function get() {\n\t            return new queryable_1.QueryableCollection(this, \"fields\");\n\t        }\n\t        /**\n\t         * Gets the parent content type of the content type.\n\t         */\n\t\n\t    }, {\n\t        key: \"parent\",\n\t        get: function get() {\n\t            return new ContentType(this, \"parent\");\n\t        }\n\t        /**\n\t         * Gets a value that specifies the collection of workflow associations for the content type.\n\t         */\n\t\n\t    }, {\n\t        key: \"workflowAssociations\",\n\t        get: function get() {\n\t            return new queryable_1.QueryableCollection(this, \"workflowAssociations\");\n\t        }\n\t    }]);\n\t\n\t    return ContentType;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.ContentType = ContentType;\n\t/**\n\t * Represents a collection of field link instances\n\t */\n\t\n\tvar FieldLinks = function (_queryable_1$Queryabl3) {\n\t    _inherits(FieldLinks, _queryable_1$Queryabl3);\n\t\n\t    /**\n\t     * Creates a new instance of the ContentType class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this content type instance\n\t     */\n\t    function FieldLinks(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"fieldlinks\";\n\t\n\t        _classCallCheck(this, FieldLinks);\n\t\n\t        return _possibleConstructorReturn(this, (FieldLinks.__proto__ || Object.getPrototypeOf(FieldLinks)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Gets a FieldLink by GUID id\n\t     *\n\t     * @param id The GUID id of the field link\n\t     */\n\t\n\t\n\t    _createClass(FieldLinks, [{\n\t        key: \"getById\",\n\t        value: function getById(id) {\n\t            var fl = new FieldLink(this);\n\t            fl.concat(\"(guid'\" + id + \"')\");\n\t            return fl;\n\t        }\n\t    }]);\n\t\n\t    return FieldLinks;\n\t}(queryable_1.QueryableCollection);\n\t\n\texports.FieldLinks = FieldLinks;\n\t/**\n\t * Represents a field link instance\n\t */\n\t\n\tvar FieldLink = function (_queryable_1$Queryabl4) {\n\t    _inherits(FieldLink, _queryable_1$Queryabl4);\n\t\n\t    /**\n\t     * Creates a new instance of the ContentType class\n\t    *\n\t    * @param baseUrl The url or Queryable which forms the parent of this content type instance\n\t    */\n\t    function FieldLink(baseUrl, path) {\n\t        _classCallCheck(this, FieldLink);\n\t\n\t        return _possibleConstructorReturn(this, (FieldLink.__proto__ || Object.getPrototypeOf(FieldLink)).call(this, baseUrl, path));\n\t    }\n\t\n\t    return FieldLink;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.FieldLink = FieldLink;\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar queryable_1 = __webpack_require__(8);\n\tvar odata_1 = __webpack_require__(11);\n\t/**\n\t * Describes a collection of Item objects\n\t *\n\t */\n\t\n\tvar AttachmentFiles = function (_queryable_1$Queryabl) {\n\t    _inherits(AttachmentFiles, _queryable_1$Queryabl);\n\t\n\t    /**\n\t     * Creates a new instance of the AttachmentFiles class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this attachments collection\n\t     */\n\t    function AttachmentFiles(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"AttachmentFiles\";\n\t\n\t        _classCallCheck(this, AttachmentFiles);\n\t\n\t        return _possibleConstructorReturn(this, (AttachmentFiles.__proto__ || Object.getPrototypeOf(AttachmentFiles)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Gets a Attachment File by filename\n\t     *\n\t     * @param name The name of the file, including extension.\n\t     */\n\t\n\t\n\t    _createClass(AttachmentFiles, [{\n\t        key: \"getByName\",\n\t        value: function getByName(name) {\n\t            var f = new AttachmentFile(this);\n\t            f.concat(\"('\" + name + \"')\");\n\t            return f;\n\t        }\n\t        /**\n\t         * Adds a new attachment to the collection\n\t         *\n\t         * @param name The name of the file, including extension.\n\t         * @param content The Base64 file content.\n\t         */\n\t\n\t    }, {\n\t        key: \"add\",\n\t        value: function add(name, content) {\n\t            var _this2 = this;\n\t\n\t            return new AttachmentFiles(this, \"add(FileName='\" + name + \"')\").post({\n\t                body: content\n\t            }).then(function (response) {\n\t                return {\n\t                    data: response,\n\t                    file: _this2.getByName(name)\n\t                };\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return AttachmentFiles;\n\t}(queryable_1.QueryableCollection);\n\t\n\texports.AttachmentFiles = AttachmentFiles;\n\t/**\n\t * Describes a single attachment file instance\n\t *\n\t */\n\t\n\tvar AttachmentFile = function (_queryable_1$Queryabl2) {\n\t    _inherits(AttachmentFile, _queryable_1$Queryabl2);\n\t\n\t    /**\n\t     * Creates a new instance of the AttachmentFile class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this attachment file\n\t     */\n\t    function AttachmentFile(baseUrl, path) {\n\t        _classCallCheck(this, AttachmentFile);\n\t\n\t        return _possibleConstructorReturn(this, (AttachmentFile.__proto__ || Object.getPrototypeOf(AttachmentFile)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Gets the contents of the file as text\n\t     *\n\t     */\n\t\n\t\n\t    _createClass(AttachmentFile, [{\n\t        key: \"getText\",\n\t        value: function getText() {\n\t            return new AttachmentFile(this, \"$value\").get(new odata_1.TextFileParser());\n\t        }\n\t        /**\n\t         * Gets the contents of the file as a blob, does not work in Node.js\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"getBlob\",\n\t        value: function getBlob() {\n\t            return new AttachmentFile(this, \"$value\").get(new odata_1.BlobFileParser());\n\t        }\n\t        /**\n\t         * Gets the contents of a file as an ArrayBuffer, works in Node.js\n\t         */\n\t\n\t    }, {\n\t        key: \"getBuffer\",\n\t        value: function getBuffer() {\n\t            return new AttachmentFile(this, \"$value\").get(new odata_1.BufferFileParser());\n\t        }\n\t        /**\n\t         * Gets the contents of a file as an ArrayBuffer, works in Node.js\n\t         */\n\t\n\t    }, {\n\t        key: \"getJSON\",\n\t        value: function getJSON() {\n\t            return new AttachmentFile(this, \"$value\").get(new odata_1.JSONFileParser());\n\t        }\n\t        /**\n\t         * Delete this attachment file\n\t         *\n\t         * @param eTag Value used in the IF-Match header, by default \"*\"\n\t         */\n\t\n\t    }, {\n\t        key: \"delete\",\n\t        value: function _delete() {\n\t            var eTag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"*\";\n\t\n\t            return this.post({\n\t                headers: {\n\t                    \"IF-Match\": eTag,\n\t                    \"X-HTTP-Method\": \"DELETE\"\n\t                }\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return AttachmentFile;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.AttachmentFile = AttachmentFile;\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar queryable_1 = __webpack_require__(8);\n\tvar util_1 = __webpack_require__(1);\n\t/**\n\t * Describes the views available in the current context\n\t *\n\t */\n\t\n\tvar Views = function (_queryable_1$Queryabl) {\n\t    _inherits(Views, _queryable_1$Queryabl);\n\t\n\t    /**\n\t     * Creates a new instance of the Views class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n\t     */\n\t    function Views(baseUrl) {\n\t        _classCallCheck(this, Views);\n\t\n\t        return _possibleConstructorReturn(this, (Views.__proto__ || Object.getPrototypeOf(Views)).call(this, baseUrl, \"views\"));\n\t    }\n\t    /**\n\t     * Gets a view by guid id\n\t     *\n\t     * @param id The GUID id of the view\n\t     */\n\t\n\t\n\t    _createClass(Views, [{\n\t        key: \"getById\",\n\t        value: function getById(id) {\n\t            var v = new View(this);\n\t            v.concat(\"('\" + id + \"')\");\n\t            return v;\n\t        }\n\t        /**\n\t         * Gets a view by title (case-sensitive)\n\t         *\n\t         * @param title The case-sensitive title of the view\n\t         */\n\t\n\t    }, {\n\t        key: \"getByTitle\",\n\t        value: function getByTitle(title) {\n\t            return new View(this, \"getByTitle('\" + title + \"')\");\n\t        }\n\t        /**\n\t         * Adds a new view to the collection\n\t         *\n\t         * @param title The new views's title\n\t         * @param personalView True if this is a personal view, otherwise false, default = false\n\t         * @param additionalSettings Will be passed as part of the view creation body\n\t         */\n\t        /*tslint:disable max-line-length */\n\t\n\t    }, {\n\t        key: \"add\",\n\t        value: function add(title) {\n\t            var _this2 = this;\n\t\n\t            var personalView = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\t            var additionalSettings = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t            var postBody = JSON.stringify(util_1.Util.extend({\n\t                \"__metadata\": { \"type\": \"SP.View\" },\n\t                \"Title\": title,\n\t                \"PersonalView\": personalView\n\t            }, additionalSettings));\n\t            return this.postAs({ body: postBody }).then(function (data) {\n\t                return {\n\t                    data: data,\n\t                    view: _this2.getById(data.Id)\n\t                };\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Views;\n\t}(queryable_1.QueryableCollection);\n\t\n\texports.Views = Views;\n\t/**\n\t * Describes a single View instance\n\t *\n\t */\n\t\n\tvar View = function (_queryable_1$Queryabl2) {\n\t    _inherits(View, _queryable_1$Queryabl2);\n\t\n\t    /**\n\t     * Creates a new instance of the View class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n\t     */\n\t    function View(baseUrl, path) {\n\t        _classCallCheck(this, View);\n\t\n\t        return _possibleConstructorReturn(this, (View.__proto__ || Object.getPrototypeOf(View)).call(this, baseUrl, path));\n\t    }\n\t\n\t    _createClass(View, [{\n\t        key: \"update\",\n\t\n\t        /**\n\t         * Updates this view intance with the supplied properties\n\t         *\n\t         * @param properties A plain object hash of values to update for the view\n\t         */\n\t        value: function update(properties) {\n\t            var _this4 = this;\n\t\n\t            var postBody = JSON.stringify(util_1.Util.extend({\n\t                \"__metadata\": { \"type\": \"SP.View\" }\n\t            }, properties));\n\t            return this.post({\n\t                body: postBody,\n\t                headers: {\n\t                    \"X-HTTP-Method\": \"MERGE\"\n\t                }\n\t            }).then(function (data) {\n\t                return {\n\t                    data: data,\n\t                    view: _this4\n\t                };\n\t            });\n\t        }\n\t        /**\n\t         * Delete this view\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"delete\",\n\t        value: function _delete() {\n\t            return this.post({\n\t                headers: {\n\t                    \"X-HTTP-Method\": \"DELETE\"\n\t                }\n\t            });\n\t        }\n\t        /**\n\t         * Returns the list view as HTML.\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"renderAsHtml\",\n\t        value: function renderAsHtml() {\n\t            var q = new queryable_1.Queryable(this, \"renderashtml\");\n\t            return q.get();\n\t        }\n\t    }, {\n\t        key: \"fields\",\n\t        get: function get() {\n\t            return new ViewFields(this);\n\t        }\n\t    }]);\n\t\n\t    return View;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.View = View;\n\t\n\tvar ViewFields = function (_queryable_1$Queryabl3) {\n\t    _inherits(ViewFields, _queryable_1$Queryabl3);\n\t\n\t    function ViewFields(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"viewfields\";\n\t\n\t        _classCallCheck(this, ViewFields);\n\t\n\t        return _possibleConstructorReturn(this, (ViewFields.__proto__ || Object.getPrototypeOf(ViewFields)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Gets a value that specifies the XML schema that represents the collection.\n\t     */\n\t\n\t\n\t    _createClass(ViewFields, [{\n\t        key: \"getSchemaXml\",\n\t        value: function getSchemaXml() {\n\t            var q = new queryable_1.Queryable(this, \"schemaxml\");\n\t            return q.get();\n\t        }\n\t        /**\n\t         * Adds the field with the specified field internal name or display name to the collection.\n\t         *\n\t         * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\n\t         */\n\t\n\t    }, {\n\t        key: \"add\",\n\t        value: function add(fieldTitleOrInternalName) {\n\t            var q = new ViewFields(this, \"addviewfield('\" + fieldTitleOrInternalName + \"')\");\n\t            return q.post();\n\t        }\n\t        /**\n\t         * Moves the field with the specified field internal name to the specified position in the collection.\n\t         *\n\t         * @param fieldInternalName The case-sensitive internal name of the field to move.\n\t         * @param index The zero-based index of the new position for the field.\n\t         */\n\t\n\t    }, {\n\t        key: \"move\",\n\t        value: function move(fieldInternalName, index) {\n\t            var q = new ViewFields(this, \"moveviewfieldto\");\n\t            var postBody = JSON.stringify({ \"field\": fieldInternalName, \"index\": index });\n\t            return q.post({ body: postBody });\n\t        }\n\t        /**\n\t         * Removes all the fields from the collection.\n\t         */\n\t\n\t    }, {\n\t        key: \"removeAll\",\n\t        value: function removeAll() {\n\t            var q = new ViewFields(this, \"removeallviewfields\");\n\t            return q.post();\n\t        }\n\t        /**\n\t         * Removes the field with the specified field internal name from the collection.\n\t         *\n\t         * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\n\t         */\n\t\n\t    }, {\n\t        key: \"remove\",\n\t        value: function remove(fieldInternalName) {\n\t            var q = new ViewFields(this, \"removeviewfield('\" + fieldInternalName + \"')\");\n\t            return q.post();\n\t        }\n\t    }]);\n\t\n\t    return ViewFields;\n\t}(queryable_1.QueryableCollection);\n\t\n\texports.ViewFields = ViewFields;\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar queryable_1 = __webpack_require__(8);\n\tvar util_1 = __webpack_require__(1);\n\tvar Types = __webpack_require__(31);\n\t/**\n\t * Describes a collection of Field objects\n\t *\n\t */\n\t\n\tvar Fields = function (_queryable_1$Queryabl) {\n\t    _inherits(Fields, _queryable_1$Queryabl);\n\t\n\t    /**\n\t     * Creates a new instance of the Fields class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n\t     */\n\t    function Fields(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"fields\";\n\t\n\t        _classCallCheck(this, Fields);\n\t\n\t        return _possibleConstructorReturn(this, (Fields.__proto__ || Object.getPrototypeOf(Fields)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Gets a field from the collection by title\n\t     *\n\t     * @param title The case-sensitive title of the field\n\t     */\n\t\n\t\n\t    _createClass(Fields, [{\n\t        key: \"getByTitle\",\n\t        value: function getByTitle(title) {\n\t            return new Field(this, \"getByTitle('\" + title + \"')\");\n\t        }\n\t        /**\n\t         * Gets a field from the collection by using internal name or title\n\t         *\n\t         * @param name The case-sensitive internal name or title of the field\n\t         */\n\t\n\t    }, {\n\t        key: \"getByInternalNameOrTitle\",\n\t        value: function getByInternalNameOrTitle(name) {\n\t            return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\n\t        }\n\t        /**\n\t         * Gets a list from the collection by guid id\n\t         *\n\t         * @param title The Id of the list\n\t         */\n\t\n\t    }, {\n\t        key: \"getById\",\n\t        value: function getById(id) {\n\t            var f = new Field(this);\n\t            f.concat(\"('\" + id + \"')\");\n\t            return f;\n\t        }\n\t        /**\n\t         * Creates a field based on the specified schema\n\t         */\n\t\n\t    }, {\n\t        key: \"createFieldAsXml\",\n\t        value: function createFieldAsXml(xml) {\n\t            var _this2 = this;\n\t\n\t            var info = void 0;\n\t            if (typeof xml === \"string\") {\n\t                info = { SchemaXml: xml };\n\t            } else {\n\t                info = xml;\n\t            }\n\t            var postBody = JSON.stringify({\n\t                \"parameters\": util_1.Util.extend({\n\t                    \"__metadata\": {\n\t                        \"type\": \"SP.XmlSchemaFieldCreationInformation\"\n\t                    }\n\t                }, info)\n\t            });\n\t            var q = new Fields(this, \"createfieldasxml\");\n\t            return q.postAs({ body: postBody }).then(function (data) {\n\t                return {\n\t                    data: data,\n\t                    field: _this2.getById(data.Id)\n\t                };\n\t            });\n\t        }\n\t        /**\n\t         * Adds a new list to the collection\n\t         *\n\t         * @param title The new field's title\n\t         * @param fieldType The new field's type (ex: SP.FieldText)\n\t         * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n\t         */\n\t\n\t    }, {\n\t        key: \"add\",\n\t        value: function add(title, fieldType) {\n\t            var _this3 = this;\n\t\n\t            var properties = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t            var postBody = JSON.stringify(util_1.Util.extend({\n\t                \"__metadata\": { \"type\": fieldType },\n\t                \"Title\": title\n\t            }, properties));\n\t            return this.postAs({ body: postBody }).then(function (data) {\n\t                return {\n\t                    data: data,\n\t                    field: _this3.getById(data.Id)\n\t                };\n\t            });\n\t        }\n\t        /**\n\t         * Adds a new SP.FieldText to the collection\n\t         *\n\t         * @param title The field title\n\t         * @param maxLength The maximum number of characters allowed in the value of the field.\n\t         * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n\t         */\n\t\n\t    }, {\n\t        key: \"addText\",\n\t        value: function addText(title) {\n\t            var maxLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 255;\n\t            var properties = arguments[2];\n\t\n\t            var props = {\n\t                FieldTypeKind: 2,\n\t                MaxLength: maxLength\n\t            };\n\t            return this.add(title, \"SP.FieldText\", util_1.Util.extend(props, properties));\n\t        }\n\t        /**\n\t         * Adds a new SP.FieldCalculated to the collection\n\t         *\n\t         * @param title The field title.\n\t         * @param formula The formula for the field.\n\t         * @param dateFormat The date and time format that is displayed in the field.\n\t         * @param outputType Specifies the output format for the field. Represents a FieldType value.\n\t         * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n\t         */\n\t\n\t    }, {\n\t        key: \"addCalculated\",\n\t        value: function addCalculated(title, formula, dateFormat) {\n\t            var outputType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Types.FieldTypes.Text;\n\t            var properties = arguments[4];\n\t\n\t            var props = {\n\t                DateFormat: dateFormat,\n\t                FieldTypeKind: 17,\n\t                Formula: formula,\n\t                OutputType: outputType\n\t            };\n\t            return this.add(title, \"SP.FieldCalculated\", util_1.Util.extend(props, properties));\n\t        }\n\t        /**\n\t         * Adds a new SP.FieldDateTime to the collection\n\t         *\n\t         * @param title The field title\n\t         * @param displayFormat The format of the date and time that is displayed in the field.\n\t         * @param calendarType Specifies the calendar type of the field.\n\t         * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n\t         */\n\t\n\t    }, {\n\t        key: \"addDateTime\",\n\t        value: function addDateTime(title) {\n\t            var displayFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Types.DateTimeFieldFormatType.DateOnly;\n\t            var calendarType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Types.CalendarType.Gregorian;\n\t            var friendlyDisplayFormat = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\t            var properties = arguments[4];\n\t\n\t            var props = {\n\t                DateTimeCalendarType: calendarType,\n\t                DisplayFormat: displayFormat,\n\t                FieldTypeKind: 4,\n\t                FriendlyDisplayFormat: friendlyDisplayFormat\n\t            };\n\t            return this.add(title, \"SP.FieldDateTime\", util_1.Util.extend(props, properties));\n\t        }\n\t        /**\n\t         * Adds a new SP.FieldNumber to the collection\n\t         *\n\t         * @param title The field title\n\t         * @param minValue The field's minimum value\n\t         * @param maxValue The field's maximum value\n\t         * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n\t         */\n\t\n\t    }, {\n\t        key: \"addNumber\",\n\t        value: function addNumber(title, minValue, maxValue, properties) {\n\t            var props = { FieldTypeKind: 9 };\n\t            if (typeof minValue !== \"undefined\") {\n\t                props = util_1.Util.extend({ MinimumValue: minValue }, props);\n\t            }\n\t            if (typeof maxValue !== \"undefined\") {\n\t                props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n\t            }\n\t            return this.add(title, \"SP.FieldNumber\", util_1.Util.extend(props, properties));\n\t        }\n\t        /**\n\t         * Adds a new SP.FieldCurrency to the collection\n\t         *\n\t         * @param title The field title\n\t         * @param minValue The field's minimum value\n\t         * @param maxValue The field's maximum value\n\t         * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\n\t         * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n\t         */\n\t\n\t    }, {\n\t        key: \"addCurrency\",\n\t        value: function addCurrency(title, minValue, maxValue) {\n\t            var currencyLocalId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1033;\n\t            var properties = arguments[4];\n\t\n\t            var props = {\n\t                CurrencyLocaleId: currencyLocalId,\n\t                FieldTypeKind: 10\n\t            };\n\t            if (typeof minValue !== \"undefined\") {\n\t                props = util_1.Util.extend({ MinimumValue: minValue }, props);\n\t            }\n\t            if (typeof maxValue !== \"undefined\") {\n\t                props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n\t            }\n\t            return this.add(title, \"SP.FieldCurrency\", util_1.Util.extend(props, properties));\n\t        }\n\t        /**\n\t         * Adds a new SP.FieldMultiLineText to the collection\n\t         *\n\t         * @param title The field title\n\t         * @param numberOfLines Specifies the number of lines of text to display for the field.\n\t         * @param richText Specifies whether the field supports rich formatting.\n\t         * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\n\t         * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\n\t         * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\n\t         * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"addMultilineText\",\n\t        value: function addMultilineText(title) {\n\t            var numberOfLines = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n\t            var richText = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\t            var restrictedMode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\t            var appendOnly = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\t            var allowHyperlink = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n\t            var properties = arguments[6];\n\t\n\t            var props = {\n\t                AllowHyperlink: allowHyperlink,\n\t                AppendOnly: appendOnly,\n\t                FieldTypeKind: 3,\n\t                NumberOfLines: numberOfLines,\n\t                RestrictedMode: restrictedMode,\n\t                RichText: richText\n\t            };\n\t            return this.add(title, \"SP.FieldMultiLineText\", util_1.Util.extend(props, properties));\n\t        }\n\t        /**\n\t         * Adds a new SP.FieldUrl to the collection\n\t         *\n\t         * @param title The field title\n\t         */\n\t\n\t    }, {\n\t        key: \"addUrl\",\n\t        value: function addUrl(title) {\n\t            var displayFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Types.UrlFieldFormatType.Hyperlink;\n\t            var properties = arguments[2];\n\t\n\t            var props = {\n\t                DisplayFormat: displayFormat,\n\t                FieldTypeKind: 11\n\t            };\n\t            return this.add(title, \"SP.FieldUrl\", util_1.Util.extend(props, properties));\n\t        }\n\t    }]);\n\t\n\t    return Fields;\n\t}(queryable_1.QueryableCollection);\n\t\n\texports.Fields = Fields;\n\t/**\n\t * Describes a single of Field instance\n\t *\n\t */\n\t\n\tvar Field = function (_queryable_1$Queryabl2) {\n\t    _inherits(Field, _queryable_1$Queryabl2);\n\t\n\t    /**\n\t     * Creates a new instance of the Field class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this field instance\n\t     */\n\t    function Field(baseUrl, path) {\n\t        _classCallCheck(this, Field);\n\t\n\t        return _possibleConstructorReturn(this, (Field.__proto__ || Object.getPrototypeOf(Field)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Updates this field intance with the supplied properties\n\t     *\n\t     * @param properties A plain object hash of values to update for the list\n\t     * @param fieldType The type value, required to update child field type properties\n\t     */\n\t\n\t\n\t    _createClass(Field, [{\n\t        key: \"update\",\n\t        value: function update(properties) {\n\t            var _this5 = this;\n\t\n\t            var fieldType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"SP.Field\";\n\t\n\t            var postBody = JSON.stringify(util_1.Util.extend({\n\t                \"__metadata\": { \"type\": fieldType }\n\t            }, properties));\n\t            return this.post({\n\t                body: postBody,\n\t                headers: {\n\t                    \"X-HTTP-Method\": \"MERGE\"\n\t                }\n\t            }).then(function (data) {\n\t                return {\n\t                    data: data,\n\t                    field: _this5\n\t                };\n\t            });\n\t        }\n\t        /**\n\t         * Delete this fields\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"delete\",\n\t        value: function _delete() {\n\t            return this.post({\n\t                headers: {\n\t                    \"X-HTTP-Method\": \"DELETE\"\n\t                }\n\t            });\n\t        }\n\t        /**\n\t         * Sets the value of the ShowInDisplayForm property for this field.\n\t         */\n\t\n\t    }, {\n\t        key: \"setShowInDisplayForm\",\n\t        value: function setShowInDisplayForm(show) {\n\t            var q = new Field(this, \"setshowindisplayform(\" + show + \")\");\n\t            return q.post();\n\t        }\n\t        /**\n\t         * Sets the value of the ShowInEditForm property for this field.\n\t         */\n\t\n\t    }, {\n\t        key: \"setShowInEditForm\",\n\t        value: function setShowInEditForm(show) {\n\t            var q = new Field(this, \"setshowineditform(\" + show + \")\");\n\t            return q.post();\n\t        }\n\t        /**\n\t         * Sets the value of the ShowInNewForm property for this field.\n\t         */\n\t\n\t    }, {\n\t        key: \"setShowInNewForm\",\n\t        value: function setShowInNewForm(show) {\n\t            var q = new Field(this, \"setshowinnewform(\" + show + \")\");\n\t            return q.post();\n\t        }\n\t    }]);\n\t\n\t    return Field;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.Field = Field;\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\t// reference: https://msdn.microsoft.com/en-us/library/office/dn600183.aspx\n\t\"use strict\";\n\t/**\n\t * Determines the display mode of the given control or view\n\t */\n\t\n\tvar ControlMode;\n\t(function (ControlMode) {\n\t  ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\n\t  ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\n\t  ControlMode[ControlMode[\"New\"] = 3] = \"New\";\n\t})(ControlMode = exports.ControlMode || (exports.ControlMode = {}));\n\t/**\n\t * Specifies the type of the field.\n\t */\n\tvar FieldTypes;\n\t(function (FieldTypes) {\n\t  FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\n\t  FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\n\t  FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\n\t  FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\n\t  FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\n\t  FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\n\t  FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\n\t  FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\n\t  FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\n\t  FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\n\t  FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\n\t  FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\n\t  FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\n\t  FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\n\t  FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\n\t  FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\n\t  FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\n\t  FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\n\t  FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\n\t  FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\n\t  FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\n\t  FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\n\t  FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\n\t  FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\n\t  FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\n\t  FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\n\t  FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\n\t  FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\n\t  FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\n\t  FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\n\t  FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\n\t})(FieldTypes = exports.FieldTypes || (exports.FieldTypes = {}));\n\tvar DateTimeFieldFormatType;\n\t(function (DateTimeFieldFormatType) {\n\t  DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\n\t  DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\n\t})(DateTimeFieldFormatType = exports.DateTimeFieldFormatType || (exports.DateTimeFieldFormatType = {}));\n\t/**\n\t * Specifies the control settings while adding a field.\n\t */\n\tvar AddFieldOptions;\n\t(function (AddFieldOptions) {\n\t  /**\n\t   *  Specify that a new field added to the list must also be added to the default content type in the site collection\n\t   */\n\t  AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\n\t  /**\n\t   * Specify that a new field added to the list must also be added to the default content type in the site collection.\n\t   */\n\t  AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\n\t  /**\n\t   * Specify that a new field must not be added to any other content type\n\t   */\n\t  AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\n\t  /**\n\t   *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\n\t   */\n\t  AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\n\t  /**\n\t   * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\n\t   */\n\t  AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\n\t  /**\n\t   * Specify that a new field that is added to the specified list must also be added to the default list view\n\t   */\n\t  AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\n\t  /**\n\t   * Specify to confirm that no other field has the same display name\n\t   */\n\t  AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\n\t})(AddFieldOptions = exports.AddFieldOptions || (exports.AddFieldOptions = {}));\n\tvar CalendarType;\n\t(function (CalendarType) {\n\t  CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\n\t  CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\n\t  CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\n\t  CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\n\t  CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\n\t  CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\n\t  CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\n\t  CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\n\t  CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\n\t  CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\n\t  CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\n\t  CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\n\t  CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\n\t  CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\n\t  CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\n\t})(CalendarType = exports.CalendarType || (exports.CalendarType = {}));\n\tvar UrlFieldFormatType;\n\t(function (UrlFieldFormatType) {\n\t  UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\n\t  UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\n\t})(UrlFieldFormatType = exports.UrlFieldFormatType || (exports.UrlFieldFormatType = {}));\n\tvar PrincipalType;\n\t(function (PrincipalType) {\n\t  PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n\t  PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n\t  PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n\t  PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n\t  PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n\t  PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n\t})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\n\tvar PageType;\n\t(function (PageType) {\n\t  PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\n\t  PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\n\t  PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\n\t  PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\n\t  PageType[PageType[\"View\"] = 3] = \"View\";\n\t  PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\n\t  PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\n\t  PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\n\t  PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\n\t  PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\n\t  PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\n\t  PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\n\t  PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\n\t})(PageType = exports.PageType || (exports.PageType = {}));\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar queryable_1 = __webpack_require__(8);\n\t/**\n\t * Describes a collection of Field objects\n\t *\n\t */\n\t\n\tvar Forms = function (_queryable_1$Queryabl) {\n\t  _inherits(Forms, _queryable_1$Queryabl);\n\t\n\t  /**\n\t   * Creates a new instance of the Fields class\n\t   *\n\t   * @param baseUrl The url or Queryable which forms the parent of this fields collection\n\t   */\n\t  function Forms(baseUrl) {\n\t    var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"forms\";\n\t\n\t    _classCallCheck(this, Forms);\n\t\n\t    return _possibleConstructorReturn(this, (Forms.__proto__ || Object.getPrototypeOf(Forms)).call(this, baseUrl, path));\n\t  }\n\t  /**\n\t   * Gets a form by id\n\t   *\n\t   * @param id The guid id of the item to retrieve\n\t   */\n\t\n\t\n\t  _createClass(Forms, [{\n\t    key: \"getById\",\n\t    value: function getById(id) {\n\t      var i = new Form(this);\n\t      i.concat(\"('\" + id + \"')\");\n\t      return i;\n\t    }\n\t  }]);\n\t\n\t  return Forms;\n\t}(queryable_1.QueryableCollection);\n\t\n\texports.Forms = Forms;\n\t/**\n\t * Describes a single of Form instance\n\t *\n\t */\n\t\n\tvar Form = function (_queryable_1$Queryabl2) {\n\t  _inherits(Form, _queryable_1$Queryabl2);\n\t\n\t  /**\n\t   * Creates a new instance of the Form class\n\t   *\n\t   * @param baseUrl The url or Queryable which is the parent of this form instance\n\t   */\n\t  function Form(baseUrl, path) {\n\t    _classCallCheck(this, Form);\n\t\n\t    return _possibleConstructorReturn(this, (Form.__proto__ || Object.getPrototypeOf(Form)).call(this, baseUrl, path));\n\t  }\n\t\n\t  return Form;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.Form = Form;\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar queryable_1 = __webpack_require__(8);\n\t/**\n\t * Describes a collection of webhook subscriptions\n\t *\n\t */\n\t\n\tvar Subscriptions = function (_queryable_1$Queryabl) {\n\t    _inherits(Subscriptions, _queryable_1$Queryabl);\n\t\n\t    /**\n\t     * Creates a new instance of the Subscriptions class\n\t     *\n\t     * @param baseUrl - The url or Queryable which forms the parent of this webhook subscriptions collection\n\t     */\n\t    function Subscriptions(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"subscriptions\";\n\t\n\t        _classCallCheck(this, Subscriptions);\n\t\n\t        return _possibleConstructorReturn(this, (Subscriptions.__proto__ || Object.getPrototypeOf(Subscriptions)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Returns all the webhook subscriptions or the specified webhook subscription\n\t     *\n\t     */\n\t\n\t\n\t    _createClass(Subscriptions, [{\n\t        key: \"getById\",\n\t        value: function getById(subscriptionId) {\n\t            var subscription = new Subscription(this);\n\t            subscription.concat(\"('\" + subscriptionId + \"')\");\n\t            return subscription;\n\t        }\n\t        /**\n\t         * Create a new webhook subscription\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"add\",\n\t        value: function add(notificationUrl, expirationDate, clientState) {\n\t            var _this2 = this;\n\t\n\t            var postBody = JSON.stringify({\n\t                \"resource\": this.toUrl(),\n\t                \"notificationUrl\": notificationUrl,\n\t                \"expirationDateTime\": expirationDate,\n\t                \"clientState\": clientState || \"pnp-js-core-subscription\"\n\t            });\n\t            return this.post({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\n\t                return { data: result, subscription: _this2.getById(result.id) };\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Subscriptions;\n\t}(queryable_1.QueryableCollection);\n\t\n\texports.Subscriptions = Subscriptions;\n\t/**\n\t * Describes a single webhook subscription instance\n\t *\n\t */\n\t\n\tvar Subscription = function (_queryable_1$Queryabl2) {\n\t    _inherits(Subscription, _queryable_1$Queryabl2);\n\t\n\t    /**\n\t     * Creates a new instance of the Subscription class\n\t     *\n\t     * @param baseUrl - The url or Queryable which forms the parent of this webhook subscription instance\n\t     */\n\t    function Subscription(baseUrl, path) {\n\t        _classCallCheck(this, Subscription);\n\t\n\t        return _possibleConstructorReturn(this, (Subscription.__proto__ || Object.getPrototypeOf(Subscription)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Update a webhook subscription\n\t     *\n\t     */\n\t\n\t\n\t    _createClass(Subscription, [{\n\t        key: \"update\",\n\t        value: function update(expirationDate) {\n\t            var _this4 = this;\n\t\n\t            var postBody = JSON.stringify({\n\t                \"expirationDateTime\": expirationDate\n\t            });\n\t            return this.patch({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\n\t                return { data: data, subscription: _this4 };\n\t            });\n\t        }\n\t        /**\n\t         * Remove a webhook subscription\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"delete\",\n\t        value: function _delete() {\n\t            return _get(Subscription.prototype.__proto__ || Object.getPrototypeOf(Subscription.prototype), \"delete\", this).call(this);\n\t        }\n\t    }]);\n\t\n\t    return Subscription;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.Subscription = Subscription;\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar queryable_1 = __webpack_require__(8);\n\tvar util_1 = __webpack_require__(1);\n\t\n\tvar UserCustomActions = function (_queryable_1$Queryabl) {\n\t    _inherits(UserCustomActions, _queryable_1$Queryabl);\n\t\n\t    function UserCustomActions(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"usercustomactions\";\n\t\n\t        _classCallCheck(this, UserCustomActions);\n\t\n\t        return _possibleConstructorReturn(this, (UserCustomActions.__proto__ || Object.getPrototypeOf(UserCustomActions)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Returns the custom action with the specified identifier.\n\t     *\n\t     * @param id The GUID ID of the user custom action to get.\n\t     */\n\t\n\t\n\t    _createClass(UserCustomActions, [{\n\t        key: \"getById\",\n\t        value: function getById(id) {\n\t            var uca = new UserCustomAction(this);\n\t            uca.concat(\"('\" + id + \"')\");\n\t            return uca;\n\t        }\n\t        /**\n\t         * Create a custom action\n\t         *\n\t         * @param creationInfo The information which defines the new custom action\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"add\",\n\t        value: function add(properties) {\n\t            var _this2 = this;\n\t\n\t            var postBody = JSON.stringify(util_1.Util.extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\n\t            return this.post({ body: postBody }).then(function (data) {\n\t                return {\n\t                    action: _this2.getById(data.Id),\n\t                    data: data\n\t                };\n\t            });\n\t        }\n\t        /**\n\t         * Deletes all custom actions in the collection.\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"clear\",\n\t        value: function clear() {\n\t            var a = new UserCustomActions(this, \"clear\");\n\t            return a.post();\n\t        }\n\t    }]);\n\t\n\t    return UserCustomActions;\n\t}(queryable_1.QueryableCollection);\n\t\n\texports.UserCustomActions = UserCustomActions;\n\t\n\tvar UserCustomAction = function (_queryable_1$Queryabl2) {\n\t    _inherits(UserCustomAction, _queryable_1$Queryabl2);\n\t\n\t    function UserCustomAction(baseUrl, path) {\n\t        _classCallCheck(this, UserCustomAction);\n\t\n\t        return _possibleConstructorReturn(this, (UserCustomAction.__proto__ || Object.getPrototypeOf(UserCustomAction)).call(this, baseUrl, path));\n\t    }\n\t\n\t    _createClass(UserCustomAction, [{\n\t        key: \"update\",\n\t        value: function update(properties) {\n\t            var _this4 = this;\n\t\n\t            var postBody = JSON.stringify(util_1.Util.extend({\n\t                \"__metadata\": { \"type\": \"SP.UserCustomAction\" }\n\t            }, properties));\n\t            return this.post({\n\t                body: postBody,\n\t                headers: {\n\t                    \"X-HTTP-Method\": \"MERGE\"\n\t                }\n\t            }).then(function (data) {\n\t                return {\n\t                    action: _this4,\n\t                    data: data\n\t                };\n\t            });\n\t        }\n\t        /**\n\t        * Remove a custom action\n\t        *\n\t        */\n\t\n\t    }, {\n\t        key: \"delete\",\n\t        value: function _delete() {\n\t            return _get(UserCustomAction.prototype.__proto__ || Object.getPrototypeOf(UserCustomAction.prototype), \"delete\", this).call(this);\n\t        }\n\t    }]);\n\t\n\t    return UserCustomAction;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.UserCustomAction = UserCustomAction;\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar util_1 = __webpack_require__(1);\n\tvar queryable_1 = __webpack_require__(8);\n\t/**\n\t * Represents a collection of navigation nodes\n\t *\n\t */\n\t\n\tvar NavigationNodes = function (_queryable_1$Queryabl) {\n\t    _inherits(NavigationNodes, _queryable_1$Queryabl);\n\t\n\t    function NavigationNodes(baseUrl, path) {\n\t        _classCallCheck(this, NavigationNodes);\n\t\n\t        return _possibleConstructorReturn(this, (NavigationNodes.__proto__ || Object.getPrototypeOf(NavigationNodes)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Gets a navigation node by id\n\t     *\n\t     * @param id The id of the node\n\t     */\n\t\n\t\n\t    _createClass(NavigationNodes, [{\n\t        key: \"getById\",\n\t        value: function getById(id) {\n\t            var node = new NavigationNode(this);\n\t            node.concat(\"(\" + id + \")\");\n\t            return node;\n\t        }\n\t        /**\n\t         * Adds a new node to the collection\n\t         *\n\t         * @param title Display name of the node\n\t         * @param url The url of the node\n\t         * @param visible If true the node is visible, otherwise it is hidden (default: true)\n\t         */\n\t\n\t    }, {\n\t        key: \"add\",\n\t        value: function add(title, url) {\n\t            var _this2 = this;\n\t\n\t            var visible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\t\n\t            var postBody = JSON.stringify({\n\t                \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n\t                IsVisible: visible,\n\t                Title: title,\n\t                Url: url\n\t            });\n\t            var adder = new NavigationNodes(this);\n\t            return adder.post({ body: postBody }).then(function (data) {\n\t                return {\n\t                    data: data,\n\t                    node: _this2.getById(data.Id)\n\t                };\n\t            });\n\t        }\n\t        /**\n\t         * Moves a node to be after another node in the navigation\n\t         *\n\t         * @param nodeId Id of the node to move\n\t         * @param previousNodeId Id of the node after which we move the node specified by nodeId\n\t         */\n\t\n\t    }, {\n\t        key: \"moveAfter\",\n\t        value: function moveAfter(nodeId, previousNodeId) {\n\t            var postBody = JSON.stringify({\n\t                nodeId: nodeId,\n\t                previousNodeId: previousNodeId\n\t            });\n\t            var mover = new NavigationNodes(this, \"MoveAfter\");\n\t            return mover.post({ body: postBody });\n\t        }\n\t    }]);\n\t\n\t    return NavigationNodes;\n\t}(queryable_1.QueryableCollection);\n\t\n\texports.NavigationNodes = NavigationNodes;\n\t\n\tvar NavigationNode = function (_queryable_1$Queryabl2) {\n\t    _inherits(NavigationNode, _queryable_1$Queryabl2);\n\t\n\t    function NavigationNode(baseUrl, path) {\n\t        _classCallCheck(this, NavigationNode);\n\t\n\t        return _possibleConstructorReturn(this, (NavigationNode.__proto__ || Object.getPrototypeOf(NavigationNode)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Represents the child nodes of this node\n\t     */\n\t\n\t\n\t    _createClass(NavigationNode, [{\n\t        key: \"update\",\n\t\n\t        /**\n\t         * Updates this node based on the supplied properties\n\t         *\n\t         * @param properties The hash of key/value pairs to update\n\t         */\n\t        value: function update(properties) {\n\t            var _this4 = this;\n\t\n\t            var postBody = JSON.stringify(util_1.Util.extend({\n\t                \"__metadata\": { \"type\": \"SP.NavigationNode\" }\n\t            }, properties));\n\t            return this.post({\n\t                body: postBody,\n\t                headers: {\n\t                    \"X-HTTP-Method\": \"MERGE\"\n\t                }\n\t            }).then(function (data) {\n\t                return {\n\t                    data: data,\n\t                    node: _this4\n\t                };\n\t            });\n\t        }\n\t        /**\n\t         * Deletes this node and any child nodes\n\t         */\n\t\n\t    }, {\n\t        key: \"delete\",\n\t        value: function _delete() {\n\t            return _get(NavigationNode.prototype.__proto__ || Object.getPrototypeOf(NavigationNode.prototype), \"delete\", this).call(this);\n\t        }\n\t    }, {\n\t        key: \"children\",\n\t        get: function get() {\n\t            return new NavigationNodes(this, \"Children\");\n\t        }\n\t    }]);\n\t\n\t    return NavigationNode;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.NavigationNode = NavigationNode;\n\t/**\n\t * Exposes the navigation components\n\t *\n\t */\n\t\n\tvar Navigation = function (_queryable_1$Queryabl3) {\n\t    _inherits(Navigation, _queryable_1$Queryabl3);\n\t\n\t    /**\n\t     * Creates a new instance of the Lists class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n\t     */\n\t    function Navigation(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"navigation\";\n\t\n\t        _classCallCheck(this, Navigation);\n\t\n\t        return _possibleConstructorReturn(this, (Navigation.__proto__ || Object.getPrototypeOf(Navigation)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Gets the quicklaunch navigation for the current context\n\t     *\n\t     */\n\t\n\t\n\t    _createClass(Navigation, [{\n\t        key: \"quicklaunch\",\n\t        get: function get() {\n\t            return new NavigationNodes(this, \"quicklaunch\");\n\t        }\n\t        /**\n\t         * Gets the top bar navigation navigation for the current context\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"topNavigationBar\",\n\t        get: function get() {\n\t            return new NavigationNodes(this, \"topnavigationbar\");\n\t        }\n\t    }]);\n\t\n\t    return Navigation;\n\t}(queryable_1.Queryable);\n\t\n\texports.Navigation = Navigation;\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar queryable_1 = __webpack_require__(8);\n\t/**\n\t * Describes a collection of List objects\n\t *\n\t */\n\t\n\tvar Features = function (_queryable_1$Queryabl) {\n\t    _inherits(Features, _queryable_1$Queryabl);\n\t\n\t    /**\n\t     * Creates a new instance of the Lists class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n\t     */\n\t    function Features(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"features\";\n\t\n\t        _classCallCheck(this, Features);\n\t\n\t        return _possibleConstructorReturn(this, (Features.__proto__ || Object.getPrototypeOf(Features)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Gets a list from the collection by guid id\n\t     *\n\t     * @param id The Id of the feature (GUID)\n\t     */\n\t\n\t\n\t    _createClass(Features, [{\n\t        key: \"getById\",\n\t        value: function getById(id) {\n\t            var feature = new Feature(this);\n\t            feature.concat(\"('\" + id + \"')\");\n\t            return feature;\n\t        }\n\t        /**\n\t         * Adds a new list to the collection\n\t         *\n\t         * @param id The Id of the feature (GUID)\n\t         * @param force If true the feature activation will be forced\n\t         */\n\t\n\t    }, {\n\t        key: \"add\",\n\t        value: function add(id) {\n\t            var _this2 = this;\n\t\n\t            var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\t\n\t            var adder = new Features(this, \"add\");\n\t            return adder.post({\n\t                body: JSON.stringify({\n\t                    featdefScope: 0,\n\t                    featureId: id,\n\t                    force: force\n\t                })\n\t            }).then(function (data) {\n\t                return {\n\t                    data: data,\n\t                    feature: _this2.getById(id)\n\t                };\n\t            });\n\t        }\n\t        /**\n\t         * Removes (deactivates) a feature from the collection\n\t         *\n\t         * @param id The Id of the feature (GUID)\n\t         * @param force If true the feature deactivation will be forced\n\t         */\n\t\n\t    }, {\n\t        key: \"remove\",\n\t        value: function remove(id) {\n\t            var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\t\n\t            var remover = new Features(this, \"remove\");\n\t            return remover.post({\n\t                body: JSON.stringify({\n\t                    featureId: id,\n\t                    force: force\n\t                })\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Features;\n\t}(queryable_1.QueryableCollection);\n\t\n\texports.Features = Features;\n\t\n\tvar Feature = function (_queryable_1$Queryabl2) {\n\t    _inherits(Feature, _queryable_1$Queryabl2);\n\t\n\t    /**\n\t     * Creates a new instance of the Lists class\n\t     *\n\t     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n\t     */\n\t    function Feature(baseUrl, path) {\n\t        _classCallCheck(this, Feature);\n\t\n\t        return _possibleConstructorReturn(this, (Feature.__proto__ || Object.getPrototypeOf(Feature)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Removes (deactivates) a feature from the collection\n\t     *\n\t     * @param force If true the feature deactivation will be forced\n\t     */\n\t\n\t\n\t    _createClass(Feature, [{\n\t        key: \"deactivate\",\n\t        value: function deactivate() {\n\t            var _this4 = this;\n\t\n\t            var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\t\n\t            var removeDependency = this.addBatchDependency();\n\t            var idGet = new Feature(this).select(\"DefinitionId\");\n\t            return idGet.getAs().then(function (feature) {\n\t                var promise = _this4.getParent(Features, _this4.parentUrl, \"\").remove(feature.DefinitionId, force);\n\t                removeDependency();\n\t                return promise;\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Feature;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.Feature = Feature;\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar queryable_1 = __webpack_require__(8);\n\tvar FileUtil = __webpack_require__(38);\n\tvar odata_1 = __webpack_require__(11);\n\t\n\tvar UserProfileQuery = function (_queryable_1$Queryabl) {\n\t    _inherits(UserProfileQuery, _queryable_1$Queryabl);\n\t\n\t    function UserProfileQuery(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"_api/sp.userprofiles.peoplemanager\";\n\t\n\t        _classCallCheck(this, UserProfileQuery);\n\t\n\t        var _this = _possibleConstructorReturn(this, (UserProfileQuery.__proto__ || Object.getPrototypeOf(UserProfileQuery)).call(this, baseUrl, path));\n\t\n\t        _this.profileLoader = new ProfileLoader(baseUrl);\n\t        return _this;\n\t    }\n\t    /**\n\t     * The URL of the edit profile page for the current user.\n\t     */\n\t\n\t\n\t    _createClass(UserProfileQuery, [{\n\t        key: \"amIFollowedBy\",\n\t\n\t        /**\n\t         * A Boolean value that indicates whether the current user's People I'm Following list is public.\n\t         *\n\t         * @param loginName The account name of the user\n\t         */\n\t        value: function amIFollowedBy(loginName) {\n\t            var q = new UserProfileQuery(this, \"amifollowedby(@v)\");\n\t            q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n\t            return q.get();\n\t        }\n\t        /**\n\t         * Checks whether the current user is following the specified user.\n\t         *\n\t         * @param loginName The account name of the user\n\t         */\n\t\n\t    }, {\n\t        key: \"amIFollowing\",\n\t        value: function amIFollowing(loginName) {\n\t            var q = new UserProfileQuery(this, \"amifollowing(@v)\");\n\t            q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n\t            return q.get();\n\t        }\n\t        /**\n\t         * Gets tags that the user is following.\n\t         *\n\t         * @param maxCount The maximum number of tags to get.\n\t         */\n\t\n\t    }, {\n\t        key: \"getFollowedTags\",\n\t        value: function getFollowedTags() {\n\t            var maxCount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 20;\n\t\n\t            var q = new UserProfileQuery(this, \"getfollowedtags(\" + maxCount + \")\");\n\t            return q.get();\n\t        }\n\t        /**\n\t         * Gets the people who are following the specified user.\n\t         *\n\t         * @param loginName The account name of the user.\n\t         */\n\t\n\t    }, {\n\t        key: \"getFollowersFor\",\n\t        value: function getFollowersFor(loginName) {\n\t            var q = new UserProfileQuery(this, \"getfollowersfor(@v)\");\n\t            q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n\t            return q.get();\n\t        }\n\t        /**\n\t         * Gets the people who are following the current user.\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"getPeopleFollowedBy\",\n\t\n\t        /**\n\t         * Gets the people who the specified user is following.\n\t         *\n\t         * @param loginName The account name of the user.\n\t         */\n\t        value: function getPeopleFollowedBy(loginName) {\n\t            var q = new UserProfileQuery(this, \"getpeoplefollowedby(@v)\");\n\t            q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n\t            return q.get();\n\t        }\n\t        /**\n\t         * Gets user properties for the specified user.\n\t         *\n\t         * @param loginName The account name of the user.\n\t         */\n\t\n\t    }, {\n\t        key: \"getPropertiesFor\",\n\t        value: function getPropertiesFor(loginName) {\n\t            var q = new UserProfileQuery(this, \"getpropertiesfor(@v)\");\n\t            q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n\t            return q.get();\n\t        }\n\t        /**\n\t         * Gets the most popular tags.\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"getUserProfilePropertyFor\",\n\t\n\t        /**\n\t         * Gets the specified user profile property for the specified user.\n\t         *\n\t         * @param loginName The account name of the user.\n\t         * @param propertyName The case-sensitive name of the property to get.\n\t         */\n\t        value: function getUserProfilePropertyFor(loginName, propertyName) {\n\t            var q = new UserProfileQuery(this, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\n\t            q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n\t            return q.get();\n\t        }\n\t        /**\n\t         * Removes the specified user from the user's list of suggested people to follow.\n\t         *\n\t         * @param loginName The account name of the user.\n\t         */\n\t\n\t    }, {\n\t        key: \"hideSuggestion\",\n\t        value: function hideSuggestion(loginName) {\n\t            var q = new UserProfileQuery(this, \"hidesuggestion(@v)\");\n\t            q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n\t            return q.post();\n\t        }\n\t        /**\n\t         * Checks whether the first user is following the second user.\n\t         *\n\t         * @param follower The account name of the user who might be following followee.\n\t         * @param followee The account name of the user who might be followed.\n\t         */\n\t\n\t    }, {\n\t        key: \"isFollowing\",\n\t        value: function isFollowing(follower, followee) {\n\t            var q = new UserProfileQuery(this, null);\n\t            q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\n\t            q.query.add(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\n\t            q.query.add(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\n\t            return q.get();\n\t        }\n\t        /**\n\t         * Uploads and sets the user profile picture\n\t         *\n\t         * @param profilePicSource Blob data representing the user's picture\n\t         */\n\t\n\t    }, {\n\t        key: \"setMyProfilePic\",\n\t        value: function setMyProfilePic(profilePicSource) {\n\t            var _this2 = this;\n\t\n\t            return new Promise(function (resolve, reject) {\n\t                FileUtil.readBlobAsArrayBuffer(profilePicSource).then(function (buffer) {\n\t                    var request = new UserProfileQuery(_this2, \"setmyprofilepicture\");\n\t                    request.post({\n\t                        body: String.fromCharCode.apply(null, new Uint16Array(buffer))\n\t                    }).then(function (_) {\n\t                        return resolve();\n\t                    });\n\t                }).catch(function (e) {\n\t                    return reject(e);\n\t                });\n\t            });\n\t        }\n\t        /**\n\t         * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n\t         *\n\t         * @param emails The email addresses of the users to provision sites for\n\t         */\n\t\n\t    }, {\n\t        key: \"createPersonalSiteEnqueueBulk\",\n\t        value: function createPersonalSiteEnqueueBulk() {\n\t            for (var _len = arguments.length, emails = Array(_len), _key = 0; _key < _len; _key++) {\n\t                emails[_key] = arguments[_key];\n\t            }\n\t\n\t            return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\n\t        }\n\t        /**\n\t         * Gets the user profile of the site owner.\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"createPersonalSite\",\n\t\n\t        /**\n\t         * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\n\t         *\n\t         * @param interactiveRequest true if interactively (web) initiated request, or false if non-interactively (client) initiated request\n\t         */\n\t        value: function createPersonalSite() {\n\t            var interactiveRequest = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\t\n\t            return this.profileLoader.createPersonalSite(interactiveRequest);\n\t        }\n\t        /**\n\t         * Sets the privacy settings for this profile.\n\t         *\n\t         * @param share true to make all social data public; false to make all social data private.\n\t         */\n\t\n\t    }, {\n\t        key: \"shareAllSocialData\",\n\t        value: function shareAllSocialData(share) {\n\t            return this.profileLoader.shareAllSocialData(share);\n\t        }\n\t    }, {\n\t        key: \"editProfileLink\",\n\t        get: function get() {\n\t            var q = new UserProfileQuery(this, \"EditProfileLink\");\n\t            return q.getAs(odata_1.ODataValue());\n\t        }\n\t        /**\n\t         * A Boolean value that indicates whether the current user's People I'm Following list is public.\n\t         */\n\t\n\t    }, {\n\t        key: \"isMyPeopleListPublic\",\n\t        get: function get() {\n\t            var q = new UserProfileQuery(this, \"IsMyPeopleListPublic\");\n\t            return q.getAs(odata_1.ODataValue());\n\t        }\n\t    }, {\n\t        key: \"myFollowers\",\n\t        get: function get() {\n\t            return new queryable_1.QueryableCollection(this, \"getmyfollowers\");\n\t        }\n\t        /**\n\t         * Gets user properties for the current user.\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"myProperties\",\n\t        get: function get() {\n\t            return new UserProfileQuery(this, \"getmyproperties\");\n\t        }\n\t    }, {\n\t        key: \"trendingTags\",\n\t        get: function get() {\n\t            var q = new UserProfileQuery(this, null);\n\t            q.concat(\".gettrendingtags\");\n\t            return q.get();\n\t        }\n\t    }, {\n\t        key: \"ownerUserProfile\",\n\t        get: function get() {\n\t            return this.profileLoader.ownerUserProfile;\n\t        }\n\t        /**\n\t         * Gets the user profile that corresponds to the current user.\n\t         */\n\t\n\t    }, {\n\t        key: \"userProfile\",\n\t        get: function get() {\n\t            return this.profileLoader.userProfile;\n\t        }\n\t    }]);\n\t\n\t    return UserProfileQuery;\n\t}(queryable_1.QueryableInstance);\n\t\n\texports.UserProfileQuery = UserProfileQuery;\n\t\n\tvar ProfileLoader = function (_queryable_1$Queryabl2) {\n\t    _inherits(ProfileLoader, _queryable_1$Queryabl2);\n\t\n\t    function ProfileLoader(baseUrl) {\n\t        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"_api/sp.userprofiles.profileloader.getprofileloader\";\n\t\n\t        _classCallCheck(this, ProfileLoader);\n\t\n\t        return _possibleConstructorReturn(this, (ProfileLoader.__proto__ || Object.getPrototypeOf(ProfileLoader)).call(this, baseUrl, path));\n\t    }\n\t    /**\n\t     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n\t     *\n\t     * @param emails The email addresses of the users to provision sites for\n\t     */\n\t\n\t\n\t    _createClass(ProfileLoader, [{\n\t        key: \"createPersonalSiteEnqueueBulk\",\n\t        value: function createPersonalSiteEnqueueBulk(emails) {\n\t            var q = new ProfileLoader(this, \"createpersonalsiteenqueuebulk\");\n\t            var postBody = JSON.stringify({ \"emailIDs\": emails });\n\t            return q.post({\n\t                body: postBody\n\t            });\n\t        }\n\t        /**\n\t         * Gets the user profile of the site owner.\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"createPersonalSite\",\n\t\n\t        /**\n\t         * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\n\t         *\n\t         * @param interactiveRequest true if interactively (web) initiated request, or false if non-interactively (client) initiated request\n\t         */\n\t        value: function createPersonalSite() {\n\t            var interactiveRequest = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\t\n\t            var q = new ProfileLoader(this, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\\\",\");\n\t            return q.post();\n\t        }\n\t        /**\n\t         * Sets the privacy settings for this profile.\n\t         *\n\t         * @param share true to make all social data public; false to make all social data private.\n\t         */\n\t\n\t    }, {\n\t        key: \"shareAllSocialData\",\n\t        value: function shareAllSocialData(share) {\n\t            var q = new ProfileLoader(this, \"getuserprofile/shareallsocialdata(\" + share + \")\\\",\");\n\t            return q.post();\n\t        }\n\t    }, {\n\t        key: \"ownerUserProfile\",\n\t        get: function get() {\n\t            var q = this.getParent(ProfileLoader, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\n\t            return q.postAs();\n\t        }\n\t        /**\n\t         * Gets the user profile that corresponds to the current user.\n\t         *\n\t         */\n\t\n\t    }, {\n\t        key: \"userProfile\",\n\t        get: function get() {\n\t            var q = new ProfileLoader(this, \"getuserprofile\");\n\t            return q.postAs();\n\t        }\n\t    }]);\n\t\n\t    return ProfileLoader;\n\t}(queryable_1.Queryable);\n\n/***/ },\n/* 38 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/**\n\t * Reads a blob as text\n\t *\n\t * @param blob The data to read\n\t */\n\t\n\tfunction readBlobAsText(blob) {\n\t    return readBlobAs(blob, \"string\");\n\t}\n\texports.readBlobAsText = readBlobAsText;\n\t/**\n\t * Reads a blob into an array buffer\n\t *\n\t * @param blob The data to read\n\t */\n\tfunction readBlobAsArrayBuffer(blob) {\n\t    return readBlobAs(blob, \"buffer\");\n\t}\n\texports.readBlobAsArrayBuffer = readBlobAsArrayBuffer;\n\t/**\n\t * Generic method to read blob's content\n\t *\n\t * @param blob The data to read\n\t * @param mode The read mode\n\t */\n\tfunction readBlobAs(blob, mode) {\n\t    return new Promise(function (resolve, reject) {\n\t        try {\n\t            var reader = new FileReader();\n\t            reader.onload = function (e) {\n\t                resolve(e.target.result);\n\t            };\n\t            switch (mode) {\n\t                case \"string\":\n\t                    reader.readAsText(blob);\n\t                    break;\n\t                case \"buffer\":\n\t                    reader.readAsArrayBuffer(blob);\n\t                    break;\n\t            }\n\t        } catch (e) {\n\t            reject(e);\n\t        }\n\t    });\n\t}\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tfunction __export(m) {\n\t    for (var p in m) {\n\t        if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t    }\n\t}\n\t__export(__webpack_require__(40));\n\tvar httpclient_1 = __webpack_require__(9);\n\texports.HttpClient = httpclient_1.HttpClient;\n\tvar sprequestexecutorclient_1 = __webpack_require__(41);\n\texports.SPRequestExecutorClient = sprequestexecutorclient_1.SPRequestExecutorClient;\n\tvar nodefetchclient_1 = __webpack_require__(42);\n\texports.NodeFetchClient = nodefetchclient_1.NodeFetchClient;\n\tvar fetchclient_1 = __webpack_require__(13);\n\texports.FetchClient = fetchclient_1.FetchClient;\n\t__export(__webpack_require__(43));\n\tvar collections_1 = __webpack_require__(4);\n\texports.Dictionary = collections_1.Dictionary;\n\tvar util_1 = __webpack_require__(1);\n\texports.Util = util_1.Util;\n\t__export(__webpack_require__(5));\n\t__export(__webpack_require__(14));\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tfunction __export(m) {\n\t    for (var p in m) {\n\t        if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t    }\n\t}\n\t__export(__webpack_require__(15));\n\tvar files_1 = __webpack_require__(26);\n\texports.CheckinType = files_1.CheckinType;\n\texports.WebPartsPersonalizationScope = files_1.WebPartsPersonalizationScope;\n\texports.MoveOperations = files_1.MoveOperations;\n\texports.TemplateFileType = files_1.TemplateFileType;\n\tvar items_1 = __webpack_require__(24);\n\texports.Item = items_1.Item;\n\texports.PagedItemCollection = items_1.PagedItemCollection;\n\tvar navigation_1 = __webpack_require__(35);\n\texports.NavigationNodes = navigation_1.NavigationNodes;\n\texports.NavigationNode = navigation_1.NavigationNode;\n\tvar lists_1 = __webpack_require__(23);\n\texports.List = lists_1.List;\n\tvar odata_1 = __webpack_require__(11);\n\texports.extractOdataId = odata_1.extractOdataId;\n\texports.ODataParserBase = odata_1.ODataParserBase;\n\texports.ODataDefaultParser = odata_1.ODataDefaultParser;\n\texports.ODataRaw = odata_1.ODataRaw;\n\texports.ODataValue = odata_1.ODataValue;\n\texports.ODataEntity = odata_1.ODataEntity;\n\texports.ODataEntityArray = odata_1.ODataEntityArray;\n\texports.TextFileParser = odata_1.TextFileParser;\n\texports.BlobFileParser = odata_1.BlobFileParser;\n\texports.BufferFileParser = odata_1.BufferFileParser;\n\texports.JSONFileParser = odata_1.JSONFileParser;\n\tvar roles_1 = __webpack_require__(20);\n\texports.RoleDefinitionBindings = roles_1.RoleDefinitionBindings;\n\tvar search_1 = __webpack_require__(7);\n\texports.Search = search_1.Search;\n\texports.SearchResult = search_1.SearchResult;\n\texports.SearchResults = search_1.SearchResults;\n\texports.SortDirection = search_1.SortDirection;\n\texports.ReorderingRuleMatchType = search_1.ReorderingRuleMatchType;\n\texports.QueryPropertyValueType = search_1.QueryPropertyValueType;\n\tvar searchsuggest_1 = __webpack_require__(16);\n\texports.SearchSuggest = searchsuggest_1.SearchSuggest;\n\texports.SearchSuggestResult = searchsuggest_1.SearchSuggestResult;\n\tvar site_1 = __webpack_require__(17);\n\texports.Site = site_1.Site;\n\t__export(__webpack_require__(31));\n\tvar webs_1 = __webpack_require__(18);\n\texports.Web = webs_1.Web;\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar util_1 = __webpack_require__(1);\n\tvar exceptions_1 = __webpack_require__(14);\n\t/**\n\t * Makes requests using the SP.RequestExecutor library.\n\t */\n\t\n\tvar SPRequestExecutorClient = function () {\n\t    function SPRequestExecutorClient() {\n\t        _classCallCheck(this, SPRequestExecutorClient);\n\t\n\t        /**\n\t         * Converts a SharePoint REST API response to a fetch API response.\n\t         */\n\t        this.convertToResponse = function (spResponse) {\n\t            var responseHeaders = new Headers();\n\t            for (var h in spResponse.headers) {\n\t                if (spResponse.headers[h]) {\n\t                    responseHeaders.append(h, spResponse.headers[h]);\n\t                }\n\t            }\n\t            // issue #256, Cannot have an empty string body when creating a Response with status 204\n\t            var body = spResponse.statusCode === 204 ? null : spResponse.body;\n\t            return new Response(body, {\n\t                headers: responseHeaders,\n\t                status: spResponse.statusCode,\n\t                statusText: spResponse.statusText\n\t            });\n\t        };\n\t    }\n\t    /**\n\t     * Fetches a URL using the SP.RequestExecutor library.\n\t     */\n\t\n\t\n\t    _createClass(SPRequestExecutorClient, [{\n\t        key: \"fetch\",\n\t        value: function fetch(url, options) {\n\t            var _this = this;\n\t\n\t            if (typeof SP === \"undefined\" || typeof SP.RequestExecutor === \"undefined\") {\n\t                throw new exceptions_1.SPRequestExecutorUndefinedException();\n\t            }\n\t            var addinWebUrl = url.substring(0, url.indexOf(\"/_api\")),\n\t                executor = new SP.RequestExecutor(addinWebUrl),\n\t                headers = {},\n\t                iterator = void 0,\n\t                temp = void 0;\n\t            if (options.headers && options.headers instanceof Headers) {\n\t                iterator = options.headers.entries();\n\t                temp = iterator.next();\n\t                while (!temp.done) {\n\t                    headers[temp.value[0]] = temp.value[1];\n\t                    temp = iterator.next();\n\t                }\n\t            } else {\n\t                headers = options.headers;\n\t            }\n\t            return new Promise(function (resolve, reject) {\n\t                var requestOptions = {\n\t                    error: function error(_error) {\n\t                        reject(_this.convertToResponse(_error));\n\t                    },\n\t                    headers: headers,\n\t                    method: options.method,\n\t                    success: function success(response) {\n\t                        resolve(_this.convertToResponse(response));\n\t                    },\n\t                    url: url\n\t                };\n\t                if (options.body) {\n\t                    requestOptions = util_1.Util.extend(requestOptions, { body: options.body });\n\t                } else {\n\t                    requestOptions = util_1.Util.extend(requestOptions, { binaryStringRequestBody: true });\n\t                }\n\t                executor.executeAsync(requestOptions);\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return SPRequestExecutorClient;\n\t}();\n\t\n\texports.SPRequestExecutorClient = SPRequestExecutorClient;\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar exceptions_1 = __webpack_require__(14);\n\t/**\n\t * This module is substituted for the NodeFetchClient.ts during the packaging process. This helps to reduce the pnp.js file size by\n\t * not including all of the node dependencies\n\t */\n\t\n\tvar NodeFetchClient = function () {\n\t  function NodeFetchClient() {\n\t    _classCallCheck(this, NodeFetchClient);\n\t  }\n\t\n\t  _createClass(NodeFetchClient, [{\n\t    key: \"fetch\",\n\t\n\t    /**\n\t     * Always throws an error that NodeFetchClient is not supported for use in the browser\n\t     */\n\t    value: function fetch() {\n\t      throw new exceptions_1.NodeFetchClientUnsupportedException();\n\t    }\n\t  }]);\n\t\n\t  return NodeFetchClient;\n\t}();\n\t\n\texports.NodeFetchClient = NodeFetchClient;\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar cachingConfigurationProvider_1 = __webpack_require__(44);\n\texports.CachingConfigurationProvider = cachingConfigurationProvider_1.default;\n\tvar spListConfigurationProvider_1 = __webpack_require__(45);\n\texports.SPListConfigurationProvider = spListConfigurationProvider_1.default;\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar storage = __webpack_require__(2);\n\tvar exceptions_1 = __webpack_require__(14);\n\t/**\n\t * A caching provider which can wrap other non-caching providers\n\t *\n\t */\n\t\n\tvar CachingConfigurationProvider = function () {\n\t    /**\n\t     * Creates a new caching configuration provider\n\t     * @constructor\n\t     * @param {IConfigurationProvider} wrappedProvider Provider which will be used to fetch the configuration\n\t     * @param {string} cacheKey Key that will be used to store cached items to the cache\n\t     * @param {IPnPClientStore} cacheStore OPTIONAL storage, which will be used to store cached settings.\n\t     */\n\t    function CachingConfigurationProvider(wrappedProvider, cacheKey, cacheStore) {\n\t        _classCallCheck(this, CachingConfigurationProvider);\n\t\n\t        this.wrappedProvider = wrappedProvider;\n\t        this.store = cacheStore ? cacheStore : this.selectPnPCache();\n\t        this.cacheKey = \"_configcache_\" + cacheKey;\n\t    }\n\t    /**\n\t     * Gets the wrapped configuration providers\n\t     *\n\t     * @return {IConfigurationProvider} Wrapped configuration provider\n\t     */\n\t\n\t\n\t    _createClass(CachingConfigurationProvider, [{\n\t        key: \"getWrappedProvider\",\n\t        value: function getWrappedProvider() {\n\t            return this.wrappedProvider;\n\t        }\n\t        /**\n\t         * Loads the configuration values either from the cache or from the wrapped provider\n\t         *\n\t         * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n\t         */\n\t\n\t    }, {\n\t        key: \"getConfiguration\",\n\t        value: function getConfiguration() {\n\t            var _this = this;\n\t\n\t            // Cache not available, pass control to  the wrapped provider\n\t            if (!this.store || !this.store.enabled) {\n\t                return this.wrappedProvider.getConfiguration();\n\t            }\n\t            // Value is found in cache, return it directly\n\t            var cachedConfig = this.store.get(this.cacheKey);\n\t            if (cachedConfig) {\n\t                return new Promise(function (resolve) {\n\t                    resolve(cachedConfig);\n\t                });\n\t            }\n\t            // Get and cache value from the wrapped provider\n\t            var providerPromise = this.wrappedProvider.getConfiguration();\n\t            providerPromise.then(function (providedConfig) {\n\t                _this.store.put(_this.cacheKey, providedConfig);\n\t            });\n\t            return providerPromise;\n\t        }\n\t    }, {\n\t        key: \"selectPnPCache\",\n\t        value: function selectPnPCache() {\n\t            var pnpCache = new storage.PnPClientStorage();\n\t            if (pnpCache.local && pnpCache.local.enabled) {\n\t                return pnpCache.local;\n\t            }\n\t            if (pnpCache.session && pnpCache.session.enabled) {\n\t                return pnpCache.session;\n\t            }\n\t            throw new exceptions_1.NoCacheAvailableException();\n\t        }\n\t    }]);\n\t\n\t    return CachingConfigurationProvider;\n\t}();\n\t\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = CachingConfigurationProvider;\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar cachingConfigurationProvider_1 = __webpack_require__(44);\n\t/**\n\t * A configuration provider which loads configuration values from a SharePoint list\n\t *\n\t */\n\t\n\tvar SPListConfigurationProvider = function () {\n\t    /**\n\t     * Creates a new SharePoint list based configuration provider\n\t     * @constructor\n\t     * @param {string} webUrl Url of the SharePoint site, where the configuration list is located\n\t     * @param {string} listTitle Title of the SharePoint list, which contains the configuration settings (optional, default = \"config\")\n\t     */\n\t    function SPListConfigurationProvider(sourceWeb) {\n\t        var sourceListTitle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"config\";\n\t\n\t        _classCallCheck(this, SPListConfigurationProvider);\n\t\n\t        this.sourceWeb = sourceWeb;\n\t        this.sourceListTitle = sourceListTitle;\n\t    }\n\t    /**\n\t     * Gets the url of the SharePoint site, where the configuration list is located\n\t     *\n\t     * @return {string} Url address of the site\n\t     */\n\t\n\t\n\t    _createClass(SPListConfigurationProvider, [{\n\t        key: \"getConfiguration\",\n\t\n\t        /**\n\t         * Loads the configuration values from the SharePoint list\n\t         *\n\t         * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n\t         */\n\t        value: function getConfiguration() {\n\t            return this.web.lists.getByTitle(this.listTitle).items.select(\"Title\", \"Value\").getAs().then(function (data) {\n\t                return data.reduce(function (configuration, item) {\n\t                    return Object.defineProperty(configuration, item.Title, {\n\t                        configurable: false,\n\t                        enumerable: false,\n\t                        value: item.Value,\n\t                        writable: false\n\t                    });\n\t                }, {});\n\t            });\n\t        }\n\t        /**\n\t         * Wraps the current provider in a cache enabled provider\n\t         *\n\t         * @return {CachingConfigurationProvider} Caching providers which wraps the current provider\n\t         */\n\t\n\t    }, {\n\t        key: \"asCaching\",\n\t        value: function asCaching() {\n\t            var cacheKey = \"splist_\" + this.web.toUrl() + \"+\" + this.listTitle;\n\t            return new cachingConfigurationProvider_1.default(this, cacheKey);\n\t        }\n\t    }, {\n\t        key: \"web\",\n\t        get: function get() {\n\t            return this.sourceWeb;\n\t        }\n\t        /**\n\t         * Gets the title of the SharePoint list, which contains the configuration settings\n\t         *\n\t         * @return {string} List title\n\t         */\n\t\n\t    }, {\n\t        key: \"listTitle\",\n\t        get: function get() {\n\t            return this.sourceListTitle;\n\t        }\n\t    }]);\n\t\n\t    return SPListConfigurationProvider;\n\t}();\n\t\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = SPListConfigurationProvider;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// pnp.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 63d3c45970f1a4d9e87f","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nconst util_1 = require(\"./utils/util\");\nconst storage_1 = require(\"./utils/storage\");\nconst configuration_1 = require(\"./configuration/configuration\");\nconst logging_1 = require(\"./utils/logging\");\nconst rest_1 = require(\"./sharepoint/rest\");\nconst pnplibconfig_1 = require(\"./configuration/pnplibconfig\");\n/**\n * Root class of the Patterns and Practices namespace, provides an entry point to the library\n */\n/**\n * Utility methods\n */\nexports.util = util_1.Util;\n/**\n * Provides access to the REST interface\n */\nexports.sp = new rest_1.Rest();\n/**\n * Provides access to local and session storage\n */\nexports.storage = new storage_1.PnPClientStorage();\n/**\n * Global configuration instance to which providers can be added\n */\nexports.config = new configuration_1.Settings();\n/**\n * Global logging instance to which subscribers can be registered and messages written\n */\nexports.log = logging_1.Logger;\n/**\n * Allows for the configuration of the library\n */\nexports.setup = pnplibconfig_1.setRuntimeConfig;\n/**\n * Expose a subset of classes from the library for public consumption\n */\n__export(require(\"./types/index\"));\n// creating this class instead of directly assigning to default fixes issue #116\nlet Def = {\n    /**\n     * Global configuration instance to which providers can be added\n     */\n    config: exports.config,\n    /**\n     * Global logging instance to which subscribers can be registered and messages written\n     */\n    log: exports.log,\n    /**\n     * Provides access to local and session storage\n     */\n    setup: exports.setup,\n    /**\n     * Provides access to the REST interface\n     */\n    sp: exports.sp,\n    /**\n     * Provides access to local and session storage\n     */\n    storage: exports.storage,\n    /**\n     * Utility methods\n     */\n    util: exports.util,\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Enables use of the import pnp from syntax\n */\nexports.default = Def;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/pnp.js","\"use strict\";\nclass Util {\n    /**\n     * Gets a callback function which will maintain context across async calls.\n     * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\n     *\n     * @param context The object that will be the 'this' value in the callback\n     * @param method The method to which we will apply the context and parameters\n     * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\n     */\n    static getCtxCallback(context, method, ...params) {\n        return function () {\n            method.apply(context, params);\n        };\n    }\n    /**\n     * Tests if a url param exists\n     *\n     * @param name The name of the url paramter to check\n     */\n    static urlParamExists(name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        let regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        return regex.test(location.search);\n    }\n    /**\n     * Gets a url param value by name\n     *\n     * @param name The name of the paramter for which we want the value\n     */\n    static getUrlParamByName(name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        let regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        let results = regex.exec(location.search);\n        return results == null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n    }\n    /**\n     * Gets a url param by name and attempts to parse a bool value\n     *\n     * @param name The name of the paramter for which we want the boolean value\n     */\n    static getUrlParamBoolByName(name) {\n        let p = this.getUrlParamByName(name);\n        let isFalse = (p === \"\" || /false|0/i.test(p));\n        return !isFalse;\n    }\n    /**\n     * Inserts the string s into the string target as the index specified by index\n     *\n     * @param target The string into which we will insert s\n     * @param index The location in target to insert s (zero based)\n     * @param s The string to insert into target at position index\n     */\n    static stringInsert(target, index, s) {\n        if (index > 0) {\n            return target.substring(0, index) + s + target.substring(index, target.length);\n        }\n        return s + target;\n    }\n    /**\n     * Adds a value to a date\n     *\n     * @param date The date to which we will add units, done in local time\n     * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\n     * @param units The amount to add to date of the given interval\n     *\n     * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\n     */\n    static dateAdd(date, interval, units) {\n        let ret = new Date(date.toLocaleString()); // don't change original date\n        switch (interval.toLowerCase()) {\n            case \"year\":\n                ret.setFullYear(ret.getFullYear() + units);\n                break;\n            case \"quarter\":\n                ret.setMonth(ret.getMonth() + 3 * units);\n                break;\n            case \"month\":\n                ret.setMonth(ret.getMonth() + units);\n                break;\n            case \"week\":\n                ret.setDate(ret.getDate() + 7 * units);\n                break;\n            case \"day\":\n                ret.setDate(ret.getDate() + units);\n                break;\n            case \"hour\":\n                ret.setTime(ret.getTime() + units * 3600000);\n                break;\n            case \"minute\":\n                ret.setTime(ret.getTime() + units * 60000);\n                break;\n            case \"second\":\n                ret.setTime(ret.getTime() + units * 1000);\n                break;\n            default:\n                ret = undefined;\n                break;\n        }\n        return ret;\n    }\n    /**\n     * Loads a stylesheet into the current page\n     *\n     * @param path The url to the stylesheet\n     * @param avoidCache If true a value will be appended as a query string to avoid browser caching issues\n     */\n    static loadStylesheet(path, avoidCache) {\n        if (avoidCache) {\n            path += \"?\" + encodeURIComponent((new Date()).getTime().toString());\n        }\n        let head = document.getElementsByTagName(\"head\");\n        if (head.length > 0) {\n            let e = document.createElement(\"link\");\n            head[0].appendChild(e);\n            e.setAttribute(\"type\", \"text/css\");\n            e.setAttribute(\"rel\", \"stylesheet\");\n            e.setAttribute(\"href\", path);\n        }\n    }\n    /**\n     * Combines an arbitrary set of paths ensuring that the slashes are normalized\n     *\n     * @param paths 0 to n path parts to combine\n     */\n    static combinePaths(...paths) {\n        return paths\n            .filter(path => typeof path !== \"undefined\" && path !== null)\n            .map(path => path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"))\n            .join(\"/\")\n            .replace(/\\\\/g, \"/\");\n    }\n    /**\n     * Gets a random string of chars length\n     *\n     * @param chars The length of the random string to generate\n     */\n    static getRandomString(chars) {\n        let text = new Array(chars);\n        let possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        for (let i = 0; i < chars; i++) {\n            text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text.join(\"\");\n    }\n    /**\n     * Gets a random GUID value\n     *\n     * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n     */\n    /* tslint:disable no-bitwise */\n    static getGUID() {\n        let d = new Date().getTime();\n        let guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n            let r = (d + Math.random() * 16) % 16 | 0;\n            d = Math.floor(d / 16);\n            return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        return guid;\n    }\n    /* tslint:enable */\n    /**\n     * Determines if a given value is a function\n     *\n     * @param candidateFunction The thing to test for being a function\n     */\n    static isFunction(candidateFunction) {\n        return typeof candidateFunction === \"function\";\n    }\n    /**\n     * @returns whether the provided parameter is a JavaScript Array or not.\n    */\n    static isArray(array) {\n        if (Array.isArray) {\n            return Array.isArray(array);\n        }\n        return array && typeof array.length === \"number\" && array.constructor === Array;\n    }\n    /**\n     * Determines if a string is null or empty or undefined\n     *\n     * @param s The string to test\n     */\n    static stringIsNullOrEmpty(s) {\n        return typeof s === \"undefined\" || s === null || s === \"\";\n    }\n    /**\n     * Provides functionality to extend the given object by doing a shallow copy\n     *\n     * @param target The object to which properties will be copied\n     * @param source The source object from which properties will be copied\n     * @param noOverwrite If true existing properties on the target are not overwritten from the source\n     *\n     */\n    static extend(target, source, noOverwrite = false) {\n        if (source === null || typeof source === \"undefined\") {\n            return target;\n        }\n        // ensure we don't overwrite things we don't want overwritten\n        let check = noOverwrite ? (o, i) => !(i in o) : () => true;\n        return Object.getOwnPropertyNames(source)\n            .filter((v) => check(target, v))\n            .reduce((t, v) => {\n            t[v] = source[v];\n            return t;\n        }, target);\n    }\n    /**\n     * Determines if a given url is absolute\n     *\n     * @param url The url to check to see if it is absolute\n     */\n    static isUrlAbsolute(url) {\n        return /^https?:\\/\\/|^\\/\\//i.test(url);\n    }\n    /**\n     * Attempts to make the supplied relative url absolute based on the _spPageContextInfo object, if available\n     *\n     * @param url The relative url to make absolute\n     */\n    static makeUrlAbsolute(url) {\n        if (Util.isUrlAbsolute(url)) {\n            return url;\n        }\n        if (typeof global._spPageContextInfo !== \"undefined\") {\n            if (global._spPageContextInfo.hasOwnProperty(\"webAbsoluteUrl\")) {\n                return Util.combinePaths(global._spPageContextInfo.webAbsoluteUrl, url);\n            }\n            else if (global._spPageContextInfo.hasOwnProperty(\"webServerRelativeUrl\")) {\n                return Util.combinePaths(global._spPageContextInfo.webServerRelativeUrl, url);\n            }\n        }\n        else {\n            return url;\n        }\n    }\n}\nexports.Util = Util;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/util.js","\"use strict\";\nconst util_1 = require(\"./util\");\n/**\n * A wrapper class to provide a consistent interface to browser based storage\n *\n */\nclass PnPClientStorageWrapper {\n    /**\n     * Creates a new instance of the PnPClientStorageWrapper class\n     *\n     * @constructor\n     */\n    constructor(store, defaultTimeoutMinutes) {\n        this.store = store;\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\n        this.defaultTimeoutMinutes = (defaultTimeoutMinutes === void 0) ? 5 : defaultTimeoutMinutes;\n        this.enabled = this.test();\n    }\n    /**\n     * Get a value from storage, or null if that value does not exist\n     *\n     * @param key The key whose value we want to retrieve\n     */\n    get(key) {\n        if (!this.enabled) {\n            return null;\n        }\n        let o = this.store.getItem(key);\n        if (o == null) {\n            return null;\n        }\n        let persistable = JSON.parse(o);\n        if (new Date(persistable.expiration) <= new Date()) {\n            this.delete(key);\n            return null;\n        }\n        else {\n            return persistable.value;\n        }\n    }\n    /**\n     * Adds a value to the underlying storage\n     *\n     * @param key The key to use when storing the provided value\n     * @param o The value to store\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    put(key, o, expire) {\n        if (this.enabled) {\n            this.store.setItem(key, this.createPersistable(o, expire));\n        }\n    }\n    /**\n     * Deletes a value from the underlying storage\n     *\n     * @param key The key of the pair we want to remove from storage\n     */\n    delete(key) {\n        if (this.enabled) {\n            this.store.removeItem(key);\n        }\n    }\n    /**\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\n     *\n     * @param key The key to use when storing the provided value\n     * @param getter A function which will upon execution provide the desired value\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    getOrPut(key, getter, expire) {\n        if (!this.enabled) {\n            return getter();\n        }\n        return new Promise((resolve) => {\n            let o = this.get(key);\n            if (o == null) {\n                getter().then((d) => {\n                    this.put(key, d, expire);\n                    resolve(d);\n                });\n            }\n            else {\n                resolve(o);\n            }\n        });\n    }\n    /**\n     * Used to determine if the wrapped storage is available currently\n     */\n    test() {\n        let str = \"test\";\n        try {\n            this.store.setItem(str, str);\n            this.store.removeItem(str);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Creates the persistable to store\n     */\n    createPersistable(o, expire) {\n        if (typeof expire === \"undefined\") {\n            expire = util_1.Util.dateAdd(new Date(), \"minute\", this.defaultTimeoutMinutes);\n        }\n        return JSON.stringify({ expiration: expire, value: o });\n    }\n}\nexports.PnPClientStorageWrapper = PnPClientStorageWrapper;\n/**\n * A class that will establish wrappers for both local and session storage\n */\nclass PnPClientStorage {\n    /**\n     * Creates a new instance of the PnPClientStorage class\n     *\n     * @constructor\n     */\n    constructor() {\n        this.local = typeof localStorage !== \"undefined\" ? new PnPClientStorageWrapper(localStorage) : null;\n        this.session = typeof sessionStorage !== \"undefined\" ? new PnPClientStorageWrapper(sessionStorage) : null;\n    }\n}\nexports.PnPClientStorage = PnPClientStorage;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/storage.js","\"use strict\";\nconst collections_1 = require(\"../collections/collections\");\n/**\n * Class used to manage the current application settings\n *\n */\nclass Settings {\n    /**\n     * Creates a new instance of the settings class\n     *\n     * @constructor\n     */\n    constructor() {\n        this._settings = new collections_1.Dictionary();\n    }\n    /**\n     * Adds a new single setting, or overwrites a previous setting with the same key\n     *\n     * @param {string} key The key used to store this setting\n     * @param {string} value The setting value to store\n     */\n    add(key, value) {\n        this._settings.add(key, value);\n    }\n    /**\n     * Adds a JSON value to the collection as a string, you must use getJSON to rehydrate the object when read\n     *\n     * @param {string} key The key used to store this setting\n     * @param {any} value The setting value to store\n     */\n    addJSON(key, value) {\n        this._settings.add(key, JSON.stringify(value));\n    }\n    /**\n     * Applies the supplied hash to the setting collection overwriting any existing value, or created new values\n     *\n     * @param {TypedHash<any>} hash The set of values to add\n     */\n    apply(hash) {\n        return new Promise((resolve, reject) => {\n            try {\n                this._settings.merge(hash);\n                resolve();\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    }\n    /**\n     * Loads configuration settings into the collection from the supplied provider and returns a Promise\n     *\n     * @param {IConfigurationProvider} provider The provider from which we will load the settings\n     */\n    load(provider) {\n        return new Promise((resolve, reject) => {\n            provider.getConfiguration().then((value) => {\n                this._settings.merge(value);\n                resolve();\n            }).catch((reason) => {\n                reject(reason);\n            });\n        });\n    }\n    /**\n     * Gets a value from the configuration\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {string} string value from the configuration\n     */\n    get(key) {\n        return this._settings.get(key);\n    }\n    /**\n     * Gets a JSON value, rehydrating the stored string to the original object\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {any} object from the configuration\n     */\n    getJSON(key) {\n        let o = this.get(key);\n        if (typeof o === \"undefined\" || o === null) {\n            return o;\n        }\n        return JSON.parse(o);\n    }\n}\nexports.Settings = Settings;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/configuration/configuration.js","\"use strict\";\n/**\n * Generic dictionary\n */\nclass Dictionary {\n    /**\n     * Creates a new instance of the Dictionary<T> class\n     *\n     * @constructor\n     */\n    constructor(keys = [], values = []) {\n        this.keys = keys;\n        this.values = values;\n    }\n    /**\n     * Gets a value from the collection using the specified key\n     *\n     * @param key The key whose value we want to return, returns null if the key does not exist\n     */\n    get(key) {\n        let index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        return this.values[index];\n    }\n    /**\n     * Adds the supplied key and value to the dictionary\n     *\n     * @param key The key to add\n     * @param o The value to add\n     */\n    add(key, o) {\n        let index = this.keys.indexOf(key);\n        if (index > -1) {\n            this.values[index] = o;\n        }\n        else {\n            this.keys.push(key);\n            this.values.push(o);\n        }\n    }\n    /**\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\n     */\n    merge(source) {\n        if (\"getKeys\" in source) {\n            let sourceAsDictionary = source;\n            sourceAsDictionary.getKeys().map(key => {\n                this.add(key, sourceAsDictionary.get(key));\n            });\n        }\n        else {\n            let sourceAsHash = source;\n            for (let key in sourceAsHash) {\n                if (sourceAsHash.hasOwnProperty(key)) {\n                    this.add(key, sourceAsHash[key]);\n                }\n            }\n        }\n    }\n    /**\n     * Removes a value from the dictionary\n     *\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\n     */\n    remove(key) {\n        let index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        let val = this.values[index];\n        this.keys.splice(index, 1);\n        this.values.splice(index, 1);\n        return val;\n    }\n    /**\n     * Returns all the keys currently in the dictionary as an array\n     */\n    getKeys() {\n        return this.keys;\n    }\n    /**\n     * Returns all the values currently in the dictionary as an array\n     */\n    getValues() {\n        return this.values;\n    }\n    /**\n     * Clears the current dictionary\n     */\n    clear() {\n        this.keys = [];\n        this.values = [];\n    }\n    /**\n     * Gets a count of the items currently in the dictionary\n     */\n    count() {\n        return this.keys.length;\n    }\n}\nexports.Dictionary = Dictionary;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/collections/collections.js","\"use strict\";\n/**\n * A set of logging levels\n *\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\n/**\n * Class used to subscribe ILogListener and log messages throughout an application\n *\n */\nclass Logger {\n    static get activeLogLevel() {\n        return Logger.instance.activeLogLevel;\n    }\n    static set activeLogLevel(value) {\n        Logger.instance.activeLogLevel = value;\n    }\n    static get instance() {\n        if (typeof Logger._instance === \"undefined\" || Logger._instance === null) {\n            Logger._instance = new LoggerImpl();\n        }\n        return Logger._instance;\n    }\n    /**\n     * Adds ILogListener instances to the set of subscribed listeners\n     *\n     * @param listeners One or more listeners to subscribe to this log\n     */\n    static subscribe(...listeners) {\n        listeners.map(listener => Logger.instance.subscribe(listener));\n    }\n    /**\n     * Clears the subscribers collection, returning the collection before modifiction\n     */\n    static clearSubscribers() {\n        return Logger.instance.clearSubscribers();\n    }\n    /**\n     * Gets the current subscriber count\n     */\n    static get count() {\n        return Logger.instance.count;\n    }\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param message The message to write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    static write(message, level = LogLevel.Verbose) {\n        Logger.instance.log({ level: level, message: message });\n    }\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param json The json object to stringify and write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    static writeJSON(json, level = LogLevel.Verbose) {\n        Logger.instance.log({ level: level, message: JSON.stringify(json) });\n    }\n    /**\n     * Logs the supplied entry to the subscribed listeners\n     *\n     * @param entry The message to log\n     */\n    static log(entry) {\n        Logger.instance.log(entry);\n    }\n    /**\n     * Logs performance tracking data for the the execution duration of the supplied function using console.profile\n     *\n     * @param name The name of this profile boundary\n     * @param f The function to execute and track within this performance boundary\n     */\n    static measure(name, f) {\n        return Logger.instance.measure(name, f);\n    }\n}\nexports.Logger = Logger;\nclass LoggerImpl {\n    constructor(activeLogLevel = LogLevel.Warning, subscribers = []) {\n        this.activeLogLevel = activeLogLevel;\n        this.subscribers = subscribers;\n    }\n    subscribe(listener) {\n        this.subscribers.push(listener);\n    }\n    clearSubscribers() {\n        let s = this.subscribers.slice(0);\n        this.subscribers.length = 0;\n        return s;\n    }\n    get count() {\n        return this.subscribers.length;\n    }\n    write(message, level = LogLevel.Verbose) {\n        this.log({ level: level, message: message });\n    }\n    log(entry) {\n        if (typeof entry === \"undefined\" || entry.level < this.activeLogLevel) {\n            return;\n        }\n        this.subscribers.map(subscriber => subscriber.log(entry));\n    }\n    measure(name, f) {\n        console.profile(name);\n        try {\n            return f();\n        }\n        finally {\n            console.profileEnd();\n        }\n    }\n}\n/**\n * Implementation of ILogListener which logs to the browser console\n *\n */\nclass ConsoleListener {\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    log(entry) {\n        let msg = this.format(entry);\n        switch (entry.level) {\n            case LogLevel.Verbose:\n            case LogLevel.Info:\n                console.log(msg);\n                break;\n            case LogLevel.Warning:\n                console.warn(msg);\n                break;\n            case LogLevel.Error:\n                console.error(msg);\n                break;\n        }\n    }\n    /**\n     * Formats the message\n     *\n     * @param entry The information to format into a string\n     */\n    format(entry) {\n        return \"Message: \" + entry.message + \". Data: \" + JSON.stringify(entry.data);\n    }\n}\nexports.ConsoleListener = ConsoleListener;\n/**\n * Implementation of ILogListener which logs to the supplied function\n *\n */\nclass FunctionListener {\n    /**\n     * Creates a new instance of the FunctionListener class\n     *\n     * @constructor\n     * @param  method The method to which any logging data will be passed\n     */\n    constructor(method) {\n        this.method = method;\n    }\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    log(entry) {\n        this.method(entry);\n    }\n}\nexports.FunctionListener = FunctionListener;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/logging.js","\"use strict\";\nconst search_1 = require(\"./search\");\nconst searchsuggest_1 = require(\"./searchsuggest\");\nconst site_1 = require(\"./site\");\nconst webs_1 = require(\"./webs\");\nconst util_1 = require(\"../utils/util\");\nconst userprofiles_1 = require(\"./userprofiles\");\nconst exceptions_1 = require(\"../utils/exceptions\");\n/**\n * Root of the SharePoint REST module\n */\nclass Rest {\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    searchSuggest(query) {\n        let finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { querytext: query };\n        }\n        else {\n            finalQuery = query;\n        }\n        return new searchsuggest_1.SearchSuggest(\"\").execute(finalQuery);\n    }\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    search(query) {\n        let finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { Querytext: query };\n        }\n        else {\n            finalQuery = query;\n        }\n        return new search_1.Search(\"\").execute(finalQuery);\n    }\n    /**\n     * Begins a site collection scoped REST request\n     *\n     */\n    get site() {\n        return new site_1.Site(\"\");\n    }\n    /**\n     * Begins a web scoped REST request\n     *\n     */\n    get web() {\n        return new webs_1.Web(\"\");\n    }\n    /**\n     * Access to user profile methods\n     *\n     */\n    get profiles() {\n        return new userprofiles_1.UserProfileQuery(\"\");\n    }\n    /**\n     * Creates a new batch object for use with the Queryable.addToBatch method\n     *\n     */\n    createBatch() {\n        return this.web.createBatch();\n    }\n    /**\n     * Begins a cross-domain, host site scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    crossDomainSite(addInWebUrl, hostWebUrl) {\n        return this._cdImpl(site_1.Site, addInWebUrl, hostWebUrl, \"site\");\n    }\n    /**\n     * Begins a cross-domain, host web scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    crossDomainWeb(addInWebUrl, hostWebUrl) {\n        return this._cdImpl(webs_1.Web, addInWebUrl, hostWebUrl, \"web\");\n    }\n    /**\n     * Implements the creation of cross domain REST urls\n     *\n     * @param factory The constructor of the object to create Site | Web\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     * @param urlPart String part to append to the url \"site\" | \"web\"\n     */\n    _cdImpl(factory, addInWebUrl, hostWebUrl, urlPart) {\n        if (!util_1.Util.isUrlAbsolute(addInWebUrl)) {\n            throw new exceptions_1.UrlException(\"The addInWebUrl parameter must be an absolute url.\");\n        }\n        if (!util_1.Util.isUrlAbsolute(hostWebUrl)) {\n            throw new exceptions_1.UrlException(\"The hostWebUrl parameter must be an absolute url.\");\n        }\n        let url = util_1.Util.combinePaths(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\n        let instance = new factory(url, urlPart);\n        instance.query.add(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\n        return instance;\n    }\n}\nexports.Rest = Rest;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/rest.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst util_1 = require(\"../utils/util\");\n/**\n * Describes the search API\n *\n */\nclass Search extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the Search class\n     *\n     * @param baseUrl The url for the search context\n     * @param query The SearchQuery object to execute\n     */\n    constructor(baseUrl, path = \"_api/search/postquery\") {\n        super(baseUrl, path);\n    }\n    /**\n     * .......\n     * @returns Promise\n     */\n    execute(query) {\n        let formattedBody;\n        formattedBody = query;\n        if (formattedBody.SelectProperties) {\n            formattedBody.SelectProperties = { results: query.SelectProperties };\n        }\n        if (formattedBody.RefinementFilters) {\n            formattedBody.RefinementFilters = { results: query.RefinementFilters };\n        }\n        if (formattedBody.SortList) {\n            formattedBody.SortList = { results: query.SortList };\n        }\n        if (formattedBody.HithighlightedProperties) {\n            formattedBody.HithighlightedProperties = { results: query.HithighlightedProperties };\n        }\n        if (formattedBody.ReorderingRules) {\n            formattedBody.ReorderingRules = { results: query.ReorderingRules };\n        }\n        if (formattedBody.Properties) {\n            formattedBody.Properties = { results: query.Properties };\n        }\n        let postBody = JSON.stringify({\n            request: util_1.Util.extend({\n                \"__metadata\": { \"type\": \"Microsoft.Office.Server.Search.REST.SearchRequest\" },\n            }, formattedBody),\n        });\n        return this.post({ body: postBody }).then((data) => new SearchResults(data));\n    }\n}\nexports.Search = Search;\n/**\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\n */\nclass SearchResults {\n    /**\n     * Creates a new instance of the SearchResult class\n     *\n     */\n    constructor(rawResponse) {\n        let response = rawResponse.postquery ? rawResponse.postquery : rawResponse;\n        this.PrimarySearchResults = this.formatSearchResults(response.PrimaryQueryResult.RelevantResults.Table.Rows);\n        this.RawSearchResults = response;\n        this.ElapsedTime = response.ElapsedTime;\n        this.RowCount = response.PrimaryQueryResult.RelevantResults.RowCount;\n        this.TotalRows = response.PrimaryQueryResult.RelevantResults.TotalRows;\n        this.TotalRowsIncludingDuplicates = response.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\n    }\n    /**\n     * Formats a search results array\n     *\n     * @param rawResults The array to process\n     */\n    formatSearchResults(rawResults) {\n        let results = new Array(), tempResults = rawResults.results ? rawResults.results : rawResults;\n        for (let i of tempResults) {\n            results.push(new SearchResult(i.Cells));\n        }\n        return results;\n    }\n}\nexports.SearchResults = SearchResults;\n/**\n * Describes the SearchResult class\n */\nclass SearchResult {\n    /**\n     * Creates a new instance of the SearchResult class\n     *\n     */\n    constructor(rawItem) {\n        let item = rawItem.results ? rawItem.results : rawItem;\n        for (let i of item) {\n            Object.defineProperty(this, i.Key, {\n                configurable: false,\n                enumerable: false,\n                value: i.Value,\n                writable: false,\n            });\n        }\n    }\n}\nexports.SearchResult = SearchResult;\n/**\n * defines the SortDirection enum\n */\nvar SortDirection;\n(function (SortDirection) {\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\n})(SortDirection = exports.SortDirection || (exports.SortDirection = {}));\n/**\n * defines the ReorderingRuleMatchType  enum\n */\nvar ReorderingRuleMatchType;\n(function (ReorderingRuleMatchType) {\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\n})(ReorderingRuleMatchType = exports.ReorderingRuleMatchType || (exports.ReorderingRuleMatchType = {}));\n/**\n * Specifies the type value for the property\n */\nvar QueryPropertyValueType;\n(function (QueryPropertyValueType) {\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32TYpe\"] = 2] = \"Int32TYpe\";\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\n})(QueryPropertyValueType = exports.QueryPropertyValueType || (exports.QueryPropertyValueType = {}));\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/search.js","\"use strict\";\nconst util_1 = require(\"../utils/util\");\nconst collections_1 = require(\"../collections/collections\");\nconst httpclient_1 = require(\"../net/httpclient\");\nconst odata_1 = require(\"./odata\");\nconst caching_1 = require(\"./caching\");\nconst pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nconst exceptions_1 = require(\"../utils/exceptions\");\n/**\n * Queryable Base Class\n *\n */\nclass Queryable {\n    /**\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\n     *\n     * @param pathPart The string to concatonate to the url\n     */\n    concat(pathPart) {\n        this._url += pathPart;\n    }\n    /**\n     * Appends the given string and normalizes \"/\" chars\n     *\n     * @param pathPart The string to append\n     */\n    append(pathPart) {\n        this._url = util_1.Util.combinePaths(this._url, pathPart);\n    }\n    /**\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\n     */\n    addBatchDependency() {\n        if (this.hasBatch) {\n            return this._batch.addBatchDependency();\n        }\n        return () => null;\n    }\n    /**\n     * Indicates if the current query has a batch associated\n     *\n     */\n    get hasBatch() {\n        return this._batch !== null;\n    }\n    /**\n     * Gets the parent url used when creating this instance\n     *\n     */\n    get parentUrl() {\n        return this._parentUrl;\n    }\n    /**\n     * Provides access to the query builder for this url\n     *\n     */\n    get query() {\n        return this._query;\n    }\n    /**\n     * Creates a new instance of the Queryable class\n     *\n     * @constructor\n     * @param baseUrl A string or Queryable that should form the base part of the url\n     *\n     */\n    constructor(baseUrl, path) {\n        this._query = new collections_1.Dictionary();\n        this._batch = null;\n        if (typeof baseUrl === \"string\") {\n            // we need to do some extra parsing to get the parent url correct if we are\n            // being created from just a string.\n            let urlStr = baseUrl;\n            if (util_1.Util.isUrlAbsolute(urlStr) || urlStr.lastIndexOf(\"/\") < 0) {\n                this._parentUrl = urlStr;\n                this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n            else if (urlStr.lastIndexOf(\"/\") > urlStr.lastIndexOf(\"(\")) {\n                // .../items(19)/fields\n                let index = urlStr.lastIndexOf(\"/\");\n                this._parentUrl = urlStr.slice(0, index);\n                path = util_1.Util.combinePaths(urlStr.slice(index), path);\n                this._url = util_1.Util.combinePaths(this._parentUrl, path);\n            }\n            else {\n                // .../items(19)\n                let index = urlStr.lastIndexOf(\"(\");\n                this._parentUrl = urlStr.slice(0, index);\n                this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n        }\n        else {\n            let q = baseUrl;\n            this._parentUrl = q._url;\n            let target = q._query.get(\"@target\");\n            if (target !== null) {\n                this._query.add(\"@target\", target);\n            }\n            this._url = util_1.Util.combinePaths(this._parentUrl, path);\n        }\n    }\n    /**\n     * Adds this query to the supplied batch\n     *\n     * @example\n     * ```\n     *\n     * let b = pnp.sp.createBatch();\n     * pnp.sp.web.inBatch(b).get().then(...);\n     * b.execute().then(...)\n     * ```\n     */\n    inBatch(batch) {\n        if (this._batch !== null) {\n            throw new exceptions_1.AlreadyInBatchException();\n        }\n        this._batch = batch;\n        return this;\n    }\n    /**\n     * Enables caching for this request\n     *\n     * @param options Defines the options used when caching this request\n     */\n    usingCaching(options) {\n        if (!pnplibconfig_1.RuntimeConfig.globalCacheDisable) {\n            this._useCaching = true;\n            this._cachingOptions = options;\n        }\n        return this;\n    }\n    /**\n     * Gets the currentl url, made absolute based on the availability of the _spPageContextInfo object\n     *\n     */\n    toUrl() {\n        return util_1.Util.makeUrlAbsolute(this._url);\n    }\n    /**\n     * Gets the full url with query information\n     *\n     */\n    toUrlAndQuery() {\n        let url = this.toUrl();\n        if (this._query.count() > 0) {\n            url += \"?\";\n            let keys = this._query.getKeys();\n            url += keys.map((key) => `${key}=${this._query.get(key)}`).join(\"&\");\n        }\n        return url;\n    }\n    /**\n     * Executes the currently built request\n     *\n     */\n    get(parser = new odata_1.ODataDefaultParser(), getOptions = {}) {\n        return this.getImpl(getOptions, parser);\n    }\n    getAs(parser = new odata_1.ODataDefaultParser(), getOptions = {}) {\n        return this.getImpl(getOptions, parser);\n    }\n    post(postOptions = {}, parser = new odata_1.ODataDefaultParser()) {\n        return this.postImpl(postOptions, parser);\n    }\n    postAs(postOptions = {}, parser = new odata_1.ODataDefaultParser()) {\n        return this.postImpl(postOptions, parser);\n    }\n    patch(patchOptions = {}, parser = new odata_1.ODataDefaultParser()) {\n        return this.patchImpl(patchOptions, parser);\n    }\n    delete(deleteOptions = {}, parser = new odata_1.ODataDefaultParser()) {\n        return this.deleteImpl(deleteOptions, parser);\n    }\n    /**\n     * Gets a parent for this instance as specified\n     *\n     * @param factory The contructor for the class to create\n     */\n    getParent(factory, baseUrl = this.parentUrl, path) {\n        let parent = new factory(baseUrl, path);\n        let target = this.query.get(\"@target\");\n        if (target !== null) {\n            parent.query.add(\"@target\", target);\n        }\n        return parent;\n    }\n    getImpl(getOptions = {}, parser) {\n        if (this._useCaching) {\n            let options = new caching_1.CachingOptions(this.toUrlAndQuery().toLowerCase());\n            if (typeof this._cachingOptions !== \"undefined\") {\n                options = util_1.Util.extend(options, this._cachingOptions);\n            }\n            // we may not have a valid store, i.e. on node\n            if (options.store !== null) {\n                // check if we have the data in cache and if so return a resolved promise\n                let data = options.store.get(options.key);\n                if (data !== null) {\n                    return new Promise(resolve => resolve(data));\n                }\n            }\n            // if we don't then wrap the supplied parser in the caching parser wrapper\n            // and send things on their way\n            parser = new caching_1.CachingParserWrapper(parser, options);\n        }\n        if (!this.hasBatch) {\n            // we are not part of a batch, so proceed as normal\n            let client = new httpclient_1.HttpClient();\n            return client.get(this.toUrlAndQuery(), getOptions).then((response) => parser.parse(response));\n        }\n        else {\n            return this._batch.add(this.toUrlAndQuery(), \"GET\", getOptions, parser);\n        }\n    }\n    postImpl(postOptions, parser) {\n        if (!this.hasBatch) {\n            // we are not part of a batch, so proceed as normal\n            let client = new httpclient_1.HttpClient();\n            return client.post(this.toUrlAndQuery(), postOptions).then((response) => parser.parse(response));\n        }\n        else {\n            return this._batch.add(this.toUrlAndQuery(), \"POST\", postOptions, parser);\n        }\n    }\n    patchImpl(patchOptions, parser) {\n        if (!this.hasBatch) {\n            // we are not part of a batch, so proceed as normal\n            let client = new httpclient_1.HttpClient();\n            return client.patch(this.toUrlAndQuery(), patchOptions).then((response) => parser.parse(response));\n        }\n        else {\n            return this._batch.add(this.toUrlAndQuery(), \"PATCH\", patchOptions, parser);\n        }\n    }\n    deleteImpl(deleteOptions, parser) {\n        if (!this.hasBatch) {\n            // we are not part of a batch, so proceed as normal\n            let client = new httpclient_1.HttpClient();\n            return client.delete(this.toUrlAndQuery(), deleteOptions).then((response) => parser.parse(response));\n        }\n        else {\n            return this._batch.add(this.toUrlAndQuery(), \"DELETE\", deleteOptions, parser);\n        }\n    }\n}\nexports.Queryable = Queryable;\n/**\n * Represents a REST collection which can be filtered, paged, and selected\n *\n */\nclass QueryableCollection extends Queryable {\n    /**\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\n     *\n     * @param filter The string representing the filter query\n     */\n    filter(filter) {\n        this._query.add(\"$filter\", filter);\n        return this;\n    }\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    select(...selects) {\n        this._query.add(\"$select\", selects.join(\",\"));\n        return this;\n    }\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    expand(...expands) {\n        this._query.add(\"$expand\", expands.join(\",\"));\n        return this;\n    }\n    /**\n     * Orders based on the supplied fields ascending\n     *\n     * @param orderby The name of the field to sort on\n     * @param ascending If false DESC is appended, otherwise ASC (default)\n     */\n    orderBy(orderBy, ascending = true) {\n        let keys = this._query.getKeys();\n        let query = [];\n        let asc = ascending ? \" asc\" : \" desc\";\n        for (let i = 0; i < keys.length; i++) {\n            if (keys[i] === \"$orderby\") {\n                query.push(this._query.get(\"$orderby\"));\n                break;\n            }\n        }\n        query.push(`${orderBy}${asc}`);\n        this._query.add(\"$orderby\", query.join(\",\"));\n        return this;\n    }\n    /**\n     * Skips the specified number of items\n     *\n     * @param skip The number of items to skip\n     */\n    skip(skip) {\n        this._query.add(\"$skip\", skip.toString());\n        return this;\n    }\n    /**\n     * Limits the query to only return the specified number of items\n     *\n     * @param top The query row limit\n     */\n    top(top) {\n        this._query.add(\"$top\", top.toString());\n        return this;\n    }\n}\nexports.QueryableCollection = QueryableCollection;\n/**\n * Represents an instance that can be selected\n *\n */\nclass QueryableInstance extends Queryable {\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    select(...selects) {\n        this._query.add(\"$select\", selects.join(\",\"));\n        return this;\n    }\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    expand(...expands) {\n        this._query.add(\"$expand\", expands.join(\",\"));\n        return this;\n    }\n}\nexports.QueryableInstance = QueryableInstance;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/queryable.js","\"use strict\";\nconst digestcache_1 = require(\"./digestcache\");\nconst util_1 = require(\"../utils/util\");\nconst pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nconst exceptions_1 = require(\"../utils/exceptions\");\nclass HttpClient {\n    constructor() {\n        this._impl = pnplibconfig_1.RuntimeConfig.fetchClientFactory();\n        this._digestCache = new digestcache_1.DigestCache(this);\n    }\n    fetch(url, options = {}) {\n        let opts = util_1.Util.extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\n        let headers = new Headers();\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\n        this.mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.headers);\n        // second we add the local options so we can overwrite the globals\n        this.mergeHeaders(headers, options.headers);\n        // lastly we apply any default headers we need that may not exist\n        if (!headers.has(\"Accept\")) {\n            headers.append(\"Accept\", \"application/json\");\n        }\n        if (!headers.has(\"Content-Type\")) {\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n        }\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:2.0.0\");\n        }\n        opts = util_1.Util.extend(opts, { headers: headers });\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\n            if (!headers.has(\"X-RequestDigest\")) {\n                let index = url.indexOf(\"_api/\");\n                if (index < 0) {\n                    throw new exceptions_1.APIUrlException();\n                }\n                let webUrl = url.substr(0, index);\n                return this._digestCache.getDigest(webUrl)\n                    .then((digest) => {\n                    headers.append(\"X-RequestDigest\", digest);\n                    return this.fetchRaw(url, opts);\n                });\n            }\n        }\n        return this.fetchRaw(url, opts);\n    }\n    fetchRaw(url, options = {}) {\n        // here we need to normalize the headers\n        let rawHeaders = new Headers();\n        this.mergeHeaders(rawHeaders, options.headers);\n        options = util_1.Util.extend(options, { headers: rawHeaders });\n        let retry = (ctx) => {\n            this._impl.fetch(url, options).then((response) => ctx.resolve(response)).catch((response) => {\n                // grab our current delay\n                let delay = ctx.delay;\n                // Check if request was throttled - http status code 429 \n                // Check is request failed due to server unavailable - http status code 503 \n                if (response.status !== 429 && response.status !== 503) {\n                    ctx.reject(response);\n                }\n                // Increment our counters.\n                ctx.delay *= 2;\n                ctx.attempts++;\n                // If we have exceeded the retry count, reject.\n                if (ctx.retryCount <= ctx.attempts) {\n                    ctx.reject(response);\n                }\n                // Set our retry timeout for {delay} milliseconds.\n                setTimeout(util_1.Util.getCtxCallback(this, retry, ctx), delay);\n            });\n        };\n        return new Promise((resolve, reject) => {\n            let retryContext = {\n                attempts: 0,\n                delay: 100,\n                reject: reject,\n                resolve: resolve,\n                retryCount: 7,\n            };\n            retry.call(this, retryContext);\n        });\n    }\n    get(url, options = {}) {\n        let opts = util_1.Util.extend(options, { method: \"GET\" });\n        return this.fetch(url, opts);\n    }\n    post(url, options = {}) {\n        let opts = util_1.Util.extend(options, { method: \"POST\" });\n        return this.fetch(url, opts);\n    }\n    patch(url, options = {}) {\n        let opts = util_1.Util.extend(options, { method: \"PATCH\" });\n        return this.fetch(url, opts);\n    }\n    delete(url, options = {}) {\n        let opts = util_1.Util.extend(options, { method: \"DELETE\" });\n        return this.fetch(url, opts);\n    }\n    mergeHeaders(target, source) {\n        if (typeof source !== \"undefined\" && source !== null) {\n            let temp = new Request(\"\", { headers: source });\n            temp.headers.forEach((value, name) => {\n                target.append(name, value);\n            });\n        }\n    }\n}\nexports.HttpClient = HttpClient;\n;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/net/httpclient.js","\"use strict\";\nconst collections_1 = require(\"../collections/collections\");\nconst util_1 = require(\"../utils/util\");\nconst odata_1 = require(\"../sharepoint/odata\");\nclass CachedDigest {\n}\nexports.CachedDigest = CachedDigest;\nclass DigestCache {\n    constructor(_httpClient, _digests = new collections_1.Dictionary()) {\n        this._httpClient = _httpClient;\n        this._digests = _digests;\n    }\n    getDigest(webUrl) {\n        let cachedDigest = this._digests.get(webUrl);\n        if (cachedDigest !== null) {\n            let now = new Date();\n            if (now < cachedDigest.expiration) {\n                return Promise.resolve(cachedDigest.value);\n            }\n        }\n        let url = util_1.Util.combinePaths(webUrl, \"/_api/contextinfo\");\n        return this._httpClient.fetchRaw(url, {\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            headers: {\n                \"Accept\": \"application/json;odata=verbose\",\n                \"Content-type\": \"application/json;odata=verbose;charset=utf-8\",\n            },\n            method: \"POST\",\n        }).then((response) => {\n            let parser = new odata_1.ODataDefaultParser();\n            return parser.parse(response).then((d) => d.GetContextWebInformation);\n        }).then((data) => {\n            let newCachedDigest = new CachedDigest();\n            newCachedDigest.value = data.FormDigestValue;\n            let seconds = data.FormDigestTimeoutSeconds;\n            let expiration = new Date();\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\n            newCachedDigest.expiration = expiration;\n            this._digests.add(webUrl, newCachedDigest);\n            return newCachedDigest.value;\n        });\n    }\n    clear() {\n        this._digests.clear();\n    }\n}\nexports.DigestCache = DigestCache;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/net/digestcache.js","\"use strict\";\nconst util_1 = require(\"../utils/util\");\nconst logging_1 = require(\"../utils/logging\");\nconst httpclient_1 = require(\"../net/httpclient\");\nconst pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nconst exceptions_1 = require(\"../utils/exceptions\");\nconst exceptions_2 = require(\"../utils/exceptions\");\nfunction extractOdataId(candidate) {\n    if (candidate.hasOwnProperty(\"odata.id\")) {\n        return candidate[\"odata.id\"];\n    }\n    else if (candidate.hasOwnProperty(\"__metadata\") && candidate.__metadata.hasOwnProperty(\"id\")) {\n        return candidate.__metadata.id;\n    }\n    else {\n        throw new exceptions_1.ODataIdException(candidate);\n    }\n}\nexports.extractOdataId = extractOdataId;\nclass ODataParserBase {\n    parse(r) {\n        return new Promise((resolve, reject) => {\n            if (this.handleError(r, reject)) {\n                if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\n                    resolve({});\n                }\n                else {\n                    r.json().then(json => resolve(this.parseODataJSON(json)));\n                }\n            }\n        });\n    }\n    handleError(r, reject) {\n        if (!r.ok) {\n            r.json().then(json => {\n                reject(new exceptions_2.ProcessHttpClientResponseException(r.status, r.statusText, json));\n            });\n        }\n        return r.ok;\n    }\n    parseODataJSON(json) {\n        let result = json;\n        if (json.hasOwnProperty(\"d\")) {\n            if (json.d.hasOwnProperty(\"results\")) {\n                result = json.d.results;\n            }\n            else {\n                result = json.d;\n            }\n        }\n        else if (json.hasOwnProperty(\"value\")) {\n            result = json.value;\n        }\n        return result;\n    }\n}\nexports.ODataParserBase = ODataParserBase;\nclass ODataDefaultParser extends ODataParserBase {\n}\nexports.ODataDefaultParser = ODataDefaultParser;\nclass ODataRawParserImpl {\n    parse(r) {\n        return r.json();\n    }\n}\nexports.ODataRawParserImpl = ODataRawParserImpl;\nclass ODataValueParserImpl extends ODataParserBase {\n    parse(r) {\n        return super.parse(r).then(d => d);\n    }\n}\nclass ODataEntityParserImpl extends ODataParserBase {\n    constructor(factory) {\n        super();\n        this.factory = factory;\n    }\n    parse(r) {\n        return super.parse(r).then(d => {\n            let o = new this.factory(getEntityUrl(d), null);\n            return util_1.Util.extend(o, d);\n        });\n    }\n}\nclass ODataEntityArrayParserImpl extends ODataParserBase {\n    constructor(factory) {\n        super();\n        this.factory = factory;\n    }\n    parse(r) {\n        return super.parse(r).then((d) => {\n            return d.map(v => {\n                let o = new this.factory(getEntityUrl(v), null);\n                return util_1.Util.extend(o, v);\n            });\n        });\n    }\n}\nfunction getEntityUrl(entity) {\n    if (entity.hasOwnProperty(\"odata.editLink\")) {\n        // we are dealign with minimal metadata (default)\n        return util_1.Util.combinePaths(\"_api\", entity[\"odata.editLink\"]);\n    }\n    else if (entity.hasOwnProperty(\"__metadata\")) {\n        // we are dealing with verbose, which has an absolute uri\n        return entity.__metadata.uri;\n    }\n    else {\n        // we are likely dealing with nometadata, so don't error but we won't be able to\n        // chain off these objects\n        logging_1.Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", logging_1.LogLevel.Warning);\n        return \"\";\n    }\n}\nexports.ODataRaw = new ODataRawParserImpl();\nfunction ODataValue() {\n    return new ODataValueParserImpl();\n}\nexports.ODataValue = ODataValue;\nfunction ODataEntity(factory) {\n    return new ODataEntityParserImpl(factory);\n}\nexports.ODataEntity = ODataEntity;\nfunction ODataEntityArray(factory) {\n    return new ODataEntityArrayParserImpl(factory);\n}\nexports.ODataEntityArray = ODataEntityArray;\n/**\n * Manages a batch of OData operations\n */\nclass ODataBatch {\n    constructor(baseUrl, _batchId = util_1.Util.getGUID()) {\n        this.baseUrl = baseUrl;\n        this._batchId = _batchId;\n        this._requests = [];\n        this._batchDependencies = Promise.resolve();\n    }\n    /**\n     * Adds a request to a batch (not designed for public use)\n     *\n     * @param url The full url of the request\n     * @param method The http method GET, POST, etc\n     * @param options Any options to include in the request\n     * @param parser The parser that will hadle the results of the request\n     */\n    add(url, method, options, parser) {\n        let info = {\n            method: method.toUpperCase(),\n            options: options,\n            parser: parser,\n            reject: null,\n            resolve: null,\n            url: url,\n        };\n        let p = new Promise((resolve, reject) => {\n            info.resolve = resolve;\n            info.reject = reject;\n        });\n        this._requests.push(info);\n        return p;\n    }\n    addBatchDependency() {\n        let resolver;\n        let promise = new Promise((resolve) => {\n            resolver = resolve;\n        });\n        this._batchDependencies = this._batchDependencies.then(() => promise);\n        return resolver;\n    }\n    /**\n     * Execute the current batch and resolve the associated promises\n     *\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\n     */\n    execute() {\n        return this._batchDependencies.then(() => this.executeImpl());\n    }\n    executeImpl() {\n        // if we don't have any requests, don't bother sending anything\n        // this could be due to caching further upstream, or just an empty batch \n        if (this._requests.length < 1) {\n            return Promise.resolve();\n        }\n        // build all the requests, send them, pipe results in order to parsers\n        let batchBody = [];\n        let currentChangeSetId = \"\";\n        this._requests.map((reqInfo) => {\n            if (reqInfo.method === \"GET\") {\n                if (currentChangeSetId.length > 0) {\n                    // end an existing change set\n                    batchBody.push(`--changeset_${currentChangeSetId}--\\n\\n`);\n                    currentChangeSetId = \"\";\n                }\n                batchBody.push(`--batch_${this._batchId}\\n`);\n            }\n            else {\n                if (currentChangeSetId.length < 1) {\n                    // start new change set\n                    currentChangeSetId = util_1.Util.getGUID();\n                    batchBody.push(`--batch_${this._batchId}\\n`);\n                    batchBody.push(`Content-Type: multipart/mixed; boundary=\"changeset_${currentChangeSetId}\"\\n\\n`);\n                }\n                batchBody.push(`--changeset_${currentChangeSetId}\\n`);\n            }\n            // common batch part prefix\n            batchBody.push(`Content-Type: application/http\\n`);\n            batchBody.push(`Content-Transfer-Encoding: binary\\n\\n`);\n            let headers = {\n                \"Accept\": \"application/json;\",\n            };\n            if (reqInfo.method !== \"GET\") {\n                let method = reqInfo.method;\n                if (reqInfo.hasOwnProperty(\"options\") && reqInfo.options.hasOwnProperty(\"headers\") && typeof reqInfo.options.headers[\"X-HTTP-Method\"] !== \"undefined\") {\n                    method = reqInfo.options.headers[\"X-HTTP-Method\"];\n                    delete reqInfo.options.headers[\"X-HTTP-Method\"];\n                }\n                batchBody.push(`${method} ${reqInfo.url} HTTP/1.1\\n`);\n                headers = util_1.Util.extend(headers, { \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\" });\n            }\n            else {\n                batchBody.push(`${reqInfo.method} ${reqInfo.url} HTTP/1.1\\n`);\n            }\n            if (typeof pnplibconfig_1.RuntimeConfig.headers !== \"undefined\") {\n                headers = util_1.Util.extend(headers, pnplibconfig_1.RuntimeConfig.headers);\n            }\n            if (reqInfo.options && reqInfo.options.headers) {\n                headers = util_1.Util.extend(headers, reqInfo.options.headers);\n            }\n            for (let name in headers) {\n                if (headers.hasOwnProperty(name)) {\n                    batchBody.push(`${name}: ${headers[name]}\\n`);\n                }\n            }\n            batchBody.push(\"\\n\");\n            if (reqInfo.options.body) {\n                batchBody.push(`${reqInfo.options.body}\\n\\n`);\n            }\n        });\n        if (currentChangeSetId.length > 0) {\n            // Close the changeset\n            batchBody.push(`--changeset_${currentChangeSetId}--\\n\\n`);\n            currentChangeSetId = \"\";\n        }\n        batchBody.push(`--batch_${this._batchId}--\\n`);\n        let batchHeaders = {\n            \"Content-Type\": `multipart/mixed; boundary=batch_${this._batchId}`,\n        };\n        let batchOptions = {\n            \"body\": batchBody.join(\"\"),\n            \"headers\": batchHeaders,\n        };\n        let client = new httpclient_1.HttpClient();\n        let requestUrl = util_1.Util.makeUrlAbsolute(util_1.Util.combinePaths(this.baseUrl, \"/_api/$batch\"));\n        return client.post(requestUrl, batchOptions)\n            .then(r => r.text())\n            .then(this._parseResponse)\n            .then((responses) => {\n            if (responses.length !== this._requests.length) {\n                throw new exceptions_1.BatchParseException(\"Could not properly parse responses to match requests in batch.\");\n            }\n            return responses.reduce((chain, response, index) => {\n                let request = this._requests[index];\n                if (!response.ok) {\n                    request.reject(new Error(response.statusText));\n                }\n                return chain.then(_ => request.parser.parse(response).then(request.resolve).catch(request.reject));\n            }, Promise.resolve());\n        });\n    }\n    /**\n     * Parses the response from a batch request into an array of Response instances\n     *\n     * @param body Text body of the response from the batch request\n     */\n    _parseResponse(body) {\n        return new Promise((resolve, reject) => {\n            let responses = [];\n            let header = \"--batchresponse_\";\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\n            let statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\n            let lines = body.split(\"\\n\");\n            let state = \"batch\";\n            let status;\n            let statusText;\n            for (let i = 0; i < lines.length; ++i) {\n                let line = lines[i];\n                switch (state) {\n                    case \"batch\":\n                        if (line.substr(0, header.length) === header) {\n                            state = \"batchHeaders\";\n                        }\n                        else {\n                            if (line.trim() !== \"\") {\n                                throw new exceptions_1.BatchParseException(`Invalid response, line ${i}`);\n                            }\n                        }\n                        break;\n                    case \"batchHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"status\";\n                        }\n                        break;\n                    case \"status\":\n                        let parts = statusRegExp.exec(line);\n                        if (parts.length !== 3) {\n                            throw new exceptions_1.BatchParseException(`Invalid status, line ${i}`);\n                        }\n                        status = parseInt(parts[1], 10);\n                        statusText = parts[2];\n                        state = \"statusHeaders\";\n                        break;\n                    case \"statusHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"body\";\n                        }\n                        break;\n                    case \"body\":\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\n                        state = \"batch\";\n                        break;\n                }\n            }\n            if (state !== \"status\") {\n                reject(new exceptions_1.BatchParseException(\"Unexpected end of input\"));\n            }\n            resolve(responses);\n        });\n    }\n}\nexports.ODataBatch = ODataBatch;\nclass TextFileParser {\n    parse(r) {\n        return r.text();\n    }\n}\nexports.TextFileParser = TextFileParser;\nclass BlobFileParser {\n    parse(r) {\n        return r.blob();\n    }\n}\nexports.BlobFileParser = BlobFileParser;\nclass JSONFileParser {\n    parse(r) {\n        return r.json();\n    }\n}\nexports.JSONFileParser = JSONFileParser;\nclass BufferFileParser {\n    parse(r) {\n        if (util_1.Util.isFunction(r.arrayBuffer)) {\n            return r.arrayBuffer();\n        }\n        return r.buffer();\n    }\n}\nexports.BufferFileParser = BufferFileParser;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/odata.js","\"use strict\";\nconst fetchclient_1 = require(\"../net/fetchclient\");\nclass RuntimeConfigImpl {\n    constructor() {\n        // these are our default values for the library\n        this._headers = null;\n        this._defaultCachingStore = \"session\";\n        this._defaultCachingTimeoutSeconds = 30;\n        this._globalCacheDisable = false;\n        this._fetchClientFactory = () => new fetchclient_1.FetchClient();\n    }\n    set(config) {\n        if (config.hasOwnProperty(\"headers\")) {\n            this._headers = config.headers;\n        }\n        if (config.hasOwnProperty(\"globalCacheDisable\")) {\n            this._globalCacheDisable = config.globalCacheDisable;\n        }\n        if (config.hasOwnProperty(\"defaultCachingStore\")) {\n            this._defaultCachingStore = config.defaultCachingStore;\n        }\n        if (config.hasOwnProperty(\"defaultCachingTimeoutSeconds\")) {\n            this._defaultCachingTimeoutSeconds = config.defaultCachingTimeoutSeconds;\n        }\n        if (config.hasOwnProperty(\"fetchClientFactory\")) {\n            this._fetchClientFactory = config.fetchClientFactory;\n        }\n    }\n    get headers() {\n        return this._headers;\n    }\n    get defaultCachingStore() {\n        return this._defaultCachingStore;\n    }\n    get defaultCachingTimeoutSeconds() {\n        return this._defaultCachingTimeoutSeconds;\n    }\n    get globalCacheDisable() {\n        return this._globalCacheDisable;\n    }\n    get fetchClientFactory() {\n        return this._fetchClientFactory;\n    }\n}\nexports.RuntimeConfigImpl = RuntimeConfigImpl;\nlet _runtimeConfig = new RuntimeConfigImpl();\nexports.RuntimeConfig = _runtimeConfig;\nfunction setRuntimeConfig(config) {\n    _runtimeConfig.set(config);\n}\nexports.setRuntimeConfig = setRuntimeConfig;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/configuration/pnplibconfig.js","\"use strict\";\n/**\n * Makes requests using the fetch API\n */\nclass FetchClient {\n    fetch(url, options) {\n        return global.fetch(url, options);\n    }\n}\nexports.FetchClient = FetchClient;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/net/fetchclient.js","\"use strict\";\nconst logging_1 = require(\"../utils/logging\");\nfunction defaultLog(error) {\n    logging_1.Logger.log({ data: {}, level: logging_1.LogLevel.Error, message: `[${error.name}]::${error.message}` });\n}\n/**\n * Represents an exception with an HttpClient request\n *\n */\nclass ProcessHttpClientResponseException extends Error {\n    constructor(status, statusText, data) {\n        super(`Error making HttpClient request in queryable: [${status}] ${statusText}`);\n        this.status = status;\n        this.statusText = statusText;\n        this.data = data;\n        this.name = \"ProcessHttpClientResponseException\";\n        logging_1.Logger.log({ data: this.data, level: logging_1.LogLevel.Error, message: this.message });\n    }\n}\nexports.ProcessHttpClientResponseException = ProcessHttpClientResponseException;\nclass NoCacheAvailableException extends Error {\n    constructor(msg = \"Cannot create a caching configuration provider since cache is not available.\") {\n        super(msg);\n        this.name = \"NoCacheAvailableException\";\n        defaultLog(this);\n    }\n}\nexports.NoCacheAvailableException = NoCacheAvailableException;\nclass APIUrlException extends Error {\n    constructor(msg = \"Unable to determine API url.\") {\n        super(msg);\n        this.name = \"APIUrlException\";\n        defaultLog(this);\n    }\n}\nexports.APIUrlException = APIUrlException;\nclass AuthUrlException extends Error {\n    constructor(data, msg = \"Auth URL Endpoint could not be determined from data. Data logged.\") {\n        super(msg);\n        this.name = \"APIUrlException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: this.message });\n    }\n}\nexports.AuthUrlException = AuthUrlException;\nclass NodeFetchClientUnsupportedException extends Error {\n    constructor(msg = \"Using NodeFetchClient in the browser is not supported.\") {\n        super(msg);\n        this.name = \"NodeFetchClientUnsupportedException\";\n        defaultLog(this);\n    }\n}\nexports.NodeFetchClientUnsupportedException = NodeFetchClientUnsupportedException;\nclass SPRequestExecutorUndefinedException extends Error {\n    constructor() {\n        let msg = [\n            \"SP.RequestExecutor is undefined. \",\n            \"Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\",\n        ].join(\" \");\n        super(msg);\n        this.name = \"SPRequestExecutorUndefinedException\";\n        defaultLog(this);\n    }\n}\nexports.SPRequestExecutorUndefinedException = SPRequestExecutorUndefinedException;\nclass MaxCommentLengthException extends Error {\n    constructor(msg = \"The maximum comment length is 1023 characters.\") {\n        super(msg);\n        this.name = \"MaxCommentLengthException\";\n        defaultLog(this);\n    }\n}\nexports.MaxCommentLengthException = MaxCommentLengthException;\nclass NotSupportedInBatchException extends Error {\n    constructor(operation = \"This operation\") {\n        super(`${operation} is not supported as part of a batch.`);\n        this.name = \"NotSupportedInBatchException\";\n        defaultLog(this);\n    }\n}\nexports.NotSupportedInBatchException = NotSupportedInBatchException;\nclass ODataIdException extends Error {\n    constructor(data, msg = \"Could not extract odata id in object, you may be using nometadata. Object data logged to logger.\") {\n        super(msg);\n        this.name = \"ODataIdException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: this.message });\n    }\n}\nexports.ODataIdException = ODataIdException;\nclass BatchParseException extends Error {\n    constructor(msg) {\n        super(msg);\n        this.name = \"BatchParseException\";\n        defaultLog(this);\n    }\n}\nexports.BatchParseException = BatchParseException;\nclass AlreadyInBatchException extends Error {\n    constructor(msg = \"This query is already part of a batch.\") {\n        super(msg);\n        this.name = \"AlreadyInBatchException\";\n        defaultLog(this);\n    }\n}\nexports.AlreadyInBatchException = AlreadyInBatchException;\nclass FunctionExpectedException extends Error {\n    constructor(msg = \"This query is already part of a batch.\") {\n        super(msg);\n        this.name = \"FunctionExpectedException\";\n        defaultLog(this);\n    }\n}\nexports.FunctionExpectedException = FunctionExpectedException;\nclass UrlException extends Error {\n    constructor(msg) {\n        super(msg);\n        this.name = \"UrlException\";\n        defaultLog(this);\n    }\n}\nexports.UrlException = UrlException;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/exceptions.js","\"use strict\";\nconst storage_1 = require(\"../utils/storage\");\nconst util_1 = require(\"../utils/util\");\nconst pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nclass CachingOptions {\n    constructor(key) {\n        this.key = key;\n        this.expiration = util_1.Util.dateAdd(new Date(), \"second\", pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds);\n        this.storeName = pnplibconfig_1.RuntimeConfig.defaultCachingStore;\n    }\n    get store() {\n        if (this.storeName === \"local\") {\n            return CachingOptions.storage.local;\n        }\n        else {\n            return CachingOptions.storage.session;\n        }\n    }\n}\nCachingOptions.storage = new storage_1.PnPClientStorage();\nexports.CachingOptions = CachingOptions;\nclass CachingParserWrapper {\n    constructor(_parser, _cacheOptions) {\n        this._parser = _parser;\n        this._cacheOptions = _cacheOptions;\n    }\n    parse(response) {\n        // add this to the cache based on the options\n        return this._parser.parse(response).then(data => {\n            if (this._cacheOptions.store !== null) {\n                this._cacheOptions.store.put(this._cacheOptions.key, data, this._cacheOptions.expiration);\n            }\n            return data;\n        });\n    }\n}\nexports.CachingParserWrapper = CachingParserWrapper;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/caching.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nclass SearchSuggest extends queryable_1.QueryableInstance {\n    constructor(baseUrl, path = \"_api/search/suggest\") {\n        super(baseUrl, path);\n    }\n    execute(query) {\n        this.mapQueryToQueryString(query);\n        return this.get().then(response => new SearchSuggestResult(response));\n    }\n    mapQueryToQueryString(query) {\n        this.query.add(\"querytext\", `'${query.querytext}'`);\n        if (query.hasOwnProperty(\"count\")) {\n            this.query.add(\"inumberofquerysuggestions\", query.count.toString());\n        }\n        if (query.hasOwnProperty(\"personalCount\")) {\n            this.query.add(\"inumberofresultsuggestions\", query.personalCount.toString());\n        }\n        if (query.hasOwnProperty(\"preQuery\")) {\n            this.query.add(\"fprequerysuggestions\", query.preQuery.toString());\n        }\n        if (query.hasOwnProperty(\"hitHighlighting\")) {\n            this.query.add(\"fhithighlighting\", query.hitHighlighting.toString());\n        }\n        if (query.hasOwnProperty(\"capitalize\")) {\n            this.query.add(\"fcapitalizefirstletters\", query.capitalize.toString());\n        }\n        if (query.hasOwnProperty(\"culture\")) {\n            this.query.add(\"culture\", query.culture.toString());\n        }\n        if (query.hasOwnProperty(\"stemming\")) {\n            this.query.add(\"enablestemming\", query.stemming.toString());\n        }\n        if (query.hasOwnProperty(\"includePeople\")) {\n            this.query.add(\"showpeoplenamesuggestions\", query.includePeople.toString());\n        }\n        if (query.hasOwnProperty(\"queryRules\")) {\n            this.query.add(\"enablequeryrules\", query.queryRules.toString());\n        }\n        if (query.hasOwnProperty(\"prefixMatch\")) {\n            this.query.add(\"fprefixmatchallterms\", query.prefixMatch.toString());\n        }\n    }\n}\nexports.SearchSuggest = SearchSuggest;\nclass SearchSuggestResult {\n    constructor(json) {\n        if (json.hasOwnProperty(\"suggest\")) {\n            // verbose\n            this.PeopleNames = json.suggest.PeopleNames.results;\n            this.PersonalResults = json.suggest.PersonalResults.results;\n            this.Queries = json.suggest.Queries.results;\n        }\n        else {\n            this.PeopleNames = json.PeopleNames;\n            this.PersonalResults = json.PersonalResults;\n            this.Queries = json.Queries;\n        }\n    }\n}\nexports.SearchSuggestResult = SearchSuggestResult;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/searchsuggest.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst webs_1 = require(\"./webs\");\nconst usercustomactions_1 = require(\"./usercustomactions\");\nconst odata_1 = require(\"./odata\");\nconst features_1 = require(\"./features\");\n/**\n * Describes a site collection\n *\n */\nclass Site extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the RoleAssignments class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path = \"_api/site\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets the root web of the site collection\n     *\n     */\n    get rootWeb() {\n        return new webs_1.Web(this, \"rootweb\");\n    }\n    /**\n     * Gets the active features for this site\n     *\n     */\n    get features() {\n        return new features_1.Features(this);\n    }\n    /**\n     * Get all custom actions on a site collection\n     *\n     */\n    get userCustomActions() {\n        return new usercustomactions_1.UserCustomActions(this);\n    }\n    /**\n     * Gets the context information for the site.\n     */\n    getContextInfo() {\n        let q = new Site(this.parentUrl, \"_api/contextinfo\");\n        return q.post().then(data => {\n            if (data.hasOwnProperty(\"GetContextWebInformation\")) {\n                let info = data.GetContextWebInformation;\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\n                return info;\n            }\n            else {\n                return data;\n            }\n        });\n    }\n    /**\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\n     *\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\n     */\n    getDocumentLibraries(absoluteWebUrl) {\n        let q = new queryable_1.Queryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\n        q.query.add(\"@v\", \"'\" + absoluteWebUrl + \"'\");\n        return q.get().then(data => {\n            if (data.hasOwnProperty(\"GetDocumentLibraries\")) {\n                return data.GetDocumentLibraries;\n            }\n            else {\n                return data;\n            }\n        });\n    }\n    /**\n     * Gets the site URL from a page URL.\n     *\n     * @param absolutePageUrl The absolute url of the page\n     */\n    getWebUrlFromPageUrl(absolutePageUrl) {\n        let q = new queryable_1.Queryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\n        q.query.add(\"@v\", \"'\" + absolutePageUrl + \"'\");\n        return q.get().then(data => {\n            if (data.hasOwnProperty(\"GetWebUrlFromPageUrl\")) {\n                return data.GetWebUrlFromPageUrl;\n            }\n            else {\n                return data;\n            }\n        });\n    }\n    /**\n     * Creates a new batch for requests within the context of context this site\n     *\n     */\n    createBatch() {\n        return new odata_1.ODataBatch(this.parentUrl);\n    }\n}\nexports.Site = Site;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/site.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst queryablesecurable_1 = require(\"./queryablesecurable\");\nconst lists_1 = require(\"./lists\");\nconst fields_1 = require(\"./fields\");\nconst navigation_1 = require(\"./navigation\");\nconst sitegroups_1 = require(\"./sitegroups\");\nconst contenttypes_1 = require(\"./contenttypes\");\nconst folders_1 = require(\"./folders\");\nconst roles_1 = require(\"./roles\");\nconst files_1 = require(\"./files\");\nconst util_1 = require(\"../utils/util\");\nconst lists_2 = require(\"./lists\");\nconst siteusers_1 = require(\"./siteusers\");\nconst usercustomactions_1 = require(\"./usercustomactions\");\nconst odata_1 = require(\"./odata\");\nconst features_1 = require(\"./features\");\nclass Webs extends queryable_1.QueryableCollection {\n    constructor(baseUrl, webPath = \"webs\") {\n        super(baseUrl, webPath);\n    }\n    /**\n     * Adds a new web to the collection\n     *\n     * @param title The new web's title\n     * @param url The new web's relative url\n     * @param description The web web's description\n     * @param template The web's template\n     * @param language The language code to use for this web\n     * @param inheritPermissions If true permissions will be inherited from the partent web\n     * @param additionalSettings Will be passed as part of the web creation body\n     */\n    add(title, url, description = \"\", template = \"STS\", language = 1033, inheritPermissions = true, additionalSettings = {}) {\n        let props = util_1.Util.extend({\n            Description: description,\n            Language: language,\n            Title: title,\n            Url: url,\n            UseSamePermissionsAsParentSite: inheritPermissions,\n            WebTemplate: template,\n        }, additionalSettings);\n        let postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\n            }, props),\n        });\n        let q = new Webs(this, \"add\");\n        return q.post({ body: postBody }).then((data) => {\n            return {\n                data: data,\n                web: new Web(odata_1.extractOdataId(data).replace(/_api\\/web\\/?/i, \"\")),\n            };\n        });\n    }\n}\nexports.Webs = Webs;\n/**\n * Describes a web\n *\n */\nclass Web extends queryablesecurable_1.QueryableSecurable {\n    constructor(baseUrl, path = \"_api/web\") {\n        super(baseUrl, path);\n    }\n    get webs() {\n        return new Webs(this);\n    }\n    /**\n     * Get the content types available in this web\n     *\n     */\n    get contentTypes() {\n        return new contenttypes_1.ContentTypes(this);\n    }\n    /**\n     * Get the lists in this web\n     *\n     */\n    get lists() {\n        return new lists_1.Lists(this);\n    }\n    /**\n     * Gets the fields in this web\n     *\n     */\n    get fields() {\n        return new fields_1.Fields(this);\n    }\n    /**\n     * Gets the active features for this web\n     *\n     */\n    get features() {\n        return new features_1.Features(this);\n    }\n    /**\n     * Gets the available fields in this web\n     *\n     */\n    get availablefields() {\n        return new fields_1.Fields(this, \"availablefields\");\n    }\n    /**\n     * Get the navigation options in this web\n     *\n     */\n    get navigation() {\n        return new navigation_1.Navigation(this);\n    }\n    /**\n     * Gets the site users\n     *\n     */\n    get siteUsers() {\n        return new siteusers_1.SiteUsers(this);\n    }\n    /**\n     * Gets the site groups\n     *\n     */\n    get siteGroups() {\n        return new sitegroups_1.SiteGroups(this);\n    }\n    /**\n     * Gets the current user\n     */\n    get currentUser() {\n        return new siteusers_1.CurrentUser(this);\n    }\n    /**\n     * Get the folders in this web\n     *\n     */\n    get folders() {\n        return new folders_1.Folders(this);\n    }\n    /**\n     * Get all custom actions on a site\n     *\n     */\n    get userCustomActions() {\n        return new usercustomactions_1.UserCustomActions(this);\n    }\n    /**\n     * Gets the collection of RoleDefinition resources.\n     *\n     */\n    get roleDefinitions() {\n        return new roles_1.RoleDefinitions(this);\n    }\n    /**\n     * Creates a new batch for requests within the context of context this web\n     *\n     */\n    createBatch() {\n        return new odata_1.ODataBatch(this.parentUrl);\n    }\n    /**\n     * Get a folder by server relative url\n     *\n     * @param folderRelativeUrl the server relative path to the folder (including /sites/ if applicable)\n     */\n    getFolderByServerRelativeUrl(folderRelativeUrl) {\n        return new folders_1.Folder(this, `getFolderByServerRelativeUrl('${folderRelativeUrl}')`);\n    }\n    /**\n     * Get a file by server relative url\n     *\n     * @param fileRelativeUrl the server relative path to the file (including /sites/ if applicable)\n     */\n    getFileByServerRelativeUrl(fileRelativeUrl) {\n        return new files_1.File(this, `getFileByServerRelativeUrl('${fileRelativeUrl}')`);\n    }\n    /**\n     * Get a list by server relative url (list's root folder)\n     *\n     * @param listRelativeUrl the server relative path to the list's root folder (including /sites/ if applicable)\n     */\n    getList(listRelativeUrl) {\n        return new lists_2.List(this, `getList('${listRelativeUrl}')`);\n    }\n    /**\n     * Updates this web intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the web\n     */\n    update(properties) {\n        let postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.Web\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then((data) => {\n            return {\n                data: data,\n                web: this,\n            };\n        });\n    }\n    /**\n     * Delete this web\n     *\n     */\n    delete() {\n        return super.delete();\n    }\n    /**\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site.\n     *\n     * @param colorPaletteUrl Server-relative URL of the color palette file.\n     * @param fontSchemeUrl Server-relative URL of the font scheme.\n     * @param backgroundImageUrl Server-relative URL of the background image.\n     * @param shareGenerated true to store the generated theme files in the root site, or false to store them in this site.\n     */\n    applyTheme(colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\n        let postBody = JSON.stringify({\n            backgroundImageUrl: backgroundImageUrl,\n            colorPaletteUrl: colorPaletteUrl,\n            fontSchemeUrl: fontSchemeUrl,\n            shareGenerated: shareGenerated,\n        });\n        let q = new Web(this, \"applytheme\");\n        return q.post({ body: postBody });\n    }\n    /**\n     * Applies the specified site definition or site template to the Web site that has no template applied to it.\n     *\n     * @param template Name of the site definition or the name of the site template\n     */\n    applyWebTemplate(template) {\n        let q = new Web(this, \"applywebtemplate\");\n        q.concat(`(@t)`);\n        q.query.add(\"@t\", template);\n        return q.post();\n    }\n    /**\n     * Returns whether the current user has the given set of permissions.\n     *\n     * @param perms The high and low permission range.\n     */\n    doesUserHavePermissions(perms) {\n        let q = new Web(this, \"doesuserhavepermissions\");\n        q.concat(`(@p)`);\n        q.query.add(\"@p\", JSON.stringify(perms));\n        return q.get();\n    }\n    /**\n     * Checks whether the specified login name belongs to a valid user in the site. If the user doesn't exist, adds the user to the site.\n     *\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\n     */\n    ensureUser(loginName) {\n        // TODO:: this should resolve to a User\n        let postBody = JSON.stringify({\n            logonName: loginName,\n        });\n        let q = new Web(this, \"ensureuser\");\n        return q.post({ body: postBody });\n    }\n    /**\n     * Returns a collection of site templates available for the site.\n     *\n     * @param language The LCID of the site templates to get.\n     * @param true to include language-neutral site templates; otherwise false\n     */\n    availableWebTemplates(language = 1033, includeCrossLanugage = true) {\n        return new queryable_1.QueryableCollection(this, `getavailablewebtemplates(lcid=${language}, doincludecrosslanguage=${includeCrossLanugage})`);\n    }\n    /**\n     * Returns the list gallery on the site.\n     *\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\n     */\n    /* tslint:disable member-access */\n    getCatalog(type) {\n        let q = new Web(this, `getcatalog(${type})`);\n        q.select(\"Id\");\n        return q.get().then((data) => {\n            return new lists_2.List(odata_1.extractOdataId(data));\n        });\n    }\n    /* tslint:enable */\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\n     */\n    getChanges(query) {\n        let postBody = JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\n        // don't change \"this\" instance, make a new one\n        let q = new Web(this, \"getchanges\");\n        return q.post({ body: postBody });\n    }\n    /**\n     * Gets the custom list templates for the site.\n     *\n     */\n    get customListTemplate() {\n        return new queryable_1.QueryableCollection(this, \"getcustomlisttemplates\");\n    }\n    /**\n     * Returns the user corresponding to the specified member identifier for the current site.\n     *\n     * @param id The ID of the user.\n     */\n    getUserById(id) {\n        return new siteusers_1.SiteUser(this, `getUserById(${id})`);\n    }\n    /**\n     * Returns the name of the image file for the icon that is used to represent the specified file.\n     *\n     * @param filename The file name. If this parameter is empty, the server returns an empty string.\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1.\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\n     */\n    mapToIcon(filename, size = 0, progId = \"\") {\n        let q = new Web(this, `maptoicon(filename='${filename}', progid='${progId}', size=${size})`);\n        return q.get();\n    }\n}\nexports.Web = Web;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/webs.js","\"use strict\";\nconst roles_1 = require(\"./roles\");\nconst queryable_1 = require(\"./queryable\");\nclass QueryableSecurable extends queryable_1.QueryableInstance {\n    /**\n     * Gets the set of role assignments for this item\n     *\n     */\n    get roleAssignments() {\n        return new roles_1.RoleAssignments(this);\n    }\n    /**\n     * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\n     *\n     */\n    get firstUniqueAncestorSecurableObject() {\n        return new queryable_1.QueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\n    }\n    /**\n     * Gets the effective permissions for the user supplied\n     *\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\n     */\n    getUserEffectivePermissions(loginName) {\n        let perms = new queryable_1.Queryable(this, \"getUserEffectivePermissions(@user)\");\n        perms.query.add(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return perms;\n    }\n    /**\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\n     *\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\n     */\n    breakRoleInheritance(copyRoleAssignments = false, clearSubscopes = false) {\n        class Breaker extends queryable_1.Queryable {\n            constructor(baseUrl, copy, clear) {\n                super(baseUrl, `breakroleinheritance(copyroleassignments=${copy}, clearsubscopes=${clear})`);\n            }\n            break() {\n                return this.post();\n            }\n        }\n        let b = new Breaker(this, copyRoleAssignments, clearSubscopes);\n        return b.break();\n    }\n    /**\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\n     *\n     */\n    resetRoleInheritance() {\n        class Resetter extends queryable_1.Queryable {\n            constructor(baseUrl) {\n                super(baseUrl, \"resetroleinheritance\");\n            }\n            reset() {\n                return this.post();\n            }\n        }\n        let r = new Resetter(this);\n        return r.reset();\n    }\n}\nexports.QueryableSecurable = QueryableSecurable;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/queryablesecurable.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst sitegroups_1 = require(\"./sitegroups\");\nconst util_1 = require(\"../utils/util\");\n/**\n * Describes a set of role assignments for the current scope\n *\n */\nclass RoleAssignments extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the RoleAssignments class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path = \"roleassignments\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Adds a new role assignment with the specified principal and role definitions to the collection.\n     *\n     * @param principalId The ID of the user or group to assign permissions to\n     * @param roleDefId The ID of the role definition that defines the permissions to assign\n     *\n     */\n    add(principalId, roleDefId) {\n        let a = new RoleAssignments(this, `addroleassignment(principalid=${principalId}, roledefid=${roleDefId})`);\n        return a.post();\n    }\n    /**\n     * Removes the role assignment with the specified principal and role definition from the collection\n     *\n     * @param principalId The ID of the user or group in the role assignment.\n     * @param roleDefId The ID of the role definition in the role assignment\n     *\n     */\n    remove(principalId, roleDefId) {\n        let a = new RoleAssignments(this, `removeroleassignment(principalid=${principalId}, roledefid=${roleDefId})`);\n        return a.post();\n    }\n    /**\n     * Gets the role assignment associated with the specified principal ID from the collection.\n     *\n     * @param id The id of the role assignment\n     */\n    getById(id) {\n        let ra = new RoleAssignment(this);\n        ra.concat(`(${id})`);\n        return ra;\n    }\n}\nexports.RoleAssignments = RoleAssignments;\nclass RoleAssignment extends queryable_1.QueryableInstance {\n    /**\n * Creates a new instance of the RoleAssignment class\n *\n * @param baseUrl The url or Queryable which forms the parent of this fields collection\n */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    get groups() {\n        return new sitegroups_1.SiteGroups(this, \"groups\");\n    }\n    /**\n     * Get the role definition bindings for this role assignment\n     *\n     */\n    get bindings() {\n        return new RoleDefinitionBindings(this);\n    }\n    /**\n     * Delete this role assignment\n     *\n     */\n    delete() {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    }\n}\nexports.RoleAssignment = RoleAssignment;\nclass RoleDefinitions extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the RoleDefinitions class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path\n     *\n     */\n    constructor(baseUrl, path = \"roledefinitions\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets the role definition with the specified ID from the collection.\n     *\n     * @param id The ID of the role definition.\n     *\n     */\n    getById(id) {\n        return new RoleDefinition(this, `getById(${id})`);\n    }\n    /**\n     * Gets the role definition with the specified name.\n     *\n     * @param name The name of the role definition.\n     *\n     */\n    getByName(name) {\n        return new RoleDefinition(this, `getbyname('${name}')`);\n    }\n    /**\n     * Gets the role definition with the specified type.\n     *\n     * @param name The name of the role definition.\n     *\n     */\n    getByType(roleTypeKind) {\n        return new RoleDefinition(this, `getbytype(${roleTypeKind})`);\n    }\n    /**\n     * Create a role definition\n     *\n     * @param name The new role definition's name\n     * @param description The new role definition's description\n     * @param order The order in which the role definition appears\n     * @param basePermissions The permissions mask for this role definition\n     *\n     */\n    add(name, description, order, basePermissions) {\n        let postBody = JSON.stringify({\n            BasePermissions: util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\n            Description: description,\n            Name: name,\n            Order: order,\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\n        });\n        return this.post({ body: postBody }).then((data) => {\n            return {\n                data: data,\n                definition: this.getById(data.Id),\n            };\n        });\n    }\n}\nexports.RoleDefinitions = RoleDefinitions;\nclass RoleDefinition extends queryable_1.QueryableInstance {\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Updates this web intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the web\n     */\n    /* tslint:disable no-string-literal */\n    update(properties) {\n        if (typeof properties.hasOwnProperty(\"BasePermissions\") !== \"undefined\") {\n            properties[\"BasePermissions\"] = util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, properties[\"BasePermissions\"]);\n        }\n        let postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.RoleDefinition\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then((data) => {\n            let retDef = this;\n            if (properties.hasOwnProperty(\"Name\")) {\n                let parent = this.getParent(RoleDefinitions, this.parentUrl, \"\");\n                retDef = parent.getByName(properties[\"Name\"]);\n            }\n            return {\n                data: data,\n                definition: retDef,\n            };\n        });\n    }\n    /* tslint:enable */\n    /**\n     * Delete this role definition\n     *\n     */\n    delete() {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    }\n}\nexports.RoleDefinition = RoleDefinition;\nclass RoleDefinitionBindings extends queryable_1.QueryableCollection {\n    constructor(baseUrl, path = \"roledefinitionbindings\") {\n        super(baseUrl, path);\n    }\n}\nexports.RoleDefinitionBindings = RoleDefinitionBindings;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/roles.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst siteusers_1 = require(\"./siteusers\");\nconst util_1 = require(\"../utils/util\");\n/**\n * Principal Type enum\n *\n */\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\n/**\n * Describes a collection of site users\n *\n */\nclass SiteGroups extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the SiteUsers class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user collection\n     */\n    constructor(baseUrl, path = \"sitegroups\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Adds a new group to the site collection\n     *\n     * @param props The properties to be updated\n     */\n    add(properties) {\n        let postBody = JSON.stringify(util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties));\n        return this.post({ body: postBody }).then((data) => {\n            return {\n                data: data,\n                group: this.getById(data.Id),\n            };\n        });\n    }\n    /**\n     * Gets a group from the collection by name\n     *\n     * @param email The name of the group\n     */\n    getByName(groupName) {\n        return new SiteGroup(this, `getByName('${groupName}')`);\n    }\n    /**\n     * Gets a group from the collection by id\n     *\n     * @param id The id of the group\n     */\n    getById(id) {\n        let sg = new SiteGroup(this);\n        sg.concat(`(${id})`);\n        return sg;\n    }\n    /**\n     * Removes the group with the specified member ID from the collection.\n     *\n     * @param id The id of the group to remove\n     */\n    removeById(id) {\n        let g = new SiteGroups(this, `removeById('${id}')`);\n        return g.post();\n    }\n    /**\n     * Removes a user from the collection by login name\n     *\n     * @param loginName The login name of the user\n     */\n    removeByLoginName(loginName) {\n        let g = new SiteGroups(this, `removeByLoginName('${loginName}')`);\n        return g.post();\n    }\n}\nexports.SiteGroups = SiteGroups;\n/**\n * Describes a single group\n *\n */\nclass SiteGroup extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the Group class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this site group\n     * @param path Optional, passes the path to the group\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Get's the users for this group\n     *\n     */\n    get users() {\n        return new siteusers_1.SiteUsers(this, \"users\");\n    }\n    /**\n    * Updates this group instance with the supplied properties\n    *\n    * @param properties A GroupWriteableProperties object of property names and values to update for the user\n    */\n    /* tslint:disable no-string-literal */\n    update(properties) {\n        let postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties);\n        return this.post({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then((data) => {\n            let retGroup = this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retGroup = this.getParent(SiteGroup, this.parentUrl, `getByName('${properties[\"Title\"]}')`);\n            }\n            return {\n                data: data,\n                group: retGroup,\n            };\n        });\n    }\n}\nexports.SiteGroup = SiteGroup;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/sitegroups.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst sitegroups_1 = require(\"./sitegroups\");\nconst util_1 = require(\"../utils/util\");\n/**\n * Describes a collection of all site collection users\n *\n */\nclass SiteUsers extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the Users class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user collection\n     */\n    constructor(baseUrl, path = \"siteusers\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a user from the collection by email\n     *\n     * @param email The email of the user\n     */\n    getByEmail(email) {\n        return new SiteUser(this, `getByEmail('${email}')`);\n    }\n    /**\n     * Gets a user from the collection by id\n     *\n     * @param id The id of the user\n     */\n    getById(id) {\n        return new SiteUser(this, `getById(${id})`);\n    }\n    /**\n     * Gets a user from the collection by login name\n     *\n     * @param loginName The email address of the user\n     */\n    getByLoginName(loginName) {\n        let su = new SiteUser(this);\n        su.concat(\"(@v)\");\n        su.query.add(\"@v\", encodeURIComponent(loginName));\n        return su;\n    }\n    /**\n     * Removes a user from the collection by id\n     *\n     * @param id The id of the user\n     */\n    removeById(id) {\n        let o = new SiteUsers(this, `removeById(${id})`);\n        return o.post();\n    }\n    /**\n     * Removes a user from the collection by login name\n     *\n     * @param loginName The login name of the user\n     */\n    removeByLoginName(loginName) {\n        let o = new SiteUsers(this, `removeByLoginName(@v)`);\n        o.query.add(\"@v\", encodeURIComponent(loginName));\n        return o.post();\n    }\n    /**\n     * Add a user to a group\n     *\n     * @param loginName The login name of the user to add to the group\n     *\n     */\n    add(loginName) {\n        let postBody = JSON.stringify({ \"__metadata\": { \"type\": \"SP.User\" }, LoginName: loginName });\n        return this.post({ body: postBody }).then(() => this.getByLoginName(loginName));\n    }\n}\nexports.SiteUsers = SiteUsers;\n/**\n * Describes a single user\n *\n */\nclass SiteUser extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the User class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional, passes the path to the user\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Get's the groups for this user.\n     *\n     */\n    get groups() {\n        return new sitegroups_1.SiteGroups(this, \"groups\");\n    }\n    /**\n    * Updates this user instance with the supplied properties\n    *\n    * @param properties A plain object of property names and values to update for the user\n    */\n    update(properties) {\n        let postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.User\" } }, properties);\n        return this.post({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then((data) => {\n            return {\n                data: data,\n                user: this,\n            };\n        });\n    }\n    /**\n     * Delete this user\n     *\n     */\n    delete() {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    }\n}\nexports.SiteUser = SiteUser;\n/**\n * Represents the current user\n */\nclass CurrentUser extends queryable_1.QueryableInstance {\n    constructor(baseUrl, path = \"currentuser\") {\n        super(baseUrl, path);\n    }\n}\nexports.CurrentUser = CurrentUser;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/siteusers.js","\"use strict\";\nconst items_1 = require(\"./items\");\nconst views_1 = require(\"./views\");\nconst contenttypes_1 = require(\"./contenttypes\");\nconst fields_1 = require(\"./fields\");\nconst forms_1 = require(\"./forms\");\nconst subscriptions_1 = require(\"./subscriptions\");\nconst queryable_1 = require(\"./queryable\");\nconst queryablesecurable_1 = require(\"./queryablesecurable\");\nconst util_1 = require(\"../utils/util\");\nconst usercustomactions_1 = require(\"./usercustomactions\");\nconst odata_1 = require(\"./odata\");\nconst exceptions_1 = require(\"../utils/exceptions\");\n/**\n * Describes a collection of List objects\n *\n */\nclass Lists extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path = \"lists\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a list from the collection by title\n     *\n     * @param title The title of the list\n     */\n    getByTitle(title) {\n        return new List(this, `getByTitle('${title}')`);\n    }\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the list (GUID)\n     */\n    getById(id) {\n        let list = new List(this);\n        list.concat(`('${id}')`);\n        return list;\n    }\n    /**\n     * Adds a new list to the collection\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body\n     */\n    add(title, description = \"\", template = 100, enableContentTypes = false, additionalSettings = {}) {\n        let postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.List\" },\n            \"AllowContentTypes\": enableContentTypes,\n            \"BaseTemplate\": template,\n            \"ContentTypesEnabled\": enableContentTypes,\n            \"Description\": description,\n            \"Title\": title,\n        }, additionalSettings));\n        return this.post({ body: postBody }).then((data) => {\n            return { data: data, list: this.getByTitle(title) };\n        });\n    }\n    /**\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\n     */\n    ensure(title, description = \"\", template = 100, enableContentTypes = false, additionalSettings = {}) {\n        if (this.hasBatch) {\n            throw new exceptions_1.NotSupportedInBatchException(\"The ensure list method\");\n        }\n        return new Promise((resolve, reject) => {\n            let list = this.getByTitle(title);\n            list.get().then(_ => {\n                list.update(additionalSettings).then(d => {\n                    resolve({ created: false, data: d, list: list });\n                }).catch(e => reject(e));\n            }).catch(() => {\n                this.add(title, description, template, enableContentTypes, additionalSettings).then((r) => {\n                    resolve({ created: true, data: r.data, list: this.getByTitle(title) });\n                });\n            }).catch((e) => reject(e));\n        });\n    }\n    /**\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\n     */\n    ensureSiteAssetsLibrary() {\n        let q = new Lists(this, \"ensuresiteassetslibrary\");\n        return q.post().then((json) => {\n            return new List(odata_1.extractOdataId(json));\n        });\n    }\n    /**\n     * Gets a list that is the default location for wiki pages.\n     */\n    ensureSitePagesLibrary() {\n        let q = new Lists(this, \"ensuresitepageslibrary\");\n        return q.post().then((json) => {\n            return new List(odata_1.extractOdataId(json));\n        });\n    }\n}\nexports.Lists = Lists;\n/**\n * Describes a single List instance\n *\n */\nclass List extends queryablesecurable_1.QueryableSecurable {\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets the content types in this list\n     *\n     */\n    get contentTypes() {\n        return new contenttypes_1.ContentTypes(this);\n    }\n    /**\n     * Gets the items in this list\n     *\n     */\n    get items() {\n        return new items_1.Items(this);\n    }\n    /**\n     * Gets the views in this list\n     *\n     */\n    get views() {\n        return new views_1.Views(this);\n    }\n    /**\n     * Gets the fields in this list\n     *\n     */\n    get fields() {\n        return new fields_1.Fields(this);\n    }\n    /**\n     * Gets the forms in this list\n     *\n     */\n    get forms() {\n        return new forms_1.Forms(this);\n    }\n    /**\n     * Gets the default view of this list\n     *\n     */\n    get defaultView() {\n        return new queryable_1.QueryableInstance(this, \"DefaultView\");\n    }\n    /**\n     * Get all custom actions on a site collection\n     *\n     */\n    get userCustomActions() {\n        return new usercustomactions_1.UserCustomActions(this);\n    }\n    /**\n     * Gets the effective base permissions of this list\n     *\n     */\n    get effectiveBasePermissions() {\n        return new queryable_1.Queryable(this, \"EffectiveBasePermissions\");\n    }\n    /**\n     * Gets the event receivers attached to this list\n     *\n     */\n    get eventReceivers() {\n        return new queryable_1.QueryableCollection(this, \"EventReceivers\");\n    }\n    /**\n     * Gets the related fields of this list\n     *\n     */\n    get relatedFields() {\n        return new queryable_1.Queryable(this, \"getRelatedFields\");\n    }\n    /**\n     * Gets the IRM settings for this list\n     *\n     */\n    get informationRightsManagementSettings() {\n        return new queryable_1.Queryable(this, \"InformationRightsManagementSettings\");\n    }\n    /**\n     * Gets the webhook subscriptions of this list\n     *\n     */\n    get subscriptions() {\n        return new subscriptions_1.Subscriptions(this);\n    }\n    /**\n     * Gets a view by view guid id\n     *\n     */\n    getView(viewId) {\n        return new views_1.View(this, `getView('${viewId}')`);\n    }\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    /* tslint:disable no-string-literal */\n    update(properties, eTag = \"*\") {\n        let postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then((data) => {\n            let retList = this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retList = this.getParent(List, this.parentUrl, `getByTitle('${properties[\"Title\"]}')`);\n            }\n            return {\n                data: data,\n                list: retList,\n            };\n        });\n    }\n    /* tslint:enable */\n    /**\n     * Delete this list\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    delete(eTag = \"*\") {\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    }\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\n     */\n    getChanges(query) {\n        let postBody = JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\n        // don't change \"this\" instance of the List, make a new one\n        let q = new List(this, \"getchanges\");\n        return q.post({ body: postBody });\n    }\n    /**\n     * Returns a collection of items from the list based on the specified query.\n     *\n     * @param CamlQuery The Query schema of Collaborative Application Markup\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\n     * to define queries against list data.\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\n     *\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\n     * the Entry or Collection of Entries identified by the Resource Path\n     * section of the URI must be represented inline (i.e. eagerly loaded).\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\n     *\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\n     */\n    getItemsByCAMLQuery(query, ...expands) {\n        let postBody = JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) });\n        // don't change \"this\" instance of the List, make a new one\n        let q = new List(this, \"getitems\");\n        q = q.expand.apply(q, expands);\n        return q.post({ body: postBody });\n    }\n    /**\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\n     */\n    getListItemChangesSinceToken(query) {\n        let postBody = JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) });\n        // don't change \"this\" instance of the List, make a new one\n        let q = new List(this, \"getlistitemchangessincetoken\");\n        // note we are using a custom parser to return text as the response is an xml doc\n        return q.post({ body: postBody }, { parse(r) { return r.text(); } });\n    }\n    /**\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    recycle() {\n        this.append(\"recycle\");\n        return this.post().then(data => {\n            if (data.hasOwnProperty(\"Recycle\")) {\n                return data.Recycle;\n            }\n            else {\n                return data;\n            }\n        });\n    }\n    /**\n     * Renders list data based on the view xml provided\n     */\n    renderListData(viewXml) {\n        // don't change \"this\" instance of the List, make a new one\n        let q = new List(this, \"renderlistdata(@viewXml)\");\n        q.query.add(\"@viewXml\", \"'\" + viewXml + \"'\");\n        return q.post().then(data => {\n            // data will be a string, so we parse it again\n            data = JSON.parse(data);\n            if (data.hasOwnProperty(\"RenderListData\")) {\n                return data.RenderListData;\n            }\n            else {\n                return data;\n            }\n        });\n    }\n    /**\n     * Gets the field values and field schema attributes for a list item.\n     */\n    renderListFormData(itemId, formId, mode) {\n        // don't change \"this\" instance of the List, make a new one\n        let q = new List(this, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode=\" + mode + \")\");\n        return q.post().then(data => {\n            // data will be a string, so we parse it again\n            data = JSON.parse(data);\n            if (data.hasOwnProperty(\"ListData\")) {\n                return data.ListData;\n            }\n            else {\n                return data;\n            }\n        });\n    }\n    /**\n     * Reserves a list item ID for idempotent list item creation.\n     */\n    reserveListItemId() {\n        // don't change \"this\" instance of the List, make a new one\n        let q = new List(this, \"reservelistitemid\");\n        return q.post().then(data => {\n            if (data.hasOwnProperty(\"ReserveListItemId\")) {\n                return data.ReserveListItemId;\n            }\n            else {\n                return data;\n            }\n        });\n    }\n    /**\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items\n     *\n     */\n    getListItemEntityTypeFullName() {\n        let q = new queryable_1.QueryableInstance(this);\n        return q.select(\"ListItemEntityTypeFullName\").getAs().then(o => o.ListItemEntityTypeFullName);\n    }\n}\nexports.List = List;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/lists.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst queryablesecurable_1 = require(\"./queryablesecurable\");\nconst folders_1 = require(\"./folders\");\nconst files_1 = require(\"./files\");\nconst contenttypes_1 = require(\"./contenttypes\");\nconst util_1 = require(\"../utils/util\");\nconst odata_1 = require(\"./odata\");\nconst attachmentfiles_1 = require(\"./attachmentfiles\");\nconst lists_1 = require(\"./lists\");\n/**\n * Describes a collection of Item objects\n *\n */\nclass Items extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the Items class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path = \"items\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets an Item by id\n     *\n     * @param id The integer id of the item to retrieve\n     */\n    getById(id) {\n        let i = new Item(this);\n        i.concat(`(${id})`);\n        return i;\n    }\n    /**\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\n     *\n     * @param skip The starting id where the page should start, use with top to specify pages\n     */\n    skip(skip) {\n        this._query.add(\"$skiptoken\", encodeURIComponent(`Paged=TRUE&p_ID=${skip}`));\n        return this;\n    }\n    /**\n     * Gets a collection designed to aid in paging through data\n     *\n     */\n    getPaged() {\n        return this.getAs(new PagedItemCollectionParser());\n    }\n    /**\n     * Adds a new item to the collection\n     *\n     * @param properties The new items's properties\n     */\n    add(properties = {}, listItemEntityTypeFullName = null) {\n        let doAdd = (listItemEntityType) => {\n            let postBody = JSON.stringify(util_1.Util.extend({\n                \"__metadata\": { \"type\": listItemEntityType },\n            }, properties));\n            return this.postAs({ body: postBody }).then((data) => {\n                return {\n                    data: data,\n                    item: this.getById(data.Id),\n                };\n            });\n        };\n        if (!listItemEntityTypeFullName) {\n            let parentList = this.getParent(lists_1.List);\n            let removeDependency = this.addBatchDependency();\n            return parentList.getListItemEntityTypeFullName().then(n => {\n                let promise = doAdd(n);\n                removeDependency();\n                return promise;\n            });\n        }\n        else {\n            return doAdd(listItemEntityTypeFullName);\n        }\n    }\n}\nexports.Items = Items;\n/**\n * Descrines a single Item instance\n *\n */\nclass Item extends queryablesecurable_1.QueryableSecurable {\n    /**\n     * Creates a new instance of the Items class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets the set of attachments for this item\n     *\n     */\n    get attachmentFiles() {\n        return new attachmentfiles_1.AttachmentFiles(this);\n    }\n    /**\n     * Gets the content type for this item\n     *\n     */\n    get contentType() {\n        return new contenttypes_1.ContentType(this, \"ContentType\");\n    }\n    /**\n     * Gets the effective base permissions for the item\n     *\n     */\n    get effectiveBasePermissions() {\n        return new queryable_1.Queryable(this, \"EffectiveBasePermissions\");\n    }\n    /**\n     * Gets the effective base permissions for the item in a UI context\n     *\n     */\n    get effectiveBasePermissionsForUI() {\n        return new queryable_1.Queryable(this, \"EffectiveBasePermissionsForUI\");\n    }\n    /**\n     * Gets the field values for this list item in their HTML representation\n     *\n     */\n    get fieldValuesAsHTML() {\n        return new queryable_1.QueryableInstance(this, \"FieldValuesAsHTML\");\n    }\n    /**\n     * Gets the field values for this list item in their text representation\n     *\n     */\n    get fieldValuesAsText() {\n        return new queryable_1.QueryableInstance(this, \"FieldValuesAsText\");\n    }\n    /**\n     * Gets the field values for this list item for use in editing controls\n     *\n     */\n    get fieldValuesForEdit() {\n        return new queryable_1.QueryableInstance(this, \"FieldValuesForEdit\");\n    }\n    /**\n     * Gets the folder associated with this list item (if this item represents a folder)\n     *\n     */\n    get folder() {\n        return new folders_1.Folder(this, \"folder\");\n    }\n    /**\n     * Gets the folder associated with this list item (if this item represents a folder)\n     *\n     */\n    get file() {\n        return new files_1.File(this, \"file\");\n    }\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    update(properties, eTag = \"*\") {\n        return new Promise((resolve, reject) => {\n            let removeDependency = this.addBatchDependency();\n            let parentList = this.getParent(queryable_1.QueryableInstance, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\")));\n            parentList.select(\"ListItemEntityTypeFullName\").getAs().then((d) => {\n                let postBody = JSON.stringify(util_1.Util.extend({\n                    \"__metadata\": { \"type\": d.ListItemEntityTypeFullName },\n                }, properties));\n                this.post({\n                    body: postBody,\n                    headers: {\n                        \"IF-Match\": eTag,\n                        \"X-HTTP-Method\": \"MERGE\",\n                    },\n                }, new ItemUpdatedParser()).then((data) => {\n                    removeDependency();\n                    resolve({\n                        data: data,\n                        item: this,\n                    });\n                });\n            }).catch(e => reject(e));\n        });\n    }\n    /**\n     * Delete this item\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    delete(eTag = \"*\") {\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    }\n    /**\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    recycle() {\n        let i = new Item(this, \"recycle\");\n        return i.post();\n    }\n    /**\n     * Gets a string representation of the full URL to the WOPI frame.\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\n     *\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\n     */\n    getWopiFrameUrl(action = 0) {\n        let i = new Item(this, \"getWOPIFrameUrl(@action)\");\n        i._query.add(\"@action\", action);\n        return i.post().then((data) => {\n            return data.GetWOPIFrameUrl;\n        });\n    }\n    /**\n     * Validates and sets the values of the specified collection of fields for the list item.\n     *\n     * @param formValues The fields to change and their new values.\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\n     */\n    /* tslint:disable max-line-length */\n    validateUpdateListItem(formValues, newDocumentUpdate = false) {\n        let postBody = JSON.stringify({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate });\n        let item = new Item(this, \"validateupdatelistitem\");\n        return item.post({ body: postBody });\n    }\n}\nexports.Item = Item;\n/**\n * Provides paging functionality for list items\n */\nclass PagedItemCollection {\n    constructor(nextUrl, results) {\n        this.nextUrl = nextUrl;\n        this.results = results;\n    }\n    /**\n     * If true there are more results available in the set, otherwise there are not\n     */\n    get hasNext() {\n        return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\n    }\n    /**\n     * Gets the next set of results, or resolves to null if no results are available\n     */\n    getNext() {\n        if (this.hasNext) {\n            let items = new Items(this.nextUrl, null);\n            return items.getPaged();\n        }\n        return new Promise(r => r(null));\n    }\n}\nexports.PagedItemCollection = PagedItemCollection;\nclass PagedItemCollectionParser extends odata_1.ODataParserBase {\n    parse(r) {\n        return new Promise((resolve, reject) => {\n            if (this.handleError(r, reject)) {\n                r.json().then(json => {\n                    let nextUrl = json.hasOwnProperty(\"d\") && json.d.hasOwnProperty(\"__next\") ? json.d.__next : json[\"odata.nextLink\"];\n                    resolve(new PagedItemCollection(nextUrl, this.parseODataJSON(json)));\n                });\n            }\n        });\n    }\n}\nclass ItemUpdatedParser extends odata_1.ODataParserBase {\n    parse(r) {\n        return new Promise((resolve, reject) => {\n            if (this.handleError(r, reject)) {\n                resolve({\n                    \"odata.etag\": r.headers.get(\"etag\"),\n                });\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/items.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst files_1 = require(\"./files\");\nconst items_1 = require(\"./items\");\n/**\n * Describes a collection of Folder objects\n *\n */\nclass Folders extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the Folders class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path = \"folders\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a folder by folder name\n     *\n     */\n    getByName(name) {\n        let f = new Folder(this);\n        f.concat(`('${name}')`);\n        return f;\n    }\n    /**\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\n     *\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\n     * @returns The new Folder and the raw response.\n     */\n    add(url) {\n        return new Folders(this, `add('${url}')`).post().then((response) => {\n            return {\n                data: response,\n                folder: this.getByName(url),\n            };\n        });\n    }\n}\nexports.Folders = Folders;\n/**\n * Describes a single Folder instance\n *\n */\nclass Folder extends queryable_1.QueryableInstance {\n    //\n    // TODO:\n    //      Properties (https://msdn.microsoft.com/en-us/library/office/dn450841.aspx#bk_FolderProperties)\n    //          UniqueContentTypeOrder (setter)\n    //          WelcomePage (setter)\n    //\n    /**\n     * Creates a new instance of the Folder class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Specifies the sequence in which content types are displayed.\n     *\n     */\n    get contentTypeOrder() {\n        return new queryable_1.QueryableCollection(this, \"contentTypeOrder\");\n    }\n    /**\n     * Gets this folder's files\n     *\n     */\n    get files() {\n        return new files_1.Files(this);\n    }\n    /**\n     * Gets this folder's sub folders\n     *\n     */\n    get folders() {\n        return new Folders(this);\n    }\n    /**\n     * Gets this folder's list item\n     *\n     */\n    get listItemAllFields() {\n        return new items_1.Item(this, \"listItemAllFields\");\n    }\n    /**\n     * Gets the parent folder, if available\n     *\n     */\n    get parentFolder() {\n        return new Folder(this, \"parentFolder\");\n    }\n    /**\n     * Gets this folder's properties\n     *\n     */\n    get properties() {\n        return new queryable_1.QueryableInstance(this, \"properties\");\n    }\n    /**\n     * Gets this folder's server relative url\n     *\n     */\n    get serverRelativeUrl() {\n        return new queryable_1.Queryable(this, \"serverRelativeUrl\");\n    }\n    /**\n     * Gets a value that specifies the content type order.\n     *\n     */\n    get uniqueContentTypeOrder() {\n        return new queryable_1.QueryableCollection(this, \"uniqueContentTypeOrder\");\n    }\n    /**\n    * Delete this folder\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    delete(eTag = \"*\") {\n        return new Folder(this).post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    }\n    /**\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    recycle() {\n        return new Folder(this, \"recycle\").post();\n    }\n}\nexports.Folder = Folder;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/folders.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst items_1 = require(\"./items\");\nconst odata_1 = require(\"./odata\");\nconst util_1 = require(\"../utils/util\");\nconst exceptions_1 = require(\"../utils/exceptions\");\n/**\n * Describes a collection of File objects\n *\n */\nclass Files extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the Files class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path = \"files\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    getByName(name) {\n        let f = new File(this);\n        f.concat(`('${name}')`);\n        return f;\n    }\n    /**\n     * Uploads a file.\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The file contents blob.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @returns The new File and the raw response.\n     */\n    add(url, content, shouldOverWrite = true) {\n        return new Files(this, `add(overwrite=${shouldOverWrite},url='${url}')`)\n            .post({\n            body: content,\n        }).then((response) => {\n            return {\n                data: response,\n                file: this.getByName(url),\n            };\n        });\n    }\n    /**\n     * Uploads a file.\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The Blob file content to add\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     * @returns The new File and the raw response.\n     */\n    addChunked(url, content, progress, shouldOverWrite = true, chunkSize = 10485760) {\n        let adder = new Files(this, `add(overwrite=${shouldOverWrite},url='${url}')`);\n        return adder.post().then(() => this.getByName(url)).then(file => file.setContentChunked(content, progress, chunkSize)).then((response) => {\n            return {\n                data: response,\n                file: this.getByName(url),\n            };\n        });\n    }\n    /**\n     * Adds a ghosted file to an existing list or document library.\n     *\n     * @param fileUrl The server-relative url where you want to save the file.\n     * @param templateFileType The type of use to create the file.\n     * @returns The template file that was added and the raw response.\n     */\n    addTemplateFile(fileUrl, templateFileType) {\n        return new Files(this, `addTemplateFile(urloffile='${fileUrl}',templatefiletype=${templateFileType})`)\n            .post().then((response) => {\n            return {\n                data: response,\n                file: this.getByName(fileUrl),\n            };\n        });\n    }\n}\nexports.Files = Files;\n/**\n * Describes a single File instance\n *\n */\nclass File extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the File class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a value that specifies the list item field values for the list item corresponding to the file.\n     *\n     */\n    get listItemAllFields() {\n        return new items_1.Item(this, \"listItemAllFields\");\n    }\n    /**\n     * Gets a collection of versions\n     *\n     */\n    get versions() {\n        return new Versions(this);\n    }\n    /**\n     * Approves the file submitted for content approval with the specified comment.\n     * Only documents in lists that are enabled for content approval can be approved.\n     *\n     * @param comment The comment for the approval.\n     */\n    approve(comment) {\n        return new File(this, `approve(comment='${comment}')`).post();\n    }\n    /**\n     * Stops the chunk upload session without saving the uploaded data.\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     */\n    cancelUpload(uploadId) {\n        return new File(this, `cancelUpload(uploadId=guid'${uploadId}')`).post();\n    }\n    /**\n     * Checks the file in to a document library based on the check-in type.\n     *\n     * @param comment A comment for the check-in. Its length must be <= 1023.\n     * @param checkinType The check-in type for the file.\n     */\n    checkin(comment = \"\", checkinType = CheckinType.Major) {\n        // TODO: Enforce comment length <= 1023\n        return new File(this, `checkin(comment='${comment}',checkintype=${checkinType})`).post();\n    }\n    /**\n     * Checks out the file from a document library.\n     */\n    checkout() {\n        return new File(this, \"checkout\").post();\n    }\n    /**\n     * Copies the file to the destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to copy to.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\n     */\n    copyTo(url, shouldOverWrite = true) {\n        return new File(this, `copyTo(strnewurl='${url}',boverwrite=${shouldOverWrite})`).post();\n    }\n    /**\n     * Delete this file.\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    delete(eTag = \"*\") {\n        return new File(this).post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    }\n    /**\n     * Denies approval for a file that was submitted for content approval.\n     * Only documents in lists that are enabled for content approval can be denied.\n     *\n     * @param comment The comment for the denial.\n     */\n    deny(comment = \"\") {\n        return new File(this, `deny(comment='${comment}')`).post();\n    }\n    /**\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\n     * An exception is thrown if the file is not an ASPX page.\n     *\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\n     */\n    getLimitedWebPartManager(scope = WebPartsPersonalizationScope.User) {\n        return new queryable_1.Queryable(this, `getLimitedWebPartManager(scope=${scope})`);\n    }\n    /**\n     * Moves the file to the specified destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to move to.\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\n     */\n    moveTo(url, moveOperations = MoveOperations.Overwrite) {\n        return new File(this, `moveTo(newurl='${url}',flags=${moveOperations})`).post();\n    }\n    /**\n     * Submits the file for content approval with the specified comment.\n     *\n     * @param comment The comment for the published file. Its length must be <= 1023.\n     */\n    publish(comment = \"\") {\n        return new File(this, `publish(comment='${comment}')`).post();\n    }\n    /**\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     *\n     * @returns The GUID of the recycled file.\n     */\n    recycle() {\n        return new File(this, \"recycle\").post();\n    }\n    /**\n     * Reverts an existing checkout for the file.\n     *\n     */\n    undoCheckout() {\n        return new File(this, \"undoCheckout\").post();\n    }\n    /**\n     * Removes the file from content approval or unpublish a major version.\n     *\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\n     */\n    unpublish(comment = \"\") {\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return new File(this, `unpublish(comment='${comment}')`).post();\n    }\n    /**\n     * Gets the contents of the file as text\n     *\n     */\n    getText() {\n        return new File(this, \"$value\").get(new odata_1.TextFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    }\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js\n     *\n     */\n    getBlob() {\n        return new File(this, \"$value\").get(new odata_1.BlobFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    }\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    getBuffer() {\n        return new File(this, \"$value\").get(new odata_1.BufferFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    }\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    getJSON() {\n        return new File(this, \"$value\").get(new odata_1.JSONFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    }\n    /**\n     * Sets the content of a file, for large files use setContentChunked\n     *\n     * @param content The file content\n     *\n     */\n    setContent(content) {\n        let setter = new File(this, \"$value\");\n        return setter.post({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(_ => new File(this));\n    }\n    /**\n     * Sets the contents of a file using a chunked upload approach\n     *\n     * @param file The file to upload\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     */\n    setContentChunked(file, progress, chunkSize = 10485760) {\n        if (typeof progress === \"undefined\") {\n            progress = () => null;\n        }\n        let self = this;\n        let fileSize = file.size;\n        let blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\n        console.log(`blockCount: ${blockCount}`);\n        let uploadId = util_1.Util.getGUID();\n        // start the chain with the first fragment\n        progress({ blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\n        let chain = self.startUpload(uploadId, file.slice(0, chunkSize));\n        // skip the first and last blocks\n        for (let i = 2; i < blockCount; i++) {\n            chain = chain.then(pointer => {\n                progress({ blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\n                return self.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\n            });\n        }\n        return chain.then(pointer => {\n            progress({ blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\n            return self.finishUpload(uploadId, pointer, file.slice(pointer));\n        }).then(_ => {\n            return self;\n        });\n    }\n    /**\n     * Starts a new chunk upload session and uploads the first fragment.\n     * The current file content is not changed when this method completes.\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\n     * The upload session ends either when you use the CancelUpload method or when you successfully\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    startUpload(uploadId, fragment) {\n        return new File(this, `startUpload(uploadId=guid'${uploadId}')`).postAs({ body: fragment }).then(n => parseFloat(n));\n    }\n    /**\n     * Continues the chunk upload session with an additional fragment.\n     * The current file content is not changed.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    continueUpload(uploadId, fileOffset, fragment) {\n        return new File(this, `continueUpload(uploadId=guid'${uploadId}',fileOffset=${fileOffset})`).postAs({ body: fragment }).then(n => parseFloat(n));\n    }\n    /**\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The newly uploaded file.\n     */\n    finishUpload(uploadId, fileOffset, fragment) {\n        return new File(this, `finishUpload(uploadId=guid'${uploadId}',fileOffset=${fileOffset})`)\n            .postAs({ body: fragment }).then((response) => {\n            return {\n                data: response,\n                file: new File(response.ServerRelativeUrl),\n            };\n        });\n    }\n}\nexports.File = File;\n/**\n * Describes a collection of Version objects\n *\n */\nclass Versions extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the File class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path = \"versions\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a version by id\n     *\n     * @param versionId The id of the version to retrieve\n     */\n    getById(versionId) {\n        let v = new Version(this);\n        v.concat(`(${versionId})`);\n        return v;\n    }\n    /**\n     * Deletes all the file version objects in the collection.\n     *\n     */\n    deleteAll() {\n        return new Versions(this, \"deleteAll\").post();\n    }\n    /**\n     * Deletes the specified version of the file.\n     *\n     * @param versionId The ID of the file version to delete.\n     */\n    deleteById(versionId) {\n        return new Versions(this, `deleteById(vid=${versionId})`).post();\n    }\n    /**\n     * Deletes the file version object with the specified version label.\n     *\n     * @param label The version label of the file version to delete, for example: 1.2\n     */\n    deleteByLabel(label) {\n        return new Versions(this, `deleteByLabel(versionlabel='${label}')`).post();\n    }\n    /**\n     * Creates a new file version from the file specified by the version label.\n     *\n     * @param label The version label of the file version to restore, for example: 1.2\n     */\n    restoreByLabel(label) {\n        return new Versions(this, `restoreByLabel(versionlabel='${label}')`).post();\n    }\n}\nexports.Versions = Versions;\n/**\n * Describes a single Version instance\n *\n */\nclass Version extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the Version class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n    * Delete a specific version of a file.\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    delete(eTag = \"*\") {\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    }\n}\nexports.Version = Version;\nvar CheckinType;\n(function (CheckinType) {\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\n})(CheckinType = exports.CheckinType || (exports.CheckinType = {}));\nvar WebPartsPersonalizationScope;\n(function (WebPartsPersonalizationScope) {\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\n})(WebPartsPersonalizationScope = exports.WebPartsPersonalizationScope || (exports.WebPartsPersonalizationScope = {}));\nvar MoveOperations;\n(function (MoveOperations) {\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\n})(MoveOperations = exports.MoveOperations || (exports.MoveOperations = {}));\nvar TemplateFileType;\n(function (TemplateFileType) {\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\n})(TemplateFileType = exports.TemplateFileType || (exports.TemplateFileType = {}));\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/files.js","\"use strict\";\nconst util_1 = require(\"../utils/util\");\nconst queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of content types\n *\n */\nclass ContentTypes extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the ContentTypes class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this content types collection\n     */\n    constructor(baseUrl, path = \"contenttypes\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a ContentType by content type id\n     */\n    getById(id) {\n        let ct = new ContentType(this);\n        ct.concat(`('${id}')`);\n        return ct;\n    }\n    /**\n     * Adds an existing contenttype to a content type collection\n     *\n     * @param contentTypeId in the following format, for example: 0x010102\n     */\n    addAvailableContentType(contentTypeId) {\n        let postBody = JSON.stringify({\n            \"contentTypeId\": contentTypeId,\n        });\n        return new ContentTypes(this, `addAvailableContentType`).postAs({ body: postBody }).then((data) => {\n            return {\n                contentType: this.getById(data.id),\n                data: data,\n            };\n        });\n    }\n    /**\n     * Adds a new content type to the collection\n     *\n     * @param id The desired content type id for the new content type (also determines the parent content type)\n     * @param name The name of the content type\n     * @param description The description of the content type\n     * @param group The group in which to add the content type\n     * @param additionalSettings Any additional settings to provide when creating the content type\n     *\n     */\n    add(id, name, description = \"\", group = \"Custom Content Types\", additionalSettings = {}) {\n        let postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.ContentType\" },\n            \"Id\": { \"StringValue\": id },\n            \"Name\": name,\n            \"Group\": group,\n            \"Description\": description,\n        }, additionalSettings));\n        return this.post({ body: postBody }).then((data) => {\n            return { contentType: this.getById(data.id), data: data };\n        });\n    }\n}\nexports.ContentTypes = ContentTypes;\n/**\n * Describes a single ContentType instance\n *\n */\nclass ContentType extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the ContentType class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this content type instance\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets the column (also known as field) references in the content type.\n    */\n    get fieldLinks() {\n        return new FieldLinks(this);\n    }\n    /**\n     * Gets a value that specifies the collection of fields for the content type.\n     */\n    get fields() {\n        return new queryable_1.QueryableCollection(this, \"fields\");\n    }\n    /**\n     * Gets the parent content type of the content type.\n     */\n    get parent() {\n        return new ContentType(this, \"parent\");\n    }\n    /**\n     * Gets a value that specifies the collection of workflow associations for the content type.\n     */\n    get workflowAssociations() {\n        return new queryable_1.QueryableCollection(this, \"workflowAssociations\");\n    }\n}\nexports.ContentType = ContentType;\n/**\n * Represents a collection of field link instances\n */\nclass FieldLinks extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the ContentType class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this content type instance\n     */\n    constructor(baseUrl, path = \"fieldlinks\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a FieldLink by GUID id\n     *\n     * @param id The GUID id of the field link\n     */\n    getById(id) {\n        let fl = new FieldLink(this);\n        fl.concat(`(guid'${id}')`);\n        return fl;\n    }\n}\nexports.FieldLinks = FieldLinks;\n/**\n * Represents a field link instance\n */\nclass FieldLink extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the ContentType class\n    *\n    * @param baseUrl The url or Queryable which forms the parent of this content type instance\n    */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n}\nexports.FieldLink = FieldLink;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/contenttypes.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst odata_1 = require(\"./odata\");\n/**\n * Describes a collection of Item objects\n *\n */\nclass AttachmentFiles extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the AttachmentFiles class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this attachments collection\n     */\n    constructor(baseUrl, path = \"AttachmentFiles\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a Attachment File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    getByName(name) {\n        let f = new AttachmentFile(this);\n        f.concat(`('${name}')`);\n        return f;\n    }\n    /**\n     * Adds a new attachment to the collection\n     *\n     * @param name The name of the file, including extension.\n     * @param content The Base64 file content.\n     */\n    add(name, content) {\n        return new AttachmentFiles(this, `add(FileName='${name}')`)\n            .post({\n            body: content,\n        }).then((response) => {\n            return {\n                data: response,\n                file: this.getByName(name),\n            };\n        });\n    }\n}\nexports.AttachmentFiles = AttachmentFiles;\n/**\n * Describes a single attachment file instance\n *\n */\nclass AttachmentFile extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the AttachmentFile class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this attachment file\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets the contents of the file as text\n     *\n     */\n    getText() {\n        return new AttachmentFile(this, \"$value\").get(new odata_1.TextFileParser());\n    }\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js\n     *\n     */\n    getBlob() {\n        return new AttachmentFile(this, \"$value\").get(new odata_1.BlobFileParser());\n    }\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    getBuffer() {\n        return new AttachmentFile(this, \"$value\").get(new odata_1.BufferFileParser());\n    }\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    getJSON() {\n        return new AttachmentFile(this, \"$value\").get(new odata_1.JSONFileParser());\n    }\n    /**\n     * Delete this attachment file\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    delete(eTag = \"*\") {\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    }\n}\nexports.AttachmentFile = AttachmentFile;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/attachmentfiles.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst util_1 = require(\"../utils/util\");\n/**\n * Describes the views available in the current context\n *\n */\nclass Views extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the Views class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl) {\n        super(baseUrl, \"views\");\n    }\n    /**\n     * Gets a view by guid id\n     *\n     * @param id The GUID id of the view\n     */\n    getById(id) {\n        let v = new View(this);\n        v.concat(`('${id}')`);\n        return v;\n    }\n    /**\n     * Gets a view by title (case-sensitive)\n     *\n     * @param title The case-sensitive title of the view\n     */\n    getByTitle(title) {\n        return new View(this, `getByTitle('${title}')`);\n    }\n    /**\n     * Adds a new view to the collection\n     *\n     * @param title The new views's title\n     * @param personalView True if this is a personal view, otherwise false, default = false\n     * @param additionalSettings Will be passed as part of the view creation body\n     */\n    /*tslint:disable max-line-length */\n    add(title, personalView = false, additionalSettings = {}) {\n        let postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.View\" },\n            \"Title\": title,\n            \"PersonalView\": personalView,\n        }, additionalSettings));\n        return this.postAs({ body: postBody }).then((data) => {\n            return {\n                data: data,\n                view: this.getById(data.Id),\n            };\n        });\n    }\n}\nexports.Views = Views;\n/**\n * Describes a single View instance\n *\n */\nclass View extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the View class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    get fields() {\n        return new ViewFields(this);\n    }\n    /**\n     * Updates this view intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the view\n     */\n    update(properties) {\n        let postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then((data) => {\n            return {\n                data: data,\n                view: this,\n            };\n        });\n    }\n    /**\n     * Delete this view\n     *\n     */\n    delete() {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    }\n    /**\n     * Returns the list view as HTML.\n     *\n     */\n    renderAsHtml() {\n        let q = new queryable_1.Queryable(this, \"renderashtml\");\n        return q.get();\n    }\n}\nexports.View = View;\nclass ViewFields extends queryable_1.QueryableCollection {\n    constructor(baseUrl, path = \"viewfields\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a value that specifies the XML schema that represents the collection.\n     */\n    getSchemaXml() {\n        let q = new queryable_1.Queryable(this, \"schemaxml\");\n        return q.get();\n    }\n    /**\n     * Adds the field with the specified field internal name or display name to the collection.\n     *\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\n     */\n    add(fieldTitleOrInternalName) {\n        let q = new ViewFields(this, `addviewfield('${fieldTitleOrInternalName}')`);\n        return q.post();\n    }\n    /**\n     * Moves the field with the specified field internal name to the specified position in the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\n     * @param index The zero-based index of the new position for the field.\n     */\n    move(fieldInternalName, index) {\n        let q = new ViewFields(this, \"moveviewfieldto\");\n        let postBody = JSON.stringify({ \"field\": fieldInternalName, \"index\": index });\n        return q.post({ body: postBody });\n    }\n    /**\n     * Removes all the fields from the collection.\n     */\n    removeAll() {\n        let q = new ViewFields(this, \"removeallviewfields\");\n        return q.post();\n    }\n    /**\n     * Removes the field with the specified field internal name from the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\n     */\n    remove(fieldInternalName) {\n        let q = new ViewFields(this, `removeviewfield('${fieldInternalName}')`);\n        return q.post();\n    }\n}\nexports.ViewFields = ViewFields;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/views.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst util_1 = require(\"../utils/util\");\nconst Types = require(\"./types\");\n/**\n * Describes a collection of Field objects\n *\n */\nclass Fields extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path = \"fields\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a field from the collection by title\n     *\n     * @param title The case-sensitive title of the field\n     */\n    getByTitle(title) {\n        return new Field(this, `getByTitle('${title}')`);\n    }\n    /**\n     * Gets a field from the collection by using internal name or title\n     *\n     * @param name The case-sensitive internal name or title of the field\n     */\n    getByInternalNameOrTitle(name) {\n        return new Field(this, `getByInternalNameOrTitle('${name}')`);\n    }\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param title The Id of the list\n     */\n    getById(id) {\n        let f = new Field(this);\n        f.concat(`('${id}')`);\n        return f;\n    }\n    /**\n     * Creates a field based on the specified schema\n     */\n    createFieldAsXml(xml) {\n        let info;\n        if (typeof xml === \"string\") {\n            info = { SchemaXml: xml };\n        }\n        else {\n            info = xml;\n        }\n        let postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": {\n                    \"type\": \"SP.XmlSchemaFieldCreationInformation\",\n                },\n            }, info),\n        });\n        let q = new Fields(this, \"createfieldasxml\");\n        return q.postAs({ body: postBody }).then((data) => {\n            return {\n                data: data,\n                field: this.getById(data.Id),\n            };\n        });\n    }\n    /**\n     * Adds a new list to the collection\n     *\n     * @param title The new field's title\n     * @param fieldType The new field's type (ex: SP.FieldText)\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    add(title, fieldType, properties = {}) {\n        let postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": fieldType },\n            \"Title\": title,\n        }, properties));\n        return this.postAs({ body: postBody }).then((data) => {\n            return {\n                data: data,\n                field: this.getById(data.Id),\n            };\n        });\n    }\n    /**\n     * Adds a new SP.FieldText to the collection\n     *\n     * @param title The field title\n     * @param maxLength The maximum number of characters allowed in the value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    addText(title, maxLength = 255, properties) {\n        let props = {\n            FieldTypeKind: 2,\n            MaxLength: maxLength,\n        };\n        return this.add(title, \"SP.FieldText\", util_1.Util.extend(props, properties));\n    }\n    /**\n     * Adds a new SP.FieldCalculated to the collection\n     *\n     * @param title The field title.\n     * @param formula The formula for the field.\n     * @param dateFormat The date and time format that is displayed in the field.\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    addCalculated(title, formula, dateFormat, outputType = Types.FieldTypes.Text, properties) {\n        let props = {\n            DateFormat: dateFormat,\n            FieldTypeKind: 17,\n            Formula: formula,\n            OutputType: outputType,\n        };\n        return this.add(title, \"SP.FieldCalculated\", util_1.Util.extend(props, properties));\n    }\n    /**\n     * Adds a new SP.FieldDateTime to the collection\n     *\n     * @param title The field title\n     * @param displayFormat The format of the date and time that is displayed in the field.\n     * @param calendarType Specifies the calendar type of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    addDateTime(title, displayFormat = Types.DateTimeFieldFormatType.DateOnly, calendarType = Types.CalendarType.Gregorian, friendlyDisplayFormat = 0, properties) {\n        let props = {\n            DateTimeCalendarType: calendarType,\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 4,\n            FriendlyDisplayFormat: friendlyDisplayFormat,\n        };\n        return this.add(title, \"SP.FieldDateTime\", util_1.Util.extend(props, properties));\n    }\n    /**\n     * Adds a new SP.FieldNumber to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    addNumber(title, minValue, maxValue, properties) {\n        let props = { FieldTypeKind: 9 };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldNumber\", util_1.Util.extend(props, properties));\n    }\n    /**\n     * Adds a new SP.FieldCurrency to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    addCurrency(title, minValue, maxValue, currencyLocalId = 1033, properties) {\n        let props = {\n            CurrencyLocaleId: currencyLocalId,\n            FieldTypeKind: 10,\n        };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldCurrency\", util_1.Util.extend(props, properties));\n    }\n    /**\n     * Adds a new SP.FieldMultiLineText to the collection\n     *\n     * @param title The field title\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\n     * @param richText Specifies whether the field supports rich formatting.\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     *\n     */\n    addMultilineText(title, numberOfLines = 6, richText = true, restrictedMode = false, appendOnly = false, allowHyperlink = true, properties) {\n        let props = {\n            AllowHyperlink: allowHyperlink,\n            AppendOnly: appendOnly,\n            FieldTypeKind: 3,\n            NumberOfLines: numberOfLines,\n            RestrictedMode: restrictedMode,\n            RichText: richText,\n        };\n        return this.add(title, \"SP.FieldMultiLineText\", util_1.Util.extend(props, properties));\n    }\n    /**\n     * Adds a new SP.FieldUrl to the collection\n     *\n     * @param title The field title\n     */\n    addUrl(title, displayFormat = Types.UrlFieldFormatType.Hyperlink, properties) {\n        let props = {\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 11,\n        };\n        return this.add(title, \"SP.FieldUrl\", util_1.Util.extend(props, properties));\n    }\n}\nexports.Fields = Fields;\n/**\n * Describes a single of Field instance\n *\n */\nclass Field extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the Field class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this field instance\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Updates this field intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param fieldType The type value, required to update child field type properties\n     */\n    update(properties, fieldType = \"SP.Field\") {\n        let postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then((data) => {\n            return {\n                data: data,\n                field: this,\n            };\n        });\n    }\n    /**\n     * Delete this fields\n     *\n     */\n    delete() {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    }\n    /**\n     * Sets the value of the ShowInDisplayForm property for this field.\n     */\n    setShowInDisplayForm(show) {\n        let q = new Field(this, `setshowindisplayform(${show})`);\n        return q.post();\n    }\n    /**\n     * Sets the value of the ShowInEditForm property for this field.\n     */\n    setShowInEditForm(show) {\n        let q = new Field(this, `setshowineditform(${show})`);\n        return q.post();\n    }\n    /**\n     * Sets the value of the ShowInNewForm property for this field.\n     */\n    setShowInNewForm(show) {\n        let q = new Field(this, `setshowinnewform(${show})`);\n        return q.post();\n    }\n}\nexports.Field = Field;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/fields.js","// reference: https://msdn.microsoft.com/en-us/library/office/dn600183.aspx\n\"use strict\";\n/**\n * Determines the display mode of the given control or view\n */\nvar ControlMode;\n(function (ControlMode) {\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\n})(ControlMode = exports.ControlMode || (exports.ControlMode = {}));\n/**\n * Specifies the type of the field.\n */\nvar FieldTypes;\n(function (FieldTypes) {\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\n})(FieldTypes = exports.FieldTypes || (exports.FieldTypes = {}));\nvar DateTimeFieldFormatType;\n(function (DateTimeFieldFormatType) {\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\n})(DateTimeFieldFormatType = exports.DateTimeFieldFormatType || (exports.DateTimeFieldFormatType = {}));\n/**\n * Specifies the control settings while adding a field.\n */\nvar AddFieldOptions;\n(function (AddFieldOptions) {\n    /**\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\n    /**\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\n    /**\n     * Specify that a new field must not be added to any other content type\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\n    /**\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\n    /**\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\n    /**\n     * Specify that a new field that is added to the specified list must also be added to the default list view\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\n    /**\n     * Specify to confirm that no other field has the same display name\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\n})(AddFieldOptions = exports.AddFieldOptions || (exports.AddFieldOptions = {}));\nvar CalendarType;\n(function (CalendarType) {\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\n})(CalendarType = exports.CalendarType || (exports.CalendarType = {}));\nvar UrlFieldFormatType;\n(function (UrlFieldFormatType) {\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\n})(UrlFieldFormatType = exports.UrlFieldFormatType || (exports.UrlFieldFormatType = {}));\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\nvar PageType;\n(function (PageType) {\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\n    PageType[PageType[\"View\"] = 3] = \"View\";\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\n})(PageType = exports.PageType || (exports.PageType = {}));\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/types.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of Field objects\n *\n */\nclass Forms extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path = \"forms\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a form by id\n     *\n     * @param id The guid id of the item to retrieve\n     */\n    getById(id) {\n        let i = new Form(this);\n        i.concat(`('${id}')`);\n        return i;\n    }\n}\nexports.Forms = Forms;\n/**\n * Describes a single of Form instance\n *\n */\nclass Form extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the Form class\n     *\n     * @param baseUrl The url or Queryable which is the parent of this form instance\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n}\nexports.Form = Form;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/forms.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of webhook subscriptions\n *\n */\nclass Subscriptions extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the Subscriptions class\n     *\n     * @param baseUrl - The url or Queryable which forms the parent of this webhook subscriptions collection\n     */\n    constructor(baseUrl, path = \"subscriptions\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Returns all the webhook subscriptions or the specified webhook subscription\n     *\n     */\n    getById(subscriptionId) {\n        let subscription = new Subscription(this);\n        subscription.concat(`('${subscriptionId}')`);\n        return subscription;\n    }\n    /**\n     * Create a new webhook subscription\n     *\n     */\n    add(notificationUrl, expirationDate, clientState) {\n        let postBody = JSON.stringify({\n            \"resource\": this.toUrl(),\n            \"notificationUrl\": notificationUrl,\n            \"expirationDateTime\": expirationDate,\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\n        });\n        return this.post({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(result => {\n            return { data: result, subscription: this.getById(result.id) };\n        });\n    }\n}\nexports.Subscriptions = Subscriptions;\n/**\n * Describes a single webhook subscription instance\n *\n */\nclass Subscription extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the Subscription class\n     *\n     * @param baseUrl - The url or Queryable which forms the parent of this webhook subscription instance\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Update a webhook subscription\n     *\n     */\n    update(expirationDate) {\n        let postBody = JSON.stringify({\n            \"expirationDateTime\": expirationDate,\n        });\n        return this.patch({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(data => {\n            return { data: data, subscription: this };\n        });\n    }\n    /**\n     * Remove a webhook subscription\n     *\n     */\n    delete() {\n        return super.delete();\n    }\n}\nexports.Subscription = Subscription;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/subscriptions.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst util_1 = require(\"../utils/util\");\nclass UserCustomActions extends queryable_1.QueryableCollection {\n    constructor(baseUrl, path = \"usercustomactions\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Returns the custom action with the specified identifier.\n     *\n     * @param id The GUID ID of the user custom action to get.\n     */\n    getById(id) {\n        let uca = new UserCustomAction(this);\n        uca.concat(`('${id}')`);\n        return uca;\n    }\n    /**\n     * Create a custom action\n     *\n     * @param creationInfo The information which defines the new custom action\n     *\n     */\n    add(properties) {\n        let postBody = JSON.stringify(util_1.Util.extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\n        return this.post({ body: postBody }).then((data) => {\n            return {\n                action: this.getById(data.Id),\n                data: data,\n            };\n        });\n    }\n    /**\n     * Deletes all custom actions in the collection.\n     *\n     */\n    clear() {\n        let a = new UserCustomActions(this, \"clear\");\n        return a.post();\n    }\n}\nexports.UserCustomActions = UserCustomActions;\nclass UserCustomAction extends queryable_1.QueryableInstance {\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    update(properties) {\n        let postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.UserCustomAction\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then((data) => {\n            return {\n                action: this,\n                data: data,\n            };\n        });\n    }\n    /**\n    * Remove a custom action\n    *\n    */\n    delete() {\n        return super.delete();\n    }\n}\nexports.UserCustomAction = UserCustomAction;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/usercustomactions.js","\"use strict\";\nconst util_1 = require(\"../utils/util\");\nconst queryable_1 = require(\"./queryable\");\n/**\n * Represents a collection of navigation nodes\n *\n */\nclass NavigationNodes extends queryable_1.QueryableCollection {\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a navigation node by id\n     *\n     * @param id The id of the node\n     */\n    getById(id) {\n        let node = new NavigationNode(this);\n        node.concat(`(${id})`);\n        return node;\n    }\n    /**\n     * Adds a new node to the collection\n     *\n     * @param title Display name of the node\n     * @param url The url of the node\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\n     */\n    add(title, url, visible = true) {\n        let postBody = JSON.stringify({\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n            IsVisible: visible,\n            Title: title,\n            Url: url,\n        });\n        let adder = new NavigationNodes(this);\n        return adder.post({ body: postBody }).then((data) => {\n            return {\n                data: data,\n                node: this.getById(data.Id),\n            };\n        });\n    }\n    /**\n     * Moves a node to be after another node in the navigation\n     *\n     * @param nodeId Id of the node to move\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\n     */\n    moveAfter(nodeId, previousNodeId) {\n        let postBody = JSON.stringify({\n            nodeId: nodeId,\n            previousNodeId: previousNodeId,\n        });\n        let mover = new NavigationNodes(this, \"MoveAfter\");\n        return mover.post({ body: postBody });\n    }\n}\nexports.NavigationNodes = NavigationNodes;\nclass NavigationNode extends queryable_1.QueryableInstance {\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Represents the child nodes of this node\n     */\n    get children() {\n        return new NavigationNodes(this, \"Children\");\n    }\n    /**\n     * Updates this node based on the supplied properties\n     *\n     * @param properties The hash of key/value pairs to update\n     */\n    update(properties) {\n        let postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then((data) => {\n            return {\n                data: data,\n                node: this,\n            };\n        });\n    }\n    /**\n     * Deletes this node and any child nodes\n     */\n    delete() {\n        return super.delete();\n    }\n}\nexports.NavigationNode = NavigationNode;\n/**\n * Exposes the navigation components\n *\n */\nclass Navigation extends queryable_1.Queryable {\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path = \"navigation\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets the quicklaunch navigation for the current context\n     *\n     */\n    get quicklaunch() {\n        return new NavigationNodes(this, \"quicklaunch\");\n    }\n    /**\n     * Gets the top bar navigation navigation for the current context\n     *\n     */\n    get topNavigationBar() {\n        return new NavigationNodes(this, \"topnavigationbar\");\n    }\n}\nexports.Navigation = Navigation;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/navigation.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of List objects\n *\n */\nclass Features extends queryable_1.QueryableCollection {\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path = \"features\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the feature (GUID)\n     */\n    getById(id) {\n        let feature = new Feature(this);\n        feature.concat(`('${id}')`);\n        return feature;\n    }\n    /**\n     * Adds a new list to the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature activation will be forced\n     */\n    add(id, force = false) {\n        let adder = new Features(this, \"add\");\n        return adder.post({\n            body: JSON.stringify({\n                featdefScope: 0,\n                featureId: id,\n                force: force,\n            }),\n        }).then(data => {\n            return {\n                data: data,\n                feature: this.getById(id),\n            };\n        });\n    }\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature deactivation will be forced\n     */\n    remove(id, force = false) {\n        let remover = new Features(this, \"remove\");\n        return remover.post({\n            body: JSON.stringify({\n                featureId: id,\n                force: force,\n            }),\n        });\n    }\n}\nexports.Features = Features;\nclass Feature extends queryable_1.QueryableInstance {\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    constructor(baseUrl, path) {\n        super(baseUrl, path);\n    }\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param force If true the feature deactivation will be forced\n     */\n    deactivate(force = false) {\n        let removeDependency = this.addBatchDependency();\n        let idGet = new Feature(this).select(\"DefinitionId\");\n        return idGet.getAs().then(feature => {\n            let promise = this.getParent(Features, this.parentUrl, \"\").remove(feature.DefinitionId, force);\n            removeDependency();\n            return promise;\n        });\n    }\n}\nexports.Feature = Feature;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/features.js","\"use strict\";\nconst queryable_1 = require(\"./queryable\");\nconst FileUtil = require(\"../utils/files\");\nconst odata_1 = require(\"./odata\");\nclass UserProfileQuery extends queryable_1.QueryableInstance {\n    constructor(baseUrl, path = \"_api/sp.userprofiles.peoplemanager\") {\n        super(baseUrl, path);\n        this.profileLoader = new ProfileLoader(baseUrl);\n    }\n    /**\n     * The URL of the edit profile page for the current user.\n     */\n    get editProfileLink() {\n        let q = new UserProfileQuery(this, \"EditProfileLink\");\n        return q.getAs(odata_1.ODataValue());\n    }\n    /**\n     * A Boolean value that indicates whether the current user's People I'm Following list is public.\n     */\n    get isMyPeopleListPublic() {\n        let q = new UserProfileQuery(this, \"IsMyPeopleListPublic\");\n        return q.getAs(odata_1.ODataValue());\n    }\n    /**\n     * A Boolean value that indicates whether the current user's People I'm Following list is public.\n     *\n     * @param loginName The account name of the user\n     */\n    amIFollowedBy(loginName) {\n        let q = new UserProfileQuery(this, \"amifollowedby(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    }\n    /**\n     * Checks whether the current user is following the specified user.\n     *\n     * @param loginName The account name of the user\n     */\n    amIFollowing(loginName) {\n        let q = new UserProfileQuery(this, \"amifollowing(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    }\n    /**\n     * Gets tags that the user is following.\n     *\n     * @param maxCount The maximum number of tags to get.\n     */\n    getFollowedTags(maxCount = 20) {\n        let q = new UserProfileQuery(this, \"getfollowedtags(\" + maxCount + \")\");\n        return q.get();\n    }\n    /**\n     * Gets the people who are following the specified user.\n     *\n     * @param loginName The account name of the user.\n     */\n    getFollowersFor(loginName) {\n        let q = new UserProfileQuery(this, \"getfollowersfor(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    }\n    /**\n     * Gets the people who are following the current user.\n     *\n     */\n    get myFollowers() {\n        return new queryable_1.QueryableCollection(this, \"getmyfollowers\");\n    }\n    /**\n     * Gets user properties for the current user.\n     *\n     */\n    get myProperties() {\n        return new UserProfileQuery(this, \"getmyproperties\");\n    }\n    /**\n     * Gets the people who the specified user is following.\n     *\n     * @param loginName The account name of the user.\n     */\n    getPeopleFollowedBy(loginName) {\n        let q = new UserProfileQuery(this, \"getpeoplefollowedby(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    }\n    /**\n     * Gets user properties for the specified user.\n     *\n     * @param loginName The account name of the user.\n     */\n    getPropertiesFor(loginName) {\n        let q = new UserProfileQuery(this, \"getpropertiesfor(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    }\n    /**\n     * Gets the most popular tags.\n     *\n     */\n    get trendingTags() {\n        let q = new UserProfileQuery(this, null);\n        q.concat(\".gettrendingtags\");\n        return q.get();\n    }\n    /**\n     * Gets the specified user profile property for the specified user.\n     *\n     * @param loginName The account name of the user.\n     * @param propertyName The case-sensitive name of the property to get.\n     */\n    getUserProfilePropertyFor(loginName, propertyName) {\n        let q = new UserProfileQuery(this, `getuserprofilepropertyfor(accountname=@v, propertyname='${propertyName}')`);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    }\n    /**\n     * Removes the specified user from the user's list of suggested people to follow.\n     *\n     * @param loginName The account name of the user.\n     */\n    hideSuggestion(loginName) {\n        let q = new UserProfileQuery(this, \"hidesuggestion(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.post();\n    }\n    /**\n     * Checks whether the first user is following the second user.\n     *\n     * @param follower The account name of the user who might be following followee.\n     * @param followee The account name of the user who might be followed.\n     */\n    isFollowing(follower, followee) {\n        let q = new UserProfileQuery(this, null);\n        q.concat(`.isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)`);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\n        q.query.add(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\n        return q.get();\n    }\n    /**\n     * Uploads and sets the user profile picture\n     *\n     * @param profilePicSource Blob data representing the user's picture\n     */\n    setMyProfilePic(profilePicSource) {\n        return new Promise((resolve, reject) => {\n            FileUtil.readBlobAsArrayBuffer(profilePicSource).then((buffer) => {\n                let request = new UserProfileQuery(this, \"setmyprofilepicture\");\n                request.post({\n                    body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\n                }).then(_ => resolve());\n            }).catch(e => reject(e));\n        });\n    }\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    createPersonalSiteEnqueueBulk(...emails) {\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\n    }\n    /**\n     * Gets the user profile of the site owner.\n     *\n     */\n    get ownerUserProfile() {\n        return this.profileLoader.ownerUserProfile;\n    }\n    /**\n     * Gets the user profile that corresponds to the current user.\n     */\n    get userProfile() {\n        return this.profileLoader.userProfile;\n    }\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false if non-interactively (client) initiated request\n     */\n    createPersonalSite(interactiveRequest = false) {\n        return this.profileLoader.createPersonalSite(interactiveRequest);\n    }\n    /**\n     * Sets the privacy settings for this profile.\n     *\n     * @param share true to make all social data public; false to make all social data private.\n     */\n    shareAllSocialData(share) {\n        return this.profileLoader.shareAllSocialData(share);\n    }\n}\nexports.UserProfileQuery = UserProfileQuery;\nclass ProfileLoader extends queryable_1.Queryable {\n    constructor(baseUrl, path = \"_api/sp.userprofiles.profileloader.getprofileloader\") {\n        super(baseUrl, path);\n    }\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    createPersonalSiteEnqueueBulk(emails) {\n        let q = new ProfileLoader(this, \"createpersonalsiteenqueuebulk\");\n        let postBody = JSON.stringify({ \"emailIDs\": emails });\n        return q.post({\n            body: postBody,\n        });\n    }\n    /**\n     * Gets the user profile of the site owner.\n     *\n     */\n    get ownerUserProfile() {\n        let q = this.getParent(ProfileLoader, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\n        return q.postAs();\n    }\n    /**\n     * Gets the user profile that corresponds to the current user.\n     *\n     */\n    get userProfile() {\n        let q = new ProfileLoader(this, \"getuserprofile\");\n        return q.postAs();\n    }\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false if non-interactively (client) initiated request\n     */\n    createPersonalSite(interactiveRequest = false) {\n        let q = new ProfileLoader(this, `getuserprofile/createpersonalsiteenque(${interactiveRequest})\",`);\n        return q.post();\n    }\n    /**\n     * Sets the privacy settings for this profile.\n     *\n     * @param share true to make all social data public; false to make all social data private.\n     */\n    shareAllSocialData(share) {\n        let q = new ProfileLoader(this, `getuserprofile/shareallsocialdata(${share})\",`);\n        return q.post();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/userprofiles.js","\"use strict\";\n/**\n * Reads a blob as text\n *\n * @param blob The data to read\n */\nfunction readBlobAsText(blob) {\n    return readBlobAs(blob, \"string\");\n}\nexports.readBlobAsText = readBlobAsText;\n/**\n * Reads a blob into an array buffer\n *\n * @param blob The data to read\n */\nfunction readBlobAsArrayBuffer(blob) {\n    return readBlobAs(blob, \"buffer\");\n}\nexports.readBlobAsArrayBuffer = readBlobAsArrayBuffer;\n/**\n * Generic method to read blob's content\n *\n * @param blob The data to read\n * @param mode The read mode\n */\nfunction readBlobAs(blob, mode) {\n    return new Promise((resolve, reject) => {\n        try {\n            let reader = new FileReader();\n            reader.onload = (e) => {\n                resolve(e.target.result);\n            };\n            switch (mode) {\n                case \"string\":\n                    reader.readAsText(blob);\n                    break;\n                case \"buffer\":\n                    reader.readAsArrayBuffer(blob);\n                    break;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/files.js","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require(\"../sharepoint/index\"));\nvar httpclient_1 = require(\"../net/httpclient\");\nexports.HttpClient = httpclient_1.HttpClient;\nvar sprequestexecutorclient_1 = require(\"../net/sprequestexecutorclient\");\nexports.SPRequestExecutorClient = sprequestexecutorclient_1.SPRequestExecutorClient;\nvar nodefetchclient_1 = require(\"../net/nodefetchclient\");\nexports.NodeFetchClient = nodefetchclient_1.NodeFetchClient;\nvar fetchclient_1 = require(\"../net/fetchclient\");\nexports.FetchClient = fetchclient_1.FetchClient;\n__export(require(\"../configuration/providers/index\"));\nvar collections_1 = require(\"../collections/collections\");\nexports.Dictionary = collections_1.Dictionary;\nvar util_1 = require(\"../utils/util\");\nexports.Util = util_1.Util;\n__export(require(\"../utils/logging\"));\n__export(require(\"../utils/exceptions\"));\n\n\n\n// WEBPACK FOOTER //\n// ./lib/types/index.js","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require(\"./caching\"));\nvar files_1 = require(\"./files\");\nexports.CheckinType = files_1.CheckinType;\nexports.WebPartsPersonalizationScope = files_1.WebPartsPersonalizationScope;\nexports.MoveOperations = files_1.MoveOperations;\nexports.TemplateFileType = files_1.TemplateFileType;\nvar items_1 = require(\"./items\");\nexports.Item = items_1.Item;\nexports.PagedItemCollection = items_1.PagedItemCollection;\nvar navigation_1 = require(\"./navigation\");\nexports.NavigationNodes = navigation_1.NavigationNodes;\nexports.NavigationNode = navigation_1.NavigationNode;\nvar lists_1 = require(\"./lists\");\nexports.List = lists_1.List;\nvar odata_1 = require(\"./odata\");\nexports.extractOdataId = odata_1.extractOdataId;\nexports.ODataParserBase = odata_1.ODataParserBase;\nexports.ODataDefaultParser = odata_1.ODataDefaultParser;\nexports.ODataRaw = odata_1.ODataRaw;\nexports.ODataValue = odata_1.ODataValue;\nexports.ODataEntity = odata_1.ODataEntity;\nexports.ODataEntityArray = odata_1.ODataEntityArray;\nexports.TextFileParser = odata_1.TextFileParser;\nexports.BlobFileParser = odata_1.BlobFileParser;\nexports.BufferFileParser = odata_1.BufferFileParser;\nexports.JSONFileParser = odata_1.JSONFileParser;\nvar roles_1 = require(\"./roles\");\nexports.RoleDefinitionBindings = roles_1.RoleDefinitionBindings;\nvar search_1 = require(\"./search\");\nexports.Search = search_1.Search;\nexports.SearchResult = search_1.SearchResult;\nexports.SearchResults = search_1.SearchResults;\nexports.SortDirection = search_1.SortDirection;\nexports.ReorderingRuleMatchType = search_1.ReorderingRuleMatchType;\nexports.QueryPropertyValueType = search_1.QueryPropertyValueType;\nvar searchsuggest_1 = require(\"./searchsuggest\");\nexports.SearchSuggest = searchsuggest_1.SearchSuggest;\nexports.SearchSuggestResult = searchsuggest_1.SearchSuggestResult;\nvar site_1 = require(\"./site\");\nexports.Site = site_1.Site;\n__export(require(\"./types\"));\nvar webs_1 = require(\"./webs\");\nexports.Web = webs_1.Web;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/sharepoint/index.js","\"use strict\";\nconst util_1 = require(\"../utils/util\");\nconst exceptions_1 = require(\"../utils/exceptions\");\n/**\n * Makes requests using the SP.RequestExecutor library.\n */\nclass SPRequestExecutorClient {\n    constructor() {\n        /**\n         * Converts a SharePoint REST API response to a fetch API response.\n         */\n        this.convertToResponse = (spResponse) => {\n            let responseHeaders = new Headers();\n            for (let h in spResponse.headers) {\n                if (spResponse.headers[h]) {\n                    responseHeaders.append(h, spResponse.headers[h]);\n                }\n            }\n            // issue #256, Cannot have an empty string body when creating a Response with status 204\n            let body = spResponse.statusCode === 204 ? null : spResponse.body;\n            return new Response(body, {\n                headers: responseHeaders,\n                status: spResponse.statusCode,\n                statusText: spResponse.statusText,\n            });\n        };\n    }\n    /**\n     * Fetches a URL using the SP.RequestExecutor library.\n     */\n    fetch(url, options) {\n        if (typeof SP === \"undefined\" || typeof SP.RequestExecutor === \"undefined\") {\n            throw new exceptions_1.SPRequestExecutorUndefinedException();\n        }\n        let addinWebUrl = url.substring(0, url.indexOf(\"/_api\")), executor = new SP.RequestExecutor(addinWebUrl), headers = {}, iterator, temp;\n        if (options.headers && options.headers instanceof Headers) {\n            iterator = options.headers.entries();\n            temp = iterator.next();\n            while (!temp.done) {\n                headers[temp.value[0]] = temp.value[1];\n                temp = iterator.next();\n            }\n        }\n        else {\n            headers = options.headers;\n        }\n        return new Promise((resolve, reject) => {\n            let requestOptions = {\n                error: (error) => {\n                    reject(this.convertToResponse(error));\n                },\n                headers: headers,\n                method: options.method,\n                success: (response) => {\n                    resolve(this.convertToResponse(response));\n                },\n                url: url,\n            };\n            if (options.body) {\n                requestOptions = util_1.Util.extend(requestOptions, { body: options.body });\n            }\n            else {\n                requestOptions = util_1.Util.extend(requestOptions, { binaryStringRequestBody: true });\n            }\n            executor.executeAsync(requestOptions);\n        });\n    }\n}\nexports.SPRequestExecutorClient = SPRequestExecutorClient;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/net/sprequestexecutorclient.js","\"use strict\";\nconst exceptions_1 = require(\"../utils/exceptions\");\n/**\n * This module is substituted for the NodeFetchClient.ts during the packaging process. This helps to reduce the pnp.js file size by\n * not including all of the node dependencies\n */\nclass NodeFetchClient {\n    /**\n     * Always throws an error that NodeFetchClient is not supported for use in the browser\n     */\n    fetch() {\n        throw new exceptions_1.NodeFetchClientUnsupportedException();\n    }\n}\nexports.NodeFetchClient = NodeFetchClient;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/net/nodefetchclientbrowser.js","\"use strict\";\nvar cachingConfigurationProvider_1 = require(\"./cachingConfigurationProvider\");\nexports.CachingConfigurationProvider = cachingConfigurationProvider_1.default;\nvar spListConfigurationProvider_1 = require(\"./spListConfigurationProvider\");\nexports.SPListConfigurationProvider = spListConfigurationProvider_1.default;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/configuration/providers/index.js","\"use strict\";\nconst storage = require(\"../../utils/storage\");\nconst exceptions_1 = require(\"../../utils/exceptions\");\n/**\n * A caching provider which can wrap other non-caching providers\n *\n */\nclass CachingConfigurationProvider {\n    /**\n     * Creates a new caching configuration provider\n     * @constructor\n     * @param {IConfigurationProvider} wrappedProvider Provider which will be used to fetch the configuration\n     * @param {string} cacheKey Key that will be used to store cached items to the cache\n     * @param {IPnPClientStore} cacheStore OPTIONAL storage, which will be used to store cached settings.\n     */\n    constructor(wrappedProvider, cacheKey, cacheStore) {\n        this.wrappedProvider = wrappedProvider;\n        this.store = (cacheStore) ? cacheStore : this.selectPnPCache();\n        this.cacheKey = `_configcache_${cacheKey}`;\n    }\n    /**\n     * Gets the wrapped configuration providers\n     *\n     * @return {IConfigurationProvider} Wrapped configuration provider\n     */\n    getWrappedProvider() {\n        return this.wrappedProvider;\n    }\n    /**\n     * Loads the configuration values either from the cache or from the wrapped provider\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    getConfiguration() {\n        // Cache not available, pass control to  the wrapped provider\n        if ((!this.store) || (!this.store.enabled)) {\n            return this.wrappedProvider.getConfiguration();\n        }\n        // Value is found in cache, return it directly\n        let cachedConfig = this.store.get(this.cacheKey);\n        if (cachedConfig) {\n            return new Promise((resolve) => {\n                resolve(cachedConfig);\n            });\n        }\n        // Get and cache value from the wrapped provider\n        let providerPromise = this.wrappedProvider.getConfiguration();\n        providerPromise.then((providedConfig) => {\n            this.store.put(this.cacheKey, providedConfig);\n        });\n        return providerPromise;\n    }\n    selectPnPCache() {\n        let pnpCache = new storage.PnPClientStorage();\n        if ((pnpCache.local) && (pnpCache.local.enabled)) {\n            return pnpCache.local;\n        }\n        if ((pnpCache.session) && (pnpCache.session.enabled)) {\n            return pnpCache.session;\n        }\n        throw new exceptions_1.NoCacheAvailableException();\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CachingConfigurationProvider;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/configuration/providers/cachingConfigurationProvider.js","\"use strict\";\nconst cachingConfigurationProvider_1 = require(\"./cachingConfigurationProvider\");\n/**\n * A configuration provider which loads configuration values from a SharePoint list\n *\n */\nclass SPListConfigurationProvider {\n    /**\n     * Creates a new SharePoint list based configuration provider\n     * @constructor\n     * @param {string} webUrl Url of the SharePoint site, where the configuration list is located\n     * @param {string} listTitle Title of the SharePoint list, which contains the configuration settings (optional, default = \"config\")\n     */\n    constructor(sourceWeb, sourceListTitle = \"config\") {\n        this.sourceWeb = sourceWeb;\n        this.sourceListTitle = sourceListTitle;\n    }\n    /**\n     * Gets the url of the SharePoint site, where the configuration list is located\n     *\n     * @return {string} Url address of the site\n     */\n    get web() {\n        return this.sourceWeb;\n    }\n    /**\n     * Gets the title of the SharePoint list, which contains the configuration settings\n     *\n     * @return {string} List title\n     */\n    get listTitle() {\n        return this.sourceListTitle;\n    }\n    /**\n     * Loads the configuration values from the SharePoint list\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    getConfiguration() {\n        return this.web.lists.getByTitle(this.listTitle).items.select(\"Title\", \"Value\")\n            .getAs().then((data) => {\n            return data.reduce((configuration, item) => {\n                return Object.defineProperty(configuration, item.Title, {\n                    configurable: false,\n                    enumerable: false,\n                    value: item.Value,\n                    writable: false,\n                });\n            }, {});\n        });\n    }\n    /**\n     * Wraps the current provider in a cache enabled provider\n     *\n     * @return {CachingConfigurationProvider} Caching providers which wraps the current provider\n     */\n    asCaching() {\n        let cacheKey = `splist_${this.web.toUrl()}+${this.listTitle}`;\n        return new cachingConfigurationProvider_1.default(this, cacheKey);\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SPListConfigurationProvider;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/configuration/providers/spListConfigurationProvider.js"],"sourceRoot":""}