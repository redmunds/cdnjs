!function(t,e){"object"==typeof module&&"object"==typeof module.exports&&(exports=module.exports=e()),"function"==typeof define&&define.amd&&define(e),"object"==typeof window&&(t.Terraformer=e())}(this,function(){function t(){this._thens=[]}function e(){var t=Array.prototype.slice.apply(arguments);void 0!==typeof console&&console.warn&&console.warn.apply(console,t)}function r(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);return t}function o(t){switch(t.type){case"Point":return[t.coordinates[0],t.coordinates[1],t.coordinates[0],t.coordinates[1]];case"MultiPoint":return s(t.coordinates);case"LineString":return s(t.coordinates);case"MultiLineString":return n(t.coordinates);case"Polygon":return n(t.coordinates);case"MultiPolygon":return i(t.coordinates);case"Feature":return o(t.geometry);case"FeatureCollection":return u(t);case"GeometryCollection":return a(t);default:throw new Error("Unknown type: "+t.type)}}function n(t){for(var e=null,r=null,o=null,n=null,i=0;i<t.length;i++)for(var s=t[i],u=0;u<s.length;u++){var a=s[u],c=a[0],h=a[1];null===e?e=c:c<e&&(e=c),null===r?r=c:c>r&&(r=c),null===o?o=h:h<o&&(o=h),null===n?n=h:h>n&&(n=h)}return[e,o,r,n]}function i(t){for(var e=null,r=null,o=null,n=null,i=0;i<t.length;i++)for(var s=t[i],u=0;u<s.length;u++)for(var a=s[u],c=0;c<a.length;c++){var h=a[c],l=h[0],f=h[1];null===e?e=l:l<e&&(e=l),null===r?r=l:l>r&&(r=l),null===o?o=f:f<o&&(o=f),null===n?n=f:f>n&&(n=f)}return[e,o,r,n]}function s(t){for(var e=null,r=null,o=null,n=null,i=0;i<t.length;i++){var s=t[i],u=s[0],a=s[1];null===e?e=u:u<e&&(e=u),null===r?r=u:u>r&&(r=u),null===o?o=a:a<o&&(o=a),null===n?n=a:a>n&&(n=a)}return[e,o,r,n]}function u(t){for(var e,r=[],n=t.features.length-1;n>=0;n--)e=o(t.features[n].geometry),r.push([e[0],e[1]]),r.push([e[2],e[3]]);return s(r)}function a(t){for(var e,r=[],n=t.geometries.length-1;n>=0;n--)e=o(t.geometries[n]),r.push([e[0],e[1]]),r.push([e[2],e[3]]);return s(r)}function c(t){var e=o(t);return{x:e[0],y:e[1],w:Math.abs(e[0]-e[2]),h:Math.abs(e[1]-e[3])}}function h(t){return t*Q}function l(t){return t*W}function f(t,e){for(var r=0;r<t.length;r++)"number"==typeof t[r][0]&&(t[r]=e(t[r])),"object"==typeof t[r]&&(t[r]=f(t[r],e));return t}function p(t){var e=t[0],r=t[1];return[h(e/K)-360*Math.floor((h(e/K)+180)/360),h(Math.PI/2-2*Math.atan(Math.exp(-1*r/K)))]}function y(t){var e=t[0],r=Math.max(Math.min(t[1],89.99999),-89.99999);return[l(e)*K,K/2*Math.log((1+Math.sin(l(r)))/(1-Math.sin(l(r))))]}function d(t,e,r){if("Point"===t.type)t.coordinates=e(t.coordinates);else if("Feature"===t.type)t.geometry=d(t.geometry,e,!0);else if("FeatureCollection"===t.type)for(var o=0;o<t.features.length;o++)t.features[o]=d(t.features[o],e,!0);else if("GeometryCollection"===t.type)for(var n=0;n<t.geometries.length;n++)t.geometries[n]=d(t.geometries[n],e,!0);else t.coordinates=f(t.coordinates,e);return r||e===y&&(t.crs=X),e===p&&delete t.crs,t}function g(t){return d(t,y)}function _(t){return d(t,p)}function v(t,e){return t<e?-1:t>e?1:0}function m(t,e,r){return v((e[0]-t[0])*(r[1]-t[1])-(r[0]-t[0])*(e[1]-t[1]),0)}function w(t,e){var r=e[0]-t[0],o=e[1]-t[1];return r*r+o*o}function P(t,e){var r=e;for(var o in t){var n=m(e,r,t[o]);(n===-1||0===n&&w(e,t[o])>w(e,r))&&(r=t[o])}return r}function M(t){function e(t,e){return t[0]-e[0]>t[1]-e[1]?1:t[0]-e[0]<t[1]-e[1]?-1:0}if(0===t.length)return[];if(1===t.length)return t;for(var r=[t.sort(e)[0]],o=0;o<r.length;o++){var n=P(t,r[o]);n!==r[0]&&r.push(n)}return r}function T(t,e){for(var r=!1,o=-1,n=t.length,i=n-1;++o<n;i=o)(t[o][1]<=e[1]&&e[1]<t[i][1]||t[i][1]<=e[1]&&e[1]<t[o][1])&&e[0]<(t[i][0]-t[o][0])*(e[1]-t[o][1])/(t[i][1]-t[o][1])+t[o][0]&&(r=!0);return r}function b(t,e){if(t&&t.length){if(1===t.length)return T(t[0],e);if(T(t[0],e)){for(var r=1;r<t.length;r++)if(T(t[r],e))return!1;return!0}return!1}return!1}function S(t,e,r,o){var n=(o[0]-r[0])*(t[1]-r[1])-(o[1]-r[1])*(t[0]-r[0]),i=(e[0]-t[0])*(t[1]-r[1])-(e[1]-t[1])*(t[0]-r[0]),s=(o[1]-r[1])*(e[0]-t[0])-(o[0]-r[0])*(e[1]-t[1]);if(0!==s){var u=n/s,a=i/s;if(0<=u&&u<=1&&0<=a&&a<=1)return!0}return!1}function G(t,e){for(var r=0;r<t.length-1;r++)for(var o=0;o<e.length-1;o++)if(S(t[r],t[r+1],e[o],e[o+1]))return!0;return!1}function x(t,e){for(var r=0;r<e.length;r++)for(var o=e[r],n=0;n<o.length-1;n++)for(var i=0;i<t.length-1;i++)if(S(o[n],o[n+1],t[i],t[i+1]))return!0;return!1}function C(t,e){for(var r=0;r<t.length;r++)if(x(t[r],e))return!0;return!1}function L(t,e){for(var r=0;r<e.length;r++)return!!x(t,e[r])}function A(t,e){for(var r=0;r<t.length;r++)return!!L(t[r],e)}function F(t,e){for(var r=0;r<t.length;r++)return!!A(t[r],e)}function E(t){for(var e=[],r=0;r<t.length;r++){var o=t[r].slice();O(o[0],o[o.length-1])===!1&&o.push(o[0]),e.push(o)}return e}function O(t,e){for(var r=0;r<t.length;r++)for(var o=0;o<e.length;o++)if(t[r]!==e[o])return!1;return!0}function j(t){if(t)switch(t.type){case"Point":return new k(t);case"MultiPoint":return new V(t);case"LineString":return new J(t);case"MultiLineString":return new N(t);case"Polygon":return new I(t);case"MultiPolygon":return new U(t);case"Feature":return new D(t);case"FeatureCollection":return new H(t);case"GeometryCollection":return new R(t);default:throw new Error("Unknown type: "+t.type)}}function k(t){var e=Array.prototype.slice.call(arguments);if(t&&"Point"===t.type&&t.coordinates)r(this,t);else if(t&&Array.isArray(t))this.coordinates=t;else{if(!(e.length>=2))throw"Terraformer: invalid input for Terraformer.Point";this.coordinates=e}this.type="Point",this.__defineGetter__("bbox",function(){return o(this)})}function V(t){if(t&&"MultiPoint"===t.type&&t.coordinates)r(this,t);else{if(!Array.isArray(t))throw"Terraformer: invalid input for Terraformer.MultiPoint";this.coordinates=t}this.type="MultiPoint",this.__defineGetter__("bbox",function(){return o(this)}),this.__defineGetter__("length",function(){return this.coordinates?this.coordinates.length:0})}function J(t){if(t&&"LineString"===t.type&&t.coordinates)r(this,t);else{if(!Array.isArray(t))throw"Terraformer: invalid input for Terraformer.LineString";this.coordinates=t}this.type="LineString",this.__defineGetter__("bbox",function(){return o(this)})}function N(t){if(t&&"MultiLineString"===t.type&&t.coordinates)r(this,t);else{if(!Array.isArray(t))throw"Terraformer: invalid input for Terraformer.MultiLineString";this.coordinates=t}this.type="MultiLineString",this.__defineGetter__("bbox",function(){return o(this)}),this.__defineGetter__("length",function(){return this.coordinates?this.coordinates.length:0})}function I(t){if(t&&"Polygon"===t.type&&t.coordinates)r(this,t);else{if(!Array.isArray(t))throw"Terraformer: invalid input for Terraformer.Polygon";this.coordinates=t}this.type="Polygon",this.__defineGetter__("bbox",function(){return o(this)})}function U(t){if(t&&"MultiPolygon"===t.type&&t.coordinates)r(this,t);else{if(!Array.isArray(t))throw"Terraformer: invalid input for Terraformer.MultiPolygon";this.coordinates=t}this.type="MultiPolygon",this.__defineGetter__("bbox",function(){return o(this)}),this.__defineGetter__("length",function(){return this.coordinates?this.coordinates.length:0})}function D(t){if(t&&"Feature"===t.type&&t.geometry)r(this,t);else{if(!(t&&t.type&&t.coordinates))throw"Terraformer: invalid input for Terraformer.Feature";this.geometry=t}this.type="Feature",this.__defineGetter__("bbox",function(){return o(this)})}function H(t){if(t&&"FeatureCollection"===t.type&&t.features)r(this,t);else{if(!Array.isArray(t))throw"Terraformer: invalid input for Terraformer.FeatureCollection";this.features=t}this.type="FeatureCollection",this.__defineGetter__("length",function(){return this.features?this.features.length:0}),this.__defineGetter__("bbox",function(){return o(this)})}function R(t){if(t&&"GeometryCollection"===t.type&&t.geometries)r(this,t);else if(Array.isArray(t))this.geometries=t;else{if(!t.coordinates||!t.type)throw"Terraformer: invalid input for Terraformer.GeometryCollection";this.type="GeometryCollection",this.geometries=[t]}this.type="GeometryCollection",this.__defineGetter__("length",function(){return this.geometries?this.geometries.length:0}),this.__defineGetter__("bbox",function(){return o(this)})}function B(t,e,r){for(var o=y(t),n=r||64,i=e||250,s={type:"Polygon",coordinates:[[]]},u=1;u<=n;u++){var a=u*(360/n)*Math.PI/180;s.coordinates[0].push([o[0]+i*Math.cos(a),o[1]+i*Math.sin(a)])}return _(s)}function q(t,e,n){var i=n||64,s=e||250;if(!t||t.length<2||!s||!i)throw new Error("Terraformer: missing parameter for Terraformer.Circle");r(this,new D({type:"Feature",geometry:B(t,s,i),properties:{radius:s,center:t,steps:i}})),this.__defineGetter__("bbox",function(){return o(this)}),this.__defineGetter__("radius",function(){return this.properties.radius}),this.__defineSetter__("radius",function(t){this.properties.radius=t,this.recalculate()}),this.__defineGetter__("steps",function(){return this.properties.steps}),this.__defineSetter__("steps",function(t){this.properties.steps=t,this.recalculate()}),this.__defineGetter__("center",function(){return this.properties.center}),this.__defineSetter__("center",function(t){this.properties.center=t,this.recalculate()})}var z={},K=6378137,Q=57.29577951308232,W=.017453292519943,X={type:"link",properties:{href:"http://spatialreference.org/ref/sr-org/6928/ogcwkt/",type:"ogcwkt"}},Y={type:"link",properties:{href:"http://spatialreference.org/ref/epsg/4326/ogcwkt/",type:"ogcwkt"}};t.prototype={then:function(t,e){return this._thens.push({resolve:t,reject:e}),this},resolve:function(t){return this._complete("resolve",t),this},reject:function(t){return this._complete("reject",t),this},_complete:function(t,e){this.then="resolve"===t?function(t,r){t(e)}:function(t,r){r(e)},this.resolve=this.reject=function(){throw new Error("Deferred already completed.")};for(var r=0;r<this._thens.length;r++){var o=this._thens[r];o[t]&&o[t](e)}delete this._thens}};var Z=["length","bbox"];return j.prototype={toMercator:function(){return g(this)},toGeographic:function(){return _(this)},envelope:function(){var t=o(this);return{x:t[0],y:t[1],w:Math.abs(t[0]-t[2]),h:Math.abs(t[1]-t[3])}},convexHull:function(){var t,e,r=[];if("Point"===this.type)return this.coordinates&&this.coordinates.length>0?[this.coordinates]:[];if("LineString"===this.type||"MultiPoint"===this.type){if(!(this.coordinates&&this.coordinates.length>0))return[];r=this.coordinates}else if("Polygon"===this.type||"MultiLineString"===this.type){if(!(this.coordinates&&this.coordinates.length>0))return[];for(t=0;t<this.coordinates.length;t++)r=r.concat(this.coordinates[t])}else{if("MultiPolygon"!==this.type)throw new Error("Unable to get convex hull of "+this.type);if(!(this.coordinates&&this.coordinates.length>0))return[];for(t=0;t<this.coordinates.length;t++)for(e=0;e<this.coordinates[t].length;e++)r=r.concat(this.coordinates[t][e])}return M(r)},toJSON:function(){var t={};for(var e in this)this.hasOwnProperty(e)&&this[e]&&Z.indexOf(e)&&(t[e]=this[e]);return t.bbox=o(this),t},toJson:function(){return JSON.stringify(this)}},j.prototype.intersects=function(t){if("Feature"===t.type&&(t=t.geometry),"LineString"===this.type){if("LineString"===t.type)return G(this.coordinates,t.coordinates);if("MultiLineString"===t.type)return x(this.coordinates,t.coordinates);if("Polygon"===t.type)return x(this.coordinates,E(t.coordinates));if("MultiPolygon"===t.type)return L(this.coordinates,t.coordinates)}else if("MultiLineString"===this.type){if("LineString"===t.type)return x(t.coordinates,this.coordinates);if("Polygon"===t.type||"MultiLineString"===t.type)return C(this.coordinates,t.coordinates);if("MultiPolygon"===t.type)return A(this.coordinates,t.coordinates)}else if("Polygon"===this.type){if("LineString"===t.type)return x(t.coordinates,E(this.coordinates));if("MultiLineString"===t.type)return C(E(this.coordinates),t.coordinates);if("Polygon"===t.type)return C(E(this.coordinates),E(t.coordinates));if("MultiPolygon"===t.type)return A(E(this.coordinates),t.coordinates)}else if("MultiPolygon"===this.type){if("LineString"===t.type)return L(t.coordinates,this.coordinates);if("Polygon"===t.type||"MultiLineString"===t.type)return A(E(t.coordinates),this.coordinates);if("MultiPolygon"===t.type)return F(this.coordinates,t.coordinates)}else if("Feature"===this.type){var r=new j(this.geometry);return r.intersects(t)}return e("Type "+this.type+" to "+t.type+" intersection is not supported by intersects"),!1},k.prototype=new j,k.prototype.constructor=k,V.prototype=new j,V.prototype.constructor=V,V.prototype.forEach=function(t){for(var e=0;e<this.length;e++)t.apply(this,[this.coordinates[e],e,this.coordinates]);return this},V.prototype.addPoint=function(t){return this.coordinates.push(t),this},V.prototype.insertPoint=function(t,e){return this.coordinates.splice(e,0,t),this},V.prototype.removePoint=function(t){return"number"==typeof t?this.coordinates.splice(t,1):this.coordinates.splice(this.coordinates.indexOf(t),1),this},V.prototype.get=function(t){return new k(this.coordinates[t])},J.prototype=new j,J.prototype.constructor=J,J.prototype.addVertex=function(t){return this.coordinates.push(t),this},J.prototype.insertVertex=function(t,e){return this.coordinates.splice(e,0,t),this},J.prototype.removeVertex=function(t){return this.coordinates.splice(t,1),this},N.prototype=new j,N.prototype.constructor=N,N.prototype.forEach=function(t){for(var e=0;e<this.coordinates.length;e++)t.apply(this,[this.coordinates[e],e,this.coordinates])},N.prototype.get=function(t){return new J(this.coordinates[t])},I.prototype=new j,I.prototype.constructor=I,I.prototype.addVertex=function(t){return this.coordinates[0].push(t),this},I.prototype.insertVertex=function(t,e){return this.coordinates[0].splice(e,0,t),this},I.prototype.removeVertex=function(t){return this.coordinates[0].splice(t,1),this},I.prototype.contains=function(t){if("Point"===t.type)return b(this.coordinates,t.coordinates);if("Polygon"===t.type){if(t.coordinates.length>0&&t.coordinates[0].length>0&&b(this.coordinates,t.coordinates[0][0])===!0&&this.intersects(t)===!1)return!0}else if("MultiPolygon"===t.type&&t.coordinates.length>0)for(var e=0;e<t.coordinates.length;e++)if(t.coordinates[e][0].length>0&&b(this.coordinates,t.coordinates[e][0][0])===!0&&this.intersects({type:"Polygon",coordinates:t.coordinates[e]})===!1)return!0;return!1},U.prototype=new j,U.prototype.constructor=U,U.prototype.forEach=function(t){for(var e=0;e<this.coordinates.length;e++)t.apply(this,[this.coordinates[e],e,this.coordinates])},U.prototype.contains=function(t){if("Point"!==t.type)throw new Error("Only points are supported");for(var e=0;e<this.coordinates.length;e++)if(b(this.coordinates[e],t.coordinates))return!0;return!1},U.prototype.get=function(t){return new I(this.coordinates[t])},D.prototype=new j,D.prototype.constructor=D,D.prototype.contains=function(t){if("Point"!==t.type)throw new Error("Only points are supported");if(!this.geometry.type.match(/Polygon/))throw new Error("Only features containing Polygons and MultiPolygons are supported");if("MultiPolygon"===this.geometry.type)for(var e=0;e<this.geometry.coordinates.length;e++)if(b(this.geometry.coordinates[e],t.coordinates))return!0;return"Polygon"===this.geometry.type&&b(this.geometry.coordinates,t.coordinates)},H.prototype=new j,H.prototype.constructor=H,H.prototype.forEach=function(t){for(var e=0;e<this.features.length;e++)t.apply(this,[this.features[e],e,this.features])},H.prototype.get=function(t){var e;return this.forEach(function(r){r.id===t&&(e=r)}),new D(e)},R.prototype=new j,R.prototype.constructor=R,R.prototype.forEach=function(t){for(var e=0;e<this.geometries.length;e++)t.apply(this,[this.geometries[e],e,this.geometries])},R.prototype.get=function(t){return new j(this.geometries[t])},q.prototype=new j,q.prototype.constructor=q,q.prototype.recalculate=function(){return this.geometry=B(this.center,this.radius,this.steps),this},q.prototype.contains=function(t){if("Point"!==t.type)throw new Error("Only points are supported");return b(this.geometry.coordinates,t.coordinates)},q.prototype.toJSON=function(){var t=j.prototype.toJSON.call(this);return t.properties.center=t.center,t.properties.steps=t.steps,t.properties.radius=t.radius,delete t.center,delete t.steps,delete t.radius,t},z.Primitive=j,z.Point=k,z.MultiPoint=V,z.LineString=J,z.MultiLineString=N,z.Polygon=I,z.MultiPolygon=U,z.Feature=D,z.FeatureCollection=H,z.GeometryCollection=R,z.Circle=q,z.toMercator=g,z.toGeographic=_,z.Tools={},z.Tools.positionToMercator=y,z.Tools.positionToGeographic=p,z.Tools.applyConverter=d,z.Tools.toMercator=g,z.Tools.toGeographic=_,z.Tools.createCircle=B,z.Tools.calculateBounds=o,z.Tools.calculateEnvelope=c,z.Tools.coordinatesContainPoint=T,z.Tools.polygonContainsPoint=b,z.Tools.arrayIntersectsArray=G,z.Tools.coordinatesContainPoint=T,z.Tools.convexHull=M,z.MercatorCRS=X,z.GeographicCRS=Y,z.Deferred=t,z});