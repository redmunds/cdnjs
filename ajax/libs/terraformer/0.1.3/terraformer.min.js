!function(t,e){"object"==typeof module&&"object"==typeof module.exports?exports=module.exports=e():"function"==typeof define&&define.amd?define(e):t.Terraformer=e(),"object"==typeof jasmine&&(void 0===typeof Terraformer&&(t.Terraformer={}),t.Terraformer=e())}(this,function(){function t(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);return t}function e(t){switch(t.type){case"Point":return[t.coordinates[0],t.coordinates[1],t.coordinates[0],t.coordinates[1]];case"MultiPoint":return o(t.coordinates);case"LineString":return o(t.coordinates);case"MultiLineString":return r(t.coordinates);case"Polygon":return o(t.coordinates[0]);case"MultiPolygon":return r(t.coordinates);case"Feature":return e(t.geometry);case"FeatureCollection":return i(t);case"GeometryCollection":return n(t);default:throw new Error("Unknown type: "+t.type)}}function r(t){for(var e,i=[],n=t.length-1;n>=0;n--)"number"==typeof t[n][0]?(e=o(t),i.push([e[0],e[1]]),i.push([e[2],e[3]])):"object"==typeof t[n][0]&&(e=r(t[n]),i.push([e[0],e[1]]),i.push([e[2],e[3]]));return o(i)}function o(t){for(var e,r,o,i,n=t.length-1;n>=0;n--){var s=t[n],a=s[0],c=s[1];void 0===e?e=a:a<e&&(e=a),void 0===o?o=c:c<o&&(o=c),void 0===r?r=a:a>r&&(r=a),void 0===i?i=c:c>i&&(i=c)}return[e,o,r,i]}function i(t){for(var r,i=[],n=t.features.length-1;n>=0;n--)r=e(t.features[n].geometry),i.push([r[0],r[1]]),i.push([r[2],r[3]]);return o(i)}function n(t){for(var r,i=[],n=t.geometries.length-1;n>=0;n--)r=e(t.geometries[n]),i.push([r[0],r[1]]),i.push([r[2],r[3]]);return o(i)}function s(t){return t*V}function a(t){return t*J}function c(t,e){for(var r=0;r<t.geometries.length;r++)t.geometries[r].geometry=h(t.features[r].geometry,e);return t}function u(t,e){for(var r=0;r<t.features.length;r++)t.features[r].geometry=h(t.features[r].geometry,e);return t}function h(t,e){for(var r=0;r<t.length;r++)"number"==typeof t[r][0]&&(t[r]=e(t[r])),"object"==typeof t[r]&&(t[r]=h(t[r],e));return t}function f(t){var e=t[0],r=t[1];return[s(e/j)-360*Math.floor((s(e/j)+180)/360),s(Math.PI/2-2*Math.atan(Math.exp(-1*r/j)))]}function p(t){var e=t[0],r=Math.max(Math.min(t[1],89.99999),-89.99999);return[a(e)*j,j/2*Math.log((1+Math.sin(a(r)))/(1-Math.sin(a(r))))]}function l(t,e){return"Point"===t.type?t.coordinates=e(t.coordinates):"Feature"===t.type?t.geometry=l(t,e):"FeatureCollection"===t.type?t.features=u(t,e):"GeometryCollection"===t.type?t.geometries=c(t,e):t.coordinates=h(t.coordinates,e),e===p&&(t.crs=U),e===f&&delete t.crs,t}function y(t){return l(t,p)}function d(t){return l(t,f)}function g(t,e){return t<e?-1:t>e?1:0}function _(t,e,r){return g((e[0]-t[0])*(r[1]-t[1])-(r[0]-t[0])*(e[1]-t[1]),0)}function m(t,e){var r=e[0]-t[0],o=e[1]-t[1];return r*r+o*o}function v(t,e){var r=e;for(var o in t){var i=_(e,r,t[o]);(i===-1||0===i&&m(e,t[o])>m(e,r))&&(r=t[o])}return r}function w(t){function e(t,e){return t[0]-e[0]>t[1]-e[1]?1:t[0]-e[0]<t[1]-e[1]?-1:0}if(0===t.length)return[];if(1===t.length)return t;for(var r=[t.sort(e)[0]],o=0;o<r.length;o++){var i=v(t,r[o]);i!==r[0]&&r.push(i)}return r}function P(t,e){for(var r=!1,o=-1,i=t.length,n=i-1;++o<i;n=o)(t[o][1]<=e[1]&&e[1]<t[n][1]||t[n][1]<=e[1]&&e[1]<t[o][1])&&e[0]<(t[n][0]-t[o][0])*(e[1]-t[o][1])/(t[n][1]-t[o][1])+t[o][0]&&(r=!0);return r}function M(t){if(t)switch(t.type){case"Point":return new T(t);case"MultiPoint":return new G(t);case"LineString":return new b(t);case"MultiLineString":return new x(t);case"Polygon":return new C(t);case"MultiPolygon":return new S(t);case"Feature":return new A(t);case"FeatureCollection":return new F(t);case"GeometryCollection":return new L(t);default:throw new Error("Unknown type: "+t.type)}}function T(r){var o=Array.prototype.slice.call(arguments);if(r&&"Point"===r.type&&r.coordinates)t(this,r);else if(r&&Array.isArray(r))this.coordinates=r;else{if(!(o.length>=2))throw"Terraformer: invalid input for Terraformer.Point";this.coordinates=o}this.type="Point",this.__defineGetter__("bbox",function(){return e(this)})}function G(r){if(r&&"MultiPoint"===r.type&&r.coordinates)t(this,r);else{if(!Array.isArray(r))throw"Terraformer: invalid input for Terraformer.MultiPoint";this.coordinates=r}this.type="MultiPoint",this.__defineGetter__("bbox",function(){return e(this)}),this.__defineGetter__("length",function(){return this.coordinates?this.coordinates.length:0})}function b(r){if(r&&"LineString"===r.type&&r.coordinates)t(this,r);else{if(!Array.isArray(r))throw"Terraformer: invalid input for Terraformer.LineString";this.coordinates=r}this.type="LineString",this.__defineGetter__("bbox",function(){return e(this)})}function x(r){if(r&&"MultiLineString"===r.type&&r.coordinates)t(this,r);else{if(!Array.isArray(r))throw"Terraformer: invalid input for Terraformer.MultiLineString";this.coordinates=r}this.type="MultiLineString",this.__defineGetter__("bbox",function(){return e(this)}),this.__defineGetter__("length",function(){return this.coordinates?this.coordinates.length:0})}function C(r){if(r&&"Polygon"===r.type&&r.coordinates)t(this,r);else{if(!Array.isArray(r))throw"Terraformer: invalid input for Terraformer.Polygon";this.coordinates=r}this.type="Polygon",this.__defineGetter__("bbox",function(){return e(this)})}function S(r){if(r&&"MultiPolygon"===r.type&&r.coordinates)t(this,r);else{if(!Array.isArray(r))throw"Terraformer: invalid input for Terraformer.MultiPolygon";this.coordinates=r}this.type="MultiPolygon",this.__defineGetter__("bbox",function(){return e(this)}),this.__defineGetter__("length",function(){return this.coordinates?this.coordinates.length:0})}function A(r){if(r&&"Feature"===r.type&&r.geometry)t(this,r);else{if(!(r&&r.type&&r.coordinates))throw"Terraformer: invalid input for Terraformer.Feature";this.geometry=r}this.type="Feature",this.__defineGetter__("bbox",function(){return e(this)})}function F(r){if(r&&"FeatureCollection"===r.type&&r.features)t(this,r);else{if(!Array.isArray(r))throw"Terraformer: invalid input for Terraformer.FeatureCollection";this.features=r}this.type="FeatureCollection",this.__defineGetter__("length",function(){return this.features?this.features.length:0}),this.__defineGetter__("bbox",function(){return e(this)})}function L(r){if(r&&"GeometryCollection"===r.type&&r.geometries)t(this,r);else if(Array.isArray(r))this.geometries=r;else{if(!r.coordinates||!r.type)throw"Terraformer: invalid input for Terraformer.GeometryCollection";this.type="GeometryCollection",this.geometries=[r]}this.type="GeometryCollection",this.__defineGetter__("length",function(){return this.geometries?this.geometries.length:0}),this.__defineGetter__("bbox",function(){return e(this)})}function E(t,e,r){for(var o=p(t),i=r||64,n=e||250,s={type:"Polygon",coordinates:[[]]},a=1;a<=i;a++){var c=a*(360/i)*Math.PI/180;s.coordinates[0].push([o[0]+n*Math.cos(c),o[1]+n*Math.sin(c)])}return d(s)}function k(r,o,i){var n=i||64,s=o||250;if(!r||r.length<2||!s||!n)throw new Error("Terraformer: missing parameter for Terraformer.Circle");t(this,new A({type:"Feature",geometry:E(r,s,n),properties:{radius:s,center:r,steps:n}})),this.__defineGetter__("bbox",function(){return e(this)}),this.__defineGetter__("radius",function(){return this.properties.radius}),this.__defineSetter__("radius",function(t){this.properties.radius=t,this.recalculate()}),this.__defineGetter__("steps",function(){return this.properties.steps}),this.__defineSetter__("steps",function(t){this.properties.steps=t,this.recalculate()}),this.__defineGetter__("center",function(){return this.properties.center}),this.__defineSetter__("center",function(t){this.properties.center=t,this.recalculate()})}var O={},j=6378137,V=57.29577951308232,J=.017453292519943,U={type:"link",properties:{href:"http://spatialreference.org/ref/sr-org/6928/ogcwkt/",type:"ogcwkt"}},H={type:"link",properties:{href:"http://spatialreference.org/ref/epsg/4326/ogcwkt/",type:"ogcwkt"}},I=["length"];return M.prototype={toMercator:function(){return y(this)},toGeographic:function(){return d(this)},convexHull:function(){var t,e,r=[];if("Point"===this.type)return this.coordinates&&this.coordinates.length>0?[this.coordinates]:[];if("LineString"===this.type||"MultiPoint"===this.type){if(!(this.coordinates&&this.coordinates.length>0))return[];r=this.coordinates}else if("Polygon"===this.type||"MultiLineString"===this.type){if(!(this.coordinates&&this.coordinates.length>0))return[];for(t=0;t<this.coordinates.length;t++)r=r.concat(this.coordinates[t])}else{if("MultiPolygon"!==this.type)throw new Error("Unable to get convex hull of "+this.type);if(!(this.coordinates&&this.coordinates.length>0))return[];for(t=0;t<this.coordinates.length;t++)for(e=0;e<this.coordinates[t].length;e++)r=r.concat(this.coordinates[t][e])}return w(r)},toJSON:function(){var t={};for(var e in this)this.hasOwnProperty(e)&&this[e]&&I.indexOf(e)&&(t[e]=this[e]);return t},toJson:function(){return JSON.stringify(this)}},T.prototype=new M,T.prototype.constructor=T,G.prototype=new M,G.prototype.constructor=G,G.prototype.forEach=function(t){for(var e=0;e<this.length;e++)t.apply(this,[this.coordinates[e],e,this.coordinates]);return this},G.prototype.addPoint=function(t){return this.coordinates.push(t),this},G.prototype.insertPoint=function(t,e){return this.coordinates.splice(e,0,t),this},G.prototype.removePoint=function(t){return"number"==typeof t?this.coordinates.splice(t,1):this.coordinates.splice(this.coordinates.indexOf(t),1),this},b.prototype=new M,b.prototype.constructor=b,b.prototype.addVertex=function(t){return this.coordinates.push(t),this},b.prototype.insertVertex=function(t,e){return this.coordinates.splice(e,0,t),this},b.prototype.removeVertex=function(t){return this.coordinates.splice(t,1),this},x.prototype=new M,x.prototype.constructor=x,x.prototype.forEach=function(t){for(var e=0;e<this.coordinates.length;e++)t.apply(this,[this.coordinates[e],e,this.coordinates])},C.prototype=new M,C.prototype.constructor=C,C.prototype.addVertex=function(t){return this.coordinates[0].push(t),this},C.prototype.insertVertex=function(t,e){return this.coordinates[0].splice(e,0,t),this},C.prototype.removeVertex=function(t){return this.coordinates[0].splice(t,1),this},C.prototype.contains=function(t){if("Point"!==t.type)throw new Error("Only points are supported");if(t.coordinates&&t.coordinates.length){if(this.coordinates&&1===this.coordinates.length)return P(this.coordinates[0],t.coordinates);if(P(this.coordinates[0],t.coordinates)){for(var e=1;e<this.coordinates.length;e++)if(P(this.coordinates[e],t.coordinates))return!1;return!0}return!1}},S.prototype=new M,S.prototype.constructor=S,S.prototype.forEach=function(t){for(var e=0;e<this.coordinates.length;e++)t.apply(this,[this.coordinates[e],e,this.coordinates])},A.prototype=new M,A.prototype.constructor=A,F.prototype=new M,F.prototype.constructor=F,F.prototype.forEach=function(t){for(var e=0;e<this.features.length;e++)t.apply(this,[this.features[e],e,this.features])},F.prototype.get=function(t){var e;return this.forEach(function(r){console.log(r.id,t),r.id===t&&(e=r)}),e},L.prototype=new M,L.prototype.constructor=L,L.prototype.forEach=function(t){for(var e=0;e<this.geometries.length;e++)t.apply(this,[this.geometries[e],e,this.geometries])},k.prototype=new M,k.prototype.constructor=k,k.prototype.recalculate=function(){return this.geometry=E(this.center,this.radius,this.steps),this},O.Primitive=M,O.Point=T,O.MultiPoint=G,O.LineString=b,O.MultiLineString=x,O.Polygon=C,O.MultiPolygon=S,O.Feature=A,O.FeatureCollection=F,O.GeometryCollection=L,O.Circle=k,O.toMercator=y,O.toGeographic=d,O.Tools={},O.Tools.positionToMercator=p,O.Tools.positionToGeographic=f,O.Tools.applyConverter=l,O.Tools.toMercator=y,O.Tools.toGeographic=d,O.Tools.createCircle=E,O.Tools.calculateBounds=e,O.Tools.coordinatesContainPoint=P,O.Tools.convexHull=w,O.MercatorCRS=U,O.GeographicCRS=H,O});