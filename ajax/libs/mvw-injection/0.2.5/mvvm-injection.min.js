/*! MVW-Injection (0.2.5). (C) 2015 Xavier Boubert. MIT @license: en.wikipedia.org/wiki/MIT_License */
!function(e){"use strict";var t=new function(){function e(e){if("function"==typeof e){var t=e.toString().replace(/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,""),r=t.match(/^function\s*[^\(]*\s*\(\s*([^\)]*)\)/m);return e=null===r||r.length<2?[e]:r[1].replace(/\s/g,"").split(",").filter(function(e){return e.trim().length>0}).concat(e)}for(var n=[],i=0;i<e.length;i++)n.push(e[i]);return e=n}function t(t){function i(t,o,c,f){var s,a,u=n[o].interfacesSupported,l=[];for(s=0;s<t.length;s++){var d=null;if(c&&"undefined"!=typeof c[t[s]])d=c[t[s]];else for(a=0;a<u.length;a++){if(!n[u[a]]){if(f)return!1;throw new Error('DependencyInjection: "'+u[a]+'" interface is not registered.')}if(d=n[u[a]].factories[t[s]]){d.interfaceName=u[a];break}}if(!d){if(f)return!1;throw new Error('DependencyInjection: "'+t[s]+'" is not registered or accessible in '+o+".")}if(!d.instantiated){var p=e(d.result);d.result=p.pop();var v=i(p,d.interfaceName);d.result=d.result.apply(r,v),d.instantiated=!0}l.push(d.result)}return l}this.get=function(e,r){var n=i([e],t,null,r);return!!n.length&&n[0]},this.invoke=function(r,n,o){var c=e(n);if(n=c.pop(),o){var f,s,a={};for(f in o)for(s in o[f])a[s]={interfaceName:f,instantiated:!1,result:o[f][s]};o=a}var u=i(c,t,o);return n.apply(r,u)}}var r=this,n={};this.injector={},this.registerInterface=function(e,i){return r[e]?r:(n[e]={interfacesSupported:(i||[]).concat(e),factories:{}},r.injector[e]=new t(e),r[e]=function(t,i,o){return!o&&n[e].factories[t]?r:(n[e].factories[t]={instantiated:!1,result:i},r)},r)}};"undefined"!=typeof module&&"undefined"!=typeof module.exports?module.exports=t:e.DependencyInjection=t}(this),function(e){"use strict";var t="undefined"!=typeof module&&"undefined"!=typeof module.exports?module.exports:e.DependencyInjection;t.registerInterface("model",["viewmodel","factory","service"]),t.registerInterface("factory",["viewmodel","model","service"]),t.registerInterface("service",["viewmodel","model","factory"]),t.registerInterface("viewmodel",["model","factory","service","view","converter"]),t.registerInterface("view",["viewmodel","converter"]),t.registerInterface("converter",["viewmodel","view"])}(this);
//# sourceMappingURL=mvvm-injection.min.js.map
