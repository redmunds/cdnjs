/*! MVW-Injection (0.2.5). (C) 2015 Xavier Boubert. MIT @license: en.wikipedia.org/wiki/MIT_License */
!function(e){"use strict";var t=new function(){function e(e){if("function"==typeof e){var t=e.toString().replace(/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,""),n=t.match(/^function\s*[^\(]*\s*\(\s*([^\)]*)\)/m);return e=null===n||n.length<2?[e]:n[1].replace(/\s/g,"").split(",").filter(function(e){return e.trim().length>0}).concat(e)}for(var r=[],i=0;i<e.length;i++)r.push(e[i]);return e=r}function t(t){function i(t,o,f,a){var s,u,c=r[o].interfacesSupported,l=[];for(s=0;s<t.length;s++){var p=null;if(f&&"undefined"!=typeof f[t[s]])p=f[t[s]];else for(u=0;u<c.length;u++){if(!r[c[u]]){if(a)return!1;throw new Error('DependencyInjection: "'+c[u]+'" interface is not registered.')}if(p=r[c[u]].factories[t[s]]){p.interfaceName=c[u];break}}if(!p){if(a)return!1;throw new Error('DependencyInjection: "'+t[s]+'" is not registered or accessible in '+o+".")}if(!p.instantiated){var d=e(p.result);p.result=d.pop();var h=i(d,p.interfaceName);p.result=p.result.apply(n,h),p.instantiated=!0}l.push(p.result)}return l}this.get=function(e,n){var r=i([e],t,null,n);return!!r.length&&r[0]},this.invoke=function(n,r,o){var f=e(r);if(r=f.pop(),o){var a,s,u={};for(a in o)for(s in o[a])u[s]={interfaceName:a,instantiated:!1,result:o[a][s]};o=u}var c=i(f,t,o);return r.apply(n,c)}}var n=this,r={};this.injector={},this.registerInterface=function(e,i){return n[e]?n:(r[e]={interfacesSupported:(i||[]).concat(e),factories:{}},n.injector[e]=new t(e),n[e]=function(t,i,o){return!o&&r[e].factories[t]?n:(r[e].factories[t]={instantiated:!1,result:i},n)},n)}};"undefined"!=typeof module&&"undefined"!=typeof module.exports?module.exports=t:e.DependencyInjection=t}(this);
//# sourceMappingURL=dependency-injection.min.js.map
