/*!
 * angular-ui-validate
 * https://github.com/angular-ui/ui-validate
 * Version: 1.0.0 - 2015-07-01T02:12:50.657Z
 * License: MIT
 */
!function(){"use strict";angular.module("ui.validate",[]).directive("uiValidate",function(){return{restrict:"A",require:"ngModel",link:function(a,n,i,t){function u(n){return angular.isString(n)?(a.$watch(n,function(){angular.forEach(e,function(a){a(t.$modelValue)})}),void 0):angular.isArray(n)?(angular.forEach(n,function(n){a.$watch(n,function(){angular.forEach(e,function(a){a(t.$modelValue)})})}),void 0):(angular.isObject(n)&&angular.forEach(n,function(n,i){angular.isString(n)&&a.$watch(n,function(){e[i](t.$modelValue)}),angular.isArray(n)&&angular.forEach(n,function(n){a.$watch(n,function(){e[i](t.$modelValue)})})}),void 0)}var r,e={},l=a.$eval(i.uiValidate);l&&(angular.isString(l)&&(l={validator:l}),angular.forEach(l,function(n,i){r=function(u){var r=a.$eval(n,{$value:u});return angular.isObject(r)&&angular.isFunction(r.then)?(angular.isUndefined(t.$pending)&&(t.$pending={}),t.$pending[i]=!0,r.then(function(){t.$setValidity(i,!0)},function(){t.$setValidity(i,!1)}),u):r?(t.$setValidity(i,!0),u):(t.$setValidity(i,!1),u)},e[i]=r,t.$formatters.push(r),t.$parsers.push(r)}),i.uiValidateWatch&&u(a.$eval(i.uiValidateWatch)))}}})}();