{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:/webpack/bootstrap 06de00424601a9ff8b00?f433","webpack:///src/navigatorLanguage.js?b003","webpack:///src/createAutocompleteDataset.js?1b89","webpack:///src/createAutocompleteSource.js?ddf0","webpack:///src/formatHit.js?aa26","webpack:///src/findCountryCode.js?d09b","webpack:///src/findType.js?4fba","webpack:///src/defaultTemplates.js?34d1","webpack:///src/formatInputValue.js?0f7a","webpack:///src/formatDropdownValue.js?9a5f","webpack:///~/insert-css/index.js?f60e"],"names":["root","factory","exports","module","define","amd","this","modules","installedModules","moduleId","id","loaded","navigator","language","templates","formatInputValue","default","_extends","options","undefined","source","displayKey","name","algoliasearch","clientOptions","_ref","apiKey","appId","hitsPerPage","aroundLatLng","aroundRadius","aroundLatLngViaIP","countries","computeQueryParams","_ref$computeQueryPara","params","useDeviceLocation","_ref$useDeviceLocatio","_ref$language","split","onHits","onError","_ref$onHits","_ref$onError","e","onRateLimitReached","type","placesClient","addAlgoliaAgent","initPlaces","defaultQueryParams","toLowerCase","coords","_ref2","userCoords","latitude","longitude","query","cb","hits","content","map","hitIndex","_extends2","_defineProperty","then","hit","rawAnswer","statusCode","defaultValue","highlightedValues","value","bestAttributes","length","i","matchedWords","index","push","words","sort","a","b","country","administrative","city","getBestHighlightedForm","_highlightResult","countryCode","_findCountryCode2","_tags","latlng","_findType2","lat","lng","_geoloc","postcode","highlight","console","error","findCountryCode","tagIndex","tag","tags","find","match","types","amenity/bus_station","amenity/townhall","railway/station","aeroway/aerodrome","aeroway/terminal","aeroway/gate","indexOf","t","footer","_algolia2","trim","_osm2","suggestion","out","replace","token","icons","filter","address","busStop","trainStation","townhall","airport","_plane2","insertCss","css","Error","usage","position","prepend","container","document","querySelector","containerId","containers","styleElements","styleElement","insertBefore","childNodes","appendChild","styleSheet","cssText","textContent","createStyleElement","createElement","setAttribute"],"mappings":"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","file":"dist/cdn/placesAutocompleteDataset.min.js","sourceRoot":"","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"placesAutocompleteDataset\"] = factory();\n\telse\n\t\troot[\"placesAutocompleteDataset\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 06de00424601a9ff8b00","// polyfill for navigator.language (IE <= 10)\n// not polyfilled by https://cdn.polyfill.io/v2/docs/\n\n// Defined: http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#navigatorlanguage\n//   with allowable values at http://www.ietf.org/rfc/bcp/bcp47.txt\n// Note that the HTML spec suggests that anonymizing services return \"en-US\" by default for\n//   user privacy (so your app may wish to provide a means of changing the locale)\nif (!('language' in navigator)) {\n  navigator.language =\n  // IE 10 in IE8 mode on Windows 7 uses upper-case in\n  // navigator.userLanguage country codes but per\n  // http://msdn.microsoft.com/en-us/library/ie/ms533052.aspx (via\n  // http://msdn.microsoft.com/en-us/library/ie/ms534713.aspx), they\n  // appear to be in lower case, so we bring them into harmony with navigator.language.\n  navigator.userLanguage && navigator.userLanguage.replace(/-[a-z]{2}$/, String.prototype.toUpperCase) ||\n  'en-US'; // Default for anonymizing services: http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#navigatorlanguage\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/navigatorLanguage.js","import createAutocompleteSource from './createAutocompleteSource.js';\nimport defaultTemplates from './defaultTemplates.js';\n\nexport default function createAutocompleteDataset(options) {\n  const templates = {\n    ...defaultTemplates,\n    ...options.templates,\n  };\n\n  const source = createAutocompleteSource({\n    ...options,\n    formatInputValue: templates.value,\n    templates: undefined,\n  });\n\n  return {\n    source,\n    templates,\n    displayKey: 'value',\n    name: 'places',\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/createAutocompleteDataset.js","import formatHit from './formatHit.js';\nimport version from './version.js';\n\nexport default function createAutocompleteSource({\n  algoliasearch,\n  clientOptions,\n  apiKey,\n  appId,\n  hitsPerPage,\n  aroundLatLng,\n  aroundRadius,\n  aroundLatLngViaIP,\n  countries,\n  formatInputValue,\n  computeQueryParams = params => params,\n  useDeviceLocation = false,\n  language = navigator.language.split('-')[0],\n  onHits = () => {},\n  onError = e => { throw e; },\n  onRateLimitReached,\n  type,\n}) {\n  const placesClient = algoliasearch.initPlaces(\n    appId,\n    apiKey,\n    clientOptions\n  );\n  placesClient.as.addAlgoliaAgent(`Algolia Places ${version}`);\n\n  const defaultQueryParams = {\n    countries,\n    hitsPerPage: hitsPerPage || 5,\n    language,\n    type,\n  };\n\n  if (typeof defaultQueryParams.countries === 'string') {\n    defaultQueryParams.countries = defaultQueryParams.countries.toLowerCase();\n  }\n\n  if (typeof defaultQueryParams.language === 'string') {\n    defaultQueryParams.language = defaultQueryParams.language.toLowerCase();\n  }\n\n  if (aroundLatLng) {\n    defaultQueryParams.aroundLatLng = aroundLatLng;\n  } else if (aroundLatLngViaIP !== undefined) {\n    defaultQueryParams.aroundLatLngViaIP = aroundLatLngViaIP;\n  }\n\n  if (aroundRadius) {\n    defaultQueryParams.aroundRadius = aroundRadius;\n  }\n\n  let userCoords;\n  if (useDeviceLocation) {\n    navigator.geolocation.watchPosition(\n      ({coords}) => { userCoords = `${coords.latitude},${coords.longitude}`; }\n    );\n  }\n\n  return (query, cb) => placesClient\n      .search(computeQueryParams({\n        ...defaultQueryParams,\n        [userCoords ? 'aroundLatLng' : undefined]: userCoords,\n        query,\n      }))\n      .then(\n        content => {\n          const hits = content.hits.map((hit, hitIndex) =>\n            formatHit({\n              formatInputValue,\n              hit,\n              hitIndex,\n              query,\n              rawAnswer: content,\n            })\n          );\n\n          onHits({\n            hits,\n            query,\n            rawAnswer: content,\n          });\n\n          return hits;\n        }\n      )\n      .then(cb)\n      .catch(e => {\n        if (e.statusCode === 429) {\n          onRateLimitReached();\n          return;\n        }\n\n        onError(e);\n      });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/createAutocompleteSource.js","import findCountryCode from './findCountryCode.js';\nimport findType from './findType.js';\n\nfunction getBestHighlightedForm(highlightedValues) {\n  const defaultValue = highlightedValues[0].value;\n  // collect all other matches\n  const bestAttributes = [];\n  for (let i = 1; i < highlightedValues.length; ++i) {\n    if (highlightedValues[i].matchLevel !== 'none') {\n      bestAttributes.push({index: i, matchedWords: highlightedValues[i].words});\n    }\n  }\n  // no matches in this attribute, retrieve first value\n  if (bestAttributes.length === 0) {\n    return defaultValue;\n  }\n  // sort the matches by `desc(words), asc(index)`\n  bestAttributes.sort((a, b) => {\n    if (a.words > b.words) {\n      return -1;\n    } else if (a.words < b.words) {\n      return 1;\n    }\n    return a.index - b.index;\n  });\n  // and append the best match to the first value\n  return bestAttributes[0].index === 0 ? `${defaultValue} (${highlightedValues[bestAttributes[1].index].value})`\n    : `${highlightedValues[bestAttributes[0].index].value} (${defaultValue})`;\n}\n\nexport default function formatHit({\n  formatInputValue,\n  hit,\n  hitIndex,\n  query,\n  rawAnswer,\n}) {\n  try {\n    const name = hit.locale_names[0];\n    const country = hit.country;\n    const administrative = hit.administrative && hit.administrative[0] !== name ?\n      hit.administrative[0] : undefined;\n    const city = hit.city && hit.city[0] !== name ? hit.city[0] : undefined;\n\n    const highlight = {\n      name: getBestHighlightedForm(hit._highlightResult.locale_names),\n      city: city ? getBestHighlightedForm(hit._highlightResult.city) : undefined,\n      administrative: administrative ? getBestHighlightedForm(hit._highlightResult.administrative) : undefined,\n      country: country ? hit._highlightResult.country.value : undefined,\n    };\n\n    const suggestion = {\n      name,\n      administrative,\n      city,\n      country,\n      countryCode: findCountryCode(hit._tags),\n      type: findType(hit._tags),\n      latlng: {\n        lat: hit._geoloc.lat,\n        lng: hit._geoloc.lng,\n      },\n      postcode: hit.postcode && hit.postcode[0],\n    };\n\n    // this is the value to put inside the <input value=\n    const value = formatInputValue(suggestion);\n\n    return {\n      ...suggestion,\n      highlight,\n      hit,\n      hitIndex,\n      query,\n      rawAnswer,\n      value,\n    };\n  } catch (e) {\n    /* eslint-disable no-console */\n    console.error('Could not parse object', hit);\n    console.error(e);\n    /* eslint-enable no-console */\n    return {\n      value: 'Could not parse object',\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/formatHit.js","export default function findCountryCode(tags) {\n  for (let tagIndex = 0; tagIndex < tags.length; tagIndex++) {\n    const tag = tags[tagIndex];\n    const find = tag.match(/country\\/(.*)?/);\n    if (find) {\n      return find[1];\n    }\n  }\n\n  return undefined;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/findCountryCode.js","export default function findType(tags) {\n  const types = {\n    'country': 'country',\n    'city': 'city',\n    'amenity/bus_station': 'busStop',\n    'amenity/townhall': 'townhall',\n    'railway/station': 'trainStation',\n    'aeroway/aerodrome': 'airport',\n    'aeroway/terminal': 'airport',\n    'aeroway/gate': 'airport',\n  };\n\n  for (const t in types) {\n    if (tags.indexOf(t) !== -1) {\n      return types[t];\n    }\n  }\n\n  return 'address';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/findType.js","import value from './formatInputValue.js';\nimport suggestion from './formatDropdownValue.js';\nimport algoliaLogo from './icons/algolia.svg';\nimport osmLogo from './icons/osm.svg';\n\nexport default {\n  footer: `<div class=\"ap-footer\">\n  Built by <a href=\"https://www.algolia.com/places\" title=\"Search by Algolia\" class=\"ap-footer-algolia\">${algoliaLogo.trim()}</a>\n  using <a href=\"https://community.algolia.com/places/documentation.html#license\" class=\"ap-footer-osm\" title=\"Algolia Places data © OpenStreetMap contributors\">${osmLogo.trim()} <span>data</span></a>\n  </div>`,\n  value,\n  suggestion,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/defaultTemplates.js","export default function formatInputValue({\n  administrative,\n  city,\n  country,\n  name,\n  type,\n}) {\n  const out = `${name}${type !== 'country' && country !== undefined ? ',' : ''}\n ${city ? `${city},` : ''}\n ${administrative ? `${administrative},` : ''}\n ${country ? country : ''}`.replace(/\\s*\\n\\s*/g, ' ').trim();\n  return out;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/formatInputValue.js","import addressIcon from './icons/address.svg';\nimport cityIcon from './icons/city.svg';\nimport countryIcon from './icons/country.svg';\nimport busIcon from './icons/bus.svg';\nimport trainIcon from './icons/train.svg';\nimport townhallIcon from './icons/townhall.svg';\nimport planeIcon from './icons/plane.svg';\n\nconst icons = {\n  address: addressIcon,\n  city: cityIcon,\n  country: countryIcon,\n  busStop: busIcon,\n  trainStation: trainIcon,\n  townhall: townhallIcon,\n  airport: planeIcon,\n};\n\nexport default function formatDropdownValue({type, highlight}) {\n  const {\n    name,\n    administrative,\n    city,\n    country,\n  } = highlight;\n\n  const out = `<span class=\"ap-suggestion-icon\">${icons[type].trim()}</span>\n<span class=\"ap-name\">${name}</span>\n<span class=\"ap-address\">\n  ${[city, administrative, country]\n    .filter(token => token !== undefined)\n    .join(', ')}</span>`.replace(/\\s*\\n\\s*/g, ' ');\n\n  return out;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/formatDropdownValue.js","var containers = []; // will store container HTMLElement references\nvar styleElements = []; // will store {prepend: HTMLElement, append: HTMLElement}\n\nvar usage = 'insert-css: You need to provide a CSS string. Usage: insertCss(cssString[, options]).';\n\nfunction insertCss(css, options) {\n    options = options || {};\n\n    if (css === undefined) {\n        throw new Error(usage);\n    }\n\n    var position = options.prepend === true ? 'prepend' : 'append';\n    var container = options.container !== undefined ? options.container : document.querySelector('head');\n    var containerId = containers.indexOf(container);\n\n    // first time we see this container, create the necessary entries\n    if (containerId === -1) {\n        containerId = containers.push(container) - 1;\n        styleElements[containerId] = {};\n    }\n\n    // try to get the correponding container + position styleElement, create it otherwise\n    var styleElement;\n\n    if (styleElements[containerId] !== undefined && styleElements[containerId][position] !== undefined) {\n        styleElement = styleElements[containerId][position];\n    } else {\n        styleElement = styleElements[containerId][position] = createStyleElement();\n\n        if (position === 'prepend') {\n            container.insertBefore(styleElement, container.childNodes[0]);\n        } else {\n            container.appendChild(styleElement);\n        }\n    }\n\n    // strip potential UTF-8 BOM if css was read from a file\n    if (css.charCodeAt(0) === 0xFEFF) { css = css.substr(1, css.length); }\n\n    // actually add the stylesheet\n    if (styleElement.styleSheet) {\n        styleElement.styleSheet.cssText += css\n    } else {\n        styleElement.textContent += css;\n    }\n\n    return styleElement;\n};\n\nfunction createStyleElement() {\n    var styleElement = document.createElement('style');\n    styleElement.setAttribute('type', 'text/css');\n    return styleElement;\n}\n\nmodule.exports = insertCss;\nmodule.exports.insertCss = insertCss;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/insert-css/index.js\n// module id = 78\n// module chunks = 0 1 2"]}