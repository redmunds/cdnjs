function bind(e,t){return function(){t.apply(e,arguments)}}function LathedObject(e,t,i){THREE.Geometry.call(this),this.nsteps=t||12,this.latheAngle=i||2*Math.PI,t=this.latheAngle/this.nsteps;for(var n=[],r=[],o=[],s=[],a=0;a<e.length;a++)this.vertices.push(new THREE.Vertex(e[a])),r[a]=this.vertices.length-1,n[a]=new THREE.Vector3(e[a].x,e[a].y,e[a].z);for(var h=THREE.Matrix4.rotationZMatrix(this.stepSize),l=0;l<=this.latheAngle+.001;l+=this.stepSize){for(a=0;a<n.length;a++)l<i?(n[a]=h.multiplyVector3(n[a].clone()),this.vertices.push(new THREE.Vertex(n[a])),o[a]=this.vertices.length-1):o=s;for(0==l&&(s=r),a=0;a<r.length-1;a++)this.faces.push(new THREE.Face4(o[a],o[a+1],r[a+1],r[a])),this.uvs.push([new THREE.UV(l/i,a/e.length),new THREE.UV(l/i,(a+1)/e.length),new THREE.UV((l-t)/i,(a+1)/e.length),new THREE.UV((l-t)/i,a/e.length)]);r=o,o=[]}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals(),this.sortFacesByMaterial()}var THREE=THREE||{};THREE.Color=function(e){this.setHex(e)},THREE.Color.prototype={autoUpdate:!0,setRGB:function(e,t,i){this.r=e,this.g=t,this.b=i,this.autoUpdate&&(this.updateHex(),this.updateStyleString())},setHSV:function(e,t,i){var n,r,o,s,a,h;if(0==i)n=r=o=0;else switch(s=Math.floor(6*e),a=6*e-s,e=i*(1-t),h=i*(1-t*a),t=i*(1-t*(1-a)),s){case 1:n=h,r=i,o=e;break;case 2:n=e,r=i,o=t;break;case 3:n=e,r=h,o=i;break;case 4:n=t,r=e,o=i;break;case 5:n=i,r=e,o=h;break;case 6:case 0:n=i,r=t,o=e}this.r=n,this.g=r,this.b=o,this.autoUpdate&&(this.updateHex(),this.updateStyleString())},setHex:function(e){this.hex=16777215&~~e,this.autoUpdate&&(this.updateRGB(),this.updateStyleString())},updateHex:function(){this.hex=~~(255*this.r)<<16^~~(255*this.g)<<8^~~(255*this.b)},updateRGB:function(){this.r=(this.hex>>16&255)/255,this.g=(this.hex>>8&255)/255,this.b=(255&this.hex)/255},updateStyleString:function(){this.__styleString="rgb("+~~(255*this.r)+","+~~(255*this.g)+","+~~(255*this.b)+")"},clone:function(){return new THREE.Color(this.hex)}},THREE.Vector2=function(e,t){this.set(e||0,t||0)},THREE.Vector2.prototype={set:function(e,t){return this.x=e,this.y=t,this},copy:function(e){return this.set(e.x,e.y),this},addSelf:function(e){return this.set(this.x+e.x,this.y+e.y),this},add:function(e,t){return this.set(e.x+t.x,e.y+t.y),this},subSelf:function(e){return this.set(this.x-e.x,this.y-e.y),this},sub:function(e,t){return this.set(e.x-t.x,e.y-t.y),this},multiplyScalar:function(e){return this.set(this.x*e,this.y*e),this},negate:function(){return this.set(-this.x,-this.y),this},unit:function(){return this.multiplyScalar(1/this.length()),this},length:function(){return Math.sqrt(this.lengthSq())},lengthSq:function(){return this.x*this.x+this.y*this.y},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(e,t,i){this.set(e||0,t||0,i||0)},THREE.Vector3.prototype={set:function(e,t,i){return this.x=e,this.y=t,this.z=i,this},copy:function(e){return this.set(e.x,e.y,e.z),this},add:function(e,t){return this.set(e.x+t.x,e.y+t.y,e.z+t.z),this},addSelf:function(e){return this.set(this.x+e.x,this.y+e.y,this.z+e.z),this},addScalar:function(e){return this.set(this.x+e,this.y+e,this.z+e),this},sub:function(e,t){return this.set(e.x-t.x,e.y-t.y,e.z-t.z),this},subSelf:function(e){return this.set(this.x-e.x,this.y-e.y,this.z-e.z),this},cross:function(e,t){return this.set(e.y*t.z-e.z*t.y,e.z*t.x-e.x*t.z,e.x*t.y-e.y*t.x),this},crossSelf:function(e){var t=this.x,i=this.y,n=this.z;return this.set(i*e.z-n*e.y,n*e.x-t*e.z,t*e.y-i*e.x),this},multiply:function(e,t){return this.set(e.x*t.x,e.y*t.y,e.z*t.z),this},multiplySelf:function(e){return this.set(this.x*e.x,this.y*e.y,this.z*e.z),this},multiplyScalar:function(e){return this.set(this.x*e,this.y*e,this.z*e),this},divideSelf:function(e){return this.set(this.x/e.x,this.y/e.y,this.z/e.z),this},divideScalar:function(e){return this.set(this.x/e,this.y/e,this.z/e),this},negate:function(){return this.set(-this.x,-this.y,-this.z),this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,i=this.y-e.y;return e=this.z-e.z,t*t+i*i+e*e},length:function(){return Math.sqrt(this.lengthSq())},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},lengthManhattan:function(){return this.x+this.y+this.z},normalize:function(){var e=this.length();return e>0?this.multiplyScalar(1/e):this.set(0,0,0),this},setLength:function(e){return this.normalize().multiplyScalar(e)},isZero:function(){return Math.abs(this.x)<1e-4&&Math.abs(this.y)<1e-4&&Math.abs(this.z)<1e-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(e,t,i,n){this.set(e||0,t||0,i||0,n||1)},THREE.Vector4.prototype={set:function(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this},copy:function(e){return this.set(e.x,e.y,e.z,e.w||1),this},add:function(e,t){return this.set(e.x+t.x,e.y+t.y,e.z+t.z,e.w+t.w),this},addSelf:function(e){return this.set(this.x+e.x,this.y+e.y,this.z+e.z,this.w+e.w),this},sub:function(e,t){return this.set(e.x-t.x,e.y-t.y,e.z-t.z,e.w-t.w),this},subSelf:function(e){return this.set(this.x-e.x,this.y-e.y,this.z-e.z,this.w-e.w),this},multiplyScalar:function(e){return this.set(this.x*e,this.y*e,this.z*e,this.w*e),this},divideScalar:function(e){return this.set(this.x/e,this.y/e,this.z/e,this.w/e),this},lerpSelf:function(e,t){this.set(this.x+(e.x-this.x)*t,this.y+(e.y-this.y)*t,this.z+(e.z-this.z)*t,this.w+(e.w-this.w)*t)},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Ray=function(e,t){this.origin=e||new THREE.Vector3,this.direction=t||new THREE.Vector3},THREE.Ray.prototype={intersectScene:function(e){var t,i,n=e.objects,r=[];for(e=0,t=n.length;e<t;e++)i=n[e],i instanceof THREE.Mesh&&(r=r.concat(this.intersectObject(i)));return r.sort(function(e,t){return e.distance-t.distance}),r},intersectObject:function(e){function t(e,t,i,n){n=n.clone().subSelf(t),i=i.clone().subSelf(t);var r=e.clone().subSelf(t);e=n.dot(n),t=n.dot(i),n=n.dot(r);var o=i.dot(i);return i=i.dot(r),r=1/(e*o-t*t),o=(o*n-t*i)*r,e=(e*i-t*n)*r,o>0&&e>0&&o+e<1}var i,n,r,o,s,a,h,l,c,f,E,u=e.geometry,d=u.vertices,p=[];for(i=0,n=u.faces.length;i<n;i++)r=u.faces[i],f=this.origin.clone(),E=this.direction.clone(),h=e.matrixWorld,o=h.multiplyVector3(d[r.a].position.clone()),s=h.multiplyVector3(d[r.b].position.clone()),a=h.multiplyVector3(d[r.c].position.clone()),h=r instanceof THREE.Face4?h.multiplyVector3(d[r.d].position.clone()):null,l=e.matrixRotationWorld.multiplyVector3(r.normal.clone()),c=E.dot(l),c<0&&(l=l.dot((new THREE.Vector3).sub(o,f))/c,f=f.addSelf(E.multiplyScalar(l)),r instanceof THREE.Face3?t(f,o,s,a)&&(r={distance:this.origin.distanceTo(f),point:f,face:r,object:e},p.push(r)):r instanceof THREE.Face4&&(t(f,o,s,h)||t(f,s,a,h))&&(r={distance:this.origin.distanceTo(f),point:f,face:r,object:e},p.push(r)));return p}},THREE.Rectangle=function(){function e(){o=n-t,s=r-i}var t,i,n,r,o,s,a=!0;this.getX=function(){return t},this.getY=function(){return i},this.getWidth=function(){return o},this.getHeight=function(){return s},this.getLeft=function(){return t},this.getTop=function(){return i},this.getRight=function(){return n},this.getBottom=function(){return r},this.set=function(o,s,h,l){a=!1,t=o,i=s,n=h,r=l,e()},this.addPoint=function(o,s){a?(a=!1,t=o,i=s,n=o,r=s):(t=t<o?t:o,i=i<s?i:s,n=n>o?n:o,r=r>s?r:s),e()},this.add3Points=function(o,s,h,l,c,f){a?(a=!1,t=o<h?o<c?o:c:h<c?h:c,i=s<l?s<f?s:f:l<f?l:f,n=o>h?o>c?o:c:h>c?h:c,r=s>l?s>f?s:f:l>f?l:f):(t=o<h?o<c?o<t?o:t:c<t?c:t:h<c?h<t?h:t:c<t?c:t,i=s<l?s<f?s<i?s:i:f<i?f:i:l<f?l<i?l:i:f<i?f:i,n=o>h?o>c?o>n?o:n:c>n?c:n:h>c?h>n?h:n:c>n?c:n,r=s>l?s>f?s>r?s:r:f>r?f:r:l>f?l>r?l:r:f>r?f:r),e()},this.addRectangle=function(o){a?(a=!1,t=o.getLeft(),i=o.getTop(),n=o.getRight(),r=o.getBottom()):(t=t<o.getLeft()?t:o.getLeft(),i=i<o.getTop()?i:o.getTop(),n=n>o.getRight()?n:o.getRight(),r=r>o.getBottom()?r:o.getBottom()),e()},this.inflate=function(o){t-=o,i-=o,n+=o,r+=o,e()},this.minSelf=function(o){t=t>o.getLeft()?t:o.getLeft(),i=i>o.getTop()?i:o.getTop(),n=n<o.getRight()?n:o.getRight(),r=r<o.getBottom()?r:o.getBottom(),e()},this.instersects=function(e){return Math.min(n,e.getRight())-Math.max(t,e.getLeft())>=0&&Math.min(r,e.getBottom())-Math.max(i,e.getTop())>=0},this.empty=function(){a=!0,r=n=i=t=0,e()},this.isEmpty=function(){return a}},THREE.Matrix3=function(){this.m=[]},THREE.Matrix3.prototype={transpose:function(){var e,t=this.m;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},transposeIntoArray:function(e){var t=this.m;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}},THREE.Matrix4=function(e,t,i,n,r,o,s,a,h,l,c,f,E,u,d,p){this.set(e||1,t||0,i||0,n||0,r||0,o||1,s||0,a||0,h||0,l||0,c||1,f||0,E||0,u||0,d||0,p||1),this.flat=Array(16),this.m33=new THREE.Matrix3},THREE.Matrix4.prototype={set:function(e,t,i,n,r,o,s,a,h,l,c,f,E,u,d,p){return this.n11=e,this.n12=t,this.n13=i,this.n14=n,this.n21=r,this.n22=o,this.n23=s,this.n24=a,this.n31=h,this.n32=l,this.n33=c,this.n34=f,this.n41=E,this.n42=u,this.n43=d,this.n44=p,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){return this.set(e.n11,e.n12,e.n13,e.n14,e.n21,e.n22,e.n23,e.n24,e.n31,e.n32,e.n33,e.n34,e.n41,e.n42,e.n43,e.n44),this},lookAt:function(e,t,i){var n=THREE.Matrix4.__tmpVec1,r=THREE.Matrix4.__tmpVec2,o=THREE.Matrix4.__tmpVec3;return o.sub(e,t).normalize(),n.cross(i,o).normalize(),r.cross(o,n).normalize(),this.n11=n.x,this.n12=r.x,this.n13=o.x,this.n14=e.x,this.n21=n.y,this.n22=r.y,this.n23=o.y,this.n24=e.y,this.n31=n.z,this.n32=r.z,this.n33=o.z,this.n34=e.z,this},multiplyVector3:function(e){var t=e.x,i=e.y,n=e.z,r=1/(this.n41*t+this.n42*i+this.n43*n+this.n44);return e.x=(this.n11*t+this.n12*i+this.n13*n+this.n14)*r,e.y=(this.n21*t+this.n22*i+this.n23*n+this.n24)*r,e.z=(this.n31*t+this.n32*i+this.n33*n+this.n34)*r,e},multiplyVector3OnlyZ:function(e){var t=e.x,i=e.y;return e=e.z,(this.n31*t+this.n32*i+this.n33*e+this.n34)*(1/(this.n41*t+this.n42*i+this.n43*e+this.n44))},multiplyVector4:function(e){var t=e.x,i=e.y,n=e.z,r=e.w;return e.x=this.n11*t+this.n12*i+this.n13*n+this.n14*r,e.y=this.n21*t+this.n22*i+this.n23*n+this.n24*r,e.z=this.n31*t+this.n32*i+this.n33*n+this.n34*r,e.w=this.n41*t+this.n42*i+this.n43*n+this.n44*r,e},crossVector:function(e){var t=new THREE.Vector4;return t.x=this.n11*e.x+this.n12*e.y+this.n13*e.z+this.n14*e.w,t.y=this.n21*e.x+this.n22*e.y+this.n23*e.z+this.n24*e.w,t.z=this.n31*e.x+this.n32*e.y+this.n33*e.z+this.n34*e.w,t.w=e.w?this.n41*e.x+this.n42*e.y+this.n43*e.z+this.n44*e.w:1,t},multiply:function(e,t){var i=e.n11,n=e.n12,r=e.n13,o=e.n14,s=e.n21,a=e.n22,h=e.n23,l=e.n24,c=e.n31,f=e.n32,E=e.n33,u=e.n34,d=e.n41,p=e.n42,m=e.n43,v=e.n44,g=t.n11,y=t.n12,R=t.n13,T=t.n14,_=t.n21,x=t.n22,b=t.n23,H=t.n24,w=t.n31,S=t.n32,M=t.n33,A=t.n34;return this.n11=i*g+n*_+r*w,this.n12=i*y+n*x+r*S,this.n13=i*R+n*b+r*M,this.n14=i*T+n*H+r*A+o,this.n21=s*g+a*_+h*w,this.n22=s*y+a*x+h*S,this.n23=s*R+a*b+h*M,this.n24=s*T+a*H+h*A+l,this.n31=c*g+f*_+E*w,this.n32=c*y+f*x+E*S,this.n33=c*R+f*b+E*M,this.n34=c*T+f*H+E*A+u,this.n41=d*g+p*_+m*w,this.n42=d*y+p*x+m*S,this.n43=d*R+p*b+m*M,this.n44=d*T+p*H+m*A+v,this},multiplyToArray:function(e,t,i){var n=e.n11,r=e.n12,o=e.n13,s=e.n14,a=e.n21,h=e.n22,l=e.n23,c=e.n24,f=e.n31,E=e.n32,u=e.n33,d=e.n34,p=e.n41,m=e.n42,v=e.n43;e=e.n44;var g=t.n11,y=t.n12,R=t.n13,T=t.n14,_=t.n21,x=t.n22,b=t.n23,H=t.n24,w=t.n31,S=t.n32,M=t.n33,A=t.n34,L=t.n41,C=t.n42,F=t.n43;return t=t.n44,this.n11=n*g+r*_+o*w+s*L,this.n12=n*y+r*x+o*S+s*C,this.n13=n*R+r*b+o*M+s*F,this.n14=n*T+r*H+o*A+s*t,this.n21=a*g+h*_+l*w+c*L,this.n22=a*y+h*x+l*S+c*C,this.n23=a*R+h*b+l*M+c*F,this.n24=a*T+h*H+l*A+c*t,this.n31=f*g+E*_+u*w+d*L,this.n32=f*y+E*x+u*S+d*C,this.n33=f*R+E*b+u*M+d*F,this.n34=f*T+E*H+u*A+d*t,this.n41=p*g+m*_+v*w+e*L,this.n42=p*y+m*x+v*S+e*C,this.n43=p*R+m*b+v*M+e*F,this.n44=p*T+m*H+v*A+e*t,i[0]=this.n11,i[1]=this.n21,i[2]=this.n31,i[3]=this.n41,i[4]=this.n12,i[5]=this.n22,i[6]=this.n32,i[7]=this.n42,i[8]=this.n13,i[9]=this.n23,i[10]=this.n33,i[11]=this.n43,i[12]=this.n14,i[13]=this.n24,i[14]=this.n34,i[15]=this.n44,this},multiplySelf:function(e){var t=this.n11,i=this.n12,n=this.n13,r=this.n14,o=this.n21,s=this.n22,a=this.n23,h=this.n24,l=this.n31,c=this.n32,f=this.n33,E=this.n34,u=this.n41,d=this.n42,p=this.n43,m=this.n44,v=e.n11,g=e.n21,y=e.n31,R=e.n12,T=e.n22,_=e.n32,x=e.n13,b=e.n23,H=e.n33,w=e.n14,S=e.n24;return e=e.n34,this.n11=t*v+i*g+n*y,this.n12=t*R+i*T+n*_,this.n13=t*x+i*b+n*H,this.n14=t*w+i*S+n*e+r,this.n21=o*v+s*g+a*y,this.n22=o*R+s*T+a*_,this.n23=o*x+s*b+a*H,this.n24=o*w+s*S+a*e+h,this.n31=l*v+c*g+f*y,this.n32=l*R+c*T+f*_,this.n33=l*x+c*b+f*H,this.n34=l*w+c*S+f*e+E,this.n41=u*v+d*g+p*y,this.n42=u*R+d*T+p*_,this.n43=u*x+d*b+p*H,this.n44=u*w+d*S+p*e+m,this},multiplyScalar:function(e){return this.n11*=e,this.n12*=e,this.n13*=e,this.n14*=e,this.n21*=e,this.n22*=e,this.n23*=e,this.n24*=e,this.n31*=e,this.n32*=e,this.n33*=e,this.n34*=e,this.n41*=e,this.n42*=e,this.n43*=e,this.n44*=e,this},determinant:function(){var e=this.n11,t=this.n12,i=this.n13,n=this.n14,r=this.n21,o=this.n22,s=this.n23,a=this.n24,h=this.n31,l=this.n32,c=this.n33,f=this.n34,E=this.n41,u=this.n42,d=this.n43,p=this.n44;return n*s*l*E-i*a*l*E-n*o*c*E+t*a*c*E+i*o*f*E-t*s*f*E-n*s*h*u+i*a*h*u+n*r*c*u-e*a*c*u-i*r*f*u+e*s*f*u+n*o*h*d-t*a*h*d-n*r*l*d+e*a*l*d+t*r*f*d-e*o*f*d-i*o*h*p+t*s*h*p+i*r*l*p-e*s*l*p-t*r*c*p+e*o*c*p},transpose:function(){var e;return e=this.n21,this.n21=this.n12,this.n12=e,e=this.n31,this.n31=this.n13,this.n13=e,e=this.n32,this.n32=this.n23,this.n23=e,e=this.n41,this.n41=this.n14,this.n14=e,e=this.n42,this.n42=this.n24,this.n24=e,e=this.n43,this.n43=this.n34,this.n43=e,this},clone:function(){var e=new THREE.Matrix4;return e.n11=this.n11,e.n12=this.n12,e.n13=this.n13,e.n14=this.n14,e.n21=this.n21,e.n22=this.n22,e.n23=this.n23,e.n24=this.n24,e.n31=this.n31,e.n32=this.n32,e.n33=this.n33,e.n34=this.n34,e.n41=this.n41,e.n42=this.n42,e.n43=this.n43,e.n44=this.n44,e},flatten:function(){return this.flattenToArray(this.flat),this.flat},flattenToArray:function(e){return e[0]=this.n11,e[1]=this.n21,e[2]=this.n31,e[3]=this.n41,e[4]=this.n12,e[5]=this.n22,e[6]=this.n32,e[7]=this.n42,e[8]=this.n13,e[9]=this.n23,e[10]=this.n33,e[11]=this.n43,e[12]=this.n14,e[13]=this.n24,e[14]=this.n34,e[15]=this.n44,e},flattenToArrayOffset:function(e,t){return e[t]=this.n11,e[t+1]=this.n21,e[t+2]=this.n31,e[t+3]=this.n41,e[t+4]=this.n12,e[t+5]=this.n22,e[t+6]=this.n32,e[t+7]=this.n42,e[t+8]=this.n13,e[t+9]=this.n23,e[t+10]=this.n33,e[t+11]=this.n43,e[t+12]=this.n14,e[t+13]=this.n24,e[t+14]=this.n34,e[t+15]=this.n44,e},setTranslation:function(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this},setScale:function(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this},setRotX:function(e){var t=Math.cos(e);return e=Math.sin(e),this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this},setRotY:function(e){var t=Math.cos(e);return e=Math.sin(e),this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this},setRotZ:function(e){var t=Math.cos(e);return e=Math.sin(e),this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this},setRotAxis:function(e,t){var i=Math.cos(t),n=Math.sin(t),r=1-i,o=e.x,s=e.y,a=e.z,h=r*o,l=r*s;return this.set(h*o+i,h*s-n*a,h*a+n*s,0,h*s+n*a,l*s+i,l*a-n*o,0,h*a-n*s,l*a+n*o,r*a*a+i,0,0,0,0,1),this},setPosition:function(e){return this.n14=e.x,this.n24=e.y,this.n34=e.z,this},setRotationFromEuler:function(e){var t=e.x,i=e.y,n=e.z;e=Math.cos(t),t=Math.sin(t);var r=Math.cos(i);i=Math.sin(i);var o=Math.cos(n);n=Math.sin(n);var s=e*i,a=t*i;this.n11=r*o,this.n12=-r*n,this.n13=i,this.n21=a*o+e*n,this.n22=-a*n+e*o,this.n23=-t*r,this.n31=-s*o+t*n,this.n32=s*n+t*o,this.n33=e*r},setRotationFromQuaternion:function(e){var t=e.x,i=e.y,n=e.z,r=e.w,o=t+t,s=i+i,a=n+n;e=t*o;var h=t*s;t*=a;var l=i*s;i*=a,n*=a,o*=r,s*=r,r*=a,this.n11=1-(l+n),this.n12=h-r,this.n13=t+s,this.n21=h+r,this.n22=1-(e+n),this.n23=i-o,this.n31=t-s,this.n32=i+o,this.n33=1-(e+l)},scale:function(e){var t=e.x,i=e.y;return e=e.z,this.n11*=t,this.n12*=i,this.n13*=e,this.n21*=t,this.n22*=i,this.n23*=e,this.n31*=t,this.n32*=i,this.n33*=e,this.n41*=t,this.n42*=i,this.n43*=e,this}},THREE.Matrix4.translationMatrix=function(e,t,i){var n=new THREE.Matrix4;return n.setTranslation(e,t,i),n},THREE.Matrix4.scaleMatrix=function(e,t,i){var n=new THREE.Matrix4;return n.setScale(e,t,i),n},THREE.Matrix4.rotationXMatrix=function(e){var t=new THREE.Matrix4;return t.setRotX(e),t},THREE.Matrix4.rotationYMatrix=function(e){var t=new THREE.Matrix4;return t.setRotY(e),t},THREE.Matrix4.rotationZMatrix=function(e){var t=new THREE.Matrix4;return t.setRotZ(e),t},THREE.Matrix4.rotationAxisAngleMatrix=function(e,t){var i=new THREE.Matrix4;return i.setRotAxis(e,t),i},THREE.Matrix4.makeInvert=function(e,t){var i=e.n11,n=e.n12,r=e.n13,o=e.n14,s=e.n21,a=e.n22,h=e.n23,l=e.n24,c=e.n31,f=e.n32,E=e.n33,u=e.n34,d=e.n41,p=e.n42,m=e.n43,v=e.n44;return void 0===t&&(t=new THREE.Matrix4),t.n11=h*u*p-l*E*p+l*f*m-a*u*m-h*f*v+a*E*v,t.n12=o*E*p-r*u*p-o*f*m+n*u*m+r*f*v-n*E*v,t.n13=r*l*p-o*h*p+o*a*m-n*l*m-r*a*v+n*h*v,t.n14=o*h*f-r*l*f-o*a*E+n*l*E+r*a*u-n*h*u,t.n21=l*E*d-h*u*d-l*c*m+s*u*m+h*c*v-s*E*v,t.n22=r*u*d-o*E*d+o*c*m-i*u*m-r*c*v+i*E*v,t.n23=o*h*d-r*l*d-o*s*m+i*l*m+r*s*v-i*h*v,t.n24=r*l*c-o*h*c+o*s*E-i*l*E-r*s*u+i*h*u,t.n31=a*u*d-l*f*d+l*c*p-s*u*p-a*c*v+s*f*v,t.n32=o*f*d-n*u*d-o*c*p+i*u*p+n*c*v-i*f*v,t.n33=r*l*d-o*a*d+o*s*p-i*l*p-n*s*v+i*a*v,t.n34=o*a*c-n*l*c-o*s*f+i*l*f+n*s*u-i*a*u,t.n41=h*f*d-a*E*d-h*c*p+s*E*p+a*c*m-s*f*m,t.n42=n*E*d-r*f*d+r*c*p-i*E*p-n*c*m+i*f*m,t.n43=r*a*d-n*h*d-r*s*p+i*h*p+n*s*m-i*a*m,t.n44=n*h*c-r*a*c+r*s*f-i*h*f-n*s*E+i*a*E,t.multiplyScalar(1/e.determinant()),t},THREE.Matrix4.makeInvert3x3=function(e){var t=e.m33,i=t.m,n=e.n33*e.n22-e.n32*e.n23,r=-e.n33*e.n21+e.n31*e.n23,o=e.n32*e.n21-e.n31*e.n22,s=-e.n33*e.n12+e.n32*e.n13,a=e.n33*e.n11-e.n31*e.n13,h=-e.n32*e.n11+e.n31*e.n12,l=e.n23*e.n12-e.n22*e.n13,c=-e.n23*e.n11+e.n21*e.n13,f=e.n22*e.n11-e.n21*e.n12;if(e=e.n11*n+e.n21*s+e.n31*l,0==e)throw"matrix not invertible";return e=1/e,i[0]=e*n,i[1]=e*r,i[2]=e*o,i[3]=e*s,i[4]=e*a,i[5]=e*h,i[6]=e*l,i[7]=e*c,i[8]=e*f,t},THREE.Matrix4.makeFrustum=function(e,t,i,n,r,o){var s;return s=new THREE.Matrix4,s.n11=2*r/(t-e),s.n12=0,s.n13=(t+e)/(t-e),s.n14=0,s.n21=0,s.n22=2*r/(n-i),s.n23=(n+i)/(n-i),s.n24=0,s.n31=0,s.n32=0,s.n33=-(o+r)/(o-r),s.n34=-2*o*r/(o-r),s.n41=0,s.n42=0,s.n43=-1,s.n44=0,s},THREE.Matrix4.makePerspective=function(e,t,i,n){var r;return e=i*Math.tan(e*Math.PI/360),r=-e,THREE.Matrix4.makeFrustum(r*t,e*t,r,e,i,n)},THREE.Matrix4.makeOrtho=function(e,t,i,n,r,o){var s,a,h,l;return s=new THREE.Matrix4,a=t-e,h=i-n,l=o-r,s.n11=2/a,s.n12=0,s.n13=0,s.n14=-((t+e)/a),s.n21=0,s.n22=2/h,s.n23=0,s.n24=-((i+n)/h),s.n31=0,s.n32=0,s.n33=-2/l,s.n34=-((o+r)/l),s.n41=0,s.n42=0,s.n43=0,s.n44=1,s},THREE.Matrix4.__tmpVec1=new THREE.Vector3,THREE.Matrix4.__tmpVec2=new THREE.Vector3,THREE.Matrix4.__tmpVec3=new THREE.Vector3,THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++,this.parent=void 0,this.children=[],this.position=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.rotation=new THREE.Vector3,this.scale=new THREE.Vector3(1,1,1),this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixRotationWorld=new THREE.Matrix4,this.matrixNeedsUpdate=!0,this.matrixAutoUpdate=!0,this.quaternion=new THREE.Quaternion,this.useQuaternion=!1,this.boundRadius=0,this.boundRadiusScale=1,this.visible=!0},THREE.Object3D.prototype={addChild:function(e){if(this.children.indexOf(e)===-1){void 0!==e.parent&&e.parent.removeChild(e),e.parent=this,this.children.push(e);for(var t=this;t instanceof THREE.Scene==!1&&void 0!==t;)t=t.parent;void 0!==t&&t.addChildRecurse(e)}},removeChild:function(e){var t=this.children.indexOf(e);t!==-1&&(e.parent=void 0,this.children.splice(t,1))},updateMatrix:function(){return this.matrix.setPosition(this.position),this.useQuaternion?this.matrix.setRotationFromQuaternion(this.quaternion):this.matrix.setRotationFromEuler(this.rotation),1===this.scale.x&&1===this.scale.y&&1===this.scale.z||(this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z))),!0},update:function(e,t,i){if(this.visible){if(this.matrixAutoUpdate&&(t|=this.updateMatrix()),t||this.matrixNeedsUpdate){e?this.matrixWorld.multiply(e,this.matrix):this.matrixWorld.copy(this.matrix),t=1/this.scale.x,e=1/this.scale.y;var n=1/this.scale.z;this.matrixRotationWorld.n11=this.matrixWorld.n11*t,this.matrixRotationWorld.n21=this.matrixWorld.n21*t,this.matrixRotationWorld.n31=this.matrixWorld.n31*t,this.matrixRotationWorld.n12=this.matrixWorld.n12*e,this.matrixRotationWorld.n22=this.matrixWorld.n22*e,this.matrixRotationWorld.n32=this.matrixWorld.n32*e,this.matrixRotationWorld.n13=this.matrixWorld.n13*n,this.matrixRotationWorld.n23=this.matrixWorld.n23*n,this.matrixRotationWorld.n33=this.matrixWorld.n33*n,this.matrixNeedsUpdate=!1,t=!0}for(e=0,n=this.children.length;e<n;e++)this.children[e].update(this.matrixWorld,t,i)}}},THREE.Object3DCounter={value:0},THREE.Quaternion=function(e,t,i,n){this.set(e||0,t||0,i||0,void 0!==n?n:1)},THREE.Quaternion.prototype={set:function(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this},setFromEuler:function(e){var t=.5*Math.PI/360,i=e.x*t,n=e.y*t,r=e.z*t;e=Math.cos(n),n=Math.sin(n),t=Math.cos(-r),r=Math.sin(-r);var o=Math.cos(i);i=Math.sin(i);var s=e*t,a=n*r;return this.w=s*o-a*i,this.x=s*i+a*o,this.y=n*t*o+e*r*i,this.z=e*r*o-n*t*i,this},calculateW:function(){return this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z)),this},inverse:function(){return this.x*=-1,this.y*=-1,this.z*=-1,this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var e=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return 0==e?this.w=this.z=this.y=this.x=0:(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e),this},multiplySelf:function(e){var t=this.x,i=this.y,n=this.z,r=this.w,o=e.x,s=e.y,a=e.z;return e=e.w,this.x=t*e+r*o+i*a-n*s,this.y=i*e+r*s+n*o-t*a,this.z=n*e+r*a+t*s-i*o,this.w=r*e-t*o-i*s-n*a,this},multiplyVector3:function(e,t){t||(t=e);var i=e.x,n=e.y,r=e.z,o=this.x,s=this.y,a=this.z,h=this.w,l=h*i+s*r-a*n,c=h*n+a*i-o*r,f=h*r+o*n-s*i;return i=-o*i-s*n-a*r,t.x=l*h+i*-o+c*-a-f*-s,t.y=c*h+i*-s+f*-o-l*-a,t.z=f*h+i*-a+l*-s-c*-o,t}},THREE.Quaternion.slerp=function(e,t,i,n){var r=e.w*t.w+e.x*t.x+e.y*t.y+e.z*t.z;if(Math.abs(r)>=1)return i.w=e.w,i.x=e.x,i.y=e.y,i.z=e.z,i;var o=Math.acos(r),s=Math.sqrt(1-r*r);return Math.abs(s)<.001?(i.w=.5*(e.w+t.w),i.x=.5*(e.x+t.x),i.y=.5*(e.y+t.y),i.z=.5*(e.z+t.z),i):(r=Math.sin((1-n)*o)/s,n=Math.sin(n*o)/s,i.w=e.w*r+t.w*n,i.x=e.x*r+t.x*n,i.y=e.y*r+t.y*n,i.z=e.z*r+t.z*n,i)},THREE.Vertex=function(e,t){this.position=e||new THREE.Vector3,this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.normal=t||new THREE.Vector3,this.normalWorld=new THREE.Vector3,this.normalScreen=new THREE.Vector3,this.tangent=new THREE.Vector4,this.__visible=!0},THREE.Face3=function(e,t,i,n,r){this.a=e,this.b=t,this.c=i,this.centroid=new THREE.Vector3,this.normal=n instanceof THREE.Vector3?n:new THREE.Vector3,this.vertexNormals=n instanceof Array?n:[],this.materials=r instanceof Array?r:[r]},THREE.Face4=function(e,t,i,n,r,o){this.a=e,this.b=t,this.c=i,this.d=n,this.centroid=new THREE.Vector3,this.normal=r instanceof THREE.Vector3?r:new THREE.Vector3,this.vertexNormals=r instanceof Array?r:[],this.materials=o instanceof Array?o:[o]},THREE.UV=function(e,t){this.set(e||0,t||0)},THREE.UV.prototype={set:function(e,t){return this.u=e,this.v=t,this},copy:function(e){return this.set(e.u,e.v),this}},THREE.Geometry=function(){this.id="Geometry"+THREE.GeometryIdCounter++,this.vertices=[],this.faces=[],this.uvs=[],this.uvs2=[],this.colors=[],this.skinWeights=[],this.skinIndices=[],this.boundingSphere=this.boundingBox=null,this.geometryChunks={},this.hasTangents=!1},THREE.Geometry.prototype={computeCentroids:function(){var e,t,i;for(e=0,t=this.faces.length;e<t;e++)i=this.faces[e],i.centroid.set(0,0,0),i instanceof THREE.Face3?(i.centroid.addSelf(this.vertices[i.a].position),i.centroid.addSelf(this.vertices[i.b].position),i.centroid.addSelf(this.vertices[i.c].position),i.centroid.divideScalar(3)):i instanceof THREE.Face4&&(i.centroid.addSelf(this.vertices[i.a].position),i.centroid.addSelf(this.vertices[i.b].position),i.centroid.addSelf(this.vertices[i.c].position),i.centroid.addSelf(this.vertices[i.d].position),i.centroid.divideScalar(4))},computeFaceNormals:function(e){var t,i,n,r,o,s,a=new THREE.Vector3,h=new THREE.Vector3;for(n=0,r=this.vertices.length;n<r;n++)o=this.vertices[n],o.normal.set(0,0,0);for(n=0,r=this.faces.length;n<r;n++){if(o=this.faces[n],e&&o.vertexNormals.length){for(a.set(0,0,0),t=0,i=o.normal.length;t<i;t++)a.addSelf(o.vertexNormals[t]);a.divideScalar(3)}else t=this.vertices[o.a],i=this.vertices[o.b],s=this.vertices[o.c],a.sub(s.position,i.position),h.sub(t.position,i.position),a.crossSelf(h);a.isZero()||a.normalize(),o.normal.copy(a)}},computeVertexNormals:function(){var e,t,i,n;if(void 0==this.__tmpVertices){for(n=this.__tmpVertices=Array(this.vertices.length),e=0,t=this.vertices.length;e<t;e++)n[e]=new THREE.Vector3;for(e=0,t=this.faces.length;e<t;e++)i=this.faces[e],i instanceof THREE.Face3?i.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:i instanceof THREE.Face4&&(i.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else for(n=this.__tmpVertices,e=0,t=this.vertices.length;e<t;e++)n[e].set(0,0,0);for(e=0,t=this.faces.length;e<t;e++)i=this.faces[e],i instanceof THREE.Face3?(n[i.a].addSelf(i.normal),n[i.b].addSelf(i.normal),n[i.c].addSelf(i.normal)):i instanceof THREE.Face4&&(n[i.a].addSelf(i.normal),n[i.b].addSelf(i.normal),n[i.c].addSelf(i.normal),n[i.d].addSelf(i.normal));for(e=0,t=this.vertices.length;e<t;e++)n[e].normalize();for(e=0,t=this.faces.length;e<t;e++)i=this.faces[e],i instanceof THREE.Face3?(i.vertexNormals[0].copy(n[i.a]),i.vertexNormals[1].copy(n[i.b]),i.vertexNormals[2].copy(n[i.c])):i instanceof THREE.Face4&&(i.vertexNormals[0].copy(n[i.a]),i.vertexNormals[1].copy(n[i.b]),i.vertexNormals[2].copy(n[i.c]),i.vertexNormals[3].copy(n[i.d]))},computeTangents:function(){function e(e,t,i,n,w,S,M){o=e.vertices[t].position,s=e.vertices[i].position,a=e.vertices[n].position,h=r[w],l=r[S],c=r[M],f=s.x-o.x,E=a.x-o.x,u=s.y-o.y,d=a.y-o.y,p=s.z-o.z,m=a.z-o.z,v=l.u-h.u,g=c.u-h.u,y=l.v-h.v,R=c.v-h.v,T=1/(v*R-g*y),b.set((R*f-y*E)*T,(R*u-y*d)*T,(R*p-y*m)*T),H.set((v*E-g*f)*T,(v*d-g*u)*T,(v*m-g*p)*T),_[t].addSelf(b),_[i].addSelf(b),_[n].addSelf(b),x[t].addSelf(H),x[i].addSelf(H),x[n].addSelf(H)}var t,i,n,r,o,s,a,h,l,c,f,E,u,d,p,m,v,g,y,R,T,_=[],x=[],b=new THREE.Vector3,H=new THREE.Vector3,w=new THREE.Vector3,S=new THREE.Vector3,M=new THREE.Vector3;for(t=0,i=this.vertices.length;t<i;t++)_[t]=new THREE.Vector3,x[t]=new THREE.Vector3;for(t=0,i=this.faces.length;t<i;t++)n=this.faces[t],r=this.uvs[t],n instanceof THREE.Face3?(e(this,n.a,n.b,n.c,0,1,2),this.vertices[n.a].normal.copy(n.vertexNormals[0]),this.vertices[n.b].normal.copy(n.vertexNormals[1]),this.vertices[n.c].normal.copy(n.vertexNormals[2])):n instanceof THREE.Face4&&(e(this,n.a,n.b,n.c,0,1,2),e(this,n.a,n.b,n.d,0,1,3),this.vertices[n.a].normal.copy(n.vertexNormals[0]),this.vertices[n.b].normal.copy(n.vertexNormals[1]),this.vertices[n.c].normal.copy(n.vertexNormals[2]),this.vertices[n.d].normal.copy(n.vertexNormals[3]));for(t=0,i=this.vertices.length;t<i;t++)M.copy(this.vertices[t].normal),n=_[t],w.copy(n),w.subSelf(M.multiplyScalar(M.dot(n))).normalize(),S.cross(this.vertices[t].normal,n),n=S.dot(x[t]),n=n<0?-1:1,this.vertices[t].tangent.set(w.x,w.y,w.z,n);this.hasTangents=!0},computeBoundingBox:function(){var e;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var t=1,i=this.vertices.length;t<i;t++)e=this.vertices[t],e.position.x<this.boundingBox.x[0]?this.boundingBox.x[0]=e.position.x:e.position.x>this.boundingBox.x[1]&&(this.boundingBox.x[1]=e.position.x),e.position.y<this.boundingBox.y[0]?this.boundingBox.y[0]=e.position.y:e.position.y>this.boundingBox.y[1]&&(this.boundingBox.y[1]=e.position.y),e.position.z<this.boundingBox.z[0]?this.boundingBox.z[0]=e.position.z:e.position.z>this.boundingBox.z[1]&&(this.boundingBox.z[1]=e.position.z)}},computeBoundingSphere:function(){for(var e=null===this.boundingSphere?0:this.boundingSphere.radius,t=0,i=this.vertices.length;t<i;t++)e=Math.max(e,this.vertices[t].position.length());this.boundingSphere={radius:e}},sortFacesByMaterial:function(){function e(e){var n=[];for(t=0,i=e.length;t<i;t++)void 0==e[t]?n.push("undefined"):n.push(e[t].id);return n.join("_")}var t,i,n,r,o,s,a,h,l={};for(n=0,r=this.faces.length;n<r;n++)o=this.faces[n],s=o.materials,a=e(s),void 0==l[a]&&(l[a]={hash:a,counter:0}),h=l[a].hash+"_"+l[a].counter,void 0==this.geometryChunks[h]&&(this.geometryChunks[h]={faces:[],materials:s,vertices:0}),o=o instanceof THREE.Face3?3:4,this.geometryChunks[h].vertices+o>65535&&(l[a].counter+=1,h=l[a].hash+"_"+l[a].counter,void 0==this.geometryChunks[h]&&(this.geometryChunks[h]={faces:[],materials:s,vertices:0})),this.geometryChunks[h].faces.push(n),this.geometryChunks[h].vertices+=o}},THREE.GeometryIdCounter=0,THREE.AnimationHandler=function(){var e=[],t={};return t.update=function(t){for(var i=0;i<e.length;i++)e[i].update(t)},t.add=function(t){e.indexOf(t)===-1&&e.push(t)},t.remove=function(t){e.indexOf(t)!==-1&&e.splice(childIndex,1)},t.initData=function(e){if(e.initialized!==!0){for(var t=0;t<e.hierarchy.length;t++)for(var i=0;i<e.hierarchy[t].keys.length;i++)if(e.hierarchy[t].keys[i].time<0&&(e.hierarchy[t].keys[i].time=0),e.hierarchy[t].keys[i].index=i,void 0!==e.hierarchy[t].keys[i].rot&&!(e.hierarchy[t].keys[i].rot instanceof THREE.Quaternion)){var n=e.hierarchy[t].keys[i].rot;e.hierarchy[t].keys[i].rot=new THREE.Quaternion(n[0],n[1],n[2],n[3])}for(i=parseInt(e.length*e.fps,10),e.JIT={},e.JIT.hierarchy=[],t=0;t<e.hierarchy.length;t++)e.JIT.hierarchy.push(Array(i));e.initialized=!0}},t}(),THREE.Animation=function(e,t){if(this.root=e,this.data=t,this.hierarchy=[],this.startTime=0,this.isPlaying=!1,this.loop=!0,this.offset=0,this.data.initialized||THREE.AnimationHandler.initData(this.data),e instanceof THREE.SkinnedMesh)for(var i=0;i<this.root.bones.length;i++)this.hierarchy.push(this.root.bones[i])},THREE.Animation.prototype.play=function(){if(!this.isPlaying){this.isPlaying=!0,this.startTime=.001*(new Date).getTime();for(var e=0;e<this.hierarchy.length;e++)this.hierarchy[e].useQuaternion=!0,this.hierarchy[e].matrixAutoUpdate=!0,void 0===this.hierarchy[e].prevKey&&(this.hierarchy[e].prevKey={pos:0,rot:0,scl:0},this.hierarchy[e].nextKey={pos:0,rot:0,scl:0}),this.hierarchy[e].prevKey.pos=this.data.hierarchy[e].keys[0],this.hierarchy[e].prevKey.rot=this.data.hierarchy[e].keys[0],this.hierarchy[e].prevKey.scl=this.data.hierarchy[e].keys[0],this.hierarchy[e].nextKey.pos=this.getNextKeyWith("pos",e,1),this.hierarchy[e].nextKey.rot=this.getNextKeyWith("rot",e,1),this.hierarchy[e].nextKey.scl=this.getNextKeyWith("scl",e,1);this.update(),THREE.AnimationHandler.add(this)}},THREE.Animation.prototype.pause=function(){THREE.AnimationHandler.remove(this)},THREE.Animation.prototype.stop=function(){this.isPlaying=!1,THREE.AnimationHandler.remove(this)},THREE.Animation.prototype.update=function(){if(this.isPlaying){var e,t,i,n,r,o,s=["pos","rot","scl"],a=this.data.JIT.hierarchy,h=.001*(new Date).getTime()-this.startTime+this.offset,l=h;if(h>this.data.length){for(;h>this.data.length;)h-=this.data.length;this.startTime=.001*(new Date).getTime()-h,h=.001*(new Date).getTime()-this.startTime}o=Math.min(parseInt(h*this.data.fps),parseInt(this.data.length*this.data.fps));
for(var c=0,f=this.hierarchy.length;c<f;c++)if(r=this.hierarchy[c],void 0!==a[c][o])r.skinMatrix=a[c][o],r.matrixAutoUpdate=!1,r.matrixNeedsUpdate=!1,r.skinMatrix.flattenToArrayOffset(this.root.boneMatrices,16*c);else for(var E=0;E<3;E++){if(t=s[E],i=r.prevKey[t],n=r.nextKey[t],n.time<l){if(h<l){if(!this.loop)return void this.stop();i=this.data.hierarchy[c].keys[0],n=this.getNextKeyWith(t,c,1)}else do i=n,n=this.getNextKeyWith(t,c,n.index+1);while(n.time<h);r.prevKey[t]=i,r.nextKey[t]=n}r.matrixAutoUpdate=!0,r.matrixNeedsUpdate=!0,e=(h-i.time)/(n.time-i.time),i=i[t],n=n[t],"rot"===t?((e<0||e>1)&&(console.log("Scale out of bounds:"+e),e=e<0?0:1),THREE.Quaternion.slerp(i,n,r.quaternion,e)):(t="pos"===t?r.position:r.scale,t.x=i[0]+(n[0]-i[0])*e,t.y=i[1]+(n[1]-i[1])*e,t.z=i[2]+(n[2]-i[2])*e)}if(void 0===a[0][o])for(this.hierarchy[0].update(void 0,!0),c=0;c<this.hierarchy.length;c++)a[c][o]=this.hierarchy[c].skinMatrix.clone()}},THREE.Animation.prototype.updateObject=function(){},THREE.Animation.prototype.getNextKeyWith=function(e,t,i){for(var n=this.data.hierarchy[t].keys;i<n.length;i++)if(void 0!==n[i][e])return n[i];return this.data.hierarchy[t].keys[0]},THREE.Camera=function(e,t,i,n,r){THREE.Object3D.call(this),this.fov=e||50,this.aspect=t||1,this.near=i||.1,this.far=n||2e3,this.screenCenterY=this.screenCenterX=0,this.target=r||new THREE.Object3D,this.useTarget=!0,this.up=new THREE.Vector3(0,1,0),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=null,this.tmpVec=new THREE.Vector3,this.translateX=function(e,t){this.tmpVec.sub(this.target.position,this.position).normalize().multiplyScalar(e),this.tmpVec.crossSelf(this.up),t&&(this.tmpVec.y=0),this.position.addSelf(this.tmpVec),this.target.position.addSelf(this.tmpVec)},this.translateZ=function(e,t){this.tmpVec.sub(this.target.position,this.position).normalize().multiplyScalar(e),t&&(this.tmpVec.y=0),this.position.subSelf(this.tmpVec),this.target.position.subSelf(this.tmpVec)},this.updateProjectionMatrix()},THREE.Camera.prototype=new THREE.Object3D,THREE.Camera.prototype.constructor=THREE.Camera,THREE.Camera.prototype.supr=THREE.Object3D.prototype,THREE.Camera.prototype.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.Camera.prototype.update=function(e,t,i){for(this.useTarget?(this.matrix.lookAt(this.position,this.target.position,this.up),e?this.matrixWorld.multiply(e,this.matrix):this.matrixWorld.copy(this.matrix),THREE.Matrix4.makeInvert(this.matrixWorld,this.matrixWorldInverse),t=!0):(this.matrixAutoUpdate&&(t|=this.updateMatrix()),(t||this.matrixNeedsUpdate)&&(e?this.matrixWorld.multiply(e,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixNeedsUpdate=!1,t=!0,THREE.Matrix4.makeInvert(this.matrixWorld,this.matrixWorldInverse))),e=0;e<this.children.length;e++)this.children[e].update(this.matrixWorld,t,i)},THREE.Camera.prototype.frustumContains=function(e){var t=e.matrixWorld.n14,i=e.matrixWorld.n24,n=e.matrixWorld.n34,r=this.matrixWorldInverse,o=e.boundRadius*e.boundRadiusScale,s=r.n31*t+r.n32*i+r.n33*n+r.n34;if(s-o>-this.near)return!1;if(s+o<-this.far)return!1;s-=o;var a=this.projectionMatrix,h=1/(a.n43*s),l=h*this.screenCenterX,c=(r.n11*t+r.n12*i+r.n13*n+r.n14)*a.n11*l;return o=a.n11*o*l,!(c+o<-this.screenCenterX)&&(!(c-o>this.screenCenterX)&&(t=(r.n21*t+r.n22*i+r.n23*n+r.n24)*a.n22*h*this.screenCenterY,!(t+o<-this.screenCenterY)&&(!(t-o>this.screenCenterY)&&(e.positionScreen.set(c,t,s,o),!0))))},THREE.QuakeCamera=function(e){THREE.Camera.call(this,e.fov,e.aspect,e.near,e.far,e.target),this.movementSpeed=1,this.lookSpeed=.005,this.noFly=!1,this.lookVertical=!0,this.domElement=document,e&&(void 0!==e.movementSpeed&&(this.movementSpeed=e.movementSpeed),void 0!==e.lookSpeed&&(this.lookSpeed=e.lookSpeed),void 0!==e.noFly&&(this.noFly=e.noFly),void 0!==e.lookVertical&&(this.lookVertical=e.lookVertical),void 0!==e.domElement&&(this.domElement=e.domElement)),this.theta=this.phy=this.lon=this.lat=this.mouseY=this.mouseX=0,this.moveForward=!1,this.moveBackward=!1,this.moveLeft=!1,this.moveRight=!1,this.windowHalfX=window.innerWidth/2,this.windowHalfY=window.innerHeight/2,this.onMouseDown=function(e){switch(e.preventDefault(),e.stopPropagation(),e.button){case 0:this.moveForward=!0;break;case 2:this.moveBackward=!0}},this.onMouseUp=function(e){switch(e.preventDefault(),e.stopPropagation(),e.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}},this.onMouseMove=function(e){this.mouseX=e.clientX-this.windowHalfX,this.mouseY=e.clientY-this.windowHalfY},this.onKeyDown=function(e){switch(e.keyCode){case 38:case 87:this.moveForward=!0;break;case 37:case 65:this.moveLeft=!0;break;case 40:case 83:this.moveBackward=!0;break;case 39:case 68:this.moveRight=!0}},this.onKeyUp=function(e){switch(e.keyCode){case 38:case 87:this.moveForward=!1;break;case 37:case 65:this.moveLeft=!1;break;case 40:case 83:this.moveBackward=!1;break;case 39:case 68:this.moveRight=!1}},this.update=function(){this.moveForward&&this.translateZ(-this.movementSpeed,this.noFly),this.moveBackward&&this.translateZ(this.movementSpeed,this.noFly),this.moveLeft&&this.translateX(-this.movementSpeed,this.noFly),this.moveRight&&this.translateX(this.movementSpeed,this.noFly),this.lon+=this.mouseX*this.lookSpeed,this.lookVertical&&(this.lat-=this.mouseY*this.lookSpeed),this.lat=Math.max(-85,Math.min(85,this.lat)),this.phi=(90-this.lat)*Math.PI/180,this.theta=this.lon*Math.PI/180;var e=this.target.position,t=this.position;e.x=t.x+100*Math.sin(this.phi)*Math.cos(this.theta),e.y=t.y+100*Math.cos(this.phi),e.z=t.z+100*Math.sin(this.phi)*Math.sin(this.theta),this.supr.update.call(this)},this.domElement.addEventListener("contextmenu",function(e){e.preventDefault()},!1),this.domElement.addEventListener("mousemove",bind(this,this.onMouseMove),!1),this.domElement.addEventListener("mousedown",bind(this,this.onMouseDown),!1),this.domElement.addEventListener("mouseup",bind(this,this.onMouseUp),!1),this.domElement.addEventListener("keydown",bind(this,this.onKeyDown),!1),this.domElement.addEventListener("keyup",bind(this,this.onKeyUp),!1)},THREE.QuakeCamera.prototype=new THREE.Camera,THREE.QuakeCamera.prototype.constructor=THREE.QuakeCamera,THREE.QuakeCamera.prototype.supr=THREE.Camera.prototype,THREE.Light=function(e){THREE.Object3D.call(this),this.color=new THREE.Color(e)},THREE.Light.prototype=new THREE.Object3D,THREE.Light.prototype.constructor=THREE.Light,THREE.Light.prototype.supr=THREE.Object3D.prototype,THREE.AmbientLight=function(e){THREE.Light.call(this,e)},THREE.AmbientLight.prototype=new THREE.Light,THREE.AmbientLight.prototype.constructor=THREE.AmbientLight,THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.intensity=t||1},THREE.DirectionalLight.prototype=new THREE.Light,THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight,THREE.PointLight=function(e,t){THREE.Light.call(this,e),this.position=new THREE.Vector3,this.intensity=t||1},THREE.PointLight.prototype=new THREE.Light,THREE.PointLight.prototype.constructor=THREE.PointLight,THREE.FlatShading=0,THREE.SmoothShading=1,THREE.NormalBlending=0,THREE.AdditiveBlending=1,THREE.SubtractiveBlending=2,THREE.BillboardBlending=3,THREE.ReverseSubtractiveBlending=4,THREE.MaterialCounter={value:0},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.LatitudeReflectionMapping=function(){},THREE.LatitudeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.UVMapping=function(){},THREE.LineBasicMaterial=function(e){this.id=THREE.MaterialCounter.value++,this.color=new THREE.Color(16777215),this.opacity=1,this.blending=THREE.NormalBlending,this.depthTest=!0,this.linewidth=1,this.linejoin=this.linecap="round",this.vertexColors=!1,e&&(void 0!==e.color&&this.color.setHex(e.color),void 0!==e.opacity&&(this.opacity=e.opacity),void 0!==e.blending&&(this.blending=e.blending),void 0!==e.depthTest&&(this.depthTest=e.depthTest),void 0!==e.linewidth&&(this.linewidth=e.linewidth),void 0!==e.linecap&&(this.linecap=e.linecap),void 0!==e.linejoin&&(this.linejoin=e.linejoin),void 0!==e.vertexColors&&(this.vertexColors=e.vertexColors))},THREE.MeshBasicMaterial=function(e){this.id=THREE.MaterialCounter.value++,this.color=new THREE.Color(16777215),this.opacity=1,this.envMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.blending=THREE.NormalBlending,this.depthTest=!0,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=!1,this.skinning=!1,e&&(void 0!==e.color&&this.color.setHex(e.color),void 0!==e.opacity&&(this.opacity=e.opacity),void 0!==e.map&&(this.map=e.map),void 0!==e.lightMap&&(this.lightMap=e.lightMap),void 0!==e.envMap&&(this.envMap=e.envMap),void 0!==e.combine&&(this.combine=e.combine),void 0!==e.reflectivity&&(this.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(this.refractionRatio=e.refractionRatio),void 0!==e.fog&&(this.fog=e.fog),void 0!==e.shading&&(this.shading=e.shading),void 0!==e.blending&&(this.blending=e.blending),void 0!==e.depthTest&&(this.depthTest=e.depthTest),void 0!==e.wireframe&&(this.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(this.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(this.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(this.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.vertexColors&&(this.vertexColors=e.vertexColors),void 0!==e.skinning&&(this.skinning=e.skinning))},THREE.MeshLambertMaterial=function(e){this.id=THREE.MaterialCounter.value++,this.color=new THREE.Color(16777215),this.opacity=1,this.envMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.blending=THREE.NormalBlending,this.depthTest=!0,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=!1,this.skinning=!1,e&&(void 0!==e.color&&this.color.setHex(e.color),void 0!==e.opacity&&(this.opacity=e.opacity),void 0!==e.map&&(this.map=e.map),void 0!==e.lightMap&&(this.lightMap=e.lightMap),void 0!==e.envMap&&(this.envMap=e.envMap),void 0!==e.combine&&(this.combine=e.combine),void 0!==e.reflectivity&&(this.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(this.refractionRatio=e.refractionRatio),void 0!==e.fog&&(this.fog=e.fog),void 0!==e.shading&&(this.shading=e.shading),void 0!==e.blending&&(this.blending=e.blending),void 0!==e.depthTest&&(this.depthTest=e.depthTest),void 0!==e.wireframe&&(this.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(this.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(this.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(this.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.vertexColors&&(this.vertexColors=e.vertexColors),void 0!==e.skinning&&(this.skinning=e.skinning))},THREE.MeshPhongMaterial=function(e){this.id=THREE.MaterialCounter.value++,this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(328965),this.specular=new THREE.Color(1118481),this.shininess=30,this.opacity=1,this.envMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.blending=THREE.NormalBlending,this.depthTest=!0,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=!1,this.skinning=!1,e&&(void 0!==e.color&&(this.color=new THREE.Color(e.color)),void 0!==e.ambient&&(this.ambient=new THREE.Color(e.ambient)),void 0!==e.specular&&(this.specular=new THREE.Color(e.specular)),void 0!==e.shininess&&(this.shininess=e.shininess),void 0!==e.opacity&&(this.opacity=e.opacity),void 0!==e.lightMap&&(this.lightMap=e.lightMap),void 0!==e.map&&(this.map=e.map),void 0!==e.envMap&&(this.envMap=e.envMap),void 0!==e.combine&&(this.combine=e.combine),void 0!==e.reflectivity&&(this.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(this.refractionRatio=e.refractionRatio),void 0!==e.fog&&(this.fog=e.fog),void 0!==e.shading&&(this.shading=e.shading),void 0!==e.blending&&(this.blending=e.blending),void 0!==e.depthTest&&(this.depthTest=e.depthTest),void 0!==e.wireframe&&(this.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(this.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(this.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(this.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.vertexColors&&(this.vertexColors=e.vertexColors),void 0!==e.skinning&&(this.skinning=e.skinning))},THREE.MeshDepthMaterial=function(e){this.id=THREE.MaterialCounter.value++,this.opacity=1,this.shading=THREE.SmoothShading,this.blending=THREE.NormalBlending,this.depthTest=!0,this.wireframe=!1,this.wireframeLinewidth=1,e&&(void 0!==e.opacity&&(this.opacity=e.opacity),void 0!==e.shading&&(this.shading=e.shading),void 0!==e.blending&&(this.blending=e.blending),void 0!==e.depthTest&&(this.depthTest=e.depthTest),void 0!==e.wireframe&&(this.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(this.wireframeLinewidth=e.wireframeLinewidth))},THREE.MeshNormalMaterial=function(e){this.id=THREE.MaterialCounter.value++,this.opacity=1,this.shading=THREE.FlatShading,this.blending=THREE.NormalBlending,this.depthTest=!0,this.wireframe=!1,this.wireframeLinewidth=1,e&&(void 0!==e.opacity&&(this.opacity=e.opacity),void 0!==e.shading&&(this.shading=e.shading),void 0!==e.blending&&(this.blending=e.blending),void 0!==e.depthTest&&(this.depthTest=e.depthTest),void 0!==e.wireframe&&(this.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(this.wireframeLinewidth=e.wireframeLinewidth))},THREE.MeshFaceMaterial=function(){},THREE.MeshShaderMaterial=function(e){this.id=THREE.MaterialCounter.value++,this.vertexShader=this.fragmentShader="void main() {}",this.uniforms={},this.opacity=1,this.shading=THREE.SmoothShading,this.blending=THREE.NormalBlending,this.depthTest=!0,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=!1,this.skinning=!1,e&&(void 0!==e.fragmentShader&&(this.fragmentShader=e.fragmentShader),void 0!==e.vertexShader&&(this.vertexShader=e.vertexShader),void 0!==e.uniforms&&(this.uniforms=e.uniforms),void 0!==e.opacity&&(this.opacity=e.opacity),void 0!==e.shading&&(this.shading=e.shading),void 0!==e.blending&&(this.blending=e.blending),void 0!==e.depthTest&&(this.depthTest=e.depthTest),void 0!==e.wireframe&&(this.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(this.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(this.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(this.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.vertexColors&&(this.vertexColors=e.vertexColors),void 0!==e.skinning&&(this.skinning=e.skinning))},THREE.ParticleBasicMaterial=function(e){this.id=THREE.MaterialCounter.value++,this.color=new THREE.Color(16777215),this.opacity=1,this.map=null,this.size=1,this.blending=THREE.NormalBlending,this.depthTest=!0,this.offset=new THREE.Vector2,this.vertexColors=!1,e&&(void 0!==e.color&&this.color.setHex(e.color),void 0!==e.opacity&&(this.opacity=e.opacity),void 0!==e.map&&(this.map=e.map),void 0!==e.size&&(this.size=e.size),void 0!==e.blending&&(this.blending=e.blending),void 0!==e.depthTest&&(this.depthTest=e.depthTest),void 0!==e.vertexColors&&(this.vertexColors=e.vertexColors))},THREE.ParticleCircleMaterial=function(e){this.id=THREE.MaterialCounter.value++,this.color=new THREE.Color(16777215),this.opacity=1,this.blending=THREE.NormalBlending,e&&(void 0!==e.color&&this.color.setHex(e.color),void 0!==e.opacity&&(this.opacity=e.opacity),void 0!==e.blending&&(this.blending=e.blending))},THREE.ParticleDOMMaterial=function(e){this.id=THREE.MaterialCounter.value++,this.domElement=e},THREE.Texture=function(e,t,i,n,r,o){this.image=e,this.mapping=void 0!==t?t:new THREE.UVMapping,this.wrapS=void 0!==i?i:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==n?n:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==r?r:THREE.LinearFilter,this.minFilter=void 0!==o?o:THREE.LinearMipMapLinearFilter,this.needsUpdate=!1},THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter)}},THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.RepeatWrapping=0,THREE.ClampToEdgeWrapping=1,THREE.MirroredRepeatWrapping=2,THREE.NearestFilter=3,THREE.NearestMipMapNearestFilter=4,THREE.NearestMipMapLinearFilter=5,THREE.LinearFilter=6,THREE.LinearMipMapNearestFilter=7,THREE.LinearMipMapLinearFilter=8,THREE.ByteType=9,THREE.UnsignedByteType=10,THREE.ShortType=11,THREE.UnsignedShortType=12,THREE.IntType=13,THREE.UnsignedIntType=14,THREE.FloatType=15,THREE.AlphaFormat=16,THREE.RGBFormat=17,THREE.RGBAFormat=18,THREE.LuminanceFormat=19,THREE.LuminanceAlphaFormat=20,THREE.RenderTarget=function(e,t,i){this.width=e,this.height=t,i=i||{},this.wrapS=void 0!==i.wrapS?i.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i.wrapT?i.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==i.magFilter?i.magFilter:THREE.LinearFilter,this.minFilter=void 0!==i.minFilter?i.minFilter:THREE.LinearMipMapLinearFilter,this.format=void 0!==i.format?i.format:THREE.RGBFormat,this.type=void 0!==i.type?i.type:THREE.UnsignedByteType};var Uniforms={clone:function(e){var t,i,n,r={};for(t in e){r[t]={};for(i in e[t])n=e[t][i],r[t][i]=n instanceof THREE.Color||n instanceof THREE.Vector3||n instanceof THREE.Texture?n.clone():n}return r},merge:function(e){var t,i,n,r={};for(t=0;t<e.length;t++){n=this.clone(e[t]);for(i in n)r[i]=n[i]}return r}};THREE.Particle=function(e){THREE.Object3D.call(this),this.materials=e instanceof Array?e:[e],this.matrixAutoUpdate=!1},THREE.Particle.prototype=new THREE.Object3D,THREE.Particle.prototype.constructor=THREE.Particle,THREE.ParticleSystem=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.materials=t instanceof Array?t:[t],this.sortParticles=!1},THREE.ParticleSystem.prototype=new THREE.Object3D,THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem,THREE.Line=function(e,t,i){THREE.Object3D.call(this),this.geometry=e,this.materials=t instanceof Array?t:[t],this.type=void 0!=i?i:THREE.LineStrip},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=new THREE.Object3D,THREE.Line.prototype.constructor=THREE.Line,THREE.Mesh=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.materials=t&&t.length?t:[t],this.flipSided=!1,this.doubleSided=!1,this.overdraw=!1,this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=e.boundingSphere.radius)},THREE.Mesh.prototype=new THREE.Object3D,THREE.Mesh.prototype.constructor=THREE.Mesh,THREE.Mesh.prototype.supr=THREE.Object3D.prototype,THREE.Bone=function(e){THREE.Object3D.call(this),this.skin=e,this.skinMatrix=new THREE.Matrix4,this.hasNoneBoneChildren=!1},THREE.Bone.prototype=new THREE.Object3D,THREE.Bone.prototype.constructor=THREE.Bone,THREE.Bone.prototype.supr=THREE.Object3D.prototype,THREE.Bone.prototype.update=function(e,t,i){this.matrixAutoUpdate&&(t|=this.updateMatrix()),(t||this.matrixNeedsUpdate)&&(e?this.skinMatrix.multiply(e,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixNeedsUpdate=!1,t=!0);var n,r=this.children.length;if(this.hasNoneBoneChildren)for(this.matrixWorld.multiply(this.skin.matrixWorld,this.skinMatrix),n=0;n<r;n++)e=this.children[n],e instanceof THREE.Bone?e.update(this.skinMatrix,t,i):e.update(this.matrixWorld,!0,i);else for(n=0;n<r;n++)this.children[n].update(this.skinMatrix,t,i)},THREE.Bone.prototype.addChild=function(e){this.children.indexOf(e)===-1&&(void 0!==e.parent&&e.parent.removeChild(e),e.parent=this,this.children.push(e),e instanceof THREE.Bone||(this.hasNoneBoneChildren=!0))},window.Float32Array||(window.Float32Array=Array),THREE.SkinnedMesh=function(e,t){THREE.Mesh.call(this,e,t),this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[];var i,n,r,o,s,a;if(void 0!==this.geometry.bones){for(i=0;i<this.geometry.bones.length;i++)r=this.geometry.bones[i],o=r.pos,s=r.rotq,a=r.scl,n=this.addBone(),n.name=r.name,n.position.set(o[0],o[1],o[2]),n.quaternion.set(s[0],s[1],s[2],s[3]),void 0!==a?n.scale.set(a[0],a[1],a[2]):n.scale.set(1,1,1);for(i=0;i<this.bones.length;i++)r=this.geometry.bones[i],n=this.bones[i],r.parent===-1?this.addChild(n):this.bones[r.parent].addChild(n);this.boneMatrices=new Float32Array(16*this.bones.length),this.pose()}},THREE.SkinnedMesh.prototype=new THREE.Mesh,THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh,THREE.SkinnedMesh.prototype.update=function(e,t,i){if(this.visible){this.matrixAutoUpdate&&(t|=this.updateMatrix()),(t||this.matrixNeedsUpdate)&&(e?this.matrixWorld.multiply(e,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixNeedsUpdate=!1,t=!0);var n,r=this.children.length;for(n=0;n<r;n++)e=this.children[n],e instanceof THREE.Bone?e.update(this.identityMatrix,!1,i):e.update(this.matrixWorld,t,i)}},THREE.SkinnedMesh.prototype.addBone=function(e){return void 0===e&&(e=new THREE.Bone(this)),this.bones.push(e),e},THREE.SkinnedMesh.prototype.pose=function(){this.update(void 0,!0);for(var e,t=[],i=0;i<this.bones.length;i++)e=this.bones[i],t.push(THREE.Matrix4.makeInvert(e.skinMatrix)),e.skinMatrix.flattenToArrayOffset(this.boneMatrices,16*i);if(void 0===this.geometry.skinVerticesA){this.geometry.skinVerticesA=[],this.geometry.skinVerticesB=[];var n;for(e=0;e<this.geometry.skinIndices.length;e++){i=this.geometry.vertices[e].position;var r=this.geometry.skinIndices[e].x,o=this.geometry.skinIndices[e].y;n=new THREE.Vector3(i.x,i.y,i.z),this.geometry.skinVerticesA.push(t[r].multiplyVector3(n)),n=new THREE.Vector3(i.x,i.y,i.z),this.geometry.skinVerticesB.push(t[o].multiplyVector3(n)),this.geometry.skinWeights[e].x+this.geometry.skinWeights[e].y!==1&&(i=.5*(1-(this.geometry.skinWeights[e].x+this.geometry.skinWeights[e].y)),this.geometry.skinWeights[e].x+=i,this.geometry.skinWeights[e].y+=i)}}},THREE.Ribbon=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.materials=t instanceof Array?t:[t],this.flipSided=!1,this.doubleSided=!1},THREE.Ribbon.prototype=new THREE.Object3D,THREE.Ribbon.prototype.constructor=THREE.Ribbon,THREE.Sound=function(e,t,i,n){THREE.Object3D.call(this),this.isLoaded=!1,this.isAddedToDOM=!1,this.isPlaying=!1,this.duration=-1,this.radius=void 0!==t?Math.abs(t):100,this.volume=Math.min(1,Math.max(0,void 0!==i?i:1)),this.domElement=document.createElement("audio"),this.domElement.volume=0,this.domElement.pan=0,this.domElement.loop=void 0===n||n,this.sources=e instanceof Array?e:[e];var r;for(i=this.sources.length,e=0;e<i;e++)if(t=this.sources[e],t.toLowerCase(),t.indexOf(".mp3")!==-1?r="audio/mpeg":t.indexOf(".ogg")!==-1?r="audio/ogg":t.indexOf(".wav")!==-1&&(r="audio/wav"),this.domElement.canPlayType(r)){r=document.createElement("source"),r.src=this.sources[e],this.domElement.THREESound=this,this.domElement.appendChild(r),this.domElement.addEventListener("canplay",this.onLoad,!0),this.domElement.load();break}},THREE.Sound.prototype=new THREE.Object3D,THREE.Sound.prototype.constructor=THREE.Sound,THREE.Sound.prototype.supr=THREE.Object3D.prototype,THREE.Sound.prototype.onLoad=function(){var e=this.THREESound;e.isLoaded||(this.removeEventListener("canplay",this.onLoad,!0),e.isLoaded=!0,e.duration=this.duration,e.isPlaying&&e.play())},THREE.Sound.prototype.addToDOM=function(e){this.isAddedToDOM=!0,e.appendChild(this.domElement)},THREE.Sound.prototype.play=function(e){this.isPlaying=!0,this.isLoaded&&(this.domElement.play(),e&&(this.domElement.currentTime=e%this.duration))},THREE.Sound.prototype.pause=function(){this.isPlaying=!1,this.domElement.pause()},THREE.Sound.prototype.stop=function(){this.isPlaying=!1,this.domElement.pause(),this.domElement.currentTime=0},THREE.Sound.prototype.calculateVolumeAndPan=function(e){e=e.length(),this.domElement.volume=e<=this.radius?this.volume*(1-e/this.radius):0},THREE.Sound.prototype.update=function(e,t,i){this.matrixAutoUpdate&&(this.matrix.setPosition(this.position),t=!0),(t||this.matrixNeedsUpdate)&&(e?this.matrixWorld.multiply(e,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixNeedsUpdate=!1,t=!0);var n=this.children.length;for(e=0;e<n;e++)this.children[e].update(this.matrixWorld,t,i)},THREE.Scene=function(){THREE.Object3D.call(this),this.objects=[],this.lights=[],this.sounds=[],this.fog=null,this.matrixAutoUpdate=!1},THREE.Scene.prototype=new THREE.Object3D,THREE.Scene.prototype.constructor=THREE.Scene,THREE.Scene.prototype.supr=THREE.Object3D.prototype,THREE.Scene.prototype.addChild=function(e){this.supr.addChild.call(this,e),this.addChildRecurse(e)},THREE.Scene.prototype.addChildRecurse=function(e){e instanceof THREE.Light?this.lights.indexOf(e)===-1&&this.lights.push(e):e instanceof THREE.Sound?this.sounds.indexOf(e)===-1&&this.sounds.push(e):e instanceof THREE.Camera||e instanceof THREE.Bone||this.objects.indexOf(e)===-1&&this.objects.push(e);for(var t=0;t<e.children.length;t++)this.addChildRecurse(e.children[t])},THREE.Scene.prototype.removeChild=function(e){this.supr.removeChild.call(this,e),this.removeChildRecurse(e)},THREE.Scene.prototype.removeChildRecurse=function(e){if(e instanceof THREE.Light){var t=this.lights.indexOf(e);t!==-1&&this.lights.splice(t,1)}else e instanceof THREE.Sound?(t=this.sounds.indexOf(e),t!==-1&&this.sounds.splice(t,1)):e instanceof THREE.Camera||(t=this.objects.indexOf(e),t!==-1&&this.objects.splice(t,1));for(t=0;t<e.children.length;t++)this.removeChildRecurse(e.children[t])},THREE.Scene.prototype.addObject=THREE.Scene.prototype.addChild,THREE.Scene.prototype.removeObject=THREE.Scene.prototype.removeChild,THREE.Scene.prototype.addLight=THREE.Scene.prototype.addChild,THREE.Scene.prototype.removeLight=THREE.Scene.prototype.removeChild,THREE.Fog=function(e,t,i){this.color=new THREE.Color(e),this.near=t||1,this.far=i||1e3},THREE.FogExp2=function(e,t){this.color=new THREE.Color(e),this.density=t||25e-5},THREE.Projector=function(){function e(e,t){return t.z-e.z}function t(e,t){var i=0,n=1,r=e.z+e.w,o=t.z+t.w,s=-e.z+e.w,a=-t.z+t.w;return r>=0&&o>=0&&s>=0&&a>=0||!(r<0&&o<0||s<0&&a<0)&&(r<0?i=Math.max(i,r/(r-o)):o<0&&(n=Math.min(n,r/(r-o))),s<0?i=Math.max(i,s/(s-a)):a<0&&(n=Math.min(n,s/(s-a))),!(n<i)&&(e.lerpSelf(t,i),t.lerpSelf(e,1-n),!0))}var i,n,r,o,s,a,h,l,c,f,E=[],u=[],d=[],p=[],m=new THREE.Vector4,v=new THREE.Vector4,g=new THREE.Matrix4,y=new THREE.Matrix4,R=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],T=new THREE.Vector4,_=new THREE.Vector4;this.projectObjects=function(t,r,o){r=[];var s,a,h;for(n=0,a=t.objects,t=0,s=a.length;t<s;t++){h=a[t];var l;if(!(l=!h.visible)&&(l=h instanceof THREE.Mesh)){e:{l=void 0;for(var c=h.matrixWorld,f=-h.geometry.boundingSphere.radius*Math.max(h.scale.x,Math.max(h.scale.y,h.scale.z)),u=0;u<6;u++)if(l=R[u].x*c.n14+R[u].y*c.n24+R[u].z*c.n34+R[u].w,l<=f){l=!1;break e}l=!0}l=!l}l||(i=E[n]=E[n]||new THREE.RenderableObject,m.copy(h.position),g.multiplyVector3(m),i.object=h,i.z=m.z,r.push(i),n++)}return o&&r.sort(e),r},this.projectScene=function(i,n,E){var m,x,b,H,w,S,M,A,L,C,F,z,V,B,P,U,N=[],D=n.near,I=n.far;for(s=h=c=0,n.matrixAutoUpdate&&n.update(),g.multiply(n.projectionMatrix,n.matrixWorldInverse),R[0].set(g.n41-g.n11,g.n42-g.n12,g.n43-g.n13,g.n44-g.n14),R[1].set(g.n41+g.n11,g.n42+g.n12,g.n43+g.n13,g.n44+g.n14),R[2].set(g.n41+g.n21,g.n42+g.n22,g.n43+g.n23,g.n44+g.n24),R[3].set(g.n41-g.n21,g.n42-g.n22,g.n43-g.n23,g.n44-g.n24),R[4].set(g.n41-g.n31,g.n42-g.n32,g.n43-g.n33,g.n44-g.n34),R[5].set(g.n41+g.n31,g.n42+g.n32,g.n43+g.n33,g.n44+g.n34),m=0;m<6;m++)S=R[m],S.divideScalar(Math.sqrt(S.x*S.x+S.y*S.y+S.z*S.z));for(i.update(void 0,!1,n),S=this.projectObjects(i,n,!0),i=0,m=S.length;i<m;i++)if(M=S[i].object,M.visible)if(A=M.matrixWorld,F=M.matrixRotationWorld,L=M.materials,C=M.overdraw,M instanceof THREE.Mesh){for(z=M.geometry,V=z.vertices,x=0,b=V.length;x<b;x++)B=V[x],B.positionWorld.copy(B.position),A.multiplyVector3(B.positionWorld),H=B.positionScreen,H.copy(B.positionWorld),g.multiplyVector4(H),H.x/=H.w,H.y/=H.w,B.__visible=H.z>D&&H.z<I;for(z=z.faces,x=0,b=z.length;x<b;x++)if(B=z[x],B instanceof THREE.Face3){if(H=V[B.a],w=V[B.b],P=V[B.c],H.__visible&&w.__visible&&P.__visible&&(M.doubleSided||M.flipSided!=(P.positionScreen.x-H.positionScreen.x)*(w.positionScreen.y-H.positionScreen.y)-(P.positionScreen.y-H.positionScreen.y)*(w.positionScreen.x-H.positionScreen.x)<0)){for(r=u[s]=u[s]||new THREE.RenderableFace3,r.v1.positionWorld.copy(H.positionWorld),r.v2.positionWorld.copy(w.positionWorld),r.v3.positionWorld.copy(P.positionWorld),r.v1.positionScreen.copy(H.positionScreen),r.v2.positionScreen.copy(w.positionScreen),r.v3.positionScreen.copy(P.positionScreen),r.normalWorld.copy(B.normal),F.multiplyVector3(r.normalWorld),r.centroidWorld.copy(B.centroid),A.multiplyVector3(r.centroidWorld),r.centroidScreen.copy(r.centroidWorld),g.multiplyVector3(r.centroidScreen),P=B.vertexNormals,f=r.vertexNormalsWorld,H=0,w=P.length;H<w;H++)U=f[H]=f[H]||new THREE.Vector3,U.copy(P[H]),F.multiplyVector3(U);r.z=r.centroidScreen.z,r.meshMaterials=L,r.faceMaterials=B.materials,r.overdraw=C,M.geometry.uvs[x]&&(r.uvs[0]=M.geometry.uvs[x][0],r.uvs[1]=M.geometry.uvs[x][1],r.uvs[2]=M.geometry.uvs[x][2]),N.push(r),s++}}else B instanceof THREE.Face4&&(H=V[B.a],w=V[B.b],P=V[B.c],U=V[B.d],H.__visible&&w.__visible&&P.__visible&&U.__visible&&(M.doubleSided||M.flipSided!=((U.positionScreen.x-H.positionScreen.x)*(w.positionScreen.y-H.positionScreen.y)-(U.positionScreen.y-H.positionScreen.y)*(w.positionScreen.x-H.positionScreen.x)<0||(w.positionScreen.x-P.positionScreen.x)*(U.positionScreen.y-P.positionScreen.y)-(w.positionScreen.y-P.positionScreen.y)*(U.positionScreen.x-P.positionScreen.x)<0))&&(r=u[s]=u[s]||new THREE.RenderableFace3,r.v1.positionWorld.copy(H.positionWorld),r.v2.positionWorld.copy(w.positionWorld),r.v3.positionWorld.copy(U.positionWorld),r.v1.positionScreen.copy(H.positionScreen),r.v2.positionScreen.copy(w.positionScreen),r.v3.positionScreen.copy(U.positionScreen),r.normalWorld.copy(B.normal),F.multiplyVector3(r.normalWorld),r.centroidWorld.copy(B.centroid),A.multiplyVector3(r.centroidWorld),r.centroidScreen.copy(r.centroidWorld),g.multiplyVector3(r.centroidScreen),r.z=r.centroidScreen.z,r.meshMaterials=L,r.faceMaterials=B.materials,r.overdraw=C,M.geometry.uvs[x]&&(r.uvs[0]=M.geometry.uvs[x][0],r.uvs[1]=M.geometry.uvs[x][1],r.uvs[2]=M.geometry.uvs[x][3]),N.push(r),s++,o=u[s]=u[s]||new THREE.RenderableFace3,o.v1.positionWorld.copy(w.positionWorld),o.v2.positionWorld.copy(P.positionWorld),o.v3.positionWorld.copy(U.positionWorld),o.v1.positionScreen.copy(w.positionScreen),o.v2.positionScreen.copy(P.positionScreen),o.v3.positionScreen.copy(U.positionScreen),o.normalWorld.copy(r.normalWorld),o.centroidWorld.copy(r.centroidWorld),o.centroidScreen.copy(r.centroidScreen),o.z=o.centroidScreen.z,o.meshMaterials=L,o.faceMaterials=B.materials,o.overdraw=C,M.geometry.uvs[x]&&(o.uvs[0]=M.geometry.uvs[x][1],o.uvs[1]=M.geometry.uvs[x][2],o.uvs[2]=M.geometry.uvs[x][3]),N.push(o),s++))}else if(M instanceof THREE.Line)for(y.multiply(g,A),V=M.geometry.vertices,B=V[0],B.positionScreen.copy(B.position),y.multiplyVector4(B.positionScreen),x=1,b=V.length;x<b;x++)H=V[x],H.positionScreen.copy(H.position),y.multiplyVector4(H.positionScreen),w=V[x-1],T.copy(H.positionScreen),_.copy(w.positionScreen),t(T,_)&&(T.multiplyScalar(1/T.w),_.multiplyScalar(1/_.w),a=d[h]=d[h]||new THREE.RenderableLine,a.v1.positionScreen.copy(T),a.v2.positionScreen.copy(_),a.z=Math.max(T.z,_.z),a.materials=M.materials,N.push(a),h++);else M instanceof THREE.Particle&&(v.set(M.position.x,M.position.y,M.position.z,1),
g.multiplyVector4(v),v.z/=v.w,v.z>0&&v.z<1&&(l=p[c]=p[c]||new THREE.RenderableParticle,l.x=v.x/v.w,l.y=v.y/v.w,l.z=v.z,l.rotation=M.rotation.z,l.scale.x=M.scale.x*Math.abs(l.x-(v.x+n.projectionMatrix.n11)/(v.w+n.projectionMatrix.n14)),l.scale.y=M.scale.y*Math.abs(l.y-(v.y+n.projectionMatrix.n22)/(v.w+n.projectionMatrix.n24)),l.materials=M.materials,N.push(l),c++));return E&&N.sort(e),N},this.unprojectVector=function(e,t){var i=t.matrixWorld.clone();return i.multiplySelf(THREE.Matrix4.makeInvert(t.projectionMatrix)),i.multiplyVector3(e),e}},THREE.DOMRenderer=function(){THREE.Renderer.call(this);var e,t,i,n,r=null,o=new THREE.Projector;this.domElement=document.createElement("div"),this.setSize=function(r,o){e=r,t=o,i=e/2,n=t/2},this.render=function(e,t){var s,a,h,l,c,f,E,u;for(r=o.projectScene(e,t),s=0,a=r.length;s<a;s++)if(c=r[s],c instanceof THREE.RenderableParticle)for(E=c.x*i+i,u=c.y*n+n,h=0,l=c.material.length;h<l;h++)f=c.material[h],f instanceof THREE.ParticleDOMMaterial&&(f=f.domElement,f.style.left=E+"px",f.style.top=u+"px")}},THREE.CanvasRenderer=function(){function e(e){P!=e&&(z.globalAlpha=P=e)}function t(e){if(U!=e){switch(e){case THREE.NormalBlending:z.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:z.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:z.globalCompositeOperation="darker"}U=e}}var i,n,r,o,s,a,h,l,c,f,E,u,d,p,m,v,g,y,R,T,_,x,b,H,w,S,M,A,L=null,C=new THREE.Projector,F=document.createElement("canvas"),z=F.getContext("2d"),V=new THREE.Color(0),B=0,P=1,U=0,N=null,D=null,I=1,k=new THREE.Color,W=new THREE.Color,G=new THREE.Color,j=new THREE.Color,O=new THREE.Color,X=new THREE.Rectangle,Y=new THREE.Rectangle,q=new THREE.Rectangle,K=!1,Z=new THREE.Color,Q=new THREE.Color,J=new THREE.Color,$=new THREE.Color,ee=2*Math.PI,te=new THREE.Vector3,ie=16;b=document.createElement("canvas"),b.width=b.height=2,H=b.getContext("2d"),H.fillStyle="rgba(0,0,0,1)",H.fillRect(0,0,2,2),w=H.getImageData(0,0,2,2),S=w.data,M=document.createElement("canvas"),M.width=M.height=ie,A=M.getContext("2d"),A.translate(-ie/2,-ie/2),A.scale(ie,ie),ie--,this.domElement=F,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.setSize=function(e,t){i=e,n=t,r=i/2,o=n/2,F.width=i,F.height=n,X.set(-r,-o,r,o),P=1,U=0,D=N=null,I=1},this.setClearColor=function(e,t){V=e,B=t,Y.set(-r,-o,r,o),z.setTransform(1,0,0,-1,r,o),this.clear()},this.setClearColorHex=function(e,t){V.setHex(e),B=t,Y.set(-r,-o,r,o),z.setTransform(1,0,0,-1,r,o),this.clear()},this.clear=function(){z.setTransform(1,0,0,-1,r,o),Y.isEmpty()||(Y.inflate(1),Y.minSelf(X),0==V.hex&&0==B?z.clearRect(Y.getX(),Y.getY(),Y.getWidth(),Y.getHeight()):(t(THREE.NormalBlending),e(1),z.fillStyle="rgba("+Math.floor(255*V.r)+","+Math.floor(255*V.g)+","+Math.floor(255*V.b)+","+B+")",z.fillRect(Y.getX(),Y.getY(),Y.getWidth(),Y.getHeight())),Y.empty())},this.render=function(i,n){function F(e){var t,i,n,r=e.lights;for(Q.setRGB(0,0,0),J.setRGB(0,0,0),$.setRGB(0,0,0),e=0,t=r.length;e<t;e++)i=r[e],n=i.color,i instanceof THREE.AmbientLight?(Q.r+=n.r,Q.g+=n.g,Q.b+=n.b):i instanceof THREE.DirectionalLight?(J.r+=n.r,J.g+=n.g,J.b+=n.b):i instanceof THREE.PointLight&&($.r+=n.r,$.g+=n.g,$.b+=n.b)}function V(e,t,i,n){var r,o,s,a,h=e.lights;for(e=0,r=h.length;e<r;e++)o=h[e],s=o.color,a=o.intensity,o instanceof THREE.DirectionalLight?(o=i.dot(o.position)*a,o>0&&(n.r+=s.r*o,n.g+=s.g*o,n.b+=s.b*o)):o instanceof THREE.PointLight&&(te.sub(o.position,t),te.normalize(),o=i.dot(te)*a,o>0&&(n.r+=s.r*o,n.g+=s.g*o,n.b+=s.b*o))}function B(i,n,s){if(0!=s.opacity){e(s.opacity),t(s.blending);var a,h,l,c,f,E;s instanceof THREE.ParticleBasicMaterial?s.map&&(c=s.map.image,f=c.width>>1,E=c.height>>1,h=n.scale.x*r,l=n.scale.y*o,s=h*f,a=l*E,q.set(i.x-s,i.y-a,i.x+s,i.y+a),X.instersects(q)&&(z.save(),z.translate(i.x,i.y),z.rotate(-n.rotation),z.scale(h,-l),z.translate(-f,-E),z.drawImage(c,0,0),z.restore())):s instanceof THREE.ParticleCircleMaterial&&(K?(Z.r=Q.r+J.r+$.r,Z.g=Q.g+J.g+$.g,Z.b=Q.b+J.b+$.b,k.r=s.color.r*Z.r,k.g=s.color.g*Z.g,k.b=s.color.b*Z.b,k.updateStyleString()):k.__styleString=s.color.__styleString,s=n.scale.x*r,a=n.scale.y*o,q.set(i.x-s,i.y-a,i.x+s,i.y+a),X.instersects(q)&&(h=k.__styleString,D!=h&&(z.fillStyle=D=h),z.save(),z.translate(i.x,i.y),z.rotate(-n.rotation),z.scale(s,a),z.beginPath(),z.arc(0,0,1,0,ee,!0),z.closePath(),z.fill(),z.restore()))}}function P(i,n,r,o){0!=o.opacity&&(e(o.opacity),t(o.blending),z.beginPath(),z.moveTo(i.positionScreen.x,i.positionScreen.y),z.lineTo(n.positionScreen.x,n.positionScreen.y),z.closePath(),o instanceof THREE.LineBasicMaterial&&(k.__styleString=o.color.__styleString,i=o.linewidth,I!=i&&(z.lineWidth=I=i),i=k.__styleString,N!=i&&(z.strokeStyle=N=i),z.stroke(),q.inflate(2*o.linewidth)))}function U(i,r,o,s,a,h){0!=a.opacity&&(e(a.opacity),t(a.blending),l=i.positionScreen.x,c=i.positionScreen.y,f=r.positionScreen.x,E=r.positionScreen.y,u=o.positionScreen.x,d=o.positionScreen.y,z.beginPath(),z.moveTo(l,c),z.lineTo(f,E),z.lineTo(u,d),z.lineTo(l,c),z.closePath(),a instanceof THREE.MeshBasicMaterial?a.map?a.map.mapping instanceof THREE.UVMapping&&re(l,c,f,E,u,d,a.map.image,s.uvs[0].u,s.uvs[0].v,s.uvs[1].u,s.uvs[1].v,s.uvs[2].u,s.uvs[2].v):a.envMap?a.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(i=n.matrixWorldInverse,te.copy(s.vertexNormalsWorld[0]),g=.5*(te.x*i.n11+te.y*i.n12+te.z*i.n13)+.5,y=.5*-(te.x*i.n21+te.y*i.n22+te.z*i.n23)+.5,te.copy(s.vertexNormalsWorld[1]),R=.5*(te.x*i.n11+te.y*i.n12+te.z*i.n13)+.5,T=.5*-(te.x*i.n21+te.y*i.n22+te.z*i.n23)+.5,te.copy(s.vertexNormalsWorld[2]),_=.5*(te.x*i.n11+te.y*i.n12+te.z*i.n13)+.5,x=.5*-(te.x*i.n21+te.y*i.n22+te.z*i.n23)+.5,re(l,c,f,E,u,d,a.envMap.image,g,y,R,T,_,x)):a.wireframe?ie(a.color.__styleString,a.wireframeLinewidth):ne(a.color.__styleString):a instanceof THREE.MeshLambertMaterial?(a.map&&!a.wireframe&&(a.map.mapping instanceof THREE.UVMapping&&re(l,c,f,E,u,d,a.map.image,s.uvs[0].u,s.uvs[0].v,s.uvs[1].u,s.uvs[1].v,s.uvs[2].u,s.uvs[2].v),t(THREE.SubtractiveBlending)),K?a.wireframe||a.shading!=THREE.SmoothShading||3!=s.vertexNormalsWorld.length?(Z.r=Q.r,Z.g=Q.g,Z.b=Q.b,V(h,s.centroidWorld,s.normalWorld,Z),k.r=a.color.r*Z.r,k.g=a.color.g*Z.g,k.b=a.color.b*Z.b,k.updateStyleString(),a.wireframe?ie(k.__styleString,a.wireframeLinewidth):ne(k.__styleString)):(W.r=G.r=j.r=Q.r,W.g=G.g=j.g=Q.g,W.b=G.b=j.b=Q.b,V(h,s.v1.positionWorld,s.vertexNormalsWorld[0],W),V(h,s.v2.positionWorld,s.vertexNormalsWorld[1],G),V(h,s.v3.positionWorld,s.vertexNormalsWorld[2],j),O.r=.5*(G.r+j.r),O.g=.5*(G.g+j.g),O.b=.5*(G.b+j.b),v=oe(W,G,j,O),re(l,c,f,E,u,d,v,0,0,1,0,0,1)):a.wireframe?ie(a.color.__styleString,a.wireframeLinewidth):ne(a.color.__styleString)):a instanceof THREE.MeshDepthMaterial?(p=n.near,m=n.far,W.r=W.g=W.b=1-se(i.positionScreen.z,p,m),G.r=G.g=G.b=1-se(r.positionScreen.z,p,m),j.r=j.g=j.b=1-se(o.positionScreen.z,p,m),O.r=.5*(G.r+j.r),O.g=.5*(G.g+j.g),O.b=.5*(G.b+j.b),v=oe(W,G,j,O),re(l,c,f,E,u,d,v,0,0,1,0,0,1)):a instanceof THREE.MeshNormalMaterial&&(k.r=ae(s.normalWorld.x),k.g=ae(s.normalWorld.y),k.b=ae(s.normalWorld.z),k.updateStyleString(),a.wireframe?ie(k.__styleString,a.wireframeLinewidth):ne(k.__styleString)))}function ie(e,t){N!=e&&(z.strokeStyle=N=e),I!=t&&(z.lineWidth=I=t),z.stroke(),q.inflate(2*t)}function ne(e){D!=e&&(z.fillStyle=D=e),z.fill()}function re(e,t,i,n,r,o,s,a,h,l,c,f,E){var u,d;u=s.width-1,d=s.height-1,a*=u,h*=d,l*=u,c*=d,f*=u,E*=d,i-=e,n-=t,r-=e,o-=t,l-=a,c-=h,f-=a,E-=h,u=l*E-f*c,0!=u&&(d=1/u,u=(E*i-c*r)*d,c=(E*n-c*o)*d,i=(l*r-f*i)*d,n=(l*o-f*n)*d,e=e-u*a-i*h,t=t-c*a-n*h,z.save(),z.transform(u,c,i,n,e,t),z.clip(),z.drawImage(s,0,0),z.restore())}function oe(e,t,i,n){var r=~~(255*e.r),o=~~(255*e.g);e=~~(255*e.b);var s=~~(255*t.r),a=~~(255*t.g);t=~~(255*t.b);var h=~~(255*i.r),l=~~(255*i.g);i=~~(255*i.b);var c=~~(255*n.r),f=~~(255*n.g);return n=~~(255*n.b),S[0]=r<0?0:r>255?255:r,S[1]=o<0?0:o>255?255:o,S[2]=e<0?0:e>255?255:e,S[4]=s<0?0:s>255?255:s,S[5]=a<0?0:a>255?255:a,S[6]=t<0?0:t>255?255:t,S[8]=h<0?0:h>255?255:h,S[9]=l<0?0:l>255?255:l,S[10]=i<0?0:i>255?255:i,S[12]=c<0?0:c>255?255:c,S[13]=f<0?0:f>255?255:f,S[14]=n<0?0:n>255?255:n,H.putImageData(w,0,0),A.drawImage(b,0,0),M}function se(e,t,i){return e=(e-t)/(i-t),e*e*(3-2*e)}function ae(e){return e=.5*(e+1),e<0?0:e>1?1:e}function he(e,t){var i=t.x-e.x,n=t.y-e.y,r=1/Math.sqrt(i*i+n*n);i*=r,n*=r,t.x+=i,t.y+=n,e.x-=i,e.y-=n}var le,ce,fe,Ee,ue,de,pe,me;for(this.autoClear?this.clear():z.setTransform(1,0,0,-1,r,o),L=C.projectScene(i,n,this.sortElements),(K=i.lights.length>0)&&F(i),le=0,ce=L.length;le<ce;le++){if(fe=L[le],q.empty(),fe instanceof THREE.RenderableParticle)for(s=fe,s.x*=r,s.y*=o,Ee=0,ue=fe.materials.length;Ee<ue;Ee++)B(s,fe,fe.materials[Ee],i);else if(fe instanceof THREE.RenderableLine){if(s=fe.v1,a=fe.v2,s.positionScreen.x*=r,s.positionScreen.y*=o,a.positionScreen.x*=r,a.positionScreen.y*=o,q.addPoint(s.positionScreen.x,s.positionScreen.y),q.addPoint(a.positionScreen.x,a.positionScreen.y),X.instersects(q))for(Ee=0,ue=fe.materials.length;Ee<ue;)P(s,a,fe,fe.materials[Ee++],i)}else if(fe instanceof THREE.RenderableFace3&&(s=fe.v1,a=fe.v2,h=fe.v3,s.positionScreen.x*=r,s.positionScreen.y*=o,a.positionScreen.x*=r,a.positionScreen.y*=o,h.positionScreen.x*=r,h.positionScreen.y*=o,fe.overdraw&&(he(s.positionScreen,a.positionScreen),he(a.positionScreen,h.positionScreen),he(h.positionScreen,s.positionScreen)),q.add3Points(s.positionScreen.x,s.positionScreen.y,a.positionScreen.x,a.positionScreen.y,h.positionScreen.x,h.positionScreen.y),X.instersects(q)))for(Ee=0,ue=fe.meshMaterials.length;Ee<ue;)if(me=fe.meshMaterials[Ee++],me instanceof THREE.MeshFaceMaterial)for(de=0,pe=fe.faceMaterials.length;de<pe;)(me=fe.faceMaterials[de++])&&U(s,a,h,fe,me,i);else U(s,a,h,fe,me,i);Y.addRectangle(q)}z.setTransform(1,0,0,1,0,0)}},THREE.SVGRenderer=function(){function e(e,t,i){var n,r,o,s;for(n=0,r=e.lights.length;n<r;n++)o=e.lights[n],o instanceof THREE.DirectionalLight?(s=t.normalWorld.dot(o.position)*o.intensity,s>0&&(i.r+=o.color.r*s,i.g+=o.color.g*s,i.b+=o.color.b*s)):o instanceof THREE.PointLight&&(A.sub(o.position,t.centroidWorld),A.normalize(),s=t.normalWorld.dot(A)*o.intensity,s>0&&(i.r+=o.color.r*s,i.g+=o.color.g*s,i.b+=o.color.b*s))}function t(t,i,o,s,a,h){d=n(p++),d.setAttribute("d","M "+t.positionScreen.x+" "+t.positionScreen.y+" L "+i.positionScreen.x+" "+i.positionScreen.y+" L "+o.positionScreen.x+","+o.positionScreen.y+"z"),a instanceof THREE.MeshBasicMaterial?b.__styleString=a.color.__styleString:a instanceof THREE.MeshLambertMaterial?x?(H.r=w.r,H.g=w.g,H.b=w.b,e(h,s,H),b.r=a.color.r*H.r,b.g=a.color.g*H.g,b.b=a.color.b*H.b,b.updateStyleString()):b.__styleString=a.color.__styleString:a instanceof THREE.MeshDepthMaterial?(u=1-a.__2near/(a.__farPlusNear-s.z*a.__farMinusNear),b.setRGB(u,u,u)):a instanceof THREE.MeshNormalMaterial&&b.setRGB(r(s.normalWorld.x),r(s.normalWorld.y),r(s.normalWorld.z)),a.wireframe?d.setAttribute("style","fill: none; stroke: "+b.__styleString+"; stroke-width: "+a.wireframeLinewidth+"; stroke-opacity: "+a.opacity+"; stroke-linecap: "+a.wireframeLinecap+"; stroke-linejoin: "+a.wireframeLinejoin):d.setAttribute("style","fill: "+b.__styleString+"; fill-opacity: "+a.opacity),R.appendChild(d)}function i(t,i,o,s,a,h,l){d=n(p++),d.setAttribute("d","M "+t.positionScreen.x+" "+t.positionScreen.y+" L "+i.positionScreen.x+" "+i.positionScreen.y+" L "+o.positionScreen.x+","+o.positionScreen.y+" L "+s.positionScreen.x+","+s.positionScreen.y+"z"),h instanceof THREE.MeshBasicMaterial?b.__styleString=h.color.__styleString:h instanceof THREE.MeshLambertMaterial?x?(H.r=w.r,H.g=w.g,H.b=w.b,e(l,a,H),b.r=h.color.r*H.r,b.g=h.color.g*H.g,b.b=h.color.b*H.b,b.updateStyleString()):b.__styleString=h.color.__styleString:h instanceof THREE.MeshDepthMaterial?(u=1-h.__2near/(h.__farPlusNear-a.z*h.__farMinusNear),b.setRGB(u,u,u)):h instanceof THREE.MeshNormalMaterial&&b.setRGB(r(a.normalWorld.x),r(a.normalWorld.y),r(a.normalWorld.z)),h.wireframe?d.setAttribute("style","fill: none; stroke: "+b.__styleString+"; stroke-width: "+h.wireframeLinewidth+"; stroke-opacity: "+h.opacity+"; stroke-linecap: "+h.wireframeLinecap+"; stroke-linejoin: "+h.wireframeLinejoin):d.setAttribute("style","fill: "+b.__styleString+"; fill-opacity: "+h.opacity),R.appendChild(d)}function n(e){return null==L[e]&&(L[e]=document.createElementNS("http://www.w3.org/2000/svg","path"),0==z&&L[e].setAttribute("shape-rendering","crispEdges")),L[e]}function r(e){return e<0?Math.min(.5*(1+e),.5):.5+Math.min(.5*e,.5)}var o,s,a,h,l,c,f,E,u,d,p,m,v,g=null,y=new THREE.Projector,R=document.createElementNS("http://www.w3.org/2000/svg","svg"),T=new THREE.Rectangle,_=new THREE.Rectangle,x=!1,b=new THREE.Color(16777215),H=new THREE.Color(16777215),w=new THREE.Color(0),S=new THREE.Color(0),M=new THREE.Color(0),A=new THREE.Vector3,L=[],C=[],F=[],z=1;this.domElement=R,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.setQuality=function(e){switch(e){case"high":z=1;break;case"low":z=0}},this.setSize=function(e,t){o=e,s=t,a=o/2,h=s/2,R.setAttribute("viewBox",-a+" "+-h+" "+o+" "+s),R.setAttribute("width",o),R.setAttribute("height",s),T.set(-a,-h,a,h)},this.clear=function(){for(;R.childNodes.length>0;)R.removeChild(R.childNodes[0])},this.render=function(e,n){var r,o,s,u,A,L,V,B;if(this.autoClear&&this.clear(),g=y.projectScene(e,n,this.sortElements),v=m=p=0,x=e.lights.length>0)for(V=e.lights,w.setRGB(0,0,0),S.setRGB(0,0,0),M.setRGB(0,0,0),r=0,o=V.length;r<o;r++)s=V[r],u=s.color,s instanceof THREE.AmbientLight?(w.r+=u.r,w.g+=u.g,w.b+=u.b):s instanceof THREE.DirectionalLight?(S.r+=u.r,S.g+=u.g,S.b+=u.b):s instanceof THREE.PointLight&&(M.r+=u.r,M.g+=u.g,M.b+=u.b);for(r=0,o=g.length;r<o;r++)if(V=g[r],_.empty(),V instanceof THREE.RenderableParticle){for(l=V,l.x*=a,l.y*=-h,s=0,u=V.materials.length;s<u;s++)if(B=V.materials[s]){A=l,L=V;var P=m++;null==C[P]&&(C[P]=document.createElementNS("http://www.w3.org/2000/svg","circle"),0==z&&C[P].setAttribute("shape-rendering","crispEdges")),d=C[P],d.setAttribute("cx",A.x),d.setAttribute("cy",A.y),d.setAttribute("r",L.scale.x*a),B instanceof THREE.ParticleCircleMaterial&&(x?(H.r=w.r+S.r+M.r,H.g=w.g+S.g+M.g,H.b=w.b+S.b+M.b,b.r=B.color.r*H.r,b.g=B.color.g*H.g,b.b=B.color.b*H.b,b.updateStyleString()):b=B.color,d.setAttribute("style","fill: "+b.__styleString)),R.appendChild(d)}}else if(V instanceof THREE.RenderableLine){if(l=V.v1,c=V.v2,l.positionScreen.x*=a,l.positionScreen.y*=-h,c.positionScreen.x*=a,c.positionScreen.y*=-h,_.addPoint(l.positionScreen.x,l.positionScreen.y),_.addPoint(c.positionScreen.x,c.positionScreen.y),T.instersects(_))for(s=0,u=V.materials.length;s<u;)(B=V.materials[s++])&&(A=l,L=c,P=v++,null==F[P]&&(F[P]=document.createElementNS("http://www.w3.org/2000/svg","line"),0==z&&F[P].setAttribute("shape-rendering","crispEdges")),d=F[P],d.setAttribute("x1",A.positionScreen.x),d.setAttribute("y1",A.positionScreen.y),d.setAttribute("x2",L.positionScreen.x),d.setAttribute("y2",L.positionScreen.y),B instanceof THREE.LineBasicMaterial&&(b.__styleString=B.color.__styleString,d.setAttribute("style","fill: none; stroke: "+b.__styleString+"; stroke-width: "+B.linewidth+"; stroke-opacity: "+B.opacity+"; stroke-linecap: "+B.linecap+"; stroke-linejoin: "+B.linejoin),R.appendChild(d)))}else if(V instanceof THREE.RenderableFace3){if(l=V.v1,c=V.v2,f=V.v3,l.positionScreen.x*=a,l.positionScreen.y*=-h,c.positionScreen.x*=a,c.positionScreen.y*=-h,f.positionScreen.x*=a,f.positionScreen.y*=-h,_.addPoint(l.positionScreen.x,l.positionScreen.y),_.addPoint(c.positionScreen.x,c.positionScreen.y),_.addPoint(f.positionScreen.x,f.positionScreen.y),T.instersects(_))for(s=0,u=V.meshMaterials.length;s<u;)if(B=V.meshMaterials[s++],B instanceof THREE.MeshFaceMaterial)for(A=0,L=V.faceMaterials.length;A<L;)(B=V.faceMaterials[A++])&&t(l,c,f,V,B,e);else B&&t(l,c,f,V,B,e)}else if(V instanceof THREE.RenderableFace4&&(l=V.v1,c=V.v2,f=V.v3,E=V.v4,l.positionScreen.x*=a,l.positionScreen.y*=-h,c.positionScreen.x*=a,c.positionScreen.y*=-h,f.positionScreen.x*=a,f.positionScreen.y*=-h,E.positionScreen.x*=a,E.positionScreen.y*=-h,_.addPoint(l.positionScreen.x,l.positionScreen.y),_.addPoint(c.positionScreen.x,c.positionScreen.y),_.addPoint(f.positionScreen.x,f.positionScreen.y),_.addPoint(E.positionScreen.x,E.positionScreen.y),T.instersects(_)))for(s=0,u=V.meshMaterials.length;s<u;)if(B=V.meshMaterials[s++],B instanceof THREE.MeshFaceMaterial)for(A=0,L=V.faceMaterials.length;A<L;)(B=V.faceMaterials[A++])&&i(l,c,f,E,V,B,e);else B&&i(l,c,f,E,V,B,e)}},THREE.WebGLRenderer=function(e){function t(e,t,i){var n,r,o,s=e.vertices,a=s.length,h=e.colors,l=h.length,c=e.__vertexArray,f=e.__colorArray,E=e.__sortArray,u=e.__dirtyVertices,d=e.__dirtyColors;if(i.sortParticles){for(L.multiplySelf(i.matrixWorld),n=0;n<a;n++)r=s[n].position,z.copy(r),L.multiplyVector3(z),E[n]=[z.z,n];for(E.sort(function(e,t){return t[0]-e[0]}),n=0;n<a;n++)r=s[E[n][1]].position,o=3*n,c[o]=r.x,c[o+1]=r.y,c[o+2]=r.z;for(n=0;n<l;n++)o=3*n,color=h[E[n][1]],f[o]=color.r,f[o+1]=color.g,f[o+2]=color.b}else{if(u)for(n=0;n<a;n++)r=s[n].position,o=3*n,c[o]=r.x,c[o+1]=r.y,c[o+2]=r.z;if(d)for(n=0;n<l;n++)color=h[n],o=3*n,f[o]=color.r,f[o+1]=color.g,f[o+2]=color.b}(u||i.sortParticles)&&(R.bindBuffer(R.ARRAY_BUFFER,e.__webGLVertexBuffer),R.bufferData(R.ARRAY_BUFFER,c,t)),(d||i.sortParticles)&&(R.bindBuffer(R.ARRAY_BUFFER,e.__webGLColorBuffer),R.bufferData(R.ARRAY_BUFFER,f,t))}function i(e,t){e.fragmentShader=t.fragmentShader,e.vertexShader=t.vertexShader,e.uniforms=Uniforms.clone(t.uniforms)}function n(e,t,i,n,r){n.program||b.initMaterial(n,t,i);var o=n.program,s=o.uniforms,a=n.uniforms;if(o!=_&&(R.useProgram(o),_=o,R.uniformMatrix4fv(s.projectionMatrix,!1,C)),i&&(n instanceof THREE.MeshBasicMaterial||n instanceof THREE.MeshLambertMaterial||n instanceof THREE.MeshPhongMaterial||n instanceof THREE.LineBasicMaterial||n instanceof THREE.ParticleBasicMaterial)&&(a.fogColor.value.setHex(i.color.hex),i instanceof THREE.Fog?(a.fogNear.value=i.near,a.fogFar.value=i.far):i instanceof THREE.FogExp2&&(a.fogDensity.value=i.density)),n instanceof THREE.MeshPhongMaterial||n instanceof THREE.MeshLambertMaterial){var h,l,c,f,E,u=0,d=0,p=0,m=b.lights,v=m.directional.colors,g=m.directional.positions,T=m.point.colors,x=m.point.positions,H=0,w=0;for(i=l=l=0,h=t.length;i<h;i++)l=t[i],c=l.color,f=l.position,E=l.intensity,l instanceof THREE.AmbientLight?(u+=c.r,d+=c.g,p+=c.b):l instanceof THREE.DirectionalLight?(l=3*H,v[l]=c.r*E,v[l+1]=c.g*E,v[l+2]=c.b*E,g[l]=f.x,g[l+1]=f.y,g[l+2]=f.z,H+=1):l instanceof THREE.PointLight&&(l=3*w,T[l]=c.r*E,T[l+1]=c.g*E,T[l+2]=c.b*E,x[l]=f.x,x[l+1]=f.y,x[l+2]=f.z,w+=1);for(i=3*H;i<v.length;i++)v[i]=0;for(i=3*w;i<T.length;i++)T[i]=0;m.point.length=w,m.directional.length=H,m.ambient[0]=u,m.ambient[1]=d,m.ambient[2]=p,t=b.lights,a.enableLighting.value=t.directional.length+t.point.length,a.ambientLightColor.value=t.ambient,a.directionalLightColor.value=t.directional.colors,a.directionalLightDirection.value=t.directional.positions,a.pointLightColor.value=t.point.colors,a.pointLightPosition.value=t.point.positions}(n instanceof THREE.MeshBasicMaterial||n instanceof THREE.MeshLambertMaterial||n instanceof THREE.MeshPhongMaterial)&&(a.diffuse.value.setRGB(n.color.r*n.opacity,n.color.g*n.opacity,n.color.b*n.opacity),a.opacity.value=n.opacity,a.map.texture=n.map,a.lightMap.texture=n.lightMap,a.envMap.texture=n.envMap,a.reflectivity.value=n.reflectivity,a.refractionRatio.value=n.refractionRatio,a.combine.value=n.combine,a.useRefract.value=n.envMap&&n.envMap.mapping instanceof THREE.CubeRefractionMapping),n instanceof THREE.LineBasicMaterial?(a.diffuse.value.setRGB(n.color.r*n.opacity,n.color.g*n.opacity,n.color.b*n.opacity),a.opacity.value=n.opacity):n instanceof THREE.ParticleBasicMaterial?(a.psColor.value.setRGB(n.color.r*n.opacity,n.color.g*n.opacity,n.color.b*n.opacity),a.opacity.value=n.opacity,a.size.value=n.size,a.map.texture=n.map):n instanceof THREE.MeshPhongMaterial?(a.ambient.value.setRGB(n.ambient.r,n.ambient.g,n.ambient.b),a.specular.value.setRGB(n.specular.r,n.specular.g,n.specular.b),a.shininess.value=n.shininess):n instanceof THREE.MeshDepthMaterial?(a.mNear.value=e.near,a.mFar.value=e.far,a.opacity.value=n.opacity):n instanceof THREE.MeshNormalMaterial&&(a.opacity.value=n.opacity);for(var S in a)if(u=o.uniforms[S])if(i=a[S],h=i.type,t=i.value,"i"==h)R.uniform1i(u,t);else if("f"==h)R.uniform1f(u,t);else if("fv1"==h)R.uniform1fv(u,t);else if("fv"==h)R.uniform3fv(u,t);else if("v2"==h)R.uniform2f(u,t.x,t.y);else if("v3"==h)R.uniform3f(u,t.x,t.y,t.z);else if("c"==h)R.uniform3f(u,t.r,t.g,t.b);else if("t"==h&&(R.uniform1i(u,t),i=i.texture))if(i.image instanceof Array&&6==i.image.length){if(6==i.image.length){if(i.needsUpdate){for(i.image.__webGLTextureCube||(i.image.__webGLTextureCube=R.createTexture()),R.bindTexture(R.TEXTURE_CUBE_MAP,i.image.__webGLTextureCube),R.texParameteri(R.TEXTURE_CUBE_MAP,R.TEXTURE_WRAP_S,R.CLAMP_TO_EDGE),R.texParameteri(R.TEXTURE_CUBE_MAP,R.TEXTURE_WRAP_T,R.CLAMP_TO_EDGE),R.texParameteri(R.TEXTURE_CUBE_MAP,R.TEXTURE_MAG_FILTER,R.LINEAR),R.texParameteri(R.TEXTURE_CUBE_MAP,R.TEXTURE_MIN_FILTER,R.LINEAR_MIPMAP_LINEAR),h=0;h<6;++h)R.texImage2D(R.TEXTURE_CUBE_MAP_POSITIVE_X+h,0,R.RGBA,R.RGBA,R.UNSIGNED_BYTE,i.image[h]);R.generateMipmap(R.TEXTURE_CUBE_MAP),R.bindTexture(R.TEXTURE_CUBE_MAP,null),i.needsUpdate=!1}R.activeTexture(R.TEXTURE0+t),R.bindTexture(R.TEXTURE_CUBE_MAP,i.image.__webGLTextureCube)}}else i.needsUpdate&&(i.__wasSetOnce?(R.bindTexture(R.TEXTURE_2D,i.__webGLTexture),R.texSubImage2D(R.TEXTURE_2D,0,0,0,R.RGBA,R.UNSIGNED_BYTE,i.image),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_WRAP_S,y(i.wrapS)),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_WRAP_T,y(i.wrapT)),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_MAG_FILTER,y(i.magFilter)),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_MIN_FILTER,y(i.minFilter)),R.generateMipmap(R.TEXTURE_2D),R.bindTexture(R.TEXTURE_2D,null)):(i.__webGLTexture=R.createTexture(),R.bindTexture(R.TEXTURE_2D,i.__webGLTexture),R.texImage2D(R.TEXTURE_2D,0,R.RGBA,R.RGBA,R.UNSIGNED_BYTE,i.image),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_WRAP_S,y(i.wrapS)),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_WRAP_T,y(i.wrapT)),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_MAG_FILTER,y(i.magFilter)),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_MIN_FILTER,y(i.minFilter)),R.generateMipmap(R.TEXTURE_2D),R.bindTexture(R.TEXTURE_2D,null),i.__wasSetOnce=!0),i.needsUpdate=!1),R.activeTexture(R.TEXTURE0+t),R.bindTexture(R.TEXTURE_2D,i.__webGLTexture);return R.uniformMatrix4fv(s.modelViewMatrix,!1,r._modelViewMatrixArray),R.uniformMatrix3fv(s.normalMatrix,!1,r._normalMatrixArray),(n instanceof THREE.MeshShaderMaterial||n instanceof THREE.MeshPhongMaterial||n.envMap)&&R.uniform3f(s.cameraPosition,e.position.x,e.position.y,e.position.z),(n instanceof THREE.MeshShaderMaterial||n.envMap||n.skinning)&&R.uniformMatrix4fv(s.objectMatrix,!1,r._objectMatrixArray),(n instanceof THREE.MeshPhongMaterial||n instanceof THREE.MeshLambertMaterial||n instanceof THREE.MeshShaderMaterial||n.skinning)&&R.uniformMatrix4fv(s.viewMatrix,!1,F),n.skinning&&(R.uniformMatrix4fv(s.cameraInverseMatrix,!1,F),R.uniformMatrix4fv(s.boneGlobalMatrices,!1,r.boneMatrices)),o}function r(e,t,i,r,o,s){e=n(e,t,i,r,s).attributes,R.bindBuffer(R.ARRAY_BUFFER,o.__webGLVertexBuffer),R.vertexAttribPointer(e.position,3,R.FLOAT,!1,0,0),e.color>=0&&(R.bindBuffer(R.ARRAY_BUFFER,o.__webGLColorBuffer),R.vertexAttribPointer(e.color,3,R.FLOAT,!1,0,0)),e.normal>=0&&(R.bindBuffer(R.ARRAY_BUFFER,o.__webGLNormalBuffer),R.vertexAttribPointer(e.normal,3,R.FLOAT,!1,0,0)),e.tangent>=0&&(R.bindBuffer(R.ARRAY_BUFFER,o.__webGLTangentBuffer),R.vertexAttribPointer(e.tangent,4,R.FLOAT,!1,0,0)),e.uv>=0&&(o.__webGLUVBuffer?(R.bindBuffer(R.ARRAY_BUFFER,o.__webGLUVBuffer),R.vertexAttribPointer(e.uv,2,R.FLOAT,!1,0,0),R.enableVertexAttribArray(e.uv)):R.disableVertexAttribArray(e.uv)),e.uv2>=0&&(o.__webGLUV2Buffer?(R.bindBuffer(R.ARRAY_BUFFER,o.__webGLUV2Buffer),R.vertexAttribPointer(e.uv2,2,R.FLOAT,!1,0,0),R.enableVertexAttribArray(e.uv2)):R.disableVertexAttribArray(e.uv2)),r.skinning&&e.skinVertexA>=0&&e.skinVertexB>=0&&e.skinIndex>=0&&e.skinWeight>=0&&(R.bindBuffer(R.ARRAY_BUFFER,o.__webGLSkinVertexABuffer),R.vertexAttribPointer(e.skinVertexA,4,R.FLOAT,!1,0,0),R.bindBuffer(R.ARRAY_BUFFER,o.__webGLSkinVertexBBuffer),R.vertexAttribPointer(e.skinVertexB,4,R.FLOAT,!1,0,0),R.bindBuffer(R.ARRAY_BUFFER,o.__webGLSkinIndicesBuffer),R.vertexAttribPointer(e.skinIndex,4,R.FLOAT,!1,0,0),R.bindBuffer(R.ARRAY_BUFFER,o.__webGLSkinWeightsBuffer),R.vertexAttribPointer(e.skinWeight,4,R.FLOAT,!1,0,0)),s instanceof THREE.Mesh?r.wireframe?(R.lineWidth(r.wireframeLinewidth),R.bindBuffer(R.ELEMENT_ARRAY_BUFFER,o.__webGLLineBuffer),R.drawElements(R.LINES,o.__webGLLineCount,R.UNSIGNED_SHORT,0)):(R.bindBuffer(R.ELEMENT_ARRAY_BUFFER,o.__webGLFaceBuffer),R.drawElements(R.TRIANGLES,o.__webGLFaceCount,R.UNSIGNED_SHORT,0)):s instanceof THREE.Line?(s=s.type==THREE.LineStrip?R.LINE_STRIP:R.LINES,R.lineWidth(r.linewidth),R.drawArrays(s,0,o.__webGLLineCount)):s instanceof THREE.ParticleSystem?R.drawArrays(R.POINTS,0,o.__webGLParticleCount):s instanceof THREE.Ribbon&&R.drawArrays(R.TRIANGLE_STRIP,0,o.__webGLVertexCount)}function o(e,t){e.__webGLVertexBuffer||(e.__webGLVertexBuffer=R.createBuffer()),e.__webGLNormalBuffer||(e.__webGLNormalBuffer=R.createBuffer()),e.hasPos&&(R.bindBuffer(R.ARRAY_BUFFER,e.__webGLVertexBuffer),R.bufferData(R.ARRAY_BUFFER,e.positionArray,R.DYNAMIC_DRAW),R.enableVertexAttribArray(t.attributes.position),R.vertexAttribPointer(t.attributes.position,3,R.FLOAT,!1,0,0)),e.hasNormal&&(R.bindBuffer(R.ARRAY_BUFFER,e.__webGLNormalBuffer),R.bufferData(R.ARRAY_BUFFER,e.normalArray,R.DYNAMIC_DRAW),R.enableVertexAttribArray(t.attributes.normal),R.vertexAttribPointer(t.attributes.normal,3,R.FLOAT,!1,0,0)),R.drawArrays(R.TRIANGLES,0,e.count),e.count=0}function s(e){H!=e.doubleSided&&(e.doubleSided?R.disable(R.CULL_FACE):R.enable(R.CULL_FACE),H=e.doubleSided),w!=e.flipSided&&(e.flipSided?R.frontFace(R.CW):R.frontFace(R.CCW),w=e.flipSided)}function a(e){M!=e&&(e?R.enable(R.DEPTH_TEST):R.disable(R.DEPTH_TEST),M=e)}function h(e){A[0].set(e.n41-e.n11,e.n42-e.n12,e.n43-e.n13,e.n44-e.n14),A[1].set(e.n41+e.n11,e.n42+e.n12,e.n43+e.n13,e.n44+e.n14),A[2].set(e.n41+e.n21,e.n42+e.n22,e.n43+e.n23,e.n44+e.n24),A[3].set(e.n41-e.n21,e.n42-e.n22,e.n43-e.n23,e.n44-e.n24),A[4].set(e.n41-e.n31,e.n42-e.n32,e.n43-e.n33,e.n44-e.n34),A[5].set(e.n41+e.n31,e.n42+e.n32,e.n43+e.n33,e.n44+e.n34);var t;for(e=0;e<6;e++)t=A[e],t.divideScalar(Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z))}function l(e){for(var t=e.matrixWorld,i=-e.geometry.boundingSphere.radius*Math.max(e.scale.x,Math.max(e.scale.y,e.scale.z)),n=0;n<6;n++)if(e=A[n].x*t.n14+A[n].y*t.n24+A[n].z*t.n34+A[n].w,e<=i)return!1;return!0}function c(e,t){e.list[e.count]=t,e.count+=1}function f(e){var t,i,n=e.object,r=e.opaque,o=e.transparent;for(o.count=0,e=r.count=0,t=n.materials.length;e<t;e++)i=n.materials[e],i.opacity&&i.opacity<1||i.blending!=THREE.NormalBlending?c(o,i):c(r,i)}function E(e){var t,i,n,r,o=e.object,s=e.buffer,a=e.opaque,h=e.transparent;for(h.count=0,e=a.count=0,n=o.materials.length;e<n;e++)if(t=o.materials[e],t instanceof THREE.MeshFaceMaterial)for(t=0,i=s.materials.length;t<i;t++)(r=s.materials[t])&&(r.opacity&&r.opacity<1||r.blending!=THREE.NormalBlending?c(h,r):c(a,r));else r=t,r.opacity&&r.opacity<1||r.blending!=THREE.NormalBlending?c(h,r):c(a,r)}function u(e,t){return t.z-e.z}function d(e,t,i,n,r){void 0==t[i]&&(e.push({buffer:n,object:r,opaque:{list:[],count:0},transparent:{list:[],count:0}}),t[i]=1)}function p(e,t){e._modelViewMatrix.multiplyToArray(t.matrixWorldInverse,e.matrixWorld,e._modelViewMatrixArray),THREE.Matrix4.makeInvert3x3(e._modelViewMatrix).transposeIntoArray(e._normalMatrixArray)}function m(e){if(e!=S){switch(e){case THREE.AdditiveBlending:R.blendEquation(R.FUNC_ADD),R.blendFunc(R.ONE,R.ONE);break;case THREE.SubtractiveBlending:R.blendFunc(R.DST_COLOR,R.ZERO);break;case THREE.BillboardBlending:R.blendEquation(R.FUNC_ADD),R.blendFunc(R.SRC_ALPHA,R.ONE_MINUS_SRC_ALPHA);break;case THREE.ReverseSubtractiveBlending:R.blendEquation(R.FUNC_REVERSE_SUBTRACT),R.blendFunc(R.ONE,R.ONE);break;default:R.blendEquation(R.FUNC_ADD),R.blendFunc(R.ONE,R.ONE_MINUS_SRC_ALPHA)}S=e}}function v(e,t){e&&!e.__webGLFramebuffer&&(e.__webGLFramebuffer=R.createFramebuffer(),e.__webGLRenderbuffer=R.createRenderbuffer(),e.__webGLTexture=R.createTexture(),R.bindRenderbuffer(R.RENDERBUFFER,e.__webGLRenderbuffer),R.renderbufferStorage(R.RENDERBUFFER,R.DEPTH_COMPONENT16,e.width,e.height),R.bindTexture(R.TEXTURE_2D,e.__webGLTexture),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_WRAP_S,y(e.wrapS)),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_WRAP_T,y(e.wrapT)),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_MAG_FILTER,y(e.magFilter)),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_MIN_FILTER,y(e.minFilter)),R.texImage2D(R.TEXTURE_2D,0,y(e.format),e.width,e.height,0,y(e.format),y(e.type),null),R.bindFramebuffer(R.FRAMEBUFFER,e.__webGLFramebuffer),R.framebufferTexture2D(R.FRAMEBUFFER,R.COLOR_ATTACHMENT0,R.TEXTURE_2D,e.__webGLTexture,0),R.framebufferRenderbuffer(R.FRAMEBUFFER,R.DEPTH_ATTACHMENT,R.RENDERBUFFER,e.__webGLRenderbuffer),R.bindTexture(R.TEXTURE_2D,null),R.bindRenderbuffer(R.RENDERBUFFER,null),R.bindFramebuffer(R.FRAMEBUFFER,null));var i,n,r;e?(i=e.__webGLFramebuffer,n=e.width,r=e.height):(i=null,n=T.width,r=T.height),i!=x&&(R.bindFramebuffer(R.FRAMEBUFFER,i),R.viewport(0,0,n,r),t&&R.clear(R.COLOR_BUFFER_BIT|R.DEPTH_BUFFER_BIT),x=i)}function g(e,t){var i;return"fragment"==e?i=R.createShader(R.FRAGMENT_SHADER):"vertex"==e&&(i=R.createShader(R.VERTEX_SHADER)),R.shaderSource(i,t),R.compileShader(i),R.getShaderParameter(i,R.COMPILE_STATUS)?i:(alert(R.getShaderInfoLog(i)),null)}function y(e){switch(e){case THREE.RepeatWrapping:return R.REPEAT;case THREE.ClampToEdgeWrapping:return R.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return R.MIRRORED_REPEAT;case THREE.NearestFilter:return R.NEAREST;case THREE.NearestMipMapNearestFilter:return R.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return R.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return R.LINEAR;case THREE.LinearMipMapNearestFilter:return R.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return R.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return R.BYTE;case THREE.UnsignedByteType:return R.UNSIGNED_BYTE;case THREE.ShortType:return R.SHORT;case THREE.UnsignedShortType:return R.UNSIGNED_SHORT;case THREE.IntType:return R.INT;case THREE.UnsignedShortType:return R.UNSIGNED_INT;case THREE.FloatType:return R.FLOAT;case THREE.AlphaFormat:return R.ALPHA;case THREE.RGBFormat:return R.RGB;case THREE.RGBAFormat:return R.RGBA;case THREE.LuminanceFormat:return R.LUMINANCE;case THREE.LuminanceAlphaFormat:return R.LUMINANCE_ALPHA}return 0}var R,T=document.createElement("canvas"),_=null,x=null,b=this,H=null,w=null,S=null,M=null,A=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],L=new THREE.Matrix4,C=new Float32Array(16),F=new Float32Array(16),z=new THREE.Vector4,V=!0,B=new THREE.Color(0),P=0;e&&(void 0!==e.antialias&&(V=e.antialias),void 0!==e.clearColor&&B.setHex(e.clearColor),void 0!==e.clearAlpha&&(P=e.clearAlpha)),this.domElement=T,this.autoClear=!0,this.sortObjects=!1,function(e,t,i){try{R=T.getContext("experimental-webgl",{antialias:e})}catch(e){console.log(e)}if(!R)throw"cannot create webgl context";R.clearColor(0,0,0,1),R.clearDepth(1),R.enable(R.DEPTH_TEST),R.depthFunc(R.LEQUAL),R.frontFace(R.CCW),R.cullFace(R.BACK),R.enable(R.CULL_FACE),R.enable(R.BLEND),R.blendFunc(R.ONE,R.ONE_MINUS_SRC_ALPHA),R.clearColor(t.r,t.g,t.b,i),_cullEnabled=!0}(V,B,P),this.context=R,this.lights={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[]}},this.setSize=function(e,t){T.width=e,T.height=t,R.viewport(0,0,T.width,T.height)},this.setClearColorHex=function(e,t){var i=new THREE.Color(e);R.clearColor(i.r,i.g,i.b,t)},this.setClearColor=function(e,t){
R.clearColor(e.r,e.g,e.b,t)},this.clear=function(){R.clear(R.COLOR_BUFFER_BIT|R.DEPTH_BUFFER_BIT)},this.initMaterial=function(e,t,n){var r,o;e instanceof THREE.MeshDepthMaterial?i(e,THREE.ShaderLib.depth):e instanceof THREE.MeshNormalMaterial?i(e,THREE.ShaderLib.normal):e instanceof THREE.MeshBasicMaterial?i(e,THREE.ShaderLib.basic):e instanceof THREE.MeshLambertMaterial?i(e,THREE.ShaderLib.lambert):e instanceof THREE.MeshPhongMaterial?i(e,THREE.ShaderLib.phong):e instanceof THREE.LineBasicMaterial?i(e,THREE.ShaderLib.basic):e instanceof THREE.ParticleBasicMaterial&&i(e,THREE.ShaderLib.particle_basic);var s,a,h,l;for(o=h=l=0,s=t.length;o<s;o++)a=t[o],a instanceof THREE.DirectionalLight&&h++,a instanceof THREE.PointLight&&l++;l+h<=4?t=h:(t=Math.ceil(4*h/(l+h)),l=4-t),o={directional:t,point:l},l=e.fragmentShader,t=e.vertexShader,s={fog:n,map:e.map,envMap:e.envMap,lightMap:e.lightMap,vertexColors:e.vertexColors,skinning:e.skinning,maxDirLights:o.directional,maxPointLights:o.point},n=R.createProgram(),o=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+s.maxDirLights,"#define MAX_POINT_LIGHTS "+s.maxPointLights,s.fog?"#define USE_FOG":"",s.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.lightMap?"#define USE_LIGHTMAP":"",s.vertexColors?"#define USE_COLOR":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"),s=[R.getParameter(R.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+s.maxDirLights,"#define MAX_POINT_LIGHTS "+s.maxPointLights,s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.lightMap?"#define USE_LIGHTMAP":"",s.vertexColors?"#define USE_COLOR":"",s.skinning?"#define USE_SKINNING":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nuniform mat4 cameraInverseMatrix;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec3 color;\nattribute vec2 uv;\nattribute vec2 uv2;\nattribute vec4 skinVertexA;\nattribute vec4 skinVertexB;\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n"].join("\n"),R.attachShader(n,g("fragment",o+l)),R.attachShader(n,g("vertex",s+t)),R.linkProgram(n),R.getProgramParameter(n,R.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+R.getProgramParameter(n,R.VALIDATE_STATUS)+", gl error ["+R.getError()+"]"),n.uniforms={},n.attributes={},e.program=n,n=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","cameraInverseMatrix","boneGlobalMatrices"];for(r in e.uniforms)n.push(r);for(r=e.program,l=0,t=n.length;l<t;l++)o=n[l],r.uniforms[o]=R.getUniformLocation(r,o);for(r=e.program,n=["position","normal","uv","uv2","tangent","color","skinVertexA","skinVertexB","skinIndex","skinWeight"],l=0,t=n.length;l<t;l++)o=n[l],r.attributes[o]=R.getAttribLocation(r,o);r=e.program.attributes,R.enableVertexAttribArray(r.position),r.color>=0&&R.enableVertexAttribArray(r.color),r.normal>=0&&R.enableVertexAttribArray(r.normal),r.tangent>=0&&R.enableVertexAttribArray(r.tangent),e.skinning&&r.skinVertexA>=0&&r.skinVertexB>=0&&r.skinIndex>=0&&r.skinWeight>=0&&(R.enableVertexAttribArray(r.skinVertexA),R.enableVertexAttribArray(r.skinVertexB),R.enableVertexAttribArray(r.skinIndex),R.enableVertexAttribArray(r.skinWeight))},this.render=function(e,t,i,c){var d,g,y,T,_,x,b,H,w=e.lights,S=e.fog;for(t.matrixAutoUpdate&&t.update(),t.matrixWorldInverse.flattenToArray(F),t.projectionMatrix.flattenToArray(C),L.multiply(t.projectionMatrix,t.matrixWorldInverse),h(L),THREE.AnimationHandler&&THREE.AnimationHandler.update(),e.update(void 0,!1,t),this.initWebGLObjects(e,t),v(i,void 0===c||c),this.autoClear&&this.clear(),_=e.__webGLObjects.length,c=0;c<_;c++)d=e.__webGLObjects[c],b=d.object,b.visible?b instanceof THREE.Mesh&&!l(b)?d.render=!1:(b.matrixWorld.flattenToArray(b._objectMatrixArray),p(b,t),E(d),d.render=!0,this.sortObjects&&(z.copy(b.position),L.multiplyVector3(z),d.z=z.z)):d.render=!1;for(this.sortObjects&&e.__webGLObjects.sort(u),x=e.__webGLObjectsImmediate.length,c=0;c<x;c++)d=e.__webGLObjectsImmediate[c],b=d.object,b.visible&&(b.matrixAutoUpdate&&b.matrixWorld.flattenToArray(b._objectMatrixArray),p(b,t),f(d));for(m(THREE.NormalBlending),c=0;c<_;c++)if(d=e.__webGLObjects[c],d.render)for(b=d.object,H=d.buffer,y=d.opaque,s(b),d=0;d<y.count;d++)T=y.list[d],a(T.depthTest),r(t,w,S,T,H,b);for(c=0;c<x;c++)if(d=e.__webGLObjectsImmediate[c],b=d.object,b.visible)for(y=d.opaque,s(b),d=0;d<y.count;d++)T=y.list[d],a(T.depthTest),g=n(t,w,S,T,b),b.render(function(e){o(e,g)});for(c=0;c<_;c++)if(d=e.__webGLObjects[c],d.render)for(b=d.object,H=d.buffer,y=d.transparent,s(b),d=0;d<y.count;d++)T=y.list[d],m(T.blending),a(T.depthTest),r(t,w,S,T,H,b);for(c=0;c<x;c++)if(d=e.__webGLObjectsImmediate[c],b=d.object,b.visible)for(y=d.transparent,s(b),d=0;d<y.count;d++)T=y.list[d],m(T.blending),a(T.depthTest),g=n(t,w,S,T,b),b.render(function(e){o(e,g)});i&&i.minFilter!==THREE.NearestFilter&&i.minFilter!==THREE.LinearFilter&&(R.bindTexture(R.TEXTURE_2D,i.__webGLTexture),R.generateMipmap(R.TEXTURE_2D),R.bindTexture(R.TEXTURE_2D,null))},this.initWebGLObjects=function(e,i){var n,r,o;for(e.__webGLObjects||(e.__webGLObjects=[],e.__webGLObjectsMap={},e.__webGLObjectsImmediate=[]),n=0,r=e.objects.length;n<r;n++){o=e.objects[n];var s=e,a=i,h=void 0,l=void 0,c=void 0,f=void 0;if(l=o.geometry,void 0==s.__webGLObjectsMap[o.id]&&(s.__webGLObjectsMap[o.id]={},o._modelViewMatrix=new THREE.Matrix4,o._normalMatrixArray=new Float32Array(9),o._modelViewMatrixArray=new Float32Array(16),o._objectMatrixArray=new Float32Array(16),o.matrixWorld.flattenToArray(o._objectMatrixArray)),f=s.__webGLObjectsMap[o.id],objlist=s.__webGLObjects,o instanceof THREE.Mesh){for(h in l.geometryChunks){if(c=l.geometryChunks[h],!c.__webGLVertexBuffer){a=c,a.__webGLVertexBuffer=R.createBuffer(),a.__webGLNormalBuffer=R.createBuffer(),a.__webGLTangentBuffer=R.createBuffer(),a.__webGLColorBuffer=R.createBuffer(),a.__webGLUVBuffer=R.createBuffer(),a.__webGLUV2Buffer=R.createBuffer(),a.__webGLSkinVertexABuffer=R.createBuffer(),a.__webGLSkinVertexBBuffer=R.createBuffer(),a.__webGLSkinIndicesBuffer=R.createBuffer(),a.__webGLSkinWeightsBuffer=R.createBuffer(),a.__webGLFaceBuffer=R.createBuffer(),a.__webGLLineBuffer=R.createBuffer(),a=c;var E=o,u=void 0,p=void 0,m=0,v=s=0,g=E.geometry.faces,y=a.faces;for(u=0,p=y.length;u<p;u++)fi=y[u],face=g[fi],face instanceof THREE.Face3?(m+=3,s+=1,v+=3):face instanceof THREE.Face4&&(m+=4,s+=2,v+=4);a.__vertexArray=new Float32Array(3*m),a.__normalArray=new Float32Array(3*m),a.__tangentArray=new Float32Array(4*m),a.__colorArray=new Float32Array(3*m),a.__uvArray=new Float32Array(2*m),a.__uv2Array=new Float32Array(2*m),a.__skinVertexAArray=new Float32Array(4*m),a.__skinVertexBArray=new Float32Array(4*m),a.__skinIndexArray=new Float32Array(4*m),a.__skinWeightArray=new Float32Array(4*m),a.__faceArray=new Uint16Array(3*s),a.__lineArray=new Uint16Array(2*v),p=u=a,m=void 0,g=void 0;var T=void 0,_=void 0;for(T=void 0,y=!1,m=0,g=E.materials.length;m<g;m++){if(T=E.materials[m],T instanceof THREE.MeshFaceMaterial){for(T=0,_=p.materials.length;T<_;T++)if(p.materials[T]&&void 0!=p.materials[T].shading&&p.materials[T].shading==THREE.SmoothShading){y=!0;break}}else if(T&&void 0!=T.shading&&T.shading==THREE.SmoothShading){y=!0;break}if(y)break}u.__needsSmoothNormals=y,a.__webGLFaceCount=3*s,a.__webGLLineCount=2*v,l.__dirtyVertices=!0,l.__dirtyElements=!0,l.__dirtyUvs=!0,l.__dirtyNormals=!0,l.__dirtyTangents=!0,l.__dirtyColors=!0}if(l.__dirtyVertices||l.__dirtyElements||l.__dirtyUvs||l.__dirtyNormals||l.__dirtyColors||l.__dirtyTangents){a=c,s=R.DYNAMIC_DRAW,v=void 0,u=void 0;var x=void 0,b=void 0,H=void 0,w=void 0,S=void 0;x=void 0;var M=void 0,A=void 0,L=void 0,C=void 0;M=void 0,A=void 0,L=void 0,b=void 0,M=void 0,A=void 0,L=void 0,C=void 0,M=void 0,A=void 0,L=void 0,C=void 0,M=void 0,A=void 0,L=void 0,C=void 0,M=void 0,A=void 0,L=void 0,C=void 0,M=void 0,A=void 0,L=void 0,C=void 0,b=void 0,w=void 0,H=void 0,S=void 0;var F=_=T=y=g=m=E=p=0,z=0,V=0,B=a.__vertexArray,P=a.__uvArray,U=a.__uv2Array,N=a.__normalArray,D=a.__tangentArray,I=a.__colorArray,k=a.__skinVertexAArray,W=a.__skinVertexBArray,G=a.__skinIndexArray,j=a.__skinWeightArray,O=a.__faceArray,X=a.__lineArray,Y=a.__needsSmoothNormals,q=o.geometry,K=q.__dirtyVertices,Z=q.__dirtyElements,Q=q.__dirtyUvs,J=q.__dirtyNormals,$=q.__dirtyTangents,ee=q.__dirtyColors,te=q.vertices,ie=a.faces,ne=q.faces,re=q.uvs,oe=q.uvs2,se=q.colors,ae=q.skinVerticesA,he=q.skinVerticesB,le=q.skinIndices,ce=q.skinWeights;for(v=0,u=ie.length;v<u;v++)if(x=ie[v],b=ne[x],S=re[x],x=oe[x],H=b.vertexNormals,w=b.normal,b instanceof THREE.Face3){if(K&&(M=te[b.a].position,A=te[b.b].position,L=te[b.c].position,B[E]=M.x,B[E+1]=M.y,B[E+2]=M.z,B[E+3]=A.x,B[E+4]=A.y,B[E+5]=A.z,B[E+6]=L.x,B[E+7]=L.y,B[E+8]=L.z,E+=9),ce.length&&(M=ce[b.a],A=ce[b.b],L=ce[b.c],j[V]=M.x,j[V+1]=M.y,j[V+2]=M.z,j[V+3]=M.w,j[V+4]=A.x,j[V+5]=A.y,j[V+6]=A.z,j[V+7]=A.w,j[V+8]=L.x,j[V+9]=L.y,j[V+10]=L.z,j[V+11]=L.w,M=le[b.a],A=le[b.b],L=le[b.c],G[V]=M.x,G[V+1]=M.y,G[V+2]=M.z,G[V+3]=M.w,G[V+4]=A.x,G[V+5]=A.y,G[V+6]=A.z,G[V+7]=A.w,G[V+8]=L.x,G[V+9]=L.y,G[V+10]=L.z,G[V+11]=L.w,M=ae[b.a],A=ae[b.b],L=ae[b.c],k[V]=M.x,k[V+1]=M.y,k[V+2]=M.z,k[V+3]=1,k[V+4]=A.x,k[V+5]=A.y,k[V+6]=A.z,k[V+7]=1,k[V+8]=L.x,k[V+9]=L.y,k[V+10]=L.z,k[V+11]=1,M=he[b.a],A=he[b.b],L=he[b.c],W[V]=M.x,W[V+1]=M.y,W[V+2]=M.z,W[V+3]=1,W[V+4]=A.x,W[V+5]=A.y,W[V+6]=A.z,W[V+7]=1,W[V+8]=L.x,W[V+9]=L.y,W[V+10]=L.z,W[V+11]=1,V+=12),ee&&se.length&&(M=se[b.a],A=se[b.b],L=se[b.c],I[z]=M.r,I[z+1]=M.g,I[z+2]=M.b,I[z+3]=A.r,I[z+4]=A.g,I[z+5]=A.b,I[z+6]=L.r,I[z+7]=L.g,I[z+8]=L.b,z+=9),$&&q.hasTangents&&(M=te[b.a].tangent,A=te[b.b].tangent,L=te[b.c].tangent,D[_]=M.x,D[_+1]=M.y,D[_+2]=M.z,D[_+3]=M.w,D[_+4]=A.x,D[_+5]=A.y,D[_+6]=A.z,D[_+7]=A.w,D[_+8]=L.x,D[_+9]=L.y,D[_+10]=L.z,D[_+11]=L.w,_+=12),J)if(3==H.length&&Y)for(b=0;b<3;b++)w=H[b],N[T]=w.x,N[T+1]=w.y,N[T+2]=w.z,T+=3;else for(b=0;b<3;b++)N[T]=w.x,N[T+1]=w.y,N[T+2]=w.z,T+=3;if(Q&&S)for(b=0;b<3;b++)H=S[b],P[m]=H.u,P[m+1]=H.v,m+=2;if(Q&&x)for(b=0;b<3;b++)S=x[b],U[g]=S.u,U[g+1]=S.v,g+=2;Z&&(O[y]=p,O[y+1]=p+1,O[y+2]=p+2,y+=3,X[F]=p,X[F+1]=p+1,X[F+2]=p,X[F+3]=p+2,X[F+4]=p+1,X[F+5]=p+2,F+=6,p+=3)}else if(b instanceof THREE.Face4){if(K&&(M=te[b.a].position,A=te[b.b].position,L=te[b.c].position,C=te[b.d].position,B[E]=M.x,B[E+1]=M.y,B[E+2]=M.z,B[E+3]=A.x,B[E+4]=A.y,B[E+5]=A.z,B[E+6]=L.x,B[E+7]=L.y,B[E+8]=L.z,B[E+9]=C.x,B[E+10]=C.y,B[E+11]=C.z,E+=12),ce.length&&(M=ce[b.a],A=ce[b.b],L=ce[b.c],C=ce[b.d],j[V]=M.x,j[V+1]=M.y,j[V+2]=M.z,j[V+3]=M.w,j[V+4]=A.x,j[V+5]=A.y,j[V+6]=A.z,j[V+7]=A.w,j[V+8]=L.x,j[V+9]=L.y,j[V+10]=L.z,j[V+11]=L.w,j[V+12]=C.x,j[V+13]=C.y,j[V+14]=C.z,j[V+15]=C.w,M=le[b.a],A=le[b.b],L=le[b.c],C=le[b.d],G[V]=M.x,G[V+1]=M.y,G[V+2]=M.z,G[V+3]=M.w,G[V+4]=A.x,G[V+5]=A.y,G[V+6]=A.z,G[V+7]=A.w,G[V+8]=L.x,G[V+9]=L.y,G[V+10]=L.z,G[V+11]=L.w,G[V+12]=C.x,G[V+13]=C.y,G[V+14]=C.z,G[V+15]=C.w,M=ae[b.a],A=ae[b.b],L=ae[b.c],C=ae[b.d],k[V]=M.x,k[V+1]=M.y,k[V+2]=M.z,k[V+3]=1,k[V+4]=A.x,k[V+5]=A.y,k[V+6]=A.z,k[V+7]=1,k[V+8]=L.x,k[V+9]=L.y,k[V+10]=L.z,k[V+11]=1,k[V+12]=C.x,k[V+13]=C.y,k[V+14]=C.z,k[V+15]=1,M=he[b.a],A=he[b.b],L=he[b.c],C=he[b.d],W[V]=M.x,W[V+1]=M.y,W[V+2]=M.z,W[V+3]=1,W[V+4]=A.x,W[V+5]=A.y,W[V+6]=A.z,W[V+7]=1,W[V+8]=L.x,W[V+9]=L.y,W[V+10]=L.z,W[V+11]=1,W[V+12]=C.x,W[V+13]=C.y,W[V+14]=C.z,W[V+15]=1,V+=16),ee&&se.length&&(M=se[b.a],A=se[b.b],L=se[b.c],C=se[b.d],I[z]=M.r,I[z+1]=M.g,I[z+2]=M.b,I[z+3]=A.r,I[z+4]=A.g,I[z+5]=A.b,I[z+6]=L.r,I[z+7]=L.g,I[z+8]=L.b,I[z+9]=C.r,I[z+10]=C.g,I[z+11]=C.b,z+=12),$&&q.hasTangents&&(M=te[b.a].tangent,A=te[b.b].tangent,L=te[b.c].tangent,b=te[b.d].tangent,D[_]=M.x,D[_+1]=M.y,D[_+2]=M.z,D[_+3]=M.w,D[_+4]=A.x,D[_+5]=A.y,D[_+6]=A.z,D[_+7]=A.w,D[_+8]=L.x,D[_+9]=L.y,D[_+10]=L.z,D[_+11]=L.w,D[_+12]=b.x,D[_+13]=b.y,D[_+14]=b.z,D[_+15]=b.w,_+=16),J)if(4==H.length&&Y)for(b=0;b<4;b++)w=H[b],N[T]=w.x,N[T+1]=w.y,N[T+2]=w.z,T+=3;else for(b=0;b<4;b++)N[T]=w.x,N[T+1]=w.y,N[T+2]=w.z,T+=3;if(Q&&S)for(b=0;b<4;b++)H=S[b],P[m]=H.u,P[m+1]=H.v,m+=2;if(Q&&x)for(b=0;b<4;b++)S=x[b],U[g]=S.u,U[g+1]=S.v,g+=2;Z&&(O[y]=p,O[y+1]=p+1,O[y+2]=p+2,O[y+3]=p,O[y+4]=p+2,O[y+5]=p+3,y+=6,X[F]=p,X[F+1]=p+1,X[F+2]=p,X[F+3]=p+3,X[F+4]=p+1,X[F+5]=p+2,X[F+6]=p+2,X[F+7]=p+3,F+=8,p+=4)}K&&(R.bindBuffer(R.ARRAY_BUFFER,a.__webGLVertexBuffer),R.bufferData(R.ARRAY_BUFFER,B,s)),ee&&se.length&&(R.bindBuffer(R.ARRAY_BUFFER,a.__webGLColorBuffer),R.bufferData(R.ARRAY_BUFFER,I,s)),J&&(R.bindBuffer(R.ARRAY_BUFFER,a.__webGLNormalBuffer),R.bufferData(R.ARRAY_BUFFER,N,s)),$&&q.hasTangents&&(R.bindBuffer(R.ARRAY_BUFFER,a.__webGLTangentBuffer),R.bufferData(R.ARRAY_BUFFER,D,s)),Q&&m>0&&(R.bindBuffer(R.ARRAY_BUFFER,a.__webGLUVBuffer),R.bufferData(R.ARRAY_BUFFER,P,s)),Q&&g>0&&(R.bindBuffer(R.ARRAY_BUFFER,a.__webGLUV2Buffer),R.bufferData(R.ARRAY_BUFFER,U,s)),Z&&(R.bindBuffer(R.ELEMENT_ARRAY_BUFFER,a.__webGLFaceBuffer),R.bufferData(R.ELEMENT_ARRAY_BUFFER,O,s),R.bindBuffer(R.ELEMENT_ARRAY_BUFFER,a.__webGLLineBuffer),R.bufferData(R.ELEMENT_ARRAY_BUFFER,X,s)),V>0&&(R.bindBuffer(R.ARRAY_BUFFER,a.__webGLSkinVertexABuffer),R.bufferData(R.ARRAY_BUFFER,k,s),R.bindBuffer(R.ARRAY_BUFFER,a.__webGLSkinVertexBBuffer),R.bufferData(R.ARRAY_BUFFER,W,s),R.bindBuffer(R.ARRAY_BUFFER,a.__webGLSkinIndicesBuffer),R.bufferData(R.ARRAY_BUFFER,G,s),R.bindBuffer(R.ARRAY_BUFFER,a.__webGLSkinWeightsBuffer),R.bufferData(R.ARRAY_BUFFER,j,s))}d(objlist,f,h,c,o)}l.__dirtyVertices=!1,l.__dirtyElements=!1,l.__dirtyUvs=!1,l.__dirtyNormals=!1,l.__dirtyTangents=!1,l.__dirtyColors=!1}else if(o instanceof THREE.Ribbon){if(l.__webGLVertexBuffer||(h=l,h.__webGLVertexBuffer=R.createBuffer(),h.__webGLColorBuffer=R.createBuffer(),h=l,c=h.vertices.length,h.__vertexArray=new Float32Array(3*c),h.__colorArray=new Float32Array(3*c),h.__webGLVertexCount=c,l.__dirtyVertices=!0,l.__dirtyColors=!0),l.__dirtyVertices||l.__dirtyColors){if(h=l,c=R.DYNAMIC_DRAW,p=void 0,p=void 0,E=void 0,a=void 0,m=h.vertices,s=h.colors,g=m.length,v=s.length,y=h.__vertexArray,u=h.__colorArray,T=h.__dirtyColors,h.__dirtyVertices){for(p=0;p<g;p++)E=m[p].position,a=3*p,y[a]=E.x,y[a+1]=E.y,y[a+2]=E.z;R.bindBuffer(R.ARRAY_BUFFER,h.__webGLVertexBuffer),R.bufferData(R.ARRAY_BUFFER,y,c)}if(T){for(p=0;p<v;p++)color=s[p],a=3*p,u[a]=color.r,u[a+1]=color.g,u[a+2]=color.b;R.bindBuffer(R.ARRAY_BUFFER,h.__webGLColorBuffer),R.bufferData(R.ARRAY_BUFFER,u,c)}}d(objlist,f,0,l,o),l.__dirtyVertices=!1,l.__dirtyColors=!1}else if(o instanceof THREE.Line){if(l.__webGLVertexBuffer||(h=l,h.__webGLVertexBuffer=R.createBuffer(),h.__webGLColorBuffer=R.createBuffer(),h=l,c=h.vertices.length,h.__vertexArray=new Float32Array(3*c),h.__colorArray=new Float32Array(3*c),h.__webGLLineCount=c,l.__dirtyVertices=!0,l.__dirtyColors=!0),l.__dirtyVertices||l.__dirtyColors){if(h=l,c=R.DYNAMIC_DRAW,p=void 0,p=void 0,E=void 0,a=void 0,m=h.vertices,s=h.colors,g=m.length,v=s.length,y=h.__vertexArray,u=h.__colorArray,T=h.__dirtyColors,h.__dirtyVertices){for(p=0;p<g;p++)E=m[p].position,a=3*p,y[a]=E.x,y[a+1]=E.y,y[a+2]=E.z;R.bindBuffer(R.ARRAY_BUFFER,h.__webGLVertexBuffer),R.bufferData(R.ARRAY_BUFFER,y,c)}if(T){for(p=0;p<v;p++)color=s[p],a=3*p,u[a]=color.r,u[a+1]=color.g,u[a+2]=color.b;R.bindBuffer(R.ARRAY_BUFFER,h.__webGLColorBuffer),R.bufferData(R.ARRAY_BUFFER,u,c)}}d(objlist,f,0,l,o),l.__dirtyVertices=!1,l.__dirtyColors=!1}else o instanceof THREE.ParticleSystem?(l.__webGLVertexBuffer||(h=l,h.__webGLVertexBuffer=R.createBuffer(),h.__webGLColorBuffer=R.createBuffer(),h=l,c=h.vertices.length,h.__vertexArray=new Float32Array(3*c),h.__colorArray=new Float32Array(3*c),h.__sortArray=[],h.__webGLParticleCount=c,l.__dirtyVertices=!0,l.__dirtyColors=!0),(l.__dirtyVertices||l.__dirtyColors||o.sortParticles)&&t(l,R.DYNAMIC_DRAW,o,a),d(objlist,f,0,l,o),l.__dirtyVertices=!1,l.__dirtyColors=!1):void 0!==THREE.MarchingCubes&&o instanceof THREE.MarchingCubes&&(l=f,void 0==l[0]&&(s.__webGLObjectsImmediate.push({object:o,opaque:{list:[],count:0},transparent:{list:[],count:0}}),l[0]=1))}},this.removeObject=function(e,t){var i,n;for(i=e.__webGLObjects.length-1;i>=0;i--)n=e.__webGLObjects[i].object,t==n&&e.__webGLObjects.splice(i,1)},this.setFaceCulling=function(e,t){e?(t&&"ccw"!=t?R.frontFace(R.CW):R.frontFace(R.CCW),"back"==e?R.cullFace(R.BACK):"front"==e?R.cullFace(R.FRONT):R.cullFace(R.FRONT_AND_BACK),R.enable(R.CULL_FACE)):R.disable(R.CULL_FACE)},this.supportsVertexTextures=function(){return R.getParameter(R.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0}},THREE.Snippets={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform int combine;\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec4 cubeColor = textureCube( envMap, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = vec4( mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity ), opacity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\n#endif",map_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\n#endif",lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\nfloat pointLightWeighting = max( dot( transformedNormal, pointLightVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting;\n#ifdef PHONG\nvPointLightVector[ i ] = pointLightVector;\n#endif\n}\n#endif\n}",lights_pars_fragment:"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 mColor = vec4( diffuse, opacity );\nvec4 mSpecular = vec4( specular, opacity );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0 );\nvec4 pointSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec3 pointVector = normalize( vPointLightVector[ i ] );\nvec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, shininess );\npointDiffuse  += mColor * pointDiffuseWeight;\npointSpecular += mSpecular * pointSpecularWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0 );\nvec4 dirSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, shininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = vec4( ambient, opacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif\ngl_FragColor = gl_FragColor * totalLight;",color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\nvColor = color;\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 boneGlobalMatrices[20];\n#endif",skinning_vertex:"#ifdef USE_SKINNING\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\ngl_Position  = projectionMatrix * viewMatrix * objectMatrix * gl_Position;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif"},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},lightMap:{type:"t",value:2,texture:null},envMap:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",value:1},ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}}},THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}",vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}",vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:THREE.UniformsLib.common,fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.Snippets.color_pars_fragment,THREE.Snippets.map_pars_fragment,THREE.Snippets.lightmap_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.Snippets.map_fragment,THREE.Snippets.lightmap_fragment,THREE.Snippets.color_fragment,THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertexShader:[THREE.Snippets.map_pars_vertex,THREE.Snippets.lightmap_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.color_pars_vertex,THREE.Snippets.skinning_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.lightmap_vertex,THREE.Snippets.envmap_vertex,THREE.Snippets.color_vertex,THREE.Snippets.skinning_vertex,"}"].join("\n")},lambert:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights]),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nvarying vec3 vLightWeighting;",THREE.Snippets.color_pars_fragment,THREE.Snippets.map_pars_fragment,THREE.Snippets.lightmap_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );\ngl_FragColor = gl_FragColor * vec4( vLightWeighting, 1.0 );",THREE.Snippets.map_fragment,THREE.Snippets.lightmap_fragment,THREE.Snippets.color_fragment,THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertexShader:["varying vec3 vLightWeighting;",THREE.Snippets.map_pars_vertex,THREE.Snippets.lightmap_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,THREE.Snippets.color_pars_vertex,THREE.Snippets.skinning_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.lightmap_vertex,THREE.Snippets.envmap_vertex,THREE.Snippets.color_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.Snippets.lights_vertex,THREE.Snippets.skinning_vertex,"}"].join("\n")},phong:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights,{ambient:{type:"c",value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;\nvarying vec3 vLightWeighting;",THREE.Snippets.color_pars_fragment,THREE.Snippets.map_pars_fragment,THREE.Snippets.lightmap_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,THREE.Snippets.lights_pars_fragment,"void main() {\ngl_FragColor = vec4( vLightWeighting, 1.0 );",THREE.Snippets.lights_fragment,THREE.Snippets.map_fragment,THREE.Snippets.lightmap_fragment,THREE.Snippets.color_fragment,THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertexShader:["#define PHONG\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.Snippets.map_pars_vertex,THREE.Snippets.lightmap_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,THREE.Snippets.color_pars_vertex,THREE.Snippets.skinning_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.lightmap_vertex,THREE.Snippets.envmap_vertex,THREE.Snippets.color_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 transformedNormal = normalize( normalMatrix * normal );\nvNormal = transformedNormal;",THREE.Snippets.lights_vertex,THREE.Snippets.skinning_vertex,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsLib.particle,fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.Snippets.color_pars_fragment,THREE.Snippets.map_particle_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.Snippets.map_particle_fragment,THREE.Snippets.color_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertexShader:["uniform float size;",THREE.Snippets.color_pars_vertex,"void main() {",THREE.Snippets.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\ngl_PointSize = size;\n}"].join("\n")}},THREE.SoundRenderer=function(){this.volume=1,this.domElement=document.createElement("div"),this.domElement.id="THREESound",this.cameraPosition=new THREE.Vector3,this.soundPosition=new THREE.Vector3,this.render=function(e,t,i){i&&e.update(void 0,!1,t),i=e.sounds;var n,r=i.length;for(n=0;n<r;n++)e=i[n],this.soundPosition.set(e.matrixWorld.n14,e.matrixWorld.n24,e.matrixWorld.n34),this.soundPosition.subSelf(t.position),e.isPlaying&&e.isLoaded&&(e.isAddedToDOM||e.addToDOM(this.domElement),e.calculateVolumeAndPan(this.soundPosition))}},THREE.RenderableObject=function(){this.z=this.object=null},THREE.RenderableFace3=function(){this.z=null,this.v1=new THREE.Vertex,this.v2=new THREE.Vertex,this.v3=new THREE.Vertex,this.centroidWorld=new THREE.Vector3,this.centroidScreen=new THREE.Vector3,this.normalWorld=new THREE.Vector3,this.vertexNormalsWorld=[],this.faceMaterials=this.meshMaterials=null,this.overdraw=!1,this.uvs=[null,null,null]},THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null,this.scale=new THREE.Vector2,this.materials=null},THREE.RenderableLine=function(){this.z=null,this.v1=new THREE.Vertex,this.v2=new THREE.Vertex,this.materials=null};var GeometryUtils={merge:function(e,t){var i=t instanceof THREE.Mesh,n=e.vertices.length,r=i?t.geometry:t,o=e.vertices,s=r.vertices,a=e.faces,h=r.faces,l=e.uvs;r=r.uvs,i&&t.matrixAutoUpdate&&t.updateMatrix();for(var c=0,f=s.length;c<f;c++){var E=new THREE.Vertex(s[c].position.clone());i&&t.matrix.multiplyVector3(E.position),o.push(E)}for(c=0,f=h.length;c<f;c++){s=h[c];var u,d=s.vertexNormals;for(s instanceof THREE.Face3?u=new THREE.Face3(s.a+n,s.b+n,s.c+n):s instanceof THREE.Face4&&(u=new THREE.Face4(s.a+n,s.b+n,s.c+n,s.d+n)),u.centroid.copy(s.centroid),u.normal.copy(s.normal),i=0,o=d.length;i<o;i++)E=d[i],u.vertexNormals.push(E.clone());u.materials=s.materials.slice(),a.push(u)}for(c=0,f=r.length;c<f;c++){for(n=r[c],a=[],i=0,o=n.length;i<o;i++)a.push(new THREE.UV(n[i].u,n[i].v));l.push(a)}}},ImageUtils={loadTexture:function(e,t,i){var n=new Image,r=new THREE.Texture(n,t);return n.onload=function(){r.needsUpdate=!0,i&&i(this)},n.src=e,r},loadTextureCube:function(e,t,i){var n,r=[],o=new THREE.Texture(r,t);for(t=r.loadCount=0,n=e.length;t<n;++t)r[t]=new Image,r[t].onload=function(){r.loadCount+=1,6==r.loadCount&&(o.needsUpdate=!0),i&&i(this)},r[t].src=e[t];return o}},SceneUtils={loadScene:function(e,t,n,o){e=new Worker(e),e.postMessage(0),e.onmessage=function(e){function a(){for(E in H.objects)if(!C.objects[E]&&(v=H.objects[E],T=C.geometries[v.geometry])){for(b=[],i=0;i<v.materials.length;i++)b[i]=C.materials[v.materials[i]];
g=v.position,r=v.rotation,s=v.scale,object=new THREE.Mesh(T,b),object.position.set(g[0],g[1],g[2]),object.rotation.set(r[0],r[1],r[2]),object.scale.set(s[0],s[1],s[2]),object.visible=v.visible,C.scene.addObject(object),C.objects[E]=object}}function h(e){return function(t){C.geometries[e]=t,a(),S-=1,l()}}function l(){o({total_models:A,total_textures:L,loaded_models:A-S,loaded_textures:L-M},C),0==S&&0==M&&n(C)}var c,f,E,u,d,p,m,v,g,y,R,T,_,x,b,H,w,S,M,A,L,C;H=e.data,w=new THREE.Loader,M=S=0,C={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{}},e=function(){M-=1,l()};for(d in H.cameras)y=H.cameras[d],"perspective"==y.type?_=new THREE.Camera(y.fov,y.aspect,y.near,y.far):"ortho"==y.type&&(_=new THREE.Camera,_.projectionMatrix=THREE.Matrix4.makeOrtho(y.left,y.right,y.top,y.bottom,y.near,y.far)),g=y.position,y=y.target,_.position.set(g[0],g[1],g[2]),_.target.position.set(y[0],y[1],y[2]),C.cameras[d]=_;for(u in H.lights)d=H.lights[u],"directional"==d.type?(g=d.direction,light=new THREE.DirectionalLight,light.position.set(g[0],g[1],g[2]),light.position.normalize()):"point"==d.type&&(g=d.position,light=new THREE.PointLight,light.position.set(g[0],g[1],g[2])),y=d.color,i=d.intensity||1,light.color.setRGB(y[0]*i,y[1]*i,y[2]*i),C.scene.addLight(light),C.lights[u]=light;for(p in H.fogs)u=H.fogs[p],"linear"==u.type?x=new THREE.Fog(0,u.near,u.far):"exp2"==u.type&&(x=new THREE.FogExp2(0,u.density)),y=u.color,x.color.setRGB(y[0],y[1],y[2]),C.fogs[p]=x;C.cameras&&H.defaults.camera&&(C.currentCamera=C.cameras[H.defaults.camera]),C.fogs&&H.defaults.fog&&(C.scene.fog=C.fogs[H.defaults.fog]),y=H.defaults.bgcolor,C.bgColor=new THREE.Color,C.bgColor.setRGB(y[0],y[1],y[2]),C.bgColorAlpha=H.defaults.bgalpha;for(c in H.geometries)p=H.geometries[c],"bin_mesh"!=p.type&&"ascii_mesh"!=p.type||(S+=1);A=S;for(c in H.geometries)p=H.geometries[c],"cube"==p.type?(T=new Cube(p.width,p.height,p.depth,p.segmentsWidth,p.segmentsHeight,null,p.flipped,p.sides),C.geometries[c]=T):"plane"==p.type?(T=new Plane(p.width,p.height,p.segmentsWidth,p.segmentsHeight),C.geometries[c]=T):"sphere"==p.type?(T=new Sphere(p.radius,p.segmentsWidth,p.segmentsHeight),C.geometries[c]=T):"cylinder"==p.type?(T=new Cylinder(p.numSegs,p.topRad,p.botRad,p.height,p.topOffset,p.botOffset),C.geometries[c]=T):"torus"==p.type?(T=new Torus(p.radius,p.tube,p.segmentsR,p.segmentsT),C.geometries[c]=T):"icosahedron"==p.type?(T=new Icosahedron(p.subdivisions),C.geometries[c]=T):"bin_mesh"==p.type?w.loadBinary({model:p.url,callback:h(c)}):"ascii_mesh"==p.type&&w.loadAscii({model:p.url,callback:h(c)});for(m in H.textures)c=H.textures[m],M+=c.url instanceof Array?c.url.length:1;L=M;for(m in H.textures)c=H.textures[m],void 0!=c.mapping&&void 0!=THREE[c.mapping]&&(c.mapping=new THREE[c.mapping]),c.url instanceof Array?p=ImageUtils.loadTextureCube(c.url,c.mapping,e):(p=ImageUtils.loadTexture(c.url,c.mapping,e),void 0!=THREE[c.minFilter]&&(p.minFilter=THREE[c.minFilter]),void 0!=THREE[c.magFilter]&&(p.magFilter=THREE[c.magFilter])),C.textures[m]=p;for(f in H.materials){m=H.materials[f];for(R in m.parameters)"envMap"==R||"map"==R||"lightMap"==R?m.parameters[R]=C.textures[m.parameters[R]]:"shading"==R?m.parameters[R]="flat"==m.parameters[R]?THREE.FlatShading:THREE.SmoothShading:"blending"==R?m.parameters[R]=THREE[m.parameters[R]]?THREE[m.parameters[R]]:THREE.NormalBlending:"combine"==R&&(m.parameters[R]="MixOperation"==m.parameters[R]?THREE.MixOperation:THREE.MultiplyOperation);m=new THREE[m.type](m.parameters),C.materials[f]=m}a(),t(C)}},addMesh:function(e,t,i,n,r,o,s,a,h,l){return t=new THREE.Mesh(t,l),t.scale.x=t.scale.y=t.scale.z=i,t.position.x=n,t.position.y=r,t.position.z=o,t.rotation.x=s,t.rotation.y=a,t.rotation.z=h,e.addObject(t),t},addPanoramaCubeWebGL:function(e,t,i){var n=ShaderUtils.lib.cube;return n.uniforms.tCube.texture=i,i=new THREE.MeshShaderMaterial({fragmentShader:n.fragmentShader,vertexShader:n.vertexShader,uniforms:n.uniforms}),t=new THREE.Mesh(new Cube(t,t,t,1,1,null,!0),i),e.addObject(t),t},addPanoramaCube:function(e,t,i){var n=[];return n.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(i[0])})),n.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(i[1])})),n.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(i[2])})),n.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(i[3])})),n.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(i[4])})),n.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(i[5])})),t=new THREE.Mesh(new Cube(t,t,t,1,1,n,!0),new THREE.MeshFaceMaterial),e.addObject(t),t},addPanoramaCubePlanes:function(e,t,i){var n=t/2;t=new Plane(t,t);var r=Math.PI,o=Math.PI/2;SceneUtils.addMesh(e,t,1,0,0,-n,0,0,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(i[5])})),SceneUtils.addMesh(e,t,1,-n,0,0,0,o,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(i[0])})),SceneUtils.addMesh(e,t,1,n,0,0,0,-o,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(i[1])})),SceneUtils.addMesh(e,t,1,0,n,0,o,0,r,new THREE.MeshBasicMaterial({map:new THREE.Texture(i[2])})),SceneUtils.addMesh(e,t,1,0,-n,0,-o,0,r,new THREE.MeshBasicMaterial({map:new THREE.Texture(i[3])}))}},ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",vertexShader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},normal:{uniforms:{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tNormal:{type:"t",value:2,texture:null},tAO:{type:"t",value:3,texture:null},uNormalScale:{type:"f",value:1},tDisplacement:{type:"t",value:4,texture:null},uDisplacementBias:{type:"f",value:-.5},uDisplacementScale:{type:"f",value:2.5},uPointLightPos:{type:"v3",value:new THREE.Vector3},uPointLightColor:{type:"c",value:new THREE.Color(15658734)},uDirLightPos:{type:"v3",value:new THREE.Vector3},uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30}},fragmentShader:"uniform vec3 uDirLightPos;\nuniform vec3 uAmbientLightColor;\nuniform vec3 uDirLightColor;\nuniform vec3 uPointLightColor;\nuniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform bool enableDiffuse;\nuniform bool enableAO;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tAO;\nuniform float uNormalScale;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 diffuseTex = vec3( 1.0, 1.0, 1.0 );\nvec3 aoTex = vec3( 1.0, 1.0, 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse )\ndiffuseTex = texture2D( tDiffuse, vUv ).xyz;\nif( enableAO )\naoTex = texture2D( tAO, vUv ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec3 pointVector = normalize( vPointLightVector );\nvec3 pointHalfVector = normalize( vPointLightVector + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, uShininess );\npointDiffuse  += vec4( uDiffuseColor, 1.0 ) * pointDiffuseWeight;\npointSpecular += vec4( uSpecularColor, 1.0 ) * pointSpecularWeight;\nvec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 lDirection = viewMatrix * vec4( uDirLightPos, 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, uShininess );\ndirDiffuse  += vec4( uDiffuseColor, 1.0 ) * dirDiffuseWeight;\ndirSpecular += vec4( uSpecularColor, 1.0 ) * dirSpecularWeight;\nvec4 totalLight = vec4( uAmbientLightColor * uAmbientColor, 1.0 );\ntotalLight += vec4( uDirLightColor, 1.0 ) * ( dirDiffuse + dirSpecular );\ntotalLight += vec4( uPointLightColor, 1.0 ) * ( pointDiffuse + pointSpecular );\ngl_FragColor = vec4( totalLight.xyz * aoTex * diffuseTex, 1.0 );\n}",vertexShader:"attribute vec4 tangent;\nuniform vec3 uPointLightPos;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\nvec4 lPosition = viewMatrix * vec4( uPointLightPos, 1.0 );\nvPointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif\n}"},cube:{uniforms:{tCube:{type:"t",value:1,texture:null}},vertexShader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( - wPos.x, wPos.yz ) );\n}"},convolution:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},uImageIncrement:{type:"v2",value:new THREE.Vector2(.001953125,0)},cKernel:{type:"fv1",value:[]}},vertexShader:"varying vec2 vUv;\nuniform vec2 uImageIncrement;\nvoid main(void) {\nvUv = uv - ((KERNEL_SIZE - 1.0) / 2.0) * uImageIncrement;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform sampler2D tDiffuse;\nuniform vec2 uImageIncrement;\nuniform float cKernel[KERNEL_SIZE];\nvoid main(void) {\nvec2 imageCoord = vUv;\nvec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\nfor( int i=0; i<KERNEL_SIZE; ++i ) {\nsum += texture2D( tDiffuse, imageCoord ) * cKernel[i];\nimageCoord += uImageIncrement;\n}\ngl_FragColor = sum;\n}"},film:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},time:{type:"f",value:0},nIntensity:{type:"f",value:.5},sIntensity:{type:"f",value:.05},sCount:{type:"f",value:4096},grayscale:{type:"i",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform sampler2D tDiffuse;\nuniform float time;\nuniform bool grayscale;\nuniform float nIntensity;\nuniform float sIntensity;\nuniform float sCount;\nvoid main() {\nvec4 cTextureScreen = texture2D( tDiffuse, vUv );\nfloat x = vUv.x * vUv.y * time *  1000.0;\nx = mod( x, 13.0 ) * mod( x, 123.0 );\nfloat dx = mod( x, 0.01 );\nvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\nvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\ncResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\ncResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\nif( grayscale ) {\ncResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\n}\ngl_FragColor =  vec4( cResult, cTextureScreen.a );\n}"},screen:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform sampler2D tDiffuse;\nuniform float opacity;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\ngl_FragColor = opacity * texel;\n}"},basic:{uniforms:{},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"void main() {\ngl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );\n}"}},buildKernel:function(e){var t,i,n,r,o=2*Math.ceil(3*e)+1;for(o>25&&(o=25),r=.5*(o-1),i=Array(o),t=n=0;t<o;++t)i[t]=Math.exp(-((t-r)*(t-r))/(2*e*e)),n+=i[t];for(t=0;t<o;++t)i[t]/=n;return i}},Cube=function(e,t,i,n,r,o,s,a){function h(e,t,i,o,s,a,h,c){var f,E,u=n||1,d=r||1,p=u+1,m=d+1,v=s/2,g=a/2;s/=u;var y=a/d,R=l.vertices.length;for("x"==e&&"y"==t||"y"==e&&"x"==t?f="z":"x"==e&&"z"==t||"z"==e&&"x"==t?f="y":("z"==e&&"y"==t||"y"==e&&"z"==t)&&(f="x"),E=0;E<m;E++)for(a=0;a<p;a++){var T=new THREE.Vector3;T[e]=(a*s-v)*i,T[t]=(E*y-g)*o,T[f]=h,l.vertices.push(new THREE.Vertex(T))}for(E=0;E<d;E++)for(a=0;a<u;a++)l.faces.push(new THREE.Face4(a+p*E+R,a+p*(E+1)+R,a+1+p*(E+1)+R,a+1+p*E+R,null,c)),l.uvs.push([new THREE.UV(a/u,E/d),new THREE.UV(a/u,(E+1)/d),new THREE.UV((a+1)/u,(E+1)/d),new THREE.UV((a+1)/u,E/d)])}THREE.Geometry.call(this);var l=this,c=e/2,f=t/2,E=i/2;if(s=s?-1:1,void 0!==o)if(o instanceof Array)this.materials=o;else{this.materials=[];for(var u=0;u<6;u++)this.materials.push([o])}else this.materials=[];if(this.sides={px:!0,nx:!0,py:!0,ny:!0,pz:!0,nz:!0},void 0!=a)for(var d in a)void 0!=this.sides[d]&&(this.sides[d]=a[d]);this.sides.px&&h("z","y",1*s,-1,i,t,-c,this.materials[0]),this.sides.nx&&h("z","y",-1*s,-1,i,t,c,this.materials[1]),this.sides.py&&h("x","z",1*s,1,e,i,f,this.materials[2]),this.sides.ny&&h("x","z",1*s,-1,e,i,-f,this.materials[3]),this.sides.pz&&h("x","y",1*s,-1,e,t,E,this.materials[4]),this.sides.nz&&h("x","y",-1*s,-1,e,t,-E,this.materials[5]),function(){for(var e=[],t=[],i=0,n=l.vertices.length;i<n;i++){for(var r=l.vertices[i],o=!1,s=0,a=e.length;s<a;s++){var h=e[s];if(r.position.x==h.position.x&&r.position.y==h.position.y&&r.position.z==h.position.z){t[i]=s,o=!0;break}}o||(t[i]=e.length,e.push(new THREE.Vertex(r.position.clone())))}for(i=0,n=l.faces.length;i<n;i++)r=l.faces[i],r.a=t[r.a],r.b=t[r.b],r.c=t[r.c],r.d=t[r.d];l.vertices=e}(),this.computeCentroids(),this.computeFaceNormals(),this.sortFacesByMaterial()};Cube.prototype=new THREE.Geometry,Cube.prototype.constructor=Cube;var Cylinder=function(e,t,i,n,r){function o(e,t,i){a.vertices.push(new THREE.Vertex(new THREE.Vector3(e,t,i)))}THREE.Geometry.call(this);var s,a=this,h=Math.PI;for(s=0;s<e;s++)o(Math.sin(2*h*s/e)*t,Math.cos(2*h*s/e)*t,0);for(s=0;s<e;s++)o(Math.sin(2*h*s/e)*i,Math.cos(2*h*s/e)*i,n);for(s=0;s<e;s++)a.faces.push(new THREE.Face4(s,s+e,e+(s+1)%e,(s+1)%e));if(0!=i)for(o(0,0,-r),s=e;s<e+e/2;s++)a.faces.push(new THREE.Face4(2*e,(2*s-2*e)%e,(2*s-2*e+1)%e,(2*s-2*e+2)%e));if(0!=t)for(o(0,0,n+r),s=e+e/2;s<2*e;s++)a.faces.push(new THREE.Face4((2*s-2*e+2)%e+e,(2*s-2*e+1)%e+e,(2*s-2*e)%e+e,2*e+1));this.computeCentroids(),this.computeFaceNormals(),this.sortFacesByMaterial()};Cylinder.prototype=new THREE.Geometry,Cylinder.prototype.constructor=Cylinder;var Plane=function(e,t,i,n){THREE.Geometry.call(this);var r,o=e/2,s=t/2;i=i||1,n=n||1;var a=i+1,h=n+1;e/=i;var l=t/n;for(r=0;r<h;r++)for(t=0;t<a;t++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(t*e-o,-(r*l-s),0)));for(r=0;r<n;r++)for(t=0;t<i;t++)this.faces.push(new THREE.Face4(t+a*r,t+a*(r+1),t+1+a*(r+1),t+1+a*r)),this.uvs.push([new THREE.UV(t/i,r/n),new THREE.UV(t/i,(r+1)/n),new THREE.UV((t+1)/i,(r+1)/n),new THREE.UV((t+1)/i,r/n)]);this.computeCentroids(),this.computeFaceNormals(),this.sortFacesByMaterial()};Plane.prototype=new THREE.Geometry,Plane.prototype.constructor=Plane;var Sphere=function(e,t,i){THREE.Geometry.call(this);var n,r=Math.PI,o=Math.max(3,t||8),s=Math.max(2,i||6);for(t=[],i=0;i<s+1;i++){n=i/s;var a=e*Math.cos(n*r),h=e*Math.sin(n*r),l=[],c=0;for(n=0;n<o;n++){var f=2*n/o,E=h*Math.sin(f*r);f=h*Math.cos(f*r),(0==i||i==s)&&n>0||(c=this.vertices.push(new THREE.Vertex(new THREE.Vector3(f,a,E)))-1),l.push(c)}t.push(l)}var u,d,p;for(r=t.length,i=0;i<r;i++)if(o=t[i].length,i>0)for(n=0;n<o;n++){l=n==o-1,s=t[i][l?0:n+1],a=t[i][l?o-1:n],h=t[i-1][l?o-1:n],l=t[i-1][l?0:n+1],E=i/(r-1),u=(i-1)/(r-1),d=(n+1)/o,f=n/o,c=new THREE.UV(1-d,E),E=new THREE.UV(1-f,E),f=new THREE.UV(1-f,u);var m=new THREE.UV(1-d,u);i<t.length-1&&(u=this.vertices[s].position.clone(),d=this.vertices[a].position.clone(),p=this.vertices[h].position.clone(),u.normalize(),d.normalize(),p.normalize(),this.faces.push(new THREE.Face3(s,a,h,[new THREE.Vector3(u.x,u.y,u.z),new THREE.Vector3(d.x,d.y,d.z),new THREE.Vector3(p.x,p.y,p.z)])),this.uvs.push([c,E,f])),i>1&&(u=this.vertices[s].position.clone(),d=this.vertices[h].position.clone(),p=this.vertices[l].position.clone(),u.normalize(),d.normalize(),p.normalize(),this.faces.push(new THREE.Face3(s,h,l,[new THREE.Vector3(u.x,u.y,u.z),new THREE.Vector3(d.x,d.y,d.z),new THREE.Vector3(p.x,p.y,p.z)])),this.uvs.push([c,f,m]))}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals(),this.sortFacesByMaterial(),this.boundingSphere={radius:e}};Sphere.prototype=new THREE.Geometry,Sphere.prototype.constructor=Sphere;var Torus=function(e,t,i,n){for(this.radius=e||100,this.tube=t||40,this.segmentsR=i||8,this.segmentsT=n||6,e=[],THREE.Geometry.call(this),t=0;t<=this.segmentsR;++t)for(i=0;i<=this.segmentsT;++i){n=i/this.segmentsT*2*Math.PI;var r=t/this.segmentsR*2*Math.PI;this.vertices.push(new THREE.Vertex(new THREE.Vector3((this.radius+this.tube*Math.cos(r))*Math.cos(n),(this.radius+this.tube*Math.cos(r))*Math.sin(n),this.tube*Math.sin(r)))),e.push([i/this.segmentsT,1-t/this.segmentsR])}for(t=1;t<=this.segmentsR;++t)for(i=1;i<=this.segmentsT;++i){n=(this.segmentsT+1)*t+i,r=(this.segmentsT+1)*t+i-1;var o=(this.segmentsT+1)*(t-1)+i-1,s=(this.segmentsT+1)*(t-1)+i;this.faces.push(new THREE.Face4(n,r,o,s)),this.uvs.push([new THREE.UV(e[n][0],e[n][1]),new THREE.UV(e[r][0],e[r][1]),new THREE.UV(e[o][0],e[o][1]),new THREE.UV(e[s][0],e[s][1])])}delete e,this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals(),this.sortFacesByMaterial()};Torus.prototype=new THREE.Geometry,Torus.prototype.constructor=Torus;var Icosahedron=function(e){function t(e,t,i){var n=Math.sqrt(e*e+t*t+i*i);return o.vertices.push(new THREE.Vertex(new THREE.Vector3(e/n,t/n,i/n)))-1}function i(e,t,i,n){n.faces.push(new THREE.Face3(e,t,i))}function n(e,i){var n=o.vertices[e].position,r=o.vertices[i].position;return t((n.x+r.x)/2,(n.y+r.y)/2,(n.z+r.z)/2)}var r,o=this,s=new THREE.Geometry;for(this.subdivisions=e||0,THREE.Geometry.call(this),e=(1+Math.sqrt(5))/2,t(-1,e,0),t(1,e,0),t(-1,-e,0),t(1,-e,0),t(0,-1,e),t(0,1,e),t(0,-1,-e),t(0,1,-e),t(e,0,-1),t(e,0,1),t(-e,0,-1),t(-e,0,1),i(0,11,5,s),i(0,5,1,s),i(0,1,7,s),i(0,7,10,s),i(0,10,11,s),i(1,5,9,s),i(5,11,4,s),i(11,10,2,s),i(10,7,6,s),i(7,1,8,s),i(3,9,4,s),i(3,4,2,s),i(3,2,6,s),i(3,6,8,s),i(3,8,9,s),i(4,9,5,s),i(2,4,11,s),i(6,2,10,s),i(8,6,7,s),i(9,8,1,s),e=0;e<this.subdivisions;e++){r=new THREE.Geometry;for(var a in s.faces){var h=n(s.faces[a].a,s.faces[a].b),l=n(s.faces[a].b,s.faces[a].c),c=n(s.faces[a].c,s.faces[a].a);i(s.faces[a].a,h,c,r),i(s.faces[a].b,l,h,r),i(s.faces[a].c,c,l,r),i(h,l,c,r)}s.faces=r.faces}o.faces=s.faces,delete s,delete r,this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals(),this.sortFacesByMaterial()};Icosahedron.prototype=new THREE.Geometry,Icosahedron.prototype.constructor=Icosahedron,LathedObject.prototype=new THREE.Geometry,LathedObject.prototype.constructor=LathedObject,window.Int32Array||(window.Int32Array=Array,window.Float32Array=Array),THREE.MarchingCubes=function(e,t){THREE.Object3D.call(this),this.materials=t instanceof Array?t:[t],this.init=function(e){this.isolation=80,this.size=e,this.size2=this.size*this.size,this.size3=this.size2*this.size,this.halfsize=this.size/2,this.delta=2/this.size,this.yd=this.size,this.zd=this.size2,this.field=new Float32Array(this.size3),this.normal_cache=new Float32Array(3*this.size3),this.vlist=new Float32Array(36),this.nlist=new Float32Array(36),this.firstDraw=!0,this.maxCount=4096,this.count=0,this.hasPos=!1,this.hasNormal=!1,this.positionArray=new Float32Array(3*this.maxCount),this.normalArray=new Float32Array(3*this.maxCount)},this.lerp=function(e,t,i){return e+(t-e)*i},this.VIntX=function(e,t,i,n,r,o,s,a,h,l){r=(r-h)/(l-h),h=this.normal_cache,t[n]=o+r*this.delta,t[n+1]=s,t[n+2]=a,i[n]=this.lerp(h[e],h[e+3],r),i[n+1]=this.lerp(h[e+1],h[e+4],r),i[n+2]=this.lerp(h[e+2],h[e+5],r)},this.VIntY=function(e,t,i,n,r,o,s,a,h,l){r=(r-h)/(l-h),h=this.normal_cache,t[n]=o,t[n+1]=s+r*this.delta,t[n+2]=a,t=e+3*this.yd,i[n]=this.lerp(h[e],h[t],r),i[n+1]=this.lerp(h[e+1],h[t+1],r),i[n+2]=this.lerp(h[e+2],h[t+2],r)},this.VIntZ=function(e,t,i,n,r,o,s,a,h,l){r=(r-h)/(l-h),h=this.normal_cache,t[n]=o,t[n+1]=s,t[n+2]=a+r*this.delta,t=e+3*this.zd,i[n]=this.lerp(h[e],h[t],r),i[n+1]=this.lerp(h[e+1],h[t+1],r),i[n+2]=this.lerp(h[e+2],h[t+2],r)},this.compNorm=function(e){var t=3*e;0==this.normal_cache[t]&&(this.normal_cache[t]=this.field[e-1]-this.field[e+1],this.normal_cache[t+1]=this.field[e-this.yd]-this.field[e+this.yd],this.normal_cache[t+2]=this.field[e-this.zd]-this.field[e+this.zd])},this.polygonize=function(e,t,i,n,r,o){var s=n+1,a=n+this.yd,h=n+this.zd,l=s+this.yd,c=s+this.zd,f=n+this.yd+this.zd,E=s+this.yd+this.zd,u=0,d=this.field[n],p=this.field[s],m=this.field[a],v=this.field[l],g=this.field[h],y=this.field[c],R=this.field[f],T=this.field[E];d<r&&(u|=1),p<r&&(u|=2),m<r&&(u|=8),v<r&&(u|=4),g<r&&(u|=16),y<r&&(u|=32),R<r&&(u|=128),T<r&&(u|=64);var _=THREE.edgeTable[u];if(0==_)return 0;var x=this.delta,b=e+x,H=t+x;for(x=i+x,1&_&&(this.compNorm(n),this.compNorm(s),this.VIntX(3*n,this.vlist,this.nlist,0,r,e,t,i,d,p)),2&_&&(this.compNorm(s),this.compNorm(l),this.VIntY(3*s,this.vlist,this.nlist,3,r,b,t,i,p,v)),4&_&&(this.compNorm(a),this.compNorm(l),this.VIntX(3*a,this.vlist,this.nlist,6,r,e,H,i,m,v)),8&_&&(this.compNorm(n),this.compNorm(a),this.VIntY(3*n,this.vlist,this.nlist,9,r,e,t,i,d,m)),16&_&&(this.compNorm(h),this.compNorm(c),this.VIntX(3*h,this.vlist,this.nlist,12,r,e,t,x,g,y)),32&_&&(this.compNorm(c),this.compNorm(E),this.VIntY(3*c,this.vlist,this.nlist,15,r,b,t,x,y,T)),64&_&&(this.compNorm(f),this.compNorm(E),this.VIntX(3*f,this.vlist,this.nlist,18,r,e,H,x,R,T)),128&_&&(this.compNorm(h),this.compNorm(f),this.VIntY(3*h,this.vlist,this.nlist,21,r,e,t,x,g,R)),256&_&&(this.compNorm(n),this.compNorm(h),this.VIntZ(3*n,this.vlist,this.nlist,24,r,e,t,i,d,g)),512&_&&(this.compNorm(s),this.compNorm(c),this.VIntZ(3*s,this.vlist,this.nlist,27,r,b,t,i,p,y)),1024&_&&(this.compNorm(l),this.compNorm(E),this.VIntZ(3*l,this.vlist,this.nlist,30,r,b,H,i,v,T)),2048&_&&(this.compNorm(a),this.compNorm(f),this.VIntZ(3*a,this.vlist,this.nlist,33,r,e,H,i,m,R)),u<<=4,r=n=0;THREE.triTable[u+r]!=-1;)e=u+r,t=e+1,i=e+2,this.posnormtriv(this.vlist,this.nlist,3*THREE.triTable[e],3*THREE.triTable[t],3*THREE.triTable[i],o),r+=3,n++;return n},this.posnormtriv=function(e,t,i,n,r,o){var s=3*this.count;this.positionArray[s]=e[i],this.positionArray[s+1]=e[i+1],this.positionArray[s+2]=e[i+2],this.positionArray[s+3]=e[n],this.positionArray[s+4]=e[n+1],this.positionArray[s+5]=e[n+2],this.positionArray[s+6]=e[r],this.positionArray[s+7]=e[r+1],this.positionArray[s+8]=e[r+2],this.normalArray[s]=t[i],this.normalArray[s+1]=t[i+1],this.normalArray[s+2]=t[i+2],this.normalArray[s+3]=t[n],this.normalArray[s+4]=t[n+1],this.normalArray[s+5]=t[n+2],this.normalArray[s+6]=t[r],this.normalArray[s+7]=t[r+1],this.normalArray[s+8]=t[r+2],this.hasPos=!0,this.hasNormal=!0,this.count+=3,this.count>=this.maxCount-3&&o(this)},this.begin=function(){this.count=0,this.hasPos=!1,this.hasNormal=!1},this.end=function(e){if(0!=this.count){for(var t=3*this.count;t<this.positionArray.length;t++)this.positionArray[t]=0;e(this)}},this.addBall=function(e,t,i,n,r){var o=this.size*Math.sqrt(n/r),s=i*this.size,a=t*this.size,h=e*this.size,l=Math.floor(s-o);l<1&&(l=1),s=Math.floor(s+o),s>this.size-1&&(s=this.size-1);var c=Math.floor(a-o);c<1&&(c=1),a=Math.floor(a+o),a>this.size-1&&(a=this.size-1);var f=Math.floor(h-o);f<1&&(f=1),o=Math.floor(h+o),o>this.size-1&&(o=this.size-1);for(var E,u,d,p,m,v;l<s;l++)for(h=this.size2*l,u=l/this.size-i,m=u*u,u=c;u<a;u++)for(d=h+this.size*u,E=u/this.size-t,v=E*E,E=f;E<o;E++)p=E/this.size-e,p=n/(1e-6+p*p+v+m)-r,p>0&&(this.field[d+E]+=p)},this.addPlaneX=function(e,t){var i,n,r,o,s,a=this.size,h=this.yd,l=this.zd,c=this.field,f=a*Math.sqrt(e/t);for(f>a&&(f=a),i=0;i<f;i++)if(n=i/a,n*=n,o=e/(1e-4+n)-t,o>0)for(n=0;n<a;n++)for(s=i+n*h,r=0;r<a;r++)c[l*r+s]+=o},this.addPlaneY=function(e,t){var i,n,r,o,s,a,h=this.size,l=this.yd,c=this.zd,f=this.field,E=h*Math.sqrt(e/t);for(E>h&&(E=h),n=0;n<E;n++)if(i=n/h,i*=i,o=e/(1e-4+i)-t,o>0)for(s=n*l,i=0;i<h;i++)for(a=s+i,r=0;r<h;r++)f[c*r+a]+=o},this.addPlaneZ=function(e,t){var i,n,r,o,s,a;for(size=this.size,yd=this.yd,zd=this.zd,field=this.field,dist=size*Math.sqrt(e/t),dist>size&&(dist=size),r=0;r<dist;r++)if(i=r/size,i*=i,o=e/(1e-4+i)-t,o>0)for(s=zd*r,n=0;n<size;n++)for(a=s+n*yd,i=0;i<size;i++)field[a+i]+=o},this.reset=function(){var e;for(e=0;e<this.size3;e++)this.normal_cache[3*e]=0,this.field[e]=0},this.render=function(e){this.begin();var t,i,n,r,o,s,a,h,l,c=this.size-2;for(r=1;r<c;r++)for(l=this.size2*r,a=(r-this.halfsize)/this.halfsize,n=1;n<c;n++)for(h=l+this.size*n,s=(n-this.halfsize)/this.halfsize,i=1;i<c;i++)o=(i-this.halfsize)/this.halfsize,t=h+i,this.polygonize(o,s,a,t,this.isolation,e);this.end(e)},this.generateGeometry=function(){var e=0,t=new THREE.Geometry;return this.render(function(i){var n,r,o,s,a,h,l,c;for(n=0;n<i.count;n++)a=3*n,l=a+1,c=a+2,r=i.positionArray[a],o=i.positionArray[l],s=i.positionArray[c],h=new THREE.Vector3(r,o,s),r=i.normalArray[a],o=i.normalArray[l],s=i.normalArray[c],a=new THREE.Vector3(r,o,s),a.normalize(),a=new THREE.Vertex(h,a),t.vertices.push(a);for(nfaces=i.count/3,n=0;n<nfaces;n++)a=3*(e+n),l=a+1,c=a+2,h=t.vertices[a].normal,r=t.vertices[l].normal,o=t.vertices[c].normal,a=new THREE.Face3(a,l,c,[h,r,o]),t.faces.push(a);e+=nfaces,i.count=0}),t.sortFacesByMaterial(),t},this.init(e)},THREE.MarchingCubes.prototype=new THREE.Object3D,THREE.MarchingCubes.prototype.constructor=THREE.MarchingCubes,THREE.edgeTable=new Int32Array([0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]),THREE.triTable=new Int32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1,3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1,3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1,9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1,9,2,10,9,0,2,8,4,7,-1,-1,-1,-1,-1,-1,-1,2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1,8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1,9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1,4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1,3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1,1,11,10,1,4,11,1,0,4,7,11,4,-1,-1,-1,-1,4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1,4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1,5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1,2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1,9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,0,8,11,4,9,5,-1,-1,-1,-1,-1,-1,-1,0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1,2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1,10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1,4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1,5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1,5,4,8,5,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1,0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1,1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1,10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,-1,8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1,2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1,9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1,2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1,11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,-1,9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1,5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1,11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1,11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,0,1,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1,1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1,9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1,2,3,11,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1,0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1,5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1,6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1,0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1,3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1,6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1,1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1,10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1,6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,-1,-1,-1,1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1,8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1,7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1,3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1,0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1,9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1,8,4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1,5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1,0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1,6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1,10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1,10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1,8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1,1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1,0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,-1,-1,0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1,3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1,6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1,9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1,8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1,3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1,6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1,0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1,10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1,10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1,1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1,2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1,7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1,7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1,2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1,1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1,11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1,8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1,0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1,7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1,10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1,2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1,6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1,7,2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1,2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1,1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1,10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1,10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1,0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1,7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1,6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1,8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1,9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1,6,8,4,6,11,8,2,10,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1,4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1,10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1,8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1,1,9,4,1,4,2,2,4,6,-1,-1,-1,-1,-1,-1,-1,8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1,10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1,4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1,10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,5,11,7,6,-1,-1,-1,-1,-1,-1,-1,5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1,11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1,9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1,6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1,7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1,3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1,7,2,3,7,6,2,5,4,9,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1,3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1,6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1,9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1,1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1,4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,-1,7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1,6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1,3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1,0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1,6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1,0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,-1,11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1,6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1,5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1,9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1,1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1,1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1,10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1,0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1,5,11,7,5,10,11,1,9,0,-1,-1,-1,-1,-1,-1,-1,10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1,11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1,9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1,7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1,2,5,10,2,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1,9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1,9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1,1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1,9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1,9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1,0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1,10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1,2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1,0,4,11,0,11,3,4,5,11,2,11,1,5,1,11,-1,0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1,9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1,5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1,3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1,5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1,8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,-1,-1,-1,0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1,9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1,1,10,11,1,11,4,1,4,0,7,4,11,-1,-1,-1,-1,3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1,4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1,9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1,11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1,11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1,2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1,9,10,7,9,7,4,10,2,7,8,7,0,2,0,7,-1,3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1,1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1,4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1,0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1,3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,1,2,9,2,11,9,-1,-1,-1,-1,0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1,9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1,1,10,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]),
THREE.Loader=function(e){this.statusDomElement=(this.showStatus=e)?this.addStatusElement():null},THREE.Loader.prototype={addStatusElement:function(){var e=document.createElement("div");return e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="#b00",e.style.color="#fff",e.style.width="140px",e.style.padding="0.25em 0.25em 0.25em 0.5em",e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(e){var t="Loaded ";t+=e.total?(100*e.loaded/e.total).toFixed(0)+"%":(e.loaded/1e3).toFixed(2)+" KB",this.statusDomElement.innerHTML=t},loadAsciiOld:function(e,t){var i=document.createElement("script");i.type="text/javascript",i.onload=t,i.src=e,document.getElementsByTagName("head")[0].appendChild(i)},loadAscii:function(e){var t=e.model,i=e.callback,n=e.texture_path?e.texture_path:THREE.Loader.prototype.extractUrlbase(t);e=(new Date).getTime(),t=new Worker(t),t.onmessage=function(e){THREE.Loader.prototype.createModel(e.data,i,n)},t.postMessage(e)},loadBinary:function(e){var t=e.model,i=e.callback,n=e.texture_path?e.texture_path:THREE.Loader.prototype.extractUrlbase(t),r=e.bin_path?e.bin_path:THREE.Loader.prototype.extractUrlbase(t);e=(new Date).getTime(),t=new Worker(t);var o=this.showProgress?THREE.Loader.prototype.updateProgress:null;t.onmessage=function(e){THREE.Loader.prototype.loadAjaxBuffers(e.data.buffers,e.data.materials,i,r,n,o)},t.onerror=function(e){alert("worker.onerror: "+e.message+"\n"+e.data),e.preventDefault()},t.postMessage(e)},loadAjaxBuffers:function(e,t,i,n,r,o){var s=new XMLHttpRequest,a=n+"/"+e,h=0;s.onreadystatechange=function(){4==s.readyState?200==s.status||0==s.status?THREE.Loader.prototype.createBinModel(s.responseText,i,r,t):alert("Couldn't load ["+a+"] ["+s.status+"]"):3==s.readyState?o&&(0==h&&(h=s.getResponseHeader("Content-Length")),o({total:h,loaded:s.responseText.length})):2==s.readyState&&(h=s.getResponseHeader("Content-Length"))},s.open("GET",a,!0),s.overrideMimeType("text/plain; charset=x-user-defined"),s.setRequestHeader("Content-Type","text/plain"),s.send(null)},createBinModel:function(e,t,i,n){var r=function(t){function i(e,t){var i=a(e,t),n=a(e,t+1),r=a(e,t+2),o=a(e,t+3),s=(o<<1&255|r>>7)-127;return i|=(127&r)<<16|n<<8,0==i&&s==-127?0:(1-2*(o>>7))*(1+i*Math.pow(2,-23))*Math.pow(2,s)}function r(e,t){var i=a(e,t),n=a(e,t+1),r=a(e,t+2);return(a(e,t+3)<<24)+(r<<16)+(n<<8)+i}function o(e,t){var i=a(e,t);return(a(e,t+1)<<8)+i}function s(e,t){var i=a(e,t);return i>127?i-256:i}function a(e,t){return 255&e.charCodeAt(t)}function h(t){var i,n,s;i=r(e,t),n=r(e,t+p),s=r(e,t+m),t=o(e,t+v),THREE.Loader.prototype.f3(I,i,n,s,t)}function l(t){var i,n,s,a,h,l;i=r(e,t),n=r(e,t+p),s=r(e,t+m),a=o(e,t+v),h=r(e,t+g),l=r(e,t+y),t=r(e,t+R),THREE.Loader.prototype.f3n(I,W,i,n,s,a,h,l,t)}function c(t){var i,n,s,a;i=r(e,t),n=r(e,t+T),s=r(e,t+_),a=r(e,t+x),t=o(e,t+b),THREE.Loader.prototype.f4(I,i,n,s,a,t)}function f(t){var i,n,s,a,h,l,c,f;i=r(e,t),n=r(e,t+T),s=r(e,t+_),a=r(e,t+x),h=o(e,t+b),l=r(e,t+H),c=r(e,t+w),f=r(e,t+S),t=r(e,t+M),THREE.Loader.prototype.f4n(I,W,i,n,s,a,h,l,c,f,t)}function E(t){var i,n;i=r(e,t),n=r(e,t+A),t=r(e,t+L),THREE.Loader.prototype.uv3(I.uvs,G[2*i],G[2*i+1],G[2*n],G[2*n+1],G[2*t],G[2*t+1])}function u(t){var i,n,o;i=r(e,t),n=r(e,t+C),o=r(e,t+F),t=r(e,t+z),THREE.Loader.prototype.uv4(I.uvs,G[2*i],G[2*i+1],G[2*n],G[2*n+1],G[2*o],G[2*o+1],G[2*t],G[2*t+1])}var d,p,m,v,g,y,R,T,_,x,b,H,w,S,M,A,L,C,F,z,V,B,P,U,N,D,I=this,k=0,W=[],G=[];THREE.Geometry.call(this),THREE.Loader.prototype.init_materials(I,n,t),d={signature:e.substr(k,8),header_bytes:a(e,k+8),vertex_coordinate_bytes:a(e,k+9),normal_coordinate_bytes:a(e,k+10),uv_coordinate_bytes:a(e,k+11),vertex_index_bytes:a(e,k+12),normal_index_bytes:a(e,k+13),uv_index_bytes:a(e,k+14),material_index_bytes:a(e,k+15),nvertices:r(e,k+16),nnormals:r(e,k+16+4),nuvs:r(e,k+16+8),ntri_flat:r(e,k+16+12),ntri_smooth:r(e,k+16+16),ntri_flat_uv:r(e,k+16+20),ntri_smooth_uv:r(e,k+16+24),nquad_flat:r(e,k+16+28),nquad_smooth:r(e,k+16+32),nquad_flat_uv:r(e,k+16+36),nquad_smooth_uv:r(e,k+16+40)},k+=d.header_bytes,p=d.vertex_index_bytes,m=2*d.vertex_index_bytes,v=3*d.vertex_index_bytes,g=3*d.vertex_index_bytes+d.material_index_bytes,y=3*d.vertex_index_bytes+d.material_index_bytes+d.normal_index_bytes,R=3*d.vertex_index_bytes+d.material_index_bytes+2*d.normal_index_bytes,T=d.vertex_index_bytes,_=2*d.vertex_index_bytes,x=3*d.vertex_index_bytes,b=4*d.vertex_index_bytes,H=4*d.vertex_index_bytes+d.material_index_bytes,w=4*d.vertex_index_bytes+d.material_index_bytes+d.normal_index_bytes,S=4*d.vertex_index_bytes+d.material_index_bytes+2*d.normal_index_bytes,M=4*d.vertex_index_bytes+d.material_index_bytes+3*d.normal_index_bytes,A=d.uv_index_bytes,L=2*d.uv_index_bytes,C=d.uv_index_bytes,F=2*d.uv_index_bytes,z=3*d.uv_index_bytes,t=3*d.vertex_index_bytes+d.material_index_bytes,D=4*d.vertex_index_bytes+d.material_index_bytes,V=d.ntri_flat*t,B=d.ntri_smooth*(t+3*d.normal_index_bytes),P=d.ntri_flat_uv*(t+3*d.uv_index_bytes),U=d.ntri_smooth_uv*(t+3*d.normal_index_bytes+3*d.uv_index_bytes),N=d.nquad_flat*D,t=d.nquad_smooth*(D+4*d.normal_index_bytes),D=d.nquad_flat_uv*(D+4*d.uv_index_bytes),k+=function(t){for(var n,r,o,s=3*d.vertex_coordinate_bytes,a=t+d.nvertices*s;t<a;t+=s)n=i(e,t),r=i(e,t+d.vertex_coordinate_bytes),o=i(e,t+2*d.vertex_coordinate_bytes),THREE.Loader.prototype.v(I,n,r,o);return d.nvertices*s}(k),k+=function(t){for(var i,n,r,o=3*d.normal_coordinate_bytes,a=t+d.nnormals*o;t<a;t+=o)i=s(e,t),n=s(e,t+d.normal_coordinate_bytes),r=s(e,t+2*d.normal_coordinate_bytes),W.push(i/127,n/127,r/127);return d.nnormals*o}(k),k+=function(t){for(var n,r,o=2*d.uv_coordinate_bytes,s=t+d.nuvs*o;t<s;t+=o)n=i(e,t),r=i(e,t+d.uv_coordinate_bytes),G.push(n,r);return d.nuvs*o}(k),V=k+V,B=V+B,P=B+P,U=P+U,N=U+N,t=N+t,D=t+D,function(e){var t,i=3*d.vertex_index_bytes+d.material_index_bytes,n=i+3*d.uv_index_bytes,r=e+d.ntri_flat_uv*n;for(t=e;t<r;t+=n)h(t),E(t+i);return r-e}(B),function(e){var t,i=3*d.vertex_index_bytes+d.material_index_bytes+3*d.normal_index_bytes,n=i+3*d.uv_index_bytes,r=e+d.ntri_smooth_uv*n;for(t=e;t<r;t+=n)l(t),E(t+i);return r-e}(P),function(e){var t,i=4*d.vertex_index_bytes+d.material_index_bytes,n=i+4*d.uv_index_bytes,r=e+d.nquad_flat_uv*n;for(t=e;t<r;t+=n)c(t),u(t+i);return r-e}(t),function(e){var t,i=4*d.vertex_index_bytes+d.material_index_bytes+4*d.normal_index_bytes,n=i+4*d.uv_index_bytes,r=e+d.nquad_smooth_uv*n;for(t=e;t<r;t+=n)f(t),u(t+i);return r-e}(D),function(e){var t,i=3*d.vertex_index_bytes+d.material_index_bytes,n=e+d.ntri_flat*i;for(t=e;t<n;t+=i)h(t);return n-e}(k),function(e){var t,i=3*d.vertex_index_bytes+d.material_index_bytes+3*d.normal_index_bytes,n=e+d.ntri_smooth*i;for(t=e;t<n;t+=i)l(t);return n-e}(V),function(e){var t,i=4*d.vertex_index_bytes+d.material_index_bytes,n=e+d.nquad_flat*i;for(t=e;t<n;t+=i)c(t);return n-e}(U),function(e){var t,i=4*d.vertex_index_bytes+d.material_index_bytes+4*d.normal_index_bytes,n=e+d.nquad_smooth*i;for(t=e;t<n;t+=i)f(t);return n-e}(N),this.computeCentroids(),this.computeFaceNormals(),this.sortFacesByMaterial()};r.prototype=new THREE.Geometry,r.prototype.constructor=r,t(new r(i))},createModel:function(e,t,i){var n=function(t){var i=this;THREE.Geometry.call(this),THREE.Loader.prototype.init_materials(i,e.materials,t),function(){var t,n,r,o,s;for(t=0,n=e.vertices.length;t<n;t+=3)r=e.vertices[t],o=e.vertices[t+1],s=e.vertices[t+2],THREE.Loader.prototype.v(i,r,o,s);if(e.colors)for(t=0,n=e.colors.length;t<n;t+=3)r=e.colors[t],o=e.colors[t+1],s=e.colors[t+2],THREE.Loader.prototype.vc(i,r,o,s)}(),function(){function t(e,t){THREE.Loader.prototype.f3(i,e[t],e[t+1],e[t+2],e[t+3])}function n(t,n){THREE.Loader.prototype.f3n(i,e.normals,t[n],t[n+1],t[n+2],t[n+3],t[n+4],t[n+5],t[n+6])}function r(e,t){THREE.Loader.prototype.f4(i,e[t],e[t+1],e[t+2],e[t+3],e[t+4])}function o(t,n){THREE.Loader.prototype.f4n(i,e.normals,t[n],t[n+1],t[n+2],t[n+3],t[n+4],t[n+5],t[n+6],t[n+7],t[n+8])}function s(t,n){var r,o,s,a,h,l,c,f,E;r=t[n],o=t[n+1],s=t[n+2],a=e.uvs[2*r],c=e.uvs[2*r+1],h=e.uvs[2*o],f=e.uvs[2*o+1],l=e.uvs[2*s],E=e.uvs[2*s+1],THREE.Loader.prototype.uv3(i.uvs,a,c,h,f,l,E),e.uvs2&&e.uvs2.length&&(a=e.uvs2[2*r],c=e.uvs2[2*r+1],h=e.uvs2[2*o],f=e.uvs2[2*o+1],l=e.uvs2[2*s],E=e.uvs2[2*s+1],THREE.Loader.prototype.uv3(i.uvs2,a,1-c,h,1-f,l,1-E))}function a(t,n){var r,o,s,a,h,l,c,f,E,u,d,p;r=t[n],o=t[n+1],s=t[n+2],a=t[n+3],h=e.uvs[2*r],E=e.uvs[2*r+1],l=e.uvs[2*o],u=e.uvs[2*o+1],c=e.uvs[2*s],d=e.uvs[2*s+1],f=e.uvs[2*a],p=e.uvs[2*a+1],THREE.Loader.prototype.uv4(i.uvs,h,E,l,u,c,d,f,p),e.uvs2&&(h=e.uvs2[2*r],E=e.uvs2[2*r+1],l=e.uvs2[2*o],u=e.uvs2[2*o+1],c=e.uvs2[2*s],d=e.uvs2[2*s+1],f=e.uvs2[2*a],p=e.uvs2[2*a+1],THREE.Loader.prototype.uv4(i.uvs2,h,1-E,l,1-u,c,1-d,f,1-p))}var h,l;for(h=0,l=e.triangles_uv.length;h<l;h+=7)t(e.triangles_uv,h),s(e.triangles_uv,h+4);for(h=0,l=e.triangles_n_uv.length;h<l;h+=10)n(e.triangles_n_uv,h),s(e.triangles_n_uv,h+7);for(h=0,l=e.quads_uv.length;h<l;h+=9)r(e.quads_uv,h),a(e.quads_uv,h+5);for(h=0,l=e.quads_n_uv.length;h<l;h+=13)o(e.quads_n_uv,h),a(e.quads_n_uv,h+9);for(h=0,l=e.triangles.length;h<l;h+=4)t(e.triangles,h);for(h=0,l=e.triangles_n.length;h<l;h+=7)n(e.triangles_n,h);for(h=0,l=e.quads.length;h<l;h+=5)r(e.quads,h);for(h=0,l=e.quads_n.length;h<l;h+=9)o(e.quads_n,h)}(),function(){var t,n,r,o;if(e.skinWeights)for(t=0,n=e.skinWeights.length;t<n;t+=2)r=e.skinWeights[t],o=e.skinWeights[t+1],THREE.Loader.prototype.sw(i,r,o,0,0);if(e.skinIndices)for(t=0,n=e.skinIndices.length;t<n;t+=2)r=e.skinIndices[t],o=e.skinIndices[t+1],THREE.Loader.prototype.si(i,r,o,0,0);THREE.Loader.prototype.bones(i,e.bones),THREE.Loader.prototype.animation(i,e.animation)}(),this.computeCentroids(),this.computeFaceNormals(),this.sortFacesByMaterial()};n.prototype=new THREE.Geometry,n.prototype.constructor=n,t(new n(i))},bones:function(e,t){e.bones=t},animation:function(e,t){e.animation=t},si:function(e,t,i,n,r){e.skinIndices.push(new THREE.Vector4(t,i,n,r))},sw:function(e,t,i,n,r){e.skinWeights.push(new THREE.Vector4(t,i,n,r))},v:function(e,t,i,n){e.vertices.push(new THREE.Vertex(new THREE.Vector3(t,i,n)))},vc:function(e,t,i,n){var r=new THREE.Color(16777215);r.setRGB(t,i,n),e.colors.push(r)},f3:function(e,t,i,n,r){e.faces.push(new THREE.Face3(t,i,n,null,e.materials[r]))},f4:function(e,t,i,n,r,o){e.faces.push(new THREE.Face4(t,i,n,r,null,e.materials[o]))},f3n:function(e,t,i,n,r,o,s,a,h){o=e.materials[o];var l=t[3*a],c=t[3*a+1];a=t[3*a+2];var f=t[3*h],E=t[3*h+1];h=t[3*h+2],e.faces.push(new THREE.Face3(i,n,r,[new THREE.Vector3(t[3*s],t[3*s+1],t[3*s+2]),new THREE.Vector3(l,c,a),new THREE.Vector3(f,E,h)],o))},f4n:function(e,t,i,n,r,o,s,a,h,l,c){s=e.materials[s];var f=t[3*h],E=t[3*h+1];h=t[3*h+2];var u=t[3*l],d=t[3*l+1];l=t[3*l+2];var p=t[3*c],m=t[3*c+1];c=t[3*c+2],e.faces.push(new THREE.Face4(i,n,r,o,[new THREE.Vector3(t[3*a],t[3*a+1],t[3*a+2]),new THREE.Vector3(f,E,h),new THREE.Vector3(u,d,l),new THREE.Vector3(p,m,c)],s))},uv3:function(e,t,i,n,r,o,s){var a=[];a.push(new THREE.UV(t,i)),a.push(new THREE.UV(n,r)),a.push(new THREE.UV(o,s)),e.push(a)},uv4:function(e,t,i,n,r,o,s,a,h){var l=[];l.push(new THREE.UV(t,i)),l.push(new THREE.UV(n,r)),l.push(new THREE.UV(o,s)),l.push(new THREE.UV(a,h)),e.push(l)},init_materials:function(e,t,i){e.materials=[];for(var n=0;n<t.length;++n)e.materials[n]=[THREE.Loader.prototype.createMaterial(t[n],i)]},createMaterial:function(e,t){function i(e){return e=Math.log(e)/Math.LN2,Math.floor(e)==e}function n(e,t){var n=new Image;n.onload=function(){if(i(this.width)&&i(this.height))e.image=this;else{var t=Math.pow(2,Math.round(Math.log(this.width)/Math.LN2)),n=Math.pow(2,Math.round(Math.log(this.height)/Math.LN2));e.image.width=t,e.image.height=n,e.image.getContext("2d").drawImage(this,0,0,t,n)}e.needsUpdate=!0},n.src=t}var r,o,s;return r="MeshLambertMaterial",o={color:15658734,opacity:1,map:null,lightMap:null,vertexColors:e.vertex_colors},e.shading&&"Phong"==e.shading&&(r="MeshPhongMaterial"),e.map_diffuse&&t?(s=document.createElement("canvas"),o.map=new THREE.Texture(s),n(o.map,t+"/"+e.map_diffuse)):e.col_diffuse?(s=(255*e.col_diffuse[0]<<16)+(255*e.col_diffuse[1]<<8)+255*e.col_diffuse[2],o.color=s,o.opacity=e.transparency):e.a_dbg_color&&(o.color=e.a_dbg_color),e.map_lightmap&&t&&(s=document.createElement("canvas"),o.lightMap=new THREE.Texture(s),n(o.lightMap,t+"/"+e.map_lightmap)),new THREE[r](o)},extractUrlbase:function(e){return e=e.split("/"),e.pop(),e.join("/")}};