"use strict";var directiveModule=angular.module("angularjs-dropdown-multiselect",[]);directiveModule.run(["$templateCache",function($templateCache){var template='<div class="multiselect-parent btn-group dropdown-multiselect" data-ng-class="{open: open}">';template+='<button type="button" class="btn btn-default dropdown-toggle" data-ng-click="open=!open;">{{getButtonText()}}<span class="caret"></span></button>',template+='<ul class="dropdown-menu">',template+='<li><a data-ng-click="selectAll()"><span class="glyphicon glyphicon-ok"></span>  Check All</a>',template+='<li><a data-ng-click="deselectAll();"><span class="glyphicon glyphicon-remove"></span>  Uncheck All</a></li>',template+='<li class="divider"></li>',template+='<li data-ng-repeat="option in options"><a data-ng-click="setSelectedItem(getPropertyForObject(option,settings.idProp))"><span data-ng-class="isChecked(getPropertyForObject(option,settings.idProp))"></span>{{getPropertyForObject(option, settings.displayProp)}}</a></li>',template+="</ul>",template+="</div>",$templateCache.put("dropdown-multiselect-template.html",template)}]),directiveModule.directive("ngDropdownMultiselect",["$filter","$document",function($filter,$document){return{restrict:"AE",scope:{selectedModel:"=",options:"=",extraSettings:"="},templateUrl:"dropdown-multiselect-template.html",link:function($scope){function getFindObj(id){var findObj={};return""===$scope.settings.externalIdProp?findObj[$scope.settings.idProp]=id:findObj[$scope.settings.externalIdProp]=id,findObj}$scope.settings={dynamicTitle:!0,defaultText:"Select",closeOnBlur:!0,displayProp:"label",idProp:"id",externalIdProp:"id"},angular.extend($scope.settings,$scope.extraSettings||[]),$scope.settings.closeOnBlur&&$document.on("click",function(e){for(var target=e.target.parentElement,parentFound=!1;angular.isDefined(target)&&null!==target&&!parentFound;)_.contains(target.classList,"multiselect-parent")&&!parentFound&&(parentFound=!0),target=target.parentElement;parentFound||$scope.$apply(function(){$scope.open=!1})}),$scope.getButtonText=function(){if($scope.settings.dynamicTitle){var totalSelected=angular.isDefined($scope.selectedModel)?$scope.selectedModel.length:0;return 0===totalSelected?$scope.settings.defaultText:totalSelected+" selected"}return $scope.settings.defaultText},$scope.getPropertyForObject=function(object,property){return object.hasOwnProperty(property)?object[property]:""},$scope.selectAll=function(){$scope.deselectAll(),angular.forEach($scope.options,function(value){$scope.setSelectedItem(value[$scope.settings.idProp],!0)})},$scope.deselectAll=function(){$scope.selectedModel=[]},$scope.setSelectedItem=function(id,dontRemove){dontRemove=dontRemove||!1;var findObj=getFindObj(id),exists=-1!==_.findIndex($scope.selectedModel,findObj);if(!dontRemove&&exists)$scope.selectedModel.splice(_.findIndex($scope.selectedModel,findObj),1);else if(!exists)if(""===$scope.settings.externalIdProp){var fullObjFind=getFindObj(id),fullObj=_.find($scope.options,fullObjFind);$scope.selectedModel.push(fullObj)}else $scope.selectedModel.push(findObj);return!1},$scope.isChecked=function(id){return-1!==_.findIndex($scope.selectedModel,getFindObj(id))?"glyphicon glyphicon-ok":""}}}}]);