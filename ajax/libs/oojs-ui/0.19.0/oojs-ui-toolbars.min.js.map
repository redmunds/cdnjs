{"version":3,"sources":["oojs-ui-toolbars.js"],"names":["OO","ui","Toolbar","toolFactory","toolGroupFactory","config","isPlainObject","undefined","parent","call","this","EventEmitter","mixin","GroupElement","groups","tools","position","$bar","$","$actions","initialized","narrowThreshold","onWindowResizeHandler","onWindowResize","bind","$element","add","$group","on","onPointerDown","addClass","actions","append","shadow","inheritClass","Element","mixinClass","prototype","getToolFactory","getToolGroupFactory","e","$closestWidgetToEvent","target","closest","$closestWidgetToToolbar","length","toggleClass","width","getNarrowThreshold","initialize","getElementWindow","setup","i","len","type","group","items","defaultType","reset","include","label","msg","lookup","push","create","addItems","destroy","clearItems","off","remove","isToolAvailable","name","reserveTool","tool","getName","releaseTool","getToolAccelerator","Tool","toolGroup","toolbar","getToolbar","active","$title","$accel","$link","title","IconElement","FlaggedElement","TabIndexedElement","extend","$tabIndexed","connect","updateState","prop","dir","lang","$icon","attr","data","constructor","replace","displayBothIconAndLabel","setTitle","Widget","tagName","autoAddToCatchall","autoAddToGroup","isCompatibleWith","onUpdateState","onSelect","isActive","setActive","state","setFlags","removeClass","clearFlags","resolveMsg","updateTitle","getTitle","titleTooltips","accelTooltips","accel","tooltipParts","text","join","removeAttr","disconnect","ToolGroup","pressed","autoDisabled","exclude","promote","demote","onCapturedMouseKeyUpHandler","onCapturedMouseKeyUp","mousedown","onMouseKeyDown","mouseup","onMouseKeyUp","keydown","keyup","focus","onMouseOverFocus","blur","onMouseOutBlur","mouseover","mouseout","register","aggregate","disable","itemDisable","populate","autoDisable","isDisabled","apply","arguments","updateDisabled","item","allDisabled","which","MouseButtons","LEFT","Keys","SPACE","ENTER","getTargetTool","getElementDocument","addEventListener","removeEventListener","preventDefault","stopPropagation","$item","onToolFactoryRegister","names","list","getTools","removeItems","ToolFactory","Factory","included","promoted","demoted","auto","used","simpleArrayDifference","extract","concat","collection","Array","isArray","registry","ToolGroupFactory","l","defaultClasses","getDefaultClasses","BarToolGroup","ListToolGroup","MenuToolGroup","PopupTool","PopupElement","popup","toggle","ToolGroupTool","innerToolGroup","createGroup","groupConfig","onToolGroupDisable","disabled","setDisabled","PopupToolGroup","indicator","dragging","onBlurHandler","onBlur","$handle","IndicatorElement","LabelElement","TitledElement","ClippableElement","$clippable","onHandleMouseKeyDown","onHandleMouseKeyUp","$label","$indicator","header","prepend","isElementAttached","value","containerWidth","containerLeft","css","toggleClipping","isClippedHorizontally","$clippableScrollableContainer","offset","left","allowCollapse","forceExpand","expanded","collapsibleTools","Object","keys","getExpandCollapseTool","updateCollapsibleState","ExpandCollapseTool","expandCollapseTool","setIcon","labelTexts","setLabel"],"mappings":"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","file":"oojs-ui-toolbars.min.js","sourcesContent":["/*!\n * OOjs UI v0.19.0\n * https://www.mediawiki.org/wiki/OOjs_UI\n *\n * Copyright 2011–2017 OOjs UI Team and other contributors.\n * Released under the MIT license\n * http://oojs.mit-license.org\n *\n * Date: 2017-02-01T23:04:40Z\n */\n( function ( OO ) {\n\n'use strict';\n\n/**\n * Toolbars are complex interface components that permit users to easily access a variety\n * of {@link OO.ui.Tool tools} (e.g., formatting commands) and actions, which are additional commands that are\n * part of the toolbar, but not configured as tools.\n *\n * Individual tools are customized and then registered with a {@link OO.ui.ToolFactory tool factory}, which creates\n * the tools on demand. Each tool has a symbolic name (used when registering the tool), a title (e.g., ‘Insert\n * image’), and an icon.\n *\n * Individual tools are organized in {@link OO.ui.ToolGroup toolgroups}, which can be {@link OO.ui.MenuToolGroup menus}\n * of tools, {@link OO.ui.ListToolGroup lists} of tools, or a single {@link OO.ui.BarToolGroup bar} of tools.\n * The arrangement and order of the toolgroups is customized when the toolbar is set up. Tools can be presented in\n * any order, but each can only appear once in the toolbar.\n *\n * The toolbar can be synchronized with the state of the external \"application\", like a text\n * editor's editing area, marking tools as active/inactive (e.g. a 'bold' tool would be shown as\n * active when the text cursor was inside bolded text) or enabled/disabled (e.g. a table caption\n * tool would be disabled while the user is not editing a table). A state change is signalled by\n * emitting the {@link #event-updateState 'updateState' event}, which calls Tools'\n * {@link OO.ui.Tool#onUpdateState onUpdateState method}.\n *\n * The following is an example of a basic toolbar.\n *\n *     @example\n *     // Example of a toolbar\n *     // Create the toolbar\n *     var toolFactory = new OO.ui.ToolFactory();\n *     var toolGroupFactory = new OO.ui.ToolGroupFactory();\n *     var toolbar = new OO.ui.Toolbar( toolFactory, toolGroupFactory );\n *\n *     // We will be placing status text in this element when tools are used\n *     var $area = $( '<p>' ).text( 'Toolbar example' );\n *\n *     // Define the tools that we're going to place in our toolbar\n *\n *     // Create a class inheriting from OO.ui.Tool\n *     function SearchTool() {\n *         SearchTool.parent.apply( this, arguments );\n *     }\n *     OO.inheritClass( SearchTool, OO.ui.Tool );\n *     // Each tool must have a 'name' (used as an internal identifier, see later) and at least one\n *     // of 'icon' and 'title' (displayed icon and text).\n *     SearchTool.static.name = 'search';\n *     SearchTool.static.icon = 'search';\n *     SearchTool.static.title = 'Search...';\n *     // Defines the action that will happen when this tool is selected (clicked).\n *     SearchTool.prototype.onSelect = function () {\n *         $area.text( 'Search tool clicked!' );\n *         // Never display this tool as \"active\" (selected).\n *         this.setActive( false );\n *     };\n *     SearchTool.prototype.onUpdateState = function () {};\n *     // Make this tool available in our toolFactory and thus our toolbar\n *     toolFactory.register( SearchTool );\n *\n *     // Register two more tools, nothing interesting here\n *     function SettingsTool() {\n *         SettingsTool.parent.apply( this, arguments );\n *     }\n *     OO.inheritClass( SettingsTool, OO.ui.Tool );\n *     SettingsTool.static.name = 'settings';\n *     SettingsTool.static.icon = 'settings';\n *     SettingsTool.static.title = 'Change settings';\n *     SettingsTool.prototype.onSelect = function () {\n *         $area.text( 'Settings tool clicked!' );\n *         this.setActive( false );\n *     };\n *     SettingsTool.prototype.onUpdateState = function () {};\n *     toolFactory.register( SettingsTool );\n *\n *     // Register two more tools, nothing interesting here\n *     function StuffTool() {\n *         StuffTool.parent.apply( this, arguments );\n *     }\n *     OO.inheritClass( StuffTool, OO.ui.Tool );\n *     StuffTool.static.name = 'stuff';\n *     StuffTool.static.icon = 'ellipsis';\n *     StuffTool.static.title = 'More stuff';\n *     StuffTool.prototype.onSelect = function () {\n *         $area.text( 'More stuff tool clicked!' );\n *         this.setActive( false );\n *     };\n *     StuffTool.prototype.onUpdateState = function () {};\n *     toolFactory.register( StuffTool );\n *\n *     // This is a PopupTool. Rather than having a custom 'onSelect' action, it will display a\n *     // little popup window (a PopupWidget).\n *     function HelpTool( toolGroup, config ) {\n *         OO.ui.PopupTool.call( this, toolGroup, $.extend( { popup: {\n *             padded: true,\n *             label: 'Help',\n *             head: true\n *         } }, config ) );\n *         this.popup.$body.append( '<p>I am helpful!</p>' );\n *     }\n *     OO.inheritClass( HelpTool, OO.ui.PopupTool );\n *     HelpTool.static.name = 'help';\n *     HelpTool.static.icon = 'help';\n *     HelpTool.static.title = 'Help';\n *     toolFactory.register( HelpTool );\n *\n *     // Finally define which tools and in what order appear in the toolbar. Each tool may only be\n *     // used once (but not all defined tools must be used).\n *     toolbar.setup( [\n *         {\n *             // 'bar' tool groups display tools' icons only, side-by-side.\n *             type: 'bar',\n *             include: [ 'search', 'help' ]\n *         },\n *         {\n *             // 'list' tool groups display both the titles and icons, in a dropdown list.\n *             type: 'list',\n *             indicator: 'down',\n *             label: 'More',\n *             include: [ 'settings', 'stuff' ]\n *         }\n *         // Note how the tools themselves are toolgroup-agnostic - the same tool can be displayed\n *         // either in a 'list' or a 'bar'. There is a 'menu' tool group too, not showcased here,\n *         // since it's more complicated to use. (See the next example snippet on this page.)\n *     ] );\n *\n *     // Create some UI around the toolbar and place it in the document\n *     var frame = new OO.ui.PanelLayout( {\n *         expanded: false,\n *         framed: true\n *     } );\n *     var contentFrame = new OO.ui.PanelLayout( {\n *         expanded: false,\n *         padded: true\n *     } );\n *     frame.$element.append(\n *         toolbar.$element,\n *         contentFrame.$element.append( $area )\n *     );\n *     $( 'body' ).append( frame.$element );\n *\n *     // Here is where the toolbar is actually built. This must be done after inserting it into the\n *     // document.\n *     toolbar.initialize();\n *     toolbar.emit( 'updateState' );\n *\n * The following example extends the previous one to illustrate 'menu' toolgroups and the usage of\n * {@link #event-updateState 'updateState' event}.\n *\n *     @example\n *     // Create the toolbar\n *     var toolFactory = new OO.ui.ToolFactory();\n *     var toolGroupFactory = new OO.ui.ToolGroupFactory();\n *     var toolbar = new OO.ui.Toolbar( toolFactory, toolGroupFactory );\n *\n *     // We will be placing status text in this element when tools are used\n *     var $area = $( '<p>' ).text( 'Toolbar example' );\n *\n *     // Define the tools that we're going to place in our toolbar\n *\n *     // Create a class inheriting from OO.ui.Tool\n *     function SearchTool() {\n *         SearchTool.parent.apply( this, arguments );\n *     }\n *     OO.inheritClass( SearchTool, OO.ui.Tool );\n *     // Each tool must have a 'name' (used as an internal identifier, see later) and at least one\n *     // of 'icon' and 'title' (displayed icon and text).\n *     SearchTool.static.name = 'search';\n *     SearchTool.static.icon = 'search';\n *     SearchTool.static.title = 'Search...';\n *     // Defines the action that will happen when this tool is selected (clicked).\n *     SearchTool.prototype.onSelect = function () {\n *         $area.text( 'Search tool clicked!' );\n *         // Never display this tool as \"active\" (selected).\n *         this.setActive( false );\n *     };\n *     SearchTool.prototype.onUpdateState = function () {};\n *     // Make this tool available in our toolFactory and thus our toolbar\n *     toolFactory.register( SearchTool );\n *\n *     // Register two more tools, nothing interesting here\n *     function SettingsTool() {\n *         SettingsTool.parent.apply( this, arguments );\n *         this.reallyActive = false;\n *     }\n *     OO.inheritClass( SettingsTool, OO.ui.Tool );\n *     SettingsTool.static.name = 'settings';\n *     SettingsTool.static.icon = 'settings';\n *     SettingsTool.static.title = 'Change settings';\n *     SettingsTool.prototype.onSelect = function () {\n *         $area.text( 'Settings tool clicked!' );\n *         // Toggle the active state on each click\n *         this.reallyActive = !this.reallyActive;\n *         this.setActive( this.reallyActive );\n *         // To update the menu label\n *         this.toolbar.emit( 'updateState' );\n *     };\n *     SettingsTool.prototype.onUpdateState = function () {};\n *     toolFactory.register( SettingsTool );\n *\n *     // Register two more tools, nothing interesting here\n *     function StuffTool() {\n *         StuffTool.parent.apply( this, arguments );\n *         this.reallyActive = false;\n *     }\n *     OO.inheritClass( StuffTool, OO.ui.Tool );\n *     StuffTool.static.name = 'stuff';\n *     StuffTool.static.icon = 'ellipsis';\n *     StuffTool.static.title = 'More stuff';\n *     StuffTool.prototype.onSelect = function () {\n *         $area.text( 'More stuff tool clicked!' );\n *         // Toggle the active state on each click\n *         this.reallyActive = !this.reallyActive;\n *         this.setActive( this.reallyActive );\n *         // To update the menu label\n *         this.toolbar.emit( 'updateState' );\n *     };\n *     StuffTool.prototype.onUpdateState = function () {};\n *     toolFactory.register( StuffTool );\n *\n *     // This is a PopupTool. Rather than having a custom 'onSelect' action, it will display a\n *     // little popup window (a PopupWidget). 'onUpdateState' is also already implemented.\n *     function HelpTool( toolGroup, config ) {\n *         OO.ui.PopupTool.call( this, toolGroup, $.extend( { popup: {\n *             padded: true,\n *             label: 'Help',\n *             head: true\n *         } }, config ) );\n *         this.popup.$body.append( '<p>I am helpful!</p>' );\n *     }\n *     OO.inheritClass( HelpTool, OO.ui.PopupTool );\n *     HelpTool.static.name = 'help';\n *     HelpTool.static.icon = 'help';\n *     HelpTool.static.title = 'Help';\n *     toolFactory.register( HelpTool );\n *\n *     // Finally define which tools and in what order appear in the toolbar. Each tool may only be\n *     // used once (but not all defined tools must be used).\n *     toolbar.setup( [\n *         {\n *             // 'bar' tool groups display tools' icons only, side-by-side.\n *             type: 'bar',\n *             include: [ 'search', 'help' ]\n *         },\n *         {\n *             // 'menu' tool groups display both the titles and icons, in a dropdown menu.\n *             // Menu label indicates which items are selected.\n *             type: 'menu',\n *             indicator: 'down',\n *             include: [ 'settings', 'stuff' ]\n *         }\n *     ] );\n *\n *     // Create some UI around the toolbar and place it in the document\n *     var frame = new OO.ui.PanelLayout( {\n *         expanded: false,\n *         framed: true\n *     } );\n *     var contentFrame = new OO.ui.PanelLayout( {\n *         expanded: false,\n *         padded: true\n *     } );\n *     frame.$element.append(\n *         toolbar.$element,\n *         contentFrame.$element.append( $area )\n *     );\n *     $( 'body' ).append( frame.$element );\n *\n *     // Here is where the toolbar is actually built. This must be done after inserting it into the\n *     // document.\n *     toolbar.initialize();\n *     toolbar.emit( 'updateState' );\n *\n * @class\n * @extends OO.ui.Element\n * @mixins OO.EventEmitter\n * @mixins OO.ui.mixin.GroupElement\n *\n * @constructor\n * @param {OO.ui.ToolFactory} toolFactory Factory for creating tools\n * @param {OO.ui.ToolGroupFactory} toolGroupFactory Factory for creating toolgroups\n * @param {Object} [config] Configuration options\n * @cfg {boolean} [actions] Add an actions section to the toolbar. Actions are commands that are included\n *  in the toolbar, but are not configured as tools. By default, actions are displayed on the right side of\n *  the toolbar.\n * @cfg {boolean} [shadow] Add a shadow below the toolbar.\n * @cfg {string} [position='top'] Whether the toolbar is positioned above ('top') or below ('bottom') content.\n */\nOO.ui.Toolbar = function OoUiToolbar( toolFactory, toolGroupFactory, config ) {\n\t// Allow passing positional parameters inside the config object\n\tif ( OO.isPlainObject( toolFactory ) && config === undefined ) {\n\t\tconfig = toolFactory;\n\t\ttoolFactory = config.toolFactory;\n\t\ttoolGroupFactory = config.toolGroupFactory;\n\t}\n\n\t// Configuration initialization\n\tconfig = config || {};\n\n\t// Parent constructor\n\tOO.ui.Toolbar.parent.call( this, config );\n\n\t// Mixin constructors\n\tOO.EventEmitter.call( this );\n\tOO.ui.mixin.GroupElement.call( this, config );\n\n\t// Properties\n\tthis.toolFactory = toolFactory;\n\tthis.toolGroupFactory = toolGroupFactory;\n\tthis.groups = [];\n\tthis.tools = {};\n\tthis.position = config.position || 'top';\n\tthis.$bar = $( '<div>' );\n\tthis.$actions = $( '<div>' );\n\tthis.initialized = false;\n\tthis.narrowThreshold = null;\n\tthis.onWindowResizeHandler = this.onWindowResize.bind( this );\n\n\t// Events\n\tthis.$element\n\t\t.add( this.$bar ).add( this.$group ).add( this.$actions )\n\t\t.on( 'mousedown keydown', this.onPointerDown.bind( this ) );\n\n\t// Initialization\n\tthis.$group.addClass( 'oo-ui-toolbar-tools' );\n\tif ( config.actions ) {\n\t\tthis.$bar.append( this.$actions.addClass( 'oo-ui-toolbar-actions' ) );\n\t}\n\tthis.$bar\n\t\t.addClass( 'oo-ui-toolbar-bar' )\n\t\t.append( this.$group, '<div style=\"clear:both\"></div>' );\n\tif ( config.shadow ) {\n\t\tthis.$bar.append( '<div class=\"oo-ui-toolbar-shadow\"></div>' );\n\t}\n\tthis.$element.addClass( 'oo-ui-toolbar oo-ui-toolbar-position-' + this.position ).append( this.$bar );\n};\n\n/* Setup */\n\nOO.inheritClass( OO.ui.Toolbar, OO.ui.Element );\nOO.mixinClass( OO.ui.Toolbar, OO.EventEmitter );\nOO.mixinClass( OO.ui.Toolbar, OO.ui.mixin.GroupElement );\n\n/* Events */\n\n/**\n * @event updateState\n *\n * An 'updateState' event must be emitted on the Toolbar (by calling `toolbar.emit( 'updateState' )`)\n * every time the state of the application using the toolbar changes, and an update to the state of\n * tools is required.\n *\n * @param {...Mixed} data Application-defined parameters\n */\n\n/* Methods */\n\n/**\n * Get the tool factory.\n *\n * @return {OO.ui.ToolFactory} Tool factory\n */\nOO.ui.Toolbar.prototype.getToolFactory = function () {\n\treturn this.toolFactory;\n};\n\n/**\n * Get the toolgroup factory.\n *\n * @return {OO.Factory} Toolgroup factory\n */\nOO.ui.Toolbar.prototype.getToolGroupFactory = function () {\n\treturn this.toolGroupFactory;\n};\n\n/**\n * Handles mouse down events.\n *\n * @private\n * @param {jQuery.Event} e Mouse down event\n */\nOO.ui.Toolbar.prototype.onPointerDown = function ( e ) {\n\tvar $closestWidgetToEvent = $( e.target ).closest( '.oo-ui-widget' ),\n\t\t$closestWidgetToToolbar = this.$element.closest( '.oo-ui-widget' );\n\tif ( !$closestWidgetToEvent.length || $closestWidgetToEvent[ 0 ] === $closestWidgetToToolbar[ 0 ] ) {\n\t\treturn false;\n\t}\n};\n\n/**\n * Handle window resize event.\n *\n * @private\n * @param {jQuery.Event} e Window resize event\n */\nOO.ui.Toolbar.prototype.onWindowResize = function () {\n\tthis.$element.toggleClass(\n\t\t'oo-ui-toolbar-narrow',\n\t\tthis.$bar.width() <= this.getNarrowThreshold()\n\t);\n};\n\n/**\n * Get the (lazily-computed) width threshold for applying the oo-ui-toolbar-narrow\n * class.\n *\n * @private\n * @return {number} Width threshold in pixels\n */\nOO.ui.Toolbar.prototype.getNarrowThreshold = function () {\n\tif ( this.narrowThreshold === null ) {\n\t\tthis.narrowThreshold = this.$group.width() + this.$actions.width();\n\t}\n\treturn this.narrowThreshold;\n};\n\n/**\n * Sets up handles and preloads required information for the toolbar to work.\n * This must be called after it is attached to a visible document and before doing anything else.\n */\nOO.ui.Toolbar.prototype.initialize = function () {\n\tif ( !this.initialized ) {\n\t\tthis.initialized = true;\n\t\t$( this.getElementWindow() ).on( 'resize', this.onWindowResizeHandler );\n\t\tthis.onWindowResize();\n\t}\n};\n\n/**\n * Set up the toolbar.\n *\n * The toolbar is set up with a list of toolgroup configurations that specify the type of\n * toolgroup ({@link OO.ui.BarToolGroup bar}, {@link OO.ui.MenuToolGroup menu}, or {@link OO.ui.ListToolGroup list})\n * to add and which tools to include, exclude, promote, or demote within that toolgroup. Please\n * see {@link OO.ui.ToolGroup toolgroups} for more information about including tools in toolgroups.\n *\n * @param {Object.<string,Array>} groups List of toolgroup configurations\n * @param {Array|string} [groups.include] Tools to include in the toolgroup\n * @param {Array|string} [groups.exclude] Tools to exclude from the toolgroup\n * @param {Array|string} [groups.promote] Tools to promote to the beginning of the toolgroup\n * @param {Array|string} [groups.demote] Tools to demote to the end of the toolgroup\n */\nOO.ui.Toolbar.prototype.setup = function ( groups ) {\n\tvar i, len, type, group,\n\t\titems = [],\n\t\tdefaultType = 'bar';\n\n\t// Cleanup previous groups\n\tthis.reset();\n\n\t// Build out new groups\n\tfor ( i = 0, len = groups.length; i < len; i++ ) {\n\t\tgroup = groups[ i ];\n\t\tif ( group.include === '*' ) {\n\t\t\t// Apply defaults to catch-all groups\n\t\t\tif ( group.type === undefined ) {\n\t\t\t\tgroup.type = 'list';\n\t\t\t}\n\t\t\tif ( group.label === undefined ) {\n\t\t\t\tgroup.label = OO.ui.msg( 'ooui-toolbar-more' );\n\t\t\t}\n\t\t}\n\t\t// Check type has been registered\n\t\ttype = this.getToolGroupFactory().lookup( group.type ) ? group.type : defaultType;\n\t\titems.push(\n\t\t\tthis.getToolGroupFactory().create( type, this, group )\n\t\t);\n\t}\n\tthis.addItems( items );\n};\n\n/**\n * Remove all tools and toolgroups from the toolbar.\n */\nOO.ui.Toolbar.prototype.reset = function () {\n\tvar i, len;\n\n\tthis.groups = [];\n\tthis.tools = {};\n\tfor ( i = 0, len = this.items.length; i < len; i++ ) {\n\t\tthis.items[ i ].destroy();\n\t}\n\tthis.clearItems();\n};\n\n/**\n * Destroy the toolbar.\n *\n * Destroying the toolbar removes all event handlers and DOM elements that constitute the toolbar. Call\n * this method whenever you are done using a toolbar.\n */\nOO.ui.Toolbar.prototype.destroy = function () {\n\t$( this.getElementWindow() ).off( 'resize', this.onWindowResizeHandler );\n\tthis.reset();\n\tthis.$element.remove();\n};\n\n/**\n * Check if the tool is available.\n *\n * Available tools are ones that have not yet been added to the toolbar.\n *\n * @param {string} name Symbolic name of tool\n * @return {boolean} Tool is available\n */\nOO.ui.Toolbar.prototype.isToolAvailable = function ( name ) {\n\treturn !this.tools[ name ];\n};\n\n/**\n * Prevent tool from being used again.\n *\n * @param {OO.ui.Tool} tool Tool to reserve\n */\nOO.ui.Toolbar.prototype.reserveTool = function ( tool ) {\n\tthis.tools[ tool.getName() ] = tool;\n};\n\n/**\n * Allow tool to be used again.\n *\n * @param {OO.ui.Tool} tool Tool to release\n */\nOO.ui.Toolbar.prototype.releaseTool = function ( tool ) {\n\tdelete this.tools[ tool.getName() ];\n};\n\n/**\n * Get accelerator label for tool.\n *\n * The OOjs UI library does not contain an accelerator system, but this is the hook for one. To\n * use an accelerator system, subclass the toolbar and override this method, which is meant to return a label\n * that describes the accelerator keys for the tool passed (by symbolic name) to the method.\n *\n * @param {string} name Symbolic name of tool\n * @return {string|undefined} Tool accelerator label if available\n */\nOO.ui.Toolbar.prototype.getToolAccelerator = function () {\n\treturn undefined;\n};\n\n/**\n * Tools, together with {@link OO.ui.ToolGroup toolgroups}, constitute {@link OO.ui.Toolbar toolbars}.\n * Each tool is configured with a static name, title, and icon and is customized with the command to carry\n * out when the tool is selected. Tools must also be registered with a {@link OO.ui.ToolFactory tool factory},\n * which creates the tools on demand.\n *\n * Every Tool subclass must implement two methods:\n *\n * - {@link #onUpdateState}\n * - {@link #onSelect}\n *\n * Tools are added to toolgroups ({@link OO.ui.ListToolGroup ListToolGroup},\n * {@link OO.ui.BarToolGroup BarToolGroup}, or {@link OO.ui.MenuToolGroup MenuToolGroup}), which determine how\n * the tool is displayed in the toolbar. See {@link OO.ui.Toolbar toolbars} for an example.\n *\n * For more information, please see the [OOjs UI documentation on MediaWiki][1].\n * [1]: https://www.mediawiki.org/wiki/OOjs_UI/Toolbars\n *\n * @abstract\n * @class\n * @extends OO.ui.Widget\n * @mixins OO.ui.mixin.IconElement\n * @mixins OO.ui.mixin.FlaggedElement\n * @mixins OO.ui.mixin.TabIndexedElement\n *\n * @constructor\n * @param {OO.ui.ToolGroup} toolGroup\n * @param {Object} [config] Configuration options\n * @cfg {string|Function} [title] Title text or a function that returns text. If this config is omitted, the value of\n *  the {@link #static-title static title} property is used.\n *\n *  The title is used in different ways depending on the type of toolgroup that contains the tool. The\n *  title is used as a tooltip if the tool is part of a {@link OO.ui.BarToolGroup bar} toolgroup, or as the label text if the tool is\n *  part of a {@link OO.ui.ListToolGroup list} or {@link OO.ui.MenuToolGroup menu} toolgroup.\n *\n *  For bar toolgroups, a description of the accelerator key is appended to the title if an accelerator key\n *  is associated with an action by the same name as the tool and accelerator functionality has been added to the application.\n *  To add accelerator key functionality, you must subclass OO.ui.Toolbar and override the {@link OO.ui.Toolbar#getToolAccelerator getToolAccelerator} method.\n */\nOO.ui.Tool = function OoUiTool( toolGroup, config ) {\n\t// Allow passing positional parameters inside the config object\n\tif ( OO.isPlainObject( toolGroup ) && config === undefined ) {\n\t\tconfig = toolGroup;\n\t\ttoolGroup = config.toolGroup;\n\t}\n\n\t// Configuration initialization\n\tconfig = config || {};\n\n\t// Parent constructor\n\tOO.ui.Tool.parent.call( this, config );\n\n\t// Properties\n\tthis.toolGroup = toolGroup;\n\tthis.toolbar = this.toolGroup.getToolbar();\n\tthis.active = false;\n\tthis.$title = $( '<span>' );\n\tthis.$accel = $( '<span>' );\n\tthis.$link = $( '<a>' );\n\tthis.title = null;\n\n\t// Mixin constructors\n\tOO.ui.mixin.IconElement.call( this, config );\n\tOO.ui.mixin.FlaggedElement.call( this, config );\n\tOO.ui.mixin.TabIndexedElement.call( this, $.extend( {}, config, { $tabIndexed: this.$link } ) );\n\n\t// Events\n\tthis.toolbar.connect( this, { updateState: 'onUpdateState' } );\n\n\t// Initialization\n\tthis.$title.addClass( 'oo-ui-tool-title' );\n\tthis.$accel\n\t\t.addClass( 'oo-ui-tool-accel' )\n\t\t.prop( {\n\t\t\t// This may need to be changed if the key names are ever localized,\n\t\t\t// but for now they are essentially written in English\n\t\t\tdir: 'ltr',\n\t\t\tlang: 'en'\n\t\t} );\n\tthis.$link\n\t\t.addClass( 'oo-ui-tool-link' )\n\t\t.append( this.$icon, this.$title, this.$accel )\n\t\t.attr( 'role', 'button' );\n\tthis.$element\n\t\t.data( 'oo-ui-tool', this )\n\t\t.addClass(\n\t\t\t'oo-ui-tool ' + 'oo-ui-tool-name-' +\n\t\t\tthis.constructor.static.name.replace( /^([^\\/]+)\\/([^\\/]+).*$/, '$1-$2' )\n\t\t)\n\t\t.toggleClass( 'oo-ui-tool-with-label', this.constructor.static.displayBothIconAndLabel )\n\t\t.append( this.$link );\n\tthis.setTitle( config.title || this.constructor.static.title );\n};\n\n/* Setup */\n\nOO.inheritClass( OO.ui.Tool, OO.ui.Widget );\nOO.mixinClass( OO.ui.Tool, OO.ui.mixin.IconElement );\nOO.mixinClass( OO.ui.Tool, OO.ui.mixin.FlaggedElement );\nOO.mixinClass( OO.ui.Tool, OO.ui.mixin.TabIndexedElement );\n\n/* Static Properties */\n\n/**\n * @static\n * @inheritdoc\n */\nOO.ui.Tool.static.tagName = 'span';\n\n/**\n * Symbolic name of tool.\n *\n * The symbolic name is used internally to register the tool with a {@link OO.ui.ToolFactory ToolFactory}. It can\n * also be used when adding tools to toolgroups.\n *\n * @abstract\n * @static\n * @inheritable\n * @property {string}\n */\nOO.ui.Tool.static.name = '';\n\n/**\n * Symbolic name of the group.\n *\n * The group name is used to associate tools with each other so that they can be selected later by\n * a {@link OO.ui.ToolGroup toolgroup}.\n *\n * @abstract\n * @static\n * @inheritable\n * @property {string}\n */\nOO.ui.Tool.static.group = '';\n\n/**\n * Tool title text or a function that returns title text. The value of the static property is overridden if the #title config option is used.\n *\n * @abstract\n * @static\n * @inheritable\n * @property {string|Function}\n */\nOO.ui.Tool.static.title = '';\n\n/**\n * Display both icon and label when the tool is used in a {@link OO.ui.BarToolGroup bar} toolgroup.\n * Normally only the icon is displayed, or only the label if no icon is given.\n *\n * @static\n * @inheritable\n * @property {boolean}\n */\nOO.ui.Tool.static.displayBothIconAndLabel = false;\n\n/**\n * Add tool to catch-all groups automatically.\n *\n * A catch-all group, which contains all tools that do not currently belong to a toolgroup,\n * can be included in a toolgroup using the wildcard selector, an asterisk (*).\n *\n * @static\n * @inheritable\n * @property {boolean}\n */\nOO.ui.Tool.static.autoAddToCatchall = true;\n\n/**\n * Add tool to named groups automatically.\n *\n * By default, tools that are configured with a static ‘group’ property are added\n * to that group and will be selected when the symbolic name of the group is specified (e.g., when\n * toolgroups include tools by group name).\n *\n * @static\n * @property {boolean}\n * @inheritable\n */\nOO.ui.Tool.static.autoAddToGroup = true;\n\n/**\n * Check if this tool is compatible with given data.\n *\n * This is a stub that can be overridden to provide support for filtering tools based on an\n * arbitrary piece of information  (e.g., where the cursor is in a document). The implementation\n * must also call this method so that the compatibility check can be performed.\n *\n * @static\n * @inheritable\n * @param {Mixed} data Data to check\n * @return {boolean} Tool can be used with data\n */\nOO.ui.Tool.static.isCompatibleWith = function () {\n\treturn false;\n};\n\n/* Methods */\n\n/**\n * Handle the toolbar state being updated. This method is called when the\n * {@link OO.ui.Toolbar#event-updateState 'updateState' event} is emitted on the\n * {@link OO.ui.Toolbar Toolbar} that uses this tool, and should set the state of this tool\n * depending on application state (usually by calling #setDisabled to enable or disable the tool,\n * or #setActive to mark is as currently in-use or not).\n *\n * This is an abstract method that must be overridden in a concrete subclass.\n *\n * @method\n * @protected\n * @abstract\n */\nOO.ui.Tool.prototype.onUpdateState = null;\n\n/**\n * Handle the tool being selected. This method is called when the user triggers this tool,\n * usually by clicking on its label/icon.\n *\n * This is an abstract method that must be overridden in a concrete subclass.\n *\n * @method\n * @protected\n * @abstract\n */\nOO.ui.Tool.prototype.onSelect = null;\n\n/**\n * Check if the tool is active.\n *\n * Tools become active when their #onSelect or #onUpdateState handlers change them to appear pressed\n * with the #setActive method. Additional CSS is applied to the tool to reflect the active state.\n *\n * @return {boolean} Tool is active\n */\nOO.ui.Tool.prototype.isActive = function () {\n\treturn this.active;\n};\n\n/**\n * Make the tool appear active or inactive.\n *\n * This method should be called within #onSelect or #onUpdateState event handlers to make the tool\n * appear pressed or not.\n *\n * @param {boolean} state Make tool appear active\n */\nOO.ui.Tool.prototype.setActive = function ( state ) {\n\tthis.active = !!state;\n\tif ( this.active ) {\n\t\tthis.$element.addClass( 'oo-ui-tool-active' );\n\t\tthis.setFlags( 'progressive' );\n\t} else {\n\t\tthis.$element.removeClass( 'oo-ui-tool-active' );\n\t\tthis.clearFlags();\n\t}\n};\n\n/**\n * Set the tool #title.\n *\n * @param {string|Function} title Title text or a function that returns text\n * @chainable\n */\nOO.ui.Tool.prototype.setTitle = function ( title ) {\n\tthis.title = OO.ui.resolveMsg( title );\n\tthis.updateTitle();\n\treturn this;\n};\n\n/**\n * Get the tool #title.\n *\n * @return {string} Title text\n */\nOO.ui.Tool.prototype.getTitle = function () {\n\treturn this.title;\n};\n\n/**\n * Get the tool's symbolic name.\n *\n * @return {string} Symbolic name of tool\n */\nOO.ui.Tool.prototype.getName = function () {\n\treturn this.constructor.static.name;\n};\n\n/**\n * Update the title.\n */\nOO.ui.Tool.prototype.updateTitle = function () {\n\tvar titleTooltips = this.toolGroup.constructor.static.titleTooltips,\n\t\taccelTooltips = this.toolGroup.constructor.static.accelTooltips,\n\t\taccel = this.toolbar.getToolAccelerator( this.constructor.static.name ),\n\t\ttooltipParts = [];\n\n\tthis.$title.text( this.title );\n\tthis.$accel.text( accel );\n\n\tif ( titleTooltips && typeof this.title === 'string' && this.title.length ) {\n\t\ttooltipParts.push( this.title );\n\t}\n\tif ( accelTooltips && typeof accel === 'string' && accel.length ) {\n\t\ttooltipParts.push( accel );\n\t}\n\tif ( tooltipParts.length ) {\n\t\tthis.$link.attr( 'title', tooltipParts.join( ' ' ) );\n\t} else {\n\t\tthis.$link.removeAttr( 'title' );\n\t}\n};\n\n/**\n * Destroy tool.\n *\n * Destroying the tool removes all event handlers and the tool’s DOM elements.\n * Call this method whenever you are done using a tool.\n */\nOO.ui.Tool.prototype.destroy = function () {\n\tthis.toolbar.disconnect( this );\n\tthis.$element.remove();\n};\n\n/**\n * ToolGroups are collections of {@link OO.ui.Tool tools} that are used in a {@link OO.ui.Toolbar toolbar}.\n * The type of toolgroup ({@link OO.ui.ListToolGroup list}, {@link OO.ui.BarToolGroup bar}, or {@link OO.ui.MenuToolGroup menu})\n * to which a tool belongs determines how the tool is arranged and displayed in the toolbar. Toolgroups\n * themselves are created on demand with a {@link OO.ui.ToolGroupFactory toolgroup factory}.\n *\n * Toolgroups can contain individual tools, groups of tools, or all available tools, as specified\n * using the `include` config option. See OO.ui.ToolFactory#extract on documentation of the format.\n * The options `exclude`, `promote`, and `demote` support the same formats.\n *\n * See {@link OO.ui.Toolbar toolbars} for a full example. For more information about toolbars in general,\n * please see the [OOjs UI documentation on MediaWiki][1].\n *\n * [1]: https://www.mediawiki.org/wiki/OOjs_UI/Toolbars\n *\n * @abstract\n * @class\n * @extends OO.ui.Widget\n * @mixins OO.ui.mixin.GroupElement\n *\n * @constructor\n * @param {OO.ui.Toolbar} toolbar\n * @param {Object} [config] Configuration options\n * @cfg {Array|string} [include] List of tools to include in the toolgroup, see above.\n * @cfg {Array|string} [exclude] List of tools to exclude from the toolgroup, see above.\n * @cfg {Array|string} [promote] List of tools to promote to the beginning of the toolgroup, see above.\n * @cfg {Array|string} [demote] List of tools to demote to the end of the toolgroup, see above.\n *  This setting is particularly useful when tools have been added to the toolgroup\n *  en masse (e.g., via the catch-all selector).\n */\nOO.ui.ToolGroup = function OoUiToolGroup( toolbar, config ) {\n\t// Allow passing positional parameters inside the config object\n\tif ( OO.isPlainObject( toolbar ) && config === undefined ) {\n\t\tconfig = toolbar;\n\t\ttoolbar = config.toolbar;\n\t}\n\n\t// Configuration initialization\n\tconfig = config || {};\n\n\t// Parent constructor\n\tOO.ui.ToolGroup.parent.call( this, config );\n\n\t// Mixin constructors\n\tOO.ui.mixin.GroupElement.call( this, config );\n\n\t// Properties\n\tthis.toolbar = toolbar;\n\tthis.tools = {};\n\tthis.pressed = null;\n\tthis.autoDisabled = false;\n\tthis.include = config.include || [];\n\tthis.exclude = config.exclude || [];\n\tthis.promote = config.promote || [];\n\tthis.demote = config.demote || [];\n\tthis.onCapturedMouseKeyUpHandler = this.onCapturedMouseKeyUp.bind( this );\n\n\t// Events\n\tthis.$element.on( {\n\t\tmousedown: this.onMouseKeyDown.bind( this ),\n\t\tmouseup: this.onMouseKeyUp.bind( this ),\n\t\tkeydown: this.onMouseKeyDown.bind( this ),\n\t\tkeyup: this.onMouseKeyUp.bind( this ),\n\t\tfocus: this.onMouseOverFocus.bind( this ),\n\t\tblur: this.onMouseOutBlur.bind( this ),\n\t\tmouseover: this.onMouseOverFocus.bind( this ),\n\t\tmouseout: this.onMouseOutBlur.bind( this )\n\t} );\n\tthis.toolbar.getToolFactory().connect( this, { register: 'onToolFactoryRegister' } );\n\tthis.aggregate( { disable: 'itemDisable' } );\n\tthis.connect( this, { itemDisable: 'updateDisabled' } );\n\n\t// Initialization\n\tthis.$group.addClass( 'oo-ui-toolGroup-tools' );\n\tthis.$element\n\t\t.addClass( 'oo-ui-toolGroup' )\n\t\t.append( this.$group );\n\tthis.populate();\n};\n\n/* Setup */\n\nOO.inheritClass( OO.ui.ToolGroup, OO.ui.Widget );\nOO.mixinClass( OO.ui.ToolGroup, OO.ui.mixin.GroupElement );\n\n/* Events */\n\n/**\n * @event update\n */\n\n/* Static Properties */\n\n/**\n * Show labels in tooltips.\n *\n * @static\n * @inheritable\n * @property {boolean}\n */\nOO.ui.ToolGroup.static.titleTooltips = false;\n\n/**\n * Show acceleration labels in tooltips.\n *\n * Note: The OOjs UI library does not include an accelerator system, but does contain\n * a hook for one. To use an accelerator system, subclass the {@link OO.ui.Toolbar toolbar} and\n * override the {@link OO.ui.Toolbar#getToolAccelerator getToolAccelerator} method, which is\n * meant to return a label that describes the accelerator keys for a given tool (e.g., 'Ctrl + M').\n *\n * @static\n * @inheritable\n * @property {boolean}\n */\nOO.ui.ToolGroup.static.accelTooltips = false;\n\n/**\n * Automatically disable the toolgroup when all tools are disabled\n *\n * @static\n * @inheritable\n * @property {boolean}\n */\nOO.ui.ToolGroup.static.autoDisable = true;\n\n/* Methods */\n\n/**\n * @inheritdoc\n */\nOO.ui.ToolGroup.prototype.isDisabled = function () {\n\treturn this.autoDisabled || OO.ui.ToolGroup.parent.prototype.isDisabled.apply( this, arguments );\n};\n\n/**\n * @inheritdoc\n */\nOO.ui.ToolGroup.prototype.updateDisabled = function () {\n\tvar i, item, allDisabled = true;\n\n\tif ( this.constructor.static.autoDisable ) {\n\t\tfor ( i = this.items.length - 1; i >= 0; i-- ) {\n\t\t\titem = this.items[ i ];\n\t\t\tif ( !item.isDisabled() ) {\n\t\t\t\tallDisabled = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.autoDisabled = allDisabled;\n\t}\n\tOO.ui.ToolGroup.parent.prototype.updateDisabled.apply( this, arguments );\n};\n\n/**\n * Handle mouse down and key down events.\n *\n * @protected\n * @param {jQuery.Event} e Mouse down or key down event\n */\nOO.ui.ToolGroup.prototype.onMouseKeyDown = function ( e ) {\n\tif (\n\t\t!this.isDisabled() &&\n\t\t( e.which === OO.ui.MouseButtons.LEFT || e.which === OO.ui.Keys.SPACE || e.which === OO.ui.Keys.ENTER )\n\t) {\n\t\tthis.pressed = this.getTargetTool( e );\n\t\tif ( this.pressed ) {\n\t\t\tthis.pressed.setActive( true );\n\t\t\tthis.getElementDocument().addEventListener( 'mouseup', this.onCapturedMouseKeyUpHandler, true );\n\t\t\tthis.getElementDocument().addEventListener( 'keyup', this.onCapturedMouseKeyUpHandler, true );\n\t\t}\n\t\treturn false;\n\t}\n};\n\n/**\n * Handle captured mouse up and key up events.\n *\n * @protected\n * @param {MouseEvent|KeyboardEvent} e Mouse up or key up event\n */\nOO.ui.ToolGroup.prototype.onCapturedMouseKeyUp = function ( e ) {\n\tthis.getElementDocument().removeEventListener( 'mouseup', this.onCapturedMouseKeyUpHandler, true );\n\tthis.getElementDocument().removeEventListener( 'keyup', this.onCapturedMouseKeyUpHandler, true );\n\t// onMouseKeyUp may be called a second time, depending on where the mouse is when the button is\n\t// released, but since `this.pressed` will no longer be true, the second call will be ignored.\n\tthis.onMouseKeyUp( e );\n};\n\n/**\n * Handle mouse up and key up events.\n *\n * @protected\n * @param {MouseEvent|KeyboardEvent} e Mouse up or key up event\n */\nOO.ui.ToolGroup.prototype.onMouseKeyUp = function ( e ) {\n\tvar tool = this.getTargetTool( e );\n\n\tif (\n\t\t!this.isDisabled() && this.pressed && this.pressed === tool &&\n\t\t( e.which === OO.ui.MouseButtons.LEFT || e.which === OO.ui.Keys.SPACE || e.which === OO.ui.Keys.ENTER )\n\t) {\n\t\tthis.pressed.onSelect();\n\t\tthis.pressed = null;\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t}\n\n\tthis.pressed = null;\n};\n\n/**\n * Handle mouse over and focus events.\n *\n * @protected\n * @param {jQuery.Event} e Mouse over or focus event\n */\nOO.ui.ToolGroup.prototype.onMouseOverFocus = function ( e ) {\n\tvar tool = this.getTargetTool( e );\n\n\tif ( this.pressed && this.pressed === tool ) {\n\t\tthis.pressed.setActive( true );\n\t}\n};\n\n/**\n * Handle mouse out and blur events.\n *\n * @protected\n * @param {jQuery.Event} e Mouse out or blur event\n */\nOO.ui.ToolGroup.prototype.onMouseOutBlur = function ( e ) {\n\tvar tool = this.getTargetTool( e );\n\n\tif ( this.pressed && this.pressed === tool ) {\n\t\tthis.pressed.setActive( false );\n\t}\n};\n\n/**\n * Get the closest tool to a jQuery.Event.\n *\n * Only tool links are considered, which prevents other elements in the tool such as popups from\n * triggering tool group interactions.\n *\n * @private\n * @param {jQuery.Event} e\n * @return {OO.ui.Tool|null} Tool, `null` if none was found\n */\nOO.ui.ToolGroup.prototype.getTargetTool = function ( e ) {\n\tvar tool,\n\t\t$item = $( e.target ).closest( '.oo-ui-tool-link' );\n\n\tif ( $item.length ) {\n\t\ttool = $item.parent().data( 'oo-ui-tool' );\n\t}\n\n\treturn tool && !tool.isDisabled() ? tool : null;\n};\n\n/**\n * Handle tool registry register events.\n *\n * If a tool is registered after the group is created, we must repopulate the list to account for:\n *\n * - a tool being added that may be included\n * - a tool already included being overridden\n *\n * @protected\n * @param {string} name Symbolic name of tool\n */\nOO.ui.ToolGroup.prototype.onToolFactoryRegister = function () {\n\tthis.populate();\n};\n\n/**\n * Get the toolbar that contains the toolgroup.\n *\n * @return {OO.ui.Toolbar} Toolbar that contains the toolgroup\n */\nOO.ui.ToolGroup.prototype.getToolbar = function () {\n\treturn this.toolbar;\n};\n\n/**\n * Add and remove tools based on configuration.\n */\nOO.ui.ToolGroup.prototype.populate = function () {\n\tvar i, len, name, tool,\n\t\ttoolFactory = this.toolbar.getToolFactory(),\n\t\tnames = {},\n\t\tadd = [],\n\t\tremove = [],\n\t\tlist = this.toolbar.getToolFactory().getTools(\n\t\t\tthis.include, this.exclude, this.promote, this.demote\n\t\t);\n\n\t// Build a list of needed tools\n\tfor ( i = 0, len = list.length; i < len; i++ ) {\n\t\tname = list[ i ];\n\t\tif (\n\t\t\t// Tool exists\n\t\t\ttoolFactory.lookup( name ) &&\n\t\t\t// Tool is available or is already in this group\n\t\t\t( this.toolbar.isToolAvailable( name ) || this.tools[ name ] )\n\t\t) {\n\t\t\t// Hack to prevent infinite recursion via ToolGroupTool. We need to reserve the tool before\n\t\t\t// creating it, but we can't call reserveTool() yet because we haven't created the tool.\n\t\t\tthis.toolbar.tools[ name ] = true;\n\t\t\ttool = this.tools[ name ];\n\t\t\tif ( !tool ) {\n\t\t\t\t// Auto-initialize tools on first use\n\t\t\t\tthis.tools[ name ] = tool = toolFactory.create( name, this );\n\t\t\t\ttool.updateTitle();\n\t\t\t}\n\t\t\tthis.toolbar.reserveTool( tool );\n\t\t\tadd.push( tool );\n\t\t\tnames[ name ] = true;\n\t\t}\n\t}\n\t// Remove tools that are no longer needed\n\tfor ( name in this.tools ) {\n\t\tif ( !names[ name ] ) {\n\t\t\tthis.tools[ name ].destroy();\n\t\t\tthis.toolbar.releaseTool( this.tools[ name ] );\n\t\t\tremove.push( this.tools[ name ] );\n\t\t\tdelete this.tools[ name ];\n\t\t}\n\t}\n\tif ( remove.length ) {\n\t\tthis.removeItems( remove );\n\t}\n\t// Update emptiness state\n\tif ( add.length ) {\n\t\tthis.$element.removeClass( 'oo-ui-toolGroup-empty' );\n\t} else {\n\t\tthis.$element.addClass( 'oo-ui-toolGroup-empty' );\n\t}\n\t// Re-add tools (moving existing ones to new locations)\n\tthis.addItems( add );\n\t// Disabled state may depend on items\n\tthis.updateDisabled();\n};\n\n/**\n * Destroy toolgroup.\n */\nOO.ui.ToolGroup.prototype.destroy = function () {\n\tvar name;\n\n\tthis.clearItems();\n\tthis.toolbar.getToolFactory().disconnect( this );\n\tfor ( name in this.tools ) {\n\t\tthis.toolbar.releaseTool( this.tools[ name ] );\n\t\tthis.tools[ name ].disconnect( this ).destroy();\n\t\tdelete this.tools[ name ];\n\t}\n\tthis.$element.remove();\n};\n\n/**\n * A ToolFactory creates tools on demand. All tools ({@link OO.ui.Tool Tools}, {@link OO.ui.PopupTool PopupTools},\n * and {@link OO.ui.ToolGroupTool ToolGroupTools}) must be registered with a tool factory. Tools are\n * registered by their symbolic name. See {@link OO.ui.Toolbar toolbars} for an example.\n *\n * For more information about toolbars in general, please see the [OOjs UI documentation on MediaWiki][1].\n *\n * [1]: https://www.mediawiki.org/wiki/OOjs_UI/Toolbars\n *\n * @class\n * @extends OO.Factory\n * @constructor\n */\nOO.ui.ToolFactory = function OoUiToolFactory() {\n\t// Parent constructor\n\tOO.ui.ToolFactory.parent.call( this );\n};\n\n/* Setup */\n\nOO.inheritClass( OO.ui.ToolFactory, OO.Factory );\n\n/* Methods */\n\n/**\n * Get tools from the factory\n *\n * @param {Array|string} [include] Included tools, see #extract for format\n * @param {Array|string} [exclude] Excluded tools, see #extract for format\n * @param {Array|string} [promote] Promoted tools, see #extract for format\n * @param {Array|string} [demote] Demoted tools, see #extract for format\n * @return {string[]} List of tools\n */\nOO.ui.ToolFactory.prototype.getTools = function ( include, exclude, promote, demote ) {\n\tvar i, len, included, promoted, demoted,\n\t\tauto = [],\n\t\tused = {};\n\n\t// Collect included and not excluded tools\n\tincluded = OO.simpleArrayDifference( this.extract( include ), this.extract( exclude ) );\n\n\t// Promotion\n\tpromoted = this.extract( promote, used );\n\tdemoted = this.extract( demote, used );\n\n\t// Auto\n\tfor ( i = 0, len = included.length; i < len; i++ ) {\n\t\tif ( !used[ included[ i ] ] ) {\n\t\t\tauto.push( included[ i ] );\n\t\t}\n\t}\n\n\treturn promoted.concat( auto ).concat( demoted );\n};\n\n/**\n * Get a flat list of names from a list of names or groups.\n *\n * Normally, `collection` is an array of tool specifications. Tools can be specified in the\n * following ways:\n *\n * - To include an individual tool, use the symbolic name: `{ name: 'tool-name' }` or `'tool-name'`.\n * - To include all tools in a group, use the group name: `{ group: 'group-name' }`. (To assign the\n *   tool to a group, use OO.ui.Tool.static.group.)\n *\n * Alternatively, to include all tools that are not yet assigned to any other toolgroup, use the\n * catch-all selector `'*'`.\n *\n * If `used` is passed, tool names that appear as properties in this object will be considered\n * already assigned, and will not be returned even if specified otherwise. The tool names extracted\n * by this function call will be added as new properties in the object.\n *\n * @private\n * @param {Array|string} collection List of tools, see above\n * @param {Object} [used] Object containing information about used tools, see above\n * @return {string[]} List of extracted tool names\n */\nOO.ui.ToolFactory.prototype.extract = function ( collection, used ) {\n\tvar i, len, item, name, tool,\n\t\tnames = [];\n\n\tcollection = !Array.isArray( collection ) ? [ collection ] : collection;\n\n\tfor ( i = 0, len = collection.length; i < len; i++ ) {\n\t\titem = collection[ i ];\n\t\tif ( item === '*' ) {\n\t\t\tfor ( name in this.registry ) {\n\t\t\t\ttool = this.registry[ name ];\n\t\t\t\tif (\n\t\t\t\t\t// Only add tools by group name when auto-add is enabled\n\t\t\t\t\ttool.static.autoAddToCatchall &&\n\t\t\t\t\t// Exclude already used tools\n\t\t\t\t\t( !used || !used[ name ] )\n\t\t\t\t) {\n\t\t\t\t\tnames.push( name );\n\t\t\t\t\tif ( used ) {\n\t\t\t\t\t\tused[ name ] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Allow plain strings as shorthand for named tools\n\t\t\tif ( typeof item === 'string' ) {\n\t\t\t\titem = { name: item };\n\t\t\t}\n\t\t\tif ( OO.isPlainObject( item ) ) {\n\t\t\t\tif ( item.group ) {\n\t\t\t\t\tfor ( name in this.registry ) {\n\t\t\t\t\t\ttool = this.registry[ name ];\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t// Include tools with matching group\n\t\t\t\t\t\t\ttool.static.group === item.group &&\n\t\t\t\t\t\t\t// Only add tools by group name when auto-add is enabled\n\t\t\t\t\t\t\ttool.static.autoAddToGroup &&\n\t\t\t\t\t\t\t// Exclude already used tools\n\t\t\t\t\t\t\t( !used || !used[ name ] )\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tnames.push( name );\n\t\t\t\t\t\t\tif ( used ) {\n\t\t\t\t\t\t\t\tused[ name ] = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t// Include tools with matching name and exclude already used tools\n\t\t\t\t} else if ( item.name && ( !used || !used[ item.name ] ) ) {\n\t\t\t\t\tnames.push( item.name );\n\t\t\t\t\tif ( used ) {\n\t\t\t\t\t\tused[ item.name ] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn names;\n};\n\n/**\n * ToolGroupFactories create {@link OO.ui.ToolGroup toolgroups} on demand. The toolgroup classes must\n * specify a symbolic name and be registered with the factory. The following classes are registered by\n * default:\n *\n * - {@link OO.ui.BarToolGroup BarToolGroups} (‘bar’)\n * - {@link OO.ui.MenuToolGroup MenuToolGroups} (‘menu’)\n * - {@link OO.ui.ListToolGroup ListToolGroups} (‘list’)\n *\n * See {@link OO.ui.Toolbar toolbars} for an example.\n *\n * For more information about toolbars in general, please see the [OOjs UI documentation on MediaWiki][1].\n *\n * [1]: https://www.mediawiki.org/wiki/OOjs_UI/Toolbars\n *\n * @class\n * @extends OO.Factory\n * @constructor\n */\nOO.ui.ToolGroupFactory = function OoUiToolGroupFactory() {\n\tvar i, l, defaultClasses;\n\t// Parent constructor\n\tOO.Factory.call( this );\n\n\tdefaultClasses = this.constructor.static.getDefaultClasses();\n\n\t// Register default toolgroups\n\tfor ( i = 0, l = defaultClasses.length; i < l; i++ ) {\n\t\tthis.register( defaultClasses[ i ] );\n\t}\n};\n\n/* Setup */\n\nOO.inheritClass( OO.ui.ToolGroupFactory, OO.Factory );\n\n/* Static Methods */\n\n/**\n * Get a default set of classes to be registered on construction.\n *\n * @return {Function[]} Default classes\n */\nOO.ui.ToolGroupFactory.static.getDefaultClasses = function () {\n\treturn [\n\t\tOO.ui.BarToolGroup,\n\t\tOO.ui.ListToolGroup,\n\t\tOO.ui.MenuToolGroup\n\t];\n};\n\n/**\n * Popup tools open a popup window when they are selected from the {@link OO.ui.Toolbar toolbar}. Each popup tool is configured\n * with a static name, title, and icon, as well with as any popup configurations. Unlike other tools, popup tools do not require that developers specify\n * an #onSelect or #onUpdateState method, as these methods have been implemented already.\n *\n *     // Example of a popup tool. When selected, a popup tool displays\n *     // a popup window.\n *     function HelpTool( toolGroup, config ) {\n *        OO.ui.PopupTool.call( this, toolGroup, $.extend( { popup: {\n *            padded: true,\n *            label: 'Help',\n *            head: true\n *        } }, config ) );\n *        this.popup.$body.append( '<p>I am helpful!</p>' );\n *     };\n *     OO.inheritClass( HelpTool, OO.ui.PopupTool );\n *     HelpTool.static.name = 'help';\n *     HelpTool.static.icon = 'help';\n *     HelpTool.static.title = 'Help';\n *     toolFactory.register( HelpTool );\n *\n * For an example of a toolbar that contains a popup tool, see {@link OO.ui.Toolbar toolbars}. For more information about\n * toolbars in genreral, please see the [OOjs UI documentation on MediaWiki][1].\n *\n * [1]: https://www.mediawiki.org/wiki/OOjs_UI/Toolbars\n *\n * @abstract\n * @class\n * @extends OO.ui.Tool\n * @mixins OO.ui.mixin.PopupElement\n *\n * @constructor\n * @param {OO.ui.ToolGroup} toolGroup\n * @param {Object} [config] Configuration options\n */\nOO.ui.PopupTool = function OoUiPopupTool( toolGroup, config ) {\n\t// Allow passing positional parameters inside the config object\n\tif ( OO.isPlainObject( toolGroup ) && config === undefined ) {\n\t\tconfig = toolGroup;\n\t\ttoolGroup = config.toolGroup;\n\t}\n\n\t// Parent constructor\n\tOO.ui.PopupTool.parent.call( this, toolGroup, config );\n\n\t// Mixin constructors\n\tOO.ui.mixin.PopupElement.call( this, config );\n\n\t// Initialization\n\tthis.$element\n\t\t.addClass( 'oo-ui-popupTool' )\n\t\t.append( this.popup.$element );\n};\n\n/* Setup */\n\nOO.inheritClass( OO.ui.PopupTool, OO.ui.Tool );\nOO.mixinClass( OO.ui.PopupTool, OO.ui.mixin.PopupElement );\n\n/* Methods */\n\n/**\n * Handle the tool being selected.\n *\n * @inheritdoc\n */\nOO.ui.PopupTool.prototype.onSelect = function () {\n\tif ( !this.isDisabled() ) {\n\t\tthis.popup.toggle();\n\t}\n\tthis.setActive( false );\n\treturn false;\n};\n\n/**\n * Handle the toolbar state being updated.\n *\n * @inheritdoc\n */\nOO.ui.PopupTool.prototype.onUpdateState = function () {\n\tthis.setActive( false );\n};\n\n/**\n * A ToolGroupTool is a special sort of tool that can contain other {@link OO.ui.Tool tools}\n * and {@link OO.ui.ToolGroup toolgroups}. The ToolGroupTool was specifically designed to be used\n * inside a {@link OO.ui.BarToolGroup bar} toolgroup to provide access to additional tools from\n * the bar item. Included tools will be displayed in a dropdown {@link OO.ui.ListToolGroup list}\n * when the ToolGroupTool is selected.\n *\n *     // Example: ToolGroupTool with two nested tools, 'setting1' and 'setting2', defined elsewhere.\n *\n *     function SettingsTool() {\n *         SettingsTool.parent.apply( this, arguments );\n *     };\n *     OO.inheritClass( SettingsTool, OO.ui.ToolGroupTool );\n *     SettingsTool.static.name = 'settings';\n *     SettingsTool.static.title = 'Change settings';\n *     SettingsTool.static.groupConfig = {\n *         icon: 'settings',\n *         label: 'ToolGroupTool',\n *         include: [  'setting1', 'setting2'  ]\n *     };\n *     toolFactory.register( SettingsTool );\n *\n * For more information, please see the [OOjs UI documentation on MediaWiki][1].\n *\n * Please note that this implementation is subject to change per [T74159] [2].\n *\n * [1]: https://www.mediawiki.org/wiki/OOjs_UI/Toolbars#ToolGroupTool\n * [2]: https://phabricator.wikimedia.org/T74159\n *\n * @abstract\n * @class\n * @extends OO.ui.Tool\n *\n * @constructor\n * @param {OO.ui.ToolGroup} toolGroup\n * @param {Object} [config] Configuration options\n */\nOO.ui.ToolGroupTool = function OoUiToolGroupTool( toolGroup, config ) {\n\t// Allow passing positional parameters inside the config object\n\tif ( OO.isPlainObject( toolGroup ) && config === undefined ) {\n\t\tconfig = toolGroup;\n\t\ttoolGroup = config.toolGroup;\n\t}\n\n\t// Parent constructor\n\tOO.ui.ToolGroupTool.parent.call( this, toolGroup, config );\n\n\t// Properties\n\tthis.innerToolGroup = this.createGroup( this.constructor.static.groupConfig );\n\n\t// Events\n\tthis.innerToolGroup.connect( this, { disable: 'onToolGroupDisable' } );\n\n\t// Initialization\n\tthis.$link.remove();\n\tthis.$element\n\t\t.addClass( 'oo-ui-toolGroupTool' )\n\t\t.append( this.innerToolGroup.$element );\n};\n\n/* Setup */\n\nOO.inheritClass( OO.ui.ToolGroupTool, OO.ui.Tool );\n\n/* Static Properties */\n\n/**\n * Toolgroup configuration.\n *\n * The toolgroup configuration consists of the tools to include, as well as an icon and label\n * to use for the bar item. Tools can be included by symbolic name, group, or with the\n * wildcard selector. Please see {@link OO.ui.ToolGroup toolgroup} for more information.\n *\n * @property {Object.<string,Array>}\n */\nOO.ui.ToolGroupTool.static.groupConfig = {};\n\n/* Methods */\n\n/**\n * Handle the tool being selected.\n *\n * @inheritdoc\n */\nOO.ui.ToolGroupTool.prototype.onSelect = function () {\n\tthis.innerToolGroup.setActive( !this.innerToolGroup.active );\n\treturn false;\n};\n\n/**\n * Synchronize disabledness state of the tool with the inner toolgroup.\n *\n * @private\n * @param {boolean} disabled Element is disabled\n */\nOO.ui.ToolGroupTool.prototype.onToolGroupDisable = function ( disabled ) {\n\tthis.setDisabled( disabled );\n};\n\n/**\n * Handle the toolbar state being updated.\n *\n * @inheritdoc\n */\nOO.ui.ToolGroupTool.prototype.onUpdateState = function () {\n\tthis.setActive( false );\n};\n\n/**\n * Build a {@link OO.ui.ToolGroup toolgroup} from the specified configuration.\n *\n * @param {Object.<string,Array>} group Toolgroup configuration. Please see {@link OO.ui.ToolGroup toolgroup} for\n *  more information.\n * @return {OO.ui.ListToolGroup}\n */\nOO.ui.ToolGroupTool.prototype.createGroup = function ( group ) {\n\tif ( group.include === '*' ) {\n\t\t// Apply defaults to catch-all groups\n\t\tif ( group.label === undefined ) {\n\t\t\tgroup.label = OO.ui.msg( 'ooui-toolbar-more' );\n\t\t}\n\t}\n\n\treturn this.toolbar.getToolGroupFactory().create( 'list', this.toolbar, group );\n};\n\n/**\n * BarToolGroups are one of three types of {@link OO.ui.ToolGroup toolgroups} that are used to\n * create {@link OO.ui.Toolbar toolbars} (the other types of groups are {@link OO.ui.MenuToolGroup MenuToolGroup}\n * and {@link OO.ui.ListToolGroup ListToolGroup}). The {@link OO.ui.Tool tools} in a BarToolGroup are\n * displayed by icon in a single row. The title of the tool is displayed when users move the mouse over\n * the tool.\n *\n * BarToolGroups are created by a {@link OO.ui.ToolGroupFactory tool group factory} when the toolbar is\n * set up.\n *\n *     @example\n *     // Example of a BarToolGroup with two tools\n *     var toolFactory = new OO.ui.ToolFactory();\n *     var toolGroupFactory = new OO.ui.ToolGroupFactory();\n *     var toolbar = new OO.ui.Toolbar( toolFactory, toolGroupFactory );\n *\n *     // We will be placing status text in this element when tools are used\n *     var $area = $( '<p>' ).text( 'Example of a BarToolGroup with two tools.' );\n *\n *     // Define the tools that we're going to place in our toolbar\n *\n *     // Create a class inheriting from OO.ui.Tool\n *     function SearchTool() {\n *         SearchTool.parent.apply( this, arguments );\n *     }\n *     OO.inheritClass( SearchTool, OO.ui.Tool );\n *     // Each tool must have a 'name' (used as an internal identifier, see later) and at least one\n *     // of 'icon' and 'title' (displayed icon and text).\n *     SearchTool.static.name = 'search';\n *     SearchTool.static.icon = 'search';\n *     SearchTool.static.title = 'Search...';\n *     // Defines the action that will happen when this tool is selected (clicked).\n *     SearchTool.prototype.onSelect = function () {\n *         $area.text( 'Search tool clicked!' );\n *         // Never display this tool as \"active\" (selected).\n *         this.setActive( false );\n *     };\n *     SearchTool.prototype.onUpdateState = function () {};\n *     // Make this tool available in our toolFactory and thus our toolbar\n *     toolFactory.register( SearchTool );\n *\n *     // This is a PopupTool. Rather than having a custom 'onSelect' action, it will display a\n *     // little popup window (a PopupWidget).\n *     function HelpTool( toolGroup, config ) {\n *         OO.ui.PopupTool.call( this, toolGroup, $.extend( { popup: {\n *             padded: true,\n *             label: 'Help',\n *             head: true\n *         } }, config ) );\n *         this.popup.$body.append( '<p>I am helpful!</p>' );\n *     }\n *     OO.inheritClass( HelpTool, OO.ui.PopupTool );\n *     HelpTool.static.name = 'help';\n *     HelpTool.static.icon = 'help';\n *     HelpTool.static.title = 'Help';\n *     toolFactory.register( HelpTool );\n *\n *     // Finally define which tools and in what order appear in the toolbar. Each tool may only be\n *     // used once (but not all defined tools must be used).\n *     toolbar.setup( [\n *         {\n *             // 'bar' tool groups display tools by icon only\n *             type: 'bar',\n *             include: [ 'search', 'help' ]\n *         }\n *     ] );\n *\n *     // Create some UI around the toolbar and place it in the document\n *     var frame = new OO.ui.PanelLayout( {\n *         expanded: false,\n *         framed: true\n *     } );\n *     var contentFrame = new OO.ui.PanelLayout( {\n *         expanded: false,\n *         padded: true\n *     } );\n *     frame.$element.append(\n *         toolbar.$element,\n *         contentFrame.$element.append( $area )\n *     );\n *     $( 'body' ).append( frame.$element );\n *\n *     // Here is where the toolbar is actually built. This must be done after inserting it into the\n *     // document.\n *     toolbar.initialize();\n *\n * For more information about how to add tools to a bar tool group, please see {@link OO.ui.ToolGroup toolgroup}.\n * For more information about toolbars in general, please see the [OOjs UI documentation on MediaWiki][1].\n *\n * [1]: https://www.mediawiki.org/wiki/OOjs_UI/Toolbars\n *\n * @class\n * @extends OO.ui.ToolGroup\n *\n * @constructor\n * @param {OO.ui.Toolbar} toolbar\n * @param {Object} [config] Configuration options\n */\nOO.ui.BarToolGroup = function OoUiBarToolGroup( toolbar, config ) {\n\t// Allow passing positional parameters inside the config object\n\tif ( OO.isPlainObject( toolbar ) && config === undefined ) {\n\t\tconfig = toolbar;\n\t\ttoolbar = config.toolbar;\n\t}\n\n\t// Parent constructor\n\tOO.ui.BarToolGroup.parent.call( this, toolbar, config );\n\n\t// Initialization\n\tthis.$element.addClass( 'oo-ui-barToolGroup' );\n};\n\n/* Setup */\n\nOO.inheritClass( OO.ui.BarToolGroup, OO.ui.ToolGroup );\n\n/* Static Properties */\n\nOO.ui.BarToolGroup.static.titleTooltips = true;\n\nOO.ui.BarToolGroup.static.accelTooltips = true;\n\nOO.ui.BarToolGroup.static.name = 'bar';\n\n/**\n * PopupToolGroup is an abstract base class used by both {@link OO.ui.MenuToolGroup MenuToolGroup}\n * and {@link OO.ui.ListToolGroup ListToolGroup} to provide a popup--an overlaid menu or list of tools with an\n * optional icon and label. This class can be used for other base classes that also use this functionality.\n *\n * @abstract\n * @class\n * @extends OO.ui.ToolGroup\n * @mixins OO.ui.mixin.IconElement\n * @mixins OO.ui.mixin.IndicatorElement\n * @mixins OO.ui.mixin.LabelElement\n * @mixins OO.ui.mixin.TitledElement\n * @mixins OO.ui.mixin.ClippableElement\n * @mixins OO.ui.mixin.TabIndexedElement\n *\n * @constructor\n * @param {OO.ui.Toolbar} toolbar\n * @param {Object} [config] Configuration options\n * @cfg {string} [header] Text to display at the top of the popup\n */\nOO.ui.PopupToolGroup = function OoUiPopupToolGroup( toolbar, config ) {\n\t// Allow passing positional parameters inside the config object\n\tif ( OO.isPlainObject( toolbar ) && config === undefined ) {\n\t\tconfig = toolbar;\n\t\ttoolbar = config.toolbar;\n\t}\n\n\t// Configuration initialization\n\tconfig = $.extend( {\n\t\tindicator: toolbar.position === 'bottom' ? 'up' : 'down'\n\t}, config );\n\n\t// Parent constructor\n\tOO.ui.PopupToolGroup.parent.call( this, toolbar, config );\n\n\t// Properties\n\tthis.active = false;\n\tthis.dragging = false;\n\tthis.onBlurHandler = this.onBlur.bind( this );\n\tthis.$handle = $( '<span>' );\n\n\t// Mixin constructors\n\tOO.ui.mixin.IconElement.call( this, config );\n\tOO.ui.mixin.IndicatorElement.call( this, config );\n\tOO.ui.mixin.LabelElement.call( this, config );\n\tOO.ui.mixin.TitledElement.call( this, config );\n\tOO.ui.mixin.ClippableElement.call( this, $.extend( {}, config, { $clippable: this.$group } ) );\n\tOO.ui.mixin.TabIndexedElement.call( this, $.extend( {}, config, { $tabIndexed: this.$handle } ) );\n\n\t// Events\n\tthis.$handle.on( {\n\t\tkeydown: this.onHandleMouseKeyDown.bind( this ),\n\t\tkeyup: this.onHandleMouseKeyUp.bind( this ),\n\t\tmousedown: this.onHandleMouseKeyDown.bind( this ),\n\t\tmouseup: this.onHandleMouseKeyUp.bind( this )\n\t} );\n\n\t// Initialization\n\tthis.$handle\n\t\t.addClass( 'oo-ui-popupToolGroup-handle' )\n\t\t.append( this.$icon, this.$label, this.$indicator );\n\t// If the pop-up should have a header, add it to the top of the toolGroup.\n\t// Note: If this feature is useful for other widgets, we could abstract it into an\n\t// OO.ui.HeaderedElement mixin constructor.\n\tif ( config.header !== undefined ) {\n\t\tthis.$group\n\t\t\t.prepend( $( '<span>' )\n\t\t\t\t.addClass( 'oo-ui-popupToolGroup-header' )\n\t\t\t\t.text( config.header )\n\t\t\t);\n\t}\n\tthis.$element\n\t\t.addClass( 'oo-ui-popupToolGroup' )\n\t\t.prepend( this.$handle );\n};\n\n/* Setup */\n\nOO.inheritClass( OO.ui.PopupToolGroup, OO.ui.ToolGroup );\nOO.mixinClass( OO.ui.PopupToolGroup, OO.ui.mixin.IconElement );\nOO.mixinClass( OO.ui.PopupToolGroup, OO.ui.mixin.IndicatorElement );\nOO.mixinClass( OO.ui.PopupToolGroup, OO.ui.mixin.LabelElement );\nOO.mixinClass( OO.ui.PopupToolGroup, OO.ui.mixin.TitledElement );\nOO.mixinClass( OO.ui.PopupToolGroup, OO.ui.mixin.ClippableElement );\nOO.mixinClass( OO.ui.PopupToolGroup, OO.ui.mixin.TabIndexedElement );\n\n/* Methods */\n\n/**\n * @inheritdoc\n */\nOO.ui.PopupToolGroup.prototype.setDisabled = function () {\n\t// Parent method\n\tOO.ui.PopupToolGroup.parent.prototype.setDisabled.apply( this, arguments );\n\n\tif ( this.isDisabled() && this.isElementAttached() ) {\n\t\tthis.setActive( false );\n\t}\n};\n\n/**\n * Handle focus being lost.\n *\n * The event is actually generated from a mouseup/keyup, so it is not a normal blur event object.\n *\n * @protected\n * @param {MouseEvent|KeyboardEvent} e Mouse up or key up event\n */\nOO.ui.PopupToolGroup.prototype.onBlur = function ( e ) {\n\t// Only deactivate when clicking outside the dropdown element\n\tif ( $( e.target ).closest( '.oo-ui-popupToolGroup' )[ 0 ] !== this.$element[ 0 ] ) {\n\t\tthis.setActive( false );\n\t}\n};\n\n/**\n * @inheritdoc\n */\nOO.ui.PopupToolGroup.prototype.onMouseKeyUp = function ( e ) {\n\t// Only close toolgroup when a tool was actually selected\n\tif (\n\t\t!this.isDisabled() && this.pressed && this.pressed === this.getTargetTool( e ) &&\n\t\t( e.which === OO.ui.MouseButtons.LEFT || e.which === OO.ui.Keys.SPACE || e.which === OO.ui.Keys.ENTER )\n\t) {\n\t\tthis.setActive( false );\n\t}\n\treturn OO.ui.PopupToolGroup.parent.prototype.onMouseKeyUp.call( this, e );\n};\n\n/**\n * Handle mouse up and key up events.\n *\n * @protected\n * @param {jQuery.Event} e Mouse up or key up event\n */\nOO.ui.PopupToolGroup.prototype.onHandleMouseKeyUp = function ( e ) {\n\tif (\n\t\t!this.isDisabled() &&\n\t\t( e.which === OO.ui.MouseButtons.LEFT || e.which === OO.ui.Keys.SPACE || e.which === OO.ui.Keys.ENTER )\n\t) {\n\t\treturn false;\n\t}\n};\n\n/**\n * Handle mouse down and key down events.\n *\n * @protected\n * @param {jQuery.Event} e Mouse down or key down event\n */\nOO.ui.PopupToolGroup.prototype.onHandleMouseKeyDown = function ( e ) {\n\tif (\n\t\t!this.isDisabled() &&\n\t\t( e.which === OO.ui.MouseButtons.LEFT || e.which === OO.ui.Keys.SPACE || e.which === OO.ui.Keys.ENTER )\n\t) {\n\t\tthis.setActive( !this.active );\n\t\treturn false;\n\t}\n};\n\n/**\n * Switch into 'active' mode.\n *\n * When active, the popup is visible. A mouseup event anywhere in the document will trigger\n * deactivation.\n *\n * @param {boolean} value The active state to set\n */\nOO.ui.PopupToolGroup.prototype.setActive = function ( value ) {\n\tvar containerWidth, containerLeft;\n\tvalue = !!value;\n\tif ( this.active !== value ) {\n\t\tthis.active = value;\n\t\tif ( value ) {\n\t\t\tthis.getElementDocument().addEventListener( 'mouseup', this.onBlurHandler, true );\n\t\t\tthis.getElementDocument().addEventListener( 'keyup', this.onBlurHandler, true );\n\n\t\t\tthis.$clippable.css( 'left', '' );\n\t\t\t// Try anchoring the popup to the left first\n\t\t\tthis.$element.addClass( 'oo-ui-popupToolGroup-active oo-ui-popupToolGroup-left' );\n\t\t\tthis.toggleClipping( true );\n\t\t\tif ( this.isClippedHorizontally() ) {\n\t\t\t\t// Anchoring to the left caused the popup to clip, so anchor it to the right instead\n\t\t\t\tthis.toggleClipping( false );\n\t\t\t\tthis.$element\n\t\t\t\t\t.removeClass( 'oo-ui-popupToolGroup-left' )\n\t\t\t\t\t.addClass( 'oo-ui-popupToolGroup-right' );\n\t\t\t\tthis.toggleClipping( true );\n\t\t\t}\n\t\t\tif ( this.isClippedHorizontally() ) {\n\t\t\t\t// Anchoring to the right also caused the popup to clip, so just make it fill the container\n\t\t\t\tcontainerWidth = this.$clippableScrollableContainer.width();\n\t\t\t\tcontainerLeft = this.$clippableScrollableContainer.offset().left;\n\n\t\t\t\tthis.toggleClipping( false );\n\t\t\t\tthis.$element.removeClass( 'oo-ui-popupToolGroup-right' );\n\n\t\t\t\tthis.$clippable.css( {\n\t\t\t\t\tleft: -( this.$element.offset().left - containerLeft ),\n\t\t\t\t\twidth: containerWidth\n\t\t\t\t} );\n\t\t\t}\n\t\t} else {\n\t\t\tthis.getElementDocument().removeEventListener( 'mouseup', this.onBlurHandler, true );\n\t\t\tthis.getElementDocument().removeEventListener( 'keyup', this.onBlurHandler, true );\n\t\t\tthis.$element.removeClass(\n\t\t\t\t'oo-ui-popupToolGroup-active oo-ui-popupToolGroup-left  oo-ui-popupToolGroup-right'\n\t\t\t);\n\t\t\tthis.toggleClipping( false );\n\t\t}\n\t}\n};\n\n/**\n * ListToolGroups are one of three types of {@link OO.ui.ToolGroup toolgroups} that are used to\n * create {@link OO.ui.Toolbar toolbars} (the other types of groups are {@link OO.ui.MenuToolGroup MenuToolGroup}\n * and {@link OO.ui.BarToolGroup BarToolGroup}). The {@link OO.ui.Tool tools} in a ListToolGroup are displayed\n * by label in a dropdown menu. The title of the tool is used as the label text. The menu itself can be configured\n * with a label, icon, indicator, header, and title.\n *\n * ListToolGroups can be configured to be expanded and collapsed. Collapsed lists will have a ‘More’ option that\n * users can select to see the full list of tools. If a collapsed toolgroup is expanded, a ‘Fewer’ option permits\n * users to collapse the list again.\n *\n * ListToolGroups are created by a {@link OO.ui.ToolGroupFactory toolgroup factory} when the toolbar is set up. The factory\n * requires the ListToolGroup's symbolic name, 'list', which is specified along with the other configurations. For more\n * information about how to add tools to a ListToolGroup, please see {@link OO.ui.ToolGroup toolgroup}.\n *\n *     @example\n *     // Example of a ListToolGroup\n *     var toolFactory = new OO.ui.ToolFactory();\n *     var toolGroupFactory = new OO.ui.ToolGroupFactory();\n *     var toolbar = new OO.ui.Toolbar( toolFactory, toolGroupFactory );\n *\n *     // Configure and register two tools\n *     function SettingsTool() {\n *         SettingsTool.parent.apply( this, arguments );\n *     }\n *     OO.inheritClass( SettingsTool, OO.ui.Tool );\n *     SettingsTool.static.name = 'settings';\n *     SettingsTool.static.icon = 'settings';\n *     SettingsTool.static.title = 'Change settings';\n *     SettingsTool.prototype.onSelect = function () {\n *         this.setActive( false );\n *     };\n *     SettingsTool.prototype.onUpdateState = function () {};\n *     toolFactory.register( SettingsTool );\n *     // Register two more tools, nothing interesting here\n *     function StuffTool() {\n *         StuffTool.parent.apply( this, arguments );\n *     }\n *     OO.inheritClass( StuffTool, OO.ui.Tool );\n *     StuffTool.static.name = 'stuff';\n *     StuffTool.static.icon = 'search';\n *     StuffTool.static.title = 'Change the world';\n *     StuffTool.prototype.onSelect = function () {\n *         this.setActive( false );\n *     };\n *     StuffTool.prototype.onUpdateState = function () {};\n *     toolFactory.register( StuffTool );\n *     toolbar.setup( [\n *         {\n *             // Configurations for list toolgroup.\n *             type: 'list',\n *             label: 'ListToolGroup',\n *             icon: 'ellipsis',\n *             title: 'This is the title, displayed when user moves the mouse over the list toolgroup',\n *             header: 'This is the header',\n *             include: [ 'settings', 'stuff' ],\n *             allowCollapse: ['stuff']\n *         }\n *     ] );\n *\n *     // Create some UI around the toolbar and place it in the document\n *     var frame = new OO.ui.PanelLayout( {\n *         expanded: false,\n *         framed: true\n *     } );\n *     frame.$element.append(\n *         toolbar.$element\n *     );\n *     $( 'body' ).append( frame.$element );\n *     // Build the toolbar. This must be done after the toolbar has been appended to the document.\n *     toolbar.initialize();\n *\n * For more information about toolbars in general, please see the [OOjs UI documentation on MediaWiki][1].\n *\n * [1]: https://www.mediawiki.org/wiki/OOjs_UI/Toolbars\n *\n * @class\n * @extends OO.ui.PopupToolGroup\n *\n * @constructor\n * @param {OO.ui.Toolbar} toolbar\n * @param {Object} [config] Configuration options\n * @cfg {Array} [allowCollapse] Allow the specified tools to be collapsed. By default, collapsible tools\n *  will only be displayed if users click the ‘More’ option displayed at the bottom of the list. If\n *  the list is expanded, a ‘Fewer’ option permits users to collapse the list again. Any tools that\n *  are included in the toolgroup, but are not designated as collapsible, will always be displayed.\n *  To open a collapsible list in its expanded state, set #expanded to 'true'.\n * @cfg {Array} [forceExpand] Expand the specified tools. All other tools will be designated as collapsible.\n *  Unless #expanded is set to true, the collapsible tools will be collapsed when the list is first opened.\n * @cfg {boolean} [expanded=false] Expand collapsible tools. This config is only relevant if tools have\n *  been designated as collapsible. When expanded is set to true, all tools in the group will be displayed\n *  when the list is first opened. Users can collapse the list with a ‘Fewer’ option at the bottom.\n */\nOO.ui.ListToolGroup = function OoUiListToolGroup( toolbar, config ) {\n\t// Allow passing positional parameters inside the config object\n\tif ( OO.isPlainObject( toolbar ) && config === undefined ) {\n\t\tconfig = toolbar;\n\t\ttoolbar = config.toolbar;\n\t}\n\n\t// Configuration initialization\n\tconfig = config || {};\n\n\t// Properties (must be set before parent constructor, which calls #populate)\n\tthis.allowCollapse = config.allowCollapse;\n\tthis.forceExpand = config.forceExpand;\n\tthis.expanded = config.expanded !== undefined ? config.expanded : false;\n\tthis.collapsibleTools = [];\n\n\t// Parent constructor\n\tOO.ui.ListToolGroup.parent.call( this, toolbar, config );\n\n\t// Initialization\n\tthis.$element.addClass( 'oo-ui-listToolGroup' );\n};\n\n/* Setup */\n\nOO.inheritClass( OO.ui.ListToolGroup, OO.ui.PopupToolGroup );\n\n/* Static Properties */\n\nOO.ui.ListToolGroup.static.name = 'list';\n\n/* Methods */\n\n/**\n * @inheritdoc\n */\nOO.ui.ListToolGroup.prototype.populate = function () {\n\tvar i, len, allowCollapse = [];\n\n\tOO.ui.ListToolGroup.parent.prototype.populate.call( this );\n\n\t// Update the list of collapsible tools\n\tif ( this.allowCollapse !== undefined ) {\n\t\tallowCollapse = this.allowCollapse;\n\t} else if ( this.forceExpand !== undefined ) {\n\t\tallowCollapse = OO.simpleArrayDifference( Object.keys( this.tools ), this.forceExpand );\n\t}\n\n\tthis.collapsibleTools = [];\n\tfor ( i = 0, len = allowCollapse.length; i < len; i++ ) {\n\t\tif ( this.tools[ allowCollapse[ i ] ] !== undefined ) {\n\t\t\tthis.collapsibleTools.push( this.tools[ allowCollapse[ i ] ] );\n\t\t}\n\t}\n\n\t// Keep at the end, even when tools are added\n\tthis.$group.append( this.getExpandCollapseTool().$element );\n\n\tthis.getExpandCollapseTool().toggle( this.collapsibleTools.length !== 0 );\n\tthis.updateCollapsibleState();\n};\n\n/**\n * Get the expand/collapse tool for this group\n *\n * @return {OO.ui.Tool} Expand collapse tool\n */\nOO.ui.ListToolGroup.prototype.getExpandCollapseTool = function () {\n\tvar ExpandCollapseTool;\n\tif ( this.expandCollapseTool === undefined ) {\n\t\tExpandCollapseTool = function () {\n\t\t\tExpandCollapseTool.parent.apply( this, arguments );\n\t\t};\n\n\t\tOO.inheritClass( ExpandCollapseTool, OO.ui.Tool );\n\n\t\tExpandCollapseTool.prototype.onSelect = function () {\n\t\t\tthis.toolGroup.expanded = !this.toolGroup.expanded;\n\t\t\tthis.toolGroup.updateCollapsibleState();\n\t\t\tthis.setActive( false );\n\t\t};\n\t\tExpandCollapseTool.prototype.onUpdateState = function () {\n\t\t\t// Do nothing. Tool interface requires an implementation of this function.\n\t\t};\n\n\t\tExpandCollapseTool.static.name = 'more-fewer';\n\n\t\tthis.expandCollapseTool = new ExpandCollapseTool( this );\n\t}\n\treturn this.expandCollapseTool;\n};\n\n/**\n * @inheritdoc\n */\nOO.ui.ListToolGroup.prototype.onMouseKeyUp = function ( e ) {\n\t// Do not close the popup when the user wants to show more/fewer tools\n\tif (\n\t\t$( e.target ).closest( '.oo-ui-tool-name-more-fewer' ).length &&\n\t\t( e.which === OO.ui.MouseButtons.LEFT || e.which === OO.ui.Keys.SPACE || e.which === OO.ui.Keys.ENTER )\n\t) {\n\t\t// HACK: Prevent the popup list from being hidden. Skip the PopupToolGroup implementation (which\n\t\t// hides the popup list when a tool is selected) and call ToolGroup's implementation directly.\n\t\treturn OO.ui.ListToolGroup.parent.parent.prototype.onMouseKeyUp.call( this, e );\n\t} else {\n\t\treturn OO.ui.ListToolGroup.parent.prototype.onMouseKeyUp.call( this, e );\n\t}\n};\n\nOO.ui.ListToolGroup.prototype.updateCollapsibleState = function () {\n\tvar i, len;\n\n\tthis.getExpandCollapseTool()\n\t\t.setIcon( this.expanded ? 'collapse' : 'expand' )\n\t\t.setTitle( OO.ui.msg( this.expanded ? 'ooui-toolgroup-collapse' : 'ooui-toolgroup-expand' ) );\n\n\tfor ( i = 0, len = this.collapsibleTools.length; i < len; i++ ) {\n\t\tthis.collapsibleTools[ i ].toggle( this.expanded );\n\t}\n};\n\n/**\n * MenuToolGroups are one of three types of {@link OO.ui.ToolGroup toolgroups} that are used to\n * create {@link OO.ui.Toolbar toolbars} (the other types of groups are {@link OO.ui.BarToolGroup BarToolGroup}\n * and {@link OO.ui.ListToolGroup ListToolGroup}). MenuToolGroups contain selectable {@link OO.ui.Tool tools},\n * which are displayed by label in a dropdown menu. The tool's title is used as the label text, and the\n * menu label is updated to reflect which tool or tools are currently selected. If no tools are selected,\n * the menu label is empty. The menu can be configured with an indicator, icon, title, and/or header.\n *\n * MenuToolGroups are created by a {@link OO.ui.ToolGroupFactory tool group factory} when the toolbar\n * is set up.\n *\n *     @example\n *     // Example of a MenuToolGroup\n *     var toolFactory = new OO.ui.ToolFactory();\n *     var toolGroupFactory = new OO.ui.ToolGroupFactory();\n *     var toolbar = new OO.ui.Toolbar( toolFactory, toolGroupFactory );\n *\n *     // We will be placing status text in this element when tools are used\n *     var $area = $( '<p>' ).text( 'An example of a MenuToolGroup. Select a tool from the dropdown menu.' );\n *\n *     // Define the tools that we're going to place in our toolbar\n *\n *     function SettingsTool() {\n *         SettingsTool.parent.apply( this, arguments );\n *         this.reallyActive = false;\n *     }\n *     OO.inheritClass( SettingsTool, OO.ui.Tool );\n *     SettingsTool.static.name = 'settings';\n *     SettingsTool.static.icon = 'settings';\n *     SettingsTool.static.title = 'Change settings';\n *     SettingsTool.prototype.onSelect = function () {\n *         $area.text( 'Settings tool clicked!' );\n *         // Toggle the active state on each click\n *         this.reallyActive = !this.reallyActive;\n *         this.setActive( this.reallyActive );\n *         // To update the menu label\n *         this.toolbar.emit( 'updateState' );\n *     };\n *     SettingsTool.prototype.onUpdateState = function () {};\n *     toolFactory.register( SettingsTool );\n *\n *     function StuffTool() {\n *         StuffTool.parent.apply( this, arguments );\n *         this.reallyActive = false;\n *     }\n *     OO.inheritClass( StuffTool, OO.ui.Tool );\n *     StuffTool.static.name = 'stuff';\n *     StuffTool.static.icon = 'ellipsis';\n *     StuffTool.static.title = 'More stuff';\n *     StuffTool.prototype.onSelect = function () {\n *         $area.text( 'More stuff tool clicked!' );\n *         // Toggle the active state on each click\n *         this.reallyActive = !this.reallyActive;\n *         this.setActive( this.reallyActive );\n *         // To update the menu label\n *         this.toolbar.emit( 'updateState' );\n *     };\n *     StuffTool.prototype.onUpdateState = function () {};\n *     toolFactory.register( StuffTool );\n *\n *     // Finally define which tools and in what order appear in the toolbar. Each tool may only be\n *     // used once (but not all defined tools must be used).\n *     toolbar.setup( [\n *         {\n *             type: 'menu',\n *             header: 'This is the (optional) header',\n *             title: 'This is the (optional) title',\n *             include: [ 'settings', 'stuff' ]\n *         }\n *     ] );\n *\n *     // Create some UI around the toolbar and place it in the document\n *     var frame = new OO.ui.PanelLayout( {\n *         expanded: false,\n *         framed: true\n *     } );\n *     var contentFrame = new OO.ui.PanelLayout( {\n *         expanded: false,\n *         padded: true\n *     } );\n *     frame.$element.append(\n *         toolbar.$element,\n *         contentFrame.$element.append( $area )\n *     );\n *     $( 'body' ).append( frame.$element );\n *\n *     // Here is where the toolbar is actually built. This must be done after inserting it into the\n *     // document.\n *     toolbar.initialize();\n *     toolbar.emit( 'updateState' );\n *\n * For more information about how to add tools to a MenuToolGroup, please see {@link OO.ui.ToolGroup toolgroup}.\n * For more information about toolbars in general, please see the [OOjs UI documentation on MediaWiki] [1].\n *\n * [1]: https://www.mediawiki.org/wiki/OOjs_UI/Toolbars\n *\n * @class\n * @extends OO.ui.PopupToolGroup\n *\n * @constructor\n * @param {OO.ui.Toolbar} toolbar\n * @param {Object} [config] Configuration options\n */\nOO.ui.MenuToolGroup = function OoUiMenuToolGroup( toolbar, config ) {\n\t// Allow passing positional parameters inside the config object\n\tif ( OO.isPlainObject( toolbar ) && config === undefined ) {\n\t\tconfig = toolbar;\n\t\ttoolbar = config.toolbar;\n\t}\n\n\t// Configuration initialization\n\tconfig = config || {};\n\n\t// Parent constructor\n\tOO.ui.MenuToolGroup.parent.call( this, toolbar, config );\n\n\t// Events\n\tthis.toolbar.connect( this, { updateState: 'onUpdateState' } );\n\n\t// Initialization\n\tthis.$element.addClass( 'oo-ui-menuToolGroup' );\n};\n\n/* Setup */\n\nOO.inheritClass( OO.ui.MenuToolGroup, OO.ui.PopupToolGroup );\n\n/* Static Properties */\n\nOO.ui.MenuToolGroup.static.name = 'menu';\n\n/* Methods */\n\n/**\n * Handle the toolbar state being updated.\n *\n * When the state changes, the title of each active item in the menu will be joined together and\n * used as a label for the group. The label will be empty if none of the items are active.\n *\n * @private\n */\nOO.ui.MenuToolGroup.prototype.onUpdateState = function () {\n\tvar name,\n\t\tlabelTexts = [];\n\n\tfor ( name in this.tools ) {\n\t\tif ( this.tools[ name ].isActive() ) {\n\t\t\tlabelTexts.push( this.tools[ name ].getTitle() );\n\t\t}\n\t}\n\n\tthis.setLabel( labelTexts.join( ', ' ) || ' ' );\n};\n\n}( OO ) );\n"]}