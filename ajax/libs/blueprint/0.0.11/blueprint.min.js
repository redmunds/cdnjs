!function(exports){var merge=function(t){for(var e=1;e<arguments.length;e++)for(var r in arguments[e])t[r]=arguments[e][r];return t},Blueprint=function(){};Blueprint.prototype.init=function(){this.emit("init")},Blueprint.prototype.extend=function(t){return merge(this,t)},Blueprint.prototype.toObject=function(){return merge({},this)},Blueprint.extend=function(name){this.emit("extend:before",arguments);var js="function "+name+"(){this.init.apply(this,arguments)};",ctor=eval(js+name),parents=[this];ctor.prototype=Object.create(parents[0].prototype);for(var i=1;i<arguments.length;i+=1){var proto=arguments[i];"function"==typeof proto&&(parents.push(proto),proto=proto.prototype),merge(ctor.prototype,proto)}for(var i=0;i<parents.length;i+=1)merge(ctor,parents[i]);return ctor.prototype.constructor=ctor,ctor.prototype.constructor.parents=parents,this.emit("extend:after",ctor),ctor},Blueprint.Events={on:function(t,e){return this._listeners||(this._listeners={}),this._listeners[t]||(this._listeners[t]=[]),this._listeners[t].push(e),this},off:function(t,e){if(!this._listeners)return this;if(!this._listeners[t])return this;for(var r=0;-1!==(r=this._listeners[t].indexOf(e));)this._listeners[t].splice(r,1);return this},emit:function(t){if(!this._listeners)return this;if(!this._listeners[t])return this;for(var e=[].slice.call(arguments,1),r=0;r<this._listeners[t].length;r+=1)this._listeners[t][r].apply(this,e);return this}},merge(Blueprint.prototype,Blueprint.Events),merge(Blueprint,Blueprint.Events);var Model=Blueprint.extend("Model",{save:function(){return this.constructor.datastore().save(this),this},load:function(){return this.constructor.datastore().load(this),this},remove:function(){return this.constructor.datastore().remove(this),this}});Model.find=function(t){return this.datastore().find(this,t)},Model.datastore=function(t){if(0==arguments.length){var t=this.prototype._datastore;if(!t)throw new Error("No datastore has been assigned");return t}return null===t?delete this.prototype._datastore:this.prototype._datastore=t,this};var Datastore=Blueprint.extend("Datastore",{init:function(t){this.map=t||{},Datastore.__id=0},key:function(t){return t.constructor.name+"."+t.id},save:function(t){return t.id||(Datastore.__id+=1,t.id=Datastore.__id),this.map[this.key(t)]=t.toObject(),t.emit("saved"),this},load:function(t){var e=this.map[this.key(t)];if(!e){var r=new Error("Unable to load model: not found");return t.emit("error",r)}return t.extend(e),t.emit("loaded"),this},remove:function(t){return delete this.map[this.key(t)],t.emit("removed"),this}});exports.Blueprint=Blueprint,exports.Model=Model,exports.Datastore=Datastore}("undefined"==typeof exports?this.blueprint={}:exports);
//# sourceMappingURL=blueprint.min.js.map