/*!
*  angular-mapboxgl-directive 0.26.0 2017-01-19
*  An AngularJS directive for Mapbox GL
*  git: git+https://github.com/Naimikan/angular-mapboxgl-directive.git
*/
!function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){!function(a,b){"use strict";a.module("mapboxgl-directive",[]).directive("mapboxgl",["$q","mapboxglUtils","mapboxglConstants","mapboxglEventsUtils","mapboxglMapsData",function(c,d,e,f,g){function h(b){a.extend(this,{_mapboxGlMap:c.defer(),_geojsonObjects:[],_imageObjects:[],_videoObjects:[],_markerObjects:[],_persistentGeojson:e.map.defaultPersistentGeojson,_persistentImage:e.map.defaultPersistentImage,_persistentVideo:e.map.defaultPersistentVideo,_elementDOM:null,getMap:function(){return this._mapboxGlMap.promise},getMapboxGlScope:function(){return b},getDOMElement:function(){return this._elementDOM},setDOMElement:function(a){this._elementDOM=a},getGeojsonObjects:function(){return this._geojsonObjects},addGeojsonObject:function(a){this._geojsonObjects.push(a)},removeGeojsonObjects:function(){this._geojsonObjects=[]},getImageObjects:function(){return this._imageObjects},addImageObject:function(a){this._imageObjects.push(a)},removeImageObjects:function(){this._imageObjects=[]},getVideoObjects:function(){return this._videoObjects},addVideoObject:function(a){this._videoObjects.push(a)},removeVideoObjects:function(){this._videoObjects=[]},getMarkerObjects:function(){return this._markerObjects},addMarkerObject:function(a){this._markerObjects.push(a)},removeMarkerObjects:function(){this._markerObjects=[]},isGeojsonPersistent:function(){return this._persistentGeojson},setPersistentGeojson:function(a){this._persistentGeojson=a},isImagePersistent:function(){return this._persistentImage},setPersistentImage:function(a){this._persistentImage=a},isVideoPersistent:function(){return this._persistentVideo},setPersistentVideo:function(a){this._persistentVideo=a},changeLoadingMap:function(a){a?this._elementDOM.hasClass("angular-mapboxgl-map-loading")||(this.getMap().then(function(a){a.getCanvas().style.opacity=.25}),this._elementDOM.addClass("angular-mapboxgl-map-loading")):this._elementDOM.hasClass("angular-mapboxgl-map-loading")&&(this.getMap().then(function(a){a.getCanvas().style.opacity=1}),this._elementDOM.removeClass("angular-mapboxgl-map-loading"))}}),this.getMap=function(){return this._mapboxGlMap.promise},this.getMapboxGlScope=function(){return b},this.getDOMElement=function(){return this._elementDOM},this.setDOMElement=function(a){this._elementDOM=a},this.getGeojsonObjects=function(){return this._geojsonObjects},this.addGeojsonObject=function(a){this._geojsonObjects.push(a)},this.removeGeojsonObjects=function(){this._geojsonObjects=[]},this.getImageObjects=function(){return this._imageObjects},this.addImageObject=function(a){this._imageObjects.push(a)},this.removeImageObjects=function(){this._imageObjects=[]},this.getVideoObjects=function(){return this._videoObjects},this.addVideoObject=function(a){this._videoObjects.push(a)},this.removeVideoObjects=function(){this._videoObjects=[]},this.getMarkerObjects=function(){return this._markerObjects},this.addMarkerObject=function(a){this._markerObjects.push(a)},this.removeMarkerObjects=function(){this._markerObjects=[]},this.isGeojsonPersistent=function(){return this._persistentGeojson},this.setPersistentGeojson=function(a){this._persistentGeojson=a},this.isImagePersistent=function(){return this._persistentImage},this.setPersistentImage=function(a){this._persistentImage=a},this.isVideoPersistent=function(){return this._persistentVideo},this.setPersistentVideo=function(a){this._persistentVideo=a},this.changeLoadingMap=function(a){a?this._elementDOM.hasClass("angular-mapboxgl-map-loading")||(this.getMap().then(function(a){a.getCanvas().style.opacity=.25}),this._elementDOM.addClass("angular-mapboxgl-map-loading")):this._elementDOM.hasClass("angular-mapboxgl-map-loading")&&(this.getMap().then(function(a){a.getCanvas().style.opacity=1}),this._elementDOM.removeClass("angular-mapboxgl-map-loading"))}}function i(c,h,i,j){if(!b)throw new Error("Mapbox GL does not included");if(!b.accessToken){if(!(a.isDefined(i.accessToken)&&i.accessToken.length>0))throw new Error("Mapbox access token does not defined");b.accessToken=i.accessToken}if(!b.supported())throw new Error("Your browser does not support Mapbox GL");j.setDOMElement(h),c.mapboxglMapId=i.id?i.id:d.generateMapId(),h.attr("id",c.mapboxglMapId);var k=function(a){isNaN(i.width)?h.css("width",i.width):h.css("width",i.width+"px"),a.resize()},l=function(a){isNaN(i.height)?h.css("height",i.height):h.css("height",i.height+"px"),a.resize()},m=function(b){a.isDefined(i.language)&&b.setLayoutProperty("country-label-lg","text-field","{name_"+i.language+"}")};a.isDefined(c.persistentGeojson)&&"boolean"==typeof c.persistentGeojson&&(j.setPersistentGeojson(c.persistentGeojson),c.$watch(function(){return c.persistentGeojson},function(){if("boolean"!=typeof c.persistentGeojson)throw new Error("Invalid parameter");j.setPersistentGeojson(c.persistentGeojson)})),a.isDefined(c.persistentImage)&&"boolean"==typeof c.persistentImage&&(j.setPersistentImage(c.persistentImage),c.$watch(function(){return c.persistentImage},function(){if("boolean"!=typeof c.persistentImage)throw new Error("Invalid parameter");j.setPersistentImage(c.persistentImage)})),a.isDefined(c.persistentVideo)&&"boolean"==typeof c.persistentVideo&&(j.setPersistentVideo(c.persistentVideo),c.$watch(function(){return c.persistentVideo},function(){if("boolean"!=typeof c.persistentVideo)throw new Error("Invalid parameter");j.setPersistentVideo(c.persistentVideo)}));var n=new b.Map({container:c.mapboxglMapId,style:c.glStyle||e.map.defaultStyle,center:e.map.defaultCenter,hash:a.isDefined(i.hash)?d.stringToBoolean(i.hash):e.map.defaultHash,bearingSnap:a.isDefined(i.bearingSnap)?d.stringToNumber(i.bearingSnap):e.map.defaultBearingSnap,failIfMajorPerformanceCaveat:a.isDefined(i.failIfMajorPerformanceCaveat)?d.stringToBoolean(i.failIfMajorPerformanceCaveat):e.map.defaultFailIfMajorPerformanceCaveat,preserveDrawingBuffer:a.isDefined(i.preserveDrawingBuffer)?d.stringToBoolean(i.preserveDrawingBuffer):e.map.defaultPreserveDrawingBuffer,trackResize:a.isDefined(i.trackResize)?d.stringToBoolean(i.trackResize):e.map.defaultTrackResize,renderWorldCopies:a.isDefined(i.renderWorldCopies)?d.stringToBoolean(i.renderWorldCopies):e.map.defaultRenderWorldCopies,attributionControl:!1});g.addMap(c.mapboxglMapId,n),j._mapboxGlMap.resolve(n),f.exposeMapEvents(n),j.getMap().then(function(b){c.$watch(function(){return i.language},function(){b.loaded()?m(b):b.on("load",function(){m(b)})}),c.$watch(function(){return i.showCollisionBoxes},function(){"boolean"==typeof i.showCollisionBoxes&&(b.showCollisionBoxes=i.showCollisionBoxes)}),c.$watch(function(){return i.showTileBoundaries},function(){"boolean"==typeof i.showTileBoundaries&&(b.showTileBoundaries=i.showTileBoundaries)}),c.$watch(function(){return i.repaint},function(){"boolean"==typeof i.repaint&&(b.repaint=i.repaint)}),a.isDefined(i.width)&&(k(b),c.$watch(function(){return h[0].getAttribute("width")},function(){k(b)})),a.isDefined(i.height)?(l(b),c.$watch(function(){return h[0].getAttribute("height")},function(){l(b)})):(h.css("height",e.map.defaultHeight),b.resize())}),c.$on("mapboxglMap:styleChanged",function(){j.getMap().then(function(a){m(a)})}),c.$on("$destroy",function(){n.remove()})}var j={restrict:"EA",replace:!0,scope:{glStyle:"=",glCenter:"=",glMinZoom:"=",glMaxZoom:"=",glZoom:"=",glBearing:"=",glPitch:"=",glControls:"=",glFilter:"=",glClasses:"=",glInteractive:"=",glHandlers:"=",glImage:"=",glVideo:"=",glPopups:"=",glMarkers:"=",glLights:"=",glSources:"=",glLayers:"=",persistentGeojson:"=",persistentImage:"=",persistentVideo:"="},template:'<div class="angular-mapboxgl-map"><div class="loader" ng-if="isLoading"></div></div>',controller:h,link:i};return h.$inject=["$scope"],j}]),a.module("mapboxgl-directive").directive("mapboxglCompare",["mapboxglMapsData",function(c){function d(d,e,f){if(!b)throw new Error("Mapbox GL does not included");if(!b.accessToken){if(!(a.isDefined(f.accessToken)&&f.accessToken.length>0))throw new Error("Mapbox access token does not defined");b.accessToken=f.accessToken}if(!b.Compare)throw new Error("mapboxgl.Compare plugin does not included");if(!b.supported())throw new Error("Your browser does not support Mapbox GL");if(a.isDefined(d.compareSettings)&&Object.prototype.toString.call(d.compareSettings)!==Object.prototype.toString.call({}))throw new Error("Invalid mapboxgl.Compare parameters");e.ready(function(){var f=e.children();if(2!==f.length)throw new Error("Only two maps can be compared");var g=a.element(f[0]);g.addClass("compare-map");var h=a.element(f[1]);h.addClass("compare-map");var i=c.getMapById(f[0].id),j=c.getMapById(f[1].id);new b.Compare(i,j,d.compareSettings);e.css("height",g.css("height")),d.$watch(function(){return g[0].getAttribute("height")},function(){e.css("height",g.css("height"))})})}var e={restrict:"EA",replace:!0,scope:{compareSettings:"="},transclude:!0,template:'<div class="angular-mapboxgl-compare" ng-transclude></div>',link:d};return e}]),a.module("mapboxgl-directive").factory("mapboxglEventsUtils",["$rootScope",function(a){function b(b){c.map(function(c){b.on(c,function(b){a.$broadcast("mapboxglMap:"+c,b)})})}var c=["resize","webglcontextlost","webglcontextrestored","remove","mouseup","mousedown","mouseout","render","tiledataloading","movestart","contextmenu","dblclick","click","touchcancel","touchmove","touchend","touchstart","sourcedataloading","styledataloading","mousemove","load","move","moveend","error","data","styledata","sourcedata","dataloading","tiledata","zoomend","zoom","zoomstart","boxzoomstart","boxzoomcancel","boxzoomend","rotatestart","rotate","rotateend","dragend","drag","dragstart","pitch"],d={exposeMapEvents:b};return d}]),a.module("mapboxgl-directive").factory("mapboxglImageUtils",["mapboxglUtils","mapboxglConstants",function(b,c){function d(b,c){if(a.isUndefined(b)||null===b)throw new Error("Map is undefined");if(a.isUndefined(c)||null===c)throw new Error("Object definition is undefined");if(a.isUndefined(c.url)||null===c.url)throw new Error("Object url is undefined");if(a.isUndefined(c.coordinates)||null===c.coordinates)throw new Error("Object coordinates are undefined");c.id="image_"+Date.now(),b.addSource(c.id,{type:"image",url:c.url,coordinates:c.coordinates}),b.addLayer({id:c.id,source:c.id,type:"raster",layout:a.isDefined(c.layer)&&a.isDefined(c.layer.layout)?c.layer.layout:{},paint:a.isDefined(c.layer)&&a.isDefined(c.layer.paint)?c.layer.paint:{}})}var e={createImageByObject:d};return e}]),a.module("mapboxgl-directive").factory("mapboxglLayerUtils",["mapboxglUtils","mapboxglConstants","mapboxglPopupUtils",function(b,c,d){function e(){return m}function f(a){n=n.filter(function(b){return b.layerId!==a})}function g(){n=[]}function h(a){var b=n.filter(function(b){return b.layerId===a});return b.length>0&&b[0].popup}function i(b,c){if(a.isUndefined(b)||null===b)throw new Error("Map is undefined");if(a.isUndefined(c)||null===c)throw new Error("Layer object is undefined");if(a.isUndefined(c.id)||null===c.id)throw new Error("Layer ID Required");if(a.isUndefined(c.type)||null===c.type)throw new Error("Layer type Required");var d={type:"mapboxgl:"+c.type,popup:!!(a.isDefined(c.popup)&&a.isDefined(c.popup.enabled)&&c.popup.enabled)&&c.popup.enabled},e={};for(var f in c)"before"!==f&&"popup"!==f&&"animation"!==f&&(e[f]=c[f]);e.metadata=a.isDefined(c.metadata)?c.metadata:{},a.extend(e.metadata,d);var g=a.isDefined(c.before)&&a.isDefined(c.before)?c.before:void 0;b.addLayer(e,g),m.push(c.id),n.push({layerId:c.id,popup:c.popup})}function j(b){var c=!1;return a.isDefined(b)&&null!==b&&(c=m.indexOf(b)!==-1),c}function k(b,c){if(a.isUndefined(b)||null===b)throw new Error("Map is undefined");if(!j(c))throw new Error("Invalid layer ID");b.removeLayer(c),m=m.filter(function(a){return a!==c}),d.removePopupByLayerId(c),f(c)}function l(b,c){if(a.isUndefined(b)||null===b)throw new Error("Map is undefined");if(a.isUndefined(c)||null===c)throw new Error("Layer object is undefined");if(a.isUndefined(c.id)||null===c.id)throw new Error("Layer ID Required");a.isDefined(c.before)&&null!==c.before&&b.moveLayer(c.id,c.before),a.isDefined(c.filter)&&null!==c.filter&&a.isArray(c.filter)&&b.setFilter(c.id,c.filter);var e=b.getLayer(c.id);if(b.setLayerZoomRange(c.id,c.minzoom||e.minzoom,c.maxzoom||e.maxzoom),a.isDefined(c.popup)&&null!==c.popup&&(d.removePopupByLayerId(c.id),f(c.id),n.push({layerId:c.id,popup:c.popup})),a.isDefined(c.paint)&&null!==c.paint)for(var g in c.paint)if(c.paint.hasOwnProperty(g)){var h=b.getPaintProperty(c.id,g);h!==c.paint[g]&&b.setPaintProperty(c.id,g,c.paint[g])}if(a.isDefined(c.layout)&&null!==c.layout)for(var i in c.layout)if(c.layout.hasOwnProperty(i)){var j=b.getLayoutProperty(c.id,i);j!==c.layout[i]&&b.setLayoutProperty(c.id,i,c.layout[i])}}var m=[],n=[],o={createLayerByObject:i,existLayerById:j,removeLayerById:k,updateLayerByObject:l,getCreatedLayers:e,removeAllPopupRelations:g,removePopupRelationByLayerId:f,getPopupRelationByLayerId:h};return o}]),a.module("mapboxgl-directive").factory("mapboxglMapsData",["mapboxglUtils",function(a){function b(a,b){g.push({id:a,mapInstance:b})}function c(b){var c=a.arrayObjectIndexOf(g,b,"id");if(c!==-1){var d=g[c];d.mapInstance.remove(),g.splice(c,1)}}function d(){g.map(function(a){a.mapInstance.remove()}),g=[]}function e(){return g}function f(b){var c=a.arrayObjectIndexOf(g,b,"id");return c!==-1?g[c].mapInstance:null}var g=[],h={addMap:b,removeMapById:c,removeAllMaps:d,getMaps:e,getMapById:f};return h}]),a.module("mapboxgl-directive").factory("mapboxglMarkerUtils",["mapboxglUtils","mapboxglConstants","mapboxglPopupUtils",function(c,d,e){function f(c,d){if(a.isUndefined(c)||null===c)throw new Error("Map is undefined");if(a.isUndefined(d)||null===d)throw new Error("Object definition is undefined");if(a.isUndefined(d.coordinates)||null===d.coordinates)throw new Error("Object coordinates are undefined");if(a.isUndefined(d.element)||null===d.element)throw new Error("Object element is undefined");var f=d.options||{},g=new b.Marker(d.element,f).setLngLat(d.coordinates);if(a.isDefined(d.popup)){var h=e.createPopupByObject(c,d.popup);g.setPopup(h)}return g.addTo(c),g}var g={createMarkerByObject:f};return g}]),a.module("mapboxgl-directive").factory("mapboxglPopupUtils",["mapboxglUtils","mapboxglConstants","$rootScope","$compile",function(c,d,e,f){function g(){return l}function h(b){var c=l.filter(function(a){return a.layerId===b});return a.isUndefined(b)||null===b?c.map(function(a){return a.popupInstance}):c.length>0?c[0].popupInstance:void 0}function i(a){l.map(function(a){a.popupInstance.remove()}),l=[]}function j(a,b){var c=l.filter(function(a){return a.layerId===b});c.map(function(a){a.popupInstance.remove()}),l=l.filter(function(a){return a.layerId!==b})}function k(c,d,g){if(a.isUndefined(c)||null===c)throw new Error("Map is undefined");if(a.isUndefined(d)||null===d)throw new Error("Object definition is undefined");if(a.isUndefined(d.coordinates)||null===d.coordinates)throw new Error("Object coordinates are undefined");if(a.isUndefined(d.html)||null===d.html)throw new Error("Object html is undefined");var h=d.options||{},i=new b.Popup(h).setLngLat(c.unproject(d.coordinates));if(d.html instanceof HTMLElement)i.setDOMContent(d.html);else{var j=a.isDefined(d.getScope)&&a.isFunction(d.getScope)?d.getScope():e;try{var k=f(d.html)(j)[0];i.setDOMContent(k)}catch(a){i.setHTML(d.html)}}return i.addTo(c),l.push({popupInstance:i,layerId:g}),i}var l=[],m={createPopupByObject:k,getAllPopupsCreated:g,getPopupByLayerId:h,removeAllPopupsCreated:i,removePopupByLayerId:j};return m}]),a.module("mapboxgl-directive").factory("mapboxglSourceUtils",["mapboxglUtils","mapboxglConstants",function(b,c){function d(b,c){if(a.isUndefined(b)||null===b)throw new Error("Map is undefined");if(a.isUndefined(c)||null===c)throw new Error("Source object is undefined");if(a.isUndefined(c.id)||null===c.id)throw new Error("Source ID Required");if(a.isUndefined(c.type)||null===c.type)throw new Error("Source type Required");if(a.isUndefined(c.data)||null===c.data)throw new Error("Source data Required");var d={};for(var e in c)"id"!==e&&"animation"!==e&&(d[e]=c[e]);b.addSource(c.id,d),i.push(c.id)}function e(b){var c=!1;return a.isDefined(b)&&null!==b&&(c=i.indexOf(b)!==-1),c}function f(b,c){if(a.isUndefined(b)||null===b)throw new Error("Map is undefined");if(!e(c))throw new Error("Invalid source ID");b.removeSource(c),i=i.filter(function(a){return a!==c})}function g(b,c){if(a.isUndefined(b)||null===b)throw new Error("Map is undefined");if(a.isUndefined(c)||null===c)throw new Error("Source object is undefined");if(a.isUndefined(c.id)||null===c.id)throw new Error("Source ID Required");if(a.isUndefined(c.data)||null===c.data)throw new Error("Source data Required");var d=b.getSource(c.id);d.setData(c.data)}function h(){return i}var i=[],j={createSourceByObject:d,existSourceById:e,removeSourceById:f,updateSourceByObject:g,getCreatedSources:h};return j}]),a.module("mapboxgl-directive").factory("mapboxglUtils",["$window","$q",function(b,c){function d(){return"mapbox-gl-map-"+Date.now()}function e(d){var e=c.defer();return a.isDefined(d)&&(a.isDefined(d.autodiscover)&&d.autodiscover?b.navigator.geolocation.getCurrentPosition(function(a){var b=a.coords;e.resolve([b.longitude,b.latitude])},function(a){e.reject(a)},{enableHighAccuracy:!0,timeout:5e3,maximumAge:0}):a.isNumber(d.lat)&&a.isNumber(d.lng)&&(d.lng>-180||d.lng<180)&&(d.lat>-90||d.lat<90)?e.resolve([d.lng,d.lat]):a.isArray(d)&&2===d.length&&a.isNumber(d[0])&&a.isNumber(d[1])&&(d[0]>-180||d[0]<180)&&(d[1]>-90||d[1]<90)?e.resolve(d):e.resolve(!1)),e.promise}function f(a,b,c){for(var d=0,e=a.length;d<e;d++)if(a[d][c]===b)return d;return-1}function g(b){var c=!1;return a.isDefined(b)&&null!==b&&(c="true"===b.toLowerCase()),c}function h(b){if(a.isDefined(b)&&null!==b){var c=+b;if(isNaN(c))throw new Error("mapboxglUtils.stringToNumber --> Invalid stringValue");return c}}var i={generateMapId:d,validateAndFormatCenter:e,arrayObjectIndexOf:f,stringToBoolean:g,stringToNumber:h};return i}]),a.module("mapboxgl-directive").factory("mapboxglVideoUtils",["mapboxglUtils","mapboxglConstants",function(b,c){function d(b,c){if(a.isUndefined(b)||null===b)throw new Error("Map is undefined");if(a.isUndefined(c)||null===c)throw new Error("Object definition is undefined");if(a.isUndefined(c.urls)||!a.isArray(c.urls)||null===c.urls)throw new Error("Object urls is undefined");if(a.isUndefined(c.coordinates)||null===c.coordinates)throw new Error("Object coordinates are undefined");c.id="video_"+Date.now(),b.addSource(c.id,{type:"video",urls:c.url,coordinates:c.coordinates}),b.addLayer({id:c.id,source:c.id,type:"raster",layout:a.isDefined(c.layer)&&a.isDefined(c.layer.layout)?c.layer.layout:{},paint:a.isDefined(c.layer)&&a.isDefined(c.layer.paint)?c.layer.paint:{}})}var e={createVideoByObject:d};return e}]),a.module("mapboxgl-directive").constant("mapboxglConstants",{map:{defaultHeight:"450px",defaultStyle:"mapbox://styles/mapbox/streets-v9",defaultCenter:[0,0],defaultHash:!1,defaultBearingSnap:7,defaultFailIfMajorPerformanceCaveat:!1,defaultPreserveDrawingBuffer:!1,defaultTrackResize:!0,defaultRenderWorldCopies:!0,defaultPersistentGeojson:!1,defaultPersistentImage:!1,defaultPersistentVideo:!1},source:{defaultMaxZoom:18,defaultBuffer:128,defaultTolerance:.375,defaultCluster:!1,defaultClusterRadius:50}}),a.module("mapboxgl-directive").directive("glBearing",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glBearing",function(c){if(a.isDefined(c)){if(!a.isNumber(c.value))throw new Error("Invalid bearing");b.setBearing(c.value,c.eventData)}},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glCenter",["mapboxglUtils","mapboxglConstants",function(b,c){function d(d,e,f,g){if(!g)throw new Error("Invalid angular-mapboxgl-directive controller");var h=g.getMapboxGlScope();g.getMap().then(function(d){h.$watch("glCenter",function(e,f){b.validateAndFormatCenter(e).then(function(b){if(!b)throw new Error("Invalid center");a.isDefined(f)&&e!==f?d.flyTo({center:b}):d.setCenter(b)}).catch(function(a){throw d.setCenter(c.map.defaultCenter),new Error(a.code+" / "+a.message)})},!0)})}var e={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:d};return e}]),a.module("mapboxgl-directive").directive("glClasses",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glClasses",function(c){if(a.isDefined(c))b.setClasses(c.classes,c.options);else{var d=b.getClasses();d.map(function(a){b.removeClass(a)})}},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glControls",["$rootScope","$window",function(c,d){function e(e,f,g,h){if(!h)throw new Error("Invalid angular-mapboxgl-directive controller");var i=h.getMapboxGlScope(),j={custom:[]},k=function(b,c,d,e,f){d?j.custom.push({name:b||"customControl_"+Date.now(),control:c,isEventsListenedByMap:!!a.isDefined(f)&&f,events:a.isDefined(e)&&a.isArray(e)?e:[]}):j[b]={control:c,isEventsListenedByMap:!!a.isDefined(f)&&f,events:a.isDefined(e)&&a.isArray(e)?e:[]}},l=function(a,b,c,d){c?b.map(function(a){d.off(a)}):b.map(function(b){a.off(b)})},m=function(a){for(var b in j)if("custom"!==b){var c=j[b];l(c.control,c.events,c.isEventsListenedByMap,a),a.removeControl(c.control)}else for(var d=j[b],e=0,f=d.length;e<f;e++){var g=d[e];l(g.control,g.events,g.isEventsListenedByMap,a),a.removeControl(g.control)}j={custom:[]}},n=[{name:"navigation",constructor:b.Navigation||b.NavigationControl,pluginName:"mapboxgl."+(b.Navigation?b.Navigation.name:b.NavigationControl.name)},{name:"scale",constructor:b.Scale||b.ScaleControl,pluginName:"mapboxgl."+(b.Scale?b.Scale.name:b.ScaleControl.name)},{name:"attribution",constructor:b.Attribution||b.AttributionControl,pluginName:"mapboxgl."+(b.Attribution?b.Attribution.name:b.AttributionControl.name)},{name:"geolocate",constructor:b.Geolocate||b.GeolocateControl,pluginName:"mapboxgl."+(b.Geolocate?b.Geolocate.name:b.GeolocateControl.name),eventsExposedName:"mapboxglGeolocate",eventsAvailables:["geolocate","error"]},{name:"geocoder",constructor:b.Geocoder||d.MapboxGeocoder,pluginName:b.Geocoder?"mapboxgl.Geocoder":"MapboxGeocoder",eventsExposedName:"mapboxglGeocoder",eventsAvailables:["clear","loading","results","result","error"]},{name:"directions",constructor:b.Directions||d.MapboxDirections,pluginName:b.Directions?"mapboxgl.Directions":"MapboxDirections",eventsExposedName:"mapboxglDirections",eventsAvailables:["clear","loading","profile","origin","destination","route","error"]},{name:"draw",constructor:b.Draw||d.MapboxDraw,pluginName:b.Draw?"mapboxgl.Draw":"MapboxDraw",eventsExposedName:"mapboxglDraw",listenInMap:!0,eventsAvailables:["draw.create","draw.delete","draw.combine","draw.uncombine","draw.update","draw.selectionchange","draw.modechange","draw.render","draw.actionable"]}];h.getMap().then(function(b){i.$watch("glControls",function(d){if(a.isDefined(d)&&(m(b),n.map(function(e){if(a.isDefined(d[e.name])&&a.isDefined(d[e.name].enabled)&&d[e.name].enabled){if(!a.isDefined(e.constructor)||!a.isFunction(e.constructor))throw new Error(e.pluginName+" plugin is not included.");var f=e.constructor.bind.apply(e.constructor,d[e.name].options),g=new f(d[e.name].options);if(k(e.name,g,!1,e.eventsAvailables,e.listenInMap),a.isDefined(e.eventsAvailables)&&a.isDefined(e.eventsExposedName)){var h=e.listenInMap?b:g;e.eventsAvailables.map(function(a){h.on(a,function(b){var d=e.eventsExposedName+":"+a;c.$broadcast(d,b)})})}var i=d[e.name].options&&d[e.name].options.position?d[e.name].options.position:void 0;b.addControl(g,i)}}),a.isDefined(d.custom))){if(!a.isArray(d.custom))throw new Error("'custom' must be an array");d.custom.map(function(d){if(a.isDefined(d.constructor)){var e=d.constructor.bind.apply(d.constructor,d.options),f=new e(d.options),g=a.isArray(d.events)?d.events:[];k(d.name,f,!0,g,d.listenInMap);var h=d.listenInMap?b:f;g.map(function(a){h.on(a,function(b){var e="mapboxgl:"+d.name+":"+a;c.$broadcast(e,b)})});var i=d.options&&d.options.position?d.options.position:void 0;b.addControl(f,i)}})}})})}var f={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:e};return f}]),a.module("mapboxgl-directive").directive("glFilter",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glFilter",function(c){if(a.isDefined(c))if(Object.prototype.toString.call(c)===Object.prototype.toString.call({})){if(!(a.isDefined(c.layerId)&&a.isDefined(c.filter)&&a.isArray(c.filter)))throw new Error("Invalid filter parameter");b.setFilter(c.layerId,c.filter)}else{if(Object.prototype.toString.call(c)!==Object.prototype.toString.call([]))throw new Error("Invalid filter parameter");c.map(function(c){if(!(a.isDefined(c.layerId)&&a.isDefined(c.filter)&&a.isArray(c.filter)))throw new Error("Invalid filter parameter");b.setFilter(c.layerId,c.filter)})}},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glHandlers",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glHandlers",function(c){if(a.isDefined(c)&&Object.prototype.toString.call(c)===Object.prototype.toString.call({}))for(var d in c)if(c.hasOwnProperty(d)){var e=c[d]?"enable":"disable";b[d][e]()}},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glImage",["mapboxglImageUtils",function(b){function c(c,d,e,f){if(!f)throw new Error("Invalid angular-mapboxgl-directive controller");var g=f.getMapboxGlScope(),h=function(c,d,e){if(a.isDefined(e))if(Object.prototype.toString.call(e)===Object.prototype.toString.call({}))b.createImageByObject(c,e),d.addImageObject(e);else{if(Object.prototype.toString.call(e)!==Object.prototype.toString.call([]))throw new Error("Invalid image parameter");e.map(function(a){b.createImageByObject(c,a),d.addImageObject(a)})}};c.$on("mapboxglMap:styleChanged",function(){if(f.isImagePersistent()){var b=a.copy(f.getImageObjects());f.removeImageObjects(),f.getMap().then(function(a){h(a,f,b)})}else f.removeImageObjects()}),f.getMap().then(function(a){g.$watchCollection("glImage",function(b){a.style.loaded()?h(a,f,b):a.once("style.load",function(){h(a,f,b)})})})}var d={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:c};return d}]),a.module("mapboxgl-directive").directive("glInteractive",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=["touchZoomRotate","scrollZoom","boxZoom","dragRotate","dragPan","doubleClickZoom","keyboard"],g=e.getMapboxGlScope();e.getMap().then(function(b){g.$watch("glInteractive",function(c){if(a.isDefined(c)&&"boolean"==typeof c){var d=c?"enable":"disable";f.map(function(a){b[a][d]()})}})})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glLayers",["mapboxglLayerUtils","mapboxglPopupUtils","$timeout","$q",function(b,c,d,e){function f(f,g,h,i){function j(a){c.removeAllPopupsCreated(a),a.off("click"),a.off("mousemove")}function k(d){d.on("click",function(e){var f=b.getCreatedLayers(),g=d.queryRenderedFeatures(e.point,{layers:f});if(g.length>0){var h=g[0],i=b.getPopupRelationByLayerId(h.layer.id);a.isDefined(i)&&null!==i&&c.createPopupByObject(d,{coordinates:e.point,options:i.options,html:i.message,getScope:i.getScope},h.layer.id)}}),d.on("mousemove",function(a){var c=b.getCreatedLayers(),e=d.queryRenderedFeatures(a.point,{layers:c});d.getCanvas().style.cursor=e.length?"pointer":""})}function l(c,d){if(b.existLayerById(d.id)?b.updateLayerByObject(c,d):b.createLayerByObject(c,d),a.isDefined(d.animation)&&a.isDefined(d.animation.enabled)&&d.animation.enabled){var e=function(a){setTimeout(function(){requestAnimationFrame(e),d.animation.animationFunction(c,d.id,d.animation.animationData,a)},d.animation.timeoutMilliseconds||1e3)};e(0)}}function m(c,d){var f=e.defer(),g=[];Object.prototype.toString.call(d)===Object.prototype.toString.call([])?g=d.map(function(a){return a.id}):Object.prototype.toString.call(d)===Object.prototype.toString.call({})?g.push(d.id):f.reject(new Error("Invalid layers parameter")),g=g.filter(function(b){return a.isDefined(b)});var h=b.getCreatedLayers();return g.map(function(a){h=h.filter(function(b){return b!==a})}),h.map(function(a){b.removeLayerById(c,a)}),f.resolve(),f.promise}if(!i)throw new Error("Invalid angular-mapboxgl-directive controller");var n=i.getMapboxGlScope();i.getMap().then(function(a){f.selfMap=a,n.$watch("glLayers",function(b){d(function(){j(a),m(a,b).then(function(){if(Object.prototype.toString.call(b)===Object.prototype.toString.call([]))b.map(function(b){l(a,b)});else{if(Object.prototype.toString.call(b)!==Object.prototype.toString.call({}))throw new Error("Invalid layers parameter");l(a,b)}k(a)}).catch(function(a){throw a})},500,!0)},!0)})}var g={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:f};return g}]),a.module("mapboxgl-directive").directive("glLights",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glLights",function(c){a.isDefined(c)&&b.setLight(c.options,c.lightOptions)},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glMarkers",["mapboxglMarkerUtils",function(b){function c(c,d,e,f){if(!f)throw new Error("Invalid angular-mapboxgl-directive controller");var g=f.getMapboxGlScope(),h=[],i=function(){h.map(function(a){a.remove()}),h=[]},j=function(c,d){if(a.isDefined(d))if(i(),Object.prototype.toString.call(d)===Object.prototype.toString.call({})){var e=b.createMarkerByObject(c,d);h.push(e)}else{if(Object.prototype.toString.call(d)!==Object.prototype.toString.call([]))throw new Error("Invalid marker parameter");d.map(function(a){var d=b.createMarkerByObject(c,a);h.push(d)})}};f.getMap().then(function(a){g.$watchCollection("glMarkers",function(b){j(a,b)})})}var d={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:c};return d}]),a.module("mapboxgl-directive").directive("glMaxBounds",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glMaxBounds",function(c){if(!a.isArray(c)||2!==c.length)throw new Error("Invalid max bounds");b.setMaxBounds(c)},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glMaxZoom",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glMaxZoom",function(c){if(!a.isNumber(c)||!(c>=0||c<=20))throw new Error("Invalid max zoom");b.setMaxZoom(c)},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glMinZoom",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();
e.getMap().then(function(b){f.$watch("glMinZoom",function(c){if(!a.isNumber(c)||!(c>=0||c<=20))throw new Error("Invalid min zoom");b.setMinZoom(c)},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glPitch",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glPitch",function(c){if(a.isDefined(c)){if(!a.isNumber(c.value)||!(c.value>=0||c.value<=60))throw new Error("Invalid pitch");b.setPitch(c.value,c.eventData)}},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glPopups",["mapboxglPopupUtils",function(b){function c(c,d,e,f){if(!f)throw new Error("Invalid angular-mapboxgl-directive controller");var g=f.getMapboxGlScope(),h=[],i=function(){h.map(function(a){a.remove()}),h=[]},j=function(c,d){if(a.isDefined(d))if(i(),Object.prototype.toString.call(d)===Object.prototype.toString.call({})){var e=b.createPopupByObject(c,d);h.push(e)}else{if(Object.prototype.toString.call(d)!==Object.prototype.toString.call([]))throw new Error("Invalid popup parameter");d.map(function(a){var d=b.createPopupByObject(c,a);h.push(d)})}};f.getMap().then(function(a){g.$watchCollection("glPopups",function(b){j(a,b)})})}var d={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:c};return d}]),a.module("mapboxgl-directive").directive("glSources",["mapboxglSourceUtils","$timeout","$q",function(b,c,d){function e(e,f,g,h){function i(c,d){b.existSourceById(d.id)?b.updateSourceByObject(c,d):b.createSourceByObject(c,d),setTimeout(function(){if(a.isDefined(d.animation)&&a.isDefined(d.animation.enabled)&&d.animation.enabled){var b=function(a){setTimeout(function(){requestAnimationFrame(b),d.animation.animationFunction(c,d.id,d.animation.animationData,a)},d.animation.timeoutMilliseconds||1e3)};b(0)}},500)}function j(c,e){var f=d.defer(),g=[];Object.prototype.toString.call(e)===Object.prototype.toString.call([])?g=e.map(function(a){return a.id}):Object.prototype.toString.call(e)===Object.prototype.toString.call({})?g.push(e.id):f.reject(new Error("Invalid sources parameter")),g=g.filter(function(b){return a.isDefined(b)});var h=b.getCreatedSources();return g.map(function(a){h=h.filter(function(b){return b!==a})}),h.map(function(a){b.removeSourceById(c,a)}),f.resolve(),f.promise}if(!h)throw new Error("Invalid angular-mapboxgl-directive controller");var k=h.getMapboxGlScope();h.getMap().then(function(a){k.$watch("glSources",function(b){c(function(){j(a,b).then(function(){if(Object.prototype.toString.call(b)===Object.prototype.toString.call([]))b.map(function(b){i(a,b)});else{if(Object.prototype.toString.call(b)!==Object.prototype.toString.call({}))throw new Error("Invalid sources parameter");i(a,b)}}).catch(function(a){throw a})},500,!0)},!0)})}var f={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:e};return f}]),a.module("mapboxgl-directive").directive("glStyle",["$rootScope",function(b){function c(c,d,e,f){if(!f)throw new Error("Invalid angular-mapboxgl-directive controller");var g=f.getMapboxGlScope();f.getMap().then(function(c){g.$watch("glStyle",function(d,e){if(a.isDefined(d)&&null!==d&&d!==e){var f=!1;c.setStyle(d),c.on("data",function(a){"style"!==a.dataType||f||(b.$broadcast("mapboxglMap:styleChanged",{map:c,newStyle:d,oldStyle:e}),f=!0)})}},!0)})}var d={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:c};return d}]),a.module("mapboxgl-directive").directive("glVideo",["mapboxglVideoUtils",function(b){function c(c,d,e,f){if(!f)throw new Error("Invalid angular-mapboxgl-directive controller");var g=f.getMapboxGlScope(),h=function(c,d,e){if(a.isDefined(e))if(Object.prototype.toString.call(e)===Object.prototype.toString.call({}))b.createVideoByObject(c,e),d.addVideoObject(e);else{if(Object.prototype.toString.call(e)!==Object.prototype.toString.call([]))throw new Error("Invalid video parameter");e.map(function(a){b.createVideoByObject(c,a),d.addVideoObject(a)})}};f.getMap().then(function(a){g.$watchCollection("glVideo",function(b){a.loaded()?h(a,f,b):a.on("load",function(){h(a,f,b)})})})}var d={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:c};return d}]),a.module("mapboxgl-directive").directive("glZoom",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glZoom",function(c){if(a.isDefined(c)){if(!a.isNumber(c.value)||!(c.value>=0||c.value<=20))throw new Error("Invalid zoom");b.setZoom(c.value,c.eventData)}},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}])}(angular,mapboxgl)},{}]},{},[1]);