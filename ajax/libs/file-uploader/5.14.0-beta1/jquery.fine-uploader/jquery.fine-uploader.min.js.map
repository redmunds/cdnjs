{"version":3,"sources":["?","../client/js/jquery-plugin.js","../client/js/jquery-dnd.js","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/window.receive.message.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","../client/js/traditional/traditional.form.upload.handler.js","../client/js/traditional/traditional.xhr.upload.handler.js","../client/js/traditional/all-chunks-done.ajax.requester.js","../client/js/dnd.js","../client/js/uploader.api.js","../client/js/uploader.js","../client/js/templating.js","../client/js/ui.handler.events.js","../client/js/ui.handler.click.filebuttons.js","../client/js/ui.handler.click.filename.js","../client/js/ui.handler.focusin.filenameinput.js","../client/js/ui.handler.focus.filenameinput.js","../client/js/ui.handler.edit.filename.js"],"names":["global","$","init","options","xformedOpts","transformVariables","newUploaderInstance","getNewUploaderInstance","uploader","addCallbacks","$el","params","uploaderType","pluginOption","namespace","charAt","toUpperCase","slice","toLowerCase","qq","FineUploader","dataStore","key","val","data","undefined","instanceToStore","option","optionVal","transformedOpts","callbacks","each","_options","prop","nonJqueryCallback","name","callbackEventTarget","exec","substring","nonJqueryCallbackRetVal","jqueryEventCallbackRetVal","originalArgs","Array","prototype","call","arguments","transformedArgs","idx","arg","push","maybeWrapInJquery","apply","this","triggerHandler","error","log","message","source","dest","xformed","arrayVals","element","inArray","pluginOptions","isPlainObject","isArray","arrayVal","arrayObjDest","merge","isValidCommand","command","type","match","delegateCommand","retVal","xformedArgs","origArgs","transformedVal","nodeType","cloneNode","fn","fineUploader","optionsOrCommand","self","selfArgs","retVals","index","el","length","jQuery","dropZoneElements","dnd","DragAndDrop","rootDataKey","func","$callbackEl","args","jqueryHandlerResult","fineUploaderDnd","hide","style","display","attach","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filter","Math","round","extend","hasClass","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","getFirstByClass","children","child","firstChild","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","getAttribute","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","createBlob","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","split","indexOf","atob","decodeURI","ArrayBuffer","Uint8Array","character","charCodeAt","level","console","isObject","variable","Object","toString","isFunction","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","newStr","nextIdxToReplace","strBefore","strAfter","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","slicer","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","override","target","sourceFn","super_","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","v","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","Storage","getItem","bind","oldFunc","context","newArgs","concat","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","testSupportsFileInputElement","tempInput","supported","disabled","ex","isChrome21OrHigher","isChrome14OrHigher","isCrossOriginXhrSupported","xhr","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","title","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","batchId","proxyGroupId","onStatusChange","retrieve","optionalFilter","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","file","normalizeData","fileContainer","_prepareItemsForUpload","cancel","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","uploadData","_uploadData","enabled","getName","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","debug","pauseUpload","removeFileRef","expunge","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_onDeleteComplete","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","allowedExtensions","accept","validation","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkSuccess","onResume","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","UploadHandlerController","_fileOrBlobRejected","_formatSize","sizeSymbols","max","toFixed","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","acceptIosCamera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","names","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","errorMessage","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","enableAuto","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","allowEmpty","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","filenameParam","forceMultipart","paramsInBody","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partIndex","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","recordsExpireIn","resuming","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","onCancelRetVal","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","handleFailure","clearCachedChunk","inProgressIdx","responseToReport","inProgress","remaining","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","handlerType","traditional","handlerModuleSubtype","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","isResumable","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","_getLocalStorageId","formatVersion","_getMimeType","_getPersistableData","ceil","_markNotResumable","localStorageId","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","getMandatedParams","_method","requester","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","maxPixels","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","TAG_VAL_OFFSET","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","record","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","expectedBase64Header","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","aBuffer","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","base64test","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","registerPasteHandler","detachPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","getIframeContentJson","doc","innerHtml","contentWindow","nodeValue","createForm","responseFromMessage","multipart","addChunkingSpecificParams","allChunksDoneRequester","AllChunksDoneAjaxRequester","createReadyStateChangedHandler","onUploadOrChunkComplete","getChunksCompleteParams","isErrorUploadResponse","parseResponse","sendChunksCompleteRequest","complete","setParamsAndGetEntityToSend","setUploadHeaders","extraHeaders","toSend","promises","endpointHandler","uploadDroppedFiles","uploadDropZone","filesAsArray","dropLog","dropDisabled","processingDroppedFilesComplete","getElement","traverseFileTree","parseEntryPromise","fullPath","indexOfNameInFullPath","qqPath","droppedFiles","fileError","isDirectory","getFilesInDirectory","entriesLeft","accumEntries","existingPromise","dirReader","createReader","readEntries","newEntries","handleDataTransfer","pendingFolderPromises","handleDataTransferPromise","processingDroppedFiles","allowMultipleItems","dropError","setupDropzone","dropArea","dropZone","UploadDropZone","HIDE_ZONES_EVENT_NAME","onEnter","dropActive","stopPropagation","onLeaveNotDescendants","onDrop","HIDE_BEFORE_ENTER_ATTR","uploadDropZones","isFileDrag","dragEvent","fileDrag","types","leavingDocumentOut","relatedTarget","y","setupDragDrop","dropZones","maybeHideDropZones","HTMLElement","setupExtraDropzone","removeDropzone","dzs","targetEl","errorSpecifics","dragoverShouldBeCanceled","disableDropOutside","dropOutsideDisabled","dropEffect","isValidFileDrag","effectTest","dt","isSafari","effectAllowed","isOrSetDropDisabled","isDisabled","preventDrop","triggerHidezonesEvent","triggerUsingOldApi","hideZonesEvent","createEvent","initEvent","CustomEvent","dispatchEvent","attachEvents","effect","elementFromPoint","clientX","clientY","uiPublicApi","_parent","_templating","addCacheToDom","clearFiles","addExtraDropzone","_dnd","removeExtraDropzone","getItemByFileId","isHiddenForever","getFileContainer","_setupDragAndDrop","_totalFilesInBatch","_filesInBatchAddedToUi","_setupClickAndEditEventHandlers","formattedFilename","updateFilename","uploadPaused","continued","uploadContinued","getId","fileContainerOrChildEl","getFileId","getDropTarget","qqDropTarget","uiPrivateApi","_removeFileItem","removeFile","_fileButtonsClickHandler","FileButtonsClickHandler","_bindFileButtonsClickEvent","_focusinEventSupported","_isEditFilenameEnabled","_filenameClickHandler","_bindFilenameClickEvent","_filenameInputFocusInHandler","_bindFilenameInputFocusInEvent","_filenameInputFocusHandler","_bindFilenameInputFocusEvent","dragAndDrop","extraDropzones","templating","defaultDropZone","getDropZone","showDropProcessing","hideDropProcessing","errorData","lvl","onDeleteFile","onRetry","onPause","onContinue","onGetName","isEditFilenamePossible","FilenameClickHandler","FilenameInputFocusHandler","_filenameEditHandler","onGetUploadStatus","onSetName","onEditingStatusChange","isEditing","qqInput","getEditInput","qqFileContainer","hideFilename","hideEditIcon","showFilename","showEditIcon","markFilenameEditable","hideRetry","setStatusText","_classes","retrying","hidePause","FilenameInputFocusInHandler","hideSpinner","resetTotalProgress","reportDirectoryPaths","qqpath","_addToList","addHandler","updateProgress","hideCancel","hideProgress","waitingForResponse","_displayFileSize","completeUpload","_markFileAsSuccessful","fail","showCancel","isRetryPossible","showRetry","_controlFailureTextDisplay","parentRetVal","newResult","showDeleteButton","_maybeUpdateThumbnail","showSpinner","allowPause","retryNumForDisplay","maxAuto","retryNote","_showCancelLink","showAutoRetryNote","autoRetryNote","resetProgress","_onSubmitDeleteSuccess","forceConfirm","_showDeleteConfirm","_sendDeleteRequest","deletingFailedText","hideDeleteButton","deletingStatusText","confirmMessage","deleteRequestArgs","showConfirm","canned","prependData","prependIndex","dontDisplay","hideScaled","prependFiles","disableCancel","_handledProxyGroup","_clearList","addFileToCache","updateThumbnail","thumbnails","generatePreview","fileSizeOnSubmit","loadedSize","sizeForDisplay","_formatProgress","uploadedSize","formatProgress","mode","responseProperty","failureReason","failedUploadTextDisplay","failUpload","enableTooltip","_showTooltip","showMessage","_setupPastePrompt","namePromptMessage","defaultVal","showPrompt","fileStatus","placeholders","waitUntilResponse","listElement","template","editable","tooManyFilesError","unsupportedBrowser","promptForName","maxCount","notAvailablePath","waitingPath","timeBetweenThumbs","hasDialog","showDialog","confirm","defaultValue","prompt","Templating","templateIdOrEl","containerEl","fileContainerEl","maxThumbs","waitUntilUpdate","thumbnailNotAvailable","waitingForThumbnail","renderFailure","isEditElementsExist","isRetryElementExist","templateHtml","showThumbnails","serverScale","FILE_ID_ATTR","FILE_CLASS_PREFIX","THUMBNAIL_MAX_SIZE_ATTR","THUMBNAIL_SERVER_SCALE_ATTR","HIDE_DROPZONE_ATTR","DROPZPONE_TEXT_ATTR","IN_PROGRESS_CLASS","HIDDEN_FOREVER_CLASS","fileBatch","content","createDocumentFragment","map","isCancelDisabled","generatedThumbnails","thumbnailQueueMonitorRunning","thumbGenerationQueue","thumbnailMaxSize","selectorClasses","alertDialog","dialogCancelButton","confirmDialog","dialogMessage","dialogOkButton","promptDialog","drop","list","progressBarContainer","totalProgressBarContainer","totalProgressBar","spinner","continueButton","deleteButton","statusText","editFilenameInput","editNameIcon","dropText","dropProcessing","dropProcessingSpinner","thumbnail","previewGeneration","cachedThumbnailNotAvailableImg","cachedWaitingForThumbnailImg","cacheThumbnailPlaceholders","notAvailableUrl","waitingUrl","updatedImg","displayWaitingImg","waitingImgPlacement","maybeScalePlaceholderViaCss","show","generateNewPreview","getThumbnail","qqThumbnailId","maybeSetDisplayNotAvailableImg","generateNextQueuedPreview","queuedThumbRequest","update","processUpdateQueuedPreviewRequest","processNewQueuedPreviewRequest","getCancel","getTemplateEl","getContinue","getDialog","getDelete","getDropProcessing","getEditIcon","getPause","getProgress","getRetry","getSpinner","cssClass","previewing","notAvailableImgPlacement","parseAndGetTemplate","scriptEl","scriptHtml","fileListNode","tempTemplateEl","fileListHtml","defaultButton","dropTextEl","uploaderEl","fileTemplate","prependFile","parentEl","beforeEl","optFileOrBlob","relatedThumbnailId","useCachedPreview","showWaitingImg","setProgressBarWidth","percent","bar","progressBarSelector","targetThumbnailId","cachedThumbnailId","targetThumbnail","cachedThumbnail","hideTotalProgress","cantRenderEl","prependInfo","hideForever","batch","thumb","fileEl","fileNameEl","waitingImg","currentNode","getFileList","filenameEl","isFileName","icon","isEditIcon","isEditInput","isCancel","allowContinueButton","isPause","isContinueButton","isDeleteButton","isRetry","textEl","dialog","messageEl","inputEl","cancelBtn","okBtn","closeHandler","cancelClickHandler","okClickHandler","close","showModal","UiEventHandler","s","protectedApi","eventType","srcElement","onHandled","attachTo","getFileIdFromItem","qqFileId","getDisposeSupport","examineEvent","buttonHandlers","buttonType","firstLetterCapButtonType","inheritedInternalApi","handleFilenameEdit","FilenameEditHandler","handleInputFocus","getFilenameSansExtension","filenameSansExt","getOriginalExtension","origName","handleNameUpdate","newFilenameInputEl","origExtension","registerInputBlurHandler","registerInputEnterKeyHandler","keyCode","which","focusInput","focus"],"mappings":"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","file":"jquery.fine-uploader.min.js","sourcesContent":[null,"/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var $el,\n        pluginOptions = [\"uploaderType\", \"endpointType\"];\n\n    function init(options) {\n        var xformedOpts = transformVariables(options || {}),\n            newUploaderInstance = getNewUploaderInstance(xformedOpts);\n\n        uploader(newUploaderInstance);\n        addCallbacks(xformedOpts, newUploaderInstance);\n\n        return $el;\n    }\n\n    function getNewUploaderInstance(params) {\n        var uploaderType = pluginOption(\"uploaderType\"),\n            namespace = pluginOption(\"endpointType\");\n\n        // If the integrator has defined a specific type of uploader to load, use that, otherwise assume `qq.FineUploader`\n        if (uploaderType) {\n            // We can determine the correct constructor function to invoke by combining \"FineUploader\"\n            // with the upper camel cased `uploaderType` value.\n            uploaderType = uploaderType.charAt(0).toUpperCase() + uploaderType.slice(1).toLowerCase();\n\n            if (namespace) {\n                return new qq[namespace][\"FineUploader\" + uploaderType](params);\n            }\n\n            return new qq[\"FineUploader\" + uploaderType](params);\n        }\n        else {\n            if (namespace) {\n                return new qq[namespace].FineUploader(params);\n            }\n\n            return new qq.FineUploader(params);\n        }\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(\"fineuploader\");\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(\"fineuploader\", data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    //the underlying Fine Uploader instance is stored in jQuery's data stored, associated with the element\n    // tied to this instance of the plug-in\n    function uploader(instanceToStore) {\n        return dataStore(\"uploader\", instanceToStore);\n    }\n\n    function pluginOption(option, optionVal) {\n        return dataStore(option, optionVal);\n    }\n\n    // Implement all callbacks defined in Fine Uploader as functions that trigger appropriately names events and\n    // return the result of executing the bound handler back to Fine Uploader\n    function addCallbacks(transformedOpts, newUploaderInstance) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(newUploaderInstance._options.callbacks, function(prop, nonJqueryCallback) {\n            var name, callbackEventTarget;\n\n            name = /^on(\\w+)/.exec(prop)[1];\n            name = name.substring(0, 1).toLowerCase() + name.substring(1);\n            callbackEventTarget = $el;\n\n            callbacks[prop] = function() {\n                var originalArgs = Array.prototype.slice.call(arguments),\n                    transformedArgs = [],\n                    nonJqueryCallbackRetVal, jqueryEventCallbackRetVal;\n\n                $.each(originalArgs, function(idx, arg) {\n                    transformedArgs.push(maybeWrapInJquery(arg));\n                });\n\n                nonJqueryCallbackRetVal = nonJqueryCallback.apply(this, originalArgs);\n\n                try {\n                    jqueryEventCallbackRetVal = callbackEventTarget.triggerHandler(name, transformedArgs);\n                }\n                catch (error) {\n                    qq.log(\"Caught error in Fine Uploader jQuery event handler: \" + error.message, \"error\");\n                }\n\n                /*jshint -W116*/\n                if (nonJqueryCallbackRetVal != null) {\n                    return nonJqueryCallbackRetVal;\n                }\n                return jqueryEventCallbackRetVal;\n            };\n        });\n\n        newUploaderInstance._options.callbacks = callbacks;\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            if (source.uploaderType !== \"basic\") {\n                xformed = { element: $el[0] };\n            }\n            else {\n                xformed = {};\n            }\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if ($.inArray(prop, pluginOptions) >= 0) {\n                pluginOption(prop, val);\n            }\n            else if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    var arrayObjDest = {};\n\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else if ($.isPlainObject(arrayVal)) {\n                        transformVariables(arrayVal, arrayObjDest);\n                        arrayVals.push(arrayObjDest);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            !command.match(/^_/) && //enforce private methods convention\n            uploader()[command] !== undefined;\n    }\n\n    // Assuming we have already verified that this is a valid command, call the associated function in the underlying\n    // Fine Uploader instance (passing along the arguments from the caller) and return the result of the call back to the caller\n    function delegateCommand(command) {\n        var xformedArgs = [],\n            origArgs = Array.prototype.slice.call(arguments, 1),\n            retVal;\n\n        transformVariables(origArgs, xformedArgs);\n\n        retVal = uploader()[command].apply(uploader(), xformedArgs);\n\n        return maybeWrapInJquery(retVal);\n    }\n\n    // If the value is an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n    function maybeWrapInJquery(val) {\n        var transformedVal = val;\n\n        // If the command is returning an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n        /*jshint -W116*/\n        if (val != null && typeof val === \"object\" &&\n           (val.nodeType === 1 || val.nodeType === 9) && val.cloneNode) {\n\n            transformedVal = $(val);\n        }\n\n        return transformedVal;\n    }\n\n    $.fn.fineUploader = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (uploader() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist on jQuery.fineUploader\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var rootDataKey = \"fineUploaderDnd\",\n        $el;\n\n    function init(options) {\n        if (!options) {\n            options = {};\n        }\n\n        options.dropZoneElements = [$el];\n        var xformedOpts = transformVariables(options);\n        addCallbacks(xformedOpts);\n        dnd(new qq.DragAndDrop(xformedOpts));\n\n        return $el;\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(rootDataKey);\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(rootDataKey, data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    function dnd(instanceToStore) {\n        return dataStore(\"dndInstance\", instanceToStore);\n    }\n\n    function addCallbacks(transformedOpts) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(new qq.DragAndDrop.callbacks(), function(prop, func) {\n            var name = prop,\n                $callbackEl;\n\n            $callbackEl = $el;\n\n            callbacks[prop] = function() {\n                var args = Array.prototype.slice.call(arguments),\n                    jqueryHandlerResult = $callbackEl.triggerHandler(name, args);\n\n                return jqueryHandlerResult;\n            };\n        });\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            xformed = {};\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            command === \"dispose\" &&\n            dnd()[command] !== undefined;\n    }\n\n    function delegateCommand(command) {\n        var xformedArgs = [], origArgs = Array.prototype.slice.call(arguments, 1);\n        transformVariables(origArgs, xformedArgs);\n        return dnd()[command].apply(dnd(), xformedArgs);\n    }\n\n    $.fn.fineUploaderDnd = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (dnd() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist in Fine Uploader's DnD module.\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\n/* jshint -W079 */\nvar qq = function(element) {\n    \"use strict\";\n\n    return {\n        hide: function() {\n            element.style.display = \"none\";\n            return this;\n        },\n\n        /** Returns the function which detaches attached event */\n        attach: function(type, fn) {\n            if (element.addEventListener) {\n                element.addEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + type, fn);\n            }\n            return function() {\n                qq(element).detach(type, fn);\n            };\n        },\n\n        detach: function(type, fn) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.detachEvent(\"on\" + type, fn);\n            }\n            return this;\n        },\n\n        contains: function(descendant) {\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\n            // says a `null` (or ostensibly `undefined`) parameter\n            // passed into `Node.contains` should result in a false return value.\n            // IE7 throws an exception if the parameter is `undefined` though.\n            if (!descendant) {\n                return false;\n            }\n\n            // compareposition returns false in this case\n            if (element === descendant) {\n                return true;\n            }\n\n            if (element.contains) {\n                return element.contains(descendant);\n            } else {\n                /*jslint bitwise: true*/\n                return !!(descendant.compareDocumentPosition(element) & 8);\n            }\n        },\n\n        /**\n         * Insert this element before elementB.\n         */\n        insertBefore: function(elementB) {\n            elementB.parentNode.insertBefore(element, elementB);\n            return this;\n        },\n\n        remove: function() {\n            element.parentNode.removeChild(element);\n            return this;\n        },\n\n        /**\n         * Sets styles for an element.\n         * Fixes opacity in IE6-8.\n         */\n        css: function(styles) {\n            /*jshint eqnull: true*/\n            if (element.style == null) {\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n            }\n\n            /*jshint -W116*/\n            if (styles.opacity != null) {\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                }\n            }\n            qq.extend(element.style, styles);\n\n            return this;\n        },\n\n        hasClass: function(name, considerParent) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n        },\n\n        addClass: function(name) {\n            if (!qq(element).hasClass(name)) {\n                element.className += \" \" + name;\n            }\n            return this;\n        },\n\n        removeClass: function(name) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n            return this;\n        },\n\n        getByClass: function(className, first) {\n            var candidates,\n                result = [];\n\n            if (first && element.querySelector) {\n                return element.querySelector(\".\" + className);\n            }\n            else if (element.querySelectorAll) {\n                return element.querySelectorAll(\".\" + className);\n            }\n\n            candidates = element.getElementsByTagName(\"*\");\n\n            qq.each(candidates, function(idx, val) {\n                if (qq(val).hasClass(className)) {\n                    result.push(val);\n                }\n            });\n            return first ? result[0] : result;\n        },\n\n        getFirstByClass: function(className) {\n            return qq(element).getByClass(className, true);\n        },\n\n        children: function() {\n            var children = [],\n                child = element.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1) {\n                    children.push(child);\n                }\n                child = child.nextSibling;\n            }\n\n            return children;\n        },\n\n        setText: function(text) {\n            element.innerText = text;\n            element.textContent = text;\n            return this;\n        },\n\n        clearText: function() {\n            return qq(element).setText(\"\");\n        },\n\n        // Returns true if the attribute exists on the element\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\n        hasAttribute: function(attrName) {\n            var attrVal;\n\n            if (element.hasAttribute) {\n\n                if (!element.hasAttribute(attrName)) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\n            }\n            else {\n                attrVal = element[attrName];\n\n                if (attrVal === undefined) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(attrVal) == null;\n            }\n        }\n    };\n};\n\n(function() {\n    \"use strict\";\n\n    qq.canvasToBlob = function(canvas, mime, quality) {\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n    };\n\n    qq.dataUriToBlob = function(dataUri) {\n        var arrayBuffer, byteString,\n            createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder ||\n                        window.WebKitBlobBuilder ||\n                        window.MozBlobBuilder ||\n                        window.MSBlobBuilder,\n                    blobBuilder = BlobBuilder && new BlobBuilder();\n\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                }\n                else {\n                    return new Blob([data], {type: mime});\n                }\n            },\n            intArray, mimeString;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return createBlob(arrayBuffer, mimeString);\n    };\n\n    qq.log = function(message, level) {\n        if (window.console) {\n            if (!level || level === \"info\") {\n                window.console.log(message);\n            }\n            else\n            {\n                if (window.console[level]) {\n                    window.console[level](message);\n                }\n                else {\n                    window.console.log(\"<\" + level + \"> \" + message);\n                }\n            }\n        }\n    };\n\n    qq.isObject = function(variable) {\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n    };\n\n    qq.isFunction = function(variable) {\n        return typeof (variable) === \"function\";\n    };\n\n    /**\n     * Check the type of a value.  Is it an \"array\"?\n     *\n     * @param value value to test.\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\n     */\n    qq.isArray = function(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\n    };\n\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\n    qq.isItemList = function(maybeItemList) {\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n    };\n\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\n    // object that is associated with collections of Nodes.\n    qq.isNodeList = function(maybeNodeList) {\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\n            // If `HTMLCollection` is the actual type of the object, we must determine this\n            // by checking for expected properties/methods on the object\n            (maybeNodeList.item && maybeNodeList.namedItem);\n    };\n\n    qq.isString = function(maybeString) {\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\n    };\n\n    qq.trimStr = function(string) {\n        if (String.prototype.trim) {\n            return string.trim();\n        }\n\n        return string.replace(/^\\s+|\\s+$/g, \"\");\n    };\n\n    /**\n     * @param str String to format.\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\n     */\n    qq.format = function(str) {\n\n        var args =  Array.prototype.slice.call(arguments, 1),\n            newStr = str,\n            nextIdxToReplace = newStr.indexOf(\"{}\");\n\n        qq.each(args, function(idx, val) {\n            var strBefore = newStr.substring(0, nextIdxToReplace),\n                strAfter = newStr.substring(nextIdxToReplace + 2);\n\n            newStr = strBefore + val + strAfter;\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\n            if (nextIdxToReplace < 0) {\n                return false;\n            }\n        });\n\n        return newStr;\n    };\n\n    qq.isFile = function(maybeFile) {\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n    };\n\n    qq.isFileList = function(maybeFileList) {\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n    };\n\n    qq.isFileOrInput = function(maybeFileOrInput) {\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n    };\n\n    qq.isInput = function(maybeInput, notFile) {\n        var evaluateType = function(type) {\n            var normalizedType = type.toLowerCase();\n\n            if (notFile) {\n                return normalizedType !== \"file\";\n            }\n\n            return normalizedType === \"file\";\n        };\n\n        if (window.HTMLInputElement) {\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n        if (maybeInput.tagName) {\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    qq.isBlob = function(maybeBlob) {\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n            return true;\n        }\n    };\n\n    qq.isXhrUploadSupported = function() {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n\n        return (\n            input.multiple !== undefined &&\n                typeof File !== \"undefined\" &&\n                typeof FormData !== \"undefined\" &&\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\n    };\n\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\n    qq.createXhrInstance = function() {\n        if (window.XMLHttpRequest) {\n            return new XMLHttpRequest();\n        }\n\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        }\n        catch (error) {\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n            return null;\n        }\n    };\n\n    qq.isFolderDropSupported = function(dataTransfer) {\n        return dataTransfer.items &&\n            dataTransfer.items.length > 0 &&\n            dataTransfer.items[0].webkitGetAsEntry;\n    };\n\n    qq.isFileChunkingSupported = function() {\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\n            qq.isXhrUploadSupported() &&\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n    };\n\n    qq.sliceBlob = function(fileOrBlob, start, end) {\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n\n        return slicer.call(fileOrBlob, start, end);\n    };\n\n    qq.arrayBufferToHex = function(buffer) {\n        var bytesAsHex = \"\",\n            bytes = new Uint8Array(buffer);\n\n        qq.each(bytes, function(idx, byt) {\n            var byteAsHexStr = byt.toString(16);\n\n            if (byteAsHexStr.length < 2) {\n                byteAsHexStr = \"0\" + byteAsHexStr;\n            }\n\n            bytesAsHex += byteAsHexStr;\n        });\n\n        return bytesAsHex;\n    };\n\n    qq.readBlobToHex = function(blob, startOffset, length) {\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\n            fileReader = new FileReader(),\n            promise = new qq.Promise();\n\n        fileReader.onload = function() {\n            promise.success(qq.arrayBufferToHex(fileReader.result));\n        };\n\n        fileReader.onerror = promise.failure;\n\n        fileReader.readAsArrayBuffer(initialBlob);\n\n        return promise;\n    };\n\n    qq.extend = function(first, second, extendNested) {\n        qq.each(second, function(prop, val) {\n            if (extendNested && qq.isObject(val)) {\n                if (first[prop] === undefined) {\n                    first[prop] = {};\n                }\n                qq.extend(first[prop], val, true);\n            }\n            else {\n                first[prop] = val;\n            }\n        });\n\n        return first;\n    };\n\n    /**\n     * Allow properties in one object to override properties in another,\n     * keeping track of the original values from the target object.\n     *\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\n     *\n     * @param target Update properties in this object from some source\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\n     * @returns {object} The target object\n     */\n    qq.override = function(target, sourceFn) {\n        var super_ = {},\n            source = sourceFn(super_);\n\n        qq.each(source, function(srcPropName, srcPropVal) {\n            if (target[srcPropName] !== undefined) {\n                super_[srcPropName] = target[srcPropName];\n            }\n\n            target[srcPropName] = srcPropVal;\n        });\n\n        return target;\n    };\n\n    /**\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\n     */\n    qq.indexOf = function(arr, elt, from) {\n        if (arr.indexOf) {\n            return arr.indexOf(elt, from);\n        }\n\n        from = from || 0;\n        var len = arr.length;\n\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from += 1) {\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n\n    //this is a version 4 UUID\n    qq.getUniqueId = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            /*jslint eqeq: true, bitwise: true*/\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    //\n    // Browsers and platforms detection\n    qq.ie = function() {\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\n    };\n\n    qq.ie7 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n    };\n\n    qq.ie8 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n    };\n\n    qq.ie10 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n    };\n\n    qq.ie11 = function() {\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n    };\n\n    qq.edge = function() {\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\n    };\n\n    qq.safari = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n    };\n\n    qq.chrome = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n    };\n\n    qq.opera = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n    };\n\n    qq.firefox = function() {\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\n    };\n\n    qq.windows = function() {\n        return navigator.platform === \"Win32\";\n    };\n\n    qq.android = function() {\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n    };\n\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\n    // such as the one that prevents a `Blob` from being uploaded.\n    qq.androidStock = function() {\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n    };\n\n    qq.ios6 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n    };\n\n    qq.ios7 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n    };\n\n    qq.ios8 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n    };\n\n    // iOS 8.0.0\n    qq.ios800 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n    };\n\n    qq.ios = function() {\n        /*jshint -W014 */\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    };\n\n    qq.iosChrome = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n    };\n\n    qq.iosSafari = function() {\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n    };\n\n    qq.iosSafariWebView = function() {\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n    };\n\n    //\n    // Events\n\n    qq.preventDefault = function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    };\n\n    /**\n     * Creates and returns element from html string\n     * Uses innerHTML to create an element\n     */\n    qq.toElement = (function() {\n        var div = document.createElement(\"div\");\n        return function(html) {\n            div.innerHTML = html;\n            var element = div.firstChild;\n            div.removeChild(element);\n            return element;\n        };\n    }());\n\n    //key and value are passed to callback for each entry in the iterable item\n    qq.each = function(iterableItem, callback) {\n        var keyOrIndex, retVal;\n\n        if (iterableItem) {\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\n            if (window.Storage && iterableItem.constructor === window.Storage) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\n            // when iterating over items inside the object.\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else if (qq.isString(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (keyOrIndex in iterableItem) {\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    //include any args that should be passed to the new function after the context arg\n    qq.bind = function(oldFunc, context) {\n        if (qq.isFunction(oldFunc)) {\n            var args =  Array.prototype.slice.call(arguments, 2);\n\n            return function() {\n                var newArgs = qq.extend([], args);\n                if (arguments.length) {\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                }\n                return oldFunc.apply(context, newArgs);\n            };\n        }\n\n        throw new Error(\"first parameter must be a function!\");\n    };\n\n    /**\n     * obj2url() takes a json-object as argument and generates\n     * a querystring. pretty much like jQuery.param()\n     *\n     * how to use:\n     *\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n     *\n     * will result in:\n     *\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\n     *\n     * @param  Object JSON-Object\n     * @param  String current querystring-part\n     * @return String encoded querystring\n     */\n    qq.obj2url = function(obj, temp, prefixDone) {\n        /*jshint laxbreak: true*/\n        var uristrings = [],\n            prefix = \"&\",\n            add = function(nextObj, i) {\n                var nextTemp = temp\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\n                    ? temp\n                    : temp + \"[\" + i + \"]\"\n                    : i;\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\n                    uristrings.push(\n                        (typeof nextObj === \"object\")\n                            ? qq.obj2url(nextObj, nextTemp, true)\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\n                    );\n                }\n            };\n\n        if (!prefixDone && temp) {\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\n            uristrings.push(temp);\n            uristrings.push(qq.obj2url(obj));\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\n            qq.each(obj, function(idx, val) {\n                add(val, idx);\n            });\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\n            qq.each(obj, function(prop, val) {\n                add(val, prop);\n            });\n        } else {\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n        }\n\n        if (temp) {\n            return uristrings.join(prefix);\n        } else {\n            return uristrings.join(prefix)\n                .replace(/^&/, \"\")\n                .replace(/%20/g, \"+\");\n        }\n    };\n\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\n        if (!formData) {\n            formData = new FormData();\n        }\n\n        qq.each(obj, function(key, val) {\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n\n            if (qq.isObject(val)) {\n                qq.obj2FormData(val, formData, key);\n            }\n            else if (qq.isFunction(val)) {\n                formData.append(key, val());\n            }\n            else {\n                formData.append(key, val);\n            }\n        });\n\n        return formData;\n    };\n\n    qq.obj2Inputs = function(obj, form) {\n        var input;\n\n        if (!form) {\n            form = document.createElement(\"form\");\n        }\n\n        qq.obj2FormData(obj, {\n            append: function(key, val) {\n                input = document.createElement(\"input\");\n                input.setAttribute(\"name\", key);\n                input.setAttribute(\"value\", val);\n                form.appendChild(input);\n            }\n        });\n\n        return form;\n    };\n\n    /**\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\n     */\n    qq.parseJson = function(json) {\n        /*jshint evil: true*/\n        if (window.JSON && qq.isFunction(JSON.parse)) {\n            return JSON.parse(json);\n        } else {\n            return eval(\"(\" + json + \")\");\n        }\n    };\n\n    /**\n     * Retrieve the extension of a file, if it exists.\n     *\n     * @param filename\n     * @returns {string || undefined}\n     */\n    qq.getExtension = function(filename) {\n        var extIdx = filename.lastIndexOf(\".\") + 1;\n\n        if (extIdx > 0) {\n            return filename.substr(extIdx, filename.length - extIdx);\n        }\n    };\n\n    qq.getFilename = function(blobOrFileInput) {\n        /*jslint regexp: true*/\n\n        if (qq.isInput(blobOrFileInput)) {\n            // get input value and remove path to normalize\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n        }\n        else if (qq.isFile(blobOrFileInput)) {\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                return blobOrFileInput.fileName;\n            }\n        }\n\n        return blobOrFileInput.name;\n    };\n\n    /**\n     * A generic module which supports object disposing in dispose() method.\n     * */\n    qq.DisposeSupport = function() {\n        var disposers = [];\n\n        return {\n            /** Run all registered disposers */\n            dispose: function() {\n                var disposer;\n                do {\n                    disposer = disposers.shift();\n                    if (disposer) {\n                        disposer();\n                    }\n                }\n                while (disposer);\n            },\n\n            /** Attach event handler and register de-attacher as a disposer */\n            attach: function() {\n                var args = arguments;\n                /*jslint undef:true*/\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n            },\n\n            /** Add disposer to the collection */\n            addDisposer: function(disposeFunction) {\n                disposers.push(disposeFunction);\n            }\n        };\n    };\n}());\n","/* globals define, module, global, qq */\n(function() {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return qq;\n        });\n    }\n    else if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = qq;\n    }\n    else {\n        global.qq = qq;\n    }\n}());\n","/* globals qq */\n/**\n * Fine Uploader top-level Error container.  Inherits from `Error`.\n */\n(function() {\n    \"use strict\";\n\n    qq.Error = function(message) {\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n    };\n\n    qq.Error.prototype = new Error();\n}());\n","/*global qq */\nqq.version = \"5.14.0-beta1\";\n","/* globals qq */\nqq.supportedFeatures = (function() {\n    \"use strict\";\n\n    var supportsUploading,\n        supportsUploadingBlobs,\n        supportsFileDrop,\n        supportsAjaxFileUploading,\n        supportsFolderDrop,\n        supportsChunking,\n        supportsResume,\n        supportsUploadViaPaste,\n        supportsUploadCors,\n        supportsDeleteFileXdr,\n        supportsDeleteFileCorsXhr,\n        supportsDeleteFileCors,\n        supportsFolderSelection,\n        supportsImagePreviews,\n        supportsUploadProgress;\n\n    function testSupportsFileInputElement() {\n        var supported = true,\n            tempInput;\n\n        try {\n            tempInput = document.createElement(\"input\");\n            tempInput.type = \"file\";\n            qq(tempInput).hide();\n\n            if (tempInput.disabled) {\n                supported = false;\n            }\n        }\n        catch (ex) {\n            supported = false;\n        }\n\n        return supported;\n    }\n\n    //only way to test for Filesystem API support since webkit does not expose the DataTransfer interface\n    function isChrome21OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[2][1-9]|Chrome\\/[3-9][0-9]/) !== undefined;\n    }\n\n    //only way to test for complete Clipboard API support at this time\n    function isChrome14OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n    }\n\n    //Ensure we can send cross-origin `XMLHttpRequest`s\n    function isCrossOriginXhrSupported() {\n        if (window.XMLHttpRequest) {\n            var xhr = qq.createXhrInstance();\n\n            //Commonly accepted test for XHR CORS support.\n            return xhr.withCredentials !== undefined;\n        }\n\n        return false;\n    }\n\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\n    function isXdrSupported() {\n        return window.XDomainRequest !== undefined;\n    }\n\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\n    // or if `XDomainRequest` is an available alternative.\n    function isCrossOriginAjaxSupported() {\n        if (isCrossOriginXhrSupported()) {\n            return true;\n        }\n\n        return isXdrSupported();\n    }\n\n    function isFolderSelectionSupported() {\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\n        return document.createElement(\"input\").webkitdirectory !== undefined;\n    }\n\n    function isLocalStorageSupported() {\n        try {\n            return !!window.localStorage &&\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\n                qq.isFunction(window.localStorage.setItem);\n        }\n        catch (error) {\n            // probably caught a security exception, so no localStorage for you\n            return false;\n        }\n    }\n\n    function isDragAndDropSupported() {\n        var span = document.createElement(\"span\");\n\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\n            !qq.android() && !qq.ios();\n    }\n\n    supportsUploading = testSupportsFileInputElement();\n\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n\n    supportsFolderDrop = supportsFileDrop && isChrome21OrHigher();\n\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n\n    supportsDeleteFileXdr = isXdrSupported();\n\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\n\n    supportsFolderSelection = isFolderSelectionSupported();\n\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n\n    supportsUploadProgress = (function() {\n        if (supportsAjaxFileUploading) {\n            return !qq.androidStock() && !qq.iosChrome();\n        }\n        return false;\n    }());\n\n    return {\n        ajaxUploading: supportsAjaxFileUploading,\n        blobUploading: supportsUploadingBlobs,\n        canDetermineSize: supportsAjaxFileUploading,\n        chunking: supportsChunking,\n        deleteFileCors: supportsDeleteFileCors,\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n        dialogElement: !!window.HTMLDialogElement,\n        fileDrop: supportsFileDrop,\n        folderDrop: supportsFolderDrop,\n        folderSelection: supportsFolderSelection,\n        imagePreviews: supportsImagePreviews,\n        imageValidation: supportsImagePreviews,\n        itemSizeValidation: supportsAjaxFileUploading,\n        pause: supportsChunking,\n        progressBar: supportsUploadProgress,\n        resume: supportsResume,\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\n        uploading: supportsUploading,\n        uploadCors: supportsUploadCors,\n        uploadCustomHeaders: supportsAjaxFileUploading,\n        uploadNonMultipart: supportsAjaxFileUploading,\n        uploadViaPaste: supportsUploadViaPaste\n    };\n\n}());\n","/*globals qq*/\n\n// Is the passed object a promise instance?\nqq.isGenericPromise = function(maybePromise) {\n    \"use strict\";\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n};\n\nqq.Promise = function() {\n    \"use strict\";\n\n    var successArgs, failureArgs,\n        successCallbacks = [],\n        failureCallbacks = [],\n        doneCallbacks = [],\n        state = 0;\n\n    qq.extend(this, {\n        then: function(onSuccess, onFailure) {\n            if (state === 0) {\n                if (onSuccess) {\n                    successCallbacks.push(onSuccess);\n                }\n                if (onFailure) {\n                    failureCallbacks.push(onFailure);\n                }\n            }\n            else if (state === -1) {\n                onFailure && onFailure.apply(null, failureArgs);\n            }\n            else if (onSuccess) {\n                onSuccess.apply(null, successArgs);\n            }\n\n            return this;\n        },\n\n        done: function(callback) {\n            if (state === 0) {\n                doneCallbacks.push(callback);\n            }\n            else {\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n            }\n\n            return this;\n        },\n\n        success: function() {\n            state = 1;\n            successArgs = arguments;\n\n            if (successCallbacks.length) {\n                qq.each(successCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            return this;\n        },\n\n        failure: function() {\n            state = -1;\n            failureArgs = arguments;\n\n            if (failureCallbacks.length) {\n                qq.each(failureCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            return this;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Placeholder for a Blob that will be generated on-demand.\n *\n * @param referenceBlob Parent of the generated blob\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\n * @constructor\n */\nqq.BlobProxy = function(referenceBlob, onCreate) {\n    \"use strict\";\n\n    qq.extend(this, {\n        referenceBlob: referenceBlob,\n\n        create: function() {\n            return onCreate(referenceBlob);\n        }\n    });\n};\n","/*globals qq*/\n\n/**\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\n * provided here by adding CSS classes to the container on hover/focus.\n *\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\n * available on all supported browsers.\n *\n * @param o Options to override the default values\n */\nqq.UploadButton = function(o) {\n    \"use strict\";\n\n    var self = this,\n\n        disposeSupport = new qq.DisposeSupport(),\n\n        options = {\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\n            acceptFiles: null,\n\n            // \"Container\" element\n            element: null,\n\n            focusClass: \"qq-upload-button-focus\",\n\n            // A true value allows folders to be selected, if supported by the UA\n            folders: false,\n\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n            hoverClass: \"qq-upload-button-hover\",\n\n            ios8BrowserCrashWorkaround: false,\n\n            // If true adds `multiple` attribute to `<input type=\"file\">`\n            multiple: false,\n\n            // `name` attribute of `<input type=\"file\">`\n            name: \"qqfile\",\n\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\n            onChange: function(input) {},\n\n            title: null\n        },\n        input, buttonId;\n\n    // Overrides any of the default option values with any option values passed in during construction.\n    qq.extend(options, o);\n\n    buttonId = qq.getUniqueId();\n\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\n    function createInput() {\n        var input = document.createElement(\"input\");\n\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n        input.setAttribute(\"title\", options.title);\n\n        self.setMultiple(options.multiple, input);\n\n        if (options.folders && qq.supportedFeatures.folderSelection) {\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\n            input.setAttribute(\"webkitdirectory\", \"\");\n        }\n\n        if (options.acceptFiles) {\n            input.setAttribute(\"accept\", options.acceptFiles);\n        }\n\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"name\", options.name);\n\n        qq(input).css({\n            position: \"absolute\",\n            // in Opera only 'browse' button\n            // is clickable and it is located at\n            // the right side of the input\n            right: 0,\n            top: 0,\n            fontFamily: \"Arial\",\n            // It's especially important to make this an arbitrarily large value\n            // to ensure the rendered input button in IE takes up the entire\n            // space of the container element.  Otherwise, the left side of the\n            // button will require a double-click to invoke the file chooser.\n            // In other browsers, this might cause other issues, so a large font-size\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\n            // in some cases when the font-size is large.  So, this workaround is not applied\n            // to IE8.\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n            margin: 0,\n            padding: 0,\n            cursor: \"pointer\",\n            opacity: 0\n        });\n\n        // Setting the file input's height to 100% in IE7 causes\n        // most of the visible button to be unclickable.\n        !qq.ie7() && qq(input).css({height: \"100%\"});\n\n        options.element.appendChild(input);\n\n        disposeSupport.attach(input, \"change\", function() {\n            options.onChange(input);\n        });\n\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n        disposeSupport.attach(input, \"mouseover\", function() {\n            qq(options.element).addClass(options.hoverClass);\n        });\n        disposeSupport.attach(input, \"mouseout\", function() {\n            qq(options.element).removeClass(options.hoverClass);\n        });\n\n        disposeSupport.attach(input, \"focus\", function() {\n            qq(options.element).addClass(options.focusClass);\n        });\n        disposeSupport.attach(input, \"blur\", function() {\n            qq(options.element).removeClass(options.focusClass);\n        });\n\n        return input;\n    }\n\n    // Make button suitable container for input\n    qq(options.element).css({\n        position: \"relative\",\n        overflow: \"hidden\",\n        // Make sure browse button is in the right side in Internet Explorer\n        direction: \"ltr\"\n    });\n\n    // Exposed API\n    qq.extend(this, {\n        getInput: function() {\n            return input;\n        },\n\n        getButtonId: function() {\n            return buttonId;\n        },\n\n        setMultiple: function(isMultiple, optInput) {\n            var input = optInput || this.getInput();\n\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\n            // See #1283.\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                input.setAttribute(\"multiple\", \"\");\n            }\n\n            else {\n                if (isMultiple) {\n                    input.setAttribute(\"multiple\", \"\");\n                }\n                else {\n                    input.removeAttribute(\"multiple\");\n                }\n            }\n        },\n\n        setAcceptFiles: function(acceptFiles) {\n            if (acceptFiles !== options.acceptFiles) {\n                input.setAttribute(\"accept\", acceptFiles);\n            }\n        },\n\n        reset: function() {\n            if (input.parentNode) {\n                qq(input).remove();\n            }\n\n            qq(options.element).removeClass(options.focusClass);\n            input = null;\n            input = createInput();\n        }\n    });\n\n    input = createInput();\n};\n\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n","/*globals qq */\nqq.UploadData = function(uploaderProxy) {\n    \"use strict\";\n\n    var data = [],\n        byUuid = {},\n        byStatus = {},\n        byProxyGroupId = {},\n        byBatchId = {};\n\n    function getDataByIds(idOrIds) {\n        if (qq.isArray(idOrIds)) {\n            var entries = [];\n\n            qq.each(idOrIds, function(idx, id) {\n                entries.push(data[id]);\n            });\n\n            return entries;\n        }\n\n        return data[idOrIds];\n    }\n\n    function getDataByUuids(uuids) {\n        if (qq.isArray(uuids)) {\n            var entries = [];\n\n            qq.each(uuids, function(idx, uuid) {\n                entries.push(data[byUuid[uuid]]);\n            });\n\n            return entries;\n        }\n\n        return data[byUuid[uuids]];\n    }\n\n    function getDataByStatus(status) {\n        var statusResults = [],\n            statuses = [].concat(status);\n\n        qq.each(statuses, function(index, statusEnum) {\n            var statusResultIndexes = byStatus[statusEnum];\n\n            if (statusResultIndexes !== undefined) {\n                qq.each(statusResultIndexes, function(i, dataIndex) {\n                    statusResults.push(data[dataIndex]);\n                });\n            }\n        });\n\n        return statusResults;\n    }\n\n    qq.extend(this, {\n        /**\n         * Adds a new file to the data cache for tracking purposes.\n         *\n         * @param spec Data that describes this file.  Possible properties are:\n         *\n         * - uuid: Initial UUID for this file.\n         * - name: Initial name of this file.\n         * - size: Size of this file, omit if this cannot be determined\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\n         * - batchId: ID of the batch this file belongs to\n         * - proxyGroupId: ID of the proxy group associated with this file\n         *\n         * @returns {number} Internal ID for this file.\n         */\n        addFile: function(spec) {\n            var status = spec.status || qq.status.SUBMITTING,\n                id = data.push({\n                    name: spec.name,\n                    originalName: spec.name,\n                    uuid: spec.uuid,\n                    size: spec.size == null ? -1 : spec.size,\n                    status: status\n                }) - 1;\n\n            if (spec.batchId) {\n                data[id].batchId = spec.batchId;\n\n                if (byBatchId[spec.batchId] === undefined) {\n                    byBatchId[spec.batchId] = [];\n                }\n                byBatchId[spec.batchId].push(id);\n            }\n\n            if (spec.proxyGroupId) {\n                data[id].proxyGroupId = spec.proxyGroupId;\n\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\n                    byProxyGroupId[spec.proxyGroupId] = [];\n                }\n                byProxyGroupId[spec.proxyGroupId].push(id);\n            }\n\n            data[id].id = id;\n            byUuid[spec.uuid] = id;\n\n            if (byStatus[status] === undefined) {\n                byStatus[status] = [];\n            }\n            byStatus[status].push(id);\n\n            uploaderProxy.onStatusChange(id, null, status);\n\n            return id;\n        },\n\n        retrieve: function(optionalFilter) {\n            if (qq.isObject(optionalFilter) && data.length)  {\n                if (optionalFilter.id !== undefined) {\n                    return getDataByIds(optionalFilter.id);\n                }\n\n                else if (optionalFilter.uuid !== undefined) {\n                    return getDataByUuids(optionalFilter.uuid);\n                }\n\n                else if (optionalFilter.status) {\n                    return getDataByStatus(optionalFilter.status);\n                }\n            }\n            else {\n                return qq.extend([], data, true);\n            }\n        },\n\n        reset: function() {\n            data = [];\n            byUuid = {};\n            byStatus = {};\n            byBatchId = {};\n        },\n\n        setStatus: function(id, newStatus) {\n            var oldStatus = data[id].status,\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\n\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\n\n            data[id].status = newStatus;\n\n            if (byStatus[newStatus] === undefined) {\n                byStatus[newStatus] = [];\n            }\n            byStatus[newStatus].push(id);\n\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\n        },\n\n        uuidChanged: function(id, newUuid) {\n            var oldUuid = data[id].uuid;\n\n            data[id].uuid = newUuid;\n            byUuid[newUuid] = id;\n            delete byUuid[oldUuid];\n        },\n\n        updateName: function(id, newName) {\n            data[id].name = newName;\n        },\n\n        updateSize: function(id, newSize) {\n            data[id].size = newSize;\n        },\n\n        // Only applicable if this file has a parent that we may want to reference later.\n        setParentId: function(targetId, parentId) {\n            data[targetId].parentId = parentId;\n        },\n\n        getIdsInProxyGroup: function(id) {\n            var proxyGroupId = data[id].proxyGroupId;\n\n            if (proxyGroupId) {\n                return byProxyGroupId[proxyGroupId];\n            }\n            return [];\n        },\n\n        getIdsInBatch: function(id) {\n            var batchId = data[id].batchId;\n\n            return byBatchId[batchId];\n        }\n    });\n};\n\nqq.status = {\n    SUBMITTING: \"submitting\",\n    SUBMITTED: \"submitted\",\n    REJECTED: \"rejected\",\n    QUEUED: \"queued\",\n    CANCELED: \"canceled\",\n    PAUSED: \"paused\",\n    UPLOADING: \"uploading\",\n    UPLOAD_RETRYING: \"retrying upload\",\n    UPLOAD_SUCCESSFUL: \"upload successful\",\n    UPLOAD_FAILED: \"upload failed\",\n    DELETE_FAILED: \"delete failed\",\n    DELETING: \"deleting\",\n    DELETED: \"deleted\"\n};\n","/*globals qq*/\n/**\n * Defines the public API for FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.basePublicApi = {\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\n        addBlobs: function(blobDataOrArray, params, endpoint) {\n            this.addFiles(blobDataOrArray, params, endpoint);\n        },\n\n        addInitialFiles: function(cannedFileList) {\n            var self = this;\n\n            qq.each(cannedFileList, function(index, cannedFile) {\n                self._addCannedFile(cannedFile);\n            });\n        },\n\n        addFiles: function(data, params, endpoint) {\n            this._maybeHandleIos8SafariWorkaround();\n\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\n\n                processBlob = qq.bind(function(blob) {\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processBlobData = qq.bind(function(blobData) {\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\n                }, this),\n\n                processCanvas = qq.bind(function(canvas) {\n                    var blob = qq.canvasToBlob(canvas);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName + \".png\"\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processCanvasData = qq.bind(function(canvasData) {\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: canvasData.name\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processFileOrInput = qq.bind(function(fileOrInput) {\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\n                        var files = Array.prototype.slice.call(fileOrInput.files),\n                            self = this;\n\n                        qq.each(files, function(idx, file) {\n                            self._handleNewFile(file, batchId, verifiedFiles);\n                        });\n                    }\n                    else {\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\n                    }\n                }, this),\n\n                normalizeData = function() {\n                    if (qq.isFileList(data)) {\n                        data = Array.prototype.slice.call(data);\n                    }\n                    data = [].concat(data);\n                },\n\n                self = this,\n                verifiedFiles = [];\n\n            this._currentBatchId = batchId;\n\n            if (data) {\n                normalizeData();\n\n                qq.each(data, function(idx, fileContainer) {\n                    if (qq.isFileOrInput(fileContainer)) {\n                        processFileOrInput(fileContainer);\n                    }\n                    else if (qq.isBlob(fileContainer)) {\n                        processBlob(fileContainer);\n                    }\n                    else if (qq.isObject(fileContainer)) {\n                        if (fileContainer.blob && fileContainer.name) {\n                            processBlobData(fileContainer);\n                        }\n                        else if (fileContainer.canvas && fileContainer.name) {\n                            processCanvasData(fileContainer);\n                        }\n                    }\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\n                        processCanvas(fileContainer);\n                    }\n                    else {\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\n                    }\n                });\n\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\n            }\n        },\n\n        cancel: function(id) {\n            this._handler.cancel(id);\n        },\n\n        cancelAll: function() {\n            var storedIdsCopy = [],\n                self = this;\n\n            qq.extend(storedIdsCopy, this._storedIds);\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\n                self.cancel(storedFileId);\n            });\n\n            this._handler.cancelAll();\n        },\n\n        clearStoredFiles: function() {\n            this._storedIds = [];\n        },\n\n        continueUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            if (uploadData.status === qq.status.PAUSED) {\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\n                this._uploadFile(id);\n                return true;\n            }\n            else {\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        deleteFile: function(id) {\n            return this._onSubmitDelete(id);\n        },\n\n        // TODO document?\n        doesExist: function(fileOrBlobId) {\n            return this._handler.isValid(fileOrBlobId);\n        },\n\n        // Generate a variable size thumbnail on an img or canvas,\n        // returning a promise that is fulfilled when the attempt completes.\n        // Thumbnail can either be based off of a URL for an image returned\n        // by the server in the upload response, or the associated `Blob`.\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\n            var promiseToReturn = new qq.Promise(),\n                fileOrUrl, options;\n\n            if (this._imageGenerator) {\n                fileOrUrl = this._thumbnailUrls[fileId];\n                options = {\n                    customResizeFunction: customResizeFunction,\n                    maxSize: maxSize > 0 ? maxSize : null,\n                    scale: maxSize > 0\n                };\n\n                // If client-side preview generation is possible\n                // and we are not specifically looking for the image URl returned by the server...\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\n                    fileOrUrl = this.getFile(fileId);\n                }\n\n                /* jshint eqeqeq:false,eqnull:true */\n                if (fileOrUrl == null) {\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\n                }\n                else {\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\n                        function success(modifiedContainer) {\n                            promiseToReturn.success(modifiedContainer);\n                        },\n\n                        function failure(container, reason) {\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\n                        }\n                    );\n                }\n            }\n            else {\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\n            }\n\n            return promiseToReturn;\n        },\n\n        getButton: function(fileId) {\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\n        },\n\n        getEndpoint: function(fileId) {\n            return this._endpointStore.get(fileId);\n        },\n\n        getFile: function(fileOrBlobId) {\n            return this._handler.getFile(fileOrBlobId) || null;\n        },\n\n        getInProgress: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED\n                ]\n            }).length;\n        },\n\n        getName: function(id) {\n            return this._uploadData.retrieve({id: id}).name;\n        },\n\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\n        getParentId: function(id) {\n            var uploadDataEntry = this.getUploads({id: id}),\n                parentId = null;\n\n            if (uploadDataEntry) {\n                if (uploadDataEntry.parentId !== undefined) {\n                    parentId = uploadDataEntry.parentId;\n                }\n            }\n\n            return parentId;\n        },\n\n        getResumableFilesData: function() {\n            return this._handler.getResumableFilesData();\n        },\n\n        getSize: function(id) {\n            return this._uploadData.retrieve({id: id}).size;\n        },\n\n        getNetUploads: function() {\n            return this._netUploaded;\n        },\n\n        getRemainingAllowedItems: function() {\n            var allowedItems = this._currentItemLimit;\n\n            if (allowedItems > 0) {\n                return allowedItems - this._netUploadedOrQueued;\n            }\n\n            return null;\n        },\n\n        getUploads: function(optionalFilter) {\n            return this._uploadData.retrieve(optionalFilter);\n        },\n\n        getUuid: function(id) {\n            return this._uploadData.retrieve({id: id}).uuid;\n        },\n\n        log: function(str, level) {\n            if (this._options.debug && (!level || level === \"info\")) {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\n            }\n            else if (level && level !== \"info\") {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\n\n            }\n        },\n\n        pauseUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            // Pause only really makes sense if the file is uploading or retrying\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\n                if (this._handler.pause(id)) {\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\n                    return true;\n                }\n                else {\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\n                }\n            }\n            else {\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        removeFileRef: function(id) {\n            this._handler.expunge(id);\n        },\n\n        reset: function() {\n            this.log(\"Resetting uploader...\");\n\n            this._handler.reset();\n            this._storedIds = [];\n            this._autoRetries = [];\n            this._retryTimeouts = [];\n            this._preventRetries = [];\n            this._thumbnailUrls = [];\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n\n            this._paramsStore.reset();\n            this._endpointStore.reset();\n            this._netUploadedOrQueued = 0;\n            this._netUploaded = 0;\n            this._uploadData.reset();\n            this._buttonIdsForFileIds = [];\n\n            this._pasteHandler && this._pasteHandler.reset();\n            this._options.session.refreshOnReset && this._refreshSessionData();\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n\n            this._totalProgress && this._totalProgress.reset();\n        },\n\n        retry: function(id) {\n            return this._manualRetry(id);\n        },\n\n        scaleImage: function(id, specs) {\n            var self = this;\n\n            return qq.Scaler.prototype.scaleImage(id, specs, {\n                log: qq.bind(self.log, self),\n                getFile: qq.bind(self.getFile, self),\n                uploadData: self._uploadData\n            });\n        },\n\n        setCustomHeaders: function(headers, id) {\n            this._customHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileCustomHeaders: function(headers, id) {\n            this._deleteFileCustomHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileEndpoint: function(endpoint, id) {\n            this._deleteFileEndpointStore.set(endpoint, id);\n        },\n\n        setDeleteFileParams: function(params, id) {\n            this._deleteFileParamsStore.set(params, id);\n        },\n\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\n        setEndpoint: function(endpoint, id) {\n            this._endpointStore.set(endpoint, id);\n        },\n\n        setForm: function(elementOrId) {\n            this._updateFormSupportAndParams(elementOrId);\n        },\n\n        setItemLimit: function(newItemLimit) {\n            this._currentItemLimit = newItemLimit;\n        },\n\n        setName: function(id, newName) {\n            this._uploadData.updateName(id, newName);\n        },\n\n        setParams: function(params, id) {\n            this._paramsStore.set(params, id);\n        },\n\n        setUuid: function(id, newUuid) {\n            return this._uploadData.uuidChanged(id, newUuid);\n        },\n\n        uploadStoredFiles: function() {\n            if (this._storedIds.length === 0) {\n                this._itemError(\"noFilesError\");\n            }\n            else {\n                this._uploadStoredFiles();\n            }\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploaderBasic mode.\n     */\n    qq.basePrivateApi = {\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\n        _addCannedFile: function(sessionData) {\n            var id = this._uploadData.addFile({\n                uuid: sessionData.uuid,\n                name: sessionData.name,\n                size: sessionData.size,\n                status: qq.status.UPLOAD_SUCCESSFUL\n            });\n\n            sessionData.deleteFileEndpoint && this.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\n            sessionData.deleteFileParams && this.setDeleteFileParams(sessionData.deleteFileParams, id);\n\n            if (sessionData.thumbnailUrl) {\n                this._thumbnailUrls[id] = sessionData.thumbnailUrl;\n            }\n\n            this._netUploaded++;\n            this._netUploadedOrQueued++;\n\n            return id;\n        },\n\n        _annotateWithButtonId: function(file, associatedInput) {\n            if (qq.isFile(file)) {\n                file.qqButtonId = this._getButtonId(associatedInput);\n            }\n        },\n\n        _batchError: function(message) {\n            this._options.callbacks.onError(null, null, message, undefined);\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return new qq.DeleteFileAjaxRequester({\n                method: this._options.deleteFile.method.toUpperCase(),\n                maxConnections: this._options.maxConnections,\n                uuidParamName: this._options.request.uuidName,\n                customHeaders: this._deleteFileCustomHeadersStore,\n                paramsStore: this._deleteFileParamsStore,\n                endpointStore: this._deleteFileEndpointStore,\n                cors: this._options.cors,\n                log: qq.bind(self.log, self),\n                onDelete: function(id) {\n                    self._onDelete(id);\n                    self._options.callbacks.onDelete(id);\n                },\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                }\n\n            });\n        },\n\n        _createPasteHandler: function() {\n            var self = this;\n\n            return new qq.PasteSupport({\n                targetElement: this._options.paste.targetElement,\n                callbacks: {\n                    log: qq.bind(self.log, self),\n                    pasteReceived: function(blob) {\n                        self._handleCheckedCallback({\n                            name: \"onPasteReceived\",\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\n                            identifier: \"pasted image\"\n                        });\n                    }\n                }\n            });\n        },\n\n        _createStore: function(initialValue, _readOnlyValues_) {\n            var store = {},\n                catchall = initialValue,\n                perIdReadOnlyValues = {},\n                readOnlyValues = _readOnlyValues_,\n                copy = function(orig) {\n                    if (qq.isObject(orig)) {\n                        return qq.extend({}, orig);\n                    }\n                    return orig;\n                },\n                getReadOnlyValues = function() {\n                    if (qq.isFunction(readOnlyValues)) {\n                        return readOnlyValues();\n                    }\n                    return readOnlyValues;\n                },\n                includeReadOnlyValues = function(id, existing) {\n                    if (readOnlyValues && qq.isObject(existing)) {\n                        qq.extend(existing, getReadOnlyValues());\n                    }\n\n                    if (perIdReadOnlyValues[id]) {\n                        qq.extend(existing, perIdReadOnlyValues[id]);\n                    }\n                };\n\n            return {\n                set: function(val, id) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id == null) {\n                        store = {};\n                        catchall = copy(val);\n                    }\n                    else {\n                        store[id] = copy(val);\n                    }\n                },\n\n                get: function(id) {\n                    var values;\n\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id != null && store[id]) {\n                        values = store[id];\n                    }\n                    else {\n                        values = copy(catchall);\n                    }\n\n                    includeReadOnlyValues(id, values);\n\n                    return copy(values);\n                },\n\n                addReadOnly: function(id, values) {\n                    // Only applicable to Object stores\n                    if (qq.isObject(store)) {\n                        // If null ID, apply readonly values to all files\n                        if (id === null) {\n                            if (qq.isFunction(values)) {\n                                readOnlyValues = values;\n                            }\n                            else {\n                                readOnlyValues = readOnlyValues || {};\n                                qq.extend(readOnlyValues, values);\n                            }\n                        }\n                        else {\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\n                            qq.extend(perIdReadOnlyValues[id], values);\n                        }\n                    }\n                },\n\n                remove: function(fileId) {\n                    return delete store[fileId];\n                },\n\n                reset: function() {\n                    store = {};\n                    perIdReadOnlyValues = {};\n                    catchall = initialValue;\n                }\n            };\n        },\n\n        _createUploadDataTracker: function() {\n            var self = this;\n\n            return new qq.UploadData({\n                getName: function(id) {\n                    return self.getName(id);\n                },\n                getUuid: function(id) {\n                    return self.getUuid(id);\n                },\n                getSize: function(id) {\n                    return self.getSize(id);\n                },\n                onStatusChange: function(id, oldStatus, newStatus) {\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\n                    self._maybeAllComplete(id, newStatus);\n\n                    if (self._totalProgress) {\n                        setTimeout(function() {\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\n                        }, 0);\n                    }\n                }\n            });\n        },\n\n        /**\n         * Generate a tracked upload button.\n         *\n         * @param spec Object containing a required `element` property\n         * along with optional `multiple`, `accept`, and `folders`.\n         * @returns {qq.UploadButton}\n         * @private\n         */\n        _createUploadButton: function(spec) {\n            var self = this,\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\n                button;\n\n            function allowMultiple() {\n                if (qq.supportedFeatures.ajaxUploading) {\n                    // Workaround for bug in iOS7+ (see #1039)\n                    if (self._options.workarounds.iosEmptyVideos &&\n                        qq.ios() &&\n                        !qq.ios6() &&\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\n\n                        return false;\n                    }\n\n                    if (spec.multiple === undefined) {\n                        return self._options.multiple;\n                    }\n\n                    return spec.multiple;\n                }\n\n                return false;\n            }\n\n            button = new qq.UploadButton({\n                acceptFiles: acceptFiles,\n                element: spec.element,\n                focusClass: this._options.classes.buttonFocus,\n                folders: spec.folders,\n                hoverClass: this._options.classes.buttonHover,\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\n                multiple: allowMultiple(),\n                name: this._options.request.inputName,\n                onChange: function(input) {\n                    self._onInputChange(input);\n                },\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\n            });\n\n            this._disposeSupport.addDisposer(function() {\n                button.dispose();\n            });\n\n            self._buttons.push(button);\n\n            return button;\n        },\n\n        _createUploadHandler: function(additionalOptions, namespace) {\n            var self = this,\n                lastOnProgress = {},\n                options = {\n                    debug: this._options.debug,\n                    maxConnections: this._options.maxConnections,\n                    cors: this._options.cors,\n                    paramsStore: this._paramsStore,\n                    endpointStore: this._endpointStore,\n                    chunking: this._options.chunking,\n                    resume: this._options.resume,\n                    blobs: this._options.blobs,\n                    log: qq.bind(self.log, self),\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\n                    onProgress: function(id, name, loaded, total) {\n                        if (loaded < 0 || total < 0) {\n                            return;\n                        }\n\n                        if (lastOnProgress[id]) {\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\n                                self._onProgress(id, name, loaded, total);\n                                self._options.callbacks.onProgress(id, name, loaded, total);\n                            }\n                        }\n                        else {\n                            self._onProgress(id, name, loaded, total);\n                            self._options.callbacks.onProgress(id, name, loaded, total);\n                        }\n\n                        lastOnProgress[id] = {loaded: loaded, total: total};\n\n                    },\n                    onComplete: function(id, name, result, xhr) {\n                        delete lastOnProgress[id];\n\n                        var status = self.getUploads({id: id}).status,\n                            retVal;\n\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\n                        // invoked by the browser multiple times for the same XHR instance with the same state\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\n                        // done this.\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\n                            return;\n                        }\n\n                        retVal = self._onComplete(id, name, result, xhr);\n\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\n                        // until the promise has been fulfilled.\n                        if (retVal instanceof  qq.Promise) {\n                            retVal.done(function() {\n                                self._options.callbacks.onComplete(id, name, result, xhr);\n                            });\n                        }\n                        else {\n                            self._options.callbacks.onComplete(id, name, result, xhr);\n                        }\n                    },\n                    onCancel: function(id, name, cancelFinalizationEffort) {\n                        var promise = new qq.Promise();\n\n                        self._handleCheckedCallback({\n                            name: \"onCancel\",\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\n                            onFailure: promise.failure,\n                            onSuccess: function() {\n                                cancelFinalizationEffort.then(function() {\n                                    self._onCancel(id, name);\n                                });\n\n                                promise.success();\n                            },\n                            identifier: id\n                        });\n\n                        return promise;\n                    },\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\n                    onUpload: function(id, name) {\n                        self._onUpload(id, name);\n                        self._options.callbacks.onUpload(id, name);\n                    },\n                    onUploadChunk: function(id, name, chunkData) {\n                        self._onUploadChunk(id, chunkData);\n                        self._options.callbacks.onUploadChunk(id, name, chunkData);\n                    },\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\n                    },\n                    onResume: function(id, name, chunkData) {\n                        return self._options.callbacks.onResume(id, name, chunkData);\n                    },\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\n                        return self._onAutoRetry.apply(self, arguments);\n                    },\n                    onUuidChanged: function(id, newUuid) {\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\n                        self.setUuid(id, newUuid);\n                    },\n                    getName: qq.bind(self.getName, self),\n                    getUuid: qq.bind(self.getUuid, self),\n                    getSize: qq.bind(self.getSize, self),\n                    setSize: qq.bind(self._setSize, self),\n                    getDataByUuid: function(uuid) {\n                        return self.getUploads({uuid: uuid});\n                    },\n                    isQueued: function(id) {\n                        var status = self.getUploads({id: id}).status;\n                        return status === qq.status.QUEUED ||\n                            status === qq.status.SUBMITTED ||\n                            status === qq.status.UPLOAD_RETRYING ||\n                            status === qq.status.PAUSED;\n                    },\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\n                    getIdsInBatch: self._uploadData.getIdsInBatch\n                };\n\n            qq.each(this._options.request, function(prop, val) {\n                options[prop] = val;\n            });\n\n            options.customHeaders = this._customHeadersStore;\n\n            if (additionalOptions) {\n                qq.each(additionalOptions, function(key, val) {\n                    options[key] = val;\n                });\n            }\n\n            return new qq.UploadHandlerController(options, namespace);\n        },\n\n        _fileOrBlobRejected: function(id) {\n            this._netUploadedOrQueued--;\n            this._uploadData.setStatus(id, qq.status.REJECTED);\n        },\n\n        _formatSize: function(bytes) {\n            if (bytes === 0) {\n                return bytes + this._options.text.sizeSymbols[0];\n            }\n            var i = -1;\n            do {\n                bytes = bytes / 1000;\n                i++;\n            } while (bytes > 999);\n\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\n        },\n\n        // Creates an internal object that tracks various properties of each extra button,\n        // and then actually creates the extra button.\n        _generateExtraButtonSpecs: function() {\n            var self = this;\n\n            this._extraButtonSpecs = {};\n\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\n                var multiple = extraButtonOptionEntry.multiple,\n                    validation = qq.extend({}, self._options.validation, true),\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\n\n                if (multiple === undefined) {\n                    multiple = self._options.multiple;\n                }\n\n                if (extraButtonSpec.validation) {\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\n                }\n\n                qq.extend(extraButtonSpec, {\n                    multiple: multiple,\n                    validation: validation\n                }, true);\n\n                self._initExtraButton(extraButtonSpec);\n            });\n        },\n\n        _getButton: function(buttonId) {\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\n\n            if (extraButtonsSpec) {\n                return extraButtonsSpec.element;\n            }\n            else if (buttonId === this._defaultButtonId) {\n                return this._options.button;\n            }\n        },\n\n        /**\n         * Gets the internally used tracking ID for a button.\n         *\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\n         * @private\n         */\n        _getButtonId: function(buttonOrFileInputOrFile) {\n            var inputs, fileInput,\n                fileBlobOrInput = buttonOrFileInputOrFile;\n\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\n            }\n\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\n                if (qq.isFile(fileBlobOrInput)) {\n                    return fileBlobOrInput.qqButtonId;\n                }\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\n\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\n\n                qq.each(inputs, function(idx, input) {\n                    if (input.getAttribute(\"type\") === \"file\") {\n                        fileInput = input;\n                        return false;\n                    }\n                });\n\n                if (fileInput) {\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n            }\n        },\n\n        _getNotFinished: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED,\n                    qq.status.SUBMITTING,\n                    qq.status.SUBMITTED,\n                    qq.status.PAUSED\n                ]\n            }).length;\n        },\n\n        // Get the validation options for this button.  Could be the default validation option\n        // or a specific one assigned to this particular button.\n        _getValidationBase: function(buttonId) {\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\n\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\n        },\n\n        _getValidationDescriptor: function(fileWrapper) {\n            if (fileWrapper.file instanceof qq.BlobProxy) {\n                return {\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\n                    size: fileWrapper.file.referenceBlob.size\n                };\n            }\n\n            return {\n                name: this.getUploads({id: fileWrapper.id}).name,\n                size: this.getUploads({id: fileWrapper.id}).size\n            };\n        },\n\n        _getValidationDescriptors: function(fileWrappers) {\n            var self = this,\n                fileDescriptors = [];\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\n            });\n\n            return fileDescriptors;\n        },\n\n        // Allows camera access on either the default or an extra button for iOS devices.\n        _handleCameraAccess: function() {\n            if (this._options.camera.ios && qq.ios()) {\n                var acceptIosCamera = \"image/*;capture=camera\",\n                    button = this._options.camera.button,\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\n                    optionRoot = this._options;\n\n                // If we are not targeting the default button, it is an \"extra\" button\n                if (buttonId && buttonId !== this._defaultButtonId) {\n                    optionRoot = this._extraButtonSpecs[buttonId];\n                }\n\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\n                optionRoot.multiple = false;\n\n                // update the options\n                if (optionRoot.validation.acceptFiles === null) {\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\n                }\n                else {\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\n                }\n\n                // update the already-created button\n                qq.each(this._buttons, function(idx, button) {\n                    if (button.getButtonId() === buttonId) {\n                        button.setMultiple(optionRoot.multiple);\n                        button.setAcceptFiles(optionRoot.acceptFiles);\n\n                        return false;\n                    }\n                });\n            }\n        },\n\n        _handleCheckedCallback: function(details) {\n            var self = this,\n                callbackRetVal = details.callback();\n\n            if (qq.isGenericPromise(callbackRetVal)) {\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\n                return callbackRetVal.then(\n                    function(successParam) {\n                        self.log(details.name + \" promise success for \" + details.identifier);\n                        details.onSuccess(successParam);\n                    },\n                    function() {\n                        if (details.onFailure) {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                            details.onFailure();\n                        }\n                        else {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                        }\n                    });\n            }\n\n            if (callbackRetVal !== false) {\n                details.onSuccess(callbackRetVal);\n            }\n            else {\n                if (details.onFailure) {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\n                    details.onFailure();\n                }\n                else {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\n                }\n            }\n\n            return callbackRetVal;\n        },\n\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\n            var self = this,\n                uuid = qq.getUniqueId(),\n                size = -1,\n                name = qq.getFilename(file),\n                actualFile = file.blob || file,\n                handler = this._customNewFileHandler ?\n                    this._customNewFileHandler :\n                    qq.bind(self._handleNewFileGeneric, self);\n\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\n                size = actualFile.size;\n            }\n\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\n                uploadData: self._uploadData,\n                paramsStore: self._paramsStore,\n                addFileToHandler: function(id, file) {\n                    self._handler.add(id, file);\n                    self._netUploadedOrQueued++;\n                    self._trackButton(id);\n                }\n            });\n        },\n\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\n            var id = this._uploadData.addFile({uuid: uuid, name: name, size: size, batchId: batchId});\n\n            this._handler.add(id, file);\n            this._trackButton(id);\n\n            this._netUploadedOrQueued++;\n\n            fileList.push({id: id, file: file});\n        },\n\n        _handlePasteSuccess: function(blob, extSuppliedName) {\n            var extension = blob.type.split(\"/\")[1],\n                name = extSuppliedName;\n\n            /*jshint eqeqeq: true, eqnull: true*/\n            if (name == null) {\n                name = this._options.paste.defaultName;\n            }\n\n            name += \".\" + extension;\n\n            this.addFiles({\n                name: name,\n                blob: blob\n            });\n        },\n\n        // Creates an extra button element\n        _initExtraButton: function(spec) {\n            var button = this._createUploadButton({\n                accept: spec.validation.acceptFiles,\n                allowedExtensions: spec.validation.allowedExtensions,\n                element: spec.element,\n                folders: spec.folders,\n                multiple: spec.multiple,\n                title: spec.fileInputTitle\n            });\n\n            this._extraButtonSpecs[button.getButtonId()] = spec;\n        },\n\n        _initFormSupportAndParams: function() {\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n            );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore = this._createStore(\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\n                );\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\n                }\n            }\n            else {\n                this._paramsStore = this._createStore(this._options.request.params);\n            }\n        },\n\n        _isDeletePossible: function() {\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\n                return false;\n            }\n\n            if (this._options.cors.expected) {\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\n                    return true;\n                }\n\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\n                    return true;\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n\n        _isAllowedExtension: function(allowed, fileName) {\n            var valid = false;\n\n            if (!allowed.length) {\n                return true;\n            }\n\n            qq.each(allowed, function(idx, allowedExt) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExt)) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\n\n                    if (fileName.match(extRegex) != null) {\n                        valid = true;\n                        return false;\n                    }\n                }\n            });\n\n            return valid;\n        },\n\n        /**\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\n         *\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\n         * @param maybeNameOrNames names of the items that have failed, if applicable\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\n         * @private\n         */\n        _itemError: function(code, maybeNameOrNames, item) {\n            var message = this._options.messages[code],\n                allowedExtensions = [],\n                names = [].concat(maybeNameOrNames),\n                name = names[0],\n                buttonId = this._getButtonId(item),\n                validationBase = this._getValidationBase(buttonId),\n                extensionsForMessage, placeholderMatch;\n\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExtension)) {\n                    allowedExtensions.push(allowedExtension);\n                }\n            });\n\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\n\n            r(\"{file}\", this._options.formatFileName(name));\n            r(\"{extensions}\", extensionsForMessage);\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\n\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\n            if (placeholderMatch !== null) {\n                qq.each(placeholderMatch, function(idx, placeholder) {\n                    r(placeholder, names[idx]);\n                });\n            }\n\n            this._options.callbacks.onError(null, name, message, undefined);\n\n            return message;\n        },\n\n        /**\n         * Conditionally orders a manual retry of a failed upload.\n         *\n         * @param id File ID of the failed upload\n         * @param callback Optional callback to invoke if a retry is prudent.\n         * In lieu of asking the upload handler to retry.\n         * @returns {boolean} true if a manual retry will occur\n         * @private\n         */\n        _manualRetry: function(id, callback) {\n            if (this._onBeforeManualRetry(id)) {\n                this._netUploadedOrQueued++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n\n                if (callback) {\n                    callback(id);\n                }\n                else {\n                    this._handler.retry(id);\n                }\n\n                return true;\n            }\n        },\n\n        _maybeAllComplete: function(id, status) {\n            var self = this,\n                notFinished = this._getNotFinished();\n\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\n                this._succeededSinceLastAllComplete.push(id);\n            }\n            else if (status === qq.status.UPLOAD_FAILED) {\n                this._failedSinceLastAllComplete.push(id);\n            }\n\n            if (notFinished === 0 &&\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\n                setTimeout(function() {\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\n                }, 0);\n            }\n        },\n\n        _maybeHandleIos8SafariWorkaround: function() {\n            var self = this;\n\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n                setTimeout(function() {\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\n                }, 0);\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\n            }\n        },\n\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\n            // Assuming no one will actually set the response code to something other than 200\n            // and still set 'success' to true...\n            if (!response.success) {\n                if (xhr && xhr.status !== 200 && !response.error) {\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\n                }\n                else {\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\n                }\n            }\n        },\n\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\n            var self = this;\n\n            if (items.length > index) {\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\n                    setTimeout(function() {\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\n                            buttonId = self._getButtonId(items[index].file),\n                            button = self._getButton(buttonId);\n\n                        self._handleCheckedCallback({\n                            name: \"onValidate\",\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\n                        });\n                    }, 0);\n                }\n                else if (!validItem) {\n                    for (; index < items.length; index++) {\n                        self._fileOrBlobRejected(items[index].id);\n                    }\n                }\n            }\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\n\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n        },\n\n        /**\n         * Attempt to automatically retry a failed upload.\n         *\n         * @param id The file ID of the failed upload\n         * @param name The name of the file associated with the failed upload\n         * @param responseJSON Response from the server, parsed into a javascript object\n         * @param xhr Ajax transport used to send the failed request\n         * @param callback Optional callback to be invoked if a retry is prudent.\n         * Invoked in lieu of asking the upload handler to retry.\n         * @returns {boolean} true if an auto-retry will occur\n         * @private\n         */\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\n            var self = this;\n\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\n\n            if (self._shouldAutoRetry(id, name, responseJSON)) {\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\n\n                self._maybeParseAndSendUploadError.apply(self, arguments);\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\n                self._onBeforeAutoRetry(id, name);\n\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n                self._retryTimeouts[id] = setTimeout(function() {\n                    self.log(\"Starting retry for \" + name + \"...\");\n\n                    if (callback) {\n                        callback(id);\n                    }\n                    else {\n                        self._handler.retry(id);\n                    }\n                }, retryWaitPeriod);\n\n                return true;\n            }\n        },\n\n        _onBeforeAutoRetry: function(id, name) {\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            var itemLimit = this._currentItemLimit,\n                fileName;\n\n            if (this._preventRetries[id]) {\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\n                return false;\n            }\n            else if (this._handler.isValid(id)) {\n                fileName = this.getName(id);\n\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\n                    return false;\n                }\n\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\n                    this._itemError(\"retryFailTooManyItems\");\n                    return false;\n                }\n\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\n                return true;\n            }\n            else {\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\n                return false;\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._netUploadedOrQueued--;\n\n            clearTimeout(this._retryTimeouts[id]);\n\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\n                this._storedIds.splice(storedItemIndex, 1);\n            }\n\n            this._uploadData.setStatus(id, qq.status.CANCELED);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            if (!result.success) {\n                this._netUploadedOrQueued--;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\n\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\n                    this._preventRetries[id] = true;\n                }\n            }\n            else {\n                if (result.thumbnailUrl) {\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\n                }\n\n                this._netUploaded++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\n            }\n\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\n\n            return result.success ? true : false;\n        },\n\n        _onDelete: function(id) {\n            this._uploadData.setStatus(id, qq.status.DELETING);\n        },\n\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\n            var name = this.getName(id);\n\n            if (isError) {\n                this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\n                this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\n\n                // For error reporting, we only have access to the response status if this is not\n                // an `XDomainRequest`.\n                if (xhrOrXdr.withCredentials === undefined) {\n                    this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\n                }\n                else {\n                    this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\n                }\n            }\n            else {\n                this._netUploadedOrQueued--;\n                this._netUploaded--;\n                this._handler.expunge(id);\n                this._uploadData.setStatus(id, qq.status.DELETED);\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\n            }\n        },\n\n        _onInputChange: function(input) {\n            var fileIndex;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\n                    this._annotateWithButtonId(input.files[fileIndex], input);\n                }\n\n                this.addFiles(input.files);\n            }\n            // Android 2.3.x will fire `onchange` even if no file has been selected\n            else if (input.value.length > 0) {\n                this.addFiles(input);\n            }\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n        },\n\n        _onProgress: function(id, name, loaded, total) {\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\n        },\n\n        _onSubmit: function(id, name) {\n            //nothing to do yet in core uploader\n        },\n\n        _onSubmitCallbackSuccess: function(id, name) {\n            this._onSubmit.apply(this, arguments);\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\n            this._onSubmitted.apply(this, arguments);\n\n            if (this._options.autoUpload) {\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n                this._uploadFile(id);\n            }\n            else {\n                this._storeForLater(id);\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n            }\n        },\n\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\n            var uuid = this.getUuid(id),\n                adjustedOnSuccessCallback;\n\n            if (onSuccessCallback) {\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\n            }\n\n            if (this._isDeletePossible()) {\n                this._handleCheckedCallback({\n                    name: \"onSubmitDelete\",\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\n                    onSuccess: adjustedOnSuccessCallback ||\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\n                    identifier: id\n                });\n                return true;\n            }\n            else {\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\n                return false;\n            }\n        },\n\n        _onSubmitted: function(id) {\n            //nothing to do in the base uploader\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._options.callbacks.onTotalProgress(loaded, total);\n        },\n\n        _onUploadPrep: function(id) {\n            // nothing to do in the core uploader for now\n        },\n\n        _onUpload: function(id, name) {\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            //nothing to do in the base uploader\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\n            if (newStatus === qq.status.PAUSED) {\n                clearTimeout(this._retryTimeouts[id]);\n            }\n        },\n\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\n            var self = this;\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                self._fileOrBlobRejected(fileWrapper.id);\n            });\n        },\n\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\n            var errorMessage,\n                itemLimit = this._currentItemLimit,\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\n\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\n                if (items.length > 0) {\n                    this._handleCheckedCallback({\n                        name: \"onValidate\",\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\n                    });\n                }\n                else {\n                    this._itemError(\"noFilesError\");\n                }\n            }\n            else {\n                this._onValidateBatchCallbackFailure(items);\n                errorMessage = this._options.messages.tooManyItemsError\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\n                this._batchError(errorMessage);\n            }\n        },\n\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\n            var nextIndex = index + 1;\n\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\n\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n        },\n\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\n            var self = this,\n                nextIndex = index + 1,\n                validationDescriptor = this._getValidationDescriptor(items[index]);\n\n            this._validateFileOrBlobData(items[index], validationDescriptor)\n                .then(\n                function() {\n                    self._upload(items[index].id, params, endpoint);\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\n                },\n                function() {\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n                }\n            );\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            if (items.length === 0) {\n                this._itemError(\"noFilesError\");\n                return;\n            }\n\n            var validationDescriptors = this._getValidationDescriptors(items),\n                buttonId = this._getButtonId(items[0].file),\n                button = this._getButton(buttonId);\n\n            this._handleCheckedCallback({\n                name: \"onValidateBatch\",\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\n                identifier: \"batch validation\"\n            });\n        },\n\n        _preventLeaveInProgress: function() {\n            var self = this;\n\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\n                if (self.getInProgress()) {\n                    e = e || window.event;\n                    // for ie, ff\n                    e.returnValue = self._options.messages.onLeave;\n                    // for webkit\n                    return self._options.messages.onLeave;\n                }\n            });\n        },\n\n        // Attempts to refresh session data only if the `qq.Session` module exists\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\n        // callback will be invoked once the refresh is complete.\n        _refreshSessionData: function() {\n            var self = this,\n                options = this._options.session;\n\n            /* jshint eqnull:true */\n            if (qq.Session && this._options.session.endpoint != null) {\n                if (!this._session) {\n                    qq.extend(options, {cors: this._options.cors});\n\n                    options.log = qq.bind(this.log, this);\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\n\n                    this._session = new qq.Session(options);\n                }\n\n                setTimeout(function() {\n                    self._session.refresh().then(function(response, xhrOrXdr) {\n                        self._sessionRequestComplete();\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\n\n                    }, function(response, xhrOrXdr) {\n\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\n                    });\n                }, 0);\n            }\n        },\n\n        _sessionRequestComplete: function() {},\n\n        _setSize: function(id, newSize) {\n            this._uploadData.updateSize(id, newSize);\n            this._totalProgress && this._totalProgress.onNewSize(id);\n        },\n\n        _shouldAutoRetry: function(id, name, responseJSON) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            /*jshint laxbreak: true */\n            if (!this._preventRetries[id]\n                && this._options.retry.enableAuto\n                && uploadData.status !== qq.status.PAUSED) {\n\n                if (this._autoRetries[id] === undefined) {\n                    this._autoRetries[id] = 0;\n                }\n\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\n                    this._autoRetries[id] += 1;\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _storeForLater: function(id) {\n            this._storedIds.push(id);\n        },\n\n        // Maps a file with the button that was used to select it.\n        _trackButton: function(id) {\n            var buttonId;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                buttonId = this._handler.getFile(id).qqButtonId;\n            }\n            else {\n                buttonId = this._getButtonId(this._handler.getInput(id));\n            }\n\n            if (buttonId) {\n                this._buttonIdsForFileIds[id] = buttonId;\n            }\n        },\n\n        _updateFormSupportAndParams: function(formElementOrId) {\n            this._options.form.element = formElementOrId;\n\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n                );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this.setEndpoint(this._formSupport.newEndpoint);\n                }\n            }\n        },\n\n        _upload: function(id, params, endpoint) {\n            var name = this.getName(id);\n\n            if (params) {\n                this.setParams(params, id);\n            }\n\n            if (endpoint) {\n                this.setEndpoint(endpoint, id);\n            }\n\n            this._handleCheckedCallback({\n                name: \"onSubmit\",\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\n                identifier: id\n            });\n        },\n\n        _uploadFile: function(id) {\n            if (!this._handler.upload(id)) {\n                this._uploadData.setStatus(id, qq.status.QUEUED);\n            }\n        },\n\n        _uploadStoredFiles: function() {\n            var idToUpload, stillSubmitting,\n                self = this;\n\n            while (this._storedIds.length) {\n                idToUpload = this._storedIds.shift();\n                this._uploadFile(idToUpload);\n            }\n\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\n            if (stillSubmitting) {\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\n                setTimeout(function() {\n                    self._uploadStoredFiles();\n                }, 1000);\n            }\n        },\n\n        /**\n         * Performs some internal validation checks on an item, defined in the `validation` option.\n         *\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\n         * @private\n         */\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\n            var self = this,\n                file = (function() {\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\n                        return fileWrapper.file.referenceBlob;\n                    }\n                    return fileWrapper.file;\n                }()),\n                name = validationDescriptor.name,\n                size = validationDescriptor.size,\n                buttonId = this._getButtonId(fileWrapper.file),\n                validationBase = this._getValidationBase(buttonId),\n                validityChecker = new qq.Promise();\n\n            validityChecker.then(\n                function() {},\n                function() {\n                    self._fileOrBlobRejected(fileWrapper.id, name);\n                });\n\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\n                this._itemError(\"typeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (!this._options.validation.allowEmpty && size === 0) {\n                this._itemError(\"emptyError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\n                this._itemError(\"sizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && size < validationBase.minSizeLimit) {\n                this._itemError(\"minSizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\n                    validityChecker.success,\n                    function(errorCode) {\n                        self._itemError(errorCode + \"ImageError\", name, file);\n                        validityChecker.failure();\n                    }\n                );\n            }\n            else {\n                validityChecker.success();\n            }\n\n            return validityChecker;\n        },\n\n        _wrapCallbacks: function() {\n            var self, safeCallback, prop;\n\n            self = this;\n\n            safeCallback = function(name, callback, args) {\n                var errorMsg;\n\n                try {\n                    return callback.apply(self, args);\n                }\n                catch (exception) {\n                    errorMsg = exception.message || exception.toString();\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\n                }\n            };\n\n            /* jshint forin: false, loopfunc: true */\n            for (prop in this._options.callbacks) {\n                (function() {\n                    var callbackName, callbackFunc;\n                    callbackName = prop;\n                    callbackFunc = self._options.callbacks[callbackName];\n                    self._options.callbacks[callbackName] = function() {\n                        return safeCallback(callbackName, callbackFunc, arguments);\n                    };\n                }());\n            }\n        }\n    };\n}());\n","/*globals qq*/\n(function() {\n    \"use strict\";\n\n    qq.FineUploaderBasic = function(o) {\n        var self = this;\n\n        // These options define FineUploaderBasic mode.\n        this._options = {\n            debug: false,\n            button: null,\n            multiple: true,\n            maxConnections: 3,\n            disableCancelForFormUploads: false,\n            autoUpload: true,\n\n            request: {\n                customHeaders: {},\n                endpoint: \"/server/upload\",\n                filenameParam: \"qqfilename\",\n                forceMultipart: true,\n                inputName: \"qqfile\",\n                method: \"POST\",\n                params: {},\n                paramsInBody: true,\n                totalFileSizeName: \"qqtotalfilesize\",\n                uuidName: \"qquuid\"\n            },\n\n            validation: {\n                allowedExtensions: [],\n                sizeLimit: 0,\n                minSizeLimit: 0,\n                itemLimit: 0,\n                stopOnFirstInvalidFile: true,\n                acceptFiles: null,\n                image: {\n                    maxHeight: 0,\n                    maxWidth: 0,\n                    minHeight: 0,\n                    minWidth: 0\n                },\n                allowEmpty: false\n            },\n\n            callbacks: {\n                onSubmit: function(id, name) {},\n                onSubmitted: function(id, name) {},\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\n                onAllComplete: function(successful, failed) {},\n                onCancel: function(id, name) {},\n                onUpload: function(id, name) {},\n                onUploadChunk: function(id, name, chunkData) {},\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\n                onResume: function(id, fileName, chunkData) {},\n                onProgress: function(id, name, loaded, total) {},\n                onTotalProgress: function(loaded, total) {},\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\n                onAutoRetry: function(id, name, attemptNumber) {},\n                onManualRetry: function(id, name) {},\n                onValidateBatch: function(fileOrBlobData) {},\n                onValidate: function(fileOrBlobData) {},\n                onSubmitDelete: function(id) {},\n                onDelete: function(id) {},\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\n                onPasteReceived: function(blob) {},\n                onStatusChange: function(id, oldStatus, newStatus) {},\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\n            },\n\n            messages: {\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\n                emptyError: \"{file} is empty, please select files again without it.\",\n                noFilesError: \"No files to upload.\",\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\n                maxHeightImageError: \"Image is too tall.\",\n                maxWidthImageError: \"Image is too wide.\",\n                minHeightImageError: \"Image is not tall enough.\",\n                minWidthImageError: \"Image is not wide enough.\",\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\n            },\n\n            retry: {\n                enableAuto: false,\n                maxAutoAttempts: 3,\n                autoAttemptDelay: 5,\n                preventRetryResponseProperty: \"preventRetry\"\n            },\n\n            classes: {\n                buttonHover: \"qq-upload-button-hover\",\n                buttonFocus: \"qq-upload-button-focus\"\n            },\n\n            chunking: {\n                enabled: false,\n                concurrent: {\n                    enabled: false\n                },\n                mandatory: false,\n                paramNames: {\n                    partIndex: \"qqpartindex\",\n                    partByteOffset: \"qqpartbyteoffset\",\n                    chunkSize: \"qqchunksize\",\n                    totalFileSize: \"qqtotalfilesize\",\n                    totalParts: \"qqtotalparts\"\n                },\n                partSize: 2000000,\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\n                success: {\n                    endpoint: null\n                }\n            },\n\n            resume: {\n                enabled: false,\n                recordsExpireIn: 7, //days\n                paramNames: {\n                    resuming: \"qqresume\"\n                }\n            },\n\n            formatFileName: function(fileOrBlobName) {\n                return fileOrBlobName;\n            },\n\n            text: {\n                defaultResponseError: \"Upload failure reason unknown\",\n                fileInputTitle: \"file input\",\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\n            },\n\n            deleteFile: {\n                enabled: false,\n                method: \"DELETE\",\n                endpoint: \"/server/upload\",\n                customHeaders: {},\n                params: {}\n            },\n\n            cors: {\n                expected: false,\n                sendCredentials: false,\n                allowXdr: false\n            },\n\n            blobs: {\n                defaultName: \"misc_data\"\n            },\n\n            paste: {\n                targetElement: null,\n                defaultName: \"pasted_image\"\n            },\n\n            camera: {\n                ios: false,\n\n                // if ios is true: button is null means target the default button, otherwise target the button specified\n                button: null\n            },\n\n            // This refers to additional upload buttons to be handled by Fine Uploader.\n            // Each element is an object, containing `element` as the only required\n            // property.  The `element` must be a container that will ultimately\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\n            // Optional properties of each object include `multiple`, `validation`,\n            // and `folders`.\n            extraButtons: [],\n\n            // Depends on the session module.  Used to query the server for an initial file list\n            // during initialization and optionally after a `reset`.\n            session: {\n                endpoint: null,\n                params: {},\n                customHeaders: {},\n                refreshOnReset: true\n            },\n\n            // Send parameters associated with an existing form along with the files\n            form: {\n                // Element ID, HTMLElement, or null\n                element: \"qq-form\",\n\n                // Overrides the base `autoUpload`, unless `element` is null.\n                autoUpload: false,\n\n                // true = upload files on form submission (and squelch submit event)\n                interceptSubmit: true\n            },\n\n            // scale images client side, upload a new file for each scaled version\n            scaling: {\n                customResizer: null,\n\n                // send the original file as well\n                sendOriginal: true,\n\n                // fox orientation for scaled images\n                orient: true,\n\n                // If null, scaled image type will match reference image type.  This value will be referred to\n                // for any size record that does not specific a type.\n                defaultType: null,\n\n                defaultQuality: 80,\n\n                failureText: \"Failed to scale\",\n\n                includeExif: false,\n\n                // metadata about each requested scaled version\n                sizes: []\n            },\n\n            workarounds: {\n                iosEmptyVideos: true,\n                ios8SafariUploads: true,\n                ios8BrowserCrash: false\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(this._options, o, true);\n\n        this._buttons = [];\n        this._extraButtonSpecs = {};\n        this._buttonIdsForFileIds = [];\n\n        this._wrapCallbacks();\n        this._disposeSupport =  new qq.DisposeSupport();\n\n        this._storedIds = [];\n        this._autoRetries = [];\n        this._retryTimeouts = [];\n        this._preventRetries = [];\n        this._thumbnailUrls = [];\n\n        this._netUploadedOrQueued = 0;\n        this._netUploaded = 0;\n        this._uploadData = this._createUploadDataTracker();\n\n        this._initFormSupportAndParams();\n\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\n\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\n\n        this._endpointStore = this._createStore(this._options.request.endpoint);\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\n\n        this._handler = this._createUploadHandler();\n\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\n\n        if (this._options.button) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._options.button,\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._generateExtraButtonSpecs();\n\n        this._handleCameraAccess();\n\n        if (this._options.paste.targetElement) {\n            if (qq.PasteSupport) {\n                this._pasteHandler = this._createPasteHandler();\n            }\n            else {\n                this.log(\"Paste support module not found\", \"error\");\n            }\n        }\n\n        this._preventLeaveInProgress();\n\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\n        this._refreshSessionData();\n\n        this._succeededSinceLastAllComplete = [];\n        this._failedSinceLastAllComplete = [];\n\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\n        if (this._scaler.enabled) {\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\n        }\n\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\n            this._totalProgress = new qq.TotalProgress(\n                qq.bind(this._onTotalProgress, this),\n\n                function(id) {\n                    var entry = self._uploadData.retrieve({id: id});\n                    return (entry && entry.size) || 0;\n                }\n            );\n        }\n\n        this._currentItemLimit = this._options.validation.itemLimit;\n    };\n\n    // Define the private & public API methods.\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\n}());\n","/*globals qq, XDomainRequest*/\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\nqq.AjaxRequester = function(o) {\n    \"use strict\";\n\n    var log, shouldParamsBeInQueryString,\n        queue = [],\n        requestData = {},\n        options = {\n            acceptHeader: null,\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [200, 202, 204],\n                PATCH: [200, 201, 202, 203, 204],\n                POST: [200, 201, 202, 203, 204],\n                PUT: [200, 201, 202, 203, 204],\n                GET: [200]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n\n    qq.extend(options, o);\n    log = options.log;\n\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n    }\n\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function isSimpleMethod() {\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\n    }\n\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function containsNonSimpleHeaders(headers) {\n        var containsNonSimple = false;\n\n        qq.each(containsNonSimple, function(idx, header) {\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\n                containsNonSimple = true;\n                return false;\n            }\n        });\n\n        return containsNonSimple;\n    }\n\n    function isXdr(xhr) {\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\n        return options.cors.expected && xhr.withCredentials === undefined;\n    }\n\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\n    function getCorsAjaxTransport() {\n        var xhrOrXdr;\n\n        if (window.XMLHttpRequest || window.ActiveXObject) {\n            xhrOrXdr = qq.createXhrInstance();\n\n            if (xhrOrXdr.withCredentials === undefined) {\n                xhrOrXdr = new XDomainRequest();\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n                xhrOrXdr.onload = function() {};\n                xhrOrXdr.onerror = function() {};\n                xhrOrXdr.ontimeout = function() {};\n                xhrOrXdr.onprogress = function() {};\n            }\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\n    function getXhrOrXdr(id, suppliedXhr) {\n        var xhrOrXdr = requestData[id].xhr;\n\n        if (!xhrOrXdr) {\n            if (suppliedXhr) {\n                xhrOrXdr = suppliedXhr;\n            }\n            else {\n                if (options.cors.expected) {\n                    xhrOrXdr = getCorsAjaxTransport();\n                }\n                else {\n                    xhrOrXdr = qq.createXhrInstance();\n                }\n            }\n\n            requestData[id].xhr = xhrOrXdr;\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Removes element from queue, sends next request\n    function dequeue(id) {\n        var i = qq.indexOf(queue, id),\n            max = options.maxConnections,\n            nextId;\n\n        delete requestData[id];\n        queue.splice(i, 1);\n\n        if (queue.length >= max && i < max) {\n            nextId = queue[max - 1];\n            sendRequest(nextId);\n        }\n    }\n\n    function onComplete(id, xdrError) {\n        var xhr = getXhrOrXdr(id),\n            method = options.method,\n            isError = xdrError === true;\n\n        dequeue(id);\n\n        if (isError) {\n            log(method + \" request for \" + id + \" has failed\", \"error\");\n        }\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n            isError = true;\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n        }\n\n        options.onComplete(id, xhr, isError);\n    }\n\n    function getParams(id) {\n        var onDemandParams = requestData[id].additionalParams,\n            mandatedParams = options.mandatedParams,\n            params;\n\n        if (options.paramsStore.get) {\n            params = options.paramsStore.get(id);\n        }\n\n        if (onDemandParams) {\n            qq.each(onDemandParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        if (mandatedParams) {\n            qq.each(mandatedParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        return params;\n    }\n\n    function sendRequest(id, optXhr) {\n        var xhr = getXhrOrXdr(id, optXhr),\n            method = options.method,\n            params = getParams(id),\n            payload = requestData[id].payload,\n            url;\n\n        options.onSend(id);\n\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\n\n        // XDR and XHR status detection APIs differ a bit.\n        if (isXdr(xhr)) {\n            xhr.onload = getXdrLoadHandler(id);\n            xhr.onerror = getXdrErrorHandler(id);\n        }\n        else {\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n        }\n\n        registerForUploadProgress(id);\n\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\n        xhr.open(method, url, true);\n\n        // Instruct the transport to send cookies along with the CORS request,\n        // unless we are using `XDomainRequest`, which is not capable of this.\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n            xhr.withCredentials = true;\n        }\n\n        setHeaders(id);\n\n        log(\"Sending \" + method + \" request for \" + id);\n\n        if (payload) {\n            xhr.send(payload);\n        }\n        else if (shouldParamsBeInQueryString || !params) {\n            xhr.send();\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n            xhr.send(qq.obj2url(params, \"\"));\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n            xhr.send(JSON.stringify(params));\n        }\n        else {\n            xhr.send(params);\n        }\n\n        return xhr;\n    }\n\n    function createUrl(id, params, additionalQueryParams) {\n        var endpoint = options.endpointStore.get(id),\n            addToPath = requestData[id].addToPath;\n\n        /*jshint -W116,-W041 */\n        if (addToPath != undefined) {\n            endpoint += \"/\" + addToPath;\n        }\n\n        if (shouldParamsBeInQueryString && params) {\n            endpoint = qq.obj2url(params, endpoint);\n        }\n\n        if (additionalQueryParams) {\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\n        }\n\n        return endpoint;\n    }\n\n    // Invoked by the UA to indicate a number of possible states that describe\n    // a live `XMLHttpRequest` transport.\n    function getXhrReadyStateChangeHandler(id) {\n        return function() {\n            if (getXhrOrXdr(id).readyState === 4) {\n                onComplete(id);\n            }\n        };\n    }\n\n    function registerForUploadProgress(id) {\n        var onProgress = options.onProgress;\n\n        if (onProgress) {\n            getXhrOrXdr(id).upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    onProgress(id, e.loaded, e.total);\n                }\n            };\n        }\n    }\n\n    // This will be called by IE to indicate **success** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrLoadHandler(id) {\n        return function() {\n            onComplete(id);\n        };\n    }\n\n    // This will be called by IE to indicate **failure** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrErrorHandler(id) {\n        return function() {\n            onComplete(id, true);\n        };\n    }\n\n    function setHeaders(id) {\n        var xhr = getXhrOrXdr(id),\n            customHeaders = options.customHeaders,\n            onDemandHeaders = requestData[id].additionalHeaders || {},\n            method = options.method,\n            allHeaders = {};\n\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\n        if (!isXdr(xhr)) {\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\n            if (options.allowXRequestedWithAndCacheControl) {\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\n                // OR the cross-origin request contains a non-simple method or header.\n                // This is done to ensure a preflight is not triggered exclusively based on the\n                // addition of these 2 non-simple headers.\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                }\n            }\n\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n            }\n\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n            qq.extend(allHeaders, onDemandHeaders);\n\n            qq.each(allHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        }\n    }\n\n    function isResponseSuccessful(responseCode) {\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n    }\n\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n        requestData[id] = {\n            addToPath: addToPath,\n            additionalParams: additionalParams,\n            additionalQueryParams: additionalQueryParams,\n            additionalHeaders: additionalHeaders,\n            payload: payload\n        };\n\n        var len = queue.push(id);\n\n        // if too many active connections, wait...\n        if (len <= options.maxConnections) {\n            return sendRequest(id, optXhr);\n        }\n    }\n\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n\n    qq.extend(this, {\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\n        initTransport: function(id) {\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\n\n            return {\n                // Optionally specify the end of the endpoint path for the request.\n                withPath: function(appendToPath) {\n                    path = appendToPath;\n                    return this;\n                },\n\n                // Optionally specify additional parameters to send along with the request.\n                // These will be added to the query string for GET/DELETE requests or the payload\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\n                // how these parameters should be formatted as well.\n                withParams: function(additionalParams) {\n                    params = additionalParams;\n                    return this;\n                },\n\n                withQueryParams: function(_additionalQueryParams_) {\n                    additionalQueryParams = _additionalQueryParams_;\n                    return this;\n                },\n\n                // Optionally specify additional headers to send along with the request.\n                withHeaders: function(additionalHeaders) {\n                    headers = additionalHeaders;\n                    return this;\n                },\n\n                // Optionally specify a payload/body for the request.\n                withPayload: function(thePayload) {\n                    payload = thePayload;\n                    return this;\n                },\n\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\n                withCacheBuster: function() {\n                    cacheBuster = true;\n                    return this;\n                },\n\n                // Send the constructed request.\n                send: function(optXhr) {\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\n                        params.qqtimestamp = new Date().getTime();\n                    }\n\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                }\n            };\n        },\n\n        canceled: function(id) {\n            dequeue(id);\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common upload handler functions.\n *\n * @constructor\n */\nqq.UploadHandler = function(spec) {\n    \"use strict\";\n\n    var proxy = spec.proxy,\n        fileState = {},\n        onCancel = proxy.onCancel,\n        getName = proxy.getName;\n\n    qq.extend(this, {\n        add: function(id, fileItem) {\n            fileState[id] = fileItem;\n            fileState[id].temp = {};\n        },\n\n        cancel: function(id) {\n            var self = this,\n                cancelFinalizationEffort = new qq.Promise(),\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n\n            onCancelRetVal.then(function() {\n                if (self.isValid(id)) {\n                    fileState[id].canceled = true;\n                    self.expunge(id);\n                }\n                cancelFinalizationEffort.success();\n            });\n        },\n\n        expunge: function(id) {\n            delete fileState[id];\n        },\n\n        getThirdPartyFileId: function(id) {\n            return fileState[id].key;\n        },\n\n        isValid: function(id) {\n            return fileState[id] !== undefined;\n        },\n\n        reset: function() {\n            fileState = {};\n        },\n\n        _getFileState: function(id) {\n            return fileState[id];\n        },\n\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\n            fileState[id].key = thirdPartyFileId;\n        },\n\n        _wasCanceled: function(id) {\n            return !!fileState[id].canceled;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Base upload handler module.  Controls more specific handlers.\n *\n * @param o Options.  Passed along to the specific handler submodule as well.\n * @param namespace [optional] Namespace for the specific handler.\n */\nqq.UploadHandlerController = function(o, namespace) {\n    \"use strict\";\n\n    var controller = this,\n        chunkingPossible = false,\n        concurrentChunkingPossible = false,\n        chunking, preventRetryResponse, log, handler,\n\n    options = {\n        paramsStore: {},\n        maxConnections: 3, // maximum number of concurrent uploads\n        chunking: {\n            enabled: false,\n            multiple: {\n                enabled: false\n            }\n        },\n        log: function(str, level) {},\n        onProgress: function(id, fileName, loaded, total) {},\n        onComplete: function(id, fileName, response, xhr) {},\n        onCancel: function(id, fileName) {},\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\n        onUpload: function(id, fileName) {},\n        onUploadChunk: function(id, fileName, chunkData) {},\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\n        onAutoRetry: function(id, fileName, response, xhr) {},\n        onResume: function(id, fileName, chunkData) {},\n        onUuidChanged: function(id, newUuid) {},\n        getName: function(id) {},\n        setSize: function(id, newSize) {},\n        isQueued: function(id) {},\n        getIdsInProxyGroup: function(id) {},\n        getIdsInBatch: function(id) {}\n    },\n\n    chunked = {\n        // Called when each chunk has uploaded successfully\n        done: function(id, chunkIdx, response, xhr) {\n            var chunkData = handler._getChunkData(id, chunkIdx);\n\n            handler._getFileState(id).attemptingResume = false;\n\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\n            handler._getFileState(id).loaded += chunkData.size;\n\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\n        },\n\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\n        // logic associated with closing out the file, such as combining the chunks.\n        finalize: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id);\n\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\n            handler.finalizeChunks(id).then(\n                function(response, xhr) {\n                    log(\"Finalize successful for \" + id);\n\n                    var normaizedResponse = upload.normalizeResponse(response, true);\n\n                    options.onProgress(id, name, size, size);\n                    handler._maybeDeletePersistedChunkData(id);\n                    upload.cleanup(id, normaizedResponse, xhr);\n                },\n                function(response, xhr) {\n                    var normaizedResponse = upload.normalizeResponse(response, false);\n\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normaizedResponse.error, \"error\");\n\n                    if (normaizedResponse.reset) {\n                        chunked.reset(id);\n                    }\n\n                    if (!options.onAutoRetry(id, name, normaizedResponse, xhr)) {\n                        upload.cleanup(id, normaizedResponse, xhr);\n                    }\n                }\n            );\n        },\n\n        handleFailure: function(chunkIdx, id, response, xhr) {\n            var name = options.getName(id);\n\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\n\n            handler.clearCachedChunk(id, chunkIdx);\n\n            var responseToReport = upload.normalizeResponse(response, false),\n                inProgressIdx;\n\n            if (responseToReport.reset) {\n                chunked.reset(id);\n            }\n            else {\n                inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\n                if (inProgressIdx >= 0) {\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\n                }\n            }\n\n            // We may have aborted all other in-progress chunks for this file due to a failure.\n            // If so, ignore the failures associated with those aborts.\n            if (!handler._getFileState(id).temp.ignoreFailure) {\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\n                // chunks since they will be explicitly aborted\n                if (concurrentChunkingPossible) {\n                    handler._getFileState(id).temp.ignoreFailure = true;\n\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\n                        ckXhr.abort();\n                        // Flag the transport, in case we are waiting for some other async operation\n                        // to complete before attempting to upload the chunk\n                        ckXhr._cancelled = true;\n                    });\n\n                    // We must indicate that all aborted chunks are no longer in progress\n                    handler.moveInProgressToRemaining(id);\n\n                    // Free up any connections used by these chunks, but don't allow any\n                    // other files to take up the connections (until we have exhausted all auto-retries)\n                    connectionManager.free(id, true);\n                }\n\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\n                    // is a failure or not.\n                    upload.cleanup(id, responseToReport, xhr);\n                }\n            }\n        },\n\n        hasMoreParts: function(id) {\n            return !!handler._getFileState(id).chunking.remaining.length;\n        },\n\n        nextPart: function(id) {\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\n\n            if (nextIdx >= handler._getTotalChunks(id)) {\n                nextIdx = null;\n            }\n\n            return nextIdx;\n        },\n\n        reset: function(id) {\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\n\n            handler._maybeDeletePersistedChunkData(id);\n            handler.reevaluateChunking(id);\n            handler._getFileState(id).loaded = 0;\n        },\n\n        sendNext: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id),\n                chunkIdx = chunked.nextPart(id),\n                chunkData = handler._getChunkData(id, chunkIdx),\n                resuming = handler._getFileState(id).attemptingResume,\n                inProgressChunks = handler._getFileState(id).chunking.inProgress || [];\n\n            if (handler._getFileState(id).loaded == null) {\n                handler._getFileState(id).loaded = 0;\n            }\n\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\n            if (resuming && options.onResume(id, name, chunkData) === false) {\n                chunked.reset(id);\n                chunkIdx = chunked.nextPart(id);\n                chunkData = handler._getChunkData(id, chunkIdx);\n                resuming = false;\n            }\n\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\n            if (chunkIdx == null && inProgressChunks.length === 0) {\n                chunked.finalize(id);\n            }\n\n            // Send the next chunk\n            else {\n                log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\n                options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\n                inProgressChunks.push(chunkIdx);\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\n\n                if (concurrentChunkingPossible) {\n                    connectionManager.open(id, chunkIdx);\n                }\n\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\n                    chunked.sendNext(id);\n                }\n\n                if (chunkData.blob.size === 0) {\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\n                }\n                else {\n                    handler.uploadChunk(id, chunkIdx, resuming).then(\n                        // upload chunk success\n                        function success(response, xhr) {\n                            log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\n\n                            handler.clearCachedChunk(id, chunkIdx);\n\n                            var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\n                                responseToReport = upload.normalizeResponse(response, true),\n                                inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\n\n                            log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\n\n                            chunked.done(id, chunkIdx, responseToReport, xhr);\n\n                            if (inProgressChunkIdx >= 0) {\n                                inProgressChunks.splice(inProgressChunkIdx, 1);\n                            }\n\n                            handler._maybePersistChunkedState(id);\n\n                            if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\n                                chunked.finalize(id);\n                            }\n                            else if (chunked.hasMoreParts(id)) {\n                                chunked.sendNext(id);\n                            }\n                            else {\n                                log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\n                            }\n                        },\n\n                        // upload chunk failure\n                        function failure(response, xhr) {\n                            chunked.handleFailure(chunkIdx, id, response, xhr);\n                        }\n                        )\n                        .done(function() {\n                            handler.clearXhr(id, chunkIdx);\n                        });\n                }\n            }\n        }\n    },\n\n    connectionManager = {\n        _open: [],\n        _openChunks: {},\n        _waiting: [],\n\n        available: function() {\n            var max = options.maxConnections,\n                openChunkEntriesCount = 0,\n                openChunksCount = 0;\n\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\n                openChunkEntriesCount++;\n                openChunksCount += openChunkIndexes.length;\n            });\n\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\n        },\n\n        /**\n         * Removes element from queue, starts upload of next\n         */\n        free: function(id, dontAllowNext) {\n            var allowNext = !dontAllowNext,\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\n                nextId;\n\n            delete connectionManager._openChunks[id];\n\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\n                delete handler._getFileState(id).file;\n            }\n\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\n            if (waitingIndex >= 0) {\n                connectionManager._waiting.splice(waitingIndex, 1);\n            }\n            // If this file was consuming a connection, allow the next file to be uploaded\n            else if (allowNext && connectionsIndex >= 0) {\n                connectionManager._open.splice(connectionsIndex, 1);\n\n                nextId = connectionManager._waiting.shift();\n                if (nextId >= 0) {\n                    connectionManager._open.push(nextId);\n                    upload.start(nextId);\n                }\n            }\n        },\n\n        getWaitingOrConnected: function() {\n            var waitingOrConnected = [];\n\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\n                if (chunks && chunks.length) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // For non-chunked files, only one connection will be consumed per file.\n            // This is where we aggregate those file IDs.\n            qq.each(connectionManager._open, function(idx, fileId) {\n                if (!connectionManager._openChunks[fileId]) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // There may be files waiting for a connection.\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\n\n            return waitingOrConnected;\n        },\n\n        isUsingConnection: function(id) {\n            return qq.indexOf(connectionManager._open, id) >= 0;\n        },\n\n        open: function(id, chunkIdx) {\n            if (chunkIdx == null) {\n                connectionManager._waiting.push(id);\n            }\n\n            if (connectionManager.available()) {\n                if (chunkIdx == null) {\n                    connectionManager._waiting.pop();\n                    connectionManager._open.push(id);\n                }\n                else {\n                    (function() {\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\n                        openChunksEntry.push(chunkIdx);\n                        connectionManager._openChunks[id] = openChunksEntry;\n                    }());\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        reset: function() {\n            connectionManager._waiting = [];\n            connectionManager._open = [];\n        }\n    },\n\n    simple = {\n        send: function(id, name) {\n            handler._getFileState(id).loaded = 0;\n\n            log(\"Sending simple upload request for \" + id);\n            handler.uploadFile(id).then(\n                function(response, optXhr) {\n                    log(\"Simple upload request succeeded for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, true),\n                        size = options.getSize(id);\n\n                    options.onProgress(id, name, size, size);\n                    upload.maybeNewUuid(id, responseToReport);\n                    upload.cleanup(id, responseToReport, optXhr);\n                },\n\n                function(response, optXhr) {\n                    log(\"Simple upload request failed for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, false);\n\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\n                        upload.cleanup(id, responseToReport, optXhr);\n                    }\n                }\n            );\n        }\n    },\n\n    upload = {\n        cancel: function(id) {\n            log(\"Cancelling \" + id);\n            options.paramsStore.remove(id);\n            connectionManager.free(id);\n        },\n\n        cleanup: function(id, response, optXhr) {\n            var name = options.getName(id);\n\n            options.onComplete(id, name, response, optXhr);\n\n            if (handler._getFileState(id)) {\n                handler._clearXhrs && handler._clearXhrs(id);\n            }\n\n            connectionManager.free(id);\n        },\n\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\n        // if none of these are available for the ID\n        getProxyOrBlob: function(id) {\n            return (handler.getProxy && handler.getProxy(id)) ||\n                (handler.getFile && handler.getFile(id));\n        },\n\n        initHandler: function() {\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\n\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\n                options,\n                {\n                    getDataByUuid: options.getDataByUuid,\n                    getName: options.getName,\n                    getSize: options.getSize,\n                    getUuid: options.getUuid,\n                    log: log,\n                    onCancel: options.onCancel,\n                    onProgress: options.onProgress,\n                    onUuidChanged: options.onUuidChanged\n                }\n            );\n\n            if (handler._removeExpiredChunkingRecords) {\n                handler._removeExpiredChunkingRecords();\n            }\n        },\n\n        isDeferredEligibleForUpload: function(id) {\n            return options.isQueued(id);\n        },\n\n        // For Blobs that are part of a group of generated images, along with a reference image,\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\n        // even if some async processing must be completed on one or more Blobs first.\n        maybeDefer: function(id, blob) {\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\n            // and then submit the upload to the specific handler once the blob is available.\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\n\n                // Blob creation may take some time, so the caller may want to update the\n                // UI to indicate that an operation is in progress, even before the actual\n                // upload begins and an onUpload callback is invoked.\n                options.onUploadPrep(id);\n\n                log(\"Attempting to generate a blob on-demand for \" + id);\n                blob.create().then(function(generatedBlob) {\n                    log(\"Generated an on-demand blob for \" + id);\n\n                    // Update record associated with this file by providing the generated Blob\n                    handler.updateBlob(id, generatedBlob);\n\n                    // Propagate the size for this generated Blob\n                    options.setSize(id, generatedBlob.size);\n\n                    // Order handler to recalculate chunking possibility, if applicable\n                    handler.reevaluateChunking(id);\n\n                    upload.maybeSendDeferredFiles(id);\n                },\n\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\n                function(errorMessage) {\n                    var errorResponse = {};\n\n                    if (errorMessage) {\n                        errorResponse.error = errorMessage;\n                    }\n\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\n\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\n                    upload.maybeSendDeferredFiles(id);\n                    connectionManager.free(id);\n                });\n            }\n            else {\n                return upload.maybeSendDeferredFiles(id);\n            }\n\n            return false;\n        },\n\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\n        maybeSendDeferredFiles: function(id) {\n            var idsInGroup = options.getIdsInProxyGroup(id),\n                uploadedThisId = false;\n\n            if (idsInGroup && idsInGroup.length) {\n                log(\"Maybe ready to upload proxy group file \" + id);\n\n                qq.each(idsInGroup, function(idx, idInGroup) {\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\n                        uploadedThisId = idInGroup === id;\n                        upload.now(idInGroup);\n                    }\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\n                        return false;\n                    }\n                });\n            }\n            else {\n                uploadedThisId = true;\n                upload.now(id);\n            }\n\n            return uploadedThisId;\n        },\n\n        maybeNewUuid: function(id, response) {\n            if (response.newUuid !== undefined) {\n                options.onUuidChanged(id, response.newUuid);\n            }\n        },\n\n        // The response coming from handler implementations may be in various formats.\n        // Instead of hoping a promise nested 5 levels deep will always return an object\n        // as its first param, let's just normalize the response here.\n        normalizeResponse: function(originalResponse, successful) {\n            var response = originalResponse;\n\n            // The passed \"response\" param may not be a response at all.\n            // It could be a string, detailing the error, for example.\n            if (!qq.isObject(originalResponse)) {\n                response = {};\n\n                if (qq.isString(originalResponse) && !successful) {\n                    response.error = originalResponse;\n                }\n            }\n\n            response.success = successful;\n\n            return response;\n        },\n\n        now: function(id) {\n            var name = options.getName(id);\n\n            if (!controller.isValid(id)) {\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\n            }\n\n            options.onUpload(id, name);\n\n            if (chunkingPossible && handler._shouldChunkThisFile(id)) {\n                chunked.sendNext(id);\n            }\n            else {\n                simple.send(id, name);\n            }\n        },\n\n        start: function(id) {\n            var blobToUpload = upload.getProxyOrBlob(id);\n\n            if (blobToUpload) {\n                return upload.maybeDefer(id, blobToUpload);\n            }\n            else {\n                upload.now(id);\n                return true;\n            }\n        }\n    };\n\n    qq.extend(this, {\n        /**\n         * Adds file or file input to the queue\n         **/\n        add: function(id, file) {\n            handler.add.apply(this, arguments);\n        },\n\n        /**\n         * Sends the file identified by id\n         */\n        upload: function(id) {\n            if (connectionManager.open(id)) {\n                return upload.start(id);\n            }\n            return false;\n        },\n\n        retry: function(id) {\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\n            // any more failures at this point.\n            if (concurrentChunkingPossible) {\n                handler._getFileState(id).temp.ignoreFailure = false;\n            }\n\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\n            // Just go ahead and ask the handler to upload again.\n            if (connectionManager.isUsingConnection(id)) {\n                return upload.start(id);\n            }\n\n            // If we are attempting to retry a file that is not currently consuming a connection,\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\n            // before the retry commences.\n            else {\n                return controller.upload(id);\n            }\n        },\n\n        /**\n         * Cancels file upload by id\n         */\n        cancel: function(id) {\n            var cancelRetVal = handler.cancel(id);\n\n            if (qq.isGenericPromise(cancelRetVal)) {\n                cancelRetVal.then(function() {\n                    upload.cancel(id);\n                });\n            }\n            else if (cancelRetVal !== false) {\n                upload.cancel(id);\n            }\n        },\n\n        /**\n         * Cancels all queued or in-progress uploads\n         */\n        cancelAll: function() {\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\n                i;\n\n            // ensure files are cancelled in reverse order which they were added\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\n            if (waitingOrConnected.length) {\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\n                    controller.cancel(waitingOrConnected[i]);\n                }\n            }\n\n            connectionManager.reset();\n        },\n\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\n        // Undefined if no file record is available.\n        getFile: function(id) {\n            if (handler.getProxy && handler.getProxy(id)) {\n                return handler.getProxy(id).referenceBlob;\n            }\n\n            return handler.getFile && handler.getFile(id);\n        },\n\n        // Returns true if the Blob associated with the ID is related to a proxy s\n        isProxied: function(id) {\n            return !!(handler.getProxy && handler.getProxy(id));\n        },\n\n        getInput: function(id) {\n            if (handler.getInput) {\n                return handler.getInput(id);\n            }\n        },\n\n        reset: function() {\n            log(\"Resetting upload handler\");\n            controller.cancelAll();\n            connectionManager.reset();\n            handler.reset();\n        },\n\n        expunge: function(id) {\n            if (controller.isValid(id)) {\n                return handler.expunge(id);\n            }\n        },\n\n        /**\n         * Determine if the file exists.\n         */\n        isValid: function(id) {\n            return handler.isValid(id);\n        },\n\n        getResumableFilesData: function() {\n            if (handler.getResumableFilesData) {\n                return handler.getResumableFilesData();\n            }\n            return [];\n        },\n\n        /**\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\n         * will be undefined.\n         *\n         * @param id Internal file ID\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\n         */\n        getThirdPartyFileId: function(id) {\n            if (controller.isValid(id)) {\n                return handler.getThirdPartyFileId(id);\n            }\n        },\n\n        /**\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\n         * @param id ID of the upload/file to pause\n         * @returns {boolean} true if the upload was paused\n         */\n        pause: function(id) {\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\n                connectionManager.free(id);\n                handler.moveInProgressToRemaining(id);\n                return true;\n            }\n            return false;\n        },\n\n        // True if the file is eligible for pause/resume.\n        isResumable: function(id) {\n            return !!handler.isResumable && handler.isResumable(id);\n        }\n    });\n\n    qq.extend(options, o);\n    log = options.log;\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\n\n    preventRetryResponse = (function() {\n        var response = {};\n\n        response[options.preventRetryParam] = true;\n\n        return response;\n    }());\n\n    upload.initHandler();\n};\n","/*globals qq */\n/*jshint -W117 */\nqq.WindowReceiveMessage = function(o) {\n    \"use strict\";\n\n    var options = {\n            log: function(message, level) {}\n        },\n        callbackWrapperDetachers = {};\n\n    qq.extend(options, o);\n\n    qq.extend(this, {\n        receiveMessage: function(id, callback) {\n            var onMessageCallbackWrapper = function(event) {\n                    callback(event.data);\n                };\n\n            if (window.postMessage) {\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\n            }\n            else {\n                log(\"iframe message passing not supported in this browser!\", \"error\");\n            }\n        },\n\n        stopReceivingMessages: function(id) {\n            if (window.postMessage) {\n                var detacher = callbackWrapperDetachers[id];\n                if (detacher) {\n                    detacher();\n                }\n            }\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\n * in some cases by specific form upload handlers.\n *\n * @constructor\n */\nqq.FormUploadHandler = function(spec) {\n    \"use strict\";\n\n    var options = spec.options,\n        handler = this,\n        proxy = spec.proxy,\n        formHandlerInstanceId = qq.getUniqueId(),\n        onloadCallbacks = {},\n        detachLoadEvents = {},\n        postMessageCallbackTimers = {},\n        isCors = options.isCors,\n        inputName = options.inputName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\n\n    /**\n     * Remove any trace of the file from the handler.\n     *\n     * @param id ID of the associated file\n     */\n    function expungeFile(id) {\n        delete detachLoadEvents[id];\n\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\n        // In that case, terminate the timer waiting for a message from the loaded iframe\n        // and stop listening for any more messages coming from this iframe.\n        if (isCors) {\n            clearTimeout(postMessageCallbackTimers[id]);\n            delete postMessageCallbackTimers[id];\n            corsMessageReceiver.stopReceivingMessages(id);\n        }\n\n        var iframe = document.getElementById(handler._getIframeName(id));\n        if (iframe) {\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\n            // because it doesn't trigger ie6 prompt on https\n            /* jshint scripturl:true */\n            iframe.setAttribute(\"src\", \"javascript:false;\");\n\n            qq(iframe).remove();\n        }\n    }\n\n    /**\n     * @param iframeName `document`-unique Name of the associated iframe\n     * @returns {*} ID of the associated file\n     */\n    function getFileIdForIframeName(iframeName) {\n        return iframeName.split(\"_\")[0];\n    }\n\n    /**\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\n     * to the current `document`.  Note that the iframe is hidden from view.\n     *\n     * @param name Name of the iframe.\n     * @returns {HTMLIFrameElement} The created iframe\n     */\n    function initIframeForUpload(name) {\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n        iframe.setAttribute(\"id\", name);\n\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n\n        return iframe;\n    }\n\n    /**\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\n     *\n     * @param iframe Listen for messages on this iframe.\n     * @param callback Invoke this callback with the message from the iframe.\n     */\n    function registerPostMessageCallback(iframe, callback) {\n        var iframeName = iframe.id,\n            fileId = getFileIdForIframeName(iframeName),\n            uuid = getUuid(fileId);\n\n        onloadCallbacks[uuid] = callback;\n\n        // When the iframe has loaded (after the server responds to an upload request)\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n            if (handler.getInput(fileId)) {\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                    log(errorMessage, \"error\");\n                    callback({\n                        error: errorMessage\n                    });\n                }, 1000);\n            }\n        });\n\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\n            log(\"Received the following window message: '\" + message + \"'\");\n            var fileId = getFileIdForIframeName(iframeName),\n                response = handler._parseJsonResponse(message),\n                uuid = response.uuid,\n                onloadCallback;\n\n            if (uuid && onloadCallbacks[uuid]) {\n                log(\"Handling response for iframe name \" + iframeName);\n                clearTimeout(postMessageCallbackTimers[iframeName]);\n                delete postMessageCallbackTimers[iframeName];\n\n                handler._detachLoadEvent(iframeName);\n\n                onloadCallback = onloadCallbacks[uuid];\n\n                delete onloadCallbacks[uuid];\n                corsMessageReceiver.stopReceivingMessages(iframeName);\n                onloadCallback(response);\n            }\n            else if (!uuid) {\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n            }\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, fileInput) {\n                super_.add(id, {input: fileInput});\n\n                fileInput.setAttribute(\"name\", inputName);\n\n                // remove file input from DOM\n                if (fileInput.parentNode) {\n                    qq(fileInput).remove();\n                }\n            },\n\n            expunge: function(id) {\n                expungeFile(id);\n                super_.expunge(id);\n            },\n\n            isValid: function(id) {\n                return super_.isValid(id) &&\n                    handler._getFileState(id).input !== undefined;\n            }\n        };\n    });\n\n    qq.extend(this, {\n        getInput: function(id) {\n            return handler._getFileState(id).input;\n        },\n\n        /**\n         * This function either delegates to a more specific message handler if CORS is involved,\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\n         * after determining if the content of the iframe is accessible.\n         *\n         * @param iframe Associated iframe\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\n         */\n        _attachLoadEvent: function(iframe, callback) {\n            /*jslint eqeq: true*/\n            var responseDescriptor;\n\n            if (isCors) {\n                registerPostMessageCallback(iframe, callback);\n            }\n            else {\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                    log(\"Received response for \" + iframe.id);\n\n                    // when we remove iframe from dom\n                    // the request stops, but in IE load\n                    // event fires\n                    if (!iframe.parentNode) {\n                        return;\n                    }\n\n                    try {\n                        // fixing Opera 10.53\n                        if (iframe.contentDocument &&\n                            iframe.contentDocument.body &&\n                            iframe.contentDocument.body.innerHTML == \"false\") {\n                            // In Opera event is fired second time\n                            // when body.innerHTML changed from false\n                            // to server response approx. after 1 sec\n                            // when we upload file with iframe\n                            return;\n                        }\n                    }\n                    catch (error) {\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                        responseDescriptor = {success: false};\n                    }\n\n                    callback(responseDescriptor);\n                });\n            }\n        },\n\n        /**\n         * Creates an iframe with a specific document-unique name.\n         *\n         * @param id ID of the associated file\n         * @returns {HTMLIFrameElement}\n         */\n        _createIframe: function(id) {\n            var iframeName = handler._getIframeName(id);\n\n            return initIframeForUpload(iframeName);\n        },\n\n        /**\n         * Called when we are no longer interested in being notified when an iframe has loaded.\n         *\n         * @param id Associated file ID\n         */\n        _detachLoadEvent: function(id) {\n            if (detachLoadEvents[id] !== undefined) {\n                detachLoadEvents[id]();\n                delete detachLoadEvents[id];\n            }\n        },\n\n        /**\n         * @param fileId ID of the associated file\n         * @returns {string} The `document`-unique name of the iframe\n         */\n        _getIframeName: function(fileId) {\n            return fileId + \"_\" + formHandlerInstanceId;\n        },\n\n        /**\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\n         * that the form is hidden from view.\n         *\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\n         * @returns {HTMLFormElement} The created form\n         */\n        _initFormForUpload: function(spec) {\n            var method = spec.method,\n                endpoint = spec.endpoint,\n                params = spec.params,\n                paramsInBody = spec.paramsInBody,\n                targetName = spec.targetName,\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n                url = endpoint;\n\n            if (paramsInBody) {\n                qq.obj2Inputs(params, form);\n            }\n            else {\n                url = qq.obj2url(params, endpoint);\n            }\n\n            form.setAttribute(\"action\", url);\n            form.setAttribute(\"target\", targetName);\n            form.style.display = \"none\";\n            document.body.appendChild(form);\n\n            return form;\n        },\n\n        /**\n         * @param innerHtmlOrMessage JSON message\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\n         */\n        _parseJsonResponse: function(innerHtmlOrMessage) {\n            var response = {};\n\n            try {\n                response = qq.parseJson(innerHtmlOrMessage);\n            }\n            catch (error) {\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\n * XHR upload handlers.\n *\n * @constructor\n */\nqq.XhrUploadHandler = function(spec) {\n    \"use strict\";\n\n    var handler = this,\n        namespace = spec.options.namespace,\n        proxy = spec.proxy,\n        chunking = spec.options.chunking,\n        resume = spec.options.resume,\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        getEndpoint = proxy.getEndpoint,\n        getDataByUuid = proxy.getDataByUuid,\n        onUuidChanged = proxy.onUuidChanged,\n        onProgress = proxy.onProgress,\n        log = proxy.log;\n\n    function abort(id) {\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n\n            xhr.onreadystatechange = null;\n            xhr.upload.onprogress = null;\n            xhr.abort();\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, blobOrProxy) {\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                    super_.add(id, {file: blobOrProxy});\n                }\n                else if (blobOrProxy instanceof qq.BlobProxy) {\n                    super_.add(id, {proxy: blobOrProxy});\n                }\n                else {\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                }\n\n                handler._initTempState(id);\n                resumeEnabled && handler._maybePrepareForResume(id);\n            },\n\n            expunge: function(id) {\n                abort(id);\n                handler._maybeDeletePersistedChunkData(id);\n                handler._clearXhrs(id);\n                super_.expunge(id);\n            }\n        };\n    });\n\n    qq.extend(this, {\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\n        clearCachedChunk: function(id, chunkIdx) {\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\n        },\n\n        clearXhr: function(id, chunkIdx) {\n            var tempState = handler._getFileState(id).temp;\n\n            if (tempState.xhrs) {\n                delete tempState.xhrs[chunkIdx];\n            }\n            if (tempState.ajaxRequesters) {\n                delete tempState.ajaxRequesters[chunkIdx];\n            }\n        },\n\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\n        finalizeChunks: function(id, responseParser) {\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\n                xhr = handler._getXhr(id, lastChunkIdx);\n\n            if (responseParser) {\n                return new qq.Promise().success(responseParser(xhr), xhr);\n            }\n\n            return new qq.Promise().success({}, xhr);\n        },\n\n        getFile: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).file;\n        },\n\n        getProxy: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).proxy;\n        },\n\n        /**\n         * @returns {Array} Array of objects containing properties useful to integrators\n         * when it is important to determine which files are potentially resumable.\n         */\n        getResumableFilesData: function() {\n            var resumableFilesData = [];\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\n\n                var data = {\n                    name: uploadData.name,\n                    remaining: uploadData.chunking.remaining,\n                    size: uploadData.size,\n                    uuid: uploadData.uuid\n                };\n\n                if (uploadData.key) {\n                    data.key = uploadData.key;\n                }\n\n                resumableFilesData.push(data);\n            });\n\n            return resumableFilesData;\n        },\n\n        isResumable: function(id) {\n            return !!chunking && handler.isValid(id) && !handler._getFileState(id).notResumable;\n        },\n\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n            var inProgress = optInProgress || handler._getFileState(id).chunking.inProgress,\n                remaining = optRemaining || handler._getFileState(id).chunking.remaining;\n\n            if (inProgress) {\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                inProgress.reverse();\n                qq.each(inProgress, function(idx, chunkIdx) {\n                    remaining.unshift(chunkIdx);\n                });\n                inProgress.length = 0;\n            }\n        },\n\n        pause: function(id) {\n            if (handler.isValid(id)) {\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                handler._getFileState(id).paused = true;\n                abort(id);\n                return true;\n            }\n        },\n\n        reevaluateChunking: function(id) {\n            if (chunking && handler.isValid(id)) {\n                var state = handler._getFileState(id),\n                    totalChunks,\n                    i;\n\n                delete state.chunking;\n\n                state.chunking = {};\n                totalChunks = handler._getTotalChunks(id);\n                if (totalChunks > 1 || chunking.mandatory) {\n                    state.chunking.enabled = true;\n                    state.chunking.parts = totalChunks;\n                    state.chunking.remaining = [];\n\n                    for (i = 0; i < totalChunks; i++) {\n                        state.chunking.remaining.push(i);\n                    }\n\n                    handler._initTempState(id);\n                }\n                else {\n                    state.chunking.enabled = false;\n                }\n            }\n        },\n\n        updateBlob: function(id, newBlob) {\n            if (handler.isValid(id)) {\n                handler._getFileState(id).file = newBlob;\n            }\n        },\n\n        _clearXhrs: function(id) {\n            var tempState = handler._getFileState(id).temp;\n\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\n                delete tempState.ajaxRequesters[chunkId];\n            });\n\n            qq.each(tempState.xhrs, function(chunkId) {\n                delete tempState.xhrs[chunkId];\n            });\n        },\n\n        /**\n         * Creates an XHR instance for this file and stores it in the fileState.\n         *\n         * @param id File ID\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @returns {XMLHttpRequest}\n         */\n        _createXhr: function(id, optChunkIdx) {\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n        },\n\n        _getAjaxRequester: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n        },\n\n        _getChunkData: function(id, chunkIndex) {\n            var chunkSize = chunking.partSize,\n                fileSize = getSize(id),\n                fileOrBlob = handler.getFile(id),\n                startBytes = chunkSize * chunkIndex,\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\n                totalChunks = handler._getTotalChunks(id),\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\n\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\n            // See https://github.com/Widen/fine-uploader/issues/937#issuecomment-41418760\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n\n            cachedChunks[chunkIndex] = blob;\n\n            return {\n                part: chunkIndex,\n                start: startBytes,\n                end: endBytes,\n                count: totalChunks,\n                blob: blob,\n                size: endBytes - startBytes\n            };\n        },\n\n        _getChunkDataForCallback: function(chunkData) {\n            return {\n                partIndex: chunkData.part,\n                startByte: chunkData.start + 1,\n                endByte: chunkData.end,\n                totalParts: chunkData.count\n            };\n        },\n\n        /**\n         * @param id File ID\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\n         */\n        _getLocalStorageId: function(id) {\n            var formatVersion = \"5.0\",\n                name = getName(id),\n                size = getSize(id),\n                chunkSize = chunking.partSize,\n                endpoint = getEndpoint(id);\n\n            return qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n        },\n\n        _getMimeType: function(id) {\n            return handler.getFile(id).type;\n        },\n\n        _getPersistableData: function(id) {\n            return handler._getFileState(id).chunking;\n        },\n\n        /**\n         * @param id ID of the associated file\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\n         */\n        _getTotalChunks: function(id) {\n            if (chunking) {\n                var fileSize = getSize(id),\n                    chunkSize = chunking.partSize;\n\n                return Math.ceil(fileSize / chunkSize);\n            }\n        },\n\n        _getXhr: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\n        },\n\n        _getXhrs: function(id) {\n            return handler._getFileState(id).temp.xhrs;\n        },\n\n        // Iterates through all XHR handler-created resume records (in local storage),\n        // invoking the passed callback and passing in the key and value of each local storage record.\n        _iterateResumeRecords: function(callback) {\n            if (resumeEnabled) {\n                qq.each(localStorage, function(key, item) {\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                        var uploadData = JSON.parse(item);\n                        callback(key, uploadData);\n                    }\n                });\n            }\n        },\n\n        _initTempState: function(id) {\n            handler._getFileState(id).temp = {\n                ajaxRequesters: {},\n                chunkProgress: {},\n                xhrs: {},\n                cachedChunks: {}\n            };\n        },\n\n        _markNotResumable: function(id) {\n            handler._getFileState(id).notResumable = true;\n        },\n\n        // Removes a chunked upload record from local storage, if possible.\n        // Returns true if the item was removed, false otherwise.\n        _maybeDeletePersistedChunkData: function(id) {\n            var localStorageId;\n\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                if (localStorageId && localStorage.getItem(localStorageId)) {\n                    localStorage.removeItem(localStorageId);\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\n        // so we can pick up from where we left off.\n        _maybePrepareForResume: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\n            // so prepare for a resume attempt.\n            if (resumeEnabled && state.key === undefined) {\n                localStorageId = handler._getLocalStorageId(id);\n                persistedData = localStorage.getItem(localStorageId);\n\n                // If we found this item in local storage, maybe we should resume it.\n                if (persistedData) {\n                    persistedData = JSON.parse(persistedData);\n\n                    // If we found a resume record but we have already handled this file in this session,\n                    // don't try to resume it & ensure we don't persist future check data\n                    if (getDataByUuid(persistedData.uuid)) {\n                        handler._markNotResumable(id);\n                    }\n                    else {\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n\n                        onUuidChanged(id, persistedData.uuid);\n\n                        state.key = persistedData.key;\n                        state.chunking = persistedData.chunking;\n                        state.loaded = persistedData.loaded;\n                        state.attemptingResume = true;\n\n                        handler.moveInProgressToRemaining(id);\n                    }\n                }\n            }\n        },\n\n        // Persist any data needed to resume this upload in a new session.\n        _maybePersistChunkedState: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                persistedData = {\n                    name: getName(id),\n                    size: getSize(id),\n                    uuid: getUuid(id),\n                    key: state.key,\n                    chunking: state.chunking,\n                    loaded: state.loaded,\n                    lastUpdated: Date.now()\n                };\n\n                try {\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                }\n                catch (error) {\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                }\n            }\n        },\n\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n            var xhr = handler._getXhr(id, chunkIdx),\n                name = getName(id),\n                progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        }\n                        else {\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\n                        }\n                    },\n\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\n                            loadedForRequest = loaded,\n                            totalForRequest = total,\n                            totalFileSize = getSize(id),\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\n\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n\n            xhr.upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    /* jshint eqnull: true */\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\n                    progressCalculator[type](e.loaded, e.total);\n                }\n            };\n        },\n\n        /**\n         * Registers an XHR transport instance created elsewhere.\n         *\n         * @param id ID of the associated file\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @param xhr XMLHttpRequest object instance\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\n         * @returns {XMLHttpRequest}\n         */\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\n                tempState = handler._getFileState(id).temp;\n\n            tempState.xhrs = tempState.xhrs || {};\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n\n            tempState.xhrs[xhrsId] = xhr;\n\n            if (optAjaxRequester) {\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n            }\n\n            return xhr;\n        },\n\n        // Deletes any local storage records that are \"expired\".\n        _removeExpiredChunkingRecords: function() {\n            var expirationDays = resume.recordsExpireIn;\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                var expirationDate = new Date(uploadData.lastUpdated);\n\n                // transform updated date into expiration date\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\n\n                if (expirationDate.getTime() <= Date.now()) {\n                    log(\"Removing expired resume record with key \" + key);\n                    localStorage.removeItem(key);\n                }\n            });\n        },\n\n        /**\n         * Determine if the associated file should be chunked.\n         *\n         * @param id ID of the associated file\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\n         */\n        _shouldChunkThisFile: function(id) {\n            var state = handler._getFileState(id);\n\n            if (!state.chunking) {\n                handler.reevaluateChunking(id);\n            }\n\n            return state.chunking.enabled;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\nqq.DeleteFileAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {return {};},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n\n    qq.extend(options, o);\n\n    function getMandatedParams() {\n        if (options.method.toUpperCase() === \"POST\") {\n            return {\n                _method: \"DELETE\"\n            };\n        }\n\n        return {};\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"POST\", \"DELETE\"],\n        method: options.method,\n        endpointStore: options.endpointStore,\n        paramsStore: options.paramsStore,\n        mandatedParams: getMandatedParams(),\n        maxConnections: options.maxConnections,\n        customHeaders: function(id) {\n            return options.customHeaders.get(id);\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        sendDelete: function(id, uuid, additionalMandatedParams) {\n            var additionalOptions = additionalMandatedParams || {};\n\n            options.log(\"Submitting delete file request for \" + id);\n\n            if (options.method === \"DELETE\") {\n                requester.initTransport(id)\n                    .withPath(uuid)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n            else {\n                additionalOptions[options.uuidParamName] = uuid;\n                requester.initTransport(id)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n        }\n    });\n};\n","/*global qq, define */\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\n/**\n * Mega pixel image rendering library for iOS6+\n *\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\n * which causes unexpected subsampling when drawing it in canvas.\n * By using this library, you can safely render the image with proper stretching.\n *\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\n * Released under the MIT license\n *\n * Heavily modified by Widen for Fine Uploader\n */\n(function() {\n\n    /**\n     * Detect subsampling in loaded image.\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\n     */\n    function detectSubsampling(img) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            canvas = document.createElement(\"canvas\"),\n            ctx;\n\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\n            canvas.width = canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, -iw + 1, 0);\n            // subsampled image becomes half smaller in rendering size.\n            // check alpha channel value to confirm image is covering edge pixel or not.\n            // if alpha value is 0 image is not covering, hence subsampled.\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Detecting vertical squash in loaded image.\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\n     */\n    function detectVerticalSquash(img, iw, ih) {\n        var canvas = document.createElement(\"canvas\"),\n            sy = 0,\n            ey = ih,\n            py = ih,\n            ctx, data, alpha, ratio;\n\n        canvas.width = 1;\n        canvas.height = ih;\n        ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        data = ctx.getImageData(0, 0, 1, ih).data;\n\n        // search image edge pixel position in case it is squashed vertically.\n        while (py > sy) {\n            alpha = data[(py - 1) * 4 + 3];\n            if (alpha === 0) {\n                ey = py;\n            } else {\n                sy = py;\n            }\n            py = (ey + sy) >> 1;\n        }\n\n        ratio = (py / ih);\n        return (ratio === 0) ? 1 : ratio;\n    }\n\n    /**\n     * Rendering image element (with resizing) and get its data URL\n     */\n    function renderImageToDataURL(img, blob, options, doSquash) {\n        var canvas = document.createElement(\"canvas\"),\n            mime = options.mime || \"image/jpeg\",\n            promise = new qq.Promise();\n\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\n            .then(function() {\n                promise.success(\n                    canvas.toDataURL(mime, options.quality || 0.8)\n                );\n            });\n\n        return promise;\n    }\n\n    function maybeCalculateDownsampledDimensions(spec) {\n        var maxPixels = 5241000; //iOS specific value\n\n        if (!qq.ios()) {\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n        }\n\n        if (spec.origHeight * spec.origWidth > maxPixels) {\n            return {\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n            };\n        }\n    }\n\n    /**\n     * Rendering image element (with resizing) into the canvas element\n     */\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            width = options.width,\n            height = options.height,\n            ctx = canvas.getContext(\"2d\"),\n            promise = new qq.Promise(),\n            modifiedDimensions;\n\n        ctx.save();\n\n        if (options.resize) {\n            return renderImageToCanvasWithCustomResizer({\n                blob: blob,\n                canvas: canvas,\n                image: img,\n                imageHeight: ih,\n                imageWidth: iw,\n                orientation: options.orientation,\n                resize: options.resize,\n                targetHeight: height,\n                targetWidth: width\n            });\n        }\n\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\n                origWidth: width,\n                origHeight: height\n            });\n\n            if (modifiedDimensions) {\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\n                    \"warn\");\n\n                width = modifiedDimensions.newWidth;\n                height = modifiedDimensions.newHeight;\n            }\n        }\n\n        transformCoordinate(canvas, width, height, options.orientation);\n\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\n        if (qq.ios()) {\n            (function() {\n                if (detectSubsampling(img)) {\n                    iw /= 2;\n                    ih /= 2;\n                }\n\n                var d = 1024, // size of tiling canvas\n                    tmpCanvas = document.createElement(\"canvas\"),\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\n                    dw = Math.ceil(d * width / iw),\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\n                    sy = 0,\n                    dy = 0,\n                    tmpCtx, sx, dx;\n\n                tmpCanvas.width = tmpCanvas.height = d;\n                tmpCtx = tmpCanvas.getContext(\"2d\");\n\n                while (sy < ih) {\n                    sx = 0;\n                    dx = 0;\n                    while (sx < iw) {\n                        tmpCtx.clearRect(0, 0, d, d);\n                        tmpCtx.drawImage(img, -sx, -sy);\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                        sx += d;\n                        dx += dw;\n                    }\n                    sy += d;\n                    dy += dh;\n                }\n                ctx.restore();\n                tmpCanvas = tmpCtx = null;\n            }());\n        }\n        else {\n            ctx.drawImage(img, 0, 0, width, height);\n        }\n\n        canvas.qqImageRendered && canvas.qqImageRendered();\n        promise.success();\n\n        return promise;\n    }\n\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\n        var blob = resizeInfo.blob,\n            image = resizeInfo.image,\n            imageHeight = resizeInfo.imageHeight,\n            imageWidth = resizeInfo.imageWidth,\n            orientation = resizeInfo.orientation,\n            promise = new qq.Promise(),\n            resize = resizeInfo.resize,\n            sourceCanvas = document.createElement(\"canvas\"),\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\n            targetCanvas = resizeInfo.canvas,\n            targetHeight = resizeInfo.targetHeight,\n            targetWidth = resizeInfo.targetWidth;\n\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n\n        targetCanvas.height = targetHeight;\n        targetCanvas.width = targetWidth;\n\n        sourceCanvasContext.drawImage(image, 0, 0);\n\n        resize({\n            blob: blob,\n            height: targetHeight,\n            image: image,\n            sourceCanvas: sourceCanvas,\n            targetCanvas: targetCanvas,\n            width: targetWidth\n        })\n            .then(\n                function success() {\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                    promise.success();\n                },\n                promise.failure\n            );\n\n        return promise;\n    }\n\n    /**\n     * Transform canvas coordination according to specified frame size and orientation\n     * Orientation value is from EXIF tag\n     */\n    function transformCoordinate(canvas, width, height, orientation) {\n        switch (orientation) {\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n            default:\n                canvas.width = width;\n                canvas.height = height;\n        }\n        var ctx = canvas.getContext(\"2d\");\n        switch (orientation) {\n            case 2:\n                // horizontal flip\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n            case 3:\n                // 180 rotate left\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n            case 4:\n                // vertical flip\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n            case 5:\n                // vertical flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n            case 6:\n                // 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n            case 7:\n                // horizontal flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n            case 8:\n                // 90 rotate left\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * MegaPixImage class\n     */\n    function MegaPixImage(srcImage, errorCallback) {\n        var self = this;\n\n        if (window.Blob && srcImage instanceof Blob) {\n            (function() {\n                var img = new Image(),\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\n                img.src = URL.createObjectURL(srcImage);\n                self.blob = srcImage;\n                srcImage = img;\n            }());\n        }\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n            srcImage.onload = function() {\n                var listeners = self.imageLoadListeners;\n                if (listeners) {\n                    self.imageLoadListeners = null;\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\n                    // so let's push this to the end of the UI thread queue.\n                    setTimeout(function() {\n                        for (var i = 0, len = listeners.length; i < len; i++) {\n                            listeners[i]();\n                        }\n                    }, 0);\n                }\n            };\n            srcImage.onerror = errorCallback;\n            this.imageLoadListeners = [];\n        }\n        this.srcImage = srcImage;\n    }\n\n    /**\n     * Rendering megapix image into specified target element\n     */\n    MegaPixImage.prototype.render = function(target, options) {\n        options = options || {};\n\n        var self = this,\n            imgWidth = this.srcImage.naturalWidth,\n            imgHeight = this.srcImage.naturalHeight,\n            width = options.width,\n            height = options.height,\n            maxWidth = options.maxWidth,\n            maxHeight = options.maxHeight,\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\n            tagName = target.tagName.toLowerCase(),\n            opt;\n\n        if (this.imageLoadListeners) {\n            this.imageLoadListeners.push(function() { self.render(target, options); });\n            return;\n        }\n\n        if (width && !height) {\n            height = (imgHeight * width / imgWidth) << 0;\n        } else if (height && !width) {\n            width = (imgWidth * height / imgHeight) << 0;\n        } else {\n            width = imgWidth;\n            height = imgHeight;\n        }\n        if (maxWidth && width > maxWidth) {\n            width = maxWidth;\n            height = (imgHeight * width / imgWidth) << 0;\n        }\n        if (maxHeight && height > maxHeight) {\n            height = maxHeight;\n            width = (imgWidth * height / imgHeight) << 0;\n        }\n\n        opt = { width: width, height: height },\n        qq.each(options, function(optionsKey, optionsValue) {\n            opt[optionsKey] = optionsValue;\n        });\n\n        if (tagName === \"img\") {\n            (function() {\n                var oldTargetSrc = target.src;\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\n                    .then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n            }());\n        } else if (tagName === \"canvas\") {\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n        }\n        if (typeof this.onrender === \"function\") {\n            this.onrender(target);\n        }\n    };\n\n    qq.MegaPixImage = MegaPixImage;\n})();\n","/*globals qq */\n/**\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\n *\n * @constructor\n */\nqq.ImageGenerator = function(log) {\n    \"use strict\";\n\n    function isImg(el) {\n        return el.tagName.toLowerCase() === \"img\";\n    }\n\n    function isCanvas(el) {\n        return el.tagName.toLowerCase() === \"canvas\";\n    }\n\n    function isImgCorsSupported() {\n        return new Image().crossOrigin !== undefined;\n    }\n\n    function isCanvasSupported() {\n        var canvas = document.createElement(\"canvas\");\n\n        return canvas.getContext && canvas.getContext(\"2d\");\n    }\n\n    // This is only meant to determine the MIME type of a renderable image file.\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\n    // are rendered correctly, among other things.\n    function determineMimeOfFileName(nameWithPath) {\n        /*jshint -W015 */\n        var pathSegments = nameWithPath.split(\"/\"),\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\n            extension = qq.getExtension(name);\n\n        extension = extension && extension.toLowerCase();\n\n        switch (extension) {\n            case \"jpeg\":\n            case \"jpg\":\n                return \"image/jpeg\";\n            case \"png\":\n                return \"image/png\";\n            case \"bmp\":\n                return \"image/bmp\";\n            case \"gif\":\n                return \"image/gif\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n        }\n    }\n\n    // This will likely not work correctly in IE8 and older.\n    // It's only used as part of a formula to determine\n    // if a canvas can be used to scale a server-hosted thumbnail.\n    // If canvas isn't supported by the UA (IE8 and older)\n    // this method should not even be called.\n    function isCrossOrigin(url) {\n        var targetAnchor = document.createElement(\"a\"),\n            targetProtocol, targetHostname, targetPort;\n\n        targetAnchor.href = url;\n\n        targetProtocol = targetAnchor.protocol;\n        targetPort = targetAnchor.port;\n        targetHostname = targetAnchor.hostname;\n\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n            return true;\n        }\n\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n            return true;\n        }\n\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\n        if (targetPort !== window.location.port && !qq.ie()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function registerImgLoadListeners(img, promise) {\n        img.onload = function() {\n            img.onload = null;\n            img.onerror = null;\n            promise.success(img);\n        };\n\n        img.onerror = function() {\n            img.onload = null;\n            img.onerror = null;\n            log(\"Problem drawing thumbnail!\", \"error\");\n            promise.failure(img, \"Problem drawing thumbnail!\");\n        };\n    }\n\n    function registerCanvasDrawImageListener(canvas, promise) {\n        // The image is drawn on the canvas by a third-party library,\n        // and we want to know when this is completed.  Since the library\n        // may invoke drawImage many times in a loop, we need to be called\n        // back when the image is fully rendered.  So, we are expecting the\n        // code that draws this image to follow a convention that involves a\n        // function attached to the canvas instance be invoked when it is done.\n        canvas.qqImageRendered = function() {\n            promise.success(canvas);\n        };\n    }\n\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\n    // attempt was not successful.\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n\n        if (isImg(imgOrCanvas)) {\n            registerImgLoadListeners(imgOrCanvas, promise);\n        }\n        else if (isCanvas(imgOrCanvas)) {\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\n        }\n        else {\n            promise.failure(imgOrCanvas);\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n        }\n\n        return registered;\n    }\n\n    // Draw a preview iff the current UA can natively display it.\n    // Also rotate the image if necessary.\n    function draw(fileOrBlob, container, options) {\n        var drawPreview = new qq.Promise(),\n            identifier = new qq.Identify(fileOrBlob, log),\n            maxSize = options.maxSize,\n            // jshint eqnull:true\n            orient = options.orient == null ? true : options.orient,\n            megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n\n        identifier.isPreviewable().then(\n            function(mime) {\n                // If options explicitly specify that Orientation is not desired,\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\n                var dummyExif = {\n                        parse: function() {\n                            return new qq.Promise().success();\n                        }\n                    },\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(\n                        function(exif) {\n                            var orientation = exif && exif.Orientation;\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                orientation: orientation,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        },\n\n                        function(failureMsg) {\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        }\n                    );\n                }\n            },\n\n            function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            }\n        );\n\n        return drawPreview;\n    }\n\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n        var tempImg = new Image(),\n            tempImgRender = new qq.Promise();\n\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\n\n        if (isCrossOrigin(url)) {\n            tempImg.crossOrigin = \"anonymous\";\n        }\n\n        tempImg.src = url;\n\n        tempImgRender.then(\n            function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            },\n\n            draw.failure\n        );\n    }\n\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n        registerThumbnailRenderedListener(img, draw);\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\n        // that must drop back to CSS is known and exploited by the templating module.\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\n        qq(img).css({\n            maxWidth: maxSize + \"px\",\n            maxHeight: maxSize + \"px\"\n        });\n\n        img.src = url;\n    }\n\n    // Draw a (server-hosted) thumbnail given a URL.\n    // This will optionally scale the thumbnail as well.\n    // It attempts to use <canvas> to scale, but will fall back\n    // to max-width and max-height style properties if the UA\n    // doesn't support canvas or if the images is cross-domain and\n    // the UA doesn't support the crossorigin attribute on img tags,\n    // which is required to scale a cross-origin image using <canvas> &\n    // then export it back to an <img>.\n    function drawFromUrl(url, container, options) {\n        var draw = new qq.Promise(),\n            scale = options.scale,\n            maxSize = scale ? options.maxSize : null;\n\n        // container is an img, scaling needed\n        if (scale && isImg(container)) {\n            // Iff canvas is available in this UA, try to use it for scaling.\n            // Otherwise, fall back to CSS scaling\n            if (isCanvasSupported()) {\n                // Attempt to use <canvas> for image scaling,\n                // but we must fall back to scaling via CSS/styles\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n                else {\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                }\n            }\n            else {\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n            }\n        }\n        // container is a canvas, scaling optional\n        else if (isCanvas(container)) {\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n        }\n        // container is an img & no scaling: just set the src attr to the passed url\n        else if (registerThumbnailRenderedListener(container, draw)) {\n            container.src = url;\n        }\n\n        return draw;\n    }\n\n    qq.extend(this, {\n        /**\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\n         *\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\n         * @param container <img> or <canvas> to contain the preview\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\n         */\n        generate: function(fileBlobOrUrl, container, options) {\n            if (qq.isString(fileBlobOrUrl)) {\n                log(\"Attempting to update thumbnail based on server response.\");\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\n            }\n            else {\n                log(\"Attempting to draw client-side image preview.\");\n                return draw(fileBlobOrUrl, container, options || {});\n            }\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.isImg = isImg;\n    this._testing.isCanvas = isCanvas;\n    this._testing.isCrossOrigin = isCrossOrigin;\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    /*</testing>*/\n};\n","/*globals qq */\n/**\n * EXIF image data parser.  Currently only parses the Orientation tag value,\n * but this may be expanded to other tags in the future.\n *\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\n * @constructor\n */\nqq.Exif = function(fileOrBlob, log) {\n    \"use strict\";\n\n    // Orientation is the only tag parsed here at this time.\n    var TAG_IDS = [274],\n        TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n\n    // Convert a little endian (hex string) to big endian (decimal).\n    function parseLittleEndian(hex) {\n        var result = 0,\n            pow = 0;\n\n        while (hex.length > 0) {\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n            hex = hex.substring(2, hex.length);\n            pow += 8;\n        }\n\n        return result;\n    }\n\n    // Find the byte offset, of Application Segment 1 (EXIF).\n    // External callers need not supply any arguments.\n    function seekToApp1(offset, promise) {\n        var theOffset = offset,\n            thePromise = promise;\n        if (theOffset === undefined) {\n            theOffset = 2;\n            thePromise = new qq.Promise();\n        }\n\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n            var match = /^ffe([0-9])/.exec(hex),\n                segmentLength;\n\n            if (match) {\n                if (match[1] !== \"1\") {\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\n                }\n                else {\n                    thePromise.success(theOffset);\n                }\n            }\n            else {\n                thePromise.failure(\"No EXIF header to be found!\");\n            }\n        });\n\n        return thePromise;\n    }\n\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\n    function getApp1Offset() {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n            if (hex.indexOf(\"ffd8\") !== 0) {\n                promise.failure(\"Not a valid JPEG!\");\n            }\n            else {\n                seekToApp1().then(function(offset) {\n                    promise.success(offset);\n                },\n                function(error) {\n                    promise.failure(error);\n                });\n            }\n        });\n\n        return promise;\n    }\n\n    // Determine the byte ordering of the EXIF header.\n    function isLittleEndian(app1Start) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n            promise.success(hex === \"4949\");\n        });\n\n        return promise;\n    }\n\n    // Determine the number of directory entries in the EXIF header.\n    function getDirEntryCount(app1Start, littleEndian) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n            if (littleEndian) {\n                return promise.success(parseLittleEndian(hex));\n            }\n            else {\n                promise.success(parseInt(hex, 16));\n            }\n        });\n\n        return promise;\n    }\n\n    // Get the IFD portion of the EXIF header as a hex string.\n    function getIfd(app1Start, dirEntries) {\n        var offset = app1Start + 20,\n            bytes = dirEntries * 12;\n\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\n    }\n\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\n    function getDirEntries(ifdHex) {\n        var entries = [],\n            offset = 0;\n\n        while (offset + 24 <= ifdHex.length) {\n            entries.push(ifdHex.slice(offset, offset + 24));\n            offset += 24;\n        }\n\n        return entries;\n    }\n\n    // Obtain values for all relevant tags and return them.\n    function getTagValues(littleEndian, dirEntries) {\n        var TAG_VAL_OFFSET = 16,\n            tagsToFind = qq.extend([], TAG_IDS),\n            vals = {};\n\n        qq.each(dirEntries, function(idx, entry) {\n            var idHex = entry.slice(0, 4),\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\n                tagsToFindIdx = tagsToFind.indexOf(id),\n                tagValHex, tagName, tagValLength;\n\n            if (tagsToFindIdx >= 0) {\n                tagName = TAG_INFO[id].name;\n                tagValLength = TAG_INFO[id].bytes;\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n\n                tagsToFind.splice(tagsToFindIdx, 1);\n            }\n\n            if (tagsToFind.length === 0) {\n                return false;\n            }\n        });\n\n        return vals;\n    }\n\n    qq.extend(this, {\n        /**\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\n         *\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\n         * If successful, the parsed EXIF header as an object will be included.\n         */\n        parse: function() {\n            var parser = new qq.Promise(),\n                onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n\n            getApp1Offset().then(function(app1Offset) {\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n\n                isLittleEndian(app1Offset).then(function(littleEndian) {\n\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                            var dirEntries = getDirEntries(ifdHex),\n                                tagValues = getTagValues(littleEndian, dirEntries);\n\n                            log(\"Successfully parsed some EXIF tags\");\n\n                            parser.success(tagValues);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n            }, onParseFailure);\n\n            return parser;\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.parseLittleEndian = parseLittleEndian;\n    /*</testing>*/\n};\n","/*globals qq */\nqq.Identify = function(fileOrBlob, log) {\n    \"use strict\";\n\n    function isIdentifiable(magicBytes, questionableBytes) {\n        var identifiable = false,\n            magicBytesEntries = [].concat(magicBytes);\n\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                identifiable = true;\n                return false;\n            }\n        });\n\n        return identifiable;\n    }\n\n    qq.extend(this, {\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\n         * file, we will examine the blob's type attribute to save CPU cycles.\n         *\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\n         * If successful, the MIME string is passed to the success handler.\n         */\n        isPreviewable: function() {\n            var self = this,\n                identifier = new qq.Promise(),\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n\n            log(\"First pass: check type attribute of blob object.\");\n\n            if (this.isPreviewableSync()) {\n                log(\"Second pass: check for magic bytes in file header.\");\n\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                        if (isIdentifiable(bytes, hex)) {\n                            // Safari is the only supported browser that can deal with TIFFs natively,\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                previewable = true;\n                                identifier.success(mime);\n                            }\n\n                            return false;\n                        }\n                    });\n\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n\n                    if (!previewable) {\n                        identifier.failure();\n                    }\n                },\n                function() {\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                    identifier.failure();\n                });\n            }\n            else {\n                identifier.failure();\n            }\n\n            return identifier;\n        },\n\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\n         * file's magic bytes.\n         *\n         * @returns {Boolean} true if the blob can be rendered in the current browser\n         */\n        isPreviewableSync: function() {\n            var fileMime = fileOrBlob.type,\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            if (isRecognizedImage) {\n                if (fileMime === \"image/tiff\") {\n                    previewable = qq.supportedFeatures.tiffPreviews;\n                }\n                else {\n                    previewable = true;\n                }\n            }\n\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n\n            return previewable;\n        }\n    });\n};\n\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n    \"image/jpeg\": \"ffd8ff\",\n    \"image/gif\": \"474946\",\n    \"image/png\": \"89504e\",\n    \"image/bmp\": \"424d\",\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\n};\n","/*globals qq*/\n/**\n * Attempts to validate an image, wherever possible.\n *\n * @param blob File or Blob representing a user-selecting image.\n * @param log Uses this to post log messages to the console.\n * @constructor\n */\nqq.ImageValidation = function(blob, log) {\n    \"use strict\";\n\n    /**\n     * @param limits Object with possible image-related limits to enforce.\n     * @returns {boolean} true if at least one of the limits has a non-zero value\n     */\n    function hasNonZeroLimits(limits) {\n        var atLeastOne = false;\n\n        qq.each(limits, function(limit, value) {\n            if (value > 0) {\n                atLeastOne = true;\n                return false;\n            }\n        });\n\n        return atLeastOne;\n    }\n\n    /**\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\n     * Otherwise, `success` is called on the returned promise with an object containing\n     * `width` and `height` properties.\n     */\n    function getWidthHeight() {\n        var sizeDetermination = new qq.Promise();\n\n        new qq.Identify(blob, log).isPreviewable().then(function() {\n            var image = new Image(),\n                url = window.URL && window.URL.createObjectURL ? window.URL :\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\n                      null;\n\n            if (url) {\n                image.onerror = function() {\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                    sizeDetermination.failure();\n                };\n\n                image.onload = function() {\n                    sizeDetermination.success({\n                        width: this.width,\n                        height: this.height\n                    });\n                };\n\n                image.src = url.createObjectURL(blob);\n            }\n            else {\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                sizeDetermination.failure();\n            }\n        }, sizeDetermination.failure);\n\n        return sizeDetermination;\n    }\n\n    /**\n     *\n     * @param limits Object with possible image-related limits to enforce.\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\n     */\n    function getFailingLimit(limits, dimensions) {\n        var failingLimit;\n\n        qq.each(limits, function(limitName, limitValue) {\n            if (limitValue > 0) {\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\n                    actualValue = dimensions[dimensionPropName];\n\n                /*jshint -W015*/\n                switch (limitMatcher[1]) {\n                    case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                }\n            }\n        });\n\n        return failingLimit;\n    }\n\n    /**\n     * Validate the associated blob.\n     *\n     * @param limits\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\n     * if the blob is not an image, or if the image is not verifiable.\n     * Otherwise, `failure` with the name of the failing limit.\n     */\n    this.validate = function(limits) {\n        var validationEffort = new qq.Promise();\n\n        log(\"Attempting to validate image.\");\n\n        if (hasNonZeroLimits(limits)) {\n            getWidthHeight().then(function(dimensions) {\n                var failingLimit = getFailingLimit(limits, dimensions);\n\n                if (failingLimit) {\n                    validationEffort.failure(failingLimit);\n                }\n                else {\n                    validationEffort.success();\n                }\n            }, validationEffort.success);\n        }\n        else {\n            validationEffort.success();\n        }\n\n        return validationEffort;\n    };\n};\n","/* globals qq */\n/**\n * Module used to control populating the initial list of files.\n *\n * @constructor\n */\nqq.Session = function(spec) {\n    \"use strict\";\n\n    var options = {\n        endpoint: null,\n        params: {},\n        customHeaders: {},\n        cors: {},\n        addFileRecord: function(sessionData) {},\n        log: function(message, level) {}\n    };\n\n    qq.extend(options, spec, true);\n\n    function isJsonResponseValid(response) {\n        if (qq.isArray(response)) {\n            return true;\n        }\n\n        options.log(\"Session response is not an array.\", \"error\");\n    }\n\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n        var someItemsIgnored = false;\n\n        success = success && isJsonResponseValid(fileItems);\n\n        if (success) {\n            qq.each(fileItems, function(idx, fileItem) {\n                /* jshint eqnull:true */\n                if (fileItem.uuid == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                }\n                else if (fileItem.name == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                }\n                else {\n                    try {\n                        options.addFileRecord(fileItem);\n                        return true;\n                    }\n                    catch (err) {\n                        someItemsIgnored = true;\n                        options.log(err.message, \"error\");\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n    }\n\n    // Initiate a call to the server that will be used to populate the initial file list.\n    // Returns a `qq.Promise`.\n    this.refresh = function() {\n        /*jshint indent:false */\n        var refreshEffort = new qq.Promise(),\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            },\n            requesterOptions = qq.extend({}, options),\n            requester = new qq.SessionAjaxRequester(\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\n            );\n\n        requester.queryServer();\n\n        return refreshEffort;\n    };\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Thin module used to send GET requests to the server, expecting information about session\n * data used to initialize an uploader instance.\n *\n * @param spec Various options used to influence the associated request.\n * @constructor\n */\nqq.SessionAjaxRequester = function(spec) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, spec);\n\n    function onComplete(id, xhrOrXdr, isError) {\n        var response = null;\n\n        /* jshint eqnull:true */\n        if (xhrOrXdr.responseText != null) {\n            try {\n                response = qq.parseJson(xhrOrXdr.responseText);\n            }\n            catch (err) {\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                isError = true;\n            }\n        }\n\n        options.onComplete(response, !isError, xhrOrXdr);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: onComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        queryServer: function() {\n            var params = qq.extend({}, options.params);\n\n            options.log(\"Session query request.\");\n\n            requester.initTransport(\"sessionRefresh\")\n                .withParams(params)\n                .withCacheBuster()\n                .send();\n        }\n    });\n};\n","/* globals qq, ExifRestorer */\n/**\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\n * Scaled images are generated and converted to blobs on-demand.\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\n *\n * @param spec Information about the scaled images to generate.\n * @param log Logger instance\n * @constructor\n */\nqq.Scaler = function(spec, log) {\n    \"use strict\";\n\n    var self = this,\n        customResizeFunction = spec.customResizer,\n        includeOriginal = spec.sendOriginal,\n        orient = spec.orient,\n        defaultType = spec.defaultType,\n        defaultQuality = spec.defaultQuality / 100,\n        failedToScaleText = spec.failureText,\n        includeExif = spec.includeExif,\n        sizes = this._getSortedSizes(spec.sizes);\n\n    // Revealed API for instances of this module\n    qq.extend(this, {\n        // If no targeted sizes have been declared or if this browser doesn't support\n        // client-side image preview generation, there is no scaling to do.\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n            var self = this,\n                records = [],\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\n                identifier = new qq.Identify(originalBlob, log);\n\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\n            if (identifier.isPreviewableSync()) {\n                // Create records for each scaled version & add them to the records array, smallest first.\n                qq.each(sizes, function(idx, sizeRecord) {\n                    var outputType = self._determineOutputType({\n                        defaultType: defaultType,\n                        requestedType: sizeRecord.type,\n                        refType: originalBlob.type\n                    });\n\n                    records.push({\n                        uuid: qq.getUniqueId(),\n                        name: self._getName(originalFileName, {\n                            name: sizeRecord.name,\n                            type: outputType,\n                            refType: originalBlob.type\n                        }),\n                        blob: new qq.BlobProxy(originalBlob,\n                        qq.bind(self._generateScaledImage, self, {\n                            customResizeFunction: customResizeFunction,\n                            maxSize: sizeRecord.maxSize,\n                            orient: orient,\n                            type: outputType,\n                            quality: defaultQuality,\n                            failedText: failedToScaleText,\n                            includeExif: includeExif,\n                            log: log\n                        }))\n                    });\n                });\n\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: includeOriginal ? originalBlob : null\n                });\n            }\n            else {\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: originalBlob\n                });\n            }\n\n            return records;\n        },\n\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n            var self = this,\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\n                scaledIds = [],\n                originalId = null,\n                addFileToHandler = api.addFileToHandler,\n                uploadData = api.uploadData,\n                paramsStore = api.paramsStore,\n                proxyGroupId = qq.getUniqueId();\n\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                var blobSize = record.size,\n                    id;\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    blobSize = -1;\n                }\n\n                id = uploadData.addFile({\n                    uuid: record.uuid,\n                    name: record.name,\n                    size: blobSize,\n                    batchId: batchId,\n                    proxyGroupId: proxyGroupId\n                });\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    scaledIds.push(id);\n                }\n                else {\n                    originalId = id;\n                }\n\n                if (record.blob) {\n                    addFileToHandler(id, record.blob);\n                    fileList.push({id: id, file: record.blob});\n                }\n                else {\n                    uploadData.setStatus(id, qq.status.REJECTED);\n                }\n            });\n\n            // If we are potentially uploading an original file and some scaled versions,\n            // ensure the scaled versions include reference's to the parent's UUID and size\n            // in their associated upload requests.\n            if (originalId !== null) {\n                qq.each(scaledIds, function(idx, scaledId) {\n                    var params = {\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\n                    };\n\n                    // Make sure the UUID for each scaled image is sent with the upload request,\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\n\n                    uploadData.setParentId(scaledId, originalId);\n                    paramsStore.addReadOnly(scaledId, params);\n                });\n\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\n                // parameter as well.\n                if (scaledIds.length) {\n                    (function() {\n                        var param = {};\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\n                        paramsStore.addReadOnly(originalId, param);\n                    }());\n                }\n            }\n        }\n    });\n};\n\nqq.extend(qq.Scaler.prototype, {\n    scaleImage: function(id, specs, api) {\n        \"use strict\";\n\n        if (!qq.supportedFeatures.scaling) {\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\n        }\n\n        var scalingEffort = new qq.Promise(),\n            log = api.log,\n            file = api.getFile(id),\n            uploadData = api.uploadData.retrieve({id: id}),\n            name = uploadData && uploadData.name,\n            uuid = uploadData && uploadData.uuid,\n            scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\n            },\n            scaler = new qq.Scaler(scalingOptions, log);\n\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n            scalingEffort.failure();\n\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n        }\n        else {\n            (qq.bind(function() {\n                // Assumption: There will never be more than one record\n                var record = scaler.getFileRecords(uuid, name, file)[0];\n\n                if (record && record.blob instanceof qq.BlobProxy) {\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                }\n                else {\n                    log(id + \" is not a scalable image!\", \"error\");\n                    scalingEffort.failure();\n                }\n            }, this)());\n        }\n\n        return scalingEffort;\n    },\n\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\n    // image/jpeg and image/png are the only safe choices at this time.\n    _determineOutputType: function(spec) {\n        \"use strict\";\n\n        var requestedType = spec.requestedType,\n            defaultType = spec.defaultType,\n            referenceType = spec.refType;\n\n        // If a default type and requested type have not been specified, this should be a\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\n        if (!defaultType && !requestedType) {\n            if (referenceType !== \"image/jpeg\") {\n                return \"image/png\";\n            }\n            return referenceType;\n        }\n\n        // A specified default type is used when a requested type is not specified.\n        if (!requestedType) {\n            return defaultType;\n        }\n\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n            if (requestedType === \"image/tiff\") {\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n            }\n\n            return requestedType;\n        }\n\n        return defaultType;\n    },\n\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\n    _getName: function(originalName, scaledVersionProperties) {\n        \"use strict\";\n\n        var startOfExt = originalName.lastIndexOf(\".\"),\n            versionType = scaledVersionProperties.type || \"image/png\",\n            referenceType = scaledVersionProperties.refType,\n            scaledName = \"\",\n            scaledExt = qq.getExtension(originalName),\n            nameAppendage = \"\";\n\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n        }\n\n        if (startOfExt >= 0) {\n            scaledName = originalName.substr(0, startOfExt);\n\n            if (referenceType !== versionType) {\n                scaledExt = versionType.split(\"/\")[1];\n            }\n\n            scaledName += nameAppendage + \".\" + scaledExt;\n        }\n        else {\n            scaledName = originalName + nameAppendage;\n        }\n\n        return scaledName;\n    },\n\n    // We want the smallest scaled file to be uploaded first\n    _getSortedSizes: function(sizes) {\n        \"use strict\";\n\n        sizes = qq.extend([], sizes);\n\n        return sizes.sort(function(a, b) {\n            if (a.maxSize > b.maxSize) {\n                return 1;\n            }\n            if (a.maxSize < b.maxSize) {\n                return -1;\n            }\n            return 0;\n        });\n    },\n\n    _generateScaledImage: function(spec, sourceFile) {\n        \"use strict\";\n\n        var self = this,\n            customResizeFunction = spec.customResizeFunction,\n            log = spec.log,\n            maxSize = spec.maxSize,\n            orient = spec.orient,\n            type = spec.type,\n            quality = spec.quality,\n            failedText = spec.failedText,\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\n            scalingEffort = new qq.Promise(),\n            imageGenerator = new qq.ImageGenerator(log),\n            canvas = document.createElement(\"canvas\");\n\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\n\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\n                signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n\n            if (includeExif) {\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                    scaledImageDataUri = scaledImageDataUriWithExif;\n                    signalSuccess();\n                },\n                function() {\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                    signalSuccess();\n                });\n            }\n            else {\n                signalSuccess();\n            }\n        }, function() {\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n            scalingEffort.failure(failedText);\n        });\n\n        return scalingEffort;\n    },\n\n    // Attempt to insert the original image's EXIF header into a scaled version.\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n        \"use strict\";\n\n        var reader = new FileReader(),\n            insertionEffort = new qq.Promise(),\n            originalImageDataUri = \"\";\n\n        reader.onload = function() {\n            originalImageDataUri = reader.result;\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n        };\n\n        reader.onerror = function() {\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n            insertionEffort.failure();\n        };\n\n        reader.readAsDataURL(originalImage);\n\n        return insertionEffort;\n    },\n\n    _dataUriToBlob: function(dataUri) {\n        \"use strict\";\n\n        var byteString, mimeString, arrayBuffer, intArray;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return this._createBlob(arrayBuffer, mimeString);\n    },\n\n    _createBlob: function(data, mime) {\n        \"use strict\";\n\n        var BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder ||\n                window.MSBlobBuilder,\n            blobBuilder = BlobBuilder && new BlobBuilder();\n\n        if (blobBuilder) {\n            blobBuilder.append(data);\n            return blobBuilder.getBlob(mime);\n        }\n        else {\n            return new Blob([data], {type: mime});\n        }\n    }\n});\n","//Based on MinifyJpeg\n//http://elicon.blog57.fc2.com/blog-entry-206.html\n\nqq.ExifRestorer = (function()\n{\n   \n\tvar ExifRestorer = {};\n\t \n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\n                         \"QRSTUVWXYZabcdef\" +\n                         \"ghijklmnopqrstuv\" +\n                         \"wxyz0123456789+/\" +\n                         \"=\";\n\n    ExifRestorer.encode64 = function(input)\n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0;\n\n        do {\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n               enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n               enc4 = 64;\n            }\n\n            output = output +\n               this.KEY_STR.charAt(enc1) +\n               this.KEY_STR.charAt(enc2) +\n               this.KEY_STR.charAt(enc3) +\n               this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n    };\n    \n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\n    {\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\n\n        if (!origFileBase64.match(expectedBase64Header))\n        {\n        \treturn resizedFileBase64;\n        }       \n        \n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n        var segments = this.slice2Segments(rawImage);\n                \n        var image = this.exifManipulation(resizedFileBase64, segments);\n        \n        return expectedBase64Header + this.encode64(image);\n        \n    };\n\n\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\n    {\n            var exifArray = this.getExifArray(segments),\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\n                aBuffer = new Uint8Array(newImageArray);\n\n            return aBuffer;\n    };\n\n\n    ExifRestorer.getExifArray = function(segments)\n    {\n            var seg;\n            for (var x = 0; x < segments.length; x++)\n            {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\n                {\n                    return seg;\n                }\n            }\n            return [];\n    };\n\n\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\n    {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\n                buf = this.decode64(imageData),\n                separatePoint = buf.indexOf(255,3),\n                mae = buf.slice(0, separatePoint),\n                ato = buf.slice(separatePoint),\n                array = mae;\n\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n           return array;\n    };\n\n\n    \n    ExifRestorer.slice2Segments = function(rawImageArray)\n    {\n        var head = 0,\n            segments = [];\n\n        while (1)\n        {\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\n            {\n                head += 2;\n            }\n            else\n            {\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n                    endPoint = head + length + 2,\n                    seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length){break;}\n        }\n\n        return segments;\n    };\n\n\n    \n    ExifRestorer.decode64 = function(input) \n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0,\n            buf = [];\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            buf.push(chr1);\n\n            if (enc3 != 64) {\n               buf.push(chr2);\n            }\n            if (enc4 != 64) {\n               buf.push(chr3);\n            }\n\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return buf;\n    };\n\n    \n    return ExifRestorer;\n})();\n","/* globals qq */\n/**\n * Keeps a running tally of total upload progress for a batch of files.\n *\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\n * @param getSize Function that returns the size of a file given its ID\n * @constructor\n */\nqq.TotalProgress = function(callback, getSize) {\n    \"use strict\";\n\n    var perFileProgress = {},\n        totalLoaded = 0,\n        totalSize = 0,\n\n        lastLoadedSent = -1,\n        lastTotalSent = -1,\n        callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        },\n\n        /**\n         * @param failed Array of file IDs that have failed\n         * @param retryable Array of file IDs that are retryable\n         * @returns true if none of the failed files are eligible for retry\n         */\n        noRetryableFiles = function(failed, retryable) {\n            var none = true;\n\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n\n            return none;\n        },\n\n        onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        },\n\n        onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        },\n\n        onNew = function(id) {\n            var size = getSize(id);\n\n            // We might not know the size yet, such as for blob proxies\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {loaded: 0, total: size};\n            }\n        },\n\n        /**\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\n         * be appropriate to re-calculate and disseminate this data.\n         *\n         * @param id ID of a file that has changed in some important way\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\n         */\n        updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            }\n            else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n\n            callbackProxy(totalLoaded, totalSize);\n        };\n\n    qq.extend(this, {\n        // Called when a batch of files has completed uploading.\n        onAllComplete: onAllComplete,\n\n        // Called when the status of a file has changed.\n        onStatusChange: function(id, oldStatus, newStatus) {\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                onCancel(id);\n            }\n            else if (newStatus === qq.status.SUBMITTING) {\n                onNew(id);\n            }\n        },\n\n        // Called whenever the upload progress of an individual file has changed.\n        onIndividualProgress: function(id, loaded, total) {\n            updateTotalProgress(id, loaded, total);\n            perFileProgress[id] = {loaded: loaded, total: total};\n        },\n\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\n        onNewSize: function(id) {\n            onNew(id);\n        },\n\n        reset: function() {\n            perFileProgress = {};\n            totalLoaded = 0;\n            totalSize = 0;\n        }\n    });\n};\n","/*globals qq*/\nqq.PasteSupport = function(o) {\n    \"use strict\";\n\n    var options, detachPasteHandler;\n\n    options = {\n        targetElement: null,\n        callbacks: {\n            log: function(message, level) {},\n            pasteReceived: function(blob) {}\n        }\n    };\n\n    function isImage(item) {\n        return item.type &&\n            item.type.indexOf(\"image/\") === 0;\n    }\n\n    function registerPasteHandler() {\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n            var clipboardData = event.clipboardData;\n\n            if (clipboardData) {\n                qq.each(clipboardData.items, function(idx, item) {\n                    if (isImage(item)) {\n                        var blob = item.getAsFile();\n                        options.callbacks.pasteReceived(blob);\n                    }\n                });\n            }\n        });\n    }\n\n    function unregisterPasteHandler() {\n        if (detachPasteHandler) {\n            detachPasteHandler();\n        }\n    }\n\n    qq.extend(options, o);\n    registerPasteHandler();\n\n    qq.extend(this, {\n        reset: function() {\n            unregisterPasteHandler();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Module that handles support for existing forms.\n *\n * @param options Options passed from the integrator-supplied options related to form support.\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\n * @param log Proxy for the logger\n * @constructor\n */\nqq.FormSupport = function(options, startUpload, log) {\n    \"use strict\";\n    var self  = this,\n        interceptSubmit = options.interceptSubmit,\n        formEl = options.element,\n        autoUpload = options.autoUpload;\n\n    // Available on the public API associated with this module.\n    qq.extend(this, {\n        // To be used by the caller to determine if the endpoint will be determined by some processing\n        // that occurs in this module, such as if the form has an action attribute.\n        // Ignore if `attachToForm === false`.\n        newEndpoint: null,\n\n        // To be used by the caller to determine if auto uploading should be allowed.\n        // Ignore if `attachToForm === false`.\n        newAutoUpload: autoUpload,\n\n        // true if a form was detected and is being tracked by this module\n        attachedToForm: false,\n\n        // Returns an object with names and values for all valid form elements associated with the attached form.\n        getFormInputsAsObject: function() {\n            /* jshint eqnull:true */\n            if (formEl == null) {\n                return null;\n            }\n\n            return self._form2Obj(formEl);\n        }\n    });\n\n    // If the form contains an action attribute, this should be the new upload endpoint.\n    function determineNewEndpoint(formEl) {\n        if (formEl.getAttribute(\"action\")) {\n            self.newEndpoint = formEl.getAttribute(\"action\");\n        }\n    }\n\n    // Return true only if the form is valid, or if we cannot make this determination.\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\n    function validateForm(formEl, nativeSubmit) {\n        if (formEl.checkValidity && !formEl.checkValidity()) {\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\n            nativeSubmit();\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\n    function maybeUploadOnSubmit(formEl) {\n        var nativeSubmit = formEl.submit;\n\n        // Intercept and squelch submit events.\n        qq(formEl).attach(\"submit\", function(event) {\n            event = event || window.event;\n\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n\n            validateForm(formEl, nativeSubmit) && startUpload();\n        });\n\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\n        // Intercept that too.\n        formEl.submit = function() {\n            validateForm(formEl, nativeSubmit) && startUpload();\n        };\n    }\n\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\n    // The rest of the code in this module depends on this being an HTMLElement.\n    function determineFormEl(formEl) {\n        if (formEl) {\n            if (qq.isString(formEl)) {\n                formEl = document.getElementById(formEl);\n            }\n\n            if (formEl) {\n                log(\"Attaching to form element.\");\n                determineNewEndpoint(formEl);\n                interceptSubmit && maybeUploadOnSubmit(formEl);\n            }\n        }\n\n        return formEl;\n    }\n\n    formEl = determineFormEl(formEl);\n    this.attachedToForm = !!formEl;\n};\n\nqq.extend(qq.FormSupport.prototype, {\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\n    // construct from a given form when the form is submitted.\n    _form2Obj: function(form) {\n        \"use strict\";\n        var obj = {},\n            notIrrelevantType = function(type) {\n                var irrelevantTypes = [\n                    \"button\",\n                    \"image\",\n                    \"reset\",\n                    \"submit\"\n                ];\n\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            },\n            radioOrCheckbox = function(type) {\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\n            },\n            ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            },\n            selectValue = function(select) {\n                var value = null;\n\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n\n                return value;\n            };\n\n        qq.each(form.elements, function(idx, el) {\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\n                notIrrelevantType(el.type) &&\n                !ignoreValue(el)) {\n\n                obj[el.name] = el.value;\n            }\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                var value = selectValue(el);\n\n                if (value !== null) {\n                    obj[el.name] = value;\n                }\n            }\n        });\n\n        return obj;\n    }\n});\n","/*globals qq*/\n/**\n * Upload handler used that assumes the current user agent does not have any support for the\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to\n * a generic server.\n *\n * @param options Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.FormUploadHandler = function(options, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getUuid = proxy.getUuid,\n        log = proxy.log;\n\n    /**\n     * Returns json object received by iframe from server.\n     */\n    function getIframeContentJson(id, iframe) {\n        /*jshint evil: true*/\n\n        var response, doc, innerHtml;\n\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n        try {\n            // iframe.contentWindow.document - for IE<7\n            doc = iframe.contentDocument || iframe.contentWindow.document;\n            innerHtml = doc.body.innerHTML;\n\n            log(\"converting iframe's innerHTML to JSON\");\n            log(\"innerHTML = \" + innerHtml);\n            //plain text response may be wrapped in <pre> tag\n            if (innerHtml && innerHtml.match(/^<pre/i)) {\n                innerHtml = doc.body.firstChild.firstChild.nodeValue;\n            }\n\n            response = handler._parseJsonResponse(innerHtml);\n        }\n        catch (error) {\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\n            response = {success: false};\n        }\n\n        return response;\n    }\n\n    /**\n     * Creates form, that will be submitted to iframe\n     */\n    function createForm(id, iframe) {\n        var params = options.paramsStore.get(id),\n            method = options.method.toLowerCase() === \"get\" ? \"GET\" : \"POST\",\n            endpoint = options.endpointStore.get(id),\n            name = getName(id);\n\n        params[options.uuidName] = getUuid(id);\n        params[options.filenameParam] = name;\n\n        return handler._initFormForUpload({\n            method: method,\n            endpoint: endpoint,\n            params: params,\n            paramsInBody: options.paramsInBody,\n            targetName: iframe.name\n        });\n    }\n\n    this.uploadFile = function(id) {\n        var input = handler.getInput(id),\n            iframe = handler._createIframe(id),\n            promise = new qq.Promise(),\n            form;\n\n        form = createForm(id, iframe);\n        form.appendChild(input);\n\n        handler._attachLoadEvent(iframe, function(responseFromMessage) {\n            log(\"iframe loaded\");\n\n            var response = responseFromMessage ? responseFromMessage : getIframeContentJson(id, iframe);\n\n            handler._detachLoadEvent(id);\n\n            //we can't remove an iframe if the iframe doesn't belong to the same domain\n            if (!options.cors.expected) {\n                qq(iframe).remove();\n            }\n\n            if (response.success) {\n                promise.success(response);\n            }\n            else {\n                promise.failure(response);\n            }\n        });\n\n        log(\"Sending upload request for \" + id);\n        form.submit();\n        qq(form).remove();\n\n        return promise;\n    };\n\n    qq.extend(this, new qq.FormUploadHandler({\n        options: {\n            isCors: options.cors.expected,\n            inputName: options.inputName\n        },\n\n        proxy: {\n            onCancel: options.onCancel,\n            getName: getName,\n            getUuid: getUuid,\n            log: log\n        }\n    }));\n};\n","/*globals qq*/\n/**\n * Upload handler used to upload to traditional endpoints.  It depends on File API support, and, therefore,\n * makes use of `XMLHttpRequest` level 2 to upload `File`s and `Blob`s to a generic server.\n *\n * @param spec Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.XhrUploadHandler = function(spec, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        multipart = spec.forceMultipart || spec.paramsInBody,\n\n        addChunkingSpecificParams = function(id, params, chunkData) {\n            var size = getSize(id),\n                name = getName(id);\n\n            params[spec.chunking.paramNames.partIndex] = chunkData.part;\n            params[spec.chunking.paramNames.partByteOffset] = chunkData.start;\n            params[spec.chunking.paramNames.chunkSize] = chunkData.size;\n            params[spec.chunking.paramNames.totalParts] = chunkData.count;\n            params[spec.totalFileSizeName] = size;\n\n            /**\n             * When a Blob is sent in a multipart request, the filename value in the content-disposition header is either \"blob\"\n             * or an empty string.  So, we will need to include the actual file name as a param in this case.\n             */\n            if (multipart) {\n                params[spec.filenameParam] = name;\n            }\n        },\n\n        allChunksDoneRequester = new qq.traditional.AllChunksDoneAjaxRequester({\n            cors: spec.cors,\n            endpoint: spec.chunking.success.endpoint,\n            log: log\n        }),\n\n        createReadyStateChangedHandler = function(id, xhr) {\n            var promise = new qq.Promise();\n\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === 4) {\n                    var result = onUploadOrChunkComplete(id, xhr);\n\n                    if (result.success) {\n                        promise.success(result.response, xhr);\n                    }\n                    else {\n                        promise.failure(result.response, xhr);\n                    }\n                }\n            };\n\n            return promise;\n        },\n\n        getChunksCompleteParams = function(id) {\n            var params = spec.paramsStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            params[spec.uuidName] = getUuid(id);\n            params[spec.filenameParam] = name;\n            params[spec.totalFileSizeName] = size;\n            params[spec.chunking.paramNames.totalParts] = handler._getTotalChunks(id);\n\n            return params;\n        },\n\n        isErrorUploadResponse = function(xhr, response) {\n            return qq.indexOf([200, 201, 202, 203, 204], xhr.status) < 0 ||\n                !response.success ||\n                response.reset;\n        },\n\n        onUploadOrChunkComplete = function(id, xhr) {\n            var response;\n\n            log(\"xhr - server response received for \" + id);\n            log(\"responseText = \" + xhr.responseText);\n\n            response = parseResponse(true, xhr);\n\n            return {\n                success: !isErrorUploadResponse(xhr, response),\n                response: response\n            };\n        },\n\n        // If this is an upload response, we require a JSON payload, otherwise, it is optional.\n        parseResponse = function(upload, xhr) {\n            var response = {};\n\n            try {\n                log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\n                response = qq.parseJson(xhr.responseText);\n            }\n            catch (error) {\n                upload && log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        },\n\n        sendChunksCompleteRequest = function(id) {\n            var promise = new qq.Promise();\n\n            allChunksDoneRequester.complete(\n                    id,\n                    handler._createXhr(id),\n                    getChunksCompleteParams(id),\n                    spec.customHeaders.get(id)\n                )\n                .then(function(xhr) {\n                    promise.success(parseResponse(false, xhr), xhr);\n                }, function(xhr) {\n                    promise.failure(parseResponse(false, xhr), xhr);\n                });\n\n            return promise;\n        },\n\n        setParamsAndGetEntityToSend = function(params, xhr, fileOrBlob, id) {\n            var formData = new FormData(),\n                method = spec.method,\n                endpoint = spec.endpointStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            params[spec.uuidName] = getUuid(id);\n            params[spec.filenameParam] = name;\n\n            if (multipart) {\n                params[spec.totalFileSizeName] = size;\n            }\n\n            //build query string\n            if (!spec.paramsInBody) {\n                if (!multipart) {\n                    params[spec.inputName] = name;\n                }\n                endpoint = qq.obj2url(params, endpoint);\n            }\n\n            xhr.open(method, endpoint, true);\n\n            if (spec.cors.expected && spec.cors.sendCredentials) {\n                xhr.withCredentials = true;\n            }\n\n            if (multipart) {\n                if (spec.paramsInBody) {\n                    qq.obj2FormData(params, formData);\n                }\n\n                formData.append(spec.inputName, fileOrBlob);\n                return formData;\n            }\n\n            return fileOrBlob;\n        },\n\n        setUploadHeaders = function(id, xhr) {\n            var extraHeaders = spec.customHeaders.get(id),\n                fileOrBlob = handler.getFile(id);\n\n            xhr.setRequestHeader(\"Accept\", \"application/json\");\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n\n            if (!multipart) {\n                xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\n                //NOTE: return mime type in xhr works on chrome 16.0.9 firefox 11.0a2\n                xhr.setRequestHeader(\"X-Mime-Type\", fileOrBlob.type);\n            }\n\n            qq.each(extraHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        };\n\n    qq.extend(this, {\n        uploadChunk: function(id, chunkIdx, resuming) {\n            var chunkData = handler._getChunkData(id, chunkIdx),\n                xhr = handler._createXhr(id, chunkIdx),\n                size = getSize(id),\n                promise, toSend, params;\n\n            promise = createReadyStateChangedHandler(id, xhr);\n            handler._registerProgressHandler(id, chunkIdx, chunkData.size);\n            params = spec.paramsStore.get(id);\n            addChunkingSpecificParams(id, params, chunkData);\n\n            if (resuming) {\n                params[spec.resume.paramNames.resuming] = true;\n            }\n\n            toSend = setParamsAndGetEntityToSend(params, xhr, chunkData.blob, id);\n            setUploadHeaders(id, xhr);\n            xhr.send(toSend);\n\n            return promise;\n        },\n\n        uploadFile: function(id) {\n            var fileOrBlob = handler.getFile(id),\n                promise, xhr, params, toSend;\n\n            xhr = handler._createXhr(id);\n            handler._registerProgressHandler(id);\n            promise = createReadyStateChangedHandler(id, xhr);\n            params = spec.paramsStore.get(id);\n            toSend = setParamsAndGetEntityToSend(params, xhr, fileOrBlob, id);\n            setUploadHeaders(id, xhr);\n            xhr.send(toSend);\n\n            return promise;\n        }\n    });\n\n    qq.extend(this, new qq.XhrUploadHandler({\n        options: qq.extend({namespace: \"traditional\"}, spec),\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\n    }));\n\n    qq.override(this, function(super_) {\n        return {\n            finalizeChunks: function(id) {\n                if (spec.chunking.success.endpoint) {\n                    return sendChunksCompleteRequest(id);\n                }\n                else {\n                    return super_.finalizeChunks(id, qq.bind(parseResponse, this, true));\n                }\n            }\n        };\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send a POST to a traditional endpoint once all chunks for a specific file have uploaded\n * successfully.\n *\n * @param o Options from the caller - will override the defaults.\n * @constructor\n */\nqq.traditional.AllChunksDoneAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"POST\",\n        options = {\n            cors: {\n                allowXdr: false,\n                expected: false,\n                sendCredentials: false\n            },\n            endpoint: null,\n            log: function(str, level) {}\n        },\n        promises = {},\n        endpointHandler = {\n            get: function(id) {\n                return options.endpoint;\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [method],\n        method: method,\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: options.cors,\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete promises[id];\n\n            if (isError) {\n                promise.failure(xhr);\n            }\n            else {\n                promise.success(xhr);\n            }\n        }\n    }));\n\n    qq.extend(this, {\n        complete: function(id, xhr, params, headers) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting All Chunks Done request for \" + id);\n\n            promises[id] = promise;\n\n            requester.initTransport(id)\n                .withParams(params)\n                .withHeaders(headers)\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq, document, CustomEvent*/\nqq.DragAndDrop = function(o) {\n    \"use strict\";\n\n    var options,\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\n        uploadDropZones = [],\n        droppedFiles = [],\n        disposeSupport = new qq.DisposeSupport();\n\n    options = {\n        dropZoneElements: [],\n        allowMultipleItems: true,\n        classes: {\n            dropActive: null\n        },\n        callbacks: new qq.DragAndDrop.callbacks()\n    };\n\n    qq.extend(options, o, true);\n\n    function uploadDroppedFiles(files, uploadDropZone) {\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\n        var filesAsArray = Array.prototype.slice.call(files);\n\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\n        uploadDropZone.dropDisabled(false);\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\n    }\n\n    function traverseFileTree(entry) {\n        var parseEntryPromise = new qq.Promise();\n\n        if (entry.isFile) {\n            entry.file(function(file) {\n                var name = entry.name,\n                    fullPath = entry.fullPath,\n                    indexOfNameInFullPath = fullPath.indexOf(name);\n\n                // remove file name from full path string\n                fullPath = fullPath.substr(0, indexOfNameInFullPath);\n\n                // remove leading slash in full path string\n                if (fullPath.charAt(0) === \"/\") {\n                    fullPath = fullPath.substr(1);\n                }\n\n                file.qqPath = fullPath;\n                droppedFiles.push(file);\n                parseEntryPromise.success();\n            },\n            function(fileError) {\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                parseEntryPromise.failure();\n            });\n        }\n        else if (entry.isDirectory) {\n            getFilesInDirectory(entry).then(\n                function allEntriesRead(entries) {\n                    var entriesLeft = entries.length;\n\n                    qq.each(entries, function(idx, entry) {\n                        traverseFileTree(entry).done(function() {\n                            entriesLeft -= 1;\n\n                            if (entriesLeft === 0) {\n                                parseEntryPromise.success();\n                            }\n                        });\n                    });\n\n                    if (!entries.length) {\n                        parseEntryPromise.success();\n                    }\n                },\n\n                function readFailure(fileError) {\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                    parseEntryPromise.failure();\n                }\n            );\n        }\n\n        return parseEntryPromise;\n    }\n\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\n        var promise = existingPromise || new qq.Promise(),\n            dirReader = reader || entry.createReader();\n\n        dirReader.readEntries(\n            function readSuccess(entries) {\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\n\n                if (entries.length) {\n                    setTimeout(function() { // prevent stack overflow, however unlikely\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\n                    }, 0);\n                }\n                else {\n                    promise.success(newEntries);\n                }\n            },\n\n            promise.failure\n        );\n\n        return promise;\n    }\n\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\n        var pendingFolderPromises = [],\n            handleDataTransferPromise = new qq.Promise();\n\n        options.callbacks.processingDroppedFiles();\n        uploadDropZone.dropDisabled(true);\n\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\n            options.callbacks.processingDroppedFilesComplete([]);\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\n            uploadDropZone.dropDisabled(false);\n            handleDataTransferPromise.failure();\n        }\n        else {\n            droppedFiles = [];\n\n            if (qq.isFolderDropSupported(dataTransfer)) {\n                qq.each(dataTransfer.items, function(idx, item) {\n                    var entry = item.webkitGetAsEntry();\n\n                    if (entry) {\n                        //due to a bug in Chrome's File System API impl - #149735\n                        if (entry.isFile) {\n                            droppedFiles.push(item.getAsFile());\n                        }\n\n                        else {\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\n                                pendingFolderPromises.pop();\n                                if (pendingFolderPromises.length === 0) {\n                                    handleDataTransferPromise.success();\n                                }\n                            }));\n                        }\n                    }\n                });\n            }\n            else {\n                droppedFiles = dataTransfer.files;\n            }\n\n            if (pendingFolderPromises.length === 0) {\n                handleDataTransferPromise.success();\n            }\n        }\n\n        return handleDataTransferPromise;\n    }\n\n    function setupDropzone(dropArea) {\n        var dropZone = new qq.UploadDropZone({\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\n            element: dropArea,\n            onEnter: function(e) {\n                qq(dropArea).addClass(options.classes.dropActive);\n                e.stopPropagation();\n            },\n            onLeaveNotDescendants: function(e) {\n                qq(dropArea).removeClass(options.classes.dropActive);\n            },\n            onDrop: function(e) {\n                handleDataTransfer(e.dataTransfer, dropZone).then(\n                    function() {\n                        uploadDroppedFiles(droppedFiles, dropZone);\n                    },\n                    function() {\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\n                    }\n                );\n            }\n        });\n\n        disposeSupport.addDisposer(function() {\n            dropZone.dispose();\n        });\n\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\n\n        uploadDropZones.push(dropZone);\n\n        return dropZone;\n    }\n\n    function isFileDrag(dragEvent) {\n        var fileDrag;\n\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\n            if (val === \"Files\") {\n                fileDrag = true;\n                return false;\n            }\n        });\n\n        return fileDrag;\n    }\n\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\n    //\n    // Exceptions:\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\n    //                   overlays the browser window.\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\n    //          event's X & Y properties.\n    function leavingDocumentOut(e) {\n        if (qq.firefox()) {\n            return !e.relatedTarget;\n        }\n\n        if (qq.safari()) {\n            return e.x < 0 || e.y < 0;\n        }\n\n        return e.x === 0 && e.y === 0;\n    }\n\n    function setupDragDrop() {\n        var dropZones = options.dropZoneElements,\n\n            maybeHideDropZones = function() {\n                setTimeout(function() {\n                    qq.each(dropZones, function(idx, dropZone) {\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\n                        qq(dropZone).removeClass(options.classes.dropActive);\n                    });\n                }, 10);\n            };\n\n        qq.each(dropZones, function(idx, dropZone) {\n            var uploadDropZone = setupDropzone(dropZone);\n\n            // IE <= 9 does not support the File API used for drag+drop uploads\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\n                disposeSupport.attach(document, \"dragenter\", function(e) {\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\n                        qq.each(dropZones, function(idx, dropZone) {\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\n                            if (dropZone instanceof HTMLElement &&\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\n\n                                qq(dropZone).css({display: \"block\"});\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        disposeSupport.attach(document, \"dragleave\", function(e) {\n            if (leavingDocumentOut(e)) {\n                maybeHideDropZones();\n            }\n        });\n\n        // Just in case we were not able to detect when a dragged file has left the document,\n        // hide all relevant drop zones the next time the mouse enters the document.\n        // Note that mouse events such as this one are not fired during drag operations.\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, \"drop\", function(e) {\n            e.preventDefault();\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\n    }\n\n    setupDragDrop();\n\n    qq.extend(this, {\n        setupExtraDropzone: function(element) {\n            options.dropZoneElements.push(element);\n            setupDropzone(element);\n        },\n\n        removeDropzone: function(element) {\n            var i,\n                dzs = options.dropZoneElements;\n\n            for (i in dzs) {\n                if (dzs[i] === element) {\n                    return dzs.splice(i, 1);\n                }\n            }\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n            qq.each(uploadDropZones, function(idx, dropZone) {\n                dropZone.dispose();\n            });\n        }\n    });\n};\n\nqq.DragAndDrop.callbacks = function() {\n    \"use strict\";\n\n    return {\n        processingDroppedFiles: function() {},\n        processingDroppedFilesComplete: function(files, targetEl) {},\n        dropError: function(code, errorSpecifics) {\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\n        },\n        dropLog: function(message, level) {\n            qq.log(message, level);\n        }\n    };\n};\n\nqq.UploadDropZone = function(o) {\n    \"use strict\";\n\n    var disposeSupport = new qq.DisposeSupport(),\n        options, element, preventDrop, dropOutsideDisabled;\n\n    options = {\n        element: null,\n        onEnter: function(e) {},\n        onLeave: function(e) {},\n        // is not fired when leaving element by hovering descendants\n        onLeaveNotDescendants: function(e) {},\n        onDrop: function(e) {}\n    };\n\n    qq.extend(options, o);\n    element = options.element;\n\n    function dragoverShouldBeCanceled() {\n        return qq.safari() || (qq.firefox() && qq.windows());\n    }\n\n    function disableDropOutside(e) {\n        // run only once for all instances\n        if (!dropOutsideDisabled) {\n\n            // for these cases we need to catch onDrop to reset dropArea\n            if (dragoverShouldBeCanceled) {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    e.preventDefault();\n                });\n            } else {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    if (e.dataTransfer) {\n                        e.dataTransfer.dropEffect = \"none\";\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            dropOutsideDisabled = true;\n        }\n    }\n\n    function isValidFileDrag(e) {\n        // e.dataTransfer currently causing IE errors\n        // IE9 does NOT support file API, so drag-and-drop is not possible\n        if (!qq.supportedFeatures.fileDrop) {\n            return false;\n        }\n\n        var effectTest, dt = e.dataTransfer,\n        // do not check dt.types.contains in webkit, because it crashes safari 4\n        isSafari = qq.safari();\n\n        // dt.effectAllowed is none in Safari 5\n        // dt.types.contains check is for firefox\n\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n        // the filesystem\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\n        return dt && effectTest && (dt.files || (!isSafari && dt.types.contains && dt.types.contains(\"Files\")));\n    }\n\n    function isOrSetDropDisabled(isDisabled) {\n        if (isDisabled !== undefined) {\n            preventDrop = isDisabled;\n        }\n        return preventDrop;\n    }\n\n    function triggerHidezonesEvent() {\n        var hideZonesEvent;\n\n        function triggerUsingOldApi() {\n            hideZonesEvent = document.createEvent(\"Event\");\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\n        }\n\n        if (window.CustomEvent) {\n            try {\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\n            }\n            catch (err) {\n                triggerUsingOldApi();\n            }\n        }\n        else {\n            triggerUsingOldApi();\n        }\n\n        document.dispatchEvent(hideZonesEvent);\n    }\n\n    function attachEvents() {\n        disposeSupport.attach(element, \"dragover\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n            // the filesystem\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\n            if (effect === \"move\" || effect === \"linkMove\") {\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\n            } else {\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        });\n\n        disposeSupport.attach(element, \"dragenter\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n                options.onEnter(e);\n            }\n        });\n\n        disposeSupport.attach(element, \"dragleave\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            options.onLeave(e);\n\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\n            // do not fire when moving a mouse over a descendant\n            if (qq(this).contains(relatedTarget)) {\n                return;\n            }\n\n            options.onLeaveNotDescendants(e);\n        });\n\n        disposeSupport.attach(element, \"drop\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                options.onDrop(e);\n\n                triggerHidezonesEvent();\n            }\n        });\n    }\n\n    disableDropOutside();\n    attachEvents();\n\n    qq.extend(this, {\n        dropDisabled: function(isDisabled) {\n            return isOrSetDropDisabled(isDisabled);\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n        },\n\n        getElement: function() {\n            return element;\n        }\n    });\n};\n","/*globals qq */\n/**\n * Defines the public API for FineUploader mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.uiPublicApi = {\n        addInitialFiles: function(cannedFileList) {\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\n            this._templating.addCacheToDom();\n        },\n\n        clearStoredFiles: function() {\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\n            this._templating.clearFiles();\n        },\n\n        addExtraDropzone: function(element) {\n            this._dnd && this._dnd.setupExtraDropzone(element);\n        },\n\n        removeExtraDropzone: function(element) {\n            if (this._dnd) {\n                return this._dnd.removeDropzone(element);\n            }\n        },\n\n        getItemByFileId: function(id) {\n            if (!this._templating.isHiddenForever(id)) {\n                return this._templating.getFileContainer(id);\n            }\n        },\n\n        reset: function() {\n            this._parent.prototype.reset.apply(this, arguments);\n            this._templating.reset();\n\n            if (!this._options.button && this._templating.getButton()) {\n                this._defaultButtonId = this._createUploadButton({\n                    element: this._templating.getButton(),\n                    title: this._options.text.fileInputTitle\n                }).getButtonId();\n            }\n\n            if (this._dnd) {\n                this._dnd.dispose();\n                this._dnd = this._setupDragAndDrop();\n            }\n\n            this._totalFilesInBatch = 0;\n            this._filesInBatchAddedToUi = 0;\n\n            this._setupClickAndEditEventHandlers();\n        },\n\n        setName: function(id, newName) {\n            var formattedFilename = this._options.formatFileName(newName);\n\n            this._parent.prototype.setName.apply(this, arguments);\n            this._templating.updateFilename(id, formattedFilename);\n        },\n\n        pauseUpload: function(id) {\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\n\n            paused && this._templating.uploadPaused(id);\n            return paused;\n        },\n\n        continueUpload: function(id) {\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\n\n            continued && this._templating.uploadContinued(id);\n            return continued;\n        },\n\n        getId: function(fileContainerOrChildEl) {\n            return this._templating.getFileId(fileContainerOrChildEl);\n        },\n\n        getDropTarget: function(fileId) {\n            var file = this.getFile(fileId);\n\n            return file.qqDropTarget;\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploader mode.\n     */\n    qq.uiPrivateApi = {\n        _getButton: function(buttonId) {\n            var button = this._parent.prototype._getButton.apply(this, arguments);\n\n            if (!button) {\n                if (buttonId === this._defaultButtonId) {\n                    button = this._templating.getButton();\n                }\n            }\n\n            return button;\n        },\n\n        _removeFileItem: function(fileId) {\n            this._templating.removeFile(fileId);\n        },\n\n        _setupClickAndEditEventHandlers: function() {\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\n\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\n            this._focusinEventSupported = !qq.firefox();\n\n            if (this._isEditFilenameEnabled())\n            {\n                this._filenameClickHandler = this._bindFilenameClickEvent();\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\n            }\n        },\n\n        _setupDragAndDrop: function() {\n            var self = this,\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\n                templating = this._templating,\n                defaultDropZone = templating.getDropZone();\n\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\n\n            return new qq.DragAndDrop({\n                dropZoneElements: dropZoneElements,\n                allowMultipleItems: this._options.multiple,\n                classes: {\n                    dropActive: this._options.classes.dropActive\n                },\n                callbacks: {\n                    processingDroppedFiles: function() {\n                        templating.showDropProcessing();\n                    },\n                    processingDroppedFilesComplete: function(files, targetEl) {\n                        templating.hideDropProcessing();\n\n                        qq.each(files, function(idx, file) {\n                            file.qqDropTarget = targetEl;\n                        });\n\n                        if (files.length) {\n                            self.addFiles(files, null, null);\n                        }\n                    },\n                    dropError: function(code, errorData) {\n                        self._itemError(code, errorData);\n                    },\n                    dropLog: function(message, level) {\n                        self.log(message, level);\n                    }\n                }\n            });\n        },\n\n        _bindFileButtonsClickEvent: function() {\n            var self = this;\n\n            return new qq.FileButtonsClickHandler({\n                templating: this._templating,\n\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n\n                onDeleteFile: function(fileId) {\n                    self.deleteFile(fileId);\n                },\n\n                onCancel: function(fileId) {\n                    self.cancel(fileId);\n                },\n\n                onRetry: function(fileId) {\n                    self.retry(fileId);\n                },\n\n                onPause: function(fileId) {\n                    self.pauseUpload(fileId);\n                },\n\n                onContinue: function(fileId) {\n                    self.continueUpload(fileId);\n                },\n\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                }\n            });\n        },\n\n        _isEditFilenameEnabled: function() {\n            /*jshint -W014 */\n            return this._templating.isEditFilenamePossible()\n                && !this._options.autoUpload\n                && qq.FilenameClickHandler\n                && qq.FilenameInputFocusHandler\n                && qq.FilenameInputFocusHandler;\n        },\n\n        _filenameEditHandler: function() {\n            var self = this,\n                templating = this._templating;\n\n            return {\n                templating: templating,\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n                onGetUploadStatus: function(fileId) {\n                    return self.getUploads({id: fileId}).status;\n                },\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                },\n                onSetName: function(id, newName) {\n                    self.setName(id, newName);\n                },\n                onEditingStatusChange: function(id, isEditing) {\n                    var qqInput = qq(templating.getEditInput(id)),\n                        qqFileContainer = qq(templating.getFileContainer(id));\n\n                    if (isEditing) {\n                        qqInput.addClass(\"qq-editing\");\n                        templating.hideFilename(id);\n                        templating.hideEditIcon(id);\n                    }\n                    else {\n                        qqInput.removeClass(\"qq-editing\");\n                        templating.showFilename(id);\n                        templating.showEditIcon(id);\n                    }\n\n                    // Force IE8 and older to repaint\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\n                }\n            };\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\n\n            if (this._isEditFilenameEnabled()) {\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\n                    this._templating.markFilenameEditable(id);\n                    this._templating.hideEditIcon(id);\n                }\n            }\n\n            if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {\n                this._templating.hideRetry(id);\n                this._templating.setStatusText(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\n            }\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\n                this._templating.hidePause(id);\n            }\n        },\n\n        _bindFilenameInputFocusInEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusInHandler(spec);\n        },\n\n        _bindFilenameInputFocusEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusHandler(spec);\n        },\n\n        _bindFilenameClickEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameClickHandler(spec);\n        },\n\n        _storeForLater: function(id) {\n            this._parent.prototype._storeForLater.apply(this, arguments);\n            this._templating.hideSpinner(id);\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._parent.prototype._onAllComplete.apply(this, arguments);\n            this._templating.resetTotalProgress();\n        },\n\n        _onSubmit: function(id, name) {\n            var file = this.getFile(id);\n\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\n                this._paramsStore.addReadOnly(id, {\n                    qqpath: file.qqPath\n                });\n            }\n\n            this._parent.prototype._onSubmit.apply(this, arguments);\n            this._addToList(id, name);\n        },\n\n        // The file item has been added to the DOM.\n        _onSubmitted: function(id) {\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\n            if (this._isEditFilenameEnabled()) {\n                this._templating.markFilenameEditable(id);\n                this._templating.showEditIcon(id);\n\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\n                if (!this._focusinEventSupported) {\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\n                }\n            }\n        },\n\n        // Update the progress bar & percentage as the file is uploaded\n        _onProgress: function(id, name, loaded, total) {\n            this._parent.prototype._onProgress.apply(this, arguments);\n\n            this._templating.updateProgress(id, loaded, total);\n\n            if (total === 0 || Math.round(loaded / total * 100) === 100) {\n                this._templating.hideCancel(id);\n                this._templating.hidePause(id);\n                this._templating.hideProgress(id);\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\n\n                // If ~last byte was sent, display total file size\n                this._displayFileSize(id);\n            }\n            else {\n                // If still uploading, display percentage - total size is actually the total request(s) size\n                this._displayFileSize(id, loaded, total);\n            }\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\n            this._templating.updateTotalProgress(loaded, total);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\n                templating = this._templating,\n                fileContainer = templating.getFileContainer(id),\n                self = this;\n\n            function completeUpload(result) {\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\n                // If so, don't perform any UI-related tasks related to this file.\n                if (!fileContainer) {\n                    return;\n                }\n\n                templating.setStatusText(id);\n\n                qq(fileContainer).removeClass(self._classes.retrying);\n                templating.hideProgress(id);\n\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\n                    templating.hideCancel(id);\n                }\n                templating.hideSpinner(id);\n\n                if (result.success) {\n                    self._markFileAsSuccessful(id);\n                }\n                else {\n                    qq(fileContainer).addClass(self._classes.fail);\n                    templating.showCancel(id);\n\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\n                        qq(fileContainer).addClass(self._classes.retryable);\n                        templating.showRetry(id);\n                    }\n                    self._controlFailureTextDisplay(id, result);\n                }\n            }\n\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\n            if (parentRetVal instanceof qq.Promise) {\n                parentRetVal.done(function(newResult) {\n                    completeUpload(newResult);\n                });\n\n            }\n            else {\n                completeUpload(result);\n            }\n\n            return parentRetVal;\n        },\n\n        _markFileAsSuccessful: function(id) {\n            var templating = this._templating;\n\n            if (this._isDeletePossible()) {\n                templating.showDeleteButton(id);\n            }\n\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\n\n            this._maybeUpdateThumbnail(id);\n        },\n\n        _onUploadPrep: function(id) {\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\n            this._templating.showSpinner(id);\n        },\n\n        _onUpload: function(id, name) {\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\n\n            this._templating.showSpinner(id);\n\n            return parentRetVal;\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\n\n            // Only display the pause button if we have finished uploading at least one chunk\n            // & this file can be resumed\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\n                this._templating.allowPause(id);\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._parent.prototype._onCancel.apply(this, arguments);\n            this._removeFileItem(id);\n\n            if (this._getNotFinished() === 0) {\n                this._templating.resetTotalProgress();\n            }\n        },\n\n        _onBeforeAutoRetry: function(id) {\n            var retryNumForDisplay, maxAuto, retryNote;\n\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\n\n            this._showCancelLink(id);\n\n            if (this._options.retry.showAutoRetryNote) {\n                retryNumForDisplay = this._autoRetries[id];\n                maxAuto = this._options.retry.maxAutoAttempts;\n\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\n\n                this._templating.setStatusText(id, retryNote);\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\n            }\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\n                this._templating.resetProgress(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\n                this._templating.setStatusText(id);\n                this._templating.showSpinner(id);\n                this._showCancelLink(id);\n                return true;\n            }\n            else {\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\n                this._templating.showRetry(id);\n                return false;\n            }\n        },\n\n        _onSubmitDelete: function(id) {\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\n\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\n        },\n\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\n            if (this._options.deleteFile.forceConfirm) {\n                this._showDeleteConfirm.apply(this, arguments);\n            }\n            else {\n                this._sendDeleteRequest.apply(this, arguments);\n            }\n        },\n\n        _onDeleteComplete: function(id, xhr, isError) {\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\n\n            this._templating.hideSpinner(id);\n\n            if (isError) {\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\n                this._templating.showDeleteButton(id);\n            }\n            else {\n                this._removeFileItem(id);\n            }\n        },\n\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\n            this._templating.hideDeleteButton(id);\n            this._templating.showSpinner(id);\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\n            this._deleteHandler.sendDelete.apply(this, arguments);\n        },\n\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\n            /*jshint -W004 */\n            var fileName = this.getName(id),\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\n                uuid = this.getUuid(id),\n                deleteRequestArgs = arguments,\n                self = this,\n                retVal;\n\n            retVal = this._options.showConfirm(confirmMessage);\n\n            if (qq.isGenericPromise(retVal)) {\n                retVal.then(function() {\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\n                });\n            }\n            else if (retVal !== false) {\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\n            }\n        },\n\n        _addToList: function(id, name, canned) {\n            var prependData,\n                prependIndex = 0,\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\n                record;\n\n            if (this._options.display.prependFiles) {\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\n                    prependIndex = this._filesInBatchAddedToUi - 1;\n                }\n\n                prependData = {\n                    index: prependIndex\n                };\n            }\n\n            if (!canned) {\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\n                    this._templating.disableCancel();\n                }\n\n                // Cancel all existing (previous) files and clear the list if this file is not part of\n                // a scaled file group that has already been accepted, or if this file is not part of\n                // a scaled file group at all.\n                if (!this._options.multiple) {\n                    record = this.getUploads({id: id});\n\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\n\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\n                        this._handler.cancelAll();\n                        this._clearList();\n                        this._handledProxyGroup = null;\n                    }\n                }\n            }\n\n            if (canned) {\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\n            }\n            else {\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\n            }\n\n            this._filesInBatchAddedToUi += 1;\n\n            if (canned ||\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\n\n                this._displayFileSize(id);\n            }\n        },\n\n        _clearList: function() {\n            this._templating.clearFiles();\n            this.clearStoredFiles();\n        },\n\n        _displayFileSize: function(id, loadedSize, totalSize) {\n            var size = this.getSize(id),\n                sizeForDisplay = this._formatSize(size);\n\n            if (size >= 0) {\n                if (loadedSize !== undefined && totalSize !== undefined) {\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\n                }\n\n                this._templating.updateSize(id, sizeForDisplay);\n            }\n        },\n\n        _formatProgress: function(uploadedSize, totalSize) {\n            var message = this._options.text.formatProgress;\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\n            r(\"{total_size}\", this._formatSize(totalSize));\n            return message;\n        },\n\n        _controlFailureTextDisplay: function(id, response) {\n            var mode, responseProperty, failureReason;\n\n            mode = this._options.failedUploadTextDisplay.mode;\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\n\n            if (mode === \"custom\") {\n                failureReason = response[responseProperty];\n                if (!failureReason) {\n                    failureReason = this._options.text.failUpload;\n                }\n\n                this._templating.setStatusText(id, failureReason);\n\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\n                    this._showTooltip(id, failureReason);\n                }\n            }\n            else if (mode === \"default\") {\n                this._templating.setStatusText(id, this._options.text.failUpload);\n            }\n            else if (mode !== \"none\") {\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\n            }\n        },\n\n        _showTooltip: function(id, text) {\n            this._templating.getFileContainer(id).title = text;\n        },\n\n        _showCancelLink: function(id) {\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\n                this._templating.showCancel(id);\n            }\n        },\n\n        _itemError: function(code, name, item) {\n            var message = this._parent.prototype._itemError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _batchError: function(message) {\n            this._parent.prototype._batchError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _setupPastePrompt: function() {\n            var self = this;\n\n            this._options.callbacks.onPasteReceived = function() {\n                var message = self._options.paste.namePromptMessage,\n                    defaultVal = self._options.paste.defaultName;\n\n                return self._options.showPrompt(message, defaultVal);\n            };\n        },\n\n        _fileOrBlobRejected: function(id, name) {\n            this._totalFilesInBatch -= 1;\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            this._totalFilesInBatch = items.length;\n            this._filesInBatchAddedToUi = 0;\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\n        },\n\n        _maybeUpdateThumbnail: function(fileId) {\n            var thumbnailUrl = this._thumbnailUrls[fileId],\n                fileStatus = this.getUploads({id: fileId}).status;\n\n            if (fileStatus !== qq.status.DELETED &&\n                (thumbnailUrl ||\n                this._options.thumbnails.placeholders.waitUntilResponse ||\n                !qq.supportedFeatures.imagePreviews)) {\n\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\n                // if called with a null thumbnailUrl.\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\n            }\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\n\n            this._addToList(id, this.getName(id), true);\n            this._templating.hideSpinner(id);\n            this._templating.hideCancel(id);\n            this._markFileAsSuccessful(id);\n\n            return id;\n        },\n\n        _setSize: function(id, newSize) {\n            this._parent.prototype._setSize.apply(this, arguments);\n\n            this._templating.updateSize(id, this._formatSize(newSize));\n        },\n\n        _sessionRequestComplete: function() {\n            this._templating.addCacheToDom();\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\n */\nqq.FineUploader = function(o, namespace) {\n    \"use strict\";\n\n    var self = this;\n\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\n    // if the (internal) caller defines a different parent.  The parent is also used by\n    // the private and public API functions that need to delegate to a parent function.\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\n    this._parent.apply(this, arguments);\n\n    // Options provided by FineUploader mode\n    qq.extend(this._options, {\n        element: null,\n\n        button: null,\n\n        listElement: null,\n\n        dragAndDrop: {\n            extraDropzones: [],\n            reportDirectoryPaths: false\n        },\n\n        text: {\n            formatProgress: \"{percent}% of {total_size}\",\n            failUpload: \"Upload failed\",\n            waitingForResponse: \"Processing...\",\n            paused: \"Paused\"\n        },\n\n        template: \"qq-template\",\n\n        classes: {\n            retrying: \"qq-upload-retrying\",\n            retryable: \"qq-upload-retryable\",\n            success: \"qq-upload-success\",\n            fail: \"qq-upload-fail\",\n            editable: \"qq-editable\",\n            hide: \"qq-hide\",\n            dropActive: \"qq-upload-drop-area-active\"\n        },\n\n        failedUploadTextDisplay: {\n            mode: \"default\", //default, custom, or none\n            responseProperty: \"error\",\n            enableTooltip: true\n        },\n\n        messages: {\n            tooManyFilesError: \"You may only drop one file\",\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\n        },\n\n        retry: {\n            showAutoRetryNote: true,\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\n        },\n\n        deleteFile: {\n            forceConfirm: false,\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\n            deletingStatusText: \"Deleting...\",\n            deletingFailedText: \"Delete failed\"\n\n        },\n\n        display: {\n            fileSizeOnSubmit: false,\n            prependFiles: false\n        },\n\n        paste: {\n            promptForName: false,\n            namePromptMessage: \"Please name this image\"\n        },\n\n        thumbnails: {\n            customResizer: null,\n            maxCount: 0,\n            placeholders: {\n                waitUntilResponse: false,\n                notAvailablePath: null,\n                waitingPath: null\n            },\n            timeBetweenThumbs: 750\n        },\n\n        scaling: {\n            hideScaled: false\n        },\n\n        showMessage: function(message) {\n            if (self._templating.hasDialog(\"alert\")) {\n                return self._templating.showDialog(\"alert\", message);\n            }\n            else {\n                setTimeout(function() {\n                    window.alert(message);\n                }, 0);\n            }\n        },\n\n        showConfirm: function(message) {\n            if (self._templating.hasDialog(\"confirm\")) {\n                return self._templating.showDialog(\"confirm\", message);\n            }\n            else {\n                return window.confirm(message);\n            }\n        },\n\n        showPrompt: function(message, defaultValue) {\n            if (self._templating.hasDialog(\"prompt\")) {\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\n            }\n            else {\n                return window.prompt(message, defaultValue);\n            }\n        }\n    }, true);\n\n    // Replace any default options with user defined ones\n    qq.extend(this._options, o, true);\n\n    this._templating = new qq.Templating({\n        log: qq.bind(this.log, this),\n        templateIdOrEl: this._options.template,\n        containerEl: this._options.element,\n        fileContainerEl: this._options.listElement,\n        button: this._options.button,\n        imageGenerator: this._imageGenerator,\n        classes: {\n            hide: this._options.classes.hide,\n            editable: this._options.classes.editable\n        },\n        limits: {\n            maxThumbs: this._options.thumbnails.maxCount,\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\n        },\n        placeholders: {\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\n        },\n        text: this._options.text\n    });\n\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\n    }\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\n    }\n    else {\n        this._wrapCallbacks();\n\n        this._templating.render();\n\n        this._classes = this._options.classes;\n\n        if (!this._options.button && this._templating.getButton()) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._templating.getButton(),\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._setupClickAndEditEventHandlers();\n\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\n            this._dnd = this._setupDragAndDrop();\n        }\n\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\n            if (qq.PasteSupport) {\n                this._setupPastePrompt();\n            }\n            else {\n                this.log(\"Paste support module not found.\", \"error\");\n            }\n        }\n\n        this._totalFilesInBatch = 0;\n        this._filesInBatchAddedToUi = 0;\n    }\n};\n\n// Inherit the base public & private API methods\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\n\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\n","/* globals qq */\n/* jshint -W065 */\n/**\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\n * a limited amount of control over the template elements after they are added to the DOM.\n * Wherever possible, this module asserts total control over template elements present in the DOM.\n *\n * @param spec Specification object used to control various templating behaviors\n * @constructor\n */\nqq.Templating = function(spec) {\n    \"use strict\";\n\n    var FILE_ID_ATTR = \"qq-file-id\",\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\n        fileBatch = {\n            content: document.createDocumentFragment(),\n            map: {}\n        },\n        isCancelDisabled = false,\n        generatedThumbnails = 0,\n        thumbnailQueueMonitorRunning = false,\n        thumbGenerationQueue = [],\n        thumbnailMaxSize = -1,\n        options = {\n            log: null,\n            limits: {\n                maxThumbs: 0,\n                timeBetweenThumbs: 750\n            },\n            templateIdOrEl: \"qq-template\",\n            containerEl: null,\n            fileContainerEl: null,\n            button: null,\n            imageGenerator: null,\n            classes: {\n                hide: \"qq-hide\",\n                editable: \"qq-editable\"\n            },\n            placeholders: {\n                waitUntilUpdate: false,\n                thumbnailNotAvailable: null,\n                waitingForThumbnail: null\n            },\n            text: {\n                paused: \"Paused\"\n            }\n        },\n        selectorClasses = {\n            button: \"qq-upload-button-selector\",\n            alertDialog: \"qq-alert-dialog-selector\",\n            dialogCancelButton: \"qq-cancel-button-selector\",\n            confirmDialog: \"qq-confirm-dialog-selector\",\n            dialogMessage: \"qq-dialog-message-selector\",\n            dialogOkButton: \"qq-ok-button-selector\",\n            promptDialog: \"qq-prompt-dialog-selector\",\n            uploader: \"qq-uploader-selector\",\n            drop: \"qq-upload-drop-area-selector\",\n            list: \"qq-upload-list-selector\",\n            progressBarContainer: \"qq-progress-bar-container-selector\",\n            progressBar: \"qq-progress-bar-selector\",\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\n            totalProgressBar: \"qq-total-progress-bar-selector\",\n            file: \"qq-upload-file-selector\",\n            spinner: \"qq-upload-spinner-selector\",\n            size: \"qq-upload-size-selector\",\n            cancel: \"qq-upload-cancel-selector\",\n            pause: \"qq-upload-pause-selector\",\n            continueButton: \"qq-upload-continue-selector\",\n            deleteButton: \"qq-upload-delete-selector\",\n            retry: \"qq-upload-retry-selector\",\n            statusText: \"qq-upload-status-text-selector\",\n            editFilenameInput: \"qq-edit-filename-selector\",\n            editNameIcon: \"qq-edit-filename-icon-selector\",\n            dropText: \"qq-upload-drop-area-text-selector\",\n            dropProcessing: \"qq-drop-processing-selector\",\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\n            thumbnail: \"qq-thumbnail-selector\"\n        },\n        previewGeneration = {},\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\n        cachedWaitingForThumbnailImg = new qq.Promise(),\n        log,\n        isEditElementsExist,\n        isRetryElementExist,\n        templateHtml,\n        container,\n        fileList,\n        showThumbnails,\n        serverScale,\n\n        // During initialization of the templating module we should cache any\n        // placeholder images so we can quickly swap them into the file list on demand.\n        // Any placeholder images that cannot be loaded/found are simply ignored.\n        cacheThumbnailPlaceholders = function() {\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\n                waitingUrl = options.placeholders.waitingForThumbnail,\n                spec = {\n                    maxSize: thumbnailMaxSize,\n                    scale: serverScale\n                };\n\n            if (showThumbnails) {\n                if (notAvailableUrl) {\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedThumbnailNotAvailableImg.failure();\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedThumbnailNotAvailableImg.failure();\n                }\n\n                if (waitingUrl) {\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedWaitingForThumbnailImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedWaitingForThumbnailImg.failure();\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedWaitingForThumbnailImg.failure();\n                }\n            }\n        },\n\n        // Displays a \"waiting for thumbnail\" type placeholder image\n        // iff we were able to load it during initialization of the templating module.\n        displayWaitingImg = function(thumbnail) {\n            var waitingImgPlacement = new qq.Promise();\n\n            cachedWaitingForThumbnailImg.then(function(img) {\n                maybeScalePlaceholderViaCss(img, thumbnail);\n                /* jshint eqnull:true */\n                if (!thumbnail.src) {\n                    thumbnail.src = img.src;\n                    thumbnail.onload = function() {\n                        thumbnail.onload = null;\n                        show(thumbnail);\n                        waitingImgPlacement.success();\n                    };\n                }\n                else {\n                    waitingImgPlacement.success();\n                }\n            }, function() {\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\n                // are displayed as \"broken\" images, so we should just hide the img tag\n                // if we aren't going to display the \"waiting\" placeholder.\n                hide(thumbnail);\n                waitingImgPlacement.success();\n            });\n\n            return waitingImgPlacement;\n        },\n\n        generateNewPreview = function(id, blob, spec) {\n            var thumbnail = getThumbnail(id);\n\n            log(\"Generating new thumbnail for \" + id);\n            blob.qqThumbnailId = id;\n\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\n                function() {\n                    generatedThumbnails++;\n                    show(thumbnail);\n                    previewGeneration[id].success();\n                },\n                function() {\n                    previewGeneration[id].failure();\n\n                    // Display the \"not available\" placeholder img only if we are\n                    // not expecting a thumbnail at a later point, such as in a server response.\n                    if (!options.placeholders.waitUntilUpdate) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    }\n                });\n        },\n\n        generateNextQueuedPreview = function() {\n            if (thumbGenerationQueue.length) {\n                thumbnailQueueMonitorRunning = true;\n\n                var queuedThumbRequest = thumbGenerationQueue.shift();\n\n                if (queuedThumbRequest.update) {\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\n                }\n                else {\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\n                }\n            }\n            else {\n                thumbnailQueueMonitorRunning = false;\n            }\n        },\n\n        getCancel = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\n        },\n\n        getContinue = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\n        },\n\n        getDialog = function(type) {\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\n        },\n\n        getDelete = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\n        },\n\n        getDropProcessing = function() {\n            return getTemplateEl(container, selectorClasses.dropProcessing);\n        },\n\n        getEditIcon = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\n        },\n\n        getFile = function(id) {\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\n        },\n\n        getFilename = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.file);\n        },\n\n        getPause = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.pause);\n        },\n\n        getProgress = function(id) {\n            /* jshint eqnull:true */\n            // Total progress bar\n            if (id == null) {\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\n            }\n\n            // Per-file progress bar\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\n        },\n\n        getRetry = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.retry);\n        },\n\n        getSize = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.size);\n        },\n\n        getSpinner = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\n        },\n\n        getTemplateEl = function(context, cssClass) {\n            return context && qq(context).getFirstByClass(cssClass);\n        },\n\n        getThumbnail = function(id) {\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\n        },\n\n        hide = function(el) {\n            el && qq(el).addClass(options.classes.hide);\n        },\n\n        // Ensures a placeholder image does not exceed any max size specified\n        // via `style` attribute properties iff <canvas> was not used to scale\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\n            var maxWidth = placeholder.style.maxWidth,\n                maxHeight = placeholder.style.maxHeight;\n\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\n                qq(thumbnail).css({\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight\n                });\n            }\n        },\n\n        // Displays a \"thumbnail not available\" type placeholder image\n        // iff we were able to load this placeholder during initialization\n        // of the templating module or after preview generation has failed.\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\n                notAvailableImgPlacement = new qq.Promise();\n\n            cachedThumbnailNotAvailableImg.then(function(img) {\n                previewing.then(\n                    function() {\n                        notAvailableImgPlacement.success();\n                    },\n                    function() {\n                        maybeScalePlaceholderViaCss(img, thumbnail);\n\n                        thumbnail.onload = function() {\n                            thumbnail.onload = null;\n                            notAvailableImgPlacement.success();\n                        };\n\n                        thumbnail.src = img.src;\n                        show(thumbnail);\n                    }\n                );\n            });\n\n            return notAvailableImgPlacement;\n        },\n\n        /**\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\n         * some internally-tracked state variables based on the contents of the template.\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\n         *\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\n         */\n        parseAndGetTemplate = function() {\n            var scriptEl,\n                scriptHtml,\n                fileListNode,\n                tempTemplateEl,\n                fileListHtml,\n                defaultButton,\n                dropArea,\n                thumbnail,\n                dropProcessing,\n                dropTextEl,\n                uploaderEl;\n\n            log(\"Parsing template\");\n\n            /*jshint -W116*/\n            if (options.templateIdOrEl == null) {\n                throw new Error(\"You MUST specify either a template element or ID!\");\n            }\n\n            // Grab the contents of the script tag holding the template.\n            if (qq.isString(options.templateIdOrEl)) {\n                scriptEl = document.getElementById(options.templateIdOrEl);\n\n                if (scriptEl === null) {\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\n                }\n\n                scriptHtml = scriptEl.innerHTML;\n            }\n            else {\n                if (options.templateIdOrEl.innerHTML === undefined) {\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\n                        \"It must be an ID or an Element.\");\n                }\n\n                scriptHtml = options.templateIdOrEl.innerHTML;\n            }\n\n            scriptHtml = qq.trimStr(scriptHtml);\n            tempTemplateEl = document.createElement(\"div\");\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\n\n            // Don't include the default template button in the DOM\n            // if an alternate button container has been specified.\n            if (options.button) {\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\n                if (defaultButton) {\n                    qq(defaultButton).remove();\n                }\n            }\n\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\n            // or the drag and drop module is not found.\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\n            // to support layouts where the drop zone is also a container for visible elements,\n            // such as the file list.\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\n                if (dropProcessing) {\n                    qq(dropProcessing).remove();\n                }\n            }\n\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\n\n            // If DnD is not available then remove\n            // it from the DOM as well.\n            if (dropArea && !qq.DragAndDrop) {\n                log(\"DnD module unavailable.\", \"info\");\n                qq(dropArea).remove();\n            }\n\n            if (!qq.supportedFeatures.fileDrop) {\n                // don't display any \"drop files to upload\" background text\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\n                    // will not do this (since we will not be loading the DnD module)\n                    qq(dropArea).css({\n                        display: \"none\"\n                    });\n                }\n            }\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\n                dropTextEl && qq(dropTextEl).remove();\n            }\n\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\n            // is present in the template AND the current UA is capable of generating client-side previews.\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\n            if (!showThumbnails) {\n                thumbnail && qq(thumbnail).remove();\n            }\n            else if (thumbnail) {\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\n                // Only enforce max size if the attr value is non-zero\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\n\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\n            }\n            showThumbnails = showThumbnails && thumbnail;\n\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\n\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\n            /*jshint -W116*/\n            if (fileListNode == null) {\n                throw new Error(\"Could not find the file list container in the template!\");\n            }\n\n            fileListHtml = fileListNode.innerHTML;\n            fileListNode.innerHTML = \"\";\n\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\n                document.createElement(\"dialog\");\n            }\n\n            log(\"Template parsing complete\");\n\n            return {\n                template: qq.trimStr(tempTemplateEl.innerHTML),\n                fileTemplate: qq.trimStr(fileListHtml)\n            };\n        },\n\n        prependFile = function(el, index, fileList) {\n            var parentEl = fileList,\n                beforeEl = parentEl.firstChild;\n\n            if (index > 0) {\n                beforeEl = qq(parentEl).children()[index].nextSibling;\n\n            }\n\n            parentEl.insertBefore(el, beforeEl);\n        },\n\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    maxSize: thumbnailMaxSize,\n                    orient: true,\n                    scale: true\n                };\n\n            if (qq.supportedFeatures.imagePreviews) {\n                if (thumbnail) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        displayWaitingImg(thumbnail).done(function() {\n                            previewGeneration[id] = new qq.Promise();\n\n                            previewGeneration[id].done(function() {\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            });\n\n                            /* jshint eqnull: true */\n                            // If we've already generated an <img> for this file, use the one that exists,\n                            // don't waste resources generating a new one.\n                            if (relatedThumbnailId != null) {\n                                useCachedPreview(id, relatedThumbnailId);\n                            }\n                            else {\n                                generateNewPreview(id, optFileOrBlob, spec);\n                            }\n                        });\n                    }\n                }\n                // File element in template may have been removed, so move on to next item in queue\n                else {\n                    generateNextQueuedPreview();\n                }\n            }\n            else if (thumbnail) {\n                displayWaitingImg(thumbnail);\n                generateNextQueuedPreview();\n            }\n        },\n\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    scale: serverScale,\n                    maxSize: thumbnailMaxSize\n                };\n\n            if (thumbnail) {\n                if (thumbnailUrl) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        if (showWaitingImg) {\n                            displayWaitingImg(thumbnail);\n                        }\n\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\n                            function() {\n                                show(thumbnail);\n                                generatedThumbnails++;\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            },\n\n                            function() {\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            }\n                        );\n                    }\n                }\n                else {\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    generateNextQueuedPreview();\n                }\n            }\n        },\n\n        setProgressBarWidth = function(id, percent) {\n            var bar = getProgress(id),\n                /* jshint eqnull:true */\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\n\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\n                bar = qq(bar).getFirstByClass(progressBarSelector);\n            }\n\n            if (bar) {\n                qq(bar).css({width: percent + \"%\"});\n                bar.setAttribute(\"aria-valuenow\", percent);\n            }\n        },\n\n        show = function(el) {\n            el && qq(el).removeClass(options.classes.hide);\n        },\n\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\n            var targetThumbnail = getThumbnail(targetThumbnailId),\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\n\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\n\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\n            previewGeneration[cachedThumbnailId].then(function() {\n                generatedThumbnails++;\n                previewGeneration[targetThumbnailId].success();\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\n                targetThumbnail.src = cachedThumbnail.src;\n                show(targetThumbnail);\n            },\n            function() {\n                previewGeneration[targetThumbnailId].failure();\n                if (!options.placeholders.waitUntilUpdate) {\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\n                }\n            });\n        };\n\n    qq.extend(options, spec);\n    log = options.log;\n\n    // No need to worry about conserving CPU or memory on older browsers,\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\n    if (!qq.supportedFeatures.imagePreviews) {\n        options.limits.timeBetweenThumbs = 0;\n        options.limits.maxThumbs = 0;\n    }\n\n    container = options.containerEl;\n    showThumbnails = options.imageGenerator !== undefined;\n    templateHtml = parseAndGetTemplate();\n\n    cacheThumbnailPlaceholders();\n\n    qq.extend(this, {\n        render: function() {\n            log(\"Rendering template in DOM.\");\n\n            generatedThumbnails = 0;\n\n            container.innerHTML = templateHtml.template;\n            hide(getDropProcessing());\n            this.hideTotalProgress();\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\n\n            log(\"Template rendering complete\");\n        },\n\n        renderFailure: function(message) {\n            var cantRenderEl = qq.toElement(message);\n            container.innerHTML = \"\";\n            container.appendChild(cantRenderEl);\n        },\n\n        reset: function() {\n            this.render();\n        },\n\n        clearFiles: function() {\n            fileList.innerHTML = \"\";\n        },\n\n        disableCancel: function() {\n            isCancelDisabled = true;\n        },\n\n        addFile: function(id, name, prependInfo, hideForever, batch) {\n            var fileEl = qq.toElement(templateHtml.fileTemplate),\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\n                fileContainer = batch ? fileBatch.content : fileList,\n                thumb;\n\n            if (batch) {\n                fileBatch.map[id] = fileEl;\n            }\n\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n            if (fileNameEl) {\n                qq(fileNameEl).setText(name);\n                fileNameEl.setAttribute(\"title\", name);\n            }\n\n            fileEl.setAttribute(FILE_ID_ATTR, id);\n\n            if (prependInfo) {\n                prependFile(fileEl, prependInfo.index, fileContainer);\n            }\n            else {\n                fileContainer.appendChild(fileEl);\n            }\n\n            if (hideForever) {\n                fileEl.style.display = \"none\";\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\n            }\n            else {\n                hide(getProgress(id));\n                hide(getSize(id));\n                hide(getDelete(id));\n                hide(getRetry(id));\n                hide(getPause(id));\n                hide(getContinue(id));\n\n                if (isCancelDisabled) {\n                    this.hideCancel(id);\n                }\n\n                thumb = getThumbnail(id);\n                if (thumb && !thumb.src) {\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\n                        thumb.src = waitingImg.src;\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\n                            qq(thumb).css({\n                                maxHeight: waitingImg.style.maxHeight,\n                                maxWidth: waitingImg.style.maxWidth\n                            });\n                        }\n\n                        show(thumb);\n                    });\n                }\n            }\n        },\n\n        addFileToCache: function(id, name, prependInfo, hideForever) {\n            this.addFile(id, name, prependInfo, hideForever, true);\n        },\n\n        addCacheToDom: function() {\n            fileList.appendChild(fileBatch.content);\n            fileBatch.content = document.createDocumentFragment();\n            fileBatch.map = {};\n        },\n\n        removeFile: function(id) {\n            qq(getFile(id)).remove();\n        },\n\n        getFileId: function(el) {\n            var currentNode = el;\n\n            if (currentNode) {\n                /*jshint -W116*/\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\n                    currentNode = currentNode.parentNode;\n                }\n\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\n            }\n        },\n\n        getFileList: function() {\n            return fileList;\n        },\n\n        markFilenameEditable: function(id) {\n            var filename = getFilename(id);\n\n            filename && qq(filename).addClass(options.classes.editable);\n        },\n\n        updateFilename: function(id, name) {\n            var filenameEl = getFilename(id);\n\n            if (filenameEl) {\n                qq(filenameEl).setText(name);\n                filenameEl.setAttribute(\"title\", name);\n            }\n        },\n\n        hideFilename: function(id) {\n            hide(getFilename(id));\n        },\n\n        showFilename: function(id) {\n            show(getFilename(id));\n        },\n\n        isFileName: function(el) {\n            return qq(el).hasClass(selectorClasses.file);\n        },\n\n        getButton: function() {\n            return options.button || getTemplateEl(container, selectorClasses.button);\n        },\n\n        hideDropProcessing: function() {\n            hide(getDropProcessing());\n        },\n\n        showDropProcessing: function() {\n            show(getDropProcessing());\n        },\n\n        getDropZone: function() {\n            return getTemplateEl(container, selectorClasses.drop);\n        },\n\n        isEditFilenamePossible: function() {\n            return isEditElementsExist;\n        },\n\n        hideRetry: function(id) {\n            hide(getRetry(id));\n        },\n\n        isRetryPossible: function() {\n            return isRetryElementExist;\n        },\n\n        showRetry: function(id) {\n            show(getRetry(id));\n        },\n\n        getFileContainer: function(id) {\n            return getFile(id);\n        },\n\n        showEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).addClass(options.classes.editable);\n        },\n\n        isHiddenForever: function(id) {\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\n        },\n\n        hideEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).removeClass(options.classes.editable);\n        },\n\n        isEditIcon: function(el) {\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\n        },\n\n        getEditInput: function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\n        },\n\n        isEditInput: function(el) {\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\n        },\n\n        updateProgress: function(id, loaded, total) {\n            var bar = getProgress(id),\n                percent;\n\n            if (bar && total > 0) {\n                percent = Math.round(loaded / total * 100);\n\n                if (percent === 100) {\n                    hide(bar);\n                }\n                else {\n                    show(bar);\n                }\n\n                setProgressBarWidth(id, percent);\n            }\n        },\n\n        updateTotalProgress: function(loaded, total) {\n            this.updateProgress(null, loaded, total);\n        },\n\n        hideProgress: function(id) {\n            var bar = getProgress(id);\n\n            bar && hide(bar);\n        },\n\n        hideTotalProgress: function() {\n            this.hideProgress();\n        },\n\n        resetProgress: function(id) {\n            setProgressBarWidth(id, 0);\n            this.hideTotalProgress(id);\n        },\n\n        resetTotalProgress: function() {\n            this.resetProgress();\n        },\n\n        showCancel: function(id) {\n            if (!isCancelDisabled) {\n                var cancel = getCancel(id);\n\n                cancel && qq(cancel).removeClass(options.classes.hide);\n            }\n        },\n\n        hideCancel: function(id) {\n            hide(getCancel(id));\n        },\n\n        isCancel: function(el)  {\n            return qq(el).hasClass(selectorClasses.cancel, true);\n        },\n\n        allowPause: function(id) {\n            show(getPause(id));\n            hide(getContinue(id));\n        },\n\n        uploadPaused: function(id) {\n            this.setStatusText(id, options.text.paused);\n            this.allowContinueButton(id);\n            hide(getSpinner(id));\n        },\n\n        hidePause: function(id) {\n            hide(getPause(id));\n        },\n\n        isPause: function(el) {\n            return qq(el).hasClass(selectorClasses.pause, true);\n        },\n\n        isContinueButton: function(el) {\n            return qq(el).hasClass(selectorClasses.continueButton, true);\n        },\n\n        allowContinueButton: function(id) {\n            show(getContinue(id));\n            hide(getPause(id));\n        },\n\n        uploadContinued: function(id) {\n            this.setStatusText(id, \"\");\n            this.allowPause(id);\n            show(getSpinner(id));\n        },\n\n        showDeleteButton: function(id) {\n            show(getDelete(id));\n        },\n\n        hideDeleteButton: function(id) {\n            hide(getDelete(id));\n        },\n\n        isDeleteButton: function(el) {\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\n        },\n\n        isRetry: function(el) {\n            return qq(el).hasClass(selectorClasses.retry, true);\n        },\n\n        updateSize: function(id, text) {\n            var size = getSize(id);\n\n            if (size) {\n                show(size);\n                qq(size).setText(text);\n            }\n        },\n\n        setStatusText: function(id, text) {\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\n\n            if (textEl) {\n                /*jshint -W116*/\n                if (text == null) {\n                    qq(textEl).clearText();\n                }\n                else {\n                    qq(textEl).setText(text);\n                }\n            }\n        },\n\n        hideSpinner: function(id) {\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\n            hide(getSpinner(id));\n        },\n\n        showSpinner: function(id) {\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\n            show(getSpinner(id));\n        },\n\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        hasDialog: function(type) {\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\n        },\n\n        showDialog: function(type, message, defaultValue) {\n            var dialog = getDialog(type),\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\n                promise = new qq.Promise(),\n\n                closeHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\n                    promise.failure();\n                },\n\n                cancelClickHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    dialog.close();\n                },\n\n                okClickHandler = function() {\n                    dialog.removeEventListener(\"close\", closeHandler);\n                    okBtn.removeEventListener(\"click\", okClickHandler);\n                    dialog.close();\n\n                    promise.success(inputEl && inputEl.value);\n                };\n\n            dialog.addEventListener(\"close\", closeHandler);\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\n\n            if (inputEl) {\n                inputEl.value = defaultValue;\n            }\n            messageEl.textContent = message;\n\n            dialog.showModal();\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n// Base handler for UI (FineUploader mode) events.\n// Some more specific handlers inherit from this one.\nqq.UiEventHandler = function(s, protectedApi) {\n    \"use strict\";\n\n    var disposer = new qq.DisposeSupport(),\n        spec = {\n            eventType: \"click\",\n            attachTo: null,\n            onHandled: function(target, event) {}\n        };\n\n    // This makes up the \"public\" API methods that will be accessible\n    // to instances constructing a base or child handler\n    qq.extend(this, {\n        addHandler: function(element) {\n            addHandler(element);\n        },\n\n        dispose: function() {\n            disposer.dispose();\n        }\n    });\n\n    function addHandler(element) {\n        disposer.attach(element, spec.eventType, function(event) {\n            // Only in IE: the `event` is a property of the `window`.\n            event = event || window.event;\n\n            // On older browsers, we must check the `srcElement` instead of the `target`.\n            var target = event.target || event.srcElement;\n\n            spec.onHandled(target, event);\n        });\n    }\n\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\n    qq.extend(protectedApi, {\n        getFileIdFromItem: function(item) {\n            return item.qqFileId;\n        },\n\n        getDisposeSupport: function() {\n            return disposer;\n        }\n    });\n\n    qq.extend(spec, s);\n\n    if (spec.attachTo) {\n        addHandler(spec.attachTo);\n    }\n};\n","/* global qq */\nqq.FileButtonsClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onDeleteFile: function(fileId) {},\n            onCancel: function(fileId) {},\n            onRetry: function(fileId) {},\n            onPause: function(fileId) {},\n            onContinue: function(fileId) {},\n            onGetName: function(fileId) {}\n        },\n        buttonHandlers = {\n            cancel: function(id) { spec.onCancel(id); },\n            retry:  function(id) { spec.onRetry(id); },\n            deleteButton: function(id) { spec.onDeleteFile(id); },\n            pause: function(id) { spec.onPause(id); },\n            continueButton: function(id) { spec.onContinue(id); }\n        };\n\n    function examineEvent(target, event) {\n        qq.each(buttonHandlers, function(buttonType, handler) {\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\n                fileId;\n\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\n                fileId = spec.templating.getFileId(target);\n                qq.preventDefault(event);\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                handler(fileId);\n                return false;\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\nqq.FilenameClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            classes: {\n                file: \"qq-upload-file\",\n                editNameIcon: \"qq-edit-filename-icon\"\n            },\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {}\n        };\n\n    qq.extend(spec, s);\n\n    // This will be called by the parent handler when a `click` event is received on the list element.\n    function examineEvent(target, event) {\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                qq.preventDefault(event);\n\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\n            }\n        }\n    }\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            onGetUploadStatus: function(fileId) {},\n            log: function(message, lvl) {}\n        };\n\n    if (!inheritedInternalApi) {\n        inheritedInternalApi = {};\n    }\n\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\n    function handleInputFocus(target, event) {\n        if (spec.templating.isEditInput(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\n            }\n        }\n    }\n\n    spec.eventType = \"focusin\";\n    spec.onHandled = handleInputFocus;\n\n    qq.extend(spec, s);\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n/**\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\n *\n * @param spec Overrides for default specifications\n */\nqq.FilenameInputFocusHandler = function(spec) {\n    \"use strict\";\n\n    spec.eventType = \"focus\";\n    spec.attachTo = null;\n\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\n};\n","/*globals qq */\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\n// Children will delegate to this handler when specific edit-related actions are detected.\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {},\n            onSetName: function(fileId, newName) {},\n            onEditingStatusChange: function(fileId, isEditing) {}\n        };\n\n    function getFilenameSansExtension(fileId) {\n        var filenameSansExt = spec.onGetName(fileId),\n            extIdx = filenameSansExt.lastIndexOf(\".\");\n\n        if (extIdx > 0) {\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\n        }\n\n        return filenameSansExt;\n    }\n\n    function getOriginalExtension(fileId) {\n        var origName = spec.onGetName(fileId);\n        return qq.getExtension(origName);\n    }\n\n    // Callback iff the name has been changed\n    function handleNameUpdate(newFilenameInputEl, fileId) {\n        var newName = newFilenameInputEl.value,\n            origExtension;\n\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\n            origExtension = getOriginalExtension(fileId);\n\n            if (origExtension !== undefined) {\n                newName = newName + \".\" + origExtension;\n            }\n\n            spec.onSetName(fileId, newName);\n        }\n\n        spec.onEditingStatusChange(fileId, false);\n    }\n\n    // The name has been updated if the filename edit input loses focus.\n    function registerInputBlurHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\n            handleNameUpdate(inputEl, fileId);\n        });\n    }\n\n    // The name has been updated if the user presses enter.\n    function registerInputEnterKeyHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\n\n            var code = event.keyCode || event.which;\n\n            if (code === 13) {\n                handleNameUpdate(inputEl, fileId);\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n\n    qq.extend(inheritedInternalApi, {\n        handleFilenameEdit: function(id, target, focusInput) {\n            var newFilenameInputEl = spec.templating.getEditInput(id);\n\n            spec.onEditingStatusChange(id, true);\n\n            newFilenameInputEl.value = getFilenameSansExtension(id);\n\n            if (focusInput) {\n                newFilenameInputEl.focus();\n            }\n\n            registerInputBlurHandler(newFilenameInputEl, id);\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\n        }\n    });\n};\n"]}