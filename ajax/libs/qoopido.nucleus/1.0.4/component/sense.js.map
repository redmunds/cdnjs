{"version":3,"sources":["component/sense.js"],"names":["global","definition","Emitter","matchMedia","ComponentSense","query","self","this","call","mql","storage","uuid","addListener","emit","matches","prototype","extend","provide"],"mappings":"CAkBC,SAASA,GACT,YAEA,SAASC,GAAWC,EAASC,GAG5B,QAASC,GAAeC,GACvB,GAAIC,GAAOC,KAAAA,SAAWC,KAAKD,MAC1BE,EAAON,EAAWE,EAQnB,OANAK,GAAQJ,EAAKK,MAAQF,EAErBA,EAAIG,YAAY,WACfN,EAAKO,KAAKJ,EAAIK,WAAY,EAAO,QAAU,aAGrCR,EAZR,GAAII,KAyBJ,OAVAN,GAAeW,WACdD,GAAIA,WACH,GAAIL,GAAMC,EAAQH,KAAKI,KAEvB,OAAGF,GACKA,EAAIK,QADZ,SAMKZ,EAAQc,OAAOZ,GAGvBa,SAAU,aAAcjB,EAAOG,YAAc,iCAAmCF,IAC/EM","file":"component/sense.js","sourcesContent":["/**\n * Qoopido component/sense\n *\n * Provides facilities to register to media queries matching/unmatching\n *\n * Copyright (c) 2015 Dirk Lueth\n *\n * Dual licensed under the MIT and GPL licenses.\n *  - http://www.opensource.org/licenses/mit-license.php\n *  - http://www.gnu.org/copyleft/gpl.html\n *\n * @author Dirk Lueth <info@qoopido.com>\n *\n * @require ../emitter\n *\n * @polyfill ../polyfill/window/matchmedia\n */\n\n(function(global) {\n\t'use strict';\n\n\tfunction definition(Emitter, matchMedia) {\n\t\tvar storage = {};\n\n\t\tfunction ComponentSense(query) {\n\t\t\tvar self = this.super.call(this),\n\t\t\t\tmql  = matchMedia(query);\n\n\t\t\tstorage[self.uuid] = mql;\n\n\t\t\tmql.addListener(function() {\n\t\t\t\tself.emit(mql.matches === true ? 'match' : 'unmatch');\n\t\t\t});\n\n\t\t\treturn self;\n\t\t}\n\n\t\tComponentSense.prototype = {\n\t\t\tget matches() {\n\t\t\t\tvar mql = storage[this.uuid];\n\n\t\t\t\tif(mql) {\n\t\t\t\t\treturn mql.matches;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn Emitter.extend(ComponentSense);\n\t}\n\n\tprovide([ '../emitter', global.matchMedia || '../polyfill/window/matchmedia' ], definition);\n}(this));"],"sourceRoot":"/source/"}