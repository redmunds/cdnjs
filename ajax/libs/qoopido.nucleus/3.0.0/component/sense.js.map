{"version":3,"sources":["component/sense.js"],"names":["global","definition","Emitter","matchMedia","ComponentSense","query","self","this","parent","constructor","call","mql","storage","uuid","addListener","emit","matches","prototype","extends","provide"],"mappings":"CAMC,SAASA,GACT,YAEA,SAASC,GAAWC,EAASC,GAG5B,QAASC,GAAeC,GACvB,GAAIC,GAAOC,KAAKC,OAAOC,YAAYC,KAAKH,MACvCI,EAAOR,EAAWE,EAQnB,OANAO,GAAQN,EAAKO,MAAQF,EAErBA,EAAIG,YAAY,WACfR,EAAKS,KAAKJ,EAAIK,WAAY,EAAO,QAAU,aAGrCV,EAZR,GAAIM,KAyBJ,OAVAR,GAAea,WACdD,GAAIA,WACH,GAAIL,GAAMC,EAAQL,KAAKM,KAEvB,IAAGF,EACF,MAAOA,GAAIK,UAKPZ,EAAec,QAAQhB,GAG/BiB,SAAU,aAAcnB,EAAOG,YAAc,iCAAmCF,IAC/EM","file":"sense.js","sourcesContent":["/**\n * @require ../emitter\n *\n * @polyfill ../polyfill/window/matchmedia\n */\n\n(function(global) {\n\t'use strict';\n\n\tfunction definition(Emitter, matchMedia) {\n\t\tvar storage = {};\n\n\t\tfunction ComponentSense(query) {\n\t\t\tvar self = this.parent.constructor.call(this),\n\t\t\t\tmql  = matchMedia(query);\n\n\t\t\tstorage[self.uuid] = mql;\n\n\t\t\tmql.addListener(function() {\n\t\t\t\tself.emit(mql.matches === true ? 'match' : 'unmatch');\n\t\t\t});\n\n\t\t\treturn self;\n\t\t}\n\n\t\tComponentSense.prototype = {\n\t\t\tget matches() {\n\t\t\t\tvar mql = storage[this.uuid];\n\n\t\t\t\tif(mql) {\n\t\t\t\t\treturn mql.matches;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn ComponentSense.extends(Emitter);\n\t}\n\n\tprovide([ '../emitter', global.matchMedia || '../polyfill/window/matchmedia' ], definition);\n}(this));"]}