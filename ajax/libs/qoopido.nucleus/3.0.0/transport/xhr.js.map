{"version":3,"sources":["transport/xhr.js"],"names":["global","XHR","definition","abstractUuid","Pledge","isObject","iterate","Url","functionMerge","serialize","parameter","result","property","value","encodeURIComponent","replace","regexMatchSpaces","regexMatchOpeningBrackets","regexMatchClosingBrackets","checkState","this","readyState","abort","request","method","pointer","self","properties","storage","uuid","settings","url","data","xhr","local","XDR","deferred","defer","boundCheckState","bind","timeout","set","cache","Date","xhrOptions","ontimeout","onerror","onabort","reject","onprogress","onreadystatechange","clearTimeout","setTimeout","onload","status","resolve","responseText","open","href","setRequestHeader","accept","contentType","header","send","pledge","TransportXhr","parent","constructor","call","XDomainRequest","prototype","get","post","put","patch","delete","head","async","username","password","extends","provide","XMLHttpRequest"],"mappings":"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","file":"xhr.js","sourcesContent":["/**\n * @use /demand/abstract/uuid\n * @use /demand/pledge\n * @use /demand/validator/isObject\n * @use /demand/function/iterate\n *\n * @require ../url\n * @require ../function/merge\n */\n\n(function(global, XHR) {\n\t'use strict';\n\n\tfunction definition(abstractUuid, Pledge, isObject, iterate, Url, functionMerge) {\n\t\tvar XDR                       = 'XDomainRequest' in global &&  global.XDomainRequest || XHR,\n\t\t\tregexMatchSpaces          = /%20/g,\n\t\t\tregexMatchOpeningBrackets = /%5B/g,\n\t\t\tregexMatchClosingBrackets = /%5D/g,\n\t\t\tstorage                   = {};\n\n\t\tfunction serialize(parameter) {\n\t\t\tvar result = '';\n\n\t\t\titerate(parameter, function(property, value) {\n\t\t\t\tresult += (!result ? '' : '&') + encodeURIComponent(property) + '=' + encodeURIComponent(value);\n\t\t\t});\n\n\t\t\treturn result\n\t\t\t\t.replace(regexMatchSpaces, '+')\n\t\t\t\t.replace(regexMatchOpeningBrackets, '[')\n\t\t\t\t.replace(regexMatchClosingBrackets, ']');\n\t\t}\n\n\t\tfunction checkState() {\n\t\t\tif(this.readyState < 4) {\n\t\t\t\tthis.abort();\n\t\t\t}\n\t\t}\n\n\t\tfunction request(method) {\n\t\t\tvar self            = this,\n\t\t\t\tproperties      = storage[self.uuid],\n\t\t\t\tsettings        = properties.settings,\n\t\t\t\turl             = properties.url,\n\t\t\t\tdata            = properties.data,\n\t\t\t\txhr             = url.local ? new XHR() : new XDR(),\n\t\t\t\tdeferred        = Pledge.defer(),\n\t\t\t\tboundCheckState = checkState.bind(xhr),\n\t\t\t\ttimeout         = settings.timeout,\n\t\t\t\tpointer;\n\n\t\t\tif(data && method === 'GET') {\n\t\t\t\titerate(data, url.parameter.set);\n\n\t\t\t\tdata = null;\n\t\t\t}\n\n\t\t\tif(!settings.cache) {\n\t\t\t\turl.parameter.set('nucleus', +new Date());\n\t\t\t}\n\n\t\t\tif(data) {\n\t\t\t\tdata = serialize(data);\n\t\t\t}\n\n\t\t\tif(isObject(settings.xhrOptions)) {\n\t\t\t\titerate(settings.xhrOptions, function(property, value) {\n\t\t\t\t\txhr[property] = value;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\txhr.ontimeout  = xhr.onerror = xhr.onabort = function() {\n\t\t\t\tdeferred.reject(xhr);\n\t\t\t};\n\t\t\txhr.onprogress = xhr.onreadystatechange = function() {\n\t\t\t\tclearTimeout(pointer);\n\n\t\t\t\tpointer = setTimeout(boundCheckState, timeout);\n\t\t\t};\n\t\t\txhr.onload     = function() {\n\t\t\t\tpointer = clearTimeout(pointer);\n\n\t\t\t\tif(!('status' in xhr) || xhr.status === 200) {\n\t\t\t\t\tdeferred.resolve(xhr.responseText, xhr);\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.reject(xhr);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\txhr.open(method, url.href, true);\n\n\t\t\tif(xhr.setRequestHeader) {\n\t\t\t\txhr.setRequestHeader('Accept', settings.accept);\n\n\t\t\t\tif(data && method !== 'GET') {\n\t\t\t\t\txhr.setRequestHeader('Content-Type', settings.contentType);\n\t\t\t\t}\n\n\t\t\t\tif(isObject(settings.header)) {\n\t\t\t\t\titerate(settings.header, xhr.setRequestHeader);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txhr.send(data);\n\n\t\t\tpointer = setTimeout(boundCheckState, timeout);\n\n\t\t\treturn deferred.pledge;\n\t\t}\n\n\t\tfunction TransportXhr(url, data, settings) {\n\t\t\tvar self = this.parent.constructor.call(this);\n\n\t\t\tstorage[self.uuid] = {\n\t\t\t\tsettings: functionMerge({}, TransportXhr.settings, settings),\n\t\t\t\turl:      new Url(url),\n\t\t\t\tdata:     data\n\t\t\t};\n\t\t}\n\n\t\tTransportXhr.prototype = {\n\t\t\tget:      function() {\n\t\t\t\treturn request.call(this, 'GET');\n\t\t\t},\n\t\t\tpost:     function() {\n\t\t\t\treturn request.call(this, 'POST');\n\t\t\t},\n\t\t\tput:      function() {\n\t\t\t\treturn request.call(this, 'PUT');\n\t\t\t},\n\t\t\tpatch:      function() {\n\t\t\t\treturn request.call(this, 'PATCH');\n\t\t\t},\n\t\t\t'delete': function() {\n\t\t\t\treturn request.call(this, 'DELETE');\n\t\t\t},\n\t\t\thead:     function() {\n\t\t\t\treturn request.call(this, 'HEAD');\n\t\t\t}\n\t\t};\n\n\t\tTransportXhr.settings = {\n\t\t\taccept:      '*/*',\n\t\t\ttimeout:     8000,\n\t\t\tasync:       true,\n\t\t\tcache:       false,\n\t\t\tusername:    null,\n\t\t\tpassword:    null,\n\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=UTF-8',\n\t\t\theader:      {},\n\t\t\txhrOptions:  {}\n\t\t};\n\n\t\treturn TransportXhr.extends(abstractUuid);\n\t}\n\n\tprovide([ '/demand/abstract/uuid', '/demand/pledge', '/demand/validator/isObject', '/demand/function/iterate', '../url', '../function/merge' ], definition);\n}(this, XMLHttpRequest));\n"]}