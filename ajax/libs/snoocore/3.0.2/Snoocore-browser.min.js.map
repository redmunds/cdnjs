{"version":3,"sources":["Snoocore-browser.min.js"],"names":["e","exports","module","define","amd","o","window","global","self","Snoocore","t","n","r","s","u","a","require","i","f","Error","code","l","call","length",1,"_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","_get","get","object","property","receiver","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","value","getter","_inherits","subClass","superClass","create","constructor","__proto__","_events","_events2","_util","_Request","_Request2","_RedditRequest","_RedditRequest2","_Throttle","_Throttle2","_UserConfig","_UserConfig2","_OAuth","_OAuth2","_fileHelper","_fileHelper2","_events$EventEmitter","userConfiguration","_this","this","_userConfig","_throttle","throttle","_request","on","responseError","emit","oauth","oauthAppOnly","forEach","fn","bind","appOnlyAuth","applicationOnlyAuth","accessToken","_redditRequest","rateLimitData","addTime","rateLimitReset","path","_len","arguments","args","Array","_key","apply","EventEmitter","./OAuth","./RedditRequest","./Request","./Throttle","./UserConfig","./https/file","events","util",2,"replaceUrlParams","endpointUrl","givenArgs","indexOf","params","match","param","replace","_interopRequireWildcard","newObj","hasOwnProperty","_urlLib","_urlLib2","_import","Endpoint","userConfig","hostname","method","headers","givenContextOptions","port","contextOptions","normalizeContextOptions","buildArgs","url","buildUrl","computedPath","parse","cOptions","bypassAuth","thisOrThat","decodeHtmlEntities","retryAttemptsLeft","retryAttempts","retryDelay","requestTimeout","reauthAttemptsLeft","substring","apiType","api_type","./utils",3,"Buffer","_querystring","_querystring2","_util2","_when","_when2","_Endpoint","_Endpoint2","_ResponseError","_ResponseError2","TOKEN","EXPLICIT","IMPLICIT","SCRIPT","APP_ONLY","REFRESH","INVALID","OAuth","request","refreshToken","tokenType","scope","normalizeScope","isArray","join","type","duration","hasRefreshToken","state","query","client_id","Math","ceil","random","redirect_uri","redirectUri","response_type","baseUrl","serverWWW","mobile","stringify","getExplicitAuthUrl","getImplicitAuthUrl","oauthType","grant_type","device_id","deviceId","authorizationCode","username","password","reject","refresh_token","tokenEnum","options","getRefreshTokenData","getAppOnlyTokenData","getAuthenticatedTokenData","buff","secret","base64","toString","auth","Authorization","endpoint","serverWWWPort","responseErrorHandler","response","String","_status","resolve","https","then","res","JSON","_body","authCodeOrAccessToken","isApplicationOnly","tokenData","getToken","token","access_token","token_type","expires_in","data","str","_this2","_this3","hasAccessToken","isRefreshToken","tokenTypeHint","token_type_hint","./Endpoint","./ResponseError","buffer","querystring","when",4,"_delay","_he","_he2","RedditRequest","_oauth","_oauthAppOnly","canRefreshAccessToken","isNode","userAgent","getAuthorizationHeader","isAuthenticated","authenticate","buildHeaders","requestPromise","handleSuccessResponse","authPromise","refresh","isOAuthType","wwwAuth","_headers","msg","reauthPromise","setHeaders","modifiedEndpoint","error","decode","json","errors","rateLimitRemaining","rateLimitUsed","Number","cutoff","__test","rateLimitRemainingCutoff","count","limit","start","after","getSlice","_getSlice","_x","callRedditApi","result","slice","listing","listingIndex","before","allChildren","children","empty","filter","child","stickied","next","newArgs","name","previous","requery","_path","_x2","urlOrPath","_this4","parsed","pathname","calls","verb","userGivenArgs","userContextOptions","serverOAuth","serverOAuthPort","getListing","he","when/delay",5,"_delay2","_httpsNode","_httpsNode2","_httpsBrowser","_httpsBrowser2","rawHttps","Request","wait","reqOptions","toUpperCase","formData","timeout","statusChar","success","message","./https/httpsBrowser","./https/httpsNode",6,"ResponseError","_Error","status","body",7,"Throttle","throttleMs","_throttleMs","_throttleDelay","delayPromise","setTimeout","timeMs",8,"UserConfig","missingMsg","thisOrThrow","browser",9,"mimeType",10,"getSectionBoundary","boundary","getEndBoundary","encodeFieldPart","encodeFilePart","concat","getMultipartFormData","fields","files","dataBuffer","file","getData","contentType","contentLength","singleFile","floor",11,"parseResponseHeaders","headerStr","headerPairs","split","len","headerPair","index","toLowerCase","val","DEBUG_LOG","form","promise","x","XMLHttpRequest","open","keys","headerKey","setRequestHeader","onreadystatechange","readyState","responseText","getAllResponseHeaders","send","canRedirect","location","./form",12,"req","_httpsLib2","_req","setEncoding","chunk","statusCode","write","end","_httpsLib",13,"tryThis","that","orThrowMessage",14,"subject","encoding","noZero","base64clean","byteLength","kMaxLength","RangeError","buf","TYPED_ARRAY_SUPPORT","_augment","Uint8Array","_isBuffer","_set","isArrayish","isBuffer","readUInt8","hexWrite","string","offset","remaining","strLen","byte","parseInt","substr","isNaN","utf8Write","charsWritten","blitBuffer","utf8ToBytes","asciiWrite","asciiToBytes","binaryWrite","base64Write","base64ToBytes","utf16leWrite","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","tmp","min","decodeUtf8Char","fromCharCode","asciiSlice","ret","binarySlice","hexSlice","out","toHex","utf16leSlice","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","j","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","stringtrim","INVALID_BASE64_RE","trim","byteArray","b","charCodeAt","push","h","encodeURIComponent","c","hi","lo","toByteArray","src","dst","unitSize","decodeURIComponent","err","SlowBuffer","INSPECT_MAX_BYTES","poolSize","ArrayBuffer","arr","foo","subarray","compare","y","isEncoding","list","totalLength","pos","item","copy","loweredCase","Infinity","equals","inspect","console","log","set","v","writeUInt8","isFinite","swap","toJSON","_arr","sliceLen","newBuf","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","read","readFloatBE","readDoubleLE","readDoubleBE","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","target_start","source","fill","toArrayBuffer","BP","toLocaleString","base64-js","is-array",15,"lookup","elt","PLUS","SLASH","NUMBER","UPPER","LOWER","b64ToByteArray","b64","L","placeHolders","charAt","Arr","uint8ToBase64","uint8","encode","num","tripletToBase64","temp","extraBytes","output","base64js",16,"isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","NaN","pow","rt","abs","LN2",17,18,"_maxListeners","isFunction","arg","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","er","handler","listeners","addListener","listener","newListener","warned","trace","once","g","removeListener","fired","position","splice","removeAllListeners","listenerCount","emitter",19,"http","cb","host","protocol","scheme","test","xhrHttp","Agent","defaultMaxSockets","ActiveXObject","axs","ax","ax_","STATUS_CODES",100,101,102,200,201,202,203,204,205,206,207,300,301,302,303,304,305,307,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,422,423,424,425,426,428,429,431,500,501,502,503,504,505,506,507,509,510,511,"./lib/request",20,"Stream","Response","Base64","inherits","xhr","uri","withCredentials","responseType","onerror","event","objectKeys","isSafeRequestHeader","setHeader","btoa","__aborted","handle","getHeader","removeHeader","destroy","abort","k","isXHR2Compatible","unsafeHeaders","headerName","xs","Blob","FormData","./response","stream",21,"parseHeaders","lines","line","readable","capable","streaming","status2","getResponse","respType","responseBlob","_emitData","respBody",22,"InvalidCharacterError","chars","input","block","charCode","idx","map","atob","bs","bc",23,24,"ctor","superCtor","super_","TempCtor",25,26,"noop","process","nextTick","canSetImmediate","setImmediate","canMutationObserver","MutationObserver","canPost","postMessage","addEventListener","queue","hiddenDiv","document","createElement","observer","queueList","observe","attributes","setAttribute","ev","stopPropagation","shift","title","env","argv","off","binding","cwd","chdir","dir",27,"root","array","mapDomain","regexSeparators","ucs2decode","extra","counter","ucs2encode","stringFromCharCode","basicToDigit","codePoint","base","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","damp","baseMinusTMin","tMax","skew","basic","oldi","w","baseMinusT","inputLength","initialN","bias","initialBias","lastIndexOf","delimiter","maxInt","tMin","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","toUnicode","domain","regexPunycode","toASCII","regexNonASCII","freeExports","freeModule","freeGlobal","punycode","overflow","not-basic","invalid-input","version","ucs2","nodeType",28,"prop","qs","sep","eq","regexp","maxKeys","kstr","vstr",29,"stringifyPrimitive","ks",30,"./decode","./encode",31,"./lib/_stream_duplex.js",32,"Duplex","Readable","Writable","allowHalfOpen","onend","_writableState","ended","./_stream_readable","./_stream_writable","_process","core-util-is",33,"PassThrough","Transform","_transform","./_stream_transform",34,"ReadableState","hwm","highWaterMark","pipes","pipesCount","flowing","endEmitted","reading","calledRead","sync","needReadable","emittedReadable","readableListening","objectMode","defaultEncoding","ranOut","awaitDrain","readingMore","decoder","StringDecoder","_readableState","readableAddChunk","addToFront","chunkInvalid","onEofChunk","unshift","emitReadable","maybeReadMore","needMoreData","roundUpToNextPowerOf2","MAX_HWM","p","howMuchToRead","endReadable","emitReadable_","maybeReadMore_","pipeOnDrain","flow","dest","written","EE","emitDataEvents","pipeOnReadable","startPaused","paused","pipe","pause","resume","fromList","stringMode","cpy","enc","nOrig","doRead","_read","pipeOpts","onunpipe","cleanup","onclose","onfinish","ondrain","needDrain","unpipe","doEnd","stdout","stderr","endFn","dests","wrap","_fromList","isarray","string_decoder/",35,"TransformState","afterTransform","needTransform","transforming","writecb","writechunk","ts","_transformState","rs","_flush","done","ws","_write","writeencoding","./_stream_duplex",36,"WriteReq","callback","WritableState","ending","finished","noDecode","decodeStrings","writing","bufferProcessing","onwrite","writelen","errorEmitted","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","doWrite","onwriteError","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","finishMaybe","entry","need","endWritable",37,"ar","isBoolean","isNull","isNullOrUndefined","isString","isSymbol","isRegExp","re","objectToString","isDate","isError","isPrimitive",38,"./lib/_stream_passthrough.js",39,"./lib/_stream_readable.js","./lib/_stream_transform.js","./lib/_stream_writable.js",40,41,42,"ondata","didOnEnd","_isStdio","readable-stream/duplex.js","readable-stream/passthrough.js","readable-stream/readable.js","readable-stream/transform.js","readable-stream/writable.js",43,"assertEncoding","isBufferEncoding","passThroughWrite","utf16DetectIncompleteChar","charReceived","charLength","base64DetectIncompleteChar","surrogateSize","detectIncompleteChar","charBuffer","charStr","available","size","cr",44,"Url","slashes","hash","search","href","urlParse","parseQueryString","slashesDenoteHost","urlFormat","format","urlResolve","relative","urlResolveObject","resolveObject","protocolPattern","portPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","ftp","gopher","http:","https:","ftp:","gopher:","file:","rest","proto","exec","lowerProto","hostEnd","hec","atSign","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","domainArray","newOut","ae","esc","escape","qm","rel","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","authInHost","last","hasTrailingSlash","up","isAbsolute",45,46,"opts","ctx","seen","stylize","stylizeNoColor","depth","colors","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","arrayToHash","recurseTimes","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","formatError","RegExp","Date","braces","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","numLinesEst","reduce","prev","cur","pad","timestamp","time","getHours","getMinutes","getSeconds","getDate","months","getMonth","formatRegExp","objects","_","deprecate","deprecated","throwDeprecation","traceDeprecation","noDeprecation","debugEnviron","debugs","debuglog","NODE_DEBUG","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","date","origin","add","./support/isBuffer",47,"regexAstralSymbols","regexAsciiWhitelist","regexBmpWhitelist","regexEncodeNonAscii","encodeMap","Á","á","Ă","ă","∾","∿","∾̳","Â","â","´","А","а","Æ","æ","⁡","𝔄","𝔞","À","à","ℵ","Α","α","Ā","ā","⨿","&","⩕","⩓","∧","⩜","⩘","⩚","∠","⦤","⦨","⦩","⦪","⦫","⦬","⦭","⦮","⦯","∡","∟","⊾","⦝","∢","Å","⍼","Ą","ą","𝔸","𝕒","⩯","≈","⩰","≊","≋","'","å","𝒜","𝒶","≔","*","≍","Ã","ã","Ä","ä","∳","⨑","≌","϶","‵","∽","⋍","∖","⫧","⊽","⌅","⌆","⎵","⎶","Б","б","„","∵","⦰","ℬ","Β","β","ℶ","≬","𝔅","𝔟","⋂","◯","⋃","⨀","⨁","⨂","⨆","★","▽","△","⨄","⋁","⋀","⤍","⧫","▪","▴","▾","◂","▸","␣","▒","░","▓","█","=⃥","≡⃥","⫭","⌐","𝔹","𝕓","⊥","⋈","⧉","┐","╕","╖","╗","┌","╒","╓","╔","─","═","┬","╤","╥","╦","┴","╧","╨","╩","⊟","⊞","⊠","┘","╛","╜","╝","└","╘","╙","╚","│","║","┼","╪","╫","╬","┤","╡","╢","╣","├","╞","╟","╠","˘","¦","𝒷","⁏","⧅","\\","⟈","•","≎","⪮","≏","Ć","ć","⩄","⩉","⩋","∩","⋒","⩇","⩀","ⅅ","∩︀","⁁","ˇ","ℭ","⩍","Č","č","Ç","ç","Ĉ","ĉ","∰","⩌","⩐","Ċ","ċ","¸","⦲","¢","·","𝔠","Ч","ч","✓","Χ","χ","ˆ","≗","↺","↻","⊛","⊚","⊝","⊙","®","Ⓢ","⊖","⊕","⊗","○","⧃","⨐","⫯","⧂","∲","”","’","♣",":","∷","⩴",",","@","∁","∘","ℂ","≅","⩭","≡","∮","∯","𝕔","∐","©","℗","↵","✗","⨯","𝒞","𝒸","⫏","⫑","⫐","⫒","⋯","⤸","⤵","⋞","⋟","↶","⤽","⩈","⩆","∪","⋓","⩊","⊍","⩅","∪︀","↷","⤼","⋎","⋏","¤","∱","⌭","†","‡","ℸ","↓","↡","⇓","‐","⫤","⊣","⤏","˝","Ď","ď","Д","д","⇊","ⅆ","⤑","⩷","°","∇","Δ","δ","⦱","⥿","𝔇","𝔡","⥥","⇃","⇂","˙","`","˜","⋄","♦","¨","ϝ","⋲","÷","⋇","Ђ","ђ","⌞","⌍","$","𝔻","𝕕","⃜","≐","≑","∸","∔","⊡","⇐","⇔","⟸","⟺","⟹","⇒","⊨","⇑","⇕","∥","⤓","⇵","̑","⥐","⥞","⥖","↽","⥟","⥗","⇁","↧","⊤","⤐","⌟","⌌","𝒟","𝒹","Ѕ","ѕ","⧶","Đ","đ","⋱","▿","⥯","⦦","Џ","џ","⟿","É","é","⩮","Ě","ě","Ê","ê","≖","≕","Э","э","Ė","ė","ⅇ","≒","𝔈","𝔢","⪚","È","è","⪖","⪘","⪙","∈","⏧","ℓ","⪕","⪗","Ē","ē","∅","◻","▫"," "," "," ","Ŋ","ŋ"," ","Ę","ę","𝔼","𝕖","⋕","⧣","⩱","ε","Ε","ϵ","≂","⩵","=","≟","⇌","⩸","⧥","⥱","≓","ℯ","ℰ","⩳","Η","η","Ð","ð","Ë","ë","€","!","∃","Ф","ф","♀","ﬃ","ﬀ","ﬄ","𝔉","𝔣","ﬁ","◼","fj","♭","ﬂ","▱","ƒ","𝔽","𝕗","∀","⋔","⫙","ℱ","⨍","½","⅓","¼","⅕","⅙","⅛","⅔","⅖","¾","⅗","⅜","⅘","⅚","⅝","⅞","⁄","⌢","𝒻","ǵ","Γ","γ","Ϝ","⪆","Ğ","ğ","Ģ","Ĝ","ĝ","Г","г","Ġ","ġ","≥","≧","⪌","⋛","⩾","⪩","⪀","⪂","⪄","⋛︀","⪔","𝔊","𝔤","≫","⋙","ℷ","Ѓ","ѓ","⪥","≷","⪒","⪤","⪊","⪈","≩","⋧","𝔾","𝕘","⪢","≳","𝒢","ℊ","⪎","⪐","⪧","⩺",">","⋗","⦕","⩼","⥸","≩︀"," ","ℋ","Ъ","ъ","⥈","↔","↭","^","ℏ","Ĥ","ĥ","♥","…","⊹","𝔥","ℌ","⤥","⤦","⇿","∻","↩","↪","𝕙","ℍ","―","𝒽","Ħ","ħ","⁃","Í","í","⁣","Î","î","И","и","İ","Е","е","¡","𝔦","ℑ","Ì","ì","ⅈ","⨌","∭","⧜","℩","Ĳ","ĳ","Ī","ī","ℐ","ı","⊷","Ƶ","℅","∞","⧝","⊺","∫","∬","ℤ","⨗","⨼","⁢","Ё","ё","Į","į","𝕀","𝕚","Ι","ι","¿","𝒾","⋵","⋹","⋴","⋳","Ĩ","ĩ","І","і","Ï","ï","Ĵ","ĵ","Й","й","𝔍","𝔧","ȷ","𝕁","𝕛","𝒥","𝒿","Ј","ј","Є","є","Κ","κ","ϰ","Ķ","ķ","К","к","𝔎","𝔨","ĸ","Х","х","Ќ","ќ","𝕂","𝕜","𝒦","𝓀","⇚","Ĺ","ĺ","⦴","ℒ","Λ","λ","⟨","⟪","⦑","⪅","«","⇤","⤟","←","↞","⤝","↫","⤹","⥳","↢","⤙","⤛","⪫","⪭","⪭︀","⤌","⤎","❲","{","[","⦋","⦏","⦍","Ľ","ľ","Ļ","ļ","⌈","Л","л","⤶","“","⥧","⥋","↲","≤","≦","⇆","⟦","⥡","⥙","⌊","↼","⇇","⇋","⥎","↤","⥚","⋋","⧏","⊲","⊴","⥑","⥠","⥘","↿","⥒","⪋","⋚","⩽","⪨","⩿","⪁","⪃","⋚︀","⪓","⋖","≶","⪡","≲","⥼","𝔏","𝔩","⪑","⥢","⥪","▄","Љ","љ","≪","⋘","⥫","◺","Ŀ","ŀ","⎰","⪉","⪇","≨","⋦","⟬","⇽","⟵","⟷","⟼","⟶","↬","⦅","𝕃","𝕝","⨭","⨴","∗","↙","↘","◊","(","⦓","⥭","‎","⊿","‹","𝓁","↰","⪍","⪏","‘","‚","Ł","ł","⪦","⩹","<","⋉","⥶","⩻","◃","⦖","⥊","⥦","≨︀","¯","♂","✠","⤅","↦","↥","▮","⨩","М","м","—","∺"," ","ℳ","𝔐","𝔪","℧","µ","⫰","∣","−","⨪","∓","⫛","⊧","𝕄","𝕞","𝓂","Μ","μ","⊸","Ń","ń","∠⃒","≉","⩰̸","≋̸","ŉ","♮","ℕ"," ","≎̸","≏̸","⩃","Ň","ň","Ņ","ņ","≇","⩭̸","⩂","Н","н","–","⤤","↗","⇗","≠","≐̸","​","≢","⤨","≂̸","\n","∄","𝔑","𝔫","≧̸","≱","⩾̸","⋙̸","≵","≫⃒","≯","≫̸","↮","⇎","⫲","∋","⋼","⋺","Њ","њ","↚","⇍","‥","≦̸","≰","⩽̸","≮","⋘̸","≴","≪⃒","⋪","⋬","≪̸","∤","⁠","𝕟","⫬","¬","≭","∦","∉","≹","⋵̸","⋹̸","⋷","⋶","⧏̸","≸","⪢̸","⪡̸","∌","⋾","⋽","⊀","⪯̸","⋠","⧐̸","⋫","⋭","⊏̸","⋢","⊐̸","⋣","⊂⃒","⊈","⊁","⪰̸","⋡","≿̸","⊃⃒","⊉","≁","≄","⫽⃥","∂̸","⨔","⤳̸","↛","⇏","↝̸","𝒩","𝓃","⊄","⫅̸","⊅","⫆̸","Ñ","ñ","Ν","ν","#","№"," ","≍⃒","⊬","⊭","⊮","⊯","≥⃒",">⃒","⤄","⧞","⤂","≤⃒","<⃒","⊴⃒","⤃","⊵⃒","∼⃒","⤣","↖","⇖","⤧","Ó","ó","Ô","ô","О","о","Ő","ő","⨸","⦼","Œ","œ","⦿","𝔒","𝔬","˛","Ò","ò","⧁","⦵","Ω","⦾","⦻","‾","⧀","Ō","ō","ω","Ο","ο","⦶","𝕆","𝕠","⦷","⦹","⩔","∨","⩝","ℴ","ª","º","⊶","⩖","⩗","⩛","𝒪","Ø","ø","⊘","Õ","õ","⨶","⨷","Ö","ö","⌽","⏞","⎴","⏜","¶","⫳","⫽","∂","П","п","%",".","‰","‱","𝔓","𝔭","Φ","φ","ϕ","☎","Π","π","ϖ","ℎ","⨣","⨢","+","⨥","⩲","±","⨦","⨧","⨕","𝕡","ℙ","£","⪷","⪻","≺","≼","⪯","≾","⪹","⪵","⋨","⪳","′","″","∏","⌮","⌒","⌓","∝","⊰","𝒫","𝓅","Ψ","ψ"," ","𝔔","𝔮","𝕢","ℚ","⁗","𝒬","𝓆","⨖","?","\"","⇛","∽̱","Ŕ","ŕ","√","⦳","⟩","⟫","⦒","⦥","»","⥵","⇥","⤠","⤳","→","↠","⤞","⥅","⥴","⤖","↣","↝","⤚","⤜","∶","❳","}","]","⦌","⦎","⦐","Ř","ř","Ŗ","ŗ","⌉","Р","р","⤷","⥩","↳","ℜ","ℛ","ℝ","▭","⥽","⌋","𝔯","⥤","⇀","⥬","Ρ","ρ","ϱ","⇄","⟧","⥝","⥕","⇉","⊢","⥛","⋌","⧐","⊳","⊵","⥏","⥜","⥔","↾","⥓","˚","‏","⎱","⫮","⟭","⇾","⦆","𝕣","⨮","⨵","⥰",")","⦔","⨒","›","𝓇","↱","⋊","▹","⧎","⧴","⥨","℞","Ś","ś","⪸","Š","š","⪼","≻","≽","⪰","⪴","Ş","ş","Ŝ","ŝ","⪺","⪶","⋩","⨓","≿","С","с","⋅","⩦","⇘","§",";","⤩","✶","𝔖","𝔰","♯","Щ","щ","Ш","ш","↑","­","Σ","σ","ς","∼","⩪","≃","⪞","⪠","⪝","⪟","≆","⨤","⥲","⨳","⧤","⌣","⪪","⪬","⪬︀","Ь","ь","⌿","⧄","/","𝕊","𝕤","♠","⊓","⊓︀","⊔","⊔︀","⊏","⊑","⊐","⊒","□","𝒮","𝓈","⋆","☆","⊂","⋐","⪽","⫅","⊆","⫃","⫁","⫋","⊊","⪿","⥹","⫇","⫕","⫓","∑","♪","¹","²","³","⊃","⋑","⪾","⫘","⫆","⊇","⫄","⟉","⫗","⥻","⫂","⫌","⊋","⫀","⫈","⫔","⫖","⇙","⤪","ß","\t","⌖","Τ","τ","Ť","ť","Ţ","ţ","Т","т","⃛","⌕","𝔗","𝔱","∴","Θ","θ","ϑ","  "," ","Þ","þ","⨱","×","⨰","⌶","⫱","𝕋","𝕥","⫚","‴","™","▵","≜","◬","⨺","⨹","⧍","⨻","⏢","𝒯","𝓉","Ц","ц","Ћ","ћ","Ŧ","ŧ","Ú","ú","↟","⥉","Ў","ў","Ŭ","ŭ","Û","û","У","у","⇅","Ű","ű","⥮","⥾","𝔘","𝔲","Ù","ù","⥣","▀","⌜","⌏","◸","Ū","ū","⏟","⏝","⊎","Ų","ų","𝕌","𝕦","⤒","↕","υ","ϒ","Υ","⇈","⌝","⌎","Ů","ů","◹","𝒰","𝓊","⋰","Ũ","ũ","Ü","ü","⦧","⦜","⊊︀","⫋︀","⊋︀","⫌︀","⫨","⫫","⫩","В","в","⊩","⊫","⫦","⊻","≚","⋮","|","‖","❘","≀","𝔙","𝔳","𝕍","𝕧","𝒱","𝓋","⊪","⦚","Ŵ","ŵ","⩟","≙","℘","𝔚","𝔴","𝕎","𝕨","𝒲","𝓌","𝔛","𝔵","Ξ","ξ","⋻","𝕏","𝕩","𝒳","𝓍","Ý","ý","Я","я","Ŷ","ŷ","Ы","ы","¥","𝔜","𝔶","Ї","ї","𝕐","𝕪","𝒴","𝓎","Ю","ю","ÿ","Ÿ","Ź","ź","Ž","ž","З","з","Ż","ż","ℨ","Ζ","ζ","𝔷","Ж","ж","⇝","𝕫","𝒵","𝓏","‍","‌","regexEscape","escapeMap","regexInvalidEntity","regexInvalidRawCodePoint","regexDecode","decodeMap","Aacute","aacute","Abreve","abreve","ac","acd","acE","Acirc","acirc","acute","Acy","acy","AElig","aelig","af","Afr","afr","Agrave","agrave","alefsym","aleph","Alpha","alpha","Amacr","amacr","amalg","amp","AMP","andand","And","and","andd","andslope","andv","ang","ange","angle","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angmsd","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","Aogon","aogon","Aopf","aopf","apacir","ap","apE","ape","apid","apos","ApplyFunction","approx","approxeq","Aring","aring","Ascr","ascr","Assign","ast","asymp","asympeq","Atilde","atilde","Auml","auml","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","Backslash","Barv","barvee","barwed","Barwed","barwedge","bbrk","bbrktbrk","bcong","Bcy","bcy","bdquo","becaus","because","Because","bemptyv","bepsi","bernou","Bernoullis","Beta","beta","beth","between","Bfr","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","bne","bnequiv","bNot","bnot","Bopf","bopf","bot","bottom","bowtie","boxbox","boxdl","boxdL","boxDl","boxDL","boxdr","boxdR","boxDr","boxDR","boxh","boxH","boxhd","boxHd","boxhD","boxHD","boxhu","boxHu","boxhU","boxHU","boxminus","boxplus","boxtimes","boxul","boxuL","boxUl","boxUL","boxur","boxuR","boxUr","boxUR","boxv","boxV","boxvh","boxvH","boxVh","boxVH","boxvl","boxvL","boxVl","boxVL","boxvr","boxvR","boxVr","boxVR","bprime","breve","Breve","brvbar","bscr","Bscr","bsemi","bsim","bsime","bsolb","bsol","bsolhsub","bull","bullet","bump","bumpE","bumpe","Bumpeq","bumpeq","Cacute","cacute","capand","capbrcup","capcap","cap","Cap","capcup","capdot","CapitalDifferentialD","caps","caret","caron","Cayleys","ccaps","Ccaron","ccaron","Ccedil","ccedil","Ccirc","ccirc","Cconint","ccups","ccupssm","Cdot","cdot","cedil","Cedilla","cemptyv","cent","centerdot","CenterDot","cfr","Cfr","CHcy","chcy","check","checkmark","Chi","chi","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","CircleDot","circledR","circledS","CircleMinus","CirclePlus","CircleTimes","cir","cirE","cire","cirfnint","cirmid","cirscir","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","clubs","clubsuit","colon","Colon","Colone","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","Congruent","conint","Conint","ContourIntegral","copf","Copf","coprod","Coproduct","COPY","copysr","CounterClockwiseContourIntegral","crarr","cross","Cross","Cscr","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cupbrcap","cupcap","CupCap","cup","Cup","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","dagger","Dagger","daleth","darr","Darr","dArr","dash","Dashv","dashv","dbkarow","dblac","Dcaron","dcaron","Dcy","dcy","ddagger","ddarr","DD","dd","DDotrahd","ddotseq","deg","Del","Delta","demptyv","dfisht","Dfr","dfr","dHar","dharl","dharr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","diam","diamond","Diamond","diamondsuit","diams","die","DifferentialD","digamma","disin","div","divide","divideontimes","divonx","DJcy","djcy","dlcorn","dlcrop","dollar","Dopf","dopf","Dot","dot","DotDot","doteq","doteqdot","DotEqual","dotminus","dotplus","dotsquare","doublebarwedge","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrowBar","downarrow","DownArrow","Downarrow","DownArrowUpArrow","DownBreve","downdownarrows","downharpoonleft","downharpoonright","DownLeftRightVector","DownLeftTeeVector","DownLeftVectorBar","DownLeftVector","DownRightTeeVector","DownRightVectorBar","DownRightVector","DownTeeArrow","DownTee","drbkarow","drcorn","drcrop","Dscr","dscr","DScy","dscy","dsol","Dstrok","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","DZcy","dzcy","dzigrarr","Eacute","eacute","easter","Ecaron","ecaron","Ecirc","ecirc","ecir","ecolon","Ecy","ecy","eDDot","Edot","edot","eDot","ee","efDot","Efr","efr","eg","Egrave","egrave","egs","egsdot","el","Element","elinters","ell","els","elsdot","Emacr","emacr","emptyset","EmptySmallSquare","emptyv","EmptyVerySmallSquare","emsp13","emsp14","emsp","ENG","eng","ensp","Eogon","eogon","Eopf","eopf","epar","eparsl","eplus","epsi","Epsilon","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","Equal","EqualTilde","equest","Equilibrium","equiv","equivDD","eqvparsl","erarr","erDot","escr","Escr","esdot","Esim","esim","Eta","eta","ETH","eth","Euml","euml","euro","excl","exist","Exists","expectation","exponentiale","ExponentialE","fallingdotseq","Fcy","fcy","female","ffilig","fflig","ffllig","Ffr","ffr","filig","FilledSmallSquare","FilledVerySmallSquare","fjlig","flat","fllig","fltns","fnof","Fopf","fopf","forall","ForAll","fork","forkv","Fouriertrf","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","fscr","Fscr","gacute","Gamma","gamma","Gammad","gammad","gap","Gbreve","gbreve","Gcedil","Gcirc","gcirc","Gcy","gcy","Gdot","gdot","ge","gE","gEl","gel","geq","geqq","geqslant","gescc","ges","gesdot","gesdoto","gesdotol","gesl","gesles","Gfr","gfr","gg","Gg","ggg","gimel","GJcy","gjcy","gla","gl","glE","glj","gnap","gnapprox","gne","gnE","gneq","gneqq","gnsim","Gopf","gopf","grave","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","gscr","gsim","gsime","gsiml","gtcc","gtcir","gt","GT","Gt","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","Hacek","hairsp","half","hamilt","HARDcy","hardcy","harrcir","harr","hArr","harrw","Hat","hbar","Hcirc","hcirc","hearts","heartsuit","hellip","hercon","hfr","Hfr","HilbertSpace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","Hopf","horbar","HorizontalLine","hscr","Hscr","hslash","Hstrok","hstrok","HumpDownHump","HumpEqual","hybull","hyphen","Iacute","iacute","ic","Icirc","icirc","Icy","icy","Idot","IEcy","iecy","iexcl","iff","ifr","Ifr","Igrave","igrave","ii","iiiint","iiint","iinfin","iiota","IJlig","ijlig","Imacr","imacr","image","ImaginaryI","imagline","imagpart","imath","Im","imof","imped","Implies","incare","in","infin","infintie","inodot","intcal","int","Int","integers","Integral","intercal","Intersection","intlarhk","intprod","InvisibleComma","InvisibleTimes","IOcy","iocy","Iogon","iogon","Iopf","iopf","Iota","iota","iprod","iquest","iscr","Iscr","isin","isindot","isinE","isins","isinsv","isinv","it","Itilde","itilde","Iukcy","iukcy","Iuml","iuml","Jcirc","jcirc","Jcy","jcy","Jfr","jfr","jmath","Jopf","jopf","Jscr","jscr","Jsercy","jsercy","Jukcy","jukcy","Kappa","kappa","kappav","Kcedil","kcedil","Kcy","kcy","Kfr","kfr","kgreen","KHcy","khcy","KJcy","kjcy","Kopf","kopf","Kscr","kscr","lAarr","Lacute","lacute","laemptyv","lagran","Lambda","lambda","lang","Lang","langd","langle","lap","Laplacetrf","laquo","larrb","larrbfs","larr","Larr","lArr","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","latail","lAtail","lat","late","lates","lbarr","lBarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","Lcaron","lcaron","Lcedil","lcedil","lceil","lcub","Lcy","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","le","lE","LeftAngleBracket","LeftArrowBar","leftarrow","LeftArrow","Leftarrow","LeftArrowRightArrow","leftarrowtail","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVectorBar","LeftDownVector","LeftFloor","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","LeftRightArrow","Leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","LeftRightVector","LeftTeeArrow","LeftTee","LeftTeeVector","leftthreetimes","LeftTriangleBar","LeftTriangle","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVectorBar","LeftUpVector","LeftVectorBar","LeftVector","lEg","leg","leq","leqq","leqslant","lescc","les","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","LessEqualGreater","LessFullEqual","LessGreater","lessgtr","LessLess","lesssim","LessSlantEqual","LessTilde","lfisht","lfloor","Lfr","lfr","lg","lgE","lHar","lhard","lharu","lharul","lhblk","LJcy","ljcy","llarr","ll","Ll","llcorner","Lleftarrow","llhard","lltri","Lmidot","lmidot","lmoustache","lmoust","lnap","lnapprox","lne","lnE","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","LongLeftArrow","Longleftarrow","longleftrightarrow","LongLeftRightArrow","Longleftrightarrow","longmapsto","longrightarrow","LongRightArrow","Longrightarrow","looparrowleft","looparrowright","lopar","Lopf","lopf","loplus","lotimes","lowast","lowbar","LowerLeftArrow","LowerRightArrow","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","lscr","Lscr","lsh","Lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","Lstrok","lstrok","ltcc","ltcir","lt","LT","Lt","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar","lurdshar","luruhar","lvertneqq","lvnE","macr","male","malt","maltese","Map","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","Mcy","mcy","mdash","mDDot","measuredangle","MediumSpace","Mellintrf","Mfr","mfr","mho","micro","midast","midcir","mid","middot","minusb","minus","minusd","minusdu","MinusPlus","mlcp","mldr","mnplus","models","Mopf","mopf","mp","mscr","Mscr","mstpos","Mu","mu","multimap","mumap","nabla","Nacute","nacute","nang","nap","napE","napid","napos","napprox","natural","naturals","natur","nbsp","nbump","nbumpe","ncap","Ncaron","ncaron","Ncedil","ncedil","ncong","ncongdot","ncup","Ncy","ncy","ndash","nearhk","nearr","neArr","nearrow","ne","nedot","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","nequiv","nesear","nesim","NestedGreaterGreater","NestedLessLess","NewLine","nexist","nexists","Nfr","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","nGg","ngsim","nGt","ngt","ngtr","nGtv","nharr","nhArr","nhpar","ni","nis","nisd","niv","NJcy","njcy","nlarr","nlArr","nldr","nlE","nle","nleftarrow","nLeftarrow","nleftrightarrow","nLeftrightarrow","nleq","nleqq","nleqslant","nles","nless","nLl","nlsim","nLt","nlt","nltri","nltrie","nLtv","nmid","NoBreak","NonBreakingSpace","nopf","Nopf","Not","not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","notin","notindot","notinE","notinva","notinvb","notinvc","NotLeftTriangleBar","NotLeftTriangle","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","notni","notniva","notnivb","notnivc","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangleBar","NotRightTriangle","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","nparallel","npar","nparsl","npart","npolint","npr","nprcue","nprec","npreceq","npre","nrarrc","nrarr","nrArr","nrarrw","nrightarrow","nRightarrow","nrtri","nrtrie","nsc","nsccue","nsce","Nscr","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","Ntilde","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","Nu","nu","numero","numsp","nvap","nvdash","nvDash","nVdash","nVDash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwarhk","nwarr","nwArr","nwarrow","nwnear","Oacute","oacute","oast","Ocirc","ocirc","ocir","Ocy","ocy","odash","Odblac","odblac","odiv","odot","odsold","OElig","oelig","ofcir","Ofr","ofr","ogon","Ograve","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","Omacr","omacr","Omega","omega","Omicron","omicron","omid","ominus","Oopf","oopf","opar","OpenCurlyDoubleQuote","OpenCurlyQuote","operp","oplus","orarr","Or","or","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oS","Oscr","oscr","Oslash","oslash","osol","Otilde","otilde","otimesas","Otimes","otimes","Ouml","ouml","ovbar","OverBar","OverBrace","OverBracket","OverParenthesis","para","parallel","par","parsim","parsl","PartialD","Pcy","pcy","percnt","period","permil","perp","pertenk","Pfr","pfr","Phi","phi","phiv","phmmat","phone","Pi","pi","pitchfork","piv","planck","planckh","plankv","plusacir","plusb","pluscir","plus","plusdo","plusdu","pluse","PlusMinus","plusmn","plussim","plustwo","pm","Poincareplane","pointint","popf","Popf","pound","prap","Pr","pr","prcue","precapprox","prec","preccurlyeq","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","preceq","precnapprox","precneqq","precnsim","pre","prE","precsim","prime","Prime","primes","prnap","prnE","prnsim","prod","Product","profalar","profline","profsurf","Proportional","Proportion","propto","prsim","prurel","Pscr","pscr","Psi","psi","puncsp","Qfr","qfr","qint","qopf","Qopf","qprime","Qscr","qscr","quaternions","quatint","quest","questeq","quot","QUOT","rAarr","race","Racute","racute","radic","raemptyv","rang","Rang","rangd","range","rangle","raquo","rarrap","rarrb","rarrbfs","rarrc","rarr","Rarr","rArr","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","Rarrtl","rarrtl","rarrw","ratail","rAtail","ratio","rationals","rbarr","rBarr","RBarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","Rcaron","rcaron","Rcedil","rcedil","rceil","rcub","Rcy","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","real","realine","realpart","reals","Re","rect","reg","REG","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","rfisht","rfloor","rfr","Rfr","rHar","rhard","rharu","rharul","Rho","rho","rhov","RightAngleBracket","RightArrowBar","rightarrow","RightArrow","Rightarrow","RightArrowLeftArrow","rightarrowtail","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVectorBar","RightDownVector","RightFloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","RightTeeArrow","RightTee","RightTeeVector","rightthreetimes","RightTriangleBar","RightTriangle","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVectorBar","RightUpVector","RightVectorBar","RightVector","ring","risingdotseq","rlarr","rlhar","rlm","rmoustache","rmoust","rnmid","roang","roarr","robrk","ropar","ropf","Ropf","roplus","rotimes","RoundImplies","rpar","rpargt","rppolint","rrarr","Rrightarrow","rsaquo","rscr","Rscr","rsh","Rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","RuleDelayed","ruluhar","rx","Sacute","sacute","sbquo","scap","Scaron","scaron","Sc","sc","sccue","sce","scE","Scedil","scedil","Scirc","scirc","scnap","scnE","scnsim","scpolint","scsim","Scy","scy","sdotb","sdot","sdote","searhk","searr","seArr","searrow","sect","semi","seswar","setminus","setmn","sext","Sfr","sfr","sfrown","sharp","SHCHcy","shchcy","SHcy","shcy","ShortDownArrow","ShortLeftArrow","shortmid","shortparallel","ShortRightArrow","ShortUpArrow","shy","Sigma","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","SmallCircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","SOFTcy","softcy","solbar","solb","sol","Sopf","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","Sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","square","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","squarf","squ","squf","srarr","Sscr","sscr","ssetmn","ssmile","sstarf","Star","star","starf","straightepsilon","straightphi","strns","sub","Sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","subset","Subset","subseteq","subseteqq","SubsetEqual","subsetneq","subsetneqq","subsim","subsub","subsup","succapprox","succ","succcurlyeq","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","succeq","succnapprox","succneqq","succnsim","succsim","SuchThat","sum","Sum","sung","sup1","sup2","sup3","sup","Sup","supdot","supdsub","supE","supe","supedot","Superset","SupersetEqual","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","Supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swarr","swArr","swarrow","swnwar","szlig","Tab","Tau","tau","tbrk","Tcaron","tcaron","Tcedil","tcedil","Tcy","tcy","tdot","telrec","Tfr","tfr","there4","therefore","Therefore","Theta","theta","thetasym","thetav","thickapprox","thicksim","ThickSpace","ThinSpace","thinsp","thkap","thksim","THORN","thorn","tilde","Tilde","TildeEqual","TildeFullEqual","TildeTilde","timesbar","timesb","times","timesd","tint","toea","topbot","topcir","top","Topf","topf","topfork","tosa","tprime","trade","TRADE","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","TripleDot","triplus","trisb","tritime","trpezium","Tscr","tscr","TScy","tscy","TSHcy","tshcy","Tstrok","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","Uacute","uacute","uarr","Uarr","uArr","Uarrocir","Ubrcy","ubrcy","Ubreve","ubreve","Ucirc","ucirc","Ucy","ucy","udarr","Udblac","udblac","udhar","ufisht","Ufr","ufr","Ugrave","ugrave","uHar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","Umacr","umacr","uml","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","uogon","Uopf","uopf","UpArrowBar","uparrow","UpArrow","Uparrow","UpArrowDownArrow","updownarrow","UpDownArrow","Updownarrow","UpEquilibrium","upharpoonleft","upharpoonright","uplus","UpperLeftArrow","UpperRightArrow","upsi","Upsi","upsih","Upsilon","upsilon","UpTeeArrow","UpTee","upuparrows","urcorn","urcorner","urcrop","Uring","uring","urtri","Uscr","uscr","utdot","Utilde","utilde","utri","utrif","uuarr","Uuml","uuml","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","vArr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vBar","Vbar","vBarv","Vcy","vcy","vdash","vDash","Vdash","VDash","Vdashl","veebar","vee","Vee","veeeq","vellip","verbar","Verbar","vert","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","vfr","vltri","vnsub","vnsup","Vopf","vopf","vprop","vrtri","Vscr","vscr","vsubnE","vsubne","vsupnE","vsupne","Vvdash","vzigzag","Wcirc","wcirc","wedbar","wedge","Wedge","wedgeq","weierp","Wfr","wfr","Wopf","wopf","wp","wr","wreath","Wscr","wscr","xcap","xcirc","xcup","xdtri","Xfr","xfr","xharr","xhArr","Xi","xi","xlarr","xlArr","xmap","xnis","xodot","Xopf","xopf","xoplus","xotime","xrarr","xrArr","Xscr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","Yacute","yacute","YAcy","yacy","Ycirc","ycirc","Ycy","ycy","yen","Yfr","yfr","YIcy","yicy","Yopf","yopf","Yscr","yscr","YUcy","yucy","yuml","Yuml","Zacute","zacute","Zcaron","zcaron","Zcy","zcy","Zdot","zdot","zeetrf","ZeroWidthSpace","Zeta","zeta","zfr","Zfr","ZHcy","zhcy","zigrarr","zopf","Zopf","Zscr","zscr","zwj","zwnj","decodeMapLegacy","decodeMapNumeric","0","128","130","131","132","133","134","135","136","137","138","139","140","142","145","146","147","148","149","150","151","152","153","154","155","156","158","159","invalidReferenceCodePoints","has","propertyName","contains","merge","defaults","codePointToSymbol","strict","parseError","hexEscape","symbol","encodeEverything","useNamedReferences","allowUnsafeSymbols","$0","high","low","html","$1","$2","$3","$4","$5","$6","$7","semicolon","hexDigits","reference","isAttributeValue","unescape",48,"msec","delay","factory","./when",49,"makePromise","Scheduler","async","asap","scheduler","./Scheduler","./env","./makePromise",50,"_async","_running","_queue","_queueLen","_afterQueue","_afterQueueLen","drain","_drain","enqueue","task","run","afterQueue",51,"TimeoutError","captureStackTrace",52,"makeApply","Promise","thisArg","_defer","callAndResolve","_handler","fold","callAndResolveNext","tryCatchResolve","resolver",53,"applier","any","promises","handleFulfill","handleReject","resolved","pending","become","_visitRemaining","visit","some","fulfill","results","nFulfill","nReject","notify","_traverse","predicate","keep","filterSync","filtered","settle","all","settleOne","toPromise","fulfilled","rejected","_unreport","liftCombine","reduceRight","z","applyFold","spread","onFulfilled","../apply","../state",54,"rejectInvalidPredicate","evaluatePredicate","maybeThenable","identity","createCatchFilter","runSideEffect","propagate","propagateValue","origCatch","onResult","onError","otherwise","onRejected","ensure","orElse","defaultValue","tap","onFulfilledSideEffect",55,"_beget","to",56,57,"iterate","condition","unfold","unspool","newSeed","seed",58,"progress","onProgress",59,"ms","setTimer","handleDelay","resolveDelay","onTimeout","reason","clearTimer","../TimeoutError","../env",60,"throwit","report","handled","reported","logError","id","unreport","logInfo","formatObject","tasks","running","flush","localConsole","info","onPotentiallyUnhandledRejection","rejection","onPotentiallyUnhandledRejectionHandled","onFatalRejection","../format",61,"withThis","chain",62,"hasMutationObserver","WebKitMutationObserver","initMutationObserver","scheduled","node","createTextNode","characterData","MutationObs","capturedSetTimeout","clearTimeout","vertxRequire","vertx","cancelTimer","runOnLoop","runOnContext",63,"stack","tryStringify",64,"environment","Handler","init","promiseResolve","promiseReject","promiseNotify","Pending","isPromise","Async","getHandler","Rejected","never","foreverPendingPromise","defer","begetFrom","context","traverseWith","snd","traverse","tryCatch2","tryMap","mapAt","traverseAt","settleAt","Fulfilled","getHandlerMaybeThenable","visitRemaining","markAsHandled","runRace","getHandlerUntrusted","untrustedThen","Thenable","FailIfRejected","inheritedContext","createContext","consumers","thenable","AssimilateTask","errorId","_report","ReportTask","UnreportTask","cycle","ContinuationTask","continuation","ProgressTask","_then","tryAssimilate","Fold","failIfRejected","runContinuation1","enterContext","tryCatchReject","exitContext","runContinuation3","tryCatchReject3","runNotify","tryCatchReturn","inherit","Parent","Child","objectCreate","initEmitRejection","CustomEvent","hasCustomEvent","detail","bubbles","cancelable","dispatchEvent","emitRejection","fail","_state","cont","foreverPendingHandler","_resolve","_reject","_notify",65,"toPendingState","toRejectedState","toFulfilledState",66,"lift","attempt","Deferred","isPromiseLike","mapFunc","timed","generate","unhandledRejection","feature","./lib/Promise","./lib/TimeoutError","./lib/apply","./lib/decorators/array","./lib/decorators/flow","./lib/decorators/fold","./lib/decorators/inspect","./lib/decorators/iterate","./lib/decorators/progress","./lib/decorators/timed","./lib/decorators/unhandledRejection","./lib/decorators/with"],"mappings":"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","file":"Snoocore-browser.min.js","sourcesContent":["!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var o;\"undefined\"!=typeof window?o=window:\"undefined\"!=typeof global?o=global:\"undefined\"!=typeof self&&(o=self),o.Snoocore=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _interopRequireDefault = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n// Node.js libraries\n\nvar _events = require('events');\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _util = require('util');\n\nvar _util2 = _interopRequireDefault(_util);\n\n// Our modules\n\nvar _Request = require('./Request');\n\nvar _Request2 = _interopRequireDefault(_Request);\n\nvar _RedditRequest = require('./RedditRequest');\n\nvar _RedditRequest2 = _interopRequireDefault(_RedditRequest);\n\nvar _Throttle = require('./Throttle');\n\nvar _Throttle2 = _interopRequireDefault(_Throttle);\n\nvar _UserConfig = require('./UserConfig');\n\nvar _UserConfig2 = _interopRequireDefault(_UserConfig);\n\nvar _OAuth = require('./OAuth');\n\nvar _OAuth2 = _interopRequireDefault(_OAuth);\n\nvar _fileHelper = require('./https/file');\n\nvar _fileHelper2 = _interopRequireDefault(_fileHelper);\n\nvar Snoocore = (function (_events$EventEmitter) {\n  function Snoocore(userConfiguration) {\n    var _this = this;\n\n    _classCallCheck(this, Snoocore);\n\n    _get(Object.getPrototypeOf(Snoocore.prototype), 'constructor', this).call(this);\n\n    // @TODO - this is a \"god object\" of sorts.\n    this._userConfig = new _UserConfig2['default'](userConfiguration);\n\n    this._throttle = new _Throttle2['default'](this._userConfig.throttle);\n\n    this._request = new _Request2['default'](this._throttle);\n\n    this._request.on('response_error', function (responseError) {\n      _this.emit('response_error', responseError);\n    });\n\n    // Two OAuth instances. One for authenticated users, and another for\n    // Application only OAuth. Two are needed in the instance where\n    // a user wants to bypass authentication for a call - we don't want\n    // to waste time by creating a new app only instance, authenticating,\n    // etc.\n    this.oauth = new _OAuth2['default'](this._userConfig, this._request);\n    this.oauthAppOnly = new _OAuth2['default'](this._userConfig, this._request);\n\n    // Expose OAuth functions in here\n    ['getExplicitAuthUrl', 'getImplicitAuthUrl', 'getAuthUrl', 'auth', 'refresh', 'deauth', 'getRefreshToken', 'getAccessToken', 'setRefreshToken', 'setAccessToken', 'hasRefreshToken', 'hasAccessToken'].forEach(function (fn) {\n      _this[fn] = _this.oauth[fn].bind(_this.oauth);\n    });\n\n    this.appOnlyAuth = this.oauthAppOnly.applicationOnlyAuth.bind(this.oauthAppOnly);\n\n    // Bubble up the  events\n    this.oauth.on('access_token_refreshed', function (accessToken) {\n      _this.emit('access_token_refreshed', accessToken);\n    });\n\n    this._redditRequest = new _RedditRequest2['default'](this._userConfig, this._request, this.oauth, this.oauthAppOnly);\n\n    this._redditRequest.on('access_token_expired', function (responseError) {\n      _this.emit('access_token_expired', responseError);\n    });\n\n    this._redditRequest.on('rate_limit', function (rateLimitData) {\n      _this.emit('rate_limit', rateLimitData);\n    });\n\n    this._redditRequest.on('rate_limit_reached', function (rateLimitData) {\n      // let the user know that they have gone over\n      _this.emit('rate_limit_reached', rateLimitData);\n      // Delay the next call until the rate limit reset occurs\n      _this._throttle.addTime(rateLimitData.rateLimitReset * 1000);\n    });\n\n    /*\n       Make this._redditRequest.path the primary function that we return, but\n       stick the rest of the available functions on the prototype so we\n       can use them as well.\n     */\n    var path = this._redditRequest.path.bind(this._redditRequest);\n\n    var key = undefined;\n    for (key in this) {\n      path[key] = this[key];\n    }\n\n    return path;\n  }\n\n  _inherits(Snoocore, _events$EventEmitter);\n\n  _createClass(Snoocore, null, [{\n    key: 'version',\n    get: function () {\n      return '3.0.2';\n    }\n  }, {\n    key: 'file',\n    value: function file() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _fileHelper2['default'].apply(undefined, args);\n    }\n  }]);\n\n  return Snoocore;\n})(_events2['default'].EventEmitter);\n\nexports['default'] = Snoocore;\nmodule.exports = exports['default'];\n//# sourceMappingURL=Snoocore.js.map\n},{\"./OAuth\":3,\"./RedditRequest\":4,\"./Request\":5,\"./Throttle\":7,\"./UserConfig\":8,\"./https/file\":9,\"events\":18,\"util\":46}],2:[function(require,module,exports){\n'use strict';\n\nvar _interopRequireWildcard = function (obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (typeof obj === 'object' && obj !== null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } };\n\nvar _interopRequireDefault = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\n/*\n   Takes an url, and an object of url parameters and replaces\n   them, e.g.\n\n   endpointUrl:\n   'http://example.com/$foo/$bar/test.html'\n\n   this.givenArgs: { $foo: 'hello', $bar: 'world' }\n\n   would output:\n\n   'http://example.com/hello/world/test.html'\n */\nexports.replaceUrlParams = replaceUrlParams;\n\nvar _urlLib = require('url');\n\nvar _urlLib2 = _interopRequireDefault(_urlLib);\n\nvar _import = require('./utils');\n\nvar u = _interopRequireWildcard(_import);\n\nvar Endpoint = (function () {\n  function Endpoint(userConfig, hostname, method, path) {\n    var headers = arguments[4] === undefined ? {} : arguments[4];\n    var givenArgs = arguments[5] === undefined ? {} : arguments[5];\n    var givenContextOptions = arguments[6] === undefined ? {} : arguments[6];\n    var port = arguments[7] === undefined ? 80 : arguments[7];\n\n    _classCallCheck(this, Endpoint);\n\n    this._userConfig = userConfig;\n\n    this.hostname = hostname;\n    this.port = port;\n    this.method = method;\n    this.path = path;\n    this.headers = headers;\n\n    this.contextOptions = this.normalizeContextOptions(givenContextOptions);\n\n    this.givenArgs = givenArgs;\n    this.args = this.buildArgs();\n    this.url = this.buildUrl();\n    this.computedPath = _urlLib2['default'].parse(this.url).path;\n  }\n\n  _createClass(Endpoint, [{\n    key: 'setHeaders',\n    value: function setHeaders(headers) {\n      this.headers = headers;\n    }\n  }, {\n    key: 'normalizeContextOptions',\n\n    /*\n       Returns a set of options that effect how each call to reddit behaves.\n     */\n    value: function normalizeContextOptions(givenContextOptions) {\n\n      var cOptions = givenContextOptions || {};\n\n      // by default we do not bypass authentication\n      cOptions.bypassAuth = u.thisOrThat(cOptions.bypassAuth, false);\n\n      // decode html enntities for this call?\n      cOptions.decodeHtmlEntities = u.thisOrThat(cOptions.decodeHtmlEntities, this._userConfig.decodeHtmlEntities);\n\n      // how many attempts left do we have to retry an endpoint?\n\n      // use the given retryAttemptsLeft, or the retryAttempts passed in the\n      // context options if not specified\n      cOptions.retryAttemptsLeft = u.thisOrThat(cOptions.retryAttemptsLeft, cOptions.retryAttempts);\n\n      // use the given retryAttemptsLeft, or the retryAttempts passed in the\n      // user configuration\n      cOptions.retryAttemptsLeft = u.thisOrThat(cOptions.retryAttemptsLeft, this._userConfig.retryAttempts);\n\n      // delay between retrying an endpoint\n      cOptions.retryDelay = u.thisOrThat(cOptions.retryDelay, this._userConfig.retryDelay);\n\n      // milliseconds before a request times out\n      cOptions.requestTimeout = u.thisOrThat(cOptions.requestTimeout, this._userConfig.requestTimeout);\n\n      // how many reauthentication attempts do we have left?\n      cOptions.reauthAttemptsLeft = u.thisOrThat(cOptions.reauthAttemptsLeft, cOptions.retryAttemptsLeft);\n\n      return cOptions;\n    }\n  }, {\n    key: 'buildArgs',\n\n    /*\n       Build the arguments that we will send to reddit in our\n       request. These customize the request that we send to reddit\n     */\n    value: function buildArgs() {\n      var args = {};\n\n      // Skip any url parameters (e.g. items that begin with $)\n      for (var key in this.givenArgs) {\n        if (key.substring(0, 1) !== '$') {\n          args[key] = this.givenArgs[key];\n        }\n      }\n\n      var apiType = u.thisOrThat(this.contextOptions.api_type, this._userConfig.apiType);\n\n      if (apiType) {\n        args.api_type = apiType;\n      }\n\n      return args;\n    }\n  }, {\n    key: 'buildUrl',\n\n    /*\n       Builds the URL that we will query reddit with.\n     */\n    value: function buildUrl() {\n      var url = this.hostname;\n\n      if (this.port !== 80) {\n        url += ':' + this.port;\n      }\n\n      var path = this.path;\n      if (path.substring(0, 1) !== '/') {\n        path = '/' + path;\n      }\n\n      url += path;\n\n      url = replaceUrlParams(url, this.givenArgs);\n      url = url.replace('//', '/');\n      url = 'https://' + url;\n      return url;\n    }\n  }]);\n\n  return Endpoint;\n})();\n\nexports['default'] = Endpoint;\n\nfunction replaceUrlParams(endpointUrl, givenArgs) {\n  // nothing to replace!\n  if (endpointUrl.indexOf('$') === -1) {\n    return endpointUrl;\n  }\n\n  // pull out variables from the url\n  var params = endpointUrl.match(/\\$[\\w\\.]+/g);\n\n  // replace with the argument provided\n  params.forEach(function (param) {\n    if (typeof givenArgs[param] === 'undefined') {\n      throw new Error('missing required url parameter ' + param);\n    }\n    endpointUrl = endpointUrl.replace(param, givenArgs[param]);\n  });\n\n  return endpointUrl;\n}\n//# sourceMappingURL=Endpoint.js.map\n},{\"./utils\":13,\"url\":44}],3:[function(require,module,exports){\n(function (Buffer){\n'use strict';\n\nvar _interopRequireWildcard = function (obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (typeof obj === 'object' && obj !== null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } };\n\nvar _interopRequireDefault = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _events = require('events');\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _querystring = require('querystring');\n\nvar _querystring2 = _interopRequireDefault(_querystring);\n\nvar _util = require('util');\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _urlLib = require('url');\n\nvar _urlLib2 = _interopRequireDefault(_urlLib);\n\nvar _when = require('when');\n\nvar _when2 = _interopRequireDefault(_when);\n\nvar _import = require('./utils');\n\nvar u = _interopRequireWildcard(_import);\n\nvar _Endpoint = require('./Endpoint');\n\nvar _Endpoint2 = _interopRequireDefault(_Endpoint);\n\nvar _ResponseError = require('./ResponseError');\n\nvar _ResponseError2 = _interopRequireDefault(_ResponseError);\n\n/*\n   Various OAuth types\n */\nvar TOKEN = {\n  EXPLICIT: 'explicit',\n  IMPLICIT: 'implicit',\n  SCRIPT: 'script',\n  APP_ONLY: 'app_only',\n  REFRESH: 'refresh',\n  INVALID: 'invalid_token' // Represents an unset/invalid token\n};\n\nexports.TOKEN = TOKEN;\n/*\n   Represents a single OAuth instance. Used primarily for internal\n   use within the Snoocore class to manage two OAuth instances -\n   Applicaton Only and an Authenticated Session.\n\n */\n\nvar OAuth = (function (_events$EventEmitter) {\n  function OAuth(userConfig, request) {\n    _classCallCheck(this, OAuth);\n\n    _get(Object.getPrototypeOf(OAuth.prototype), 'constructor', this).call(this);\n\n    this._userConfig = userConfig;\n\n    this._request = request;\n\n    this.accessToken = TOKEN.INVALID;\n    this.refreshToken = TOKEN.INVALID;\n    this.tokenType = 'bearer';\n\n    this.scope = this.normalizeScope();\n  }\n\n  _inherits(OAuth, _events$EventEmitter);\n\n  _createClass(OAuth, [{\n    key: 'normalizeScope',\n\n    /*\n       Takes a given scope, and normalizes it to a proper string.\n     */\n    value: function normalizeScope() {\n      var scope = undefined;\n      // Set to empty string if the scope if not set\n      if (typeof this._userConfig.oauth.scope === 'undefined') {\n        scope = '';\n      }\n      // convert an array into a string\n      else if (_util2['default'].isArray(this._userConfig.oauth.scope)) {\n        scope = this._userConfig.oauth.scope.join(',');\n      }\n      return scope;\n    }\n  }, {\n    key: 'hasRefreshToken',\n\n    /*\n       Do we have a refresh token defined?\n     */\n    value: function hasRefreshToken() {\n      return this.refreshToken !== TOKEN.INVALID;\n    }\n  }, {\n    key: 'hasAccessToken',\n\n    /*\n       Do we have an access token defined?\n     */\n    value: function hasAccessToken() {\n      return this.accessToken !== TOKEN.INVALID;\n    }\n  }, {\n    key: 'getRefreshToken',\n\n    /*\n       Get the current refresh token used for this instance.\n     */\n    value: function getRefreshToken() {\n      if (this.refreshToken === TOKEN.INVALID) {\n        return undefined;\n      }\n      return this.refreshToken;\n    }\n  }, {\n    key: 'getAccessToken',\n\n    /*\n       Get the current access token used for this instance.\n     */\n    value: function getAccessToken() {\n      if (this.accessToken === TOKEN.INVALID) {\n        return undefined;\n      }\n      return this.accessToken;\n    }\n  }, {\n    key: 'setRefreshToken',\n\n    /*\n       Set the current refresh token used for this instance.\n     */\n    value: function setRefreshToken(refreshToken) {\n      this.refreshToken = refreshToken;\n    }\n  }, {\n    key: 'setAccessToken',\n\n    /*\n       Set the current access token used for this instance.\n     */\n    value: function setAccessToken(accessToken) {\n      this.accessToken = accessToken;\n    }\n  }, {\n    key: 'getAuthorizationHeader',\n    value: function getAuthorizationHeader() {\n      return '' + this.tokenType + ' ' + this.accessToken;\n    }\n  }, {\n    key: 'canRefreshAccessToken',\n\n    /*\n       Can we refresh our access token without user intervention?\n     */\n    value: function canRefreshAccessToken() {\n      return this._userConfig.oauth.type === 'script' || this._userConfig.oauth.type === 'explicit' && this._userConfig.oauth.duration === 'permanent' && this.hasRefreshToken();\n    }\n  }, {\n    key: 'getExplicitAuthUrl',\n\n    /*\n       Get the Explicit Auth Url.\n     */\n    value: function getExplicitAuthUrl(state) {\n\n      var query = {};\n\n      query.client_id = this._userConfig.oauth.key;\n      query.state = u.thisOrThat(state, Math.ceil(Math.random() * 1000));\n      query.redirect_uri = this._userConfig.oauth.redirectUri;\n      query.duration = this._userConfig.oauth.duration;\n      query.response_type = 'code';\n      query.scope = this.scope;\n\n      var baseUrl = 'https://' + this._userConfig.serverWWW + '/api/v1/authorize';\n\n      if (this._userConfig.mobile) {\n        baseUrl += '.compact';\n      }\n\n      return baseUrl + '?' + _querystring2['default'].stringify(query);\n    }\n  }, {\n    key: 'getImplicitAuthUrl',\n\n    /*\n       Get the Implicit Auth Url.\n     */\n    value: function getImplicitAuthUrl(state) {\n\n      var query = {};\n\n      query.client_id = this._userConfig.oauth.key;\n      query.state = u.thisOrThat(state, Math.ceil(Math.random() * 1000));\n      query.redirect_uri = this._userConfig.oauth.redirectUri;\n      query.response_type = 'token';\n      query.scope = this.scope;\n\n      var baseUrl = 'https://' + this._userConfig.serverWWW + '/api/v1/authorize';\n\n      if (this._userConfig.mobile) {\n        baseUrl += '.compact';\n      }\n\n      return baseUrl + '?' + _querystring2['default'].stringify(query);\n    }\n  }, {\n    key: 'getAuthUrl',\n    value: function getAuthUrl(state) {\n      switch (this._userConfig.oauth.type) {\n        case TOKEN.EXPLICIT:\n          return this.getExplicitAuthUrl(state);\n        case TOKEN.IMPLICIT:\n          return this.getImplicitAuthUrl(state);\n        default:\n          throw new Error('The oauth type of ' + oauthType + ' does not require an url');\n      }\n    }\n  }, {\n    key: 'getAppOnlyTokenData',\n\n    /*\n       Returns the data needed to request an Applicaton Only\n       OAuth access token.\n     */\n    value: function getAppOnlyTokenData() {\n      var params = {};\n\n      params.scope = this.scope;\n\n      // From the reddit documentation:\n      //\n      // - - -\n      // \"client_credentials\"\n      //\n      // Confidential clients (web apps / scripts) not acting on\n      // behalf of one or more logged out users.\n      //\n      // - - -\n      // \"https://oauth.reddit.com/grants/installed_client\"\n      //\n      // * Installed app types (as these apps are considered\n      // \"non-confidential\", have no secret, and thus, are\n      // ineligible for client_credentials grant.\n      //\n      // * Other apps acting on behalf of one or more \"logged out\" users.\n      //\n      switch (this._userConfig.oauth.type) {\n        case TOKEN.SCRIPT:\n        case TOKEN.EXPLICIT:\n          params.grant_type = 'client_credentials';\n          break;\n        // Also covers case TOKEN.IMPLICIT:\n        default:\n          params.grant_type = 'https://oauth.reddit.com/grants/installed_client';\n          params.device_id = this._userConfig.oauth.deviceId;\n      }\n\n      return params;\n    }\n  }, {\n    key: 'getAuthenticatedTokenData',\n\n    /*\n       Returns the data needed to request an authenticated OAuth\n       access token.\n     */\n    value: function getAuthenticatedTokenData(authorizationCode) {\n      var params = {};\n\n      params.scope = this.scope;\n\n      switch (this._userConfig.oauth.type) {\n        case TOKEN.SCRIPT:\n          params.grant_type = 'password';\n          params.username = this._userConfig.oauth.username;\n          params.password = this._userConfig.oauth.password;\n          break;\n        case TOKEN.EXPLICIT:\n          params.grant_type = 'authorization_code';\n          params.client_id = this._userConfig.oauth.key;\n          params.redirect_uri = this._userConfig.oauth.redirectUri;\n          params.code = authorizationCode;\n          break;\n        default:\n          return _when2['default'].reject(new Error('Invalid OAuth type specified (Authenticated OAuth).'));\n      }\n\n      return params;\n    }\n  }, {\n    key: 'getRefreshTokenData',\n\n    /*\n       Returns the data needed to request a refresh token.\n     */\n    value: function getRefreshTokenData(refreshToken) {\n      var params = {};\n      params.scope = this.scope;\n      params.grant_type = 'refresh_token';\n      params.refresh_token = refreshToken;\n      return params;\n    }\n  }, {\n    key: 'getToken',\n\n    /*\n       A method that sets up a call to receive an access/refresh token.\n     */\n    value: function getToken(tokenEnum) {\n      var options = arguments[1] === undefined ? {} : arguments[1];\n\n      var params = undefined;\n\n      switch (tokenEnum) {\n        case TOKEN.REFRESH:\n          params = this.getRefreshTokenData(options.refreshToken);\n          break;\n        case TOKEN.APP_ONLY:\n          params = this.getAppOnlyTokenData();\n          break;\n        case TOKEN.SCRIPT:\n        case TOKEN.EXPLICIT:\n          params = this.getAuthenticatedTokenData(options.authorizationCode);\n          break;\n      }\n\n      var headers = {};\n      var buff = new Buffer(this._userConfig.oauth.key + ':' + this._userConfig.oauth.secret);\n      var base64 = buff.toString('base64');\n      var auth = 'Basic ' + base64;\n\n      headers.Authorization = auth;\n\n      var endpoint = new _Endpoint2['default'](this._userConfig, this._userConfig.serverWWW, 'post', '/api/v1/access_token', headers, params, {}, this._userConfig.serverWWWPort);\n\n      var responseErrorHandler = function responseErrorHandler(response, endpoint) {\n        if (String(response._status).indexOf('4') === 0) {\n          return _when2['default'].reject(new _ResponseError2['default']('Invalid getToken request', response, endpoint));\n        }\n        // else return the endpoint to try again\n        return _when2['default'].resolve(endpoint);\n      };\n\n      return this._request.https(endpoint, responseErrorHandler).then(function (res) {\n        return JSON.parse(res._body);\n      });\n    }\n  }, {\n    key: 'auth',\n\n    /*\n       Sets the auth data from the oauth module to allow OAuth calls.\n        This method can authenticate with:\n        - Script based OAuth (no parameter)\n       - Raw authentication data\n       - Authorization Code (request_type = \"code\")\n       - Access Token (request_type = \"token\") / Implicit OAuth\n       - Application Only. (void 0, true);\n     */\n    value: function auth(authCodeOrAccessToken, isApplicationOnly) {\n      var _this = this;\n\n      var tokenData = undefined;\n\n      if (isApplicationOnly) {\n        tokenData = this.getToken(TOKEN.APP_ONLY);\n      } else {\n\n        var token = this._userConfig.oauth.type;\n\n        switch (token) {\n          case TOKEN.SCRIPT:\n            tokenData = this.getToken(token);\n            break;\n\n          case TOKEN.EXPLICIT:\n            // auth code in this case\n            tokenData = this.getToken(token, {\n              authorizationCode: authCodeOrAccessToken\n            });\n            break;\n\n          case TOKEN.IMPLICIT:\n            // access token in this case\n            tokenData = {\n              access_token: authCodeOrAccessToken,\n              token_type: 'bearer',\n              expires_in: 3600,\n              scope: this._userConfig.oauth.scope\n            };\n            break;\n\n          default:\n            throw new Error('Setting the auth data is no longer supported.');\n        }\n      }\n\n      return _when2['default'](tokenData).then(function (data) {\n\n        if (typeof data !== 'object') {\n          var str = String(data);\n          return _when2['default'].reject(new Error('There was a problem authenticating:\\n' + str));\n        }\n\n        _this.accessToken = data.access_token;\n        _this.tokenType = data.token_type;\n\n        // If the explicit app used a perminant duration, send\n        // back the refresh token that will be used to re-authenticate\n        // later without user interaction.\n        if (data.refresh_token) {\n          // set the internal refresh token for automatic expiring\n          // access_token management\n          _this.refreshToken = data.refresh_token;\n          return _this.refreshToken;\n        }\n      });\n    }\n  }, {\n    key: 'applicationOnlyAuth',\n\n    /*\n       Only authenticates with Application Only OAuth\n     */\n    value: function applicationOnlyAuth() {\n      return this.auth(void 0, true);\n    }\n  }, {\n    key: 'refresh',\n\n    /*\n       Authenticate with a refresh token.\n     */\n    value: function refresh(refreshToken) {\n      var _this2 = this;\n\n      // use the provided refresh token, or the current\n      // one that we have for this class\n      refreshToken = u.thisOrThat(refreshToken, this.refreshToken);\n\n      return this.getToken(TOKEN.REFRESH, {\n        refreshToken: refreshToken\n      }).then(function (data) {\n        // only set the internal refresh token if reddit\n        // agrees that it was OK and sends back authData\n        _this2.refreshToken = refreshToken;\n\n        _this2.accessToken = data.access_token;\n        _this2.tokenType = data.token_type;\n\n        _this2.emit('access_token_refreshed', _this2.accessToken);\n      });\n    }\n  }, {\n    key: 'deauth',\n\n    /*\n       Clears any authentication data & removes OAuth authentication\n        By default it will only remove the \"access_token\". Specify\n       the users refresh token to revoke that token instead.\n     */\n    value: function deauth(refreshToken) {\n      var _this3 = this;\n\n      // no need to deauth if not authenticated\n      if (!this.hasAccessToken()) {\n        return _when2['default'].resolve();\n      }\n\n      var isRefreshToken = typeof refreshToken === 'string';\n\n      var token = isRefreshToken ? refreshToken : this.accessToken;\n\n      var tokenTypeHint = isRefreshToken ? 'refresh_token' : 'access_token';\n\n      var params = {\n        token: token,\n        token_type_hint: tokenTypeHint\n      };\n\n      var auth = 'Basic ' + new Buffer(this._userConfig.oauth.key + ':' + this._userConfig.oauth.secret).toString('base64');\n\n      var headers = {\n        Authorization: auth\n      };\n\n      var endpoint = new _Endpoint2['default'](this._userConfig, this._userConfig.serverWWW, 'post', '/api/v1/revoke_token', headers, params, {}, this._userConfig.serverWWWPort);\n\n      return this._request.https(endpoint).then(function (response) {\n        // If we did not get back a 204 this then it did not sucessfully\n        // revoke the token\n        if (response._status !== 204) {\n          return _when2['default'].reject(new Error('Unable to revoke the given token'));\n        }\n\n        // clear the data for this OAuth object\n        _this3.accessToken = TOKEN.INVALID;\n        _this3.tokenType = TOKEN.INVALID;\n\n        // only clear the refresh token if one was provided\n        if (isRefreshToken) {\n          _this3.refreshToken = TOKEN.INVALID;\n        }\n      });\n    }\n  }]);\n\n  return OAuth;\n})(_events2['default'].EventEmitter);\n\nexports['default'] = OAuth;\n//# sourceMappingURL=OAuth.js.map\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./Endpoint\":2,\"./ResponseError\":6,\"./utils\":13,\"buffer\":14,\"events\":18,\"querystring\":30,\"url\":44,\"util\":46,\"when\":66}],4:[function(require,module,exports){\n'use strict';\n\nvar _interopRequireDefault = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\n// node modules\n\nvar _util = require('util');\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _events = require('events');\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _urlLib = require('url');\n\nvar _urlLib2 = _interopRequireDefault(_urlLib);\n\n// npm modules\n\nvar _when = require('when');\n\nvar _when2 = _interopRequireDefault(_when);\n\nvar _delay = require('when/delay');\n\nvar _delay2 = _interopRequireDefault(_delay);\n\nvar _he = require('he');\n\nvar _he2 = _interopRequireDefault(_he);\n\n// our modules\n\nvar _Request = require('./Request');\n\nvar _Request2 = _interopRequireDefault(_Request);\n\nvar _Endpoint = require('./Endpoint');\n\nvar _Endpoint2 = _interopRequireDefault(_Endpoint);\n\nvar _ResponseError = require('./ResponseError');\n\nvar _ResponseError2 = _interopRequireDefault(_ResponseError);\n\n/*\n   A collection of functions that deal with requesting data from the\n   reddit API.\n */\n\nvar RedditRequest = (function (_events$EventEmitter) {\n  function RedditRequest(userConfig, request, oauth, oauthAppOnly) {\n    _classCallCheck(this, RedditRequest);\n\n    _get(Object.getPrototypeOf(RedditRequest.prototype), 'constructor', this).call(this);\n    this._request = request;\n    this._userConfig = userConfig;\n    this._oauth = oauth;\n    this._oauthAppOnly = oauthAppOnly;\n  }\n\n  _inherits(RedditRequest, _events$EventEmitter);\n\n  _createClass(RedditRequest, [{\n    key: 'isApplicationOnly',\n\n    /*\n       Currently application only?\n        If we do not have an access token and there is no way\n       to get a new access token then yes! We are application\n       only oauth.\n     */\n    value: function isApplicationOnly() {\n      return !this._oauth.hasAccessToken() && !this._oauth.canRefreshAccessToken();\n    }\n  }, {\n    key: 'isAuthenticated',\n\n    /*\n       Are we currently authenticated?\n     */\n    value: function isAuthenticated() {\n      return this.isApplicationOnly() ? this._oauthAppOnly.hasAccessToken() : this._oauth.hasAccessToken();\n    }\n  }, {\n    key: 'buildHeaders',\n\n    /*\n       Builds up the headers for an endpoint.\n     */\n    value: function buildHeaders() {\n      var contextOptions = arguments[0] === undefined ? {} : arguments[0];\n\n      var headers = {};\n\n      if (this._userConfig.isNode) {\n        // Can't set User-Agent in browser\n        headers['User-Agent'] = this._userConfig.userAgent;\n      }\n\n      if (contextOptions.bypassAuth || this.isApplicationOnly()) {\n        headers.Authorization = this._oauthAppOnly.getAuthorizationHeader();\n      } else {\n        headers.Authorization = this._oauth.getAuthorizationHeader();\n      }\n\n      return headers;\n    }\n  }, {\n    key: 'callRedditApi',\n\n    /*\n       Call the reddit api.\n     */\n    value: function callRedditApi(endpoint) {\n      var _this = this;\n\n      // Authenticate if needed before making a call.\n      //\n      // Eliminates unwanted 401 errors when making initial calls\n      // on Application only OAuth & Script instances where calling\n      // `.auth()` isn't required.\n      var auth = this.isAuthenticated() ? _when2['default'].resolve() : (function () {\n        return _this.authenticate(endpoint).then(function () {\n          // rebuild endpoint with new headers\n          endpoint = new _Endpoint2['default'](_this._userConfig, endpoint.hostname, endpoint.method, endpoint.path, _this.buildHeaders(endpoint.contextOptions), endpoint.givenArgs, endpoint.contextOptions, endpoint.port);\n        });\n      })();\n\n      return auth.then(function () {\n        var requestPromise = _this._request.https(endpoint, _this.responseErrorHandler.bind(_this));\n\n        return requestPromise.then(function (response) {\n          return _this.handleSuccessResponse(response, endpoint);\n        });\n      });\n    }\n  }, {\n    key: 'authenticate',\n\n    /*\n       Authenticate with the appropriate OAuth type for a given\n       endpoint\n     */\n    value: function authenticate(endpoint) {\n      var authPromise = undefined;\n\n      // If we are application only, or are bypassing authentication\n      // therefore we're using application only OAuth\n      if (this.isApplicationOnly() || endpoint.contextOptions.bypassAuth) {\n        authPromise = this._oauthAppOnly.applicationOnlyAuth();\n      } else if (this._oauth.canRefreshAccessToken()) {\n        // If we have been authenticated with a permanent refresh token use it\n        if (this._oauth.hasRefreshToken()) {\n          authPromise = this._oauth.refresh();\n        }\n        // If we are OAuth type script we can call `.auth` again\n        else if (this._userConfig.isOAuthType('script')) {\n          authPromise = this._oauth.auth();\n        }\n      }\n      // No way to authenticate\n      else {\n        return _when2['default'].reject(new Error('Unable to authenticate'));\n      }\n\n      return authPromise;\n    }\n  }, {\n    key: 'responseErrorHandler',\n\n    /*\n       Handle a request errors from reddit. This is usually caused when our\n       access_token has expired, or reddit servers are under heavy load.\n        If we can't renew our access token, we throw an error / emit the\n       'access_token_expired' event that users can then handle to\n       re-authenticatet clients\n        If we can renew our access token, we try to reauthenticate, and call the\n       reddit endpoint again.\n     */\n    value: function responseErrorHandler(response, endpoint) {\n      var _this2 = this;\n\n      // - - -\n      // Check headers for more specific errors.\n\n      var wwwAuth = response._headers['www-authenticate'];\n\n      if (wwwAuth && wwwAuth.indexOf('insufficient_scope') !== -1) {\n        return _when2['default'].reject(new _ResponseError2['default']('Insufficient scopes provided for this call', response, endpoint));\n      }\n\n      // - - -\n      // 404 - Page not found\n      if (response._status === 404) {\n        var msg = 'Page nod found. Is this a valid endpoint?';\n        return _when2['default'].reject(new _ResponseError2['default'](msg, response, endpoint));\n      }\n\n      // - - -\n      // Access token has expired\n      if (response._status === 401) {\n\n        // Atempt to get a new access token!\n        var reauthPromise = this.authenticate(endpoint);\n\n        return reauthPromise.then(function () {\n          // refresh the authentication headers for this endpoint\n          endpoint.setHeaders(_this2.buildHeaders(endpoint.contextOptions));\n\n          var modifiedEndpoint = new _Endpoint2['default'](_this2._userConfig, endpoint.hostname, endpoint.method, endpoint.path, _this2.buildHeaders(endpoint.contextOptions), endpoint.givenArgs, endpoint.contextOptions, endpoint.port);\n\n          return _when2['default'].resolve(modifiedEndpoint);\n        })['catch'](function (error) {\n          _this2.emit('access_token_expired');\n\n          var msg = 'Access token has expired. Listen for ' + 'the \"access_token_expired\" event to ' + 'handle this gracefully in your app.';\n          return _when2['default'].reject(new _ResponseError2['default'](msg, response, endpoint));\n        });\n      }\n\n      // - - -\n      // Reddit servers are busy. Can't do much here.\n\n      if (String(response._status).substring(0, 1) === '5') {\n        var modifiedEndpoint = new _Endpoint2['default'](this._userConfig, endpoint.hostname, endpoint.method, endpoint.path, this.buildHeaders(endpoint.contextOptions), endpoint.givenArgs, endpoint.contextOptions, endpoint.port);\n\n        return _when2['default'].resolve(modifiedEndpoint);\n      }\n\n      // - - -\n      // At the end of the day, we just throw an error stating that there\n      // is nothing we can do & give general advice\n      return _when2['default'].reject(new _ResponseError2['default']('This call failed. ' + 'Does this call require a user? ' + 'Is the user missing reddit gold? ' + 'Trying to change a subreddit that the user does not moderate? ' + 'This is an unrecoverable error. Check the rest of the ' + 'error message for more information.', response, endpoint));\n    }\n  }, {\n    key: 'handleSuccessResponse',\n\n    /*\n       Handle reddit response status of 2xx.\n        Finally return the data if there were no problems.\n     */\n    value: function handleSuccessResponse(response, endpoint) {\n\n      var data = response._body || '';\n\n      if (endpoint.contextOptions.decodeHtmlEntities) {\n        data = _he2['default'].decode(data);\n      }\n\n      // Attempt to parse some JSON, otherwise continue on (may be empty, or text)\n      try {\n        data = JSON.parse(data);\n\n        // Reddit isn't always honest in their response status. Check for\n        // any errors in 2xx http statuses\n\n        // data.json.errors\n        if (data.json && data.json.errors && data.json.errors.length > 0) {\n          return _when2['default'].reject(new _ResponseError2['default']('', response, endpoint));\n        }\n\n        // data.json.error\n        if (data.json && data.json.error) {\n          return _when2['default'].reject(new _ResponseError2['default']('', response, endpoint));\n        }\n      } catch (e) {}\n\n      var rateLimitRemaining = response._headers['x-ratelimit-remaining'];\n      var rateLimitUsed = response._headers['x-ratelimit-used'];\n      var rateLimitReset = response._headers['x-ratelimit-reset'];\n\n      var rateLimitData = {\n        rateLimitRemaining: rateLimitRemaining ? Number(rateLimitRemaining) : void 0,\n        rateLimitUsed: rateLimitUsed ? Number(rateLimitUsed) : void 0,\n        rateLimitReset: rateLimitReset ? Number(rateLimitReset) : void 0\n      };\n\n      if (typeof rateLimitData.rateLimitUsed !== 'undefined') {\n        this.emit('rate_limit', rateLimitData);\n      }\n\n      // Using a test variable\n      // this._userConfig.__test.rateLimitRemainingCutoff\n      // it's default value is \"0\", however in the tests cases this\n      // would take too long.\n      var cutoff = this._userConfig.__test.rateLimitRemainingCutoff;\n\n      if (typeof rateLimitData.rateLimitRemaining !== 'undefined' && Number(rateLimitRemaining) <= cutoff) {\n        this.emit('rate_limit_reached', rateLimitData);\n      }\n\n      return _when2['default'].resolve(data);\n    }\n  }, {\n    key: 'getListing',\n\n    /*\n       Listing support.\n     */\n    value: function getListing(endpoint) {\n      var _this3 = this;\n\n      // number of results that we have loaded so far. It will\n      // increase / decrease when calling next / previous.\n      var count = 0;\n      var limit = endpoint.args.limit || 25;\n      // keep a reference to the start of this listing\n      var start = endpoint.args.after || null;\n\n      var getSlice = (function (_getSlice) {\n        function getSlice(_x) {\n          return _getSlice.apply(this, arguments);\n        }\n\n        getSlice.toString = function () {\n          return _getSlice.toString();\n        };\n\n        return getSlice;\n      })(function (endpoint) {\n\n        return _this3.callRedditApi(endpoint).then(function () {\n          var result = arguments[0] === undefined ? {} : arguments[0];\n\n          var slice = {};\n          var listing = result;\n\n          slice.get = result;\n\n          if (result instanceof Array) {\n            if (typeof endpoint.contextOptions.listingIndex === 'undefined') {\n              throw new Error('Must specify a `listingIndex` for this listing.');\n            }\n\n            listing = result[endpoint.contextOptions.listingIndex];\n          }\n\n          slice.count = count;\n\n          slice.before = listing.data.before || null;\n          slice.after = listing.data.after || null;\n          slice.allChildren = listing.data.children || [];\n\n          slice.empty = slice.allChildren.length === 0;\n\n          slice.children = slice.allChildren.filter(function (child) {\n            child.data = child.data || {};\n            return !child.data.stickied;\n          });\n\n          slice.stickied = slice.allChildren.filter(function (child) {\n            child.data = child.data || {};\n            return child.data.stickied;\n          });\n\n          slice.next = function () {\n            count += limit;\n\n            var newArgs = endpoint.givenArgs;\n            newArgs.before = null;\n            newArgs.after = slice.children[slice.children.length - 1].data.name;\n            newArgs.count = count;\n            return getSlice(new _Endpoint2['default'](_this3._userConfig, endpoint.hostname, endpoint.method, endpoint.path, _this3.buildHeaders(endpoint.contextOptions), newArgs, endpoint.contextOptions, endpoint.port));\n          };\n\n          slice.previous = function () {\n            count -= limit;\n\n            var newArgs = endpoint.givenArgs;\n            newArgs.before = slice.children[0].data.name;\n            newArgs.after = null;\n            newArgs.count = count;\n            return getSlice(new _Endpoint2['default'](_this3._userConfig, endpoint.hostname, endpoint.method, endpoint.path, _this3.buildHeaders(endpoint.contextOptions), newArgs, endpoint.contextOptions, endpoint.port));\n          };\n\n          slice.start = function () {\n            count = 0;\n\n            var newArgs = endpoint.givenArgs;\n            newArgs.before = null;\n            newArgs.after = start;\n            newArgs.count = count;\n            return getSlice(new _Endpoint2['default'](_this3._userConfig, endpoint.hostname, endpoint.method, endpoint.path, _this3.buildHeaders(endpoint.contextOptions), newArgs, endpoint.contextOptions, endpoint.port));\n          };\n\n          slice.requery = function () {\n            return getSlice(endpoint);\n          };\n\n          return slice;\n        });\n      });\n\n      return getSlice(endpoint);\n    }\n  }, {\n    key: 'path',\n\n    /*\n       Enable path syntax support, e.g. this.path('/path/to/$endpoint/etc')\n        Can take an url as well, but the first part of the url is chopped\n       off because it is not needed. We will always use the server oauth\n       to call the API...\n        e.g. https://www.example.com/api/v1/me\n        will only use the path: /api/v1/me\n     */\n    value: (function (_path) {\n      function path(_x2) {\n        return _path.apply(this, arguments);\n      }\n\n      path.toString = function () {\n        return _path.toString();\n      };\n\n      return path;\n    })(function (urlOrPath) {\n      var _this4 = this;\n\n      var parsed = _urlLib2['default'].parse(urlOrPath);\n      var path = parsed.pathname;\n\n      var calls = {};\n\n      ['get', 'post', 'put', 'patch', 'delete', 'update'].forEach(function (verb) {\n        calls[verb] = function (userGivenArgs, userContextOptions) {\n          return _this4.callRedditApi(new _Endpoint2['default'](_this4._userConfig, _this4._userConfig.serverOAuth, verb, path, _this4.buildHeaders(userContextOptions), userGivenArgs, userContextOptions, _this4._userConfig.serverOAuthPort));\n        };\n      });\n\n      // Add listing support\n      calls.listing = function (userGivenArgs, userContextOptions) {\n        return _this4.getListing(new _Endpoint2['default'](_this4._userConfig, _this4._userConfig.serverOAuth, 'get', path, _this4.buildHeaders(userContextOptions), userGivenArgs, userContextOptions, _this4._userConfig.serverOAuthPort));\n      };\n\n      return calls;\n    })\n  }]);\n\n  return RedditRequest;\n})(_events2['default'].EventEmitter);\n\nexports['default'] = RedditRequest;\nmodule.exports = exports['default'];\n//# sourceMappingURL=RedditRequest.js.map\n},{\"./Endpoint\":2,\"./Request\":5,\"./ResponseError\":6,\"events\":18,\"he\":47,\"url\":44,\"util\":46,\"when\":66,\"when/delay\":48}],5:[function(require,module,exports){\n'use strict';\n\nvar _interopRequireWildcard = function (obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (typeof obj === 'object' && obj !== null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } };\n\nvar _interopRequireDefault = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _querystring = require('querystring');\n\nvar _querystring2 = _interopRequireDefault(_querystring);\n\nvar _events = require('events');\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _when = require('when');\n\nvar _when2 = _interopRequireDefault(_when);\n\nvar _delay = require('when/delay');\n\nvar _delay2 = _interopRequireDefault(_delay);\n\nvar _import = require('./utils');\n\nvar u = _interopRequireWildcard(_import);\n\nvar _ResponseError = require('./ResponseError');\n\nvar _ResponseError2 = _interopRequireDefault(_ResponseError);\n\nvar _httpsNode = require('./https/httpsNode');\n\nvar _httpsNode2 = _interopRequireDefault(_httpsNode);\n\nvar _httpsBrowser = require('./https/httpsBrowser');\n\nvar _httpsBrowser2 = _interopRequireDefault(_httpsBrowser);\n\nvar rawHttps = u.isNode() ? _httpsNode2['default'] : _httpsBrowser2['default'];\n\nvar Request = (function (_events$EventEmitter) {\n  function Request(throttle) {\n    _classCallCheck(this, Request);\n\n    _get(Object.getPrototypeOf(Request.prototype), 'constructor', this).call(this);\n    this._throttle = throttle;\n  }\n\n  _inherits(Request, _events$EventEmitter);\n\n  _createClass(Request, [{\n    key: 'https',\n\n    /*\n       Makes an https call with a given endpoint.\n        If an error handler is provided, it will call it in\n       the case of a returned status that is not 2xx / success.\n        If the errorHandler results in a rejected promise, then we will NOT\n       retry the endpoint and reject with the given error.\n     */\n    value: function https(endpoint, responseErrorHandler) {\n      var _this = this;\n\n      return this._throttle.wait().then(function () {\n\n        var reqOptions = {\n          method: endpoint.method.toUpperCase(),\n          hostname: endpoint.hostname,\n          path: endpoint.computedPath,\n          headers: endpoint.headers\n        };\n\n        // @TODO Node.js has issues if you set it to 80?\n        if (endpoint.port !== 80) {\n          reqOptions.port = endpoint.port;\n        }\n\n        var formData = endpoint.args;\n\n        return rawHttps(reqOptions, formData).timeout(endpoint.contextOptions.requestTimeout, new _ResponseError2['default']('The request has timed out', {}, endpoint)).then(function (response) {\n\n          var statusChar = String(response._status).substring(0, 1);\n          var success = statusChar === '2';\n\n          // If success we're done!\n          if (success) {\n            return response;\n          }\n\n          // Else, retry the endpoint if we can.\n          endpoint.contextOptions.retryAttemptsLeft--;\n\n          var responseError = undefined;\n          responseError = new _ResponseError2['default']('Response Error', response, endpoint);\n\n          _this.emit('response_error', responseError);\n\n          if (endpoint.contextOptions.retryAttemptsLeft <= 0) {\n            responseError.message = 'All retry attempts exhausted.\\n\\n' + responseError.message;\n            return _when2['default'].reject(responseError);\n          }\n\n          // Use the given response error handler, or use a thin wrapper that\n          // will return the endpoint without any modifications\n          responseErrorHandler = responseErrorHandler || function (response, endpoint) {\n            return _when2['default'].resolve(endpoint);\n          };\n\n          // Call the error handler. If not rejected, retry the endpoint\n          // with any modifications made by the responseErrorHandler\n          return responseErrorHandler(response, endpoint).then(function (modifiedEndpoint) {\n\n            // Only have a retry delay if the endpoint had an HTTP 5xx status\n            var retryDelay = statusChar === '5' ? modifiedEndpoint.contextOptions.retryDelay : 0;\n\n            return _delay2['default'](retryDelay).then(function () {\n              return _this.https(modifiedEndpoint, responseErrorHandler);\n            });\n          });\n        });\n      });\n    }\n  }]);\n\n  return Request;\n})(_events2['default'].EventEmitter);\n\nexports['default'] = Request;\nmodule.exports = exports['default'];\n//# sourceMappingURL=Request.js.map\n},{\"./ResponseError\":6,\"./https/httpsBrowser\":11,\"./https/httpsNode\":12,\"./utils\":13,\"events\":18,\"querystring\":30,\"when\":66,\"when/delay\":48}],6:[function(require,module,exports){\n'use strict';\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n/*\n   A uniform way to report response errors.\n*/\n\nvar ResponseError = (function (_Error) {\n  function ResponseError(message, response, endpoint) {\n    _classCallCheck(this, ResponseError);\n\n    var _this = new _Error();\n\n    _this.__proto__ = ResponseError.prototype;\n\n    _this.message = [message, '>>> Response Status: ' + response._status, '>>> Endpoint URL: ' + endpoint.url, '>>> Arguments: ' + JSON.stringify(endpoint.args, null, 2), '>>> Response Body:', response._body].join('\\n\\n');\n\n    _this.url = endpoint.url;\n    _this.args = endpoint.args;\n    _this.status = response._status;\n    _this.body = response._body;\n    _this.retryAttemptsLeft = endpoint.contextOptions.retryAttemptsLeft;\n    _this.endpoint = endpoint;\n    return _this;\n  }\n\n  _inherits(ResponseError, _Error);\n\n  return ResponseError;\n})(Error);\n\nexports['default'] = ResponseError;\nmodule.exports = exports['default'];\n//# sourceMappingURL=ResponseError.js.map\n},{}],7:[function(require,module,exports){\n'use strict';\n\nvar _interopRequireDefault = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n/*\n   A basic throttle manager. Exposes 1 functoin `wait` that\n   will return a promise that resolves once we've waited the proper\n   amount of time, e.g.\n\n   var throttle = new Throttle();\n\n   throttle.wait() // resolves after 1ms\n   throttle.wait() // resolves after 10001ms\n   throttle.wait() // resolves after 2001ms\n\n */\n\nvar _when = require('when');\n\nvar _when2 = _interopRequireDefault(_when);\n\nvar _delay = require('when/delay');\n\nvar _delay2 = _interopRequireDefault(_delay);\n\nvar Throttle = (function () {\n  function Throttle() {\n    var throttleMs = arguments[0] === undefined ? 1000 : arguments[0];\n\n    _classCallCheck(this, Throttle);\n\n    this._throttleMs = throttleMs;\n\n    /*\n       The current throttle delay before a request will go through\n       increments every time a call is made, and is reduced when a\n       call finishes.\n        Time is added & removed based on the throttle variable.\n     */\n    this._throttleDelay = 1;\n  }\n\n  _createClass(Throttle, [{\n    key: 'wait',\n    value: function wait() {\n      var _this = this;\n\n      // resolve this promise after the current throttleDelay\n      var delayPromise = _delay2['default'](this._throttleDelay);\n\n      // add throttleMs to the total throttleDelay\n      this._throttleDelay += this._throttleMs;\n\n      // after throttleMs time, subtract throttleMs from\n      // the throttleDelay\n      setTimeout(function () {\n        _this._throttleDelay -= _this._throttleMs;\n      }, this._throttleMs);\n\n      return delayPromise;\n    }\n  }, {\n    key: 'addTime',\n\n    /*\n       Time in milliseconds to add to the throttle delay\n    */\n    value: function addTime(timeMs) {\n      this._throttleDelay += timeMs;\n    }\n  }]);\n\n  return Throttle;\n})();\n\nexports['default'] = Throttle;\nmodule.exports = exports['default'];\n//# sourceMappingURL=Throttle.js.map\n},{\"when\":66,\"when/delay\":48}],8:[function(require,module,exports){\n'use strict';\n\nvar _interopRequireWildcard = function (obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (typeof obj === 'object' && obj !== null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _import = require('./utils');\n\nvar u = _interopRequireWildcard(_import);\n\n/*\n   A class made up of the user configuration.\n\n   Normalizes the configuraiton & checks for simple errors.\n\n   Provides some helper functons for getting user set values.\n */\n\nvar UserConfig = (function () {\n  function UserConfig(userConfiguration) {\n    _classCallCheck(this, UserConfig);\n\n    //\n    // - - - CONFIGURATION VALUES - - -\n    //\n\n    var missingMsg = 'Missing required userConfiguration value ';\n\n    // ** SERVERS\n    this.serverOAuth = u.thisOrThat(userConfiguration.serverOAuth, 'oauth.reddit.com');\n    this.serverWWW = u.thisOrThat(userConfiguration.serverWWW, 'www.reddit.com');\n    this.serverOAuthPort = u.thisOrThat(userConfiguration.serverOAuthPort, 80);\n    this.serverWWWPort = u.thisOrThat(userConfiguration.serverWWWPort, 80);\n\n    // ** IDENFIFICATION\n    this.userAgent = u.thisOrThrow(userConfiguration.userAgent, 'Missing required userConfiguration value `userAgent`');\n\n    this.isNode = u.thisOrThat(userConfiguration.browser, u.isNode());\n\n    this.mobile = u.thisOrThat(userConfiguration.mobile, false);\n\n    // ** CALL MODIFICATIONS\n    this.throttle = u.thisOrThat(userConfiguration.throttle, 1000);\n\n    this.decodeHtmlEntities = u.thisOrThat(userConfiguration.decodeHtmlEntities, false);\n\n    this.apiType = u.thisOrThat(userConfiguration.apiType, 'json');\n\n    // ** RETRY ATTEMPTS\n    this.retryAttempts = u.thisOrThat(userConfiguration.retryAttempts, 60);\n\n    this.retryDelay = u.thisOrThat(userConfiguration.retryDelay, 5000);\n\n    this.requestTimeout = u.thisOrThat(userConfiguration.requestTimeout, 20000);\n\n    // ** OAUTH\n    this.oauth = u.thisOrThat(userConfiguration.oauth, {});\n\n    this.oauth.scope = u.thisOrThat(this.oauth.scope, []);\n\n    this.oauth.deviceId = u.thisOrThat(this.oauth.deviceId, 'DO_NOT_TRACK_THIS_DEVICE');\n    this.oauth.type = u.thisOrThrow(this.oauth.type, missingMsg + '`oauth.type`');\n    this.oauth.key = u.thisOrThrow(this.oauth.key, missingMsg + '`oauth.key`');\n    this.oauth.duration = u.thisOrThat(this.oauth.duration, 'temporary');\n\n    //\n    // - - - VALIDATION\n    //\n\n    if (this.oauth.duration !== 'temporary' && this.oauth.duration !== 'permanent') {\n      throw new Error('Invalid `oauth.duration`. Must be one of: permanent, temporary');\n    }\n\n    if (this.oauth.deviceId !== 'DO_NOT_TRACK_THIS_DEVICE' && (this.oauth.deviceId.length < 20 || this.oauth.deviceId.length > 30)) {\n      throw new Error('Invalid device_id length. Must be 20-30 characters');\n    }\n\n    if (!this.isOAuthType('explicit') && !this.isOAuthType('implicit') && !this.isOAuthType('script')) {\n      throw new Error('Invalid `oauth.type`. Must be one of: explicit, implicit, or script');\n    }\n\n    if (this.isOAuthType('explicit') || this.isOAuthType('script')) {\n      this.oauth.secret = u.thisOrThrow(this.oauth.secret, missingMsg + '`oauth.secret` for type explicit/script');\n    }\n\n    if (this.isOAuthType('script')) {\n      this.oauth.username = u.thisOrThrow(this.oauth.username, missingMsg + '`oauth.username` for type script');\n      this.oauth.password = u.thisOrThrow(this.oauth.password, missingMsg + '`oauth.password` for type script');\n    }\n\n    if (this.isOAuthType('implicit') || this.isOAuthType('explicit')) {\n      this.oauth.redirectUri = u.thisOrThrow(this.oauth.redirectUri, missingMsg + '`oauth.redirectUri` for type implicit/explicit');\n    }\n\n    //\n    // TESTING CONFIGURATION\n    //\n    // Some test cases require some deep messing around with the library\n    // in order to be nice to the API server when testing.\n    //\n    // These should never be used by anything other than the test cases to\n    // modify internal variables. They are only used if needed!\n\n    /*\n       Used to determine when we have gone over the rate limit. The default\n       would be \"0\", e.g. when there are not more requests remaining in the\n       current time slot\n     */\n    this.__test = {};\n    userConfiguration.__test = userConfiguration.__test || {};\n\n    this.__test.rateLimitRemainingCutoff = u.thisOrThat(userConfiguration.__test.rateLimitRemainingCutoff, 0);\n  }\n\n  _createClass(UserConfig, [{\n    key: 'isOAuthType',\n\n    /*\n       Checks if the oauth is of a specific type, e.g.\n        isOAuthType('script')\n     */\n    value: function isOAuthType(type) {\n      return this.oauth.type === type;\n    }\n  }]);\n\n  return UserConfig;\n})();\n\nexports['default'] = UserConfig;\nmodule.exports = exports['default'];\n//# sourceMappingURL=UserConfig.js.map\n},{\"./utils\":13}],9:[function(require,module,exports){\n(function (Buffer){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n/*\nRepresents a file that we wish to upload to reddit.\n\nAll files have a name, mimeType, and data. \n\ndata can be a `utf8` string, or a buffer containing the \ncontent of the file.\n*/\n\nexports['default'] = function (name, mimeType, data) {\n  var self = {};\n\n  self.name = name;\n  self.mimeType = mimeType;\n  self.data = typeof data === 'string' ? new Buffer(data) : data;\n\n  return self;\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=../https/file.js.map\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":14}],10:[function(require,module,exports){\n(function (Buffer){\n'use strict';\n\nvar _interopRequireDefault = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.getSectionBoundary = getSectionBoundary;\nexports.getEndBoundary = getEndBoundary;\nexports.encodeFieldPart = encodeFieldPart;\nexports.encodeFilePart = encodeFilePart;\n\n/*\n   Converts a list of parameters to form data\n\n   - `fields` - a property map of key value pairs\n   - `files` - a list of property maps of content\n   --> `type` - the type of file data\n   --> `keyname` - the name of the key corresponding to the file\n   --> `valuename` - the name of the value corresponding to the file\n   --> `dataBuffer` - A buffer containing the files data\n */\nexports.getMultipartFormData = getMultipartFormData;\n\n/*\n   Takes an existing string or key-value pair that represents form data\n   and returns form data in the form of an Array.\n\n   If the formData is an object, and that object has a 'file' key,\n   we will assume that it is going to be a multipart request and we\n   will also assume that the file is actually a file path on the system\n   that we wish to use in the multipart data.\n */\nexports.getData = getData;\n\nvar _querystring = require('querystring');\n\nvar _querystring2 = _interopRequireDefault(_querystring);\n\nvar _when = require('when');\n\nvar _when2 = _interopRequireDefault(_when);\n\nfunction getSectionBoundary(boundary) {\n  return '--' + boundary;\n}\n\nfunction getEndBoundary(boundary) {\n  return '--' + boundary + '--';\n}\n\nfunction encodeFieldPart(boundary, key, value) {\n  return new Buffer([getSectionBoundary(boundary), '\\r\\n', 'Content-Disposition: form-data; name=\"' + key + '\"', '\\r\\n\\r\\n', value, '\\r\\n'].join(''));\n}\n\nfunction encodeFilePart(boundary, key, name, mimeType, data) {\n  return Buffer.concat([new Buffer([getSectionBoundary(boundary), '\\r\\n', 'Content-Disposition: form-data; ' + 'name=\"' + key + '\"; ' + 'filename=\"' + name + '\"', '\\r\\n', 'Content-Type: ' + mimeType, '\\r\\n\\r\\n'].join('')), data, // already a buffer\n  new Buffer('\\r\\n')]);\n}\n\nfunction getMultipartFormData(boundary, fields, files) {\n\n  var dataBuffer = new Buffer(0);\n  var key;\n\n  if (fields) {\n    for (key in fields) {\n      // skip over any file fields\n      if (key === 'file') {\n        continue;\n      }\n\n      var value = fields[key];\n\n      dataBuffer = Buffer.concat([dataBuffer, encodeFieldPart(boundary, key, value)]);\n    }\n  }\n\n  if (files) {\n    for (key in files) {\n      var file = files[key];\n\n      dataBuffer = Buffer.concat([dataBuffer, encodeFilePart(boundary, file.key, file.name, file.mimeType, file.data)]);\n    }\n  }\n\n  // close with a final boundary closed with '--' at the end\n  dataBuffer = Buffer.concat([dataBuffer, new Buffer(getEndBoundary(boundary))]);\n\n  return dataBuffer;\n}\n\nfunction getData(formData) {\n\n  var data = {\n    contentType: 'application/x-www-form-urlencoded',\n    contentLength: 0,\n    buffer: new Buffer(0)\n  };\n\n  // The data is already in a string format. There is nothing\n  // to do really\n  if (typeof formData === 'string') {\n    data.buffer = new Buffer(formData);\n  }\n\n  if (typeof formData === 'object') {\n    // The data is an object *without* a file key. We will assume\n    // that we want this data in an url encoded format\n    if (!formData.file) {\n      data.buffer = new Buffer(_querystring2['default'].stringify(formData));\n    } else {\n      // for now we only have to handle one file, with one key name of 'file'\n      var singleFile = formData.file;\n      singleFile.key = 'file';\n\n      var files = [formData.file];\n\n      var boundary = '---------Snoocore' + Math.floor(Math.random() * 10000);\n      data.contentType = 'multipart/form-data; boundary=' + boundary;\n      data.buffer = getMultipartFormData(boundary, formData, files);\n    }\n  }\n\n  data.contentLength = data.buffer.length;\n  return data;\n}\n//# sourceMappingURL=../https/form.js.map\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":14,\"querystring\":30,\"when\":66}],11:[function(require,module,exports){\n'use strict';\n\nvar _interopRequireWildcard = function (obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (typeof obj === 'object' && obj !== null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } };\n\nvar _interopRequireDefault = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = https;\n//\n// Browser requests, mirrors the syntax of the node requests\n//\n\nvar _urlLib = require('url');\n\nvar _urlLib2 = _interopRequireDefault(_urlLib);\n\nvar _when = require('when');\n\nvar _when2 = _interopRequireDefault(_when);\n\nvar _import = require('./form');\n\nvar form = _interopRequireWildcard(_import);\n\n// https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#getAllResponseHeaders()\n\n// Set to true to print useful http debug information on a lower level\nvar DEBUG_LOG = false ? console.error : function () {};\n\n/**\n * Modified from https://gist.github.com/monsur/706839\n *\n * XmlHttpRequest's getAllResponseHeaders() method returns a string of response\n * headers according to the format described here:\n * http://www.w3.org/TR/XMLHttpRequest/#the-getallresponseheaders-method\n * This method parses that string into a user-friendly key/value pair object.\n */\nfunction parseResponseHeaders(headerStr) {\n  var headers = {};\n  if (!headerStr) {\n    return headers;\n  }\n  var headerPairs = headerStr.split('\\r\\n');\n  for (var i = 0, len = headerPairs.length; i < len; i++) {\n    var headerPair = headerPairs[i];\n    // Can't use split() here because it does the wrong thing\n    // if the header value has the string \": \" in it.\n    var index = headerPair.indexOf(': ');\n    if (index > 0) {\n      // make all keys lowercase\n      var key = headerPair.substring(0, index).toLowerCase();\n      var val = headerPair.substring(index + 2);\n      headers[key] = val;\n    }\n  }\n  return headers;\n}\n\nfunction https(options, formData) {\n\n  DEBUG_LOG('>> browser https call');\n\n  options = options || {};\n  options.headers = options.headers || {};\n\n  var data = form.getData(formData);\n\n  options.headers['Content-Type'] = data.contentType;\n\n  return _when2['default'].promise(function (resolve, reject) {\n\n    try {\n      // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n      var x = new window.XMLHttpRequest();\n\n      var url = 'https://' + options.hostname + options.path;\n\n      DEBUG_LOG('>> url: ', url);\n\n      // append the form data to the end of the url\n      if (options.method === 'GET') {\n        url += '?' + data.buffer.toString();\n      }\n\n      x.open(options.method, url, true);\n\n      Object.keys(options.headers).forEach(function (headerKey) {\n        x.setRequestHeader(headerKey, options.headers[headerKey]);\n      });\n\n      x.onreadystatechange = function () {\n        if (x.readyState > 3) {\n          // Normalize the result to match how requestNode.js works\n\n          DEBUG_LOG('finished...', x.status);\n\n          return resolve({\n            _body: x.responseText,\n            _status: x.status,\n            _headers: parseResponseHeaders(x.getAllResponseHeaders())\n          });\n        }\n      };\n\n      x.send(options.method === 'GET' ? null : data.buffer.toString());\n    } catch (e) {\n      return reject(e);\n    }\n  }).then(function (res) {\n    var canRedirect = String(res._status).substring(0, 1) === '3' && typeof res._headers.location !== 'undefined';\n\n    if (canRedirect) {\n      // Make the call again with the new hostname, path, and form data\n      var parsed = _urlLib2['default'].parse(res._headers.location);\n      options.hostname = parsed.hostname;\n      options.path = parsed.pathname;\n      return https(options, parsed.query);\n    }\n\n    return res;\n  });\n}\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=../https/httpsBrowser.js.map\n},{\"./form\":10,\"url\":44,\"when\":66}],12:[function(require,module,exports){\n'use strict';\n\nvar _interopRequireWildcard = function (obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (typeof obj === 'object' && obj !== null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } };\n\nvar _interopRequireDefault = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\n/*\n   Form data can be a raw string, or an object containing key/value pairs\n */\nexports['default'] = https;\n//\n// Node requests\n//\n\nvar _httpsLib = require('https');\n\nvar _httpsLib2 = _interopRequireDefault(_httpsLib);\n\nvar _urlLib = require('url');\n\nvar _urlLib2 = _interopRequireDefault(_urlLib);\n\nvar _when = require('when');\n\nvar _when2 = _interopRequireDefault(_when);\n\nvar _import = require('./form');\n\nvar form = _interopRequireWildcard(_import);\n\n// Set to true to print useful http debug information on a lower level\nvar DEBUG_LOG = false ? console.error : function () {};\nfunction https(options, formData) {\n  DEBUG_LOG('\\n\\n\\n\\n');\n  DEBUG_LOG('>>> request:\\n' + options.method + ': ' + options.hostname + options.path);\n\n  options = options || {};\n  options.headers = options.headers || {};\n\n  formData = formData || [];\n\n  var data = form.getData(formData);\n\n  options.headers['Content-Type'] = data.contentType;\n\n  if (options.method !== 'GET') {\n    options.headers['Content-Length'] = data.contentLength;\n  }\n\n  DEBUG_LOG('\\n>>> request headers\\n', options.headers);\n\n  // stick the data at the end of the url for GET requests\n  if (options.method === 'GET' && data.buffer.toString() !== '') {\n    DEBUG_LOG('\\n>>> query string:\\n', data.buffer.toString());\n    options.path += '?' + data.buffer.toString();\n  }\n\n  return _when2['default'].promise(function (resolve, reject) {\n\n    var req = _httpsLib2['default'].request(options, function (res) {\n\n      res._req = req; // attach a reference back to the request\n\n      res.setEncoding('utf8');\n      var body = '';\n      res.on('error', function (error) {\n        return reject(error);\n      });\n      res.on('data', function (chunk) {\n        body += chunk;\n      });\n      res.on('end', function () {\n        res._body = body; // attach the response body to the object\n        res._status = res.statusCode;\n        res._headers = res.headers;\n        DEBUG_LOG('\\n>>> response headers:\\n', res._headers);\n        DEBUG_LOG('\\n>>> response body:\\n', String(body).substring(0, 1000));\n        DEBUG_LOG('\\n>>> status:\\n', res.statusCode);\n        return resolve(res);\n      });\n    });\n\n    if (options.method !== 'GET') {\n      DEBUG_LOG('\\n>>> request body:\\n', data.buffer.toString());\n      req.write(data.buffer);\n    }\n\n    req.end();\n  }).then(function (res) {\n    var canRedirect = String(res._status).substring(0, 1) === '3' && typeof res._headers.location !== 'undefined';\n\n    if (canRedirect) {\n      // Make the call again with the new hostname, path, and form data\n      var parsed = _urlLib2['default'].parse(res._headers.location);\n      options.hostname = parsed.hostname;\n      options.path = parsed.pathname;\n      return https(options, parsed.query);\n    }\n\n    return res;\n  });\n}\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=../https/httpsNode.js.map\n},{\"./form\":10,\"https\":23,\"url\":44,\"when\":66}],13:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n// checks basic globals to help determine which environment we are in\nexports.isNode = isNode;\n\n/*\n   Return the value of `tryThis` unless it's undefined, then return `that`\n */\nexports.thisOrThat = thisOrThat;\n\n/*\n   Return the value of `tryThir` or throw an error (with provided message);\n */\nexports.thisOrThrow = thisOrThrow;\n\nfunction isNode() {\n  return typeof require === \"function\" && typeof exports === \"object\" && typeof module === \"object\" && typeof window === \"undefined\";\n}\n\nfunction thisOrThat(tryThis, that) {\n  return typeof tryThis !== \"undefined\" ? tryThis : that;\n}\n\nfunction thisOrThrow(tryThis, orThrowMessage) {\n  if (typeof tryThis !== \"undefined\") {\n    return tryThis;\n  }\n  throw new Error(orThrowMessage);\n}\n//# sourceMappingURL=utils.js.map\n},{}],14:[function(require,module,exports){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('is-array')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = Buffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar kMaxLength = 0x3fffffff\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Note:\n *\n * - Implementation must support adding new properties to `Uint8Array` instances.\n *   Firefox 4-29 lacked support, fixed in Firefox 30+.\n *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *    incorrect length in some situations.\n *\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will\n * get the Object implementation, which is slower but will work correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = (function () {\n  try {\n    var buf = new ArrayBuffer(0)\n    var arr = new Uint8Array(buf)\n    arr.foo = function () { return 42 }\n    return 42 === arr.foo() && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n})()\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (subject, encoding, noZero) {\n  if (!(this instanceof Buffer))\n    return new Buffer(subject, encoding, noZero)\n\n  var type = typeof subject\n\n  // Find the length\n  var length\n  if (type === 'number')\n    length = subject > 0 ? subject >>> 0 : 0\n  else if (type === 'string') {\n    if (encoding === 'base64')\n      subject = base64clean(subject)\n    length = Buffer.byteLength(subject, encoding)\n  } else if (type === 'object' && subject !== null) { // assume object is array-like\n    if (subject.type === 'Buffer' && isArray(subject.data))\n      subject = subject.data\n    length = +subject.length > 0 ? Math.floor(+subject.length) : 0\n  } else\n    throw new TypeError('must start with number, buffer, array or string')\n\n  if (this.length > kMaxLength)\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n      'size: 0x' + kMaxLength.toString(16) + ' bytes')\n\n  var buf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Preferred: Return an augmented `Uint8Array` instance for best performance\n    buf = Buffer._augment(new Uint8Array(length))\n  } else {\n    // Fallback: Return THIS instance of Buffer (created by `new`)\n    buf = this\n    buf.length = length\n    buf._isBuffer = true\n  }\n\n  var i\n  if (Buffer.TYPED_ARRAY_SUPPORT && typeof subject.byteLength === 'number') {\n    // Speed optimization -- use set if we're copying from a typed array\n    buf._set(subject)\n  } else if (isArrayish(subject)) {\n    // Treat array-ish objects as a byte array\n    if (Buffer.isBuffer(subject)) {\n      for (i = 0; i < length; i++)\n        buf[i] = subject.readUInt8(i)\n    } else {\n      for (i = 0; i < length; i++)\n        buf[i] = ((subject[i] % 256) + 256) % 256\n    }\n  } else if (type === 'string') {\n    buf.write(subject, 0, encoding)\n  } else if (type === 'number' && !Buffer.TYPED_ARRAY_SUPPORT && !noZero) {\n    for (i = 0; i < length; i++) {\n      buf[i] = 0\n    }\n  }\n\n  return buf\n}\n\nBuffer.isBuffer = function (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b))\n    throw new TypeError('Arguments must be Buffers')\n\n  var x = a.length\n  var y = b.length\n  for (var i = 0, len = Math.min(x, y); i < len && a[i] === b[i]; i++) {}\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function (list, totalLength) {\n  if (!isArray(list)) throw new TypeError('Usage: Buffer.concat(list[, length])')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  } else if (list.length === 1) {\n    return list[0]\n  }\n\n  var i\n  if (totalLength === undefined) {\n    totalLength = 0\n    for (i = 0; i < list.length; i++) {\n      totalLength += list[i].length\n    }\n  }\n\n  var buf = new Buffer(totalLength)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nBuffer.byteLength = function (str, encoding) {\n  var ret\n  str = str + ''\n  switch (encoding || 'utf8') {\n    case 'ascii':\n    case 'binary':\n    case 'raw':\n      ret = str.length\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = str.length * 2\n      break\n    case 'hex':\n      ret = str.length >>> 1\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8ToBytes(str).length\n      break\n    case 'base64':\n      ret = base64ToBytes(str).length\n      break\n    default:\n      ret = str.length\n  }\n  return ret\n}\n\n// pre-set for values that may exist in the future\nBuffer.prototype.length = undefined\nBuffer.prototype.parent = undefined\n\n// toString(encoding, start=0, end=buffer.length)\nBuffer.prototype.toString = function (encoding, start, end) {\n  var loweredCase = false\n\n  start = start >>> 0\n  end = end === undefined || end === Infinity ? this.length : end >>> 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase)\n          throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.equals = function (b) {\n  if(!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max)\n      str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  return Buffer.compare(this, b)\n}\n\n// `get` will be removed in Node 0.13+\nBuffer.prototype.get = function (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` will be removed in Node 0.13+\nBuffer.prototype.set = function (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var byte = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(byte)) throw new Error('Invalid hex string')\n    buf[offset + i] = byte\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf8ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(asciiToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(base64ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction utf16leWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf16leToBytes(string), buf, offset, length, 2)\n  return charsWritten\n}\n\nBuffer.prototype.write = function (string, offset, length, encoding) {\n  // Support both (string, offset, length, encoding)\n  // and the legacy (string, encoding, offset, length)\n  if (isFinite(offset)) {\n    if (!isFinite(length)) {\n      encoding = length\n      length = undefined\n    }\n  } else {  // legacy\n    var swap = encoding\n    encoding = offset\n    offset = length\n    length = swap\n  }\n\n  offset = Number(offset) || 0\n  var remaining = this.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n  encoding = String(encoding || 'utf8').toLowerCase()\n\n  var ret\n  switch (encoding) {\n    case 'hex':\n      ret = hexWrite(this, string, offset, length)\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8Write(this, string, offset, length)\n      break\n    case 'ascii':\n      ret = asciiWrite(this, string, offset, length)\n      break\n    case 'binary':\n      ret = binaryWrite(this, string, offset, length)\n      break\n    case 'base64':\n      ret = base64Write(this, string, offset, length)\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = utf16leWrite(this, string, offset, length)\n      break\n    default:\n      throw new TypeError('Unknown encoding: ' + encoding)\n  }\n  return ret\n}\n\nBuffer.prototype.toJSON = function () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  var res = ''\n  var tmp = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    if (buf[i] <= 0x7F) {\n      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])\n      tmp = ''\n    } else {\n      tmp += '%' + buf[i].toString(16)\n    }\n  }\n\n  return res + decodeUtf8Char(tmp)\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  return asciiSlice(buf, start, end)\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len;\n    if (start < 0)\n      start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0)\n      end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start)\n    end = start\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    return Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    var newBuf = new Buffer(sliceLen, undefined, true)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n    return newBuf\n  }\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0)\n    throw new RangeError('offset is not uint')\n  if (offset + ext > length)\n    throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUInt8 = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n      ((this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      this[offset + 3])\n}\n\nBuffer.prototype.readInt8 = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80))\n    return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16) |\n      (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n      (this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new TypeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new TypeError('index out of range')\n}\n\nBuffer.prototype.writeUInt8 = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = value\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else objectWriteUInt16(this, value, offset, true)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else objectWriteUInt16(this, value, offset, false)\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = value\n  } else objectWriteUInt32(this, value, offset, true)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else objectWriteUInt32(this, value, offset, false)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt8 = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = value\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else objectWriteUInt16(this, value, offset, true)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else objectWriteUInt16(this, value, offset, false)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else objectWriteUInt32(this, value, offset, true)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else objectWriteUInt32(this, value, offset, false)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new TypeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new TypeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert)\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert)\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function (target, target_start, start, end) {\n  var source = this\n\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (!target_start) target_start = 0\n\n  // Copy 0 bytes; we're done\n  if (end === start) return\n  if (target.length === 0 || source.length === 0) return\n\n  // Fatal error conditions\n  if (end < start) throw new TypeError('sourceEnd < sourceStart')\n  if (target_start < 0 || target_start >= target.length)\n    throw new TypeError('targetStart out of bounds')\n  if (start < 0 || start >= source.length) throw new TypeError('sourceStart out of bounds')\n  if (end < 0 || end > source.length) throw new TypeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length)\n    end = this.length\n  if (target.length - target_start < end - start)\n    end = target.length - target_start + start\n\n  var len = end - start\n\n  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < len; i++) {\n      target[i + target_start] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), target_start)\n  }\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new TypeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new TypeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new TypeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array get/set methods before overwriting\n  arr._get = arr.get\n  arr._set = arr.set\n\n  // deprecated, will be removed in node 0.13+\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-z]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction isArrayish (subject) {\n  return isArray(subject) || Buffer.isBuffer(subject) ||\n      subject && typeof subject === 'object' &&\n      typeof subject.length === 'number'\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    var b = str.charCodeAt(i)\n    if (b <= 0x7F) {\n      byteArray.push(b)\n    } else {\n      var start = i\n      if (b >= 0xD800 && b <= 0xDFFF) i++\n      var h = encodeURIComponent(str.slice(start, i+1)).substr(1).split('%')\n      for (var j = 0; j < h.length; j++) {\n        byteArray.push(parseInt(h[j], 16))\n      }\n    }\n  }\n  return byteArray\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(str)\n}\n\nfunction blitBuffer (src, dst, offset, length, unitSize) {\n  if (unitSize) length -= length % unitSize;\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length))\n      break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction decodeUtf8Char (str) {\n  try {\n    return decodeURIComponent(str)\n  } catch (err) {\n    return String.fromCharCode(0xFFFD) // UTF 8 invalid char\n  }\n}\n\n},{\"base64-js\":15,\"ieee754\":16,\"is-array\":17}],15:[function(require,module,exports){\nvar lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n\n},{}],16:[function(require,module,exports){\nexports.read = function(buffer, offset, isLE, mLen, nBytes) {\n  var e, m,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      nBits = -7,\n      i = isLE ? (nBytes - 1) : 0,\n      d = isLE ? -1 : 1,\n      s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity);\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\n      i = isLE ? 0 : (nBytes - 1),\n      d = isLE ? 1 : -1,\n      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n\n  buffer[offset + i - d] |= s * 128;\n};\n\n},{}],17:[function(require,module,exports){\n\n/**\n * isArray\n */\n\nvar isArray = Array.isArray;\n\n/**\n * toString\n */\n\nvar str = Object.prototype.toString;\n\n/**\n * Whether or not the given `val`\n * is an array.\n *\n * example:\n *\n *        isArray([]);\n *        // > true\n *        isArray(arguments);\n *        // > false\n *        isArray('');\n *        // > false\n *\n * @param {mixed} val\n * @return {bool}\n */\n\nmodule.exports = isArray || function (val) {\n  return !! val && '[object Array]' == str.call(val);\n};\n\n},{}],18:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        len = arguments.length;\n        args = new Array(len - 1);\n        for (i = 1; i < len; i++)\n          args[i - 1] = arguments[i];\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    len = arguments.length;\n    args = new Array(len - 1);\n    for (i = 1; i < len; i++)\n      args[i - 1] = arguments[i];\n\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    var m;\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  var ret;\n  if (!emitter._events || !emitter._events[type])\n    ret = 0;\n  else if (isFunction(emitter._events[type]))\n    ret = 1;\n  else\n    ret = emitter._events[type].length;\n  return ret;\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n},{}],19:[function(require,module,exports){\nvar http = module.exports;\nvar EventEmitter = require('events').EventEmitter;\nvar Request = require('./lib/request');\nvar url = require('url')\n\nhttp.request = function (params, cb) {\n    if (typeof params === 'string') {\n        params = url.parse(params)\n    }\n    if (!params) params = {};\n    if (!params.host && !params.port) {\n        params.port = parseInt(window.location.port, 10);\n    }\n    if (!params.host && params.hostname) {\n        params.host = params.hostname;\n    }\n\n    if (!params.protocol) {\n        if (params.scheme) {\n            params.protocol = params.scheme + ':';\n        } else {\n            params.protocol = window.location.protocol;\n        }\n    }\n\n    if (!params.host) {\n        params.host = window.location.hostname || window.location.host;\n    }\n    if (/:/.test(params.host)) {\n        if (!params.port) {\n            params.port = params.host.split(':')[1];\n        }\n        params.host = params.host.split(':')[0];\n    }\n    if (!params.port) params.port = params.protocol == 'https:' ? 443 : 80;\n    \n    var req = new Request(new xhrHttp, params);\n    if (cb) req.on('response', cb);\n    return req;\n};\n\nhttp.get = function (params, cb) {\n    params.method = 'GET';\n    var req = http.request(params, cb);\n    req.end();\n    return req;\n};\n\nhttp.Agent = function () {};\nhttp.Agent.defaultMaxSockets = 4;\n\nvar xhrHttp = (function () {\n    if (typeof window === 'undefined') {\n        throw new Error('no window object present');\n    }\n    else if (window.XMLHttpRequest) {\n        return window.XMLHttpRequest;\n    }\n    else if (window.ActiveXObject) {\n        var axs = [\n            'Msxml2.XMLHTTP.6.0',\n            'Msxml2.XMLHTTP.3.0',\n            'Microsoft.XMLHTTP'\n        ];\n        for (var i = 0; i < axs.length; i++) {\n            try {\n                var ax = new(window.ActiveXObject)(axs[i]);\n                return function () {\n                    if (ax) {\n                        var ax_ = ax;\n                        ax = null;\n                        return ax_;\n                    }\n                    else {\n                        return new(window.ActiveXObject)(axs[i]);\n                    }\n                };\n            }\n            catch (e) {}\n        }\n        throw new Error('ajax not supported in this browser')\n    }\n    else {\n        throw new Error('ajax not supported in this browser');\n    }\n})();\n\nhttp.STATUS_CODES = {\n    100 : 'Continue',\n    101 : 'Switching Protocols',\n    102 : 'Processing',                 // RFC 2518, obsoleted by RFC 4918\n    200 : 'OK',\n    201 : 'Created',\n    202 : 'Accepted',\n    203 : 'Non-Authoritative Information',\n    204 : 'No Content',\n    205 : 'Reset Content',\n    206 : 'Partial Content',\n    207 : 'Multi-Status',               // RFC 4918\n    300 : 'Multiple Choices',\n    301 : 'Moved Permanently',\n    302 : 'Moved Temporarily',\n    303 : 'See Other',\n    304 : 'Not Modified',\n    305 : 'Use Proxy',\n    307 : 'Temporary Redirect',\n    400 : 'Bad Request',\n    401 : 'Unauthorized',\n    402 : 'Payment Required',\n    403 : 'Forbidden',\n    404 : 'Not Found',\n    405 : 'Method Not Allowed',\n    406 : 'Not Acceptable',\n    407 : 'Proxy Authentication Required',\n    408 : 'Request Time-out',\n    409 : 'Conflict',\n    410 : 'Gone',\n    411 : 'Length Required',\n    412 : 'Precondition Failed',\n    413 : 'Request Entity Too Large',\n    414 : 'Request-URI Too Large',\n    415 : 'Unsupported Media Type',\n    416 : 'Requested Range Not Satisfiable',\n    417 : 'Expectation Failed',\n    418 : 'I\\'m a teapot',              // RFC 2324\n    422 : 'Unprocessable Entity',       // RFC 4918\n    423 : 'Locked',                     // RFC 4918\n    424 : 'Failed Dependency',          // RFC 4918\n    425 : 'Unordered Collection',       // RFC 4918\n    426 : 'Upgrade Required',           // RFC 2817\n    428 : 'Precondition Required',      // RFC 6585\n    429 : 'Too Many Requests',          // RFC 6585\n    431 : 'Request Header Fields Too Large',// RFC 6585\n    500 : 'Internal Server Error',\n    501 : 'Not Implemented',\n    502 : 'Bad Gateway',\n    503 : 'Service Unavailable',\n    504 : 'Gateway Time-out',\n    505 : 'HTTP Version Not Supported',\n    506 : 'Variant Also Negotiates',    // RFC 2295\n    507 : 'Insufficient Storage',       // RFC 4918\n    509 : 'Bandwidth Limit Exceeded',\n    510 : 'Not Extended',               // RFC 2774\n    511 : 'Network Authentication Required' // RFC 6585\n};\n},{\"./lib/request\":20,\"events\":18,\"url\":44}],20:[function(require,module,exports){\nvar Stream = require('stream');\nvar Response = require('./response');\nvar Base64 = require('Base64');\nvar inherits = require('inherits');\n\nvar Request = module.exports = function (xhr, params) {\n    var self = this;\n    self.writable = true;\n    self.xhr = xhr;\n    self.body = [];\n    \n    self.uri = (params.protocol || 'http:') + '//'\n        + params.host\n        + (params.port ? ':' + params.port : '')\n        + (params.path || '/')\n    ;\n    \n    if (typeof params.withCredentials === 'undefined') {\n        params.withCredentials = true;\n    }\n\n    try { xhr.withCredentials = params.withCredentials }\n    catch (e) {}\n    \n    if (params.responseType) try { xhr.responseType = params.responseType }\n    catch (e) {}\n    \n    xhr.open(\n        params.method || 'GET',\n        self.uri,\n        true\n    );\n\n    xhr.onerror = function(event) {\n        self.emit('error', new Error('Network error'));\n    };\n\n    self._headers = {};\n    \n    if (params.headers) {\n        var keys = objectKeys(params.headers);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            if (!self.isSafeRequestHeader(key)) continue;\n            var value = params.headers[key];\n            self.setHeader(key, value);\n        }\n    }\n    \n    if (params.auth) {\n        //basic auth\n        this.setHeader('Authorization', 'Basic ' + Base64.btoa(params.auth));\n    }\n\n    var res = new Response;\n    res.on('close', function () {\n        self.emit('close');\n    });\n    \n    res.on('ready', function () {\n        self.emit('response', res);\n    });\n\n    res.on('error', function (err) {\n        self.emit('error', err);\n    });\n    \n    xhr.onreadystatechange = function () {\n        // Fix for IE9 bug\n        // SCRIPT575: Could not complete the operation due to error c00c023f\n        // It happens when a request is aborted, calling the success callback anyway with readyState === 4\n        if (xhr.__aborted) return;\n        res.handle(xhr);\n    };\n};\n\ninherits(Request, Stream);\n\nRequest.prototype.setHeader = function (key, value) {\n    this._headers[key.toLowerCase()] = value\n};\n\nRequest.prototype.getHeader = function (key) {\n    return this._headers[key.toLowerCase()]\n};\n\nRequest.prototype.removeHeader = function (key) {\n    delete this._headers[key.toLowerCase()]\n};\n\nRequest.prototype.write = function (s) {\n    this.body.push(s);\n};\n\nRequest.prototype.destroy = function (s) {\n    this.xhr.__aborted = true;\n    this.xhr.abort();\n    this.emit('close');\n};\n\nRequest.prototype.end = function (s) {\n    if (s !== undefined) this.body.push(s);\n\n    var keys = objectKeys(this._headers);\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var value = this._headers[key];\n        if (isArray(value)) {\n            for (var j = 0; j < value.length; j++) {\n                this.xhr.setRequestHeader(key, value[j]);\n            }\n        }\n        else this.xhr.setRequestHeader(key, value)\n    }\n\n    if (this.body.length === 0) {\n        this.xhr.send('');\n    }\n    else if (typeof this.body[0] === 'string') {\n        this.xhr.send(this.body.join(''));\n    }\n    else if (isArray(this.body[0])) {\n        var body = [];\n        for (var i = 0; i < this.body.length; i++) {\n            body.push.apply(body, this.body[i]);\n        }\n        this.xhr.send(body);\n    }\n    else if (/Array/.test(Object.prototype.toString.call(this.body[0]))) {\n        var len = 0;\n        for (var i = 0; i < this.body.length; i++) {\n            len += this.body[i].length;\n        }\n        var body = new(this.body[0].constructor)(len);\n        var k = 0;\n        \n        for (var i = 0; i < this.body.length; i++) {\n            var b = this.body[i];\n            for (var j = 0; j < b.length; j++) {\n                body[k++] = b[j];\n            }\n        }\n        this.xhr.send(body);\n    }\n    else if (isXHR2Compatible(this.body[0])) {\n        this.xhr.send(this.body[0]);\n    }\n    else {\n        var body = '';\n        for (var i = 0; i < this.body.length; i++) {\n            body += this.body[i].toString();\n        }\n        this.xhr.send(body);\n    }\n};\n\n// Taken from http://dxr.mozilla.org/mozilla/mozilla-central/content/base/src/nsXMLHttpRequest.cpp.html\nRequest.unsafeHeaders = [\n    \"accept-charset\",\n    \"accept-encoding\",\n    \"access-control-request-headers\",\n    \"access-control-request-method\",\n    \"connection\",\n    \"content-length\",\n    \"cookie\",\n    \"cookie2\",\n    \"content-transfer-encoding\",\n    \"date\",\n    \"expect\",\n    \"host\",\n    \"keep-alive\",\n    \"origin\",\n    \"referer\",\n    \"te\",\n    \"trailer\",\n    \"transfer-encoding\",\n    \"upgrade\",\n    \"user-agent\",\n    \"via\"\n];\n\nRequest.prototype.isSafeRequestHeader = function (headerName) {\n    if (!headerName) return false;\n    return indexOf(Request.unsafeHeaders, headerName.toLowerCase()) === -1;\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    return keys;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nvar indexOf = function (xs, x) {\n    if (xs.indexOf) return xs.indexOf(x);\n    for (var i = 0; i < xs.length; i++) {\n        if (xs[i] === x) return i;\n    }\n    return -1;\n};\n\nvar isXHR2Compatible = function (obj) {\n    if (typeof Blob !== 'undefined' && obj instanceof Blob) return true;\n    if (typeof ArrayBuffer !== 'undefined' && obj instanceof ArrayBuffer) return true;\n    if (typeof FormData !== 'undefined' && obj instanceof FormData) return true;\n};\n\n},{\"./response\":21,\"Base64\":22,\"inherits\":24,\"stream\":42}],21:[function(require,module,exports){\nvar Stream = require('stream');\nvar util = require('util');\n\nvar Response = module.exports = function (res) {\n    this.offset = 0;\n    this.readable = true;\n};\n\nutil.inherits(Response, Stream);\n\nvar capable = {\n    streaming : true,\n    status2 : true\n};\n\nfunction parseHeaders (res) {\n    var lines = res.getAllResponseHeaders().split(/\\r?\\n/);\n    var headers = {};\n    for (var i = 0; i < lines.length; i++) {\n        var line = lines[i];\n        if (line === '') continue;\n        \n        var m = line.match(/^([^:]+):\\s*(.*)/);\n        if (m) {\n            var key = m[1].toLowerCase(), value = m[2];\n            \n            if (headers[key] !== undefined) {\n            \n                if (isArray(headers[key])) {\n                    headers[key].push(value);\n                }\n                else {\n                    headers[key] = [ headers[key], value ];\n                }\n            }\n            else {\n                headers[key] = value;\n            }\n        }\n        else {\n            headers[line] = true;\n        }\n    }\n    return headers;\n}\n\nResponse.prototype.getResponse = function (xhr) {\n    var respType = String(xhr.responseType).toLowerCase();\n    if (respType === 'blob') return xhr.responseBlob || xhr.response;\n    if (respType === 'arraybuffer') return xhr.response;\n    return xhr.responseText;\n}\n\nResponse.prototype.getHeader = function (key) {\n    return this.headers[key.toLowerCase()];\n};\n\nResponse.prototype.handle = function (res) {\n    if (res.readyState === 2 && capable.status2) {\n        try {\n            this.statusCode = res.status;\n            this.headers = parseHeaders(res);\n        }\n        catch (err) {\n            capable.status2 = false;\n        }\n        \n        if (capable.status2) {\n            this.emit('ready');\n        }\n    }\n    else if (capable.streaming && res.readyState === 3) {\n        try {\n            if (!this.statusCode) {\n                this.statusCode = res.status;\n                this.headers = parseHeaders(res);\n                this.emit('ready');\n            }\n        }\n        catch (err) {}\n        \n        try {\n            this._emitData(res);\n        }\n        catch (err) {\n            capable.streaming = false;\n        }\n    }\n    else if (res.readyState === 4) {\n        if (!this.statusCode) {\n            this.statusCode = res.status;\n            this.emit('ready');\n        }\n        this._emitData(res);\n        \n        if (res.error) {\n            this.emit('error', this.getResponse(res));\n        }\n        else this.emit('end');\n        \n        this.emit('close');\n    }\n};\n\nResponse.prototype._emitData = function (res) {\n    var respBody = this.getResponse(res);\n    if (respBody.toString().match(/ArrayBuffer/)) {\n        this.emit('data', new Uint8Array(respBody, this.offset));\n        this.offset = respBody.byteLength;\n        return;\n    }\n    if (respBody.length > this.offset) {\n        this.emit('data', respBody.slice(this.offset));\n        this.offset = respBody.length;\n    }\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n},{\"stream\":42,\"util\":46}],22:[function(require,module,exports){\n;(function () {\n\n  var object = typeof exports != 'undefined' ? exports : this; // #8: web workers\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  function InvalidCharacterError(message) {\n    this.message = message;\n  }\n  InvalidCharacterError.prototype = new Error;\n  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n  // encoder\n  // [https://gist.github.com/999166] by [https://github.com/nignag]\n  object.btoa || (\n  object.btoa = function (input) {\n    for (\n      // initialize result and counter\n      var block, charCode, idx = 0, map = chars, output = '';\n      // if the next input index does not exist:\n      //   change the mapping table to \"=\"\n      //   check if d has no fractional digits\n      input.charAt(idx | 0) || (map = '=', idx % 1);\n      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n    ) {\n      charCode = input.charCodeAt(idx += 3/4);\n      if (charCode > 0xFF) {\n        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n      block = block << 8 | charCode;\n    }\n    return output;\n  });\n\n  // decoder\n  // [https://gist.github.com/1020396] by [https://github.com/atk]\n  object.atob || (\n  object.atob = function (input) {\n    input = input.replace(/=+$/, '');\n    if (input.length % 4 == 1) {\n      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    for (\n      // initialize result and counters\n      var bc = 0, bs, buffer, idx = 0, output = '';\n      // get next character\n      buffer = input.charAt(idx++);\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  });\n\n}());\n\n},{}],23:[function(require,module,exports){\nvar http = require('http');\n\nvar https = module.exports;\n\nfor (var key in http) {\n    if (http.hasOwnProperty(key)) https[key] = http[key];\n};\n\nhttps.request = function (params, cb) {\n    if (!params) params = {};\n    params.scheme = 'https';\n    return http.request.call(this, params, cb);\n}\n\n},{\"http\":19}],24:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n},{}],25:[function(require,module,exports){\nmodule.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n},{}],26:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canMutationObserver = typeof window !== 'undefined'\n    && window.MutationObserver;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    var queue = [];\n\n    if (canMutationObserver) {\n        var hiddenDiv = document.createElement(\"div\");\n        var observer = new MutationObserver(function () {\n            var queueList = queue.slice();\n            queue.length = 0;\n            queueList.forEach(function (fn) {\n                fn();\n            });\n        });\n\n        observer.observe(hiddenDiv, { attributes: true });\n\n        return function nextTick(fn) {\n            if (!queue.length) {\n                hiddenDiv.setAttribute('yes', 'no');\n            }\n            queue.push(fn);\n        };\n    }\n\n    if (canPost) {\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n\n},{}],27:[function(require,module,exports){\n(function (global){\n/*! http://mths.be/punycode v1.2.4 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^ -~]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /\\x2E|\\u3002|\\uFF0E|\\uFF61/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\twhile (length--) {\n\t\t\tarray[length] = fn(array[length]);\n\t\t}\n\t\treturn array;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings.\n\t * @private\n\t * @param {String} domain The domain name.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\treturn map(string.split(regexSeparators), fn).join('.');\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <http://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols to a Punycode string of ASCII-only\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name to Unicode. Only the\n\t * Punycoded parts of the domain name will be converted, i.e. it doesn't\n\t * matter if you call it on a string that has already been converted to\n\t * Unicode.\n\t * @memberOf punycode\n\t * @param {String} domain The Punycode domain name to convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(domain) {\n\t\treturn mapDomain(domain, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name to Punycode. Only the\n\t * non-ASCII parts of the domain name will be converted, i.e. it doesn't\n\t * matter if you call it with a domain that's already in ASCII.\n\t * @memberOf punycode\n\t * @param {String} domain The domain name to convert, as a Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name.\n\t */\n\tfunction toASCII(domain) {\n\t\treturn mapDomain(domain, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.2.4',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <http://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],28:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n},{}],29:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n},{}],30:[function(require,module,exports){\n'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n},{\"./decode\":28,\"./encode\":29}],31:[function(require,module,exports){\nmodule.exports = require(\"./lib/_stream_duplex.js\")\n\n},{\"./lib/_stream_duplex.js\":32}],32:[function(require,module,exports){\n(function (process){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nforEach(objectKeys(Writable.prototype), function(method) {\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\n}).call(this,require('_process'))\n\n},{\"./_stream_readable\":34,\"./_stream_writable\":36,\"_process\":26,\"core-util-is\":37,\"inherits\":24}],33:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function(chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n},{\"./_stream_transform\":35,\"core-util-is\":37,\"inherits\":24}],34:[function(require,module,exports){\n(function (process){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events').EventEmitter;\n\n/*<replacement>*/\nif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\nvar Stream = require('stream');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nfunction ReadableState(options, stream) {\n  options = options || {};\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = false;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // In streams that never have any data, and do push(null) right away,\n  // the consumer can miss the 'end' event if they do some I/O before\n  // consuming the stream.  So, we don't emit('end') until some reading\n  // happens.\n  this.calledRead = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, becuase any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (typeof chunk === 'string' && !state.objectMode) {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null || chunk === undefined) {\n    state.reading = false;\n    if (!state.ended)\n      onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      // update the buffer info.\n      state.length += state.objectMode ? 1 : chunk.length;\n      if (addToFront) {\n        state.buffer.unshift(chunk);\n      } else {\n        state.reading = false;\n        state.buffer.push(chunk);\n      }\n\n      if (state.needReadable)\n        emitReadable(stream);\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n};\n\n// Don't raise the hwm > 128MB\nvar MAX_HWM = 0x800000;\nfunction roundUpToNextPowerOf2(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (n === null || isNaN(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else\n      return state.length;\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  var state = this._readableState;\n  state.calledRead = true;\n  var nOrig = n;\n  var ret;\n\n  if (typeof n !== 'number' || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    ret = null;\n\n    // In cases where the decoder did not receive enough data\n    // to produce a full chunk, then immediately received an\n    // EOF, state.buffer will contain [<Buffer >, <Buffer 00 ...>].\n    // howMuchToRead will see this and coerce the amount to\n    // read to zero (because it's looking at the length of the\n    // first <Buffer > in state.buffer), and we'll end up here.\n    //\n    // This can only happen via state.decoder -- no other venue\n    // exists for pushing a zero-length chunk into state.buffer\n    // and triggering this behavior. In this case, we return our\n    // remaining data and end the stream, if appropriate.\n    if (state.length > 0 && state.decoder) {\n      ret = fromList(n, state);\n      state.length -= ret.length;\n    }\n\n    if (state.length === 0)\n      endReadable(this);\n\n    return ret;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length - n <= state.highWaterMark)\n    doRead = true;\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading)\n    doRead = false;\n\n  if (doRead) {\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read called its callback synchronously, then `reading`\n  // will be false, and we need to re-evaluate how much data we\n  // can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we happened to read() exactly the remaining amount in the\n  // buffer, and the EOF has been seen at this point, then make sure\n  // that we emit 'end' on the very next tick.\n  if (state.ended && !state.endEmitted && state.length === 0)\n    endReadable(this);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!Buffer.isBuffer(chunk) &&\n      'string' !== typeof chunk &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.decoder && !state.ended) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // if we've ended and we have some data left, then emit\n  // 'readable' now to make sure it gets picked up.\n  if (state.length > 0)\n    emitReadable(stream);\n  else\n    endReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (state.emittedReadable)\n    return;\n\n  state.emittedReadable = true;\n  if (state.sync)\n    process.nextTick(function() {\n      emitReadable_(stream);\n    });\n  else\n    emitReadable_(stream);\n}\n\nfunction emitReadable_(stream) {\n  stream.emit('readable');\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(function() {\n      maybeReadMore_(stream, state);\n    });\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    if (readable !== src) return;\n    cleanup();\n  }\n\n  function onend() {\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  function cleanup() {\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (!dest._writableState || dest._writableState.needDrain)\n      ondrain();\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EE.listenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    // the handler that waits for readable events after all\n    // the data gets sucked out in flow.\n    // This would be easier to follow with a .once() handler\n    // in flow(), but that is too slow.\n    this.on('readable', pipeOnReadable);\n\n    state.flowing = true;\n    process.nextTick(function() {\n      flow(src);\n    });\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var dest = this;\n    var state = src._readableState;\n    state.awaitDrain--;\n    if (state.awaitDrain === 0)\n      flow(src);\n  };\n}\n\nfunction flow(src) {\n  var state = src._readableState;\n  var chunk;\n  state.awaitDrain = 0;\n\n  function write(dest, i, list) {\n    var written = dest.write(chunk);\n    if (false === written) {\n      state.awaitDrain++;\n    }\n  }\n\n  while (state.pipesCount && null !== (chunk = src.read())) {\n\n    if (state.pipesCount === 1)\n      write(state.pipes, 0, null);\n    else\n      forEach(state.pipes, write);\n\n    src.emit('data', chunk);\n\n    // if anyone needs a drain, then we have to wait for that.\n    if (state.awaitDrain > 0)\n      return;\n  }\n\n  // if every destination was unpiped, either before entering this\n  // function, or in the while loop, then stop flowing.\n  //\n  // NB: This is a pretty rare edge case.\n  if (state.pipesCount === 0) {\n    state.flowing = false;\n\n    // if there were data event listeners added, then switch to old mode.\n    if (EE.listenerCount(src, 'data') > 0)\n      emitDataEvents(src);\n    return;\n  }\n\n  // at this point, no one needed a drain, so we just ran out of data\n  // on the next readable event, start it over again.\n  state.ranOut = true;\n}\n\nfunction pipeOnReadable() {\n  if (this._readableState.ranOut) {\n    this._readableState.ranOut = false;\n    flow(this);\n  }\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    this.removeListener('readable', pipeOnReadable);\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    this.removeListener('readable', pipeOnReadable);\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data' && !this._readableState.flowing)\n    emitDataEvents(this);\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        this.read(0);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  emitDataEvents(this);\n  this.read(0);\n  this.emit('resume');\n};\n\nReadable.prototype.pause = function() {\n  emitDataEvents(this, true);\n  this.emit('pause');\n};\n\nfunction emitDataEvents(stream, startPaused) {\n  var state = stream._readableState;\n\n  if (state.flowing) {\n    // https://github.com/isaacs/readable-stream/issues/16\n    throw new Error('Cannot switch to old mode now.');\n  }\n\n  var paused = startPaused || false;\n  var readable = false;\n\n  // convert to an old-style stream.\n  stream.readable = true;\n  stream.pipe = Stream.prototype.pipe;\n  stream.on = stream.addListener = Stream.prototype.on;\n\n  stream.on('readable', function() {\n    readable = true;\n\n    var c;\n    while (!paused && (null !== (c = stream.read())))\n      stream.emit('data', c);\n\n    if (c === null) {\n      readable = false;\n      stream._readableState.needReadable = true;\n    }\n  });\n\n  stream.pause = function() {\n    paused = true;\n    this.emit('pause');\n  };\n\n  stream.resume = function() {\n    paused = false;\n    if (readable)\n      process.nextTick(function() {\n        stream.emit('readable');\n      });\n    else\n      this.read(0);\n    this.emit('resume');\n  };\n\n  // now make it start, just in case it hadn't already.\n  stream.emit('readable');\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    //if (state.objectMode && util.isNullOrUndefined(chunk))\n    if (state.objectMode && (chunk === null || chunk === undefined))\n      return;\n    else if (!state.objectMode && (!chunk || !chunk.length))\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (typeof stream[i] === 'function' &&\n        typeof this[i] === 'undefined') {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }}(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted && state.calledRead) {\n    state.ended = true;\n    process.nextTick(function() {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    });\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n}).call(this,require('_process'))\n\n},{\"_process\":26,\"buffer\":14,\"core-util-is\":37,\"events\":18,\"inherits\":24,\"isarray\":25,\"stream\":42,\"string_decoder/\":43}],35:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(options, stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined)\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  var ts = this._transformState = new TransformState(options, this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this.once('finish', function() {\n    if ('function' === typeof this._flush)\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var rs = stream._readableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n},{\"./_stream_duplex\":32,\"core-util-is\":37,\"inherits\":24}],36:[function(require,module,exports){\n(function (process){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, cb), and it'll handle all\n// the drain event emission and buffering.\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Stream = require('stream');\n\nutil.inherits(Writable, Stream);\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n}\n\nfunction WritableState(options, stream) {\n  options = options || {};\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, becuase any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.buffer = [];\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nfunction Writable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, state, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  process.nextTick(function() {\n    cb(er);\n  });\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  if (!Buffer.isBuffer(chunk) &&\n      'string' !== typeof chunk &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    process.nextTick(function() {\n      cb(er);\n    });\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function')\n    cb = function() {};\n\n  if (state.ended)\n    writeAfterEnd(this, state, cb);\n  else if (validChunk(this, state, chunk, cb))\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n\n  return ret;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      typeof chunk === 'string') {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing)\n    state.buffer.push(new WriteReq(chunk, encoding, cb));\n  else\n    doWrite(stream, state, len, chunk, encoding, cb);\n\n  return ret;\n}\n\nfunction doWrite(stream, state, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  if (sync)\n    process.nextTick(function() {\n      cb(er);\n    });\n  else\n    cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(stream, state);\n\n    if (!finished && !state.bufferProcessing && state.buffer.length)\n      clearBuffer(stream, state);\n\n    if (sync) {\n      process.nextTick(function() {\n        afterWrite(stream, state, finished, cb);\n      });\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  cb();\n  if (finished)\n    finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n\n  for (var c = 0; c < state.buffer.length; c++) {\n    var entry = state.buffer[c];\n    var chunk = entry.chunk;\n    var encoding = entry.encoding;\n    var cb = entry.callback;\n    var len = state.objectMode ? 1 : chunk.length;\n\n    doWrite(stream, state, len, chunk, encoding, cb);\n\n    // if we didn't call the onwrite immediately, then\n    // it means that we need to wait until it does.\n    // also, that means that the chunk and cb are currently\n    // being processed, so move the buffer counter past them.\n    if (state.writing) {\n      c++;\n      break;\n    }\n  }\n\n  state.bufferProcessing = false;\n  if (c < state.buffer.length)\n    state.buffer = state.buffer.slice(c);\n  else\n    state.buffer.length = 0;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (typeof chunk !== 'undefined' && chunk !== null)\n    this.write(chunk, encoding);\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(stream, state) {\n  return (state.ending &&\n          state.length === 0 &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(stream, state);\n  if (need) {\n    state.finished = true;\n    stream.emit('finish');\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      process.nextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n\n}).call(this,require('_process'))\n\n},{\"./_stream_duplex\":32,\"_process\":26,\"buffer\":14,\"core-util-is\":37,\"inherits\":24,\"stream\":42}],37:[function(require,module,exports){\n(function (Buffer){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nfunction isBuffer(arg) {\n  return Buffer.isBuffer(arg);\n}\nexports.isBuffer = isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":14}],38:[function(require,module,exports){\nmodule.exports = require(\"./lib/_stream_passthrough.js\")\n\n},{\"./lib/_stream_passthrough.js\":33}],39:[function(require,module,exports){\nvar Stream = require('stream'); // hack to fix a circular dependency issue when used with browserify\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = Stream;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n\n},{\"./lib/_stream_duplex.js\":32,\"./lib/_stream_passthrough.js\":33,\"./lib/_stream_readable.js\":34,\"./lib/_stream_transform.js\":35,\"./lib/_stream_writable.js\":36,\"stream\":42}],40:[function(require,module,exports){\nmodule.exports = require(\"./lib/_stream_transform.js\")\n\n},{\"./lib/_stream_transform.js\":35}],41:[function(require,module,exports){\nmodule.exports = require(\"./lib/_stream_writable.js\")\n\n},{\"./lib/_stream_writable.js\":36}],42:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n},{\"events\":18,\"inherits\":24,\"readable-stream/duplex.js\":31,\"readable-stream/passthrough.js\":38,\"readable-stream/readable.js\":39,\"readable-stream/transform.js\":40,\"readable-stream/writable.js\":41}],43:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n\n},{\"buffer\":14}],44:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar punycode = require('punycode');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a puny coded representation of \"domain\".\n      // It only converts the part of the domain name that\n      // has non ASCII characters. I.e. it dosent matter if\n      // you call it with a domain that already is in ASCII.\n      var domainArray = this.hostname.split('.');\n      var newOut = [];\n      for (var i = 0; i < domainArray.length; ++i) {\n        var s = domainArray[i];\n        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n            'xn--' + punycode.encode(s) : s);\n      }\n      this.hostname = newOut.join('.');\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  Object.keys(this).forEach(function(k) {\n    result[k] = this[k];\n  }, this);\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    Object.keys(relative).forEach(function(k) {\n      if (k !== 'protocol')\n        result[k] = relative[k];\n    });\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      Object.keys(relative).forEach(function(k) {\n        result[k] = relative[k];\n      });\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especialy happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host) && (last === '.' || last === '..') ||\n      last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last == '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especialy happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\nfunction isString(arg) {\n  return typeof arg === \"string\";\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\nfunction isNullOrUndefined(arg) {\n  return  arg == null;\n}\n\n},{\"punycode\":27,\"querystring\":30}],45:[function(require,module,exports){\nmodule.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n},{}],46:[function(require,module,exports){\n(function (process,global){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./support/isBuffer\":45,\"_process\":26,\"inherits\":24}],47:[function(require,module,exports){\n(function (global){\n/*! http://mths.be/he v0.5.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// All astral symbols.\n\tvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\t// All ASCII symbols (not just printable ASCII) except those listed in the\n\t// first column of the overrides table.\n\t// http://whatwg.org/html/tokenization.html#table-charref-overrides\n\tvar regexAsciiWhitelist = /[\\x01-\\x7F]/g;\n\t// All BMP symbols that are not ASCII newlines, printable ASCII symbols, or\n\t// code points listed in the first column of the overrides table on\n\t// http://whatwg.org/html/tokenization.html#table-charref-overrides.\n\tvar regexBmpWhitelist = /[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g;\n\n\tvar regexEncodeNonAscii = /<\\u20D2|=\\u20E5|>\\u20D2|\\u205F\\u200A|\\u219D\\u0338|\\u2202\\u0338|\\u2220\\u20D2|\\u2229\\uFE00|\\u222A\\uFE00|\\u223C\\u20D2|\\u223D\\u0331|\\u223E\\u0333|\\u2242\\u0338|\\u224B\\u0338|\\u224D\\u20D2|\\u224E\\u0338|\\u224F\\u0338|\\u2250\\u0338|\\u2261\\u20E5|\\u2264\\u20D2|\\u2265\\u20D2|\\u2266\\u0338|\\u2267\\u0338|\\u2268\\uFE00|\\u2269\\uFE00|\\u226A\\u0338|\\u226A\\u20D2|\\u226B\\u0338|\\u226B\\u20D2|\\u227F\\u0338|\\u2282\\u20D2|\\u2283\\u20D2|\\u228A\\uFE00|\\u228B\\uFE00|\\u228F\\u0338|\\u2290\\u0338|\\u2293\\uFE00|\\u2294\\uFE00|\\u22B4\\u20D2|\\u22B5\\u20D2|\\u22D8\\u0338|\\u22D9\\u0338|\\u22DA\\uFE00|\\u22DB\\uFE00|\\u22F5\\u0338|\\u22F9\\u0338|\\u2933\\u0338|\\u29CF\\u0338|\\u29D0\\u0338|\\u2A6D\\u0338|\\u2A70\\u0338|\\u2A7D\\u0338|\\u2A7E\\u0338|\\u2AA1\\u0338|\\u2AA2\\u0338|\\u2AAC\\uFE00|\\u2AAD\\uFE00|\\u2AAF\\u0338|\\u2AB0\\u0338|\\u2AC5\\u0338|\\u2AC6\\u0338|\\u2ACB\\uFE00|\\u2ACC\\uFE00|\\u2AFD\\u20E5|[\\xA0-\\u0113\\u0116-\\u0122\\u0124-\\u012B\\u012E-\\u014D\\u0150-\\u017E\\u0192\\u01B5\\u01F5\\u0237\\u02C6\\u02C7\\u02D8-\\u02DD\\u0311\\u0391-\\u03A1\\u03A3-\\u03A9\\u03B1-\\u03C9\\u03D1\\u03D2\\u03D5\\u03D6\\u03DC\\u03DD\\u03F0\\u03F1\\u03F5\\u03F6\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E\\u045F\\u2002-\\u2005\\u2007-\\u2010\\u2013-\\u2016\\u2018-\\u201A\\u201C-\\u201E\\u2020-\\u2022\\u2025\\u2026\\u2030-\\u2035\\u2039\\u203A\\u203E\\u2041\\u2043\\u2044\\u204F\\u2057\\u205F-\\u2063\\u20AC\\u20DB\\u20DC\\u2102\\u2105\\u210A-\\u2113\\u2115-\\u211E\\u2122\\u2124\\u2127-\\u2129\\u212C\\u212D\\u212F-\\u2131\\u2133-\\u2138\\u2145-\\u2148\\u2153-\\u215E\\u2190-\\u219B\\u219D-\\u21A7\\u21A9-\\u21AE\\u21B0-\\u21B3\\u21B5-\\u21B7\\u21BA-\\u21DB\\u21DD\\u21E4\\u21E5\\u21F5\\u21FD-\\u2205\\u2207-\\u2209\\u220B\\u220C\\u220F-\\u2214\\u2216-\\u2218\\u221A\\u221D-\\u2238\\u223A-\\u2257\\u2259\\u225A\\u225C\\u225F-\\u2262\\u2264-\\u228B\\u228D-\\u229B\\u229D-\\u22A5\\u22A7-\\u22B0\\u22B2-\\u22BB\\u22BD-\\u22DB\\u22DE-\\u22E3\\u22E6-\\u22F7\\u22F9-\\u22FE\\u2305\\u2306\\u2308-\\u2310\\u2312\\u2313\\u2315\\u2316\\u231C-\\u231F\\u2322\\u2323\\u232D\\u232E\\u2336\\u233D\\u233F\\u237C\\u23B0\\u23B1\\u23B4-\\u23B6\\u23DC-\\u23DF\\u23E2\\u23E7\\u2423\\u24C8\\u2500\\u2502\\u250C\\u2510\\u2514\\u2518\\u251C\\u2524\\u252C\\u2534\\u253C\\u2550-\\u256C\\u2580\\u2584\\u2588\\u2591-\\u2593\\u25A1\\u25AA\\u25AB\\u25AD\\u25AE\\u25B1\\u25B3-\\u25B5\\u25B8\\u25B9\\u25BD-\\u25BF\\u25C2\\u25C3\\u25CA\\u25CB\\u25EC\\u25EF\\u25F8-\\u25FC\\u2605\\u2606\\u260E\\u2640\\u2642\\u2660\\u2663\\u2665\\u2666\\u266A\\u266D-\\u266F\\u2713\\u2717\\u2720\\u2736\\u2758\\u2772\\u2773\\u27C8\\u27C9\\u27E6-\\u27ED\\u27F5-\\u27FA\\u27FC\\u27FF\\u2902-\\u2905\\u290C-\\u2913\\u2916\\u2919-\\u2920\\u2923-\\u292A\\u2933\\u2935-\\u2939\\u293C\\u293D\\u2945\\u2948-\\u294B\\u294E-\\u2976\\u2978\\u2979\\u297B-\\u297F\\u2985\\u2986\\u298B-\\u2996\\u299A\\u299C\\u299D\\u29A4-\\u29B7\\u29B9\\u29BB\\u29BC\\u29BE-\\u29C5\\u29C9\\u29CD-\\u29D0\\u29DC-\\u29DE\\u29E3-\\u29E5\\u29EB\\u29F4\\u29F6\\u2A00-\\u2A02\\u2A04\\u2A06\\u2A0C\\u2A0D\\u2A10-\\u2A17\\u2A22-\\u2A27\\u2A29\\u2A2A\\u2A2D-\\u2A31\\u2A33-\\u2A3C\\u2A3F\\u2A40\\u2A42-\\u2A4D\\u2A50\\u2A53-\\u2A58\\u2A5A-\\u2A5D\\u2A5F\\u2A66\\u2A6A\\u2A6D-\\u2A75\\u2A77-\\u2A9A\\u2A9D-\\u2AA2\\u2AA4-\\u2AB0\\u2AB3-\\u2AC8\\u2ACB\\u2ACC\\u2ACF-\\u2ADB\\u2AE4\\u2AE6-\\u2AE9\\u2AEB-\\u2AF3\\u2AFD\\uFB00-\\uFB04]|\\uD835[\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDD6B]/g;\n\tvar encodeMap = {'\\xC1':'Aacute','\\xE1':'aacute','\\u0102':'Abreve','\\u0103':'abreve','\\u223E':'ac','\\u223F':'acd','\\u223E\\u0333':'acE','\\xC2':'Acirc','\\xE2':'acirc','\\xB4':'acute','\\u0410':'Acy','\\u0430':'acy','\\xC6':'AElig','\\xE6':'aelig','\\u2061':'af','\\uD835\\uDD04':'Afr','\\uD835\\uDD1E':'afr','\\xC0':'Agrave','\\xE0':'agrave','\\u2135':'aleph','\\u0391':'Alpha','\\u03B1':'alpha','\\u0100':'Amacr','\\u0101':'amacr','\\u2A3F':'amalg','&':'amp','\\u2A55':'andand','\\u2A53':'And','\\u2227':'and','\\u2A5C':'andd','\\u2A58':'andslope','\\u2A5A':'andv','\\u2220':'ang','\\u29A4':'ange','\\u29A8':'angmsdaa','\\u29A9':'angmsdab','\\u29AA':'angmsdac','\\u29AB':'angmsdad','\\u29AC':'angmsdae','\\u29AD':'angmsdaf','\\u29AE':'angmsdag','\\u29AF':'angmsdah','\\u2221':'angmsd','\\u221F':'angrt','\\u22BE':'angrtvb','\\u299D':'angrtvbd','\\u2222':'angsph','\\xC5':'angst','\\u237C':'angzarr','\\u0104':'Aogon','\\u0105':'aogon','\\uD835\\uDD38':'Aopf','\\uD835\\uDD52':'aopf','\\u2A6F':'apacir','\\u2248':'ap','\\u2A70':'apE','\\u224A':'ape','\\u224B':'apid','\\'':'apos','\\xE5':'aring','\\uD835\\uDC9C':'Ascr','\\uD835\\uDCB6':'ascr','\\u2254':'colone','*':'ast','\\u224D':'CupCap','\\xC3':'Atilde','\\xE3':'atilde','\\xC4':'Auml','\\xE4':'auml','\\u2233':'awconint','\\u2A11':'awint','\\u224C':'bcong','\\u03F6':'bepsi','\\u2035':'bprime','\\u223D':'bsim','\\u22CD':'bsime','\\u2216':'setmn','\\u2AE7':'Barv','\\u22BD':'barvee','\\u2305':'barwed','\\u2306':'Barwed','\\u23B5':'bbrk','\\u23B6':'bbrktbrk','\\u0411':'Bcy','\\u0431':'bcy','\\u201E':'bdquo','\\u2235':'becaus','\\u29B0':'bemptyv','\\u212C':'Bscr','\\u0392':'Beta','\\u03B2':'beta','\\u2136':'beth','\\u226C':'twixt','\\uD835\\uDD05':'Bfr','\\uD835\\uDD1F':'bfr','\\u22C2':'xcap','\\u25EF':'xcirc','\\u22C3':'xcup','\\u2A00':'xodot','\\u2A01':'xoplus','\\u2A02':'xotime','\\u2A06':'xsqcup','\\u2605':'starf','\\u25BD':'xdtri','\\u25B3':'xutri','\\u2A04':'xuplus','\\u22C1':'Vee','\\u22C0':'Wedge','\\u290D':'rbarr','\\u29EB':'lozf','\\u25AA':'squf','\\u25B4':'utrif','\\u25BE':'dtrif','\\u25C2':'ltrif','\\u25B8':'rtrif','\\u2423':'blank','\\u2592':'blk12','\\u2591':'blk14','\\u2593':'blk34','\\u2588':'block','=\\u20E5':'bne','\\u2261\\u20E5':'bnequiv','\\u2AED':'bNot','\\u2310':'bnot','\\uD835\\uDD39':'Bopf','\\uD835\\uDD53':'bopf','\\u22A5':'bot','\\u22C8':'bowtie','\\u29C9':'boxbox','\\u2510':'boxdl','\\u2555':'boxdL','\\u2556':'boxDl','\\u2557':'boxDL','\\u250C':'boxdr','\\u2552':'boxdR','\\u2553':'boxDr','\\u2554':'boxDR','\\u2500':'boxh','\\u2550':'boxH','\\u252C':'boxhd','\\u2564':'boxHd','\\u2565':'boxhD','\\u2566':'boxHD','\\u2534':'boxhu','\\u2567':'boxHu','\\u2568':'boxhU','\\u2569':'boxHU','\\u229F':'minusb','\\u229E':'plusb','\\u22A0':'timesb','\\u2518':'boxul','\\u255B':'boxuL','\\u255C':'boxUl','\\u255D':'boxUL','\\u2514':'boxur','\\u2558':'boxuR','\\u2559':'boxUr','\\u255A':'boxUR','\\u2502':'boxv','\\u2551':'boxV','\\u253C':'boxvh','\\u256A':'boxvH','\\u256B':'boxVh','\\u256C':'boxVH','\\u2524':'boxvl','\\u2561':'boxvL','\\u2562':'boxVl','\\u2563':'boxVL','\\u251C':'boxvr','\\u255E':'boxvR','\\u255F':'boxVr','\\u2560':'boxVR','\\u02D8':'breve','\\xA6':'brvbar','\\uD835\\uDCB7':'bscr','\\u204F':'bsemi','\\u29C5':'bsolb','\\\\':'bsol','\\u27C8':'bsolhsub','\\u2022':'bull','\\u224E':'bump','\\u2AAE':'bumpE','\\u224F':'bumpe','\\u0106':'Cacute','\\u0107':'cacute','\\u2A44':'capand','\\u2A49':'capbrcup','\\u2A4B':'capcap','\\u2229':'cap','\\u22D2':'Cap','\\u2A47':'capcup','\\u2A40':'capdot','\\u2145':'DD','\\u2229\\uFE00':'caps','\\u2041':'caret','\\u02C7':'caron','\\u212D':'Cfr','\\u2A4D':'ccaps','\\u010C':'Ccaron','\\u010D':'ccaron','\\xC7':'Ccedil','\\xE7':'ccedil','\\u0108':'Ccirc','\\u0109':'ccirc','\\u2230':'Cconint','\\u2A4C':'ccups','\\u2A50':'ccupssm','\\u010A':'Cdot','\\u010B':'cdot','\\xB8':'cedil','\\u29B2':'cemptyv','\\xA2':'cent','\\xB7':'middot','\\uD835\\uDD20':'cfr','\\u0427':'CHcy','\\u0447':'chcy','\\u2713':'check','\\u03A7':'Chi','\\u03C7':'chi','\\u02C6':'circ','\\u2257':'cire','\\u21BA':'olarr','\\u21BB':'orarr','\\u229B':'oast','\\u229A':'ocir','\\u229D':'odash','\\u2299':'odot','\\xAE':'reg','\\u24C8':'oS','\\u2296':'ominus','\\u2295':'oplus','\\u2297':'otimes','\\u25CB':'cir','\\u29C3':'cirE','\\u2A10':'cirfnint','\\u2AEF':'cirmid','\\u29C2':'cirscir','\\u2232':'cwconint','\\u201D':'rdquo','\\u2019':'rsquo','\\u2663':'clubs',':':'colon','\\u2237':'Colon','\\u2A74':'Colone',',':'comma','@':'commat','\\u2201':'comp','\\u2218':'compfn','\\u2102':'Copf','\\u2245':'cong','\\u2A6D':'congdot','\\u2261':'equiv','\\u222E':'oint','\\u222F':'Conint','\\uD835\\uDD54':'copf','\\u2210':'coprod','\\xA9':'copy','\\u2117':'copysr','\\u21B5':'crarr','\\u2717':'cross','\\u2A2F':'Cross','\\uD835\\uDC9E':'Cscr','\\uD835\\uDCB8':'cscr','\\u2ACF':'csub','\\u2AD1':'csube','\\u2AD0':'csup','\\u2AD2':'csupe','\\u22EF':'ctdot','\\u2938':'cudarrl','\\u2935':'cudarrr','\\u22DE':'cuepr','\\u22DF':'cuesc','\\u21B6':'cularr','\\u293D':'cularrp','\\u2A48':'cupbrcap','\\u2A46':'cupcap','\\u222A':'cup','\\u22D3':'Cup','\\u2A4A':'cupcup','\\u228D':'cupdot','\\u2A45':'cupor','\\u222A\\uFE00':'cups','\\u21B7':'curarr','\\u293C':'curarrm','\\u22CE':'cuvee','\\u22CF':'cuwed','\\xA4':'curren','\\u2231':'cwint','\\u232D':'cylcty','\\u2020':'dagger','\\u2021':'Dagger','\\u2138':'daleth','\\u2193':'darr','\\u21A1':'Darr','\\u21D3':'dArr','\\u2010':'dash','\\u2AE4':'Dashv','\\u22A3':'dashv','\\u290F':'rBarr','\\u02DD':'dblac','\\u010E':'Dcaron','\\u010F':'dcaron','\\u0414':'Dcy','\\u0434':'dcy','\\u21CA':'ddarr','\\u2146':'dd','\\u2911':'DDotrahd','\\u2A77':'eDDot','\\xB0':'deg','\\u2207':'Del','\\u0394':'Delta','\\u03B4':'delta','\\u29B1':'demptyv','\\u297F':'dfisht','\\uD835\\uDD07':'Dfr','\\uD835\\uDD21':'dfr','\\u2965':'dHar','\\u21C3':'dharl','\\u21C2':'dharr','\\u02D9':'dot','`':'grave','\\u02DC':'tilde','\\u22C4':'diam','\\u2666':'diams','\\xA8':'die','\\u03DD':'gammad','\\u22F2':'disin','\\xF7':'div','\\u22C7':'divonx','\\u0402':'DJcy','\\u0452':'djcy','\\u231E':'dlcorn','\\u230D':'dlcrop','$':'dollar','\\uD835\\uDD3B':'Dopf','\\uD835\\uDD55':'dopf','\\u20DC':'DotDot','\\u2250':'doteq','\\u2251':'eDot','\\u2238':'minusd','\\u2214':'plusdo','\\u22A1':'sdotb','\\u21D0':'lArr','\\u21D4':'iff','\\u27F8':'xlArr','\\u27FA':'xhArr','\\u27F9':'xrArr','\\u21D2':'rArr','\\u22A8':'vDash','\\u21D1':'uArr','\\u21D5':'vArr','\\u2225':'par','\\u2913':'DownArrowBar','\\u21F5':'duarr','\\u0311':'DownBreve','\\u2950':'DownLeftRightVector','\\u295E':'DownLeftTeeVector','\\u2956':'DownLeftVectorBar','\\u21BD':'lhard','\\u295F':'DownRightTeeVector','\\u2957':'DownRightVectorBar','\\u21C1':'rhard','\\u21A7':'mapstodown','\\u22A4':'top','\\u2910':'RBarr','\\u231F':'drcorn','\\u230C':'drcrop','\\uD835\\uDC9F':'Dscr','\\uD835\\uDCB9':'dscr','\\u0405':'DScy','\\u0455':'dscy','\\u29F6':'dsol','\\u0110':'Dstrok','\\u0111':'dstrok','\\u22F1':'dtdot','\\u25BF':'dtri','\\u296F':'duhar','\\u29A6':'dwangle','\\u040F':'DZcy','\\u045F':'dzcy','\\u27FF':'dzigrarr','\\xC9':'Eacute','\\xE9':'eacute','\\u2A6E':'easter','\\u011A':'Ecaron','\\u011B':'ecaron','\\xCA':'Ecirc','\\xEA':'ecirc','\\u2256':'ecir','\\u2255':'ecolon','\\u042D':'Ecy','\\u044D':'ecy','\\u0116':'Edot','\\u0117':'edot','\\u2147':'ee','\\u2252':'efDot','\\uD835\\uDD08':'Efr','\\uD835\\uDD22':'efr','\\u2A9A':'eg','\\xC8':'Egrave','\\xE8':'egrave','\\u2A96':'egs','\\u2A98':'egsdot','\\u2A99':'el','\\u2208':'in','\\u23E7':'elinters','\\u2113':'ell','\\u2A95':'els','\\u2A97':'elsdot','\\u0112':'Emacr','\\u0113':'emacr','\\u2205':'empty','\\u25FB':'EmptySmallSquare','\\u25AB':'EmptyVerySmallSquare','\\u2004':'emsp13','\\u2005':'emsp14','\\u2003':'emsp','\\u014A':'ENG','\\u014B':'eng','\\u2002':'ensp','\\u0118':'Eogon','\\u0119':'eogon','\\uD835\\uDD3C':'Eopf','\\uD835\\uDD56':'eopf','\\u22D5':'epar','\\u29E3':'eparsl','\\u2A71':'eplus','\\u03B5':'epsi','\\u0395':'Epsilon','\\u03F5':'epsiv','\\u2242':'esim','\\u2A75':'Equal','=':'equals','\\u225F':'equest','\\u21CC':'rlhar','\\u2A78':'equivDD','\\u29E5':'eqvparsl','\\u2971':'erarr','\\u2253':'erDot','\\u212F':'escr','\\u2130':'Escr','\\u2A73':'Esim','\\u0397':'Eta','\\u03B7':'eta','\\xD0':'ETH','\\xF0':'eth','\\xCB':'Euml','\\xEB':'euml','\\u20AC':'euro','!':'excl','\\u2203':'exist','\\u0424':'Fcy','\\u0444':'fcy','\\u2640':'female','\\uFB03':'ffilig','\\uFB00':'fflig','\\uFB04':'ffllig','\\uD835\\uDD09':'Ffr','\\uD835\\uDD23':'ffr','\\uFB01':'filig','\\u25FC':'FilledSmallSquare','fj':'fjlig','\\u266D':'flat','\\uFB02':'fllig','\\u25B1':'fltns','\\u0192':'fnof','\\uD835\\uDD3D':'Fopf','\\uD835\\uDD57':'fopf','\\u2200':'forall','\\u22D4':'fork','\\u2AD9':'forkv','\\u2131':'Fscr','\\u2A0D':'fpartint','\\xBD':'half','\\u2153':'frac13','\\xBC':'frac14','\\u2155':'frac15','\\u2159':'frac16','\\u215B':'frac18','\\u2154':'frac23','\\u2156':'frac25','\\xBE':'frac34','\\u2157':'frac35','\\u215C':'frac38','\\u2158':'frac45','\\u215A':'frac56','\\u215D':'frac58','\\u215E':'frac78','\\u2044':'frasl','\\u2322':'frown','\\uD835\\uDCBB':'fscr','\\u01F5':'gacute','\\u0393':'Gamma','\\u03B3':'gamma','\\u03DC':'Gammad','\\u2A86':'gap','\\u011E':'Gbreve','\\u011F':'gbreve','\\u0122':'Gcedil','\\u011C':'Gcirc','\\u011D':'gcirc','\\u0413':'Gcy','\\u0433':'gcy','\\u0120':'Gdot','\\u0121':'gdot','\\u2265':'ge','\\u2267':'gE','\\u2A8C':'gEl','\\u22DB':'gel','\\u2A7E':'ges','\\u2AA9':'gescc','\\u2A80':'gesdot','\\u2A82':'gesdoto','\\u2A84':'gesdotol','\\u22DB\\uFE00':'gesl','\\u2A94':'gesles','\\uD835\\uDD0A':'Gfr','\\uD835\\uDD24':'gfr','\\u226B':'gg','\\u22D9':'Gg','\\u2137':'gimel','\\u0403':'GJcy','\\u0453':'gjcy','\\u2AA5':'gla','\\u2277':'gl','\\u2A92':'glE','\\u2AA4':'glj','\\u2A8A':'gnap','\\u2A88':'gne','\\u2269':'gnE','\\u22E7':'gnsim','\\uD835\\uDD3E':'Gopf','\\uD835\\uDD58':'gopf','\\u2AA2':'GreaterGreater','\\u2273':'gsim','\\uD835\\uDCA2':'Gscr','\\u210A':'gscr','\\u2A8E':'gsime','\\u2A90':'gsiml','\\u2AA7':'gtcc','\\u2A7A':'gtcir','>':'gt','\\u22D7':'gtdot','\\u2995':'gtlPar','\\u2A7C':'gtquest','\\u2978':'gtrarr','\\u2269\\uFE00':'gvnE','\\u200A':'hairsp','\\u210B':'Hscr','\\u042A':'HARDcy','\\u044A':'hardcy','\\u2948':'harrcir','\\u2194':'harr','\\u21AD':'harrw','^':'Hat','\\u210F':'hbar','\\u0124':'Hcirc','\\u0125':'hcirc','\\u2665':'hearts','\\u2026':'mldr','\\u22B9':'hercon','\\uD835\\uDD25':'hfr','\\u210C':'Hfr','\\u2925':'searhk','\\u2926':'swarhk','\\u21FF':'hoarr','\\u223B':'homtht','\\u21A9':'larrhk','\\u21AA':'rarrhk','\\uD835\\uDD59':'hopf','\\u210D':'Hopf','\\u2015':'horbar','\\uD835\\uDCBD':'hscr','\\u0126':'Hstrok','\\u0127':'hstrok','\\u2043':'hybull','\\xCD':'Iacute','\\xED':'iacute','\\u2063':'ic','\\xCE':'Icirc','\\xEE':'icirc','\\u0418':'Icy','\\u0438':'icy','\\u0130':'Idot','\\u0415':'IEcy','\\u0435':'iecy','\\xA1':'iexcl','\\uD835\\uDD26':'ifr','\\u2111':'Im','\\xCC':'Igrave','\\xEC':'igrave','\\u2148':'ii','\\u2A0C':'qint','\\u222D':'tint','\\u29DC':'iinfin','\\u2129':'iiota','\\u0132':'IJlig','\\u0133':'ijlig','\\u012A':'Imacr','\\u012B':'imacr','\\u2110':'Iscr','\\u0131':'imath','\\u22B7':'imof','\\u01B5':'imped','\\u2105':'incare','\\u221E':'infin','\\u29DD':'infintie','\\u22BA':'intcal','\\u222B':'int','\\u222C':'Int','\\u2124':'Zopf','\\u2A17':'intlarhk','\\u2A3C':'iprod','\\u2062':'it','\\u0401':'IOcy','\\u0451':'iocy','\\u012E':'Iogon','\\u012F':'iogon','\\uD835\\uDD40':'Iopf','\\uD835\\uDD5A':'iopf','\\u0399':'Iota','\\u03B9':'iota','\\xBF':'iquest','\\uD835\\uDCBE':'iscr','\\u22F5':'isindot','\\u22F9':'isinE','\\u22F4':'isins','\\u22F3':'isinsv','\\u0128':'Itilde','\\u0129':'itilde','\\u0406':'Iukcy','\\u0456':'iukcy','\\xCF':'Iuml','\\xEF':'iuml','\\u0134':'Jcirc','\\u0135':'jcirc','\\u0419':'Jcy','\\u0439':'jcy','\\uD835\\uDD0D':'Jfr','\\uD835\\uDD27':'jfr','\\u0237':'jmath','\\uD835\\uDD41':'Jopf','\\uD835\\uDD5B':'jopf','\\uD835\\uDCA5':'Jscr','\\uD835\\uDCBF':'jscr','\\u0408':'Jsercy','\\u0458':'jsercy','\\u0404':'Jukcy','\\u0454':'jukcy','\\u039A':'Kappa','\\u03BA':'kappa','\\u03F0':'kappav','\\u0136':'Kcedil','\\u0137':'kcedil','\\u041A':'Kcy','\\u043A':'kcy','\\uD835\\uDD0E':'Kfr','\\uD835\\uDD28':'kfr','\\u0138':'kgreen','\\u0425':'KHcy','\\u0445':'khcy','\\u040C':'KJcy','\\u045C':'kjcy','\\uD835\\uDD42':'Kopf','\\uD835\\uDD5C':'kopf','\\uD835\\uDCA6':'Kscr','\\uD835\\uDCC0':'kscr','\\u21DA':'lAarr','\\u0139':'Lacute','\\u013A':'lacute','\\u29B4':'laemptyv','\\u2112':'Lscr','\\u039B':'Lambda','\\u03BB':'lambda','\\u27E8':'lang','\\u27EA':'Lang','\\u2991':'langd','\\u2A85':'lap','\\xAB':'laquo','\\u21E4':'larrb','\\u291F':'larrbfs','\\u2190':'larr','\\u219E':'Larr','\\u291D':'larrfs','\\u21AB':'larrlp','\\u2939':'larrpl','\\u2973':'larrsim','\\u21A2':'larrtl','\\u2919':'latail','\\u291B':'lAtail','\\u2AAB':'lat','\\u2AAD':'late','\\u2AAD\\uFE00':'lates','\\u290C':'lbarr','\\u290E':'lBarr','\\u2772':'lbbrk','{':'lcub','[':'lsqb','\\u298B':'lbrke','\\u298F':'lbrksld','\\u298D':'lbrkslu','\\u013D':'Lcaron','\\u013E':'lcaron','\\u013B':'Lcedil','\\u013C':'lcedil','\\u2308':'lceil','\\u041B':'Lcy','\\u043B':'lcy','\\u2936':'ldca','\\u201C':'ldquo','\\u2967':'ldrdhar','\\u294B':'ldrushar','\\u21B2':'ldsh','\\u2264':'le','\\u2266':'lE','\\u21C6':'lrarr','\\u27E6':'lobrk','\\u2961':'LeftDownTeeVector','\\u2959':'LeftDownVectorBar','\\u230A':'lfloor','\\u21BC':'lharu','\\u21C7':'llarr','\\u21CB':'lrhar','\\u294E':'LeftRightVector','\\u21A4':'mapstoleft','\\u295A':'LeftTeeVector','\\u22CB':'lthree','\\u29CF':'LeftTriangleBar','\\u22B2':'vltri','\\u22B4':'ltrie','\\u2951':'LeftUpDownVector','\\u2960':'LeftUpTeeVector','\\u2958':'LeftUpVectorBar','\\u21BF':'uharl','\\u2952':'LeftVectorBar','\\u2A8B':'lEg','\\u22DA':'leg','\\u2A7D':'les','\\u2AA8':'lescc','\\u2A7F':'lesdot','\\u2A81':'lesdoto','\\u2A83':'lesdotor','\\u22DA\\uFE00':'lesg','\\u2A93':'lesges','\\u22D6':'ltdot','\\u2276':'lg','\\u2AA1':'LessLess','\\u2272':'lsim','\\u297C':'lfisht','\\uD835\\uDD0F':'Lfr','\\uD835\\uDD29':'lfr','\\u2A91':'lgE','\\u2962':'lHar','\\u296A':'lharul','\\u2584':'lhblk','\\u0409':'LJcy','\\u0459':'ljcy','\\u226A':'ll','\\u22D8':'Ll','\\u296B':'llhard','\\u25FA':'lltri','\\u013F':'Lmidot','\\u0140':'lmidot','\\u23B0':'lmoust','\\u2A89':'lnap','\\u2A87':'lne','\\u2268':'lnE','\\u22E6':'lnsim','\\u27EC':'loang','\\u21FD':'loarr','\\u27F5':'xlarr','\\u27F7':'xharr','\\u27FC':'xmap','\\u27F6':'xrarr','\\u21AC':'rarrlp','\\u2985':'lopar','\\uD835\\uDD43':'Lopf','\\uD835\\uDD5D':'lopf','\\u2A2D':'loplus','\\u2A34':'lotimes','\\u2217':'lowast','_':'lowbar','\\u2199':'swarr','\\u2198':'searr','\\u25CA':'loz','(':'lpar','\\u2993':'lparlt','\\u296D':'lrhard','\\u200E':'lrm','\\u22BF':'lrtri','\\u2039':'lsaquo','\\uD835\\uDCC1':'lscr','\\u21B0':'lsh','\\u2A8D':'lsime','\\u2A8F':'lsimg','\\u2018':'lsquo','\\u201A':'sbquo','\\u0141':'Lstrok','\\u0142':'lstrok','\\u2AA6':'ltcc','\\u2A79':'ltcir','<':'lt','\\u22C9':'ltimes','\\u2976':'ltlarr','\\u2A7B':'ltquest','\\u25C3':'ltri','\\u2996':'ltrPar','\\u294A':'lurdshar','\\u2966':'luruhar','\\u2268\\uFE00':'lvnE','\\xAF':'macr','\\u2642':'male','\\u2720':'malt','\\u2905':'Map','\\u21A6':'map','\\u21A5':'mapstoup','\\u25AE':'marker','\\u2A29':'mcomma','\\u041C':'Mcy','\\u043C':'mcy','\\u2014':'mdash','\\u223A':'mDDot','\\u205F':'MediumSpace','\\u2133':'Mscr','\\uD835\\uDD10':'Mfr','\\uD835\\uDD2A':'mfr','\\u2127':'mho','\\xB5':'micro','\\u2AF0':'midcir','\\u2223':'mid','\\u2212':'minus','\\u2A2A':'minusdu','\\u2213':'mp','\\u2ADB':'mlcp','\\u22A7':'models','\\uD835\\uDD44':'Mopf','\\uD835\\uDD5E':'mopf','\\uD835\\uDCC2':'mscr','\\u039C':'Mu','\\u03BC':'mu','\\u22B8':'mumap','\\u0143':'Nacute','\\u0144':'nacute','\\u2220\\u20D2':'nang','\\u2249':'nap','\\u2A70\\u0338':'napE','\\u224B\\u0338':'napid','\\u0149':'napos','\\u266E':'natur','\\u2115':'Nopf','\\xA0':'nbsp','\\u224E\\u0338':'nbump','\\u224F\\u0338':'nbumpe','\\u2A43':'ncap','\\u0147':'Ncaron','\\u0148':'ncaron','\\u0145':'Ncedil','\\u0146':'ncedil','\\u2247':'ncong','\\u2A6D\\u0338':'ncongdot','\\u2A42':'ncup','\\u041D':'Ncy','\\u043D':'ncy','\\u2013':'ndash','\\u2924':'nearhk','\\u2197':'nearr','\\u21D7':'neArr','\\u2260':'ne','\\u2250\\u0338':'nedot','\\u200B':'ZeroWidthSpace','\\u2262':'nequiv','\\u2928':'toea','\\u2242\\u0338':'nesim','\\n':'NewLine','\\u2204':'nexist','\\uD835\\uDD11':'Nfr','\\uD835\\uDD2B':'nfr','\\u2267\\u0338':'ngE','\\u2271':'nge','\\u2A7E\\u0338':'nges','\\u22D9\\u0338':'nGg','\\u2275':'ngsim','\\u226B\\u20D2':'nGt','\\u226F':'ngt','\\u226B\\u0338':'nGtv','\\u21AE':'nharr','\\u21CE':'nhArr','\\u2AF2':'nhpar','\\u220B':'ni','\\u22FC':'nis','\\u22FA':'nisd','\\u040A':'NJcy','\\u045A':'njcy','\\u219A':'nlarr','\\u21CD':'nlArr','\\u2025':'nldr','\\u2266\\u0338':'nlE','\\u2270':'nle','\\u2A7D\\u0338':'nles','\\u226E':'nlt','\\u22D8\\u0338':'nLl','\\u2274':'nlsim','\\u226A\\u20D2':'nLt','\\u22EA':'nltri','\\u22EC':'nltrie','\\u226A\\u0338':'nLtv','\\u2224':'nmid','\\u2060':'NoBreak','\\uD835\\uDD5F':'nopf','\\u2AEC':'Not','\\xAC':'not','\\u226D':'NotCupCap','\\u2226':'npar','\\u2209':'notin','\\u2279':'ntgl','\\u22F5\\u0338':'notindot','\\u22F9\\u0338':'notinE','\\u22F7':'notinvb','\\u22F6':'notinvc','\\u29CF\\u0338':'NotLeftTriangleBar','\\u2278':'ntlg','\\u2AA2\\u0338':'NotNestedGreaterGreater','\\u2AA1\\u0338':'NotNestedLessLess','\\u220C':'notni','\\u22FE':'notnivb','\\u22FD':'notnivc','\\u2280':'npr','\\u2AAF\\u0338':'npre','\\u22E0':'nprcue','\\u29D0\\u0338':'NotRightTriangleBar','\\u22EB':'nrtri','\\u22ED':'nrtrie','\\u228F\\u0338':'NotSquareSubset','\\u22E2':'nsqsube','\\u2290\\u0338':'NotSquareSuperset','\\u22E3':'nsqsupe','\\u2282\\u20D2':'vnsub','\\u2288':'nsube','\\u2281':'nsc','\\u2AB0\\u0338':'nsce','\\u22E1':'nsccue','\\u227F\\u0338':'NotSucceedsTilde','\\u2283\\u20D2':'vnsup','\\u2289':'nsupe','\\u2241':'nsim','\\u2244':'nsime','\\u2AFD\\u20E5':'nparsl','\\u2202\\u0338':'npart','\\u2A14':'npolint','\\u2933\\u0338':'nrarrc','\\u219B':'nrarr','\\u21CF':'nrArr','\\u219D\\u0338':'nrarrw','\\uD835\\uDCA9':'Nscr','\\uD835\\uDCC3':'nscr','\\u2284':'nsub','\\u2AC5\\u0338':'nsubE','\\u2285':'nsup','\\u2AC6\\u0338':'nsupE','\\xD1':'Ntilde','\\xF1':'ntilde','\\u039D':'Nu','\\u03BD':'nu','#':'num','\\u2116':'numero','\\u2007':'numsp','\\u224D\\u20D2':'nvap','\\u22AC':'nvdash','\\u22AD':'nvDash','\\u22AE':'nVdash','\\u22AF':'nVDash','\\u2265\\u20D2':'nvge','>\\u20D2':'nvgt','\\u2904':'nvHarr','\\u29DE':'nvinfin','\\u2902':'nvlArr','\\u2264\\u20D2':'nvle','<\\u20D2':'nvlt','\\u22B4\\u20D2':'nvltrie','\\u2903':'nvrArr','\\u22B5\\u20D2':'nvrtrie','\\u223C\\u20D2':'nvsim','\\u2923':'nwarhk','\\u2196':'nwarr','\\u21D6':'nwArr','\\u2927':'nwnear','\\xD3':'Oacute','\\xF3':'oacute','\\xD4':'Ocirc','\\xF4':'ocirc','\\u041E':'Ocy','\\u043E':'ocy','\\u0150':'Odblac','\\u0151':'odblac','\\u2A38':'odiv','\\u29BC':'odsold','\\u0152':'OElig','\\u0153':'oelig','\\u29BF':'ofcir','\\uD835\\uDD12':'Ofr','\\uD835\\uDD2C':'ofr','\\u02DB':'ogon','\\xD2':'Ograve','\\xF2':'ograve','\\u29C1':'ogt','\\u29B5':'ohbar','\\u03A9':'ohm','\\u29BE':'olcir','\\u29BB':'olcross','\\u203E':'oline','\\u29C0':'olt','\\u014C':'Omacr','\\u014D':'omacr','\\u03C9':'omega','\\u039F':'Omicron','\\u03BF':'omicron','\\u29B6':'omid','\\uD835\\uDD46':'Oopf','\\uD835\\uDD60':'oopf','\\u29B7':'opar','\\u29B9':'operp','\\u2A54':'Or','\\u2228':'or','\\u2A5D':'ord','\\u2134':'oscr','\\xAA':'ordf','\\xBA':'ordm','\\u22B6':'origof','\\u2A56':'oror','\\u2A57':'orslope','\\u2A5B':'orv','\\uD835\\uDCAA':'Oscr','\\xD8':'Oslash','\\xF8':'oslash','\\u2298':'osol','\\xD5':'Otilde','\\xF5':'otilde','\\u2A36':'otimesas','\\u2A37':'Otimes','\\xD6':'Ouml','\\xF6':'ouml','\\u233D':'ovbar','\\u23DE':'OverBrace','\\u23B4':'tbrk','\\u23DC':'OverParenthesis','\\xB6':'para','\\u2AF3':'parsim','\\u2AFD':'parsl','\\u2202':'part','\\u041F':'Pcy','\\u043F':'pcy','%':'percnt','.':'period','\\u2030':'permil','\\u2031':'pertenk','\\uD835\\uDD13':'Pfr','\\uD835\\uDD2D':'pfr','\\u03A6':'Phi','\\u03C6':'phi','\\u03D5':'phiv','\\u260E':'phone','\\u03A0':'Pi','\\u03C0':'pi','\\u03D6':'piv','\\u210E':'planckh','\\u2A23':'plusacir','\\u2A22':'pluscir','+':'plus','\\u2A25':'plusdu','\\u2A72':'pluse','\\xB1':'pm','\\u2A26':'plussim','\\u2A27':'plustwo','\\u2A15':'pointint','\\uD835\\uDD61':'popf','\\u2119':'Popf','\\xA3':'pound','\\u2AB7':'prap','\\u2ABB':'Pr','\\u227A':'pr','\\u227C':'prcue','\\u2AAF':'pre','\\u227E':'prsim','\\u2AB9':'prnap','\\u2AB5':'prnE','\\u22E8':'prnsim','\\u2AB3':'prE','\\u2032':'prime','\\u2033':'Prime','\\u220F':'prod','\\u232E':'profalar','\\u2312':'profline','\\u2313':'profsurf','\\u221D':'prop','\\u22B0':'prurel','\\uD835\\uDCAB':'Pscr','\\uD835\\uDCC5':'pscr','\\u03A8':'Psi','\\u03C8':'psi','\\u2008':'puncsp','\\uD835\\uDD14':'Qfr','\\uD835\\uDD2E':'qfr','\\uD835\\uDD62':'qopf','\\u211A':'Qopf','\\u2057':'qprime','\\uD835\\uDCAC':'Qscr','\\uD835\\uDCC6':'qscr','\\u2A16':'quatint','?':'quest','\"':'quot','\\u21DB':'rAarr','\\u223D\\u0331':'race','\\u0154':'Racute','\\u0155':'racute','\\u221A':'Sqrt','\\u29B3':'raemptyv','\\u27E9':'rang','\\u27EB':'Rang','\\u2992':'rangd','\\u29A5':'range','\\xBB':'raquo','\\u2975':'rarrap','\\u21E5':'rarrb','\\u2920':'rarrbfs','\\u2933':'rarrc','\\u2192':'rarr','\\u21A0':'Rarr','\\u291E':'rarrfs','\\u2945':'rarrpl','\\u2974':'rarrsim','\\u2916':'Rarrtl','\\u21A3':'rarrtl','\\u219D':'rarrw','\\u291A':'ratail','\\u291C':'rAtail','\\u2236':'ratio','\\u2773':'rbbrk','}':'rcub',']':'rsqb','\\u298C':'rbrke','\\u298E':'rbrksld','\\u2990':'rbrkslu','\\u0158':'Rcaron','\\u0159':'rcaron','\\u0156':'Rcedil','\\u0157':'rcedil','\\u2309':'rceil','\\u0420':'Rcy','\\u0440':'rcy','\\u2937':'rdca','\\u2969':'rdldhar','\\u21B3':'rdsh','\\u211C':'Re','\\u211B':'Rscr','\\u211D':'Ropf','\\u25AD':'rect','\\u297D':'rfisht','\\u230B':'rfloor','\\uD835\\uDD2F':'rfr','\\u2964':'rHar','\\u21C0':'rharu','\\u296C':'rharul','\\u03A1':'Rho','\\u03C1':'rho','\\u03F1':'rhov','\\u21C4':'rlarr','\\u27E7':'robrk','\\u295D':'RightDownTeeVector','\\u2955':'RightDownVectorBar','\\u21C9':'rrarr','\\u22A2':'vdash','\\u295B':'RightTeeVector','\\u22CC':'rthree','\\u29D0':'RightTriangleBar','\\u22B3':'vrtri','\\u22B5':'rtrie','\\u294F':'RightUpDownVector','\\u295C':'RightUpTeeVector','\\u2954':'RightUpVectorBar','\\u21BE':'uharr','\\u2953':'RightVectorBar','\\u02DA':'ring','\\u200F':'rlm','\\u23B1':'rmoust','\\u2AEE':'rnmid','\\u27ED':'roang','\\u21FE':'roarr','\\u2986':'ropar','\\uD835\\uDD63':'ropf','\\u2A2E':'roplus','\\u2A35':'rotimes','\\u2970':'RoundImplies',')':'rpar','\\u2994':'rpargt','\\u2A12':'rppolint','\\u203A':'rsaquo','\\uD835\\uDCC7':'rscr','\\u21B1':'rsh','\\u22CA':'rtimes','\\u25B9':'rtri','\\u29CE':'rtriltri','\\u29F4':'RuleDelayed','\\u2968':'ruluhar','\\u211E':'rx','\\u015A':'Sacute','\\u015B':'sacute','\\u2AB8':'scap','\\u0160':'Scaron','\\u0161':'scaron','\\u2ABC':'Sc','\\u227B':'sc','\\u227D':'sccue','\\u2AB0':'sce','\\u2AB4':'scE','\\u015E':'Scedil','\\u015F':'scedil','\\u015C':'Scirc','\\u015D':'scirc','\\u2ABA':'scnap','\\u2AB6':'scnE','\\u22E9':'scnsim','\\u2A13':'scpolint','\\u227F':'scsim','\\u0421':'Scy','\\u0441':'scy','\\u22C5':'sdot','\\u2A66':'sdote','\\u21D8':'seArr','\\xA7':'sect',';':'semi','\\u2929':'tosa','\\u2736':'sext','\\uD835\\uDD16':'Sfr','\\uD835\\uDD30':'sfr','\\u266F':'sharp','\\u0429':'SHCHcy','\\u0449':'shchcy','\\u0428':'SHcy','\\u0448':'shcy','\\u2191':'uarr','\\xAD':'shy','\\u03A3':'Sigma','\\u03C3':'sigma','\\u03C2':'sigmaf','\\u223C':'sim','\\u2A6A':'simdot','\\u2243':'sime','\\u2A9E':'simg','\\u2AA0':'simgE','\\u2A9D':'siml','\\u2A9F':'simlE','\\u2246':'simne','\\u2A24':'simplus','\\u2972':'simrarr','\\u2A33':'smashp','\\u29E4':'smeparsl','\\u2323':'smile','\\u2AAA':'smt','\\u2AAC':'smte','\\u2AAC\\uFE00':'smtes','\\u042C':'SOFTcy','\\u044C':'softcy','\\u233F':'solbar','\\u29C4':'solb','/':'sol','\\uD835\\uDD4A':'Sopf','\\uD835\\uDD64':'sopf','\\u2660':'spades','\\u2293':'sqcap','\\u2293\\uFE00':'sqcaps','\\u2294':'sqcup','\\u2294\\uFE00':'sqcups','\\u228F':'sqsub','\\u2291':'sqsube','\\u2290':'sqsup','\\u2292':'sqsupe','\\u25A1':'squ','\\uD835\\uDCAE':'Sscr','\\uD835\\uDCC8':'sscr','\\u22C6':'Star','\\u2606':'star','\\u2282':'sub','\\u22D0':'Sub','\\u2ABD':'subdot','\\u2AC5':'subE','\\u2286':'sube','\\u2AC3':'subedot','\\u2AC1':'submult','\\u2ACB':'subnE','\\u228A':'subne','\\u2ABF':'subplus','\\u2979':'subrarr','\\u2AC7':'subsim','\\u2AD5':'subsub','\\u2AD3':'subsup','\\u2211':'sum','\\u266A':'sung','\\xB9':'sup1','\\xB2':'sup2','\\xB3':'sup3','\\u2283':'sup','\\u22D1':'Sup','\\u2ABE':'supdot','\\u2AD8':'supdsub','\\u2AC6':'supE','\\u2287':'supe','\\u2AC4':'supedot','\\u27C9':'suphsol','\\u2AD7':'suphsub','\\u297B':'suplarr','\\u2AC2':'supmult','\\u2ACC':'supnE','\\u228B':'supne','\\u2AC0':'supplus','\\u2AC8':'supsim','\\u2AD4':'supsub','\\u2AD6':'supsup','\\u21D9':'swArr','\\u292A':'swnwar','\\xDF':'szlig','\\t':'Tab','\\u2316':'target','\\u03A4':'Tau','\\u03C4':'tau','\\u0164':'Tcaron','\\u0165':'tcaron','\\u0162':'Tcedil','\\u0163':'tcedil','\\u0422':'Tcy','\\u0442':'tcy','\\u20DB':'tdot','\\u2315':'telrec','\\uD835\\uDD17':'Tfr','\\uD835\\uDD31':'tfr','\\u2234':'there4','\\u0398':'Theta','\\u03B8':'theta','\\u03D1':'thetav','\\u205F\\u200A':'ThickSpace','\\u2009':'thinsp','\\xDE':'THORN','\\xFE':'thorn','\\u2A31':'timesbar','\\xD7':'times','\\u2A30':'timesd','\\u2336':'topbot','\\u2AF1':'topcir','\\uD835\\uDD4B':'Topf','\\uD835\\uDD65':'topf','\\u2ADA':'topfork','\\u2034':'tprime','\\u2122':'trade','\\u25B5':'utri','\\u225C':'trie','\\u25EC':'tridot','\\u2A3A':'triminus','\\u2A39':'triplus','\\u29CD':'trisb','\\u2A3B':'tritime','\\u23E2':'trpezium','\\uD835\\uDCAF':'Tscr','\\uD835\\uDCC9':'tscr','\\u0426':'TScy','\\u0446':'tscy','\\u040B':'TSHcy','\\u045B':'tshcy','\\u0166':'Tstrok','\\u0167':'tstrok','\\xDA':'Uacute','\\xFA':'uacute','\\u219F':'Uarr','\\u2949':'Uarrocir','\\u040E':'Ubrcy','\\u045E':'ubrcy','\\u016C':'Ubreve','\\u016D':'ubreve','\\xDB':'Ucirc','\\xFB':'ucirc','\\u0423':'Ucy','\\u0443':'ucy','\\u21C5':'udarr','\\u0170':'Udblac','\\u0171':'udblac','\\u296E':'udhar','\\u297E':'ufisht','\\uD835\\uDD18':'Ufr','\\uD835\\uDD32':'ufr','\\xD9':'Ugrave','\\xF9':'ugrave','\\u2963':'uHar','\\u2580':'uhblk','\\u231C':'ulcorn','\\u230F':'ulcrop','\\u25F8':'ultri','\\u016A':'Umacr','\\u016B':'umacr','\\u23DF':'UnderBrace','\\u23DD':'UnderParenthesis','\\u228E':'uplus','\\u0172':'Uogon','\\u0173':'uogon','\\uD835\\uDD4C':'Uopf','\\uD835\\uDD66':'uopf','\\u2912':'UpArrowBar','\\u2195':'varr','\\u03C5':'upsi','\\u03D2':'Upsi','\\u03A5':'Upsilon','\\u21C8':'uuarr','\\u231D':'urcorn','\\u230E':'urcrop','\\u016E':'Uring','\\u016F':'uring','\\u25F9':'urtri','\\uD835\\uDCB0':'Uscr','\\uD835\\uDCCA':'uscr','\\u22F0':'utdot','\\u0168':'Utilde','\\u0169':'utilde','\\xDC':'Uuml','\\xFC':'uuml','\\u29A7':'uwangle','\\u299C':'vangrt','\\u228A\\uFE00':'vsubne','\\u2ACB\\uFE00':'vsubnE','\\u228B\\uFE00':'vsupne','\\u2ACC\\uFE00':'vsupnE','\\u2AE8':'vBar','\\u2AEB':'Vbar','\\u2AE9':'vBarv','\\u0412':'Vcy','\\u0432':'vcy','\\u22A9':'Vdash','\\u22AB':'VDash','\\u2AE6':'Vdashl','\\u22BB':'veebar','\\u225A':'veeeq','\\u22EE':'vellip','|':'vert','\\u2016':'Vert','\\u2758':'VerticalSeparator','\\u2240':'wr','\\uD835\\uDD19':'Vfr','\\uD835\\uDD33':'vfr','\\uD835\\uDD4D':'Vopf','\\uD835\\uDD67':'vopf','\\uD835\\uDCB1':'Vscr','\\uD835\\uDCCB':'vscr','\\u22AA':'Vvdash','\\u299A':'vzigzag','\\u0174':'Wcirc','\\u0175':'wcirc','\\u2A5F':'wedbar','\\u2259':'wedgeq','\\u2118':'wp','\\uD835\\uDD1A':'Wfr','\\uD835\\uDD34':'wfr','\\uD835\\uDD4E':'Wopf','\\uD835\\uDD68':'wopf','\\uD835\\uDCB2':'Wscr','\\uD835\\uDCCC':'wscr','\\uD835\\uDD1B':'Xfr','\\uD835\\uDD35':'xfr','\\u039E':'Xi','\\u03BE':'xi','\\u22FB':'xnis','\\uD835\\uDD4F':'Xopf','\\uD835\\uDD69':'xopf','\\uD835\\uDCB3':'Xscr','\\uD835\\uDCCD':'xscr','\\xDD':'Yacute','\\xFD':'yacute','\\u042F':'YAcy','\\u044F':'yacy','\\u0176':'Ycirc','\\u0177':'ycirc','\\u042B':'Ycy','\\u044B':'ycy','\\xA5':'yen','\\uD835\\uDD1C':'Yfr','\\uD835\\uDD36':'yfr','\\u0407':'YIcy','\\u0457':'yicy','\\uD835\\uDD50':'Yopf','\\uD835\\uDD6A':'yopf','\\uD835\\uDCB4':'Yscr','\\uD835\\uDCCE':'yscr','\\u042E':'YUcy','\\u044E':'yucy','\\xFF':'yuml','\\u0178':'Yuml','\\u0179':'Zacute','\\u017A':'zacute','\\u017D':'Zcaron','\\u017E':'zcaron','\\u0417':'Zcy','\\u0437':'zcy','\\u017B':'Zdot','\\u017C':'zdot','\\u2128':'Zfr','\\u0396':'Zeta','\\u03B6':'zeta','\\uD835\\uDD37':'zfr','\\u0416':'ZHcy','\\u0436':'zhcy','\\u21DD':'zigrarr','\\uD835\\uDD6B':'zopf','\\uD835\\uDCB5':'Zscr','\\uD835\\uDCCF':'zscr','\\u200D':'zwj','\\u200C':'zwnj'};\n\n\tvar regexEscape = /[\"&'<>`]/g;\n\tvar escapeMap = {\n\t\t'\"': '&quot;',\n\t\t'&': '&amp;',\n\t\t'\\'': '&#x27;',\n\t\t'<': '&lt;',\n\t\t// See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the\n\t\t// following is not strictly necessary unless it’s part of a tag or an\n\t\t// unquoted attribute value. We’re only escaping it to support those\n\t\t// situations, and for XML support.\n\t\t'>': '&gt;',\n\t\t// In Internet Explorer ≤ 8, the backtick character can be used\n\t\t// to break out of (un)quoted attribute values or HTML comments.\n\t\t// See http://html5sec.org/#102, http://html5sec.org/#108, and\n\t\t// http://html5sec.org/#133.\n\t\t'`': '&#x60;'\n\t};\n\n\tvar regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;\n\tvar regexInvalidRawCodePoint = /[\\0-\\x08\\x0B\\x0E-\\x1F\\x7F-\\x9F\\uFDD0-\\uFDEF\\uFFFE\\uFFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n\tvar regexDecode = /&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+);|&(Aacute|iacute|Uacute|plusmn|otilde|Otilde|Agrave|agrave|yacute|Yacute|oslash|Oslash|Atilde|atilde|brvbar|Ccedil|ccedil|ograve|curren|divide|Eacute|eacute|Ograve|oacute|Egrave|egrave|ugrave|frac12|frac14|frac34|Ugrave|Oacute|Iacute|ntilde|Ntilde|uacute|middot|Igrave|igrave|iquest|aacute|laquo|THORN|micro|iexcl|icirc|Icirc|Acirc|ucirc|ecirc|Ocirc|ocirc|Ecirc|Ucirc|aring|Aring|aelig|AElig|acute|pound|raquo|acirc|times|thorn|szlig|cedil|COPY|Auml|ordf|ordm|uuml|macr|Uuml|auml|Ouml|ouml|para|nbsp|Euml|quot|QUOT|euml|yuml|cent|sect|copy|sup1|sup2|sup3|Iuml|iuml|shy|eth|reg|not|yen|amp|AMP|REG|uml|ETH|deg|gt|GT|LT|lt)([=a-zA-Z0-9])?/g;\n\tvar decodeMap = {'Aacute':'\\xC1','aacute':'\\xE1','Abreve':'\\u0102','abreve':'\\u0103','ac':'\\u223E','acd':'\\u223F','acE':'\\u223E\\u0333','Acirc':'\\xC2','acirc':'\\xE2','acute':'\\xB4','Acy':'\\u0410','acy':'\\u0430','AElig':'\\xC6','aelig':'\\xE6','af':'\\u2061','Afr':'\\uD835\\uDD04','afr':'\\uD835\\uDD1E','Agrave':'\\xC0','agrave':'\\xE0','alefsym':'\\u2135','aleph':'\\u2135','Alpha':'\\u0391','alpha':'\\u03B1','Amacr':'\\u0100','amacr':'\\u0101','amalg':'\\u2A3F','amp':'&','AMP':'&','andand':'\\u2A55','And':'\\u2A53','and':'\\u2227','andd':'\\u2A5C','andslope':'\\u2A58','andv':'\\u2A5A','ang':'\\u2220','ange':'\\u29A4','angle':'\\u2220','angmsdaa':'\\u29A8','angmsdab':'\\u29A9','angmsdac':'\\u29AA','angmsdad':'\\u29AB','angmsdae':'\\u29AC','angmsdaf':'\\u29AD','angmsdag':'\\u29AE','angmsdah':'\\u29AF','angmsd':'\\u2221','angrt':'\\u221F','angrtvb':'\\u22BE','angrtvbd':'\\u299D','angsph':'\\u2222','angst':'\\xC5','angzarr':'\\u237C','Aogon':'\\u0104','aogon':'\\u0105','Aopf':'\\uD835\\uDD38','aopf':'\\uD835\\uDD52','apacir':'\\u2A6F','ap':'\\u2248','apE':'\\u2A70','ape':'\\u224A','apid':'\\u224B','apos':'\\'','ApplyFunction':'\\u2061','approx':'\\u2248','approxeq':'\\u224A','Aring':'\\xC5','aring':'\\xE5','Ascr':'\\uD835\\uDC9C','ascr':'\\uD835\\uDCB6','Assign':'\\u2254','ast':'*','asymp':'\\u2248','asympeq':'\\u224D','Atilde':'\\xC3','atilde':'\\xE3','Auml':'\\xC4','auml':'\\xE4','awconint':'\\u2233','awint':'\\u2A11','backcong':'\\u224C','backepsilon':'\\u03F6','backprime':'\\u2035','backsim':'\\u223D','backsimeq':'\\u22CD','Backslash':'\\u2216','Barv':'\\u2AE7','barvee':'\\u22BD','barwed':'\\u2305','Barwed':'\\u2306','barwedge':'\\u2305','bbrk':'\\u23B5','bbrktbrk':'\\u23B6','bcong':'\\u224C','Bcy':'\\u0411','bcy':'\\u0431','bdquo':'\\u201E','becaus':'\\u2235','because':'\\u2235','Because':'\\u2235','bemptyv':'\\u29B0','bepsi':'\\u03F6','bernou':'\\u212C','Bernoullis':'\\u212C','Beta':'\\u0392','beta':'\\u03B2','beth':'\\u2136','between':'\\u226C','Bfr':'\\uD835\\uDD05','bfr':'\\uD835\\uDD1F','bigcap':'\\u22C2','bigcirc':'\\u25EF','bigcup':'\\u22C3','bigodot':'\\u2A00','bigoplus':'\\u2A01','bigotimes':'\\u2A02','bigsqcup':'\\u2A06','bigstar':'\\u2605','bigtriangledown':'\\u25BD','bigtriangleup':'\\u25B3','biguplus':'\\u2A04','bigvee':'\\u22C1','bigwedge':'\\u22C0','bkarow':'\\u290D','blacklozenge':'\\u29EB','blacksquare':'\\u25AA','blacktriangle':'\\u25B4','blacktriangledown':'\\u25BE','blacktriangleleft':'\\u25C2','blacktriangleright':'\\u25B8','blank':'\\u2423','blk12':'\\u2592','blk14':'\\u2591','blk34':'\\u2593','block':'\\u2588','bne':'=\\u20E5','bnequiv':'\\u2261\\u20E5','bNot':'\\u2AED','bnot':'\\u2310','Bopf':'\\uD835\\uDD39','bopf':'\\uD835\\uDD53','bot':'\\u22A5','bottom':'\\u22A5','bowtie':'\\u22C8','boxbox':'\\u29C9','boxdl':'\\u2510','boxdL':'\\u2555','boxDl':'\\u2556','boxDL':'\\u2557','boxdr':'\\u250C','boxdR':'\\u2552','boxDr':'\\u2553','boxDR':'\\u2554','boxh':'\\u2500','boxH':'\\u2550','boxhd':'\\u252C','boxHd':'\\u2564','boxhD':'\\u2565','boxHD':'\\u2566','boxhu':'\\u2534','boxHu':'\\u2567','boxhU':'\\u2568','boxHU':'\\u2569','boxminus':'\\u229F','boxplus':'\\u229E','boxtimes':'\\u22A0','boxul':'\\u2518','boxuL':'\\u255B','boxUl':'\\u255C','boxUL':'\\u255D','boxur':'\\u2514','boxuR':'\\u2558','boxUr':'\\u2559','boxUR':'\\u255A','boxv':'\\u2502','boxV':'\\u2551','boxvh':'\\u253C','boxvH':'\\u256A','boxVh':'\\u256B','boxVH':'\\u256C','boxvl':'\\u2524','boxvL':'\\u2561','boxVl':'\\u2562','boxVL':'\\u2563','boxvr':'\\u251C','boxvR':'\\u255E','boxVr':'\\u255F','boxVR':'\\u2560','bprime':'\\u2035','breve':'\\u02D8','Breve':'\\u02D8','brvbar':'\\xA6','bscr':'\\uD835\\uDCB7','Bscr':'\\u212C','bsemi':'\\u204F','bsim':'\\u223D','bsime':'\\u22CD','bsolb':'\\u29C5','bsol':'\\\\','bsolhsub':'\\u27C8','bull':'\\u2022','bullet':'\\u2022','bump':'\\u224E','bumpE':'\\u2AAE','bumpe':'\\u224F','Bumpeq':'\\u224E','bumpeq':'\\u224F','Cacute':'\\u0106','cacute':'\\u0107','capand':'\\u2A44','capbrcup':'\\u2A49','capcap':'\\u2A4B','cap':'\\u2229','Cap':'\\u22D2','capcup':'\\u2A47','capdot':'\\u2A40','CapitalDifferentialD':'\\u2145','caps':'\\u2229\\uFE00','caret':'\\u2041','caron':'\\u02C7','Cayleys':'\\u212D','ccaps':'\\u2A4D','Ccaron':'\\u010C','ccaron':'\\u010D','Ccedil':'\\xC7','ccedil':'\\xE7','Ccirc':'\\u0108','ccirc':'\\u0109','Cconint':'\\u2230','ccups':'\\u2A4C','ccupssm':'\\u2A50','Cdot':'\\u010A','cdot':'\\u010B','cedil':'\\xB8','Cedilla':'\\xB8','cemptyv':'\\u29B2','cent':'\\xA2','centerdot':'\\xB7','CenterDot':'\\xB7','cfr':'\\uD835\\uDD20','Cfr':'\\u212D','CHcy':'\\u0427','chcy':'\\u0447','check':'\\u2713','checkmark':'\\u2713','Chi':'\\u03A7','chi':'\\u03C7','circ':'\\u02C6','circeq':'\\u2257','circlearrowleft':'\\u21BA','circlearrowright':'\\u21BB','circledast':'\\u229B','circledcirc':'\\u229A','circleddash':'\\u229D','CircleDot':'\\u2299','circledR':'\\xAE','circledS':'\\u24C8','CircleMinus':'\\u2296','CirclePlus':'\\u2295','CircleTimes':'\\u2297','cir':'\\u25CB','cirE':'\\u29C3','cire':'\\u2257','cirfnint':'\\u2A10','cirmid':'\\u2AEF','cirscir':'\\u29C2','ClockwiseContourIntegral':'\\u2232','CloseCurlyDoubleQuote':'\\u201D','CloseCurlyQuote':'\\u2019','clubs':'\\u2663','clubsuit':'\\u2663','colon':':','Colon':'\\u2237','Colone':'\\u2A74','colone':'\\u2254','coloneq':'\\u2254','comma':',','commat':'@','comp':'\\u2201','compfn':'\\u2218','complement':'\\u2201','complexes':'\\u2102','cong':'\\u2245','congdot':'\\u2A6D','Congruent':'\\u2261','conint':'\\u222E','Conint':'\\u222F','ContourIntegral':'\\u222E','copf':'\\uD835\\uDD54','Copf':'\\u2102','coprod':'\\u2210','Coproduct':'\\u2210','copy':'\\xA9','COPY':'\\xA9','copysr':'\\u2117','CounterClockwiseContourIntegral':'\\u2233','crarr':'\\u21B5','cross':'\\u2717','Cross':'\\u2A2F','Cscr':'\\uD835\\uDC9E','cscr':'\\uD835\\uDCB8','csub':'\\u2ACF','csube':'\\u2AD1','csup':'\\u2AD0','csupe':'\\u2AD2','ctdot':'\\u22EF','cudarrl':'\\u2938','cudarrr':'\\u2935','cuepr':'\\u22DE','cuesc':'\\u22DF','cularr':'\\u21B6','cularrp':'\\u293D','cupbrcap':'\\u2A48','cupcap':'\\u2A46','CupCap':'\\u224D','cup':'\\u222A','Cup':'\\u22D3','cupcup':'\\u2A4A','cupdot':'\\u228D','cupor':'\\u2A45','cups':'\\u222A\\uFE00','curarr':'\\u21B7','curarrm':'\\u293C','curlyeqprec':'\\u22DE','curlyeqsucc':'\\u22DF','curlyvee':'\\u22CE','curlywedge':'\\u22CF','curren':'\\xA4','curvearrowleft':'\\u21B6','curvearrowright':'\\u21B7','cuvee':'\\u22CE','cuwed':'\\u22CF','cwconint':'\\u2232','cwint':'\\u2231','cylcty':'\\u232D','dagger':'\\u2020','Dagger':'\\u2021','daleth':'\\u2138','darr':'\\u2193','Darr':'\\u21A1','dArr':'\\u21D3','dash':'\\u2010','Dashv':'\\u2AE4','dashv':'\\u22A3','dbkarow':'\\u290F','dblac':'\\u02DD','Dcaron':'\\u010E','dcaron':'\\u010F','Dcy':'\\u0414','dcy':'\\u0434','ddagger':'\\u2021','ddarr':'\\u21CA','DD':'\\u2145','dd':'\\u2146','DDotrahd':'\\u2911','ddotseq':'\\u2A77','deg':'\\xB0','Del':'\\u2207','Delta':'\\u0394','delta':'\\u03B4','demptyv':'\\u29B1','dfisht':'\\u297F','Dfr':'\\uD835\\uDD07','dfr':'\\uD835\\uDD21','dHar':'\\u2965','dharl':'\\u21C3','dharr':'\\u21C2','DiacriticalAcute':'\\xB4','DiacriticalDot':'\\u02D9','DiacriticalDoubleAcute':'\\u02DD','DiacriticalGrave':'`','DiacriticalTilde':'\\u02DC','diam':'\\u22C4','diamond':'\\u22C4','Diamond':'\\u22C4','diamondsuit':'\\u2666','diams':'\\u2666','die':'\\xA8','DifferentialD':'\\u2146','digamma':'\\u03DD','disin':'\\u22F2','div':'\\xF7','divide':'\\xF7','divideontimes':'\\u22C7','divonx':'\\u22C7','DJcy':'\\u0402','djcy':'\\u0452','dlcorn':'\\u231E','dlcrop':'\\u230D','dollar':'$','Dopf':'\\uD835\\uDD3B','dopf':'\\uD835\\uDD55','Dot':'\\xA8','dot':'\\u02D9','DotDot':'\\u20DC','doteq':'\\u2250','doteqdot':'\\u2251','DotEqual':'\\u2250','dotminus':'\\u2238','dotplus':'\\u2214','dotsquare':'\\u22A1','doublebarwedge':'\\u2306','DoubleContourIntegral':'\\u222F','DoubleDot':'\\xA8','DoubleDownArrow':'\\u21D3','DoubleLeftArrow':'\\u21D0','DoubleLeftRightArrow':'\\u21D4','DoubleLeftTee':'\\u2AE4','DoubleLongLeftArrow':'\\u27F8','DoubleLongLeftRightArrow':'\\u27FA','DoubleLongRightArrow':'\\u27F9','DoubleRightArrow':'\\u21D2','DoubleRightTee':'\\u22A8','DoubleUpArrow':'\\u21D1','DoubleUpDownArrow':'\\u21D5','DoubleVerticalBar':'\\u2225','DownArrowBar':'\\u2913','downarrow':'\\u2193','DownArrow':'\\u2193','Downarrow':'\\u21D3','DownArrowUpArrow':'\\u21F5','DownBreve':'\\u0311','downdownarrows':'\\u21CA','downharpoonleft':'\\u21C3','downharpoonright':'\\u21C2','DownLeftRightVector':'\\u2950','DownLeftTeeVector':'\\u295E','DownLeftVectorBar':'\\u2956','DownLeftVector':'\\u21BD','DownRightTeeVector':'\\u295F','DownRightVectorBar':'\\u2957','DownRightVector':'\\u21C1','DownTeeArrow':'\\u21A7','DownTee':'\\u22A4','drbkarow':'\\u2910','drcorn':'\\u231F','drcrop':'\\u230C','Dscr':'\\uD835\\uDC9F','dscr':'\\uD835\\uDCB9','DScy':'\\u0405','dscy':'\\u0455','dsol':'\\u29F6','Dstrok':'\\u0110','dstrok':'\\u0111','dtdot':'\\u22F1','dtri':'\\u25BF','dtrif':'\\u25BE','duarr':'\\u21F5','duhar':'\\u296F','dwangle':'\\u29A6','DZcy':'\\u040F','dzcy':'\\u045F','dzigrarr':'\\u27FF','Eacute':'\\xC9','eacute':'\\xE9','easter':'\\u2A6E','Ecaron':'\\u011A','ecaron':'\\u011B','Ecirc':'\\xCA','ecirc':'\\xEA','ecir':'\\u2256','ecolon':'\\u2255','Ecy':'\\u042D','ecy':'\\u044D','eDDot':'\\u2A77','Edot':'\\u0116','edot':'\\u0117','eDot':'\\u2251','ee':'\\u2147','efDot':'\\u2252','Efr':'\\uD835\\uDD08','efr':'\\uD835\\uDD22','eg':'\\u2A9A','Egrave':'\\xC8','egrave':'\\xE8','egs':'\\u2A96','egsdot':'\\u2A98','el':'\\u2A99','Element':'\\u2208','elinters':'\\u23E7','ell':'\\u2113','els':'\\u2A95','elsdot':'\\u2A97','Emacr':'\\u0112','emacr':'\\u0113','empty':'\\u2205','emptyset':'\\u2205','EmptySmallSquare':'\\u25FB','emptyv':'\\u2205','EmptyVerySmallSquare':'\\u25AB','emsp13':'\\u2004','emsp14':'\\u2005','emsp':'\\u2003','ENG':'\\u014A','eng':'\\u014B','ensp':'\\u2002','Eogon':'\\u0118','eogon':'\\u0119','Eopf':'\\uD835\\uDD3C','eopf':'\\uD835\\uDD56','epar':'\\u22D5','eparsl':'\\u29E3','eplus':'\\u2A71','epsi':'\\u03B5','Epsilon':'\\u0395','epsilon':'\\u03B5','epsiv':'\\u03F5','eqcirc':'\\u2256','eqcolon':'\\u2255','eqsim':'\\u2242','eqslantgtr':'\\u2A96','eqslantless':'\\u2A95','Equal':'\\u2A75','equals':'=','EqualTilde':'\\u2242','equest':'\\u225F','Equilibrium':'\\u21CC','equiv':'\\u2261','equivDD':'\\u2A78','eqvparsl':'\\u29E5','erarr':'\\u2971','erDot':'\\u2253','escr':'\\u212F','Escr':'\\u2130','esdot':'\\u2250','Esim':'\\u2A73','esim':'\\u2242','Eta':'\\u0397','eta':'\\u03B7','ETH':'\\xD0','eth':'\\xF0','Euml':'\\xCB','euml':'\\xEB','euro':'\\u20AC','excl':'!','exist':'\\u2203','Exists':'\\u2203','expectation':'\\u2130','exponentiale':'\\u2147','ExponentialE':'\\u2147','fallingdotseq':'\\u2252','Fcy':'\\u0424','fcy':'\\u0444','female':'\\u2640','ffilig':'\\uFB03','fflig':'\\uFB00','ffllig':'\\uFB04','Ffr':'\\uD835\\uDD09','ffr':'\\uD835\\uDD23','filig':'\\uFB01','FilledSmallSquare':'\\u25FC','FilledVerySmallSquare':'\\u25AA','fjlig':'fj','flat':'\\u266D','fllig':'\\uFB02','fltns':'\\u25B1','fnof':'\\u0192','Fopf':'\\uD835\\uDD3D','fopf':'\\uD835\\uDD57','forall':'\\u2200','ForAll':'\\u2200','fork':'\\u22D4','forkv':'\\u2AD9','Fouriertrf':'\\u2131','fpartint':'\\u2A0D','frac12':'\\xBD','frac13':'\\u2153','frac14':'\\xBC','frac15':'\\u2155','frac16':'\\u2159','frac18':'\\u215B','frac23':'\\u2154','frac25':'\\u2156','frac34':'\\xBE','frac35':'\\u2157','frac38':'\\u215C','frac45':'\\u2158','frac56':'\\u215A','frac58':'\\u215D','frac78':'\\u215E','frasl':'\\u2044','frown':'\\u2322','fscr':'\\uD835\\uDCBB','Fscr':'\\u2131','gacute':'\\u01F5','Gamma':'\\u0393','gamma':'\\u03B3','Gammad':'\\u03DC','gammad':'\\u03DD','gap':'\\u2A86','Gbreve':'\\u011E','gbreve':'\\u011F','Gcedil':'\\u0122','Gcirc':'\\u011C','gcirc':'\\u011D','Gcy':'\\u0413','gcy':'\\u0433','Gdot':'\\u0120','gdot':'\\u0121','ge':'\\u2265','gE':'\\u2267','gEl':'\\u2A8C','gel':'\\u22DB','geq':'\\u2265','geqq':'\\u2267','geqslant':'\\u2A7E','gescc':'\\u2AA9','ges':'\\u2A7E','gesdot':'\\u2A80','gesdoto':'\\u2A82','gesdotol':'\\u2A84','gesl':'\\u22DB\\uFE00','gesles':'\\u2A94','Gfr':'\\uD835\\uDD0A','gfr':'\\uD835\\uDD24','gg':'\\u226B','Gg':'\\u22D9','ggg':'\\u22D9','gimel':'\\u2137','GJcy':'\\u0403','gjcy':'\\u0453','gla':'\\u2AA5','gl':'\\u2277','glE':'\\u2A92','glj':'\\u2AA4','gnap':'\\u2A8A','gnapprox':'\\u2A8A','gne':'\\u2A88','gnE':'\\u2269','gneq':'\\u2A88','gneqq':'\\u2269','gnsim':'\\u22E7','Gopf':'\\uD835\\uDD3E','gopf':'\\uD835\\uDD58','grave':'`','GreaterEqual':'\\u2265','GreaterEqualLess':'\\u22DB','GreaterFullEqual':'\\u2267','GreaterGreater':'\\u2AA2','GreaterLess':'\\u2277','GreaterSlantEqual':'\\u2A7E','GreaterTilde':'\\u2273','Gscr':'\\uD835\\uDCA2','gscr':'\\u210A','gsim':'\\u2273','gsime':'\\u2A8E','gsiml':'\\u2A90','gtcc':'\\u2AA7','gtcir':'\\u2A7A','gt':'>','GT':'>','Gt':'\\u226B','gtdot':'\\u22D7','gtlPar':'\\u2995','gtquest':'\\u2A7C','gtrapprox':'\\u2A86','gtrarr':'\\u2978','gtrdot':'\\u22D7','gtreqless':'\\u22DB','gtreqqless':'\\u2A8C','gtrless':'\\u2277','gtrsim':'\\u2273','gvertneqq':'\\u2269\\uFE00','gvnE':'\\u2269\\uFE00','Hacek':'\\u02C7','hairsp':'\\u200A','half':'\\xBD','hamilt':'\\u210B','HARDcy':'\\u042A','hardcy':'\\u044A','harrcir':'\\u2948','harr':'\\u2194','hArr':'\\u21D4','harrw':'\\u21AD','Hat':'^','hbar':'\\u210F','Hcirc':'\\u0124','hcirc':'\\u0125','hearts':'\\u2665','heartsuit':'\\u2665','hellip':'\\u2026','hercon':'\\u22B9','hfr':'\\uD835\\uDD25','Hfr':'\\u210C','HilbertSpace':'\\u210B','hksearow':'\\u2925','hkswarow':'\\u2926','hoarr':'\\u21FF','homtht':'\\u223B','hookleftarrow':'\\u21A9','hookrightarrow':'\\u21AA','hopf':'\\uD835\\uDD59','Hopf':'\\u210D','horbar':'\\u2015','HorizontalLine':'\\u2500','hscr':'\\uD835\\uDCBD','Hscr':'\\u210B','hslash':'\\u210F','Hstrok':'\\u0126','hstrok':'\\u0127','HumpDownHump':'\\u224E','HumpEqual':'\\u224F','hybull':'\\u2043','hyphen':'\\u2010','Iacute':'\\xCD','iacute':'\\xED','ic':'\\u2063','Icirc':'\\xCE','icirc':'\\xEE','Icy':'\\u0418','icy':'\\u0438','Idot':'\\u0130','IEcy':'\\u0415','iecy':'\\u0435','iexcl':'\\xA1','iff':'\\u21D4','ifr':'\\uD835\\uDD26','Ifr':'\\u2111','Igrave':'\\xCC','igrave':'\\xEC','ii':'\\u2148','iiiint':'\\u2A0C','iiint':'\\u222D','iinfin':'\\u29DC','iiota':'\\u2129','IJlig':'\\u0132','ijlig':'\\u0133','Imacr':'\\u012A','imacr':'\\u012B','image':'\\u2111','ImaginaryI':'\\u2148','imagline':'\\u2110','imagpart':'\\u2111','imath':'\\u0131','Im':'\\u2111','imof':'\\u22B7','imped':'\\u01B5','Implies':'\\u21D2','incare':'\\u2105','in':'\\u2208','infin':'\\u221E','infintie':'\\u29DD','inodot':'\\u0131','intcal':'\\u22BA','int':'\\u222B','Int':'\\u222C','integers':'\\u2124','Integral':'\\u222B','intercal':'\\u22BA','Intersection':'\\u22C2','intlarhk':'\\u2A17','intprod':'\\u2A3C','InvisibleComma':'\\u2063','InvisibleTimes':'\\u2062','IOcy':'\\u0401','iocy':'\\u0451','Iogon':'\\u012E','iogon':'\\u012F','Iopf':'\\uD835\\uDD40','iopf':'\\uD835\\uDD5A','Iota':'\\u0399','iota':'\\u03B9','iprod':'\\u2A3C','iquest':'\\xBF','iscr':'\\uD835\\uDCBE','Iscr':'\\u2110','isin':'\\u2208','isindot':'\\u22F5','isinE':'\\u22F9','isins':'\\u22F4','isinsv':'\\u22F3','isinv':'\\u2208','it':'\\u2062','Itilde':'\\u0128','itilde':'\\u0129','Iukcy':'\\u0406','iukcy':'\\u0456','Iuml':'\\xCF','iuml':'\\xEF','Jcirc':'\\u0134','jcirc':'\\u0135','Jcy':'\\u0419','jcy':'\\u0439','Jfr':'\\uD835\\uDD0D','jfr':'\\uD835\\uDD27','jmath':'\\u0237','Jopf':'\\uD835\\uDD41','jopf':'\\uD835\\uDD5B','Jscr':'\\uD835\\uDCA5','jscr':'\\uD835\\uDCBF','Jsercy':'\\u0408','jsercy':'\\u0458','Jukcy':'\\u0404','jukcy':'\\u0454','Kappa':'\\u039A','kappa':'\\u03BA','kappav':'\\u03F0','Kcedil':'\\u0136','kcedil':'\\u0137','Kcy':'\\u041A','kcy':'\\u043A','Kfr':'\\uD835\\uDD0E','kfr':'\\uD835\\uDD28','kgreen':'\\u0138','KHcy':'\\u0425','khcy':'\\u0445','KJcy':'\\u040C','kjcy':'\\u045C','Kopf':'\\uD835\\uDD42','kopf':'\\uD835\\uDD5C','Kscr':'\\uD835\\uDCA6','kscr':'\\uD835\\uDCC0','lAarr':'\\u21DA','Lacute':'\\u0139','lacute':'\\u013A','laemptyv':'\\u29B4','lagran':'\\u2112','Lambda':'\\u039B','lambda':'\\u03BB','lang':'\\u27E8','Lang':'\\u27EA','langd':'\\u2991','langle':'\\u27E8','lap':'\\u2A85','Laplacetrf':'\\u2112','laquo':'\\xAB','larrb':'\\u21E4','larrbfs':'\\u291F','larr':'\\u2190','Larr':'\\u219E','lArr':'\\u21D0','larrfs':'\\u291D','larrhk':'\\u21A9','larrlp':'\\u21AB','larrpl':'\\u2939','larrsim':'\\u2973','larrtl':'\\u21A2','latail':'\\u2919','lAtail':'\\u291B','lat':'\\u2AAB','late':'\\u2AAD','lates':'\\u2AAD\\uFE00','lbarr':'\\u290C','lBarr':'\\u290E','lbbrk':'\\u2772','lbrace':'{','lbrack':'[','lbrke':'\\u298B','lbrksld':'\\u298F','lbrkslu':'\\u298D','Lcaron':'\\u013D','lcaron':'\\u013E','Lcedil':'\\u013B','lcedil':'\\u013C','lceil':'\\u2308','lcub':'{','Lcy':'\\u041B','lcy':'\\u043B','ldca':'\\u2936','ldquo':'\\u201C','ldquor':'\\u201E','ldrdhar':'\\u2967','ldrushar':'\\u294B','ldsh':'\\u21B2','le':'\\u2264','lE':'\\u2266','LeftAngleBracket':'\\u27E8','LeftArrowBar':'\\u21E4','leftarrow':'\\u2190','LeftArrow':'\\u2190','Leftarrow':'\\u21D0','LeftArrowRightArrow':'\\u21C6','leftarrowtail':'\\u21A2','LeftCeiling':'\\u2308','LeftDoubleBracket':'\\u27E6','LeftDownTeeVector':'\\u2961','LeftDownVectorBar':'\\u2959','LeftDownVector':'\\u21C3','LeftFloor':'\\u230A','leftharpoondown':'\\u21BD','leftharpoonup':'\\u21BC','leftleftarrows':'\\u21C7','leftrightarrow':'\\u2194','LeftRightArrow':'\\u2194','Leftrightarrow':'\\u21D4','leftrightarrows':'\\u21C6','leftrightharpoons':'\\u21CB','leftrightsquigarrow':'\\u21AD','LeftRightVector':'\\u294E','LeftTeeArrow':'\\u21A4','LeftTee':'\\u22A3','LeftTeeVector':'\\u295A','leftthreetimes':'\\u22CB','LeftTriangleBar':'\\u29CF','LeftTriangle':'\\u22B2','LeftTriangleEqual':'\\u22B4','LeftUpDownVector':'\\u2951','LeftUpTeeVector':'\\u2960','LeftUpVectorBar':'\\u2958','LeftUpVector':'\\u21BF','LeftVectorBar':'\\u2952','LeftVector':'\\u21BC','lEg':'\\u2A8B','leg':'\\u22DA','leq':'\\u2264','leqq':'\\u2266','leqslant':'\\u2A7D','lescc':'\\u2AA8','les':'\\u2A7D','lesdot':'\\u2A7F','lesdoto':'\\u2A81','lesdotor':'\\u2A83','lesg':'\\u22DA\\uFE00','lesges':'\\u2A93','lessapprox':'\\u2A85','lessdot':'\\u22D6','lesseqgtr':'\\u22DA','lesseqqgtr':'\\u2A8B','LessEqualGreater':'\\u22DA','LessFullEqual':'\\u2266','LessGreater':'\\u2276','lessgtr':'\\u2276','LessLess':'\\u2AA1','lesssim':'\\u2272','LessSlantEqual':'\\u2A7D','LessTilde':'\\u2272','lfisht':'\\u297C','lfloor':'\\u230A','Lfr':'\\uD835\\uDD0F','lfr':'\\uD835\\uDD29','lg':'\\u2276','lgE':'\\u2A91','lHar':'\\u2962','lhard':'\\u21BD','lharu':'\\u21BC','lharul':'\\u296A','lhblk':'\\u2584','LJcy':'\\u0409','ljcy':'\\u0459','llarr':'\\u21C7','ll':'\\u226A','Ll':'\\u22D8','llcorner':'\\u231E','Lleftarrow':'\\u21DA','llhard':'\\u296B','lltri':'\\u25FA','Lmidot':'\\u013F','lmidot':'\\u0140','lmoustache':'\\u23B0','lmoust':'\\u23B0','lnap':'\\u2A89','lnapprox':'\\u2A89','lne':'\\u2A87','lnE':'\\u2268','lneq':'\\u2A87','lneqq':'\\u2268','lnsim':'\\u22E6','loang':'\\u27EC','loarr':'\\u21FD','lobrk':'\\u27E6','longleftarrow':'\\u27F5','LongLeftArrow':'\\u27F5','Longleftarrow':'\\u27F8','longleftrightarrow':'\\u27F7','LongLeftRightArrow':'\\u27F7','Longleftrightarrow':'\\u27FA','longmapsto':'\\u27FC','longrightarrow':'\\u27F6','LongRightArrow':'\\u27F6','Longrightarrow':'\\u27F9','looparrowleft':'\\u21AB','looparrowright':'\\u21AC','lopar':'\\u2985','Lopf':'\\uD835\\uDD43','lopf':'\\uD835\\uDD5D','loplus':'\\u2A2D','lotimes':'\\u2A34','lowast':'\\u2217','lowbar':'_','LowerLeftArrow':'\\u2199','LowerRightArrow':'\\u2198','loz':'\\u25CA','lozenge':'\\u25CA','lozf':'\\u29EB','lpar':'(','lparlt':'\\u2993','lrarr':'\\u21C6','lrcorner':'\\u231F','lrhar':'\\u21CB','lrhard':'\\u296D','lrm':'\\u200E','lrtri':'\\u22BF','lsaquo':'\\u2039','lscr':'\\uD835\\uDCC1','Lscr':'\\u2112','lsh':'\\u21B0','Lsh':'\\u21B0','lsim':'\\u2272','lsime':'\\u2A8D','lsimg':'\\u2A8F','lsqb':'[','lsquo':'\\u2018','lsquor':'\\u201A','Lstrok':'\\u0141','lstrok':'\\u0142','ltcc':'\\u2AA6','ltcir':'\\u2A79','lt':'<','LT':'<','Lt':'\\u226A','ltdot':'\\u22D6','lthree':'\\u22CB','ltimes':'\\u22C9','ltlarr':'\\u2976','ltquest':'\\u2A7B','ltri':'\\u25C3','ltrie':'\\u22B4','ltrif':'\\u25C2','ltrPar':'\\u2996','lurdshar':'\\u294A','luruhar':'\\u2966','lvertneqq':'\\u2268\\uFE00','lvnE':'\\u2268\\uFE00','macr':'\\xAF','male':'\\u2642','malt':'\\u2720','maltese':'\\u2720','Map':'\\u2905','map':'\\u21A6','mapsto':'\\u21A6','mapstodown':'\\u21A7','mapstoleft':'\\u21A4','mapstoup':'\\u21A5','marker':'\\u25AE','mcomma':'\\u2A29','Mcy':'\\u041C','mcy':'\\u043C','mdash':'\\u2014','mDDot':'\\u223A','measuredangle':'\\u2221','MediumSpace':'\\u205F','Mellintrf':'\\u2133','Mfr':'\\uD835\\uDD10','mfr':'\\uD835\\uDD2A','mho':'\\u2127','micro':'\\xB5','midast':'*','midcir':'\\u2AF0','mid':'\\u2223','middot':'\\xB7','minusb':'\\u229F','minus':'\\u2212','minusd':'\\u2238','minusdu':'\\u2A2A','MinusPlus':'\\u2213','mlcp':'\\u2ADB','mldr':'\\u2026','mnplus':'\\u2213','models':'\\u22A7','Mopf':'\\uD835\\uDD44','mopf':'\\uD835\\uDD5E','mp':'\\u2213','mscr':'\\uD835\\uDCC2','Mscr':'\\u2133','mstpos':'\\u223E','Mu':'\\u039C','mu':'\\u03BC','multimap':'\\u22B8','mumap':'\\u22B8','nabla':'\\u2207','Nacute':'\\u0143','nacute':'\\u0144','nang':'\\u2220\\u20D2','nap':'\\u2249','napE':'\\u2A70\\u0338','napid':'\\u224B\\u0338','napos':'\\u0149','napprox':'\\u2249','natural':'\\u266E','naturals':'\\u2115','natur':'\\u266E','nbsp':'\\xA0','nbump':'\\u224E\\u0338','nbumpe':'\\u224F\\u0338','ncap':'\\u2A43','Ncaron':'\\u0147','ncaron':'\\u0148','Ncedil':'\\u0145','ncedil':'\\u0146','ncong':'\\u2247','ncongdot':'\\u2A6D\\u0338','ncup':'\\u2A42','Ncy':'\\u041D','ncy':'\\u043D','ndash':'\\u2013','nearhk':'\\u2924','nearr':'\\u2197','neArr':'\\u21D7','nearrow':'\\u2197','ne':'\\u2260','nedot':'\\u2250\\u0338','NegativeMediumSpace':'\\u200B','NegativeThickSpace':'\\u200B','NegativeThinSpace':'\\u200B','NegativeVeryThinSpace':'\\u200B','nequiv':'\\u2262','nesear':'\\u2928','nesim':'\\u2242\\u0338','NestedGreaterGreater':'\\u226B','NestedLessLess':'\\u226A','NewLine':'\\n','nexist':'\\u2204','nexists':'\\u2204','Nfr':'\\uD835\\uDD11','nfr':'\\uD835\\uDD2B','ngE':'\\u2267\\u0338','nge':'\\u2271','ngeq':'\\u2271','ngeqq':'\\u2267\\u0338','ngeqslant':'\\u2A7E\\u0338','nges':'\\u2A7E\\u0338','nGg':'\\u22D9\\u0338','ngsim':'\\u2275','nGt':'\\u226B\\u20D2','ngt':'\\u226F','ngtr':'\\u226F','nGtv':'\\u226B\\u0338','nharr':'\\u21AE','nhArr':'\\u21CE','nhpar':'\\u2AF2','ni':'\\u220B','nis':'\\u22FC','nisd':'\\u22FA','niv':'\\u220B','NJcy':'\\u040A','njcy':'\\u045A','nlarr':'\\u219A','nlArr':'\\u21CD','nldr':'\\u2025','nlE':'\\u2266\\u0338','nle':'\\u2270','nleftarrow':'\\u219A','nLeftarrow':'\\u21CD','nleftrightarrow':'\\u21AE','nLeftrightarrow':'\\u21CE','nleq':'\\u2270','nleqq':'\\u2266\\u0338','nleqslant':'\\u2A7D\\u0338','nles':'\\u2A7D\\u0338','nless':'\\u226E','nLl':'\\u22D8\\u0338','nlsim':'\\u2274','nLt':'\\u226A\\u20D2','nlt':'\\u226E','nltri':'\\u22EA','nltrie':'\\u22EC','nLtv':'\\u226A\\u0338','nmid':'\\u2224','NoBreak':'\\u2060','NonBreakingSpace':'\\xA0','nopf':'\\uD835\\uDD5F','Nopf':'\\u2115','Not':'\\u2AEC','not':'\\xAC','NotCongruent':'\\u2262','NotCupCap':'\\u226D','NotDoubleVerticalBar':'\\u2226','NotElement':'\\u2209','NotEqual':'\\u2260','NotEqualTilde':'\\u2242\\u0338','NotExists':'\\u2204','NotGreater':'\\u226F','NotGreaterEqual':'\\u2271','NotGreaterFullEqual':'\\u2267\\u0338','NotGreaterGreater':'\\u226B\\u0338','NotGreaterLess':'\\u2279','NotGreaterSlantEqual':'\\u2A7E\\u0338','NotGreaterTilde':'\\u2275','NotHumpDownHump':'\\u224E\\u0338','NotHumpEqual':'\\u224F\\u0338','notin':'\\u2209','notindot':'\\u22F5\\u0338','notinE':'\\u22F9\\u0338','notinva':'\\u2209','notinvb':'\\u22F7','notinvc':'\\u22F6','NotLeftTriangleBar':'\\u29CF\\u0338','NotLeftTriangle':'\\u22EA','NotLeftTriangleEqual':'\\u22EC','NotLess':'\\u226E','NotLessEqual':'\\u2270','NotLessGreater':'\\u2278','NotLessLess':'\\u226A\\u0338','NotLessSlantEqual':'\\u2A7D\\u0338','NotLessTilde':'\\u2274','NotNestedGreaterGreater':'\\u2AA2\\u0338','NotNestedLessLess':'\\u2AA1\\u0338','notni':'\\u220C','notniva':'\\u220C','notnivb':'\\u22FE','notnivc':'\\u22FD','NotPrecedes':'\\u2280','NotPrecedesEqual':'\\u2AAF\\u0338','NotPrecedesSlantEqual':'\\u22E0','NotReverseElement':'\\u220C','NotRightTriangleBar':'\\u29D0\\u0338','NotRightTriangle':'\\u22EB','NotRightTriangleEqual':'\\u22ED','NotSquareSubset':'\\u228F\\u0338','NotSquareSubsetEqual':'\\u22E2','NotSquareSuperset':'\\u2290\\u0338','NotSquareSupersetEqual':'\\u22E3','NotSubset':'\\u2282\\u20D2','NotSubsetEqual':'\\u2288','NotSucceeds':'\\u2281','NotSucceedsEqual':'\\u2AB0\\u0338','NotSucceedsSlantEqual':'\\u22E1','NotSucceedsTilde':'\\u227F\\u0338','NotSuperset':'\\u2283\\u20D2','NotSupersetEqual':'\\u2289','NotTilde':'\\u2241','NotTildeEqual':'\\u2244','NotTildeFullEqual':'\\u2247','NotTildeTilde':'\\u2249','NotVerticalBar':'\\u2224','nparallel':'\\u2226','npar':'\\u2226','nparsl':'\\u2AFD\\u20E5','npart':'\\u2202\\u0338','npolint':'\\u2A14','npr':'\\u2280','nprcue':'\\u22E0','nprec':'\\u2280','npreceq':'\\u2AAF\\u0338','npre':'\\u2AAF\\u0338','nrarrc':'\\u2933\\u0338','nrarr':'\\u219B','nrArr':'\\u21CF','nrarrw':'\\u219D\\u0338','nrightarrow':'\\u219B','nRightarrow':'\\u21CF','nrtri':'\\u22EB','nrtrie':'\\u22ED','nsc':'\\u2281','nsccue':'\\u22E1','nsce':'\\u2AB0\\u0338','Nscr':'\\uD835\\uDCA9','nscr':'\\uD835\\uDCC3','nshortmid':'\\u2224','nshortparallel':'\\u2226','nsim':'\\u2241','nsime':'\\u2244','nsimeq':'\\u2244','nsmid':'\\u2224','nspar':'\\u2226','nsqsube':'\\u22E2','nsqsupe':'\\u22E3','nsub':'\\u2284','nsubE':'\\u2AC5\\u0338','nsube':'\\u2288','nsubset':'\\u2282\\u20D2','nsubseteq':'\\u2288','nsubseteqq':'\\u2AC5\\u0338','nsucc':'\\u2281','nsucceq':'\\u2AB0\\u0338','nsup':'\\u2285','nsupE':'\\u2AC6\\u0338','nsupe':'\\u2289','nsupset':'\\u2283\\u20D2','nsupseteq':'\\u2289','nsupseteqq':'\\u2AC6\\u0338','ntgl':'\\u2279','Ntilde':'\\xD1','ntilde':'\\xF1','ntlg':'\\u2278','ntriangleleft':'\\u22EA','ntrianglelefteq':'\\u22EC','ntriangleright':'\\u22EB','ntrianglerighteq':'\\u22ED','Nu':'\\u039D','nu':'\\u03BD','num':'#','numero':'\\u2116','numsp':'\\u2007','nvap':'\\u224D\\u20D2','nvdash':'\\u22AC','nvDash':'\\u22AD','nVdash':'\\u22AE','nVDash':'\\u22AF','nvge':'\\u2265\\u20D2','nvgt':'>\\u20D2','nvHarr':'\\u2904','nvinfin':'\\u29DE','nvlArr':'\\u2902','nvle':'\\u2264\\u20D2','nvlt':'<\\u20D2','nvltrie':'\\u22B4\\u20D2','nvrArr':'\\u2903','nvrtrie':'\\u22B5\\u20D2','nvsim':'\\u223C\\u20D2','nwarhk':'\\u2923','nwarr':'\\u2196','nwArr':'\\u21D6','nwarrow':'\\u2196','nwnear':'\\u2927','Oacute':'\\xD3','oacute':'\\xF3','oast':'\\u229B','Ocirc':'\\xD4','ocirc':'\\xF4','ocir':'\\u229A','Ocy':'\\u041E','ocy':'\\u043E','odash':'\\u229D','Odblac':'\\u0150','odblac':'\\u0151','odiv':'\\u2A38','odot':'\\u2299','odsold':'\\u29BC','OElig':'\\u0152','oelig':'\\u0153','ofcir':'\\u29BF','Ofr':'\\uD835\\uDD12','ofr':'\\uD835\\uDD2C','ogon':'\\u02DB','Ograve':'\\xD2','ograve':'\\xF2','ogt':'\\u29C1','ohbar':'\\u29B5','ohm':'\\u03A9','oint':'\\u222E','olarr':'\\u21BA','olcir':'\\u29BE','olcross':'\\u29BB','oline':'\\u203E','olt':'\\u29C0','Omacr':'\\u014C','omacr':'\\u014D','Omega':'\\u03A9','omega':'\\u03C9','Omicron':'\\u039F','omicron':'\\u03BF','omid':'\\u29B6','ominus':'\\u2296','Oopf':'\\uD835\\uDD46','oopf':'\\uD835\\uDD60','opar':'\\u29B7','OpenCurlyDoubleQuote':'\\u201C','OpenCurlyQuote':'\\u2018','operp':'\\u29B9','oplus':'\\u2295','orarr':'\\u21BB','Or':'\\u2A54','or':'\\u2228','ord':'\\u2A5D','order':'\\u2134','orderof':'\\u2134','ordf':'\\xAA','ordm':'\\xBA','origof':'\\u22B6','oror':'\\u2A56','orslope':'\\u2A57','orv':'\\u2A5B','oS':'\\u24C8','Oscr':'\\uD835\\uDCAA','oscr':'\\u2134','Oslash':'\\xD8','oslash':'\\xF8','osol':'\\u2298','Otilde':'\\xD5','otilde':'\\xF5','otimesas':'\\u2A36','Otimes':'\\u2A37','otimes':'\\u2297','Ouml':'\\xD6','ouml':'\\xF6','ovbar':'\\u233D','OverBar':'\\u203E','OverBrace':'\\u23DE','OverBracket':'\\u23B4','OverParenthesis':'\\u23DC','para':'\\xB6','parallel':'\\u2225','par':'\\u2225','parsim':'\\u2AF3','parsl':'\\u2AFD','part':'\\u2202','PartialD':'\\u2202','Pcy':'\\u041F','pcy':'\\u043F','percnt':'%','period':'.','permil':'\\u2030','perp':'\\u22A5','pertenk':'\\u2031','Pfr':'\\uD835\\uDD13','pfr':'\\uD835\\uDD2D','Phi':'\\u03A6','phi':'\\u03C6','phiv':'\\u03D5','phmmat':'\\u2133','phone':'\\u260E','Pi':'\\u03A0','pi':'\\u03C0','pitchfork':'\\u22D4','piv':'\\u03D6','planck':'\\u210F','planckh':'\\u210E','plankv':'\\u210F','plusacir':'\\u2A23','plusb':'\\u229E','pluscir':'\\u2A22','plus':'+','plusdo':'\\u2214','plusdu':'\\u2A25','pluse':'\\u2A72','PlusMinus':'\\xB1','plusmn':'\\xB1','plussim':'\\u2A26','plustwo':'\\u2A27','pm':'\\xB1','Poincareplane':'\\u210C','pointint':'\\u2A15','popf':'\\uD835\\uDD61','Popf':'\\u2119','pound':'\\xA3','prap':'\\u2AB7','Pr':'\\u2ABB','pr':'\\u227A','prcue':'\\u227C','precapprox':'\\u2AB7','prec':'\\u227A','preccurlyeq':'\\u227C','Precedes':'\\u227A','PrecedesEqual':'\\u2AAF','PrecedesSlantEqual':'\\u227C','PrecedesTilde':'\\u227E','preceq':'\\u2AAF','precnapprox':'\\u2AB9','precneqq':'\\u2AB5','precnsim':'\\u22E8','pre':'\\u2AAF','prE':'\\u2AB3','precsim':'\\u227E','prime':'\\u2032','Prime':'\\u2033','primes':'\\u2119','prnap':'\\u2AB9','prnE':'\\u2AB5','prnsim':'\\u22E8','prod':'\\u220F','Product':'\\u220F','profalar':'\\u232E','profline':'\\u2312','profsurf':'\\u2313','prop':'\\u221D','Proportional':'\\u221D','Proportion':'\\u2237','propto':'\\u221D','prsim':'\\u227E','prurel':'\\u22B0','Pscr':'\\uD835\\uDCAB','pscr':'\\uD835\\uDCC5','Psi':'\\u03A8','psi':'\\u03C8','puncsp':'\\u2008','Qfr':'\\uD835\\uDD14','qfr':'\\uD835\\uDD2E','qint':'\\u2A0C','qopf':'\\uD835\\uDD62','Qopf':'\\u211A','qprime':'\\u2057','Qscr':'\\uD835\\uDCAC','qscr':'\\uD835\\uDCC6','quaternions':'\\u210D','quatint':'\\u2A16','quest':'?','questeq':'\\u225F','quot':'\"','QUOT':'\"','rAarr':'\\u21DB','race':'\\u223D\\u0331','Racute':'\\u0154','racute':'\\u0155','radic':'\\u221A','raemptyv':'\\u29B3','rang':'\\u27E9','Rang':'\\u27EB','rangd':'\\u2992','range':'\\u29A5','rangle':'\\u27E9','raquo':'\\xBB','rarrap':'\\u2975','rarrb':'\\u21E5','rarrbfs':'\\u2920','rarrc':'\\u2933','rarr':'\\u2192','Rarr':'\\u21A0','rArr':'\\u21D2','rarrfs':'\\u291E','rarrhk':'\\u21AA','rarrlp':'\\u21AC','rarrpl':'\\u2945','rarrsim':'\\u2974','Rarrtl':'\\u2916','rarrtl':'\\u21A3','rarrw':'\\u219D','ratail':'\\u291A','rAtail':'\\u291C','ratio':'\\u2236','rationals':'\\u211A','rbarr':'\\u290D','rBarr':'\\u290F','RBarr':'\\u2910','rbbrk':'\\u2773','rbrace':'}','rbrack':']','rbrke':'\\u298C','rbrksld':'\\u298E','rbrkslu':'\\u2990','Rcaron':'\\u0158','rcaron':'\\u0159','Rcedil':'\\u0156','rcedil':'\\u0157','rceil':'\\u2309','rcub':'}','Rcy':'\\u0420','rcy':'\\u0440','rdca':'\\u2937','rdldhar':'\\u2969','rdquo':'\\u201D','rdquor':'\\u201D','rdsh':'\\u21B3','real':'\\u211C','realine':'\\u211B','realpart':'\\u211C','reals':'\\u211D','Re':'\\u211C','rect':'\\u25AD','reg':'\\xAE','REG':'\\xAE','ReverseElement':'\\u220B','ReverseEquilibrium':'\\u21CB','ReverseUpEquilibrium':'\\u296F','rfisht':'\\u297D','rfloor':'\\u230B','rfr':'\\uD835\\uDD2F','Rfr':'\\u211C','rHar':'\\u2964','rhard':'\\u21C1','rharu':'\\u21C0','rharul':'\\u296C','Rho':'\\u03A1','rho':'\\u03C1','rhov':'\\u03F1','RightAngleBracket':'\\u27E9','RightArrowBar':'\\u21E5','rightarrow':'\\u2192','RightArrow':'\\u2192','Rightarrow':'\\u21D2','RightArrowLeftArrow':'\\u21C4','rightarrowtail':'\\u21A3','RightCeiling':'\\u2309','RightDoubleBracket':'\\u27E7','RightDownTeeVector':'\\u295D','RightDownVectorBar':'\\u2955','RightDownVector':'\\u21C2','RightFloor':'\\u230B','rightharpoondown':'\\u21C1','rightharpoonup':'\\u21C0','rightleftarrows':'\\u21C4','rightleftharpoons':'\\u21CC','rightrightarrows':'\\u21C9','rightsquigarrow':'\\u219D','RightTeeArrow':'\\u21A6','RightTee':'\\u22A2','RightTeeVector':'\\u295B','rightthreetimes':'\\u22CC','RightTriangleBar':'\\u29D0','RightTriangle':'\\u22B3','RightTriangleEqual':'\\u22B5','RightUpDownVector':'\\u294F','RightUpTeeVector':'\\u295C','RightUpVectorBar':'\\u2954','RightUpVector':'\\u21BE','RightVectorBar':'\\u2953','RightVector':'\\u21C0','ring':'\\u02DA','risingdotseq':'\\u2253','rlarr':'\\u21C4','rlhar':'\\u21CC','rlm':'\\u200F','rmoustache':'\\u23B1','rmoust':'\\u23B1','rnmid':'\\u2AEE','roang':'\\u27ED','roarr':'\\u21FE','robrk':'\\u27E7','ropar':'\\u2986','ropf':'\\uD835\\uDD63','Ropf':'\\u211D','roplus':'\\u2A2E','rotimes':'\\u2A35','RoundImplies':'\\u2970','rpar':')','rpargt':'\\u2994','rppolint':'\\u2A12','rrarr':'\\u21C9','Rrightarrow':'\\u21DB','rsaquo':'\\u203A','rscr':'\\uD835\\uDCC7','Rscr':'\\u211B','rsh':'\\u21B1','Rsh':'\\u21B1','rsqb':']','rsquo':'\\u2019','rsquor':'\\u2019','rthree':'\\u22CC','rtimes':'\\u22CA','rtri':'\\u25B9','rtrie':'\\u22B5','rtrif':'\\u25B8','rtriltri':'\\u29CE','RuleDelayed':'\\u29F4','ruluhar':'\\u2968','rx':'\\u211E','Sacute':'\\u015A','sacute':'\\u015B','sbquo':'\\u201A','scap':'\\u2AB8','Scaron':'\\u0160','scaron':'\\u0161','Sc':'\\u2ABC','sc':'\\u227B','sccue':'\\u227D','sce':'\\u2AB0','scE':'\\u2AB4','Scedil':'\\u015E','scedil':'\\u015F','Scirc':'\\u015C','scirc':'\\u015D','scnap':'\\u2ABA','scnE':'\\u2AB6','scnsim':'\\u22E9','scpolint':'\\u2A13','scsim':'\\u227F','Scy':'\\u0421','scy':'\\u0441','sdotb':'\\u22A1','sdot':'\\u22C5','sdote':'\\u2A66','searhk':'\\u2925','searr':'\\u2198','seArr':'\\u21D8','searrow':'\\u2198','sect':'\\xA7','semi':';','seswar':'\\u2929','setminus':'\\u2216','setmn':'\\u2216','sext':'\\u2736','Sfr':'\\uD835\\uDD16','sfr':'\\uD835\\uDD30','sfrown':'\\u2322','sharp':'\\u266F','SHCHcy':'\\u0429','shchcy':'\\u0449','SHcy':'\\u0428','shcy':'\\u0448','ShortDownArrow':'\\u2193','ShortLeftArrow':'\\u2190','shortmid':'\\u2223','shortparallel':'\\u2225','ShortRightArrow':'\\u2192','ShortUpArrow':'\\u2191','shy':'\\xAD','Sigma':'\\u03A3','sigma':'\\u03C3','sigmaf':'\\u03C2','sigmav':'\\u03C2','sim':'\\u223C','simdot':'\\u2A6A','sime':'\\u2243','simeq':'\\u2243','simg':'\\u2A9E','simgE':'\\u2AA0','siml':'\\u2A9D','simlE':'\\u2A9F','simne':'\\u2246','simplus':'\\u2A24','simrarr':'\\u2972','slarr':'\\u2190','SmallCircle':'\\u2218','smallsetminus':'\\u2216','smashp':'\\u2A33','smeparsl':'\\u29E4','smid':'\\u2223','smile':'\\u2323','smt':'\\u2AAA','smte':'\\u2AAC','smtes':'\\u2AAC\\uFE00','SOFTcy':'\\u042C','softcy':'\\u044C','solbar':'\\u233F','solb':'\\u29C4','sol':'/','Sopf':'\\uD835\\uDD4A','sopf':'\\uD835\\uDD64','spades':'\\u2660','spadesuit':'\\u2660','spar':'\\u2225','sqcap':'\\u2293','sqcaps':'\\u2293\\uFE00','sqcup':'\\u2294','sqcups':'\\u2294\\uFE00','Sqrt':'\\u221A','sqsub':'\\u228F','sqsube':'\\u2291','sqsubset':'\\u228F','sqsubseteq':'\\u2291','sqsup':'\\u2290','sqsupe':'\\u2292','sqsupset':'\\u2290','sqsupseteq':'\\u2292','square':'\\u25A1','Square':'\\u25A1','SquareIntersection':'\\u2293','SquareSubset':'\\u228F','SquareSubsetEqual':'\\u2291','SquareSuperset':'\\u2290','SquareSupersetEqual':'\\u2292','SquareUnion':'\\u2294','squarf':'\\u25AA','squ':'\\u25A1','squf':'\\u25AA','srarr':'\\u2192','Sscr':'\\uD835\\uDCAE','sscr':'\\uD835\\uDCC8','ssetmn':'\\u2216','ssmile':'\\u2323','sstarf':'\\u22C6','Star':'\\u22C6','star':'\\u2606','starf':'\\u2605','straightepsilon':'\\u03F5','straightphi':'\\u03D5','strns':'\\xAF','sub':'\\u2282','Sub':'\\u22D0','subdot':'\\u2ABD','subE':'\\u2AC5','sube':'\\u2286','subedot':'\\u2AC3','submult':'\\u2AC1','subnE':'\\u2ACB','subne':'\\u228A','subplus':'\\u2ABF','subrarr':'\\u2979','subset':'\\u2282','Subset':'\\u22D0','subseteq':'\\u2286','subseteqq':'\\u2AC5','SubsetEqual':'\\u2286','subsetneq':'\\u228A','subsetneqq':'\\u2ACB','subsim':'\\u2AC7','subsub':'\\u2AD5','subsup':'\\u2AD3','succapprox':'\\u2AB8','succ':'\\u227B','succcurlyeq':'\\u227D','Succeeds':'\\u227B','SucceedsEqual':'\\u2AB0','SucceedsSlantEqual':'\\u227D','SucceedsTilde':'\\u227F','succeq':'\\u2AB0','succnapprox':'\\u2ABA','succneqq':'\\u2AB6','succnsim':'\\u22E9','succsim':'\\u227F','SuchThat':'\\u220B','sum':'\\u2211','Sum':'\\u2211','sung':'\\u266A','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','sup':'\\u2283','Sup':'\\u22D1','supdot':'\\u2ABE','supdsub':'\\u2AD8','supE':'\\u2AC6','supe':'\\u2287','supedot':'\\u2AC4','Superset':'\\u2283','SupersetEqual':'\\u2287','suphsol':'\\u27C9','suphsub':'\\u2AD7','suplarr':'\\u297B','supmult':'\\u2AC2','supnE':'\\u2ACC','supne':'\\u228B','supplus':'\\u2AC0','supset':'\\u2283','Supset':'\\u22D1','supseteq':'\\u2287','supseteqq':'\\u2AC6','supsetneq':'\\u228B','supsetneqq':'\\u2ACC','supsim':'\\u2AC8','supsub':'\\u2AD4','supsup':'\\u2AD6','swarhk':'\\u2926','swarr':'\\u2199','swArr':'\\u21D9','swarrow':'\\u2199','swnwar':'\\u292A','szlig':'\\xDF','Tab':'\\t','target':'\\u2316','Tau':'\\u03A4','tau':'\\u03C4','tbrk':'\\u23B4','Tcaron':'\\u0164','tcaron':'\\u0165','Tcedil':'\\u0162','tcedil':'\\u0163','Tcy':'\\u0422','tcy':'\\u0442','tdot':'\\u20DB','telrec':'\\u2315','Tfr':'\\uD835\\uDD17','tfr':'\\uD835\\uDD31','there4':'\\u2234','therefore':'\\u2234','Therefore':'\\u2234','Theta':'\\u0398','theta':'\\u03B8','thetasym':'\\u03D1','thetav':'\\u03D1','thickapprox':'\\u2248','thicksim':'\\u223C','ThickSpace':'\\u205F\\u200A','ThinSpace':'\\u2009','thinsp':'\\u2009','thkap':'\\u2248','thksim':'\\u223C','THORN':'\\xDE','thorn':'\\xFE','tilde':'\\u02DC','Tilde':'\\u223C','TildeEqual':'\\u2243','TildeFullEqual':'\\u2245','TildeTilde':'\\u2248','timesbar':'\\u2A31','timesb':'\\u22A0','times':'\\xD7','timesd':'\\u2A30','tint':'\\u222D','toea':'\\u2928','topbot':'\\u2336','topcir':'\\u2AF1','top':'\\u22A4','Topf':'\\uD835\\uDD4B','topf':'\\uD835\\uDD65','topfork':'\\u2ADA','tosa':'\\u2929','tprime':'\\u2034','trade':'\\u2122','TRADE':'\\u2122','triangle':'\\u25B5','triangledown':'\\u25BF','triangleleft':'\\u25C3','trianglelefteq':'\\u22B4','triangleq':'\\u225C','triangleright':'\\u25B9','trianglerighteq':'\\u22B5','tridot':'\\u25EC','trie':'\\u225C','triminus':'\\u2A3A','TripleDot':'\\u20DB','triplus':'\\u2A39','trisb':'\\u29CD','tritime':'\\u2A3B','trpezium':'\\u23E2','Tscr':'\\uD835\\uDCAF','tscr':'\\uD835\\uDCC9','TScy':'\\u0426','tscy':'\\u0446','TSHcy':'\\u040B','tshcy':'\\u045B','Tstrok':'\\u0166','tstrok':'\\u0167','twixt':'\\u226C','twoheadleftarrow':'\\u219E','twoheadrightarrow':'\\u21A0','Uacute':'\\xDA','uacute':'\\xFA','uarr':'\\u2191','Uarr':'\\u219F','uArr':'\\u21D1','Uarrocir':'\\u2949','Ubrcy':'\\u040E','ubrcy':'\\u045E','Ubreve':'\\u016C','ubreve':'\\u016D','Ucirc':'\\xDB','ucirc':'\\xFB','Ucy':'\\u0423','ucy':'\\u0443','udarr':'\\u21C5','Udblac':'\\u0170','udblac':'\\u0171','udhar':'\\u296E','ufisht':'\\u297E','Ufr':'\\uD835\\uDD18','ufr':'\\uD835\\uDD32','Ugrave':'\\xD9','ugrave':'\\xF9','uHar':'\\u2963','uharl':'\\u21BF','uharr':'\\u21BE','uhblk':'\\u2580','ulcorn':'\\u231C','ulcorner':'\\u231C','ulcrop':'\\u230F','ultri':'\\u25F8','Umacr':'\\u016A','umacr':'\\u016B','uml':'\\xA8','UnderBar':'_','UnderBrace':'\\u23DF','UnderBracket':'\\u23B5','UnderParenthesis':'\\u23DD','Union':'\\u22C3','UnionPlus':'\\u228E','Uogon':'\\u0172','uogon':'\\u0173','Uopf':'\\uD835\\uDD4C','uopf':'\\uD835\\uDD66','UpArrowBar':'\\u2912','uparrow':'\\u2191','UpArrow':'\\u2191','Uparrow':'\\u21D1','UpArrowDownArrow':'\\u21C5','updownarrow':'\\u2195','UpDownArrow':'\\u2195','Updownarrow':'\\u21D5','UpEquilibrium':'\\u296E','upharpoonleft':'\\u21BF','upharpoonright':'\\u21BE','uplus':'\\u228E','UpperLeftArrow':'\\u2196','UpperRightArrow':'\\u2197','upsi':'\\u03C5','Upsi':'\\u03D2','upsih':'\\u03D2','Upsilon':'\\u03A5','upsilon':'\\u03C5','UpTeeArrow':'\\u21A5','UpTee':'\\u22A5','upuparrows':'\\u21C8','urcorn':'\\u231D','urcorner':'\\u231D','urcrop':'\\u230E','Uring':'\\u016E','uring':'\\u016F','urtri':'\\u25F9','Uscr':'\\uD835\\uDCB0','uscr':'\\uD835\\uDCCA','utdot':'\\u22F0','Utilde':'\\u0168','utilde':'\\u0169','utri':'\\u25B5','utrif':'\\u25B4','uuarr':'\\u21C8','Uuml':'\\xDC','uuml':'\\xFC','uwangle':'\\u29A7','vangrt':'\\u299C','varepsilon':'\\u03F5','varkappa':'\\u03F0','varnothing':'\\u2205','varphi':'\\u03D5','varpi':'\\u03D6','varpropto':'\\u221D','varr':'\\u2195','vArr':'\\u21D5','varrho':'\\u03F1','varsigma':'\\u03C2','varsubsetneq':'\\u228A\\uFE00','varsubsetneqq':'\\u2ACB\\uFE00','varsupsetneq':'\\u228B\\uFE00','varsupsetneqq':'\\u2ACC\\uFE00','vartheta':'\\u03D1','vartriangleleft':'\\u22B2','vartriangleright':'\\u22B3','vBar':'\\u2AE8','Vbar':'\\u2AEB','vBarv':'\\u2AE9','Vcy':'\\u0412','vcy':'\\u0432','vdash':'\\u22A2','vDash':'\\u22A8','Vdash':'\\u22A9','VDash':'\\u22AB','Vdashl':'\\u2AE6','veebar':'\\u22BB','vee':'\\u2228','Vee':'\\u22C1','veeeq':'\\u225A','vellip':'\\u22EE','verbar':'|','Verbar':'\\u2016','vert':'|','Vert':'\\u2016','VerticalBar':'\\u2223','VerticalLine':'|','VerticalSeparator':'\\u2758','VerticalTilde':'\\u2240','VeryThinSpace':'\\u200A','Vfr':'\\uD835\\uDD19','vfr':'\\uD835\\uDD33','vltri':'\\u22B2','vnsub':'\\u2282\\u20D2','vnsup':'\\u2283\\u20D2','Vopf':'\\uD835\\uDD4D','vopf':'\\uD835\\uDD67','vprop':'\\u221D','vrtri':'\\u22B3','Vscr':'\\uD835\\uDCB1','vscr':'\\uD835\\uDCCB','vsubnE':'\\u2ACB\\uFE00','vsubne':'\\u228A\\uFE00','vsupnE':'\\u2ACC\\uFE00','vsupne':'\\u228B\\uFE00','Vvdash':'\\u22AA','vzigzag':'\\u299A','Wcirc':'\\u0174','wcirc':'\\u0175','wedbar':'\\u2A5F','wedge':'\\u2227','Wedge':'\\u22C0','wedgeq':'\\u2259','weierp':'\\u2118','Wfr':'\\uD835\\uDD1A','wfr':'\\uD835\\uDD34','Wopf':'\\uD835\\uDD4E','wopf':'\\uD835\\uDD68','wp':'\\u2118','wr':'\\u2240','wreath':'\\u2240','Wscr':'\\uD835\\uDCB2','wscr':'\\uD835\\uDCCC','xcap':'\\u22C2','xcirc':'\\u25EF','xcup':'\\u22C3','xdtri':'\\u25BD','Xfr':'\\uD835\\uDD1B','xfr':'\\uD835\\uDD35','xharr':'\\u27F7','xhArr':'\\u27FA','Xi':'\\u039E','xi':'\\u03BE','xlarr':'\\u27F5','xlArr':'\\u27F8','xmap':'\\u27FC','xnis':'\\u22FB','xodot':'\\u2A00','Xopf':'\\uD835\\uDD4F','xopf':'\\uD835\\uDD69','xoplus':'\\u2A01','xotime':'\\u2A02','xrarr':'\\u27F6','xrArr':'\\u27F9','Xscr':'\\uD835\\uDCB3','xscr':'\\uD835\\uDCCD','xsqcup':'\\u2A06','xuplus':'\\u2A04','xutri':'\\u25B3','xvee':'\\u22C1','xwedge':'\\u22C0','Yacute':'\\xDD','yacute':'\\xFD','YAcy':'\\u042F','yacy':'\\u044F','Ycirc':'\\u0176','ycirc':'\\u0177','Ycy':'\\u042B','ycy':'\\u044B','yen':'\\xA5','Yfr':'\\uD835\\uDD1C','yfr':'\\uD835\\uDD36','YIcy':'\\u0407','yicy':'\\u0457','Yopf':'\\uD835\\uDD50','yopf':'\\uD835\\uDD6A','Yscr':'\\uD835\\uDCB4','yscr':'\\uD835\\uDCCE','YUcy':'\\u042E','yucy':'\\u044E','yuml':'\\xFF','Yuml':'\\u0178','Zacute':'\\u0179','zacute':'\\u017A','Zcaron':'\\u017D','zcaron':'\\u017E','Zcy':'\\u0417','zcy':'\\u0437','Zdot':'\\u017B','zdot':'\\u017C','zeetrf':'\\u2128','ZeroWidthSpace':'\\u200B','Zeta':'\\u0396','zeta':'\\u03B6','zfr':'\\uD835\\uDD37','Zfr':'\\u2128','ZHcy':'\\u0416','zhcy':'\\u0436','zigrarr':'\\u21DD','zopf':'\\uD835\\uDD6B','Zopf':'\\u2124','Zscr':'\\uD835\\uDCB5','zscr':'\\uD835\\uDCCF','zwj':'\\u200D','zwnj':'\\u200C'};\n\tvar decodeMapLegacy = {'Aacute':'\\xC1','aacute':'\\xE1','Acirc':'\\xC2','acirc':'\\xE2','acute':'\\xB4','AElig':'\\xC6','aelig':'\\xE6','Agrave':'\\xC0','agrave':'\\xE0','amp':'&','AMP':'&','Aring':'\\xC5','aring':'\\xE5','Atilde':'\\xC3','atilde':'\\xE3','Auml':'\\xC4','auml':'\\xE4','brvbar':'\\xA6','Ccedil':'\\xC7','ccedil':'\\xE7','cedil':'\\xB8','cent':'\\xA2','copy':'\\xA9','COPY':'\\xA9','curren':'\\xA4','deg':'\\xB0','divide':'\\xF7','Eacute':'\\xC9','eacute':'\\xE9','Ecirc':'\\xCA','ecirc':'\\xEA','Egrave':'\\xC8','egrave':'\\xE8','ETH':'\\xD0','eth':'\\xF0','Euml':'\\xCB','euml':'\\xEB','frac12':'\\xBD','frac14':'\\xBC','frac34':'\\xBE','gt':'>','GT':'>','Iacute':'\\xCD','iacute':'\\xED','Icirc':'\\xCE','icirc':'\\xEE','iexcl':'\\xA1','Igrave':'\\xCC','igrave':'\\xEC','iquest':'\\xBF','Iuml':'\\xCF','iuml':'\\xEF','laquo':'\\xAB','lt':'<','LT':'<','macr':'\\xAF','micro':'\\xB5','middot':'\\xB7','nbsp':'\\xA0','not':'\\xAC','Ntilde':'\\xD1','ntilde':'\\xF1','Oacute':'\\xD3','oacute':'\\xF3','Ocirc':'\\xD4','ocirc':'\\xF4','Ograve':'\\xD2','ograve':'\\xF2','ordf':'\\xAA','ordm':'\\xBA','Oslash':'\\xD8','oslash':'\\xF8','Otilde':'\\xD5','otilde':'\\xF5','Ouml':'\\xD6','ouml':'\\xF6','para':'\\xB6','plusmn':'\\xB1','pound':'\\xA3','quot':'\"','QUOT':'\"','raquo':'\\xBB','reg':'\\xAE','REG':'\\xAE','sect':'\\xA7','shy':'\\xAD','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','szlig':'\\xDF','THORN':'\\xDE','thorn':'\\xFE','times':'\\xD7','Uacute':'\\xDA','uacute':'\\xFA','Ucirc':'\\xDB','ucirc':'\\xFB','Ugrave':'\\xD9','ugrave':'\\xF9','uml':'\\xA8','Uuml':'\\xDC','uuml':'\\xFC','Yacute':'\\xDD','yacute':'\\xFD','yen':'\\xA5','yuml':'\\xFF'};\n\tvar decodeMapNumeric = {'0':'\\uFFFD','128':'\\u20AC','130':'\\u201A','131':'\\u0192','132':'\\u201E','133':'\\u2026','134':'\\u2020','135':'\\u2021','136':'\\u02C6','137':'\\u2030','138':'\\u0160','139':'\\u2039','140':'\\u0152','142':'\\u017D','145':'\\u2018','146':'\\u2019','147':'\\u201C','148':'\\u201D','149':'\\u2022','150':'\\u2013','151':'\\u2014','152':'\\u02DC','153':'\\u2122','154':'\\u0161','155':'\\u203A','156':'\\u0153','158':'\\u017E','159':'\\u0178'};\n\tvar invalidReferenceCodePoints = [1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65000,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar has = function(object, propertyName) {\n\t\treturn hasOwnProperty.call(object, propertyName);\n\t};\n\n\tvar contains = function(array, value) {\n\t\tvar index = -1;\n\t\tvar length = array.length;\n\t\twhile (++index < length) {\n\t\t\tif (array[index] == value) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\tvar merge = function(options, defaults) {\n\t\tif (!options) {\n\t\t\treturn defaults;\n\t\t}\n\t\tvar result = {};\n\t\tvar key;\n\t\tfor (key in defaults) {\n\t\t\t// A `hasOwnProperty` check is not needed here, since only recognized\n\t\t\t// option names are used anyway. Any others are ignored.\n\t\t\tresult[key] = has(options, key) ? options[key] : defaults[key];\n\t\t}\n\t\treturn result;\n\t};\n\n\t// Modified version of `ucs2encode`; see http://mths.be/punycode.\n\tvar codePointToSymbol = function(codePoint, strict) {\n\t\tvar output = '';\n\t\tif ((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF) {\n\t\t\t// See issue #4:\n\t\t\t// “Otherwise, if the number is in the range 0xD800 to 0xDFFF or is\n\t\t\t// greater than 0x10FFFF, then this is a parse error. Return a U+FFFD\n\t\t\t// REPLACEMENT CHARACTER.”\n\t\t\tif (strict) {\n\t\t\t\tparseError('character reference outside the permissible Unicode range');\n\t\t\t}\n\t\t\treturn '\\uFFFD';\n\t\t}\n\t\tif (has(decodeMapNumeric, codePoint)) {\n\t\t\tif (strict) {\n\t\t\t\tparseError('disallowed character reference');\n\t\t\t}\n\t\t\treturn decodeMapNumeric[codePoint];\n\t\t}\n\t\tif (strict && contains(invalidReferenceCodePoints, codePoint)) {\n\t\t\tparseError('disallowed character reference');\n\t\t}\n\t\tif (codePoint > 0xFFFF) {\n\t\t\tcodePoint -= 0x10000;\n\t\t\toutput += stringFromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);\n\t\t\tcodePoint = 0xDC00 | codePoint & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(codePoint);\n\t\treturn output;\n\t};\n\n\tvar hexEscape = function(symbol) {\n\t\treturn '&#x' + symbol.charCodeAt(0).toString(16).toUpperCase() + ';';\n\t};\n\n\tvar parseError = function(message) {\n\t\tthrow Error('Parse error: ' + message);\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar encode = function(string, options) {\n\t\toptions = merge(options, encode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidRawCodePoint.test(string)) {\n\t\t\tparseError('forbidden code point');\n\t\t}\n\t\tvar encodeEverything = options.encodeEverything;\n\t\tvar useNamedReferences = options.useNamedReferences;\n\t\tvar allowUnsafeSymbols = options.allowUnsafeSymbols;\n\t\tif (encodeEverything) {\n\t\t\t// Encode ASCII symbols.\n\t\t\tstring = string.replace(regexAsciiWhitelist, function(symbol) {\n\t\t\t\t// Use named references if requested & possible.\n\t\t\t\tif (useNamedReferences && has(encodeMap, symbol)) {\n\t\t\t\t\treturn '&' + encodeMap[symbol] + ';';\n\t\t\t\t}\n\t\t\t\treturn hexEscape(symbol);\n\t\t\t});\n\t\t\t// Shorten a few escapes that represent two symbols, of which at least one\n\t\t\t// is within the ASCII range.\n\t\t\tif (useNamedReferences) {\n\t\t\t\tstring = string\n\t\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;')\n\t\t\t\t\t.replace(/&#x66;&#x6A;/g, '&fjlig;');\n\t\t\t}\n\t\t\t// Encode non-ASCII symbols.\n\t\t\tif (useNamedReferences) {\n\t\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Note: any remaining non-ASCII symbols are handled outside of the `if`.\n\t\t} else if (useNamedReferences) {\n\t\t\t// Apply named character references.\n\t\t\t// Encode `<>\"'&` using named character references.\n\t\t\tif (!allowUnsafeSymbols) {\n\t\t\t\tstring = string.replace(regexEscape, function(string) {\n\t\t\t\t\treturn '&' + encodeMap[string] + ';'; // no need to check `has()` here\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Shorten escapes that represent two symbols, of which at least one is\n\t\t\t// `<>\"'&`.\n\t\t\tstring = string\n\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;');\n\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t});\n\t\t} else if (!allowUnsafeSymbols) {\n\t\t\t// Encode `<>\"'&` using hexadecimal escapes, now that they’re not handled\n\t\t\t// using named character references.\n\t\t\tstring = string.replace(regexEscape, hexEscape);\n\t\t}\n\t\treturn string\n\t\t\t// Encode astral symbols.\n\t\t\t.replace(regexAstralSymbols, function($0) {\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\tvar high = $0.charCodeAt(0);\n\t\t\t\tvar low = $0.charCodeAt(1);\n\t\t\t\tvar codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;\n\t\t\t\treturn '&#x' + codePoint.toString(16).toUpperCase() + ';';\n\t\t\t})\n\t\t\t// Encode any remaining BMP symbols that are not printable ASCII symbols\n\t\t\t// using a hexadecimal escape.\n\t\t\t.replace(regexBmpWhitelist, hexEscape);\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tencode.options = {\n\t\t'allowUnsafeSymbols': false,\n\t\t'encodeEverything': false,\n\t\t'strict': false,\n\t\t'useNamedReferences': false\n\t};\n\n\tvar decode = function(html, options) {\n\t\toptions = merge(options, decode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidEntity.test(html)) {\n\t\t\tparseError('malformed character reference');\n\t\t}\n\t\treturn html.replace(regexDecode, function($0, $1, $2, $3, $4, $5, $6, $7) {\n\t\t\tvar codePoint;\n\t\t\tvar semicolon;\n\t\t\tvar hexDigits;\n\t\t\tvar reference;\n\t\t\tvar next;\n\t\t\tif ($1) {\n\t\t\t\t// Decode decimal escapes, e.g. `&#119558;`.\n\t\t\t\tcodePoint = $1;\n\t\t\t\tsemicolon = $2;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\t\t\tif ($3) {\n\t\t\t\t// Decode hexadecimal escapes, e.g. `&#x1D306;`.\n\t\t\t\thexDigits = $3;\n\t\t\t\tsemicolon = $4;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(hexDigits, 16);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\t\t\tif ($5) {\n\t\t\t\t// Decode named character references with trailing `;`, e.g. `&copy;`.\n\t\t\t\treference = $5;\n\t\t\t\tif (has(decodeMap, reference)) {\n\t\t\t\t\treturn decodeMap[reference];\n\t\t\t\t} else {\n\t\t\t\t\t// Ambiguous ampersand; see http://mths.be/notes/ambiguous-ampersands.\n\t\t\t\t\tif (strict) {\n\t\t\t\t\t\tparseError(\n\t\t\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn $0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If we’re still here, it’s a legacy reference for sure. No need for an\n\t\t\t// extra `if` check.\n\t\t\t// Decode named character references without trailing `;`, e.g. `&amp`\n\t\t\t// This is only a parse error if it gets converted to `&`, or if it is\n\t\t\t// followed by `=` in an attribute context.\n\t\t\treference = $6;\n\t\t\tnext = $7;\n\t\t\tif (next && options.isAttributeValue) {\n\t\t\t\tif (strict && next == '=') {\n\t\t\t\t\tparseError('`&` did not start a character reference');\n\t\t\t\t}\n\t\t\t\treturn $0;\n\t\t\t} else {\n\t\t\t\tif (strict) {\n\t\t\t\t\tparseError(\n\t\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// Note: there is no need to check `has(decodeMapLegacy, reference)`.\n\t\t\t\treturn decodeMapLegacy[reference] + (next || '');\n\t\t\t}\n\t\t});\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tdecode.options = {\n\t\t'isAttributeValue': false,\n\t\t'strict': false\n\t};\n\n\tvar escape = function(string) {\n\t\treturn string.replace(regexEscape, function($0) {\n\t\t\t// Note: there is no need to check `has(escapeMap, $0)` here.\n\t\t\treturn escapeMap[$0];\n\t\t});\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar he = {\n\t\t'version': '0.5.0',\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'escape': escape,\n\t\t'unescape': decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn he;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = he;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in he) {\n\t\t\t\thas(he, key) && (freeExports[key] = he[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.he = he;\n\t}\n\n}(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],48:[function(require,module,exports){\n/** @license MIT License (c) copyright 2011-2013 original author or authors */\n\n/**\n * delay.js\n *\n * Helper that returns a promise that resolves after a delay.\n *\n * @author Brian Cavalier\n * @author John Hann\n */\n\n(function(define) {\ndefine(function(require) {\n\n\tvar when = require('./when');\n\n    /**\n\t * @deprecated Use when(value).delay(ms)\n     */\n    return function delay(msec, value) {\n\t\treturn when(value).delay(msec);\n    };\n\n});\n})(typeof define === 'function' && define.amd ? define : function (factory) { module.exports = factory(require); });\n\n\n\n},{\"./when\":66}],49:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function (require) {\n\n\tvar makePromise = require('./makePromise');\n\tvar Scheduler = require('./Scheduler');\n\tvar async = require('./env').asap;\n\n\treturn makePromise({\n\t\tscheduler: new Scheduler(async)\n\t});\n\n});\n})(typeof define === 'function' && define.amd ? define : function (factory) { module.exports = factory(require); });\n\n},{\"./Scheduler\":50,\"./env\":62,\"./makePromise\":64}],50:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\t// Credit to Twisol (https://github.com/Twisol) for suggesting\n\t// this type of extensible queue + trampoline approach for next-tick conflation.\n\n\t/**\n\t * Async task scheduler\n\t * @param {function} async function to schedule a single async function\n\t * @constructor\n\t */\n\tfunction Scheduler(async) {\n\t\tthis._async = async;\n\t\tthis._running = false;\n\n\t\tthis._queue = this;\n\t\tthis._queueLen = 0;\n\t\tthis._afterQueue = {};\n\t\tthis._afterQueueLen = 0;\n\n\t\tvar self = this;\n\t\tthis.drain = function() {\n\t\t\tself._drain();\n\t\t};\n\t}\n\n\t/**\n\t * Enqueue a task\n\t * @param {{ run:function }} task\n\t */\n\tScheduler.prototype.enqueue = function(task) {\n\t\tthis._queue[this._queueLen++] = task;\n\t\tthis.run();\n\t};\n\n\t/**\n\t * Enqueue a task to run after the main task queue\n\t * @param {{ run:function }} task\n\t */\n\tScheduler.prototype.afterQueue = function(task) {\n\t\tthis._afterQueue[this._afterQueueLen++] = task;\n\t\tthis.run();\n\t};\n\n\tScheduler.prototype.run = function() {\n\t\tif (!this._running) {\n\t\t\tthis._running = true;\n\t\t\tthis._async(this.drain);\n\t\t}\n\t};\n\n\t/**\n\t * Drain the handler queue entirely, and then the after queue\n\t */\n\tScheduler.prototype._drain = function() {\n\t\tvar i = 0;\n\t\tfor (; i < this._queueLen; ++i) {\n\t\t\tthis._queue[i].run();\n\t\t\tthis._queue[i] = void 0;\n\t\t}\n\n\t\tthis._queueLen = 0;\n\t\tthis._running = false;\n\n\t\tfor (i = 0; i < this._afterQueueLen; ++i) {\n\t\t\tthis._afterQueue[i].run();\n\t\t\tthis._afterQueue[i] = void 0;\n\t\t}\n\n\t\tthis._afterQueueLen = 0;\n\t};\n\n\treturn Scheduler;\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n},{}],51:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\t/**\n\t * Custom error type for promises rejected by promise.timeout\n\t * @param {string} message\n\t * @constructor\n\t */\n\tfunction TimeoutError (message) {\n\t\tError.call(this);\n\t\tthis.message = message;\n\t\tthis.name = TimeoutError.name;\n\t\tif (typeof Error.captureStackTrace === 'function') {\n\t\t\tError.captureStackTrace(this, TimeoutError);\n\t\t}\n\t}\n\n\tTimeoutError.prototype = Object.create(Error.prototype);\n\tTimeoutError.prototype.constructor = TimeoutError;\n\n\treturn TimeoutError;\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n},{}],52:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\tmakeApply.tryCatchResolve = tryCatchResolve;\n\n\treturn makeApply;\n\n\tfunction makeApply(Promise, call) {\n\t\tif(arguments.length < 2) {\n\t\t\tcall = tryCatchResolve;\n\t\t}\n\n\t\treturn apply;\n\n\t\tfunction apply(f, thisArg, args) {\n\t\t\tvar p = Promise._defer();\n\t\t\tvar l = args.length;\n\t\t\tvar params = new Array(l);\n\t\t\tcallAndResolve({ f:f, thisArg:thisArg, args:args, params:params, i:l-1, call:call }, p._handler);\n\n\t\t\treturn p;\n\t\t}\n\n\t\tfunction callAndResolve(c, h) {\n\t\t\tif(c.i < 0) {\n\t\t\t\treturn call(c.f, c.thisArg, c.params, h);\n\t\t\t}\n\n\t\t\tvar handler = Promise._handler(c.args[c.i]);\n\t\t\thandler.fold(callAndResolveNext, c, void 0, h);\n\t\t}\n\n\t\tfunction callAndResolveNext(c, x, h) {\n\t\t\tc.params[c.i] = x;\n\t\t\tc.i -= 1;\n\t\t\tcallAndResolve(c, h);\n\t\t}\n\t}\n\n\tfunction tryCatchResolve(f, thisArg, args, resolver) {\n\t\ttry {\n\t\t\tresolver.resolve(f.apply(thisArg, args));\n\t\t} catch(e) {\n\t\t\tresolver.reject(e);\n\t\t}\n\t}\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n\n\n},{}],53:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function(require) {\n\n\tvar state = require('../state');\n\tvar applier = require('../apply');\n\n\treturn function array(Promise) {\n\n\t\tvar applyFold = applier(Promise);\n\t\tvar toPromise = Promise.resolve;\n\t\tvar all = Promise.all;\n\n\t\tvar ar = Array.prototype.reduce;\n\t\tvar arr = Array.prototype.reduceRight;\n\t\tvar slice = Array.prototype.slice;\n\n\t\t// Additional array combinators\n\n\t\tPromise.any = any;\n\t\tPromise.some = some;\n\t\tPromise.settle = settle;\n\n\t\tPromise.map = map;\n\t\tPromise.filter = filter;\n\t\tPromise.reduce = reduce;\n\t\tPromise.reduceRight = reduceRight;\n\n\t\t/**\n\t\t * When this promise fulfills with an array, do\n\t\t * onFulfilled.apply(void 0, array)\n\t\t * @param {function} onFulfilled function to apply\n\t\t * @returns {Promise} promise for the result of applying onFulfilled\n\t\t */\n\t\tPromise.prototype.spread = function(onFulfilled) {\n\t\t\treturn this.then(all).then(function(array) {\n\t\t\t\treturn onFulfilled.apply(this, array);\n\t\t\t});\n\t\t};\n\n\t\treturn Promise;\n\n\t\t/**\n\t\t * One-winner competitive race.\n\t\t * Return a promise that will fulfill when one of the promises\n\t\t * in the input array fulfills, or will reject when all promises\n\t\t * have rejected.\n\t\t * @param {array} promises\n\t\t * @returns {Promise} promise for the first fulfilled value\n\t\t */\n\t\tfunction any(promises) {\n\t\t\tvar p = Promise._defer();\n\t\t\tvar resolver = p._handler;\n\t\t\tvar l = promises.length>>>0;\n\n\t\t\tvar pending = l;\n\t\t\tvar errors = [];\n\n\t\t\tfor (var h, x, i = 0; i < l; ++i) {\n\t\t\t\tx = promises[i];\n\t\t\t\tif(x === void 0 && !(i in promises)) {\n\t\t\t\t\t--pending;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\th = Promise._handler(x);\n\t\t\t\tif(h.state() > 0) {\n\t\t\t\t\tresolver.become(h);\n\t\t\t\t\tPromise._visitRemaining(promises, i, h);\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\th.visit(resolver, handleFulfill, handleReject);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(pending === 0) {\n\t\t\t\tresolver.reject(new RangeError('any(): array must not be empty'));\n\t\t\t}\n\n\t\t\treturn p;\n\n\t\t\tfunction handleFulfill(x) {\n\t\t\t\t/*jshint validthis:true*/\n\t\t\t\terrors = null;\n\t\t\t\tthis.resolve(x); // this === resolver\n\t\t\t}\n\n\t\t\tfunction handleReject(e) {\n\t\t\t\t/*jshint validthis:true*/\n\t\t\t\tif(this.resolved) { // this === resolver\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\terrors.push(e);\n\t\t\t\tif(--pending === 0) {\n\t\t\t\t\tthis.reject(errors);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * N-winner competitive race\n\t\t * Return a promise that will fulfill when n input promises have\n\t\t * fulfilled, or will reject when it becomes impossible for n\n\t\t * input promises to fulfill (ie when promises.length - n + 1\n\t\t * have rejected)\n\t\t * @param {array} promises\n\t\t * @param {number} n\n\t\t * @returns {Promise} promise for the earliest n fulfillment values\n\t\t *\n\t\t * @deprecated\n\t\t */\n\t\tfunction some(promises, n) {\n\t\t\t/*jshint maxcomplexity:7*/\n\t\t\tvar p = Promise._defer();\n\t\t\tvar resolver = p._handler;\n\n\t\t\tvar results = [];\n\t\t\tvar errors = [];\n\n\t\t\tvar l = promises.length>>>0;\n\t\t\tvar nFulfill = 0;\n\t\t\tvar nReject;\n\t\t\tvar x, i; // reused in both for() loops\n\n\t\t\t// First pass: count actual array items\n\t\t\tfor(i=0; i<l; ++i) {\n\t\t\t\tx = promises[i];\n\t\t\t\tif(x === void 0 && !(i in promises)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t++nFulfill;\n\t\t\t}\n\n\t\t\t// Compute actual goals\n\t\t\tn = Math.max(n, 0);\n\t\t\tnReject = (nFulfill - n + 1);\n\t\t\tnFulfill = Math.min(n, nFulfill);\n\n\t\t\tif(n > nFulfill) {\n\t\t\t\tresolver.reject(new RangeError('some(): array must contain at least '\n\t\t\t\t+ n + ' item(s), but had ' + nFulfill));\n\t\t\t} else if(nFulfill === 0) {\n\t\t\t\tresolver.resolve(results);\n\t\t\t}\n\n\t\t\t// Second pass: observe each array item, make progress toward goals\n\t\t\tfor(i=0; i<l; ++i) {\n\t\t\t\tx = promises[i];\n\t\t\t\tif(x === void 0 && !(i in promises)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tPromise._handler(x).visit(resolver, fulfill, reject, resolver.notify);\n\t\t\t}\n\n\t\t\treturn p;\n\n\t\t\tfunction fulfill(x) {\n\t\t\t\t/*jshint validthis:true*/\n\t\t\t\tif(this.resolved) { // this === resolver\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresults.push(x);\n\t\t\t\tif(--nFulfill === 0) {\n\t\t\t\t\terrors = null;\n\t\t\t\t\tthis.resolve(results);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction reject(e) {\n\t\t\t\t/*jshint validthis:true*/\n\t\t\t\tif(this.resolved) { // this === resolver\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\terrors.push(e);\n\t\t\t\tif(--nReject === 0) {\n\t\t\t\t\tresults = null;\n\t\t\t\t\tthis.reject(errors);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Apply f to the value of each promise in a list of promises\n\t\t * and return a new list containing the results.\n\t\t * @param {array} promises\n\t\t * @param {function(x:*, index:Number):*} f mapping function\n\t\t * @returns {Promise}\n\t\t */\n\t\tfunction map(promises, f) {\n\t\t\treturn Promise._traverse(f, promises);\n\t\t}\n\n\t\t/**\n\t\t * Filter the provided array of promises using the provided predicate.  Input may\n\t\t * contain promises and values\n\t\t * @param {Array} promises array of promises and values\n\t\t * @param {function(x:*, index:Number):boolean} predicate filtering predicate.\n\t\t *  Must return truthy (or promise for truthy) for items to retain.\n\t\t * @returns {Promise} promise that will fulfill with an array containing all items\n\t\t *  for which predicate returned truthy.\n\t\t */\n\t\tfunction filter(promises, predicate) {\n\t\t\tvar a = slice.call(promises);\n\t\t\treturn Promise._traverse(predicate, a).then(function(keep) {\n\t\t\t\treturn filterSync(a, keep);\n\t\t\t});\n\t\t}\n\n\t\tfunction filterSync(promises, keep) {\n\t\t\t// Safe because we know all promises have fulfilled if we've made it this far\n\t\t\tvar l = keep.length;\n\t\t\tvar filtered = new Array(l);\n\t\t\tfor(var i=0, j=0; i<l; ++i) {\n\t\t\t\tif(keep[i]) {\n\t\t\t\t\tfiltered[j++] = Promise._handler(promises[i]).value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfiltered.length = j;\n\t\t\treturn filtered;\n\n\t\t}\n\n\t\t/**\n\t\t * Return a promise that will always fulfill with an array containing\n\t\t * the outcome states of all input promises.  The returned promise\n\t\t * will never reject.\n\t\t * @param {Array} promises\n\t\t * @returns {Promise} promise for array of settled state descriptors\n\t\t */\n\t\tfunction settle(promises) {\n\t\t\treturn all(promises.map(settleOne));\n\t\t}\n\n\t\tfunction settleOne(p) {\n\t\t\tvar h = Promise._handler(p);\n\t\t\tif(h.state() === 0) {\n\t\t\t\treturn toPromise(p).then(state.fulfilled, state.rejected);\n\t\t\t}\n\n\t\t\th._unreport();\n\t\t\treturn state.inspect(h);\n\t\t}\n\n\t\t/**\n\t\t * Traditional reduce function, similar to `Array.prototype.reduce()`, but\n\t\t * input may contain promises and/or values, and reduceFunc\n\t\t * may return either a value or a promise, *and* initialValue may\n\t\t * be a promise for the starting value.\n\t\t * @param {Array|Promise} promises array or promise for an array of anything,\n\t\t *      may contain a mix of promises and values.\n\t\t * @param {function(accumulated:*, x:*, index:Number):*} f reduce function\n\t\t * @returns {Promise} that will resolve to the final reduced value\n\t\t */\n\t\tfunction reduce(promises, f /*, initialValue */) {\n\t\t\treturn arguments.length > 2 ? ar.call(promises, liftCombine(f), arguments[2])\n\t\t\t\t\t: ar.call(promises, liftCombine(f));\n\t\t}\n\n\t\t/**\n\t\t * Traditional reduce function, similar to `Array.prototype.reduceRight()`, but\n\t\t * input may contain promises and/or values, and reduceFunc\n\t\t * may return either a value or a promise, *and* initialValue may\n\t\t * be a promise for the starting value.\n\t\t * @param {Array|Promise} promises array or promise for an array of anything,\n\t\t *      may contain a mix of promises and values.\n\t\t * @param {function(accumulated:*, x:*, index:Number):*} f reduce function\n\t\t * @returns {Promise} that will resolve to the final reduced value\n\t\t */\n\t\tfunction reduceRight(promises, f /*, initialValue */) {\n\t\t\treturn arguments.length > 2 ? arr.call(promises, liftCombine(f), arguments[2])\n\t\t\t\t\t: arr.call(promises, liftCombine(f));\n\t\t}\n\n\t\tfunction liftCombine(f) {\n\t\t\treturn function(z, x, i) {\n\t\t\t\treturn applyFold(f, void 0, [z,x,i]);\n\t\t\t};\n\t\t}\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n\n},{\"../apply\":52,\"../state\":65}],54:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\treturn function flow(Promise) {\n\n\t\tvar resolve = Promise.resolve;\n\t\tvar reject = Promise.reject;\n\t\tvar origCatch = Promise.prototype['catch'];\n\n\t\t/**\n\t\t * Handle the ultimate fulfillment value or rejection reason, and assume\n\t\t * responsibility for all errors.  If an error propagates out of result\n\t\t * or handleFatalError, it will be rethrown to the host, resulting in a\n\t\t * loud stack track on most platforms and a crash on some.\n\t\t * @param {function?} onResult\n\t\t * @param {function?} onError\n\t\t * @returns {undefined}\n\t\t */\n\t\tPromise.prototype.done = function(onResult, onError) {\n\t\t\tthis._handler.visit(this._handler.receiver, onResult, onError);\n\t\t};\n\n\t\t/**\n\t\t * Add Error-type and predicate matching to catch.  Examples:\n\t\t * promise.catch(TypeError, handleTypeError)\n\t\t *   .catch(predicate, handleMatchedErrors)\n\t\t *   .catch(handleRemainingErrors)\n\t\t * @param onRejected\n\t\t * @returns {*}\n\t\t */\n\t\tPromise.prototype['catch'] = Promise.prototype.otherwise = function(onRejected) {\n\t\t\tif (arguments.length < 2) {\n\t\t\t\treturn origCatch.call(this, onRejected);\n\t\t\t}\n\n\t\t\tif(typeof onRejected !== 'function') {\n\t\t\t\treturn this.ensure(rejectInvalidPredicate);\n\t\t\t}\n\n\t\t\treturn origCatch.call(this, createCatchFilter(arguments[1], onRejected));\n\t\t};\n\n\t\t/**\n\t\t * Wraps the provided catch handler, so that it will only be called\n\t\t * if the predicate evaluates truthy\n\t\t * @param {?function} handler\n\t\t * @param {function} predicate\n\t\t * @returns {function} conditional catch handler\n\t\t */\n\t\tfunction createCatchFilter(handler, predicate) {\n\t\t\treturn function(e) {\n\t\t\t\treturn evaluatePredicate(e, predicate)\n\t\t\t\t\t? handler.call(this, e)\n\t\t\t\t\t: reject(e);\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Ensures that onFulfilledOrRejected will be called regardless of whether\n\t\t * this promise is fulfilled or rejected.  onFulfilledOrRejected WILL NOT\n\t\t * receive the promises' value or reason.  Any returned value will be disregarded.\n\t\t * onFulfilledOrRejected may throw or return a rejected promise to signal\n\t\t * an additional error.\n\t\t * @param {function} handler handler to be called regardless of\n\t\t *  fulfillment or rejection\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype['finally'] = Promise.prototype.ensure = function(handler) {\n\t\t\tif(typeof handler !== 'function') {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\treturn this.then(function(x) {\n\t\t\t\treturn runSideEffect(handler, this, identity, x);\n\t\t\t}, function(e) {\n\t\t\t\treturn runSideEffect(handler, this, reject, e);\n\t\t\t});\n\t\t};\n\n\t\tfunction runSideEffect (handler, thisArg, propagate, value) {\n\t\t\tvar result = handler.call(thisArg);\n\t\t\treturn maybeThenable(result)\n\t\t\t\t? propagateValue(result, propagate, value)\n\t\t\t\t: propagate(value);\n\t\t}\n\n\t\tfunction propagateValue (result, propagate, x) {\n\t\t\treturn resolve(result).then(function () {\n\t\t\t\treturn propagate(x);\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Recover from a failure by returning a defaultValue.  If defaultValue\n\t\t * is a promise, it's fulfillment value will be used.  If defaultValue is\n\t\t * a promise that rejects, the returned promise will reject with the\n\t\t * same reason.\n\t\t * @param {*} defaultValue\n\t\t * @returns {Promise} new promise\n\t\t */\n\t\tPromise.prototype['else'] = Promise.prototype.orElse = function(defaultValue) {\n\t\t\treturn this.then(void 0, function() {\n\t\t\t\treturn defaultValue;\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Shortcut for .then(function() { return value; })\n\t\t * @param  {*} value\n\t\t * @return {Promise} a promise that:\n\t\t *  - is fulfilled if value is not a promise, or\n\t\t *  - if value is a promise, will fulfill with its value, or reject\n\t\t *    with its reason.\n\t\t */\n\t\tPromise.prototype['yield'] = function(value) {\n\t\t\treturn this.then(function() {\n\t\t\t\treturn value;\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Runs a side effect when this promise fulfills, without changing the\n\t\t * fulfillment value.\n\t\t * @param {function} onFulfilledSideEffect\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype.tap = function(onFulfilledSideEffect) {\n\t\t\treturn this.then(onFulfilledSideEffect)['yield'](this);\n\t\t};\n\n\t\treturn Promise;\n\t};\n\n\tfunction rejectInvalidPredicate() {\n\t\tthrow new TypeError('catch predicate must be a function');\n\t}\n\n\tfunction evaluatePredicate(e, predicate) {\n\t\treturn isError(predicate) ? e instanceof predicate : predicate(e);\n\t}\n\n\tfunction isError(predicate) {\n\t\treturn predicate === Error\n\t\t\t|| (predicate != null && predicate.prototype instanceof Error);\n\t}\n\n\tfunction maybeThenable(x) {\n\t\treturn (typeof x === 'object' || typeof x === 'function') && x !== null;\n\t}\n\n\tfunction identity(x) {\n\t\treturn x;\n\t}\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n},{}],55:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n/** @author Jeff Escalante */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\treturn function fold(Promise) {\n\n\t\tPromise.prototype.fold = function(f, z) {\n\t\t\tvar promise = this._beget();\n\n\t\t\tthis._handler.fold(function(z, x, to) {\n\t\t\t\tPromise._handler(z).fold(function(x, z, to) {\n\t\t\t\t\tto.resolve(f.call(this, z, x));\n\t\t\t\t}, x, this, to);\n\t\t\t}, z, promise._handler.receiver, promise._handler);\n\n\t\t\treturn promise;\n\t\t};\n\n\t\treturn Promise;\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n},{}],56:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function(require) {\n\n\tvar inspect = require('../state').inspect;\n\n\treturn function inspection(Promise) {\n\n\t\tPromise.prototype.inspect = function() {\n\t\t\treturn inspect(Promise._handler(this));\n\t\t};\n\n\t\treturn Promise;\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n\n},{\"../state\":65}],57:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\treturn function generate(Promise) {\n\n\t\tvar resolve = Promise.resolve;\n\n\t\tPromise.iterate = iterate;\n\t\tPromise.unfold = unfold;\n\n\t\treturn Promise;\n\n\t\t/**\n\t\t * @deprecated Use github.com/cujojs/most streams and most.iterate\n\t\t * Generate a (potentially infinite) stream of promised values:\n\t\t * x, f(x), f(f(x)), etc. until condition(x) returns true\n\t\t * @param {function} f function to generate a new x from the previous x\n\t\t * @param {function} condition function that, given the current x, returns\n\t\t *  truthy when the iterate should stop\n\t\t * @param {function} handler function to handle the value produced by f\n\t\t * @param {*|Promise} x starting value, may be a promise\n\t\t * @return {Promise} the result of the last call to f before\n\t\t *  condition returns true\n\t\t */\n\t\tfunction iterate(f, condition, handler, x) {\n\t\t\treturn unfold(function(x) {\n\t\t\t\treturn [x, f(x)];\n\t\t\t}, condition, handler, x);\n\t\t}\n\n\t\t/**\n\t\t * @deprecated Use github.com/cujojs/most streams and most.unfold\n\t\t * Generate a (potentially infinite) stream of promised values\n\t\t * by applying handler(generator(seed)) iteratively until\n\t\t * condition(seed) returns true.\n\t\t * @param {function} unspool function that generates a [value, newSeed]\n\t\t *  given a seed.\n\t\t * @param {function} condition function that, given the current seed, returns\n\t\t *  truthy when the unfold should stop\n\t\t * @param {function} handler function to handle the value produced by unspool\n\t\t * @param x {*|Promise} starting value, may be a promise\n\t\t * @return {Promise} the result of the last value produced by unspool before\n\t\t *  condition returns true\n\t\t */\n\t\tfunction unfold(unspool, condition, handler, x) {\n\t\t\treturn resolve(x).then(function(seed) {\n\t\t\t\treturn resolve(condition(seed)).then(function(done) {\n\t\t\t\t\treturn done ? seed : resolve(unspool(seed)).spread(next);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tfunction next(item, newSeed) {\n\t\t\t\treturn resolve(handler(item)).then(function() {\n\t\t\t\t\treturn unfold(unspool, condition, handler, newSeed);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n},{}],58:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\treturn function progress(Promise) {\n\n\t\t/**\n\t\t * @deprecated\n\t\t * Register a progress handler for this promise\n\t\t * @param {function} onProgress\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype.progress = function(onProgress) {\n\t\t\treturn this.then(void 0, void 0, onProgress);\n\t\t};\n\n\t\treturn Promise;\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n},{}],59:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function(require) {\n\n\tvar env = require('../env');\n\tvar TimeoutError = require('../TimeoutError');\n\n\tfunction setTimeout(f, ms, x, y) {\n\t\treturn env.setTimer(function() {\n\t\t\tf(x, y, ms);\n\t\t}, ms);\n\t}\n\n\treturn function timed(Promise) {\n\t\t/**\n\t\t * Return a new promise whose fulfillment value is revealed only\n\t\t * after ms milliseconds\n\t\t * @param {number} ms milliseconds\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype.delay = function(ms) {\n\t\t\tvar p = this._beget();\n\t\t\tthis._handler.fold(handleDelay, ms, void 0, p._handler);\n\t\t\treturn p;\n\t\t};\n\n\t\tfunction handleDelay(ms, x, h) {\n\t\t\tsetTimeout(resolveDelay, ms, x, h);\n\t\t}\n\n\t\tfunction resolveDelay(x, h) {\n\t\t\th.resolve(x);\n\t\t}\n\n\t\t/**\n\t\t * Return a new promise that rejects after ms milliseconds unless\n\t\t * this promise fulfills earlier, in which case the returned promise\n\t\t * fulfills with the same value.\n\t\t * @param {number} ms milliseconds\n\t\t * @param {Error|*=} reason optional rejection reason to use, defaults\n\t\t *   to a TimeoutError if not provided\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype.timeout = function(ms, reason) {\n\t\t\tvar p = this._beget();\n\t\t\tvar h = p._handler;\n\n\t\t\tvar t = setTimeout(onTimeout, ms, reason, p._handler);\n\n\t\t\tthis._handler.visit(h,\n\t\t\t\tfunction onFulfill(x) {\n\t\t\t\t\tenv.clearTimer(t);\n\t\t\t\t\tthis.resolve(x); // this = h\n\t\t\t\t},\n\t\t\t\tfunction onReject(x) {\n\t\t\t\t\tenv.clearTimer(t);\n\t\t\t\t\tthis.reject(x); // this = h\n\t\t\t\t},\n\t\t\t\th.notify);\n\n\t\t\treturn p;\n\t\t};\n\n\t\tfunction onTimeout(reason, h, ms) {\n\t\t\tvar e = typeof reason === 'undefined'\n\t\t\t\t? new TimeoutError('timed out after ' + ms + 'ms')\n\t\t\t\t: reason;\n\t\t\th.reject(e);\n\t\t}\n\n\t\treturn Promise;\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n\n},{\"../TimeoutError\":51,\"../env\":62}],60:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function(require) {\n\n\tvar setTimer = require('../env').setTimer;\n\tvar format = require('../format');\n\n\treturn function unhandledRejection(Promise) {\n\n\t\tvar logError = noop;\n\t\tvar logInfo = noop;\n\t\tvar localConsole;\n\n\t\tif(typeof console !== 'undefined') {\n\t\t\t// Alias console to prevent things like uglify's drop_console option from\n\t\t\t// removing console.log/error. Unhandled rejections fall into the same\n\t\t\t// category as uncaught exceptions, and build tools shouldn't silence them.\n\t\t\tlocalConsole = console;\n\t\t\tlogError = typeof localConsole.error !== 'undefined'\n\t\t\t\t? function (e) { localConsole.error(e); }\n\t\t\t\t: function (e) { localConsole.log(e); };\n\n\t\t\tlogInfo = typeof localConsole.info !== 'undefined'\n\t\t\t\t? function (e) { localConsole.info(e); }\n\t\t\t\t: function (e) { localConsole.log(e); };\n\t\t}\n\n\t\tPromise.onPotentiallyUnhandledRejection = function(rejection) {\n\t\t\tenqueue(report, rejection);\n\t\t};\n\n\t\tPromise.onPotentiallyUnhandledRejectionHandled = function(rejection) {\n\t\t\tenqueue(unreport, rejection);\n\t\t};\n\n\t\tPromise.onFatalRejection = function(rejection) {\n\t\t\tenqueue(throwit, rejection.value);\n\t\t};\n\n\t\tvar tasks = [];\n\t\tvar reported = [];\n\t\tvar running = null;\n\n\t\tfunction report(r) {\n\t\t\tif(!r.handled) {\n\t\t\t\treported.push(r);\n\t\t\t\tlogError('Potentially unhandled rejection [' + r.id + '] ' + format.formatError(r.value));\n\t\t\t}\n\t\t}\n\n\t\tfunction unreport(r) {\n\t\t\tvar i = reported.indexOf(r);\n\t\t\tif(i >= 0) {\n\t\t\t\treported.splice(i, 1);\n\t\t\t\tlogInfo('Handled previous rejection [' + r.id + '] ' + format.formatObject(r.value));\n\t\t\t}\n\t\t}\n\n\t\tfunction enqueue(f, x) {\n\t\t\ttasks.push(f, x);\n\t\t\tif(running === null) {\n\t\t\t\trunning = setTimer(flush, 0);\n\t\t\t}\n\t\t}\n\n\t\tfunction flush() {\n\t\t\trunning = null;\n\t\t\twhile(tasks.length > 0) {\n\t\t\t\ttasks.shift()(tasks.shift());\n\t\t\t}\n\t\t}\n\n\t\treturn Promise;\n\t};\n\n\tfunction throwit(e) {\n\t\tthrow e;\n\t}\n\n\tfunction noop() {}\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n\n},{\"../env\":62,\"../format\":63}],61:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\treturn function addWith(Promise) {\n\t\t/**\n\t\t * Returns a promise whose handlers will be called with `this` set to\n\t\t * the supplied receiver.  Subsequent promises derived from the\n\t\t * returned promise will also have their handlers called with receiver\n\t\t * as `this`. Calling `with` with undefined or no arguments will return\n\t\t * a promise whose handlers will again be called in the usual Promises/A+\n\t\t * way (no `this`) thus safely undoing any previous `with` in the\n\t\t * promise chain.\n\t\t *\n\t\t * WARNING: Promises returned from `with`/`withThis` are NOT Promises/A+\n\t\t * compliant, specifically violating 2.2.5 (http://promisesaplus.com/#point-41)\n\t\t *\n\t\t * @param {object} receiver `this` value for all handlers attached to\n\t\t *  the returned promise.\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype['with'] = Promise.prototype.withThis = function(receiver) {\n\t\t\tvar p = this._beget();\n\t\t\tvar child = p._handler;\n\t\t\tchild.receiver = receiver;\n\t\t\tthis._handler.chain(child, receiver);\n\t\t\treturn p;\n\t\t};\n\n\t\treturn Promise;\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n\n},{}],62:[function(require,module,exports){\n(function (process){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n/*global process,document,setTimeout,clearTimeout,MutationObserver,WebKitMutationObserver*/\n(function(define) { 'use strict';\ndefine(function(require) {\n\t/*jshint maxcomplexity:6*/\n\n\t// Sniff \"best\" async scheduling option\n\t// Prefer process.nextTick or MutationObserver, then check for\n\t// setTimeout, and finally vertx, since its the only env that doesn't\n\t// have setTimeout\n\n\tvar MutationObs;\n\tvar capturedSetTimeout = typeof setTimeout !== 'undefined' && setTimeout;\n\n\t// Default env\n\tvar setTimer = function(f, ms) { return setTimeout(f, ms); };\n\tvar clearTimer = function(t) { return clearTimeout(t); };\n\tvar asap = function (f) { return capturedSetTimeout(f, 0); };\n\n\t// Detect specific env\n\tif (isNode()) { // Node\n\t\tasap = function (f) { return process.nextTick(f); };\n\n\t} else if (MutationObs = hasMutationObserver()) { // Modern browser\n\t\tasap = initMutationObserver(MutationObs);\n\n\t} else if (!capturedSetTimeout) { // vert.x\n\t\tvar vertxRequire = require;\n\t\tvar vertx = vertxRequire('vertx');\n\t\tsetTimer = function (f, ms) { return vertx.setTimer(ms, f); };\n\t\tclearTimer = vertx.cancelTimer;\n\t\tasap = vertx.runOnLoop || vertx.runOnContext;\n\t}\n\n\treturn {\n\t\tsetTimer: setTimer,\n\t\tclearTimer: clearTimer,\n\t\tasap: asap\n\t};\n\n\tfunction isNode () {\n\t\treturn typeof process !== 'undefined' &&\n\t\t\tObject.prototype.toString.call(process) === '[object process]';\n\t}\n\n\tfunction hasMutationObserver () {\n\t\treturn (typeof MutationObserver === 'function' && MutationObserver) ||\n\t\t\t(typeof WebKitMutationObserver === 'function' && WebKitMutationObserver);\n\t}\n\n\tfunction initMutationObserver(MutationObserver) {\n\t\tvar scheduled;\n\t\tvar node = document.createTextNode('');\n\t\tvar o = new MutationObserver(run);\n\t\to.observe(node, { characterData: true });\n\n\t\tfunction run() {\n\t\t\tvar f = scheduled;\n\t\t\tscheduled = void 0;\n\t\t\tf();\n\t\t}\n\n\t\tvar i = 0;\n\t\treturn function (f) {\n\t\t\tscheduled = f;\n\t\t\tnode.data = (i ^= 1);\n\t\t};\n\t}\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n\n}).call(this,require('_process'))\n\n},{\"_process\":26}],63:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\treturn {\n\t\tformatError: formatError,\n\t\tformatObject: formatObject,\n\t\ttryStringify: tryStringify\n\t};\n\n\t/**\n\t * Format an error into a string.  If e is an Error and has a stack property,\n\t * it's returned.  Otherwise, e is formatted using formatObject, with a\n\t * warning added about e not being a proper Error.\n\t * @param {*} e\n\t * @returns {String} formatted string, suitable for output to developers\n\t */\n\tfunction formatError(e) {\n\t\tvar s = typeof e === 'object' && e !== null && e.stack ? e.stack : formatObject(e);\n\t\treturn e instanceof Error ? s : s + ' (WARNING: non-Error used)';\n\t}\n\n\t/**\n\t * Format an object, detecting \"plain\" objects and running them through\n\t * JSON.stringify if possible.\n\t * @param {Object} o\n\t * @returns {string}\n\t */\n\tfunction formatObject(o) {\n\t\tvar s = String(o);\n\t\tif(s === '[object Object]' && typeof JSON !== 'undefined') {\n\t\t\ts = tryStringify(o, s);\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t * Try to return the result of JSON.stringify(x).  If that fails, return\n\t * defaultValue\n\t * @param {*} x\n\t * @param {*} defaultValue\n\t * @returns {String|*} JSON.stringify(x) or defaultValue\n\t */\n\tfunction tryStringify(x, defaultValue) {\n\t\ttry {\n\t\t\treturn JSON.stringify(x);\n\t\t} catch(e) {\n\t\t\treturn defaultValue;\n\t\t}\n\t}\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n},{}],64:[function(require,module,exports){\n(function (process){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\treturn function makePromise(environment) {\n\n\t\tvar tasks = environment.scheduler;\n\t\tvar emitRejection = initEmitRejection();\n\n\t\tvar objectCreate = Object.create ||\n\t\t\tfunction(proto) {\n\t\t\t\tfunction Child() {}\n\t\t\t\tChild.prototype = proto;\n\t\t\t\treturn new Child();\n\t\t\t};\n\n\t\t/**\n\t\t * Create a promise whose fate is determined by resolver\n\t\t * @constructor\n\t\t * @returns {Promise} promise\n\t\t * @name Promise\n\t\t */\n\t\tfunction Promise(resolver, handler) {\n\t\t\tthis._handler = resolver === Handler ? handler : init(resolver);\n\t\t}\n\n\t\t/**\n\t\t * Run the supplied resolver\n\t\t * @param resolver\n\t\t * @returns {Pending}\n\t\t */\n\t\tfunction init(resolver) {\n\t\t\tvar handler = new Pending();\n\n\t\t\ttry {\n\t\t\t\tresolver(promiseResolve, promiseReject, promiseNotify);\n\t\t\t} catch (e) {\n\t\t\t\tpromiseReject(e);\n\t\t\t}\n\n\t\t\treturn handler;\n\n\t\t\t/**\n\t\t\t * Transition from pre-resolution state to post-resolution state, notifying\n\t\t\t * all listeners of the ultimate fulfillment or rejection\n\t\t\t * @param {*} x resolution value\n\t\t\t */\n\t\t\tfunction promiseResolve (x) {\n\t\t\t\thandler.resolve(x);\n\t\t\t}\n\t\t\t/**\n\t\t\t * Reject this promise with reason, which will be used verbatim\n\t\t\t * @param {Error|*} reason rejection reason, strongly suggested\n\t\t\t *   to be an Error type\n\t\t\t */\n\t\t\tfunction promiseReject (reason) {\n\t\t\t\thandler.reject(reason);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @deprecated\n\t\t\t * Issue a progress event, notifying all progress listeners\n\t\t\t * @param {*} x progress event payload to pass to all listeners\n\t\t\t */\n\t\t\tfunction promiseNotify (x) {\n\t\t\t\thandler.notify(x);\n\t\t\t}\n\t\t}\n\n\t\t// Creation\n\n\t\tPromise.resolve = resolve;\n\t\tPromise.reject = reject;\n\t\tPromise.never = never;\n\n\t\tPromise._defer = defer;\n\t\tPromise._handler = getHandler;\n\n\t\t/**\n\t\t * Returns a trusted promise. If x is already a trusted promise, it is\n\t\t * returned, otherwise returns a new trusted Promise which follows x.\n\t\t * @param  {*} x\n\t\t * @return {Promise} promise\n\t\t */\n\t\tfunction resolve(x) {\n\t\t\treturn isPromise(x) ? x\n\t\t\t\t: new Promise(Handler, new Async(getHandler(x)));\n\t\t}\n\n\t\t/**\n\t\t * Return a reject promise with x as its reason (x is used verbatim)\n\t\t * @param {*} x\n\t\t * @returns {Promise} rejected promise\n\t\t */\n\t\tfunction reject(x) {\n\t\t\treturn new Promise(Handler, new Async(new Rejected(x)));\n\t\t}\n\n\t\t/**\n\t\t * Return a promise that remains pending forever\n\t\t * @returns {Promise} forever-pending promise.\n\t\t */\n\t\tfunction never() {\n\t\t\treturn foreverPendingPromise; // Should be frozen\n\t\t}\n\n\t\t/**\n\t\t * Creates an internal {promise, resolver} pair\n\t\t * @private\n\t\t * @returns {Promise}\n\t\t */\n\t\tfunction defer() {\n\t\t\treturn new Promise(Handler, new Pending());\n\t\t}\n\n\t\t// Transformation and flow control\n\n\t\t/**\n\t\t * Transform this promise's fulfillment value, returning a new Promise\n\t\t * for the transformed result.  If the promise cannot be fulfilled, onRejected\n\t\t * is called with the reason.  onProgress *may* be called with updates toward\n\t\t * this promise's fulfillment.\n\t\t * @param {function=} onFulfilled fulfillment handler\n\t\t * @param {function=} onRejected rejection handler\n\t\t * @param {function=} onProgress @deprecated progress handler\n\t\t * @return {Promise} new promise\n\t\t */\n\t\tPromise.prototype.then = function(onFulfilled, onRejected, onProgress) {\n\t\t\tvar parent = this._handler;\n\t\t\tvar state = parent.join().state();\n\n\t\t\tif ((typeof onFulfilled !== 'function' && state > 0) ||\n\t\t\t\t(typeof onRejected !== 'function' && state < 0)) {\n\t\t\t\t// Short circuit: value will not change, simply share handler\n\t\t\t\treturn new this.constructor(Handler, parent);\n\t\t\t}\n\n\t\t\tvar p = this._beget();\n\t\t\tvar child = p._handler;\n\n\t\t\tparent.chain(child, parent.receiver, onFulfilled, onRejected, onProgress);\n\n\t\t\treturn p;\n\t\t};\n\n\t\t/**\n\t\t * If this promise cannot be fulfilled due to an error, call onRejected to\n\t\t * handle the error. Shortcut for .then(undefined, onRejected)\n\t\t * @param {function?} onRejected\n\t\t * @return {Promise}\n\t\t */\n\t\tPromise.prototype['catch'] = function(onRejected) {\n\t\t\treturn this.then(void 0, onRejected);\n\t\t};\n\n\t\t/**\n\t\t * Creates a new, pending promise of the same type as this promise\n\t\t * @private\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype._beget = function() {\n\t\t\treturn begetFrom(this._handler, this.constructor);\n\t\t};\n\n\t\tfunction begetFrom(parent, Promise) {\n\t\t\tvar child = new Pending(parent.receiver, parent.join().context);\n\t\t\treturn new Promise(Handler, child);\n\t\t}\n\n\t\t// Array combinators\n\n\t\tPromise.all = all;\n\t\tPromise.race = race;\n\t\tPromise._traverse = traverse;\n\n\t\t/**\n\t\t * Return a promise that will fulfill when all promises in the\n\t\t * input array have fulfilled, or will reject when one of the\n\t\t * promises rejects.\n\t\t * @param {array} promises array of promises\n\t\t * @returns {Promise} promise for array of fulfillment values\n\t\t */\n\t\tfunction all(promises) {\n\t\t\treturn traverseWith(snd, null, promises);\n\t\t}\n\n\t\t/**\n\t\t * Array<Promise<X>> -> Promise<Array<f(X)>>\n\t\t * @private\n\t\t * @param {function} f function to apply to each promise's value\n\t\t * @param {Array} promises array of promises\n\t\t * @returns {Promise} promise for transformed values\n\t\t */\n\t\tfunction traverse(f, promises) {\n\t\t\treturn traverseWith(tryCatch2, f, promises);\n\t\t}\n\n\t\tfunction traverseWith(tryMap, f, promises) {\n\t\t\tvar handler = typeof f === 'function' ? mapAt : settleAt;\n\n\t\t\tvar resolver = new Pending();\n\t\t\tvar pending = promises.length >>> 0;\n\t\t\tvar results = new Array(pending);\n\n\t\t\tfor (var i = 0, x; i < promises.length && !resolver.resolved; ++i) {\n\t\t\t\tx = promises[i];\n\n\t\t\t\tif (x === void 0 && !(i in promises)) {\n\t\t\t\t\t--pending;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\ttraverseAt(promises, handler, i, x, resolver);\n\t\t\t}\n\n\t\t\tif(pending === 0) {\n\t\t\t\tresolver.become(new Fulfilled(results));\n\t\t\t}\n\n\t\t\treturn new Promise(Handler, resolver);\n\n\t\t\tfunction mapAt(i, x, resolver) {\n\t\t\t\tif(!resolver.resolved) {\n\t\t\t\t\ttraverseAt(promises, settleAt, i, tryMap(f, x, i), resolver);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction settleAt(i, x, resolver) {\n\t\t\t\tresults[i] = x;\n\t\t\t\tif(--pending === 0) {\n\t\t\t\t\tresolver.become(new Fulfilled(results));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction traverseAt(promises, handler, i, x, resolver) {\n\t\t\tif (maybeThenable(x)) {\n\t\t\t\tvar h = getHandlerMaybeThenable(x);\n\t\t\t\tvar s = h.state();\n\n\t\t\t\tif (s === 0) {\n\t\t\t\t\th.fold(handler, i, void 0, resolver);\n\t\t\t\t} else if (s > 0) {\n\t\t\t\t\thandler(i, h.value, resolver);\n\t\t\t\t} else {\n\t\t\t\t\tresolver.become(h);\n\t\t\t\t\tvisitRemaining(promises, i+1, h);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thandler(i, x, resolver);\n\t\t\t}\n\t\t}\n\n\t\tPromise._visitRemaining = visitRemaining;\n\t\tfunction visitRemaining(promises, start, handler) {\n\t\t\tfor(var i=start; i<promises.length; ++i) {\n\t\t\t\tmarkAsHandled(getHandler(promises[i]), handler);\n\t\t\t}\n\t\t}\n\n\t\tfunction markAsHandled(h, handler) {\n\t\t\tif(h === handler) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar s = h.state();\n\t\t\tif(s === 0) {\n\t\t\t\th.visit(h, void 0, h._unreport);\n\t\t\t} else if(s < 0) {\n\t\t\t\th._unreport();\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Fulfill-reject competitive race. Return a promise that will settle\n\t\t * to the same state as the earliest input promise to settle.\n\t\t *\n\t\t * WARNING: The ES6 Promise spec requires that race()ing an empty array\n\t\t * must return a promise that is pending forever.  This implementation\n\t\t * returns a singleton forever-pending promise, the same singleton that is\n\t\t * returned by Promise.never(), thus can be checked with ===\n\t\t *\n\t\t * @param {array} promises array of promises to race\n\t\t * @returns {Promise} if input is non-empty, a promise that will settle\n\t\t * to the same outcome as the earliest input promise to settle. if empty\n\t\t * is empty, returns a promise that will never settle.\n\t\t */\n\t\tfunction race(promises) {\n\t\t\tif(typeof promises !== 'object' || promises === null) {\n\t\t\t\treturn reject(new TypeError('non-iterable passed to race()'));\n\t\t\t}\n\n\t\t\t// Sigh, race([]) is untestable unless we return *something*\n\t\t\t// that is recognizable without calling .then() on it.\n\t\t\treturn promises.length === 0 ? never()\n\t\t\t\t : promises.length === 1 ? resolve(promises[0])\n\t\t\t\t : runRace(promises);\n\t\t}\n\n\t\tfunction runRace(promises) {\n\t\t\tvar resolver = new Pending();\n\t\t\tvar i, x, h;\n\t\t\tfor(i=0; i<promises.length; ++i) {\n\t\t\t\tx = promises[i];\n\t\t\t\tif (x === void 0 && !(i in promises)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\th = getHandler(x);\n\t\t\t\tif(h.state() !== 0) {\n\t\t\t\t\tresolver.become(h);\n\t\t\t\t\tvisitRemaining(promises, i+1, h);\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\th.visit(resolver, resolver.resolve, resolver.reject);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new Promise(Handler, resolver);\n\t\t}\n\n\t\t// Promise internals\n\t\t// Below this, everything is @private\n\n\t\t/**\n\t\t * Get an appropriate handler for x, without checking for cycles\n\t\t * @param {*} x\n\t\t * @returns {object} handler\n\t\t */\n\t\tfunction getHandler(x) {\n\t\t\tif(isPromise(x)) {\n\t\t\t\treturn x._handler.join();\n\t\t\t}\n\t\t\treturn maybeThenable(x) ? getHandlerUntrusted(x) : new Fulfilled(x);\n\t\t}\n\n\t\t/**\n\t\t * Get a handler for thenable x.\n\t\t * NOTE: You must only call this if maybeThenable(x) == true\n\t\t * @param {object|function|Promise} x\n\t\t * @returns {object} handler\n\t\t */\n\t\tfunction getHandlerMaybeThenable(x) {\n\t\t\treturn isPromise(x) ? x._handler.join() : getHandlerUntrusted(x);\n\t\t}\n\n\t\t/**\n\t\t * Get a handler for potentially untrusted thenable x\n\t\t * @param {*} x\n\t\t * @returns {object} handler\n\t\t */\n\t\tfunction getHandlerUntrusted(x) {\n\t\t\ttry {\n\t\t\t\tvar untrustedThen = x.then;\n\t\t\t\treturn typeof untrustedThen === 'function'\n\t\t\t\t\t? new Thenable(untrustedThen, x)\n\t\t\t\t\t: new Fulfilled(x);\n\t\t\t} catch(e) {\n\t\t\t\treturn new Rejected(e);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Handler for a promise that is pending forever\n\t\t * @constructor\n\t\t */\n\t\tfunction Handler() {}\n\n\t\tHandler.prototype.when\n\t\t\t= Handler.prototype.become\n\t\t\t= Handler.prototype.notify // deprecated\n\t\t\t= Handler.prototype.fail\n\t\t\t= Handler.prototype._unreport\n\t\t\t= Handler.prototype._report\n\t\t\t= noop;\n\n\t\tHandler.prototype._state = 0;\n\n\t\tHandler.prototype.state = function() {\n\t\t\treturn this._state;\n\t\t};\n\n\t\t/**\n\t\t * Recursively collapse handler chain to find the handler\n\t\t * nearest to the fully resolved value.\n\t\t * @returns {object} handler nearest the fully resolved value\n\t\t */\n\t\tHandler.prototype.join = function() {\n\t\t\tvar h = this;\n\t\t\twhile(h.handler !== void 0) {\n\t\t\t\th = h.handler;\n\t\t\t}\n\t\t\treturn h;\n\t\t};\n\n\t\tHandler.prototype.chain = function(to, receiver, fulfilled, rejected, progress) {\n\t\t\tthis.when({\n\t\t\t\tresolver: to,\n\t\t\t\treceiver: receiver,\n\t\t\t\tfulfilled: fulfilled,\n\t\t\t\trejected: rejected,\n\t\t\t\tprogress: progress\n\t\t\t});\n\t\t};\n\n\t\tHandler.prototype.visit = function(receiver, fulfilled, rejected, progress) {\n\t\t\tthis.chain(failIfRejected, receiver, fulfilled, rejected, progress);\n\t\t};\n\n\t\tHandler.prototype.fold = function(f, z, c, to) {\n\t\t\tthis.when(new Fold(f, z, c, to));\n\t\t};\n\n\t\t/**\n\t\t * Handler that invokes fail() on any handler it becomes\n\t\t * @constructor\n\t\t */\n\t\tfunction FailIfRejected() {}\n\n\t\tinherit(Handler, FailIfRejected);\n\n\t\tFailIfRejected.prototype.become = function(h) {\n\t\t\th.fail();\n\t\t};\n\n\t\tvar failIfRejected = new FailIfRejected();\n\n\t\t/**\n\t\t * Handler that manages a queue of consumers waiting on a pending promise\n\t\t * @constructor\n\t\t */\n\t\tfunction Pending(receiver, inheritedContext) {\n\t\t\tPromise.createContext(this, inheritedContext);\n\n\t\t\tthis.consumers = void 0;\n\t\t\tthis.receiver = receiver;\n\t\t\tthis.handler = void 0;\n\t\t\tthis.resolved = false;\n\t\t}\n\n\t\tinherit(Handler, Pending);\n\n\t\tPending.prototype._state = 0;\n\n\t\tPending.prototype.resolve = function(x) {\n\t\t\tthis.become(getHandler(x));\n\t\t};\n\n\t\tPending.prototype.reject = function(x) {\n\t\t\tif(this.resolved) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.become(new Rejected(x));\n\t\t};\n\n\t\tPending.prototype.join = function() {\n\t\t\tif (!this.resolved) {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tvar h = this;\n\n\t\t\twhile (h.handler !== void 0) {\n\t\t\t\th = h.handler;\n\t\t\t\tif (h === this) {\n\t\t\t\t\treturn this.handler = cycle();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn h;\n\t\t};\n\n\t\tPending.prototype.run = function() {\n\t\t\tvar q = this.consumers;\n\t\t\tvar handler = this.handler;\n\t\t\tthis.handler = this.handler.join();\n\t\t\tthis.consumers = void 0;\n\n\t\t\tfor (var i = 0; i < q.length; ++i) {\n\t\t\t\thandler.when(q[i]);\n\t\t\t}\n\t\t};\n\n\t\tPending.prototype.become = function(handler) {\n\t\t\tif(this.resolved) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.resolved = true;\n\t\t\tthis.handler = handler;\n\t\t\tif(this.consumers !== void 0) {\n\t\t\t\ttasks.enqueue(this);\n\t\t\t}\n\n\t\t\tif(this.context !== void 0) {\n\t\t\t\thandler._report(this.context);\n\t\t\t}\n\t\t};\n\n\t\tPending.prototype.when = function(continuation) {\n\t\t\tif(this.resolved) {\n\t\t\t\ttasks.enqueue(new ContinuationTask(continuation, this.handler));\n\t\t\t} else {\n\t\t\t\tif(this.consumers === void 0) {\n\t\t\t\t\tthis.consumers = [continuation];\n\t\t\t\t} else {\n\t\t\t\t\tthis.consumers.push(continuation);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * @deprecated\n\t\t */\n\t\tPending.prototype.notify = function(x) {\n\t\t\tif(!this.resolved) {\n\t\t\t\ttasks.enqueue(new ProgressTask(x, this));\n\t\t\t}\n\t\t};\n\n\t\tPending.prototype.fail = function(context) {\n\t\t\tvar c = typeof context === 'undefined' ? this.context : context;\n\t\t\tthis.resolved && this.handler.join().fail(c);\n\t\t};\n\n\t\tPending.prototype._report = function(context) {\n\t\t\tthis.resolved && this.handler.join()._report(context);\n\t\t};\n\n\t\tPending.prototype._unreport = function() {\n\t\t\tthis.resolved && this.handler.join()._unreport();\n\t\t};\n\n\t\t/**\n\t\t * Wrap another handler and force it into a future stack\n\t\t * @param {object} handler\n\t\t * @constructor\n\t\t */\n\t\tfunction Async(handler) {\n\t\t\tthis.handler = handler;\n\t\t}\n\n\t\tinherit(Handler, Async);\n\n\t\tAsync.prototype.when = function(continuation) {\n\t\t\ttasks.enqueue(new ContinuationTask(continuation, this));\n\t\t};\n\n\t\tAsync.prototype._report = function(context) {\n\t\t\tthis.join()._report(context);\n\t\t};\n\n\t\tAsync.prototype._unreport = function() {\n\t\t\tthis.join()._unreport();\n\t\t};\n\n\t\t/**\n\t\t * Handler that wraps an untrusted thenable and assimilates it in a future stack\n\t\t * @param {function} then\n\t\t * @param {{then: function}} thenable\n\t\t * @constructor\n\t\t */\n\t\tfunction Thenable(then, thenable) {\n\t\t\tPending.call(this);\n\t\t\ttasks.enqueue(new AssimilateTask(then, thenable, this));\n\t\t}\n\n\t\tinherit(Pending, Thenable);\n\n\t\t/**\n\t\t * Handler for a fulfilled promise\n\t\t * @param {*} x fulfillment value\n\t\t * @constructor\n\t\t */\n\t\tfunction Fulfilled(x) {\n\t\t\tPromise.createContext(this);\n\t\t\tthis.value = x;\n\t\t}\n\n\t\tinherit(Handler, Fulfilled);\n\n\t\tFulfilled.prototype._state = 1;\n\n\t\tFulfilled.prototype.fold = function(f, z, c, to) {\n\t\t\trunContinuation3(f, z, this, c, to);\n\t\t};\n\n\t\tFulfilled.prototype.when = function(cont) {\n\t\t\trunContinuation1(cont.fulfilled, this, cont.receiver, cont.resolver);\n\t\t};\n\n\t\tvar errorId = 0;\n\n\t\t/**\n\t\t * Handler for a rejected promise\n\t\t * @param {*} x rejection reason\n\t\t * @constructor\n\t\t */\n\t\tfunction Rejected(x) {\n\t\t\tPromise.createContext(this);\n\n\t\t\tthis.id = ++errorId;\n\t\t\tthis.value = x;\n\t\t\tthis.handled = false;\n\t\t\tthis.reported = false;\n\n\t\t\tthis._report();\n\t\t}\n\n\t\tinherit(Handler, Rejected);\n\n\t\tRejected.prototype._state = -1;\n\n\t\tRejected.prototype.fold = function(f, z, c, to) {\n\t\t\tto.become(this);\n\t\t};\n\n\t\tRejected.prototype.when = function(cont) {\n\t\t\tif(typeof cont.rejected === 'function') {\n\t\t\t\tthis._unreport();\n\t\t\t}\n\t\t\trunContinuation1(cont.rejected, this, cont.receiver, cont.resolver);\n\t\t};\n\n\t\tRejected.prototype._report = function(context) {\n\t\t\ttasks.afterQueue(new ReportTask(this, context));\n\t\t};\n\n\t\tRejected.prototype._unreport = function() {\n\t\t\tif(this.handled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.handled = true;\n\t\t\ttasks.afterQueue(new UnreportTask(this));\n\t\t};\n\n\t\tRejected.prototype.fail = function(context) {\n\t\t\tthis.reported = true;\n\t\t\temitRejection('unhandledRejection', this);\n\t\t\tPromise.onFatalRejection(this, context === void 0 ? this.context : context);\n\t\t};\n\n\t\tfunction ReportTask(rejection, context) {\n\t\t\tthis.rejection = rejection;\n\t\t\tthis.context = context;\n\t\t}\n\n\t\tReportTask.prototype.run = function() {\n\t\t\tif(!this.rejection.handled && !this.rejection.reported) {\n\t\t\t\tthis.rejection.reported = true;\n\t\t\t\temitRejection('unhandledRejection', this.rejection) ||\n\t\t\t\t\tPromise.onPotentiallyUnhandledRejection(this.rejection, this.context);\n\t\t\t}\n\t\t};\n\n\t\tfunction UnreportTask(rejection) {\n\t\t\tthis.rejection = rejection;\n\t\t}\n\n\t\tUnreportTask.prototype.run = function() {\n\t\t\tif(this.rejection.reported) {\n\t\t\t\temitRejection('rejectionHandled', this.rejection) ||\n\t\t\t\t\tPromise.onPotentiallyUnhandledRejectionHandled(this.rejection);\n\t\t\t}\n\t\t};\n\n\t\t// Unhandled rejection hooks\n\t\t// By default, everything is a noop\n\n\t\tPromise.createContext\n\t\t\t= Promise.enterContext\n\t\t\t= Promise.exitContext\n\t\t\t= Promise.onPotentiallyUnhandledRejection\n\t\t\t= Promise.onPotentiallyUnhandledRejectionHandled\n\t\t\t= Promise.onFatalRejection\n\t\t\t= noop;\n\n\t\t// Errors and singletons\n\n\t\tvar foreverPendingHandler = new Handler();\n\t\tvar foreverPendingPromise = new Promise(Handler, foreverPendingHandler);\n\n\t\tfunction cycle() {\n\t\t\treturn new Rejected(new TypeError('Promise cycle'));\n\t\t}\n\n\t\t// Task runners\n\n\t\t/**\n\t\t * Run a single consumer\n\t\t * @constructor\n\t\t */\n\t\tfunction ContinuationTask(continuation, handler) {\n\t\t\tthis.continuation = continuation;\n\t\t\tthis.handler = handler;\n\t\t}\n\n\t\tContinuationTask.prototype.run = function() {\n\t\t\tthis.handler.join().when(this.continuation);\n\t\t};\n\n\t\t/**\n\t\t * Run a queue of progress handlers\n\t\t * @constructor\n\t\t */\n\t\tfunction ProgressTask(value, handler) {\n\t\t\tthis.handler = handler;\n\t\t\tthis.value = value;\n\t\t}\n\n\t\tProgressTask.prototype.run = function() {\n\t\t\tvar q = this.handler.consumers;\n\t\t\tif(q === void 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var c, i = 0; i < q.length; ++i) {\n\t\t\t\tc = q[i];\n\t\t\t\trunNotify(c.progress, this.value, this.handler, c.receiver, c.resolver);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Assimilate a thenable, sending it's value to resolver\n\t\t * @param {function} then\n\t\t * @param {object|function} thenable\n\t\t * @param {object} resolver\n\t\t * @constructor\n\t\t */\n\t\tfunction AssimilateTask(then, thenable, resolver) {\n\t\t\tthis._then = then;\n\t\t\tthis.thenable = thenable;\n\t\t\tthis.resolver = resolver;\n\t\t}\n\n\t\tAssimilateTask.prototype.run = function() {\n\t\t\tvar h = this.resolver;\n\t\t\ttryAssimilate(this._then, this.thenable, _resolve, _reject, _notify);\n\n\t\t\tfunction _resolve(x) { h.resolve(x); }\n\t\t\tfunction _reject(x)  { h.reject(x); }\n\t\t\tfunction _notify(x)  { h.notify(x); }\n\t\t};\n\n\t\tfunction tryAssimilate(then, thenable, resolve, reject, notify) {\n\t\t\ttry {\n\t\t\t\tthen.call(thenable, resolve, reject, notify);\n\t\t\t} catch (e) {\n\t\t\t\treject(e);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Fold a handler value with z\n\t\t * @constructor\n\t\t */\n\t\tfunction Fold(f, z, c, to) {\n\t\t\tthis.f = f; this.z = z; this.c = c; this.to = to;\n\t\t\tthis.resolver = failIfRejected;\n\t\t\tthis.receiver = this;\n\t\t}\n\n\t\tFold.prototype.fulfilled = function(x) {\n\t\t\tthis.f.call(this.c, this.z, x, this.to);\n\t\t};\n\n\t\tFold.prototype.rejected = function(x) {\n\t\t\tthis.to.reject(x);\n\t\t};\n\n\t\tFold.prototype.progress = function(x) {\n\t\t\tthis.to.notify(x);\n\t\t};\n\n\t\t// Other helpers\n\n\t\t/**\n\t\t * @param {*} x\n\t\t * @returns {boolean} true iff x is a trusted Promise\n\t\t */\n\t\tfunction isPromise(x) {\n\t\t\treturn x instanceof Promise;\n\t\t}\n\n\t\t/**\n\t\t * Test just enough to rule out primitives, in order to take faster\n\t\t * paths in some code\n\t\t * @param {*} x\n\t\t * @returns {boolean} false iff x is guaranteed *not* to be a thenable\n\t\t */\n\t\tfunction maybeThenable(x) {\n\t\t\treturn (typeof x === 'object' || typeof x === 'function') && x !== null;\n\t\t}\n\n\t\tfunction runContinuation1(f, h, receiver, next) {\n\t\t\tif(typeof f !== 'function') {\n\t\t\t\treturn next.become(h);\n\t\t\t}\n\n\t\t\tPromise.enterContext(h);\n\t\t\ttryCatchReject(f, h.value, receiver, next);\n\t\t\tPromise.exitContext();\n\t\t}\n\n\t\tfunction runContinuation3(f, x, h, receiver, next) {\n\t\t\tif(typeof f !== 'function') {\n\t\t\t\treturn next.become(h);\n\t\t\t}\n\n\t\t\tPromise.enterContext(h);\n\t\t\ttryCatchReject3(f, x, h.value, receiver, next);\n\t\t\tPromise.exitContext();\n\t\t}\n\n\t\t/**\n\t\t * @deprecated\n\t\t */\n\t\tfunction runNotify(f, x, h, receiver, next) {\n\t\t\tif(typeof f !== 'function') {\n\t\t\t\treturn next.notify(x);\n\t\t\t}\n\n\t\t\tPromise.enterContext(h);\n\t\t\ttryCatchReturn(f, x, receiver, next);\n\t\t\tPromise.exitContext();\n\t\t}\n\n\t\tfunction tryCatch2(f, a, b) {\n\t\t\ttry {\n\t\t\t\treturn f(a, b);\n\t\t\t} catch(e) {\n\t\t\t\treturn reject(e);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Return f.call(thisArg, x), or if it throws return a rejected promise for\n\t\t * the thrown exception\n\t\t */\n\t\tfunction tryCatchReject(f, x, thisArg, next) {\n\t\t\ttry {\n\t\t\t\tnext.become(getHandler(f.call(thisArg, x)));\n\t\t\t} catch(e) {\n\t\t\t\tnext.become(new Rejected(e));\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Same as above, but includes the extra argument parameter.\n\t\t */\n\t\tfunction tryCatchReject3(f, x, y, thisArg, next) {\n\t\t\ttry {\n\t\t\t\tf.call(thisArg, x, y, next);\n\t\t\t} catch(e) {\n\t\t\t\tnext.become(new Rejected(e));\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @deprecated\n\t\t * Return f.call(thisArg, x), or if it throws, *return* the exception\n\t\t */\n\t\tfunction tryCatchReturn(f, x, thisArg, next) {\n\t\t\ttry {\n\t\t\t\tnext.notify(f.call(thisArg, x));\n\t\t\t} catch(e) {\n\t\t\t\tnext.notify(e);\n\t\t\t}\n\t\t}\n\n\t\tfunction inherit(Parent, Child) {\n\t\t\tChild.prototype = objectCreate(Parent.prototype);\n\t\t\tChild.prototype.constructor = Child;\n\t\t}\n\n\t\tfunction snd(x, y) {\n\t\t\treturn y;\n\t\t}\n\n\t\tfunction noop() {}\n\n\t\tfunction initEmitRejection() {\n\t\t\t/*global process, self, CustomEvent*/\n\t\t\tif(typeof process !== 'undefined' && process !== null\n\t\t\t\t&& typeof process.emit === 'function') {\n\t\t\t\t// Returning falsy here means to call the default\n\t\t\t\t// onPotentiallyUnhandledRejection API.  This is safe even in\n\t\t\t\t// browserify since process.emit always returns falsy in browserify:\n\t\t\t\t// https://github.com/defunctzombie/node-process/blob/master/browser.js#L40-L46\n\t\t\t\treturn function(type, rejection) {\n\t\t\t\t\treturn type === 'unhandledRejection'\n\t\t\t\t\t\t? process.emit(type, rejection.value, rejection)\n\t\t\t\t\t\t: process.emit(type, rejection);\n\t\t\t\t};\n\t\t\t} else if(typeof self !== 'undefined' && typeof CustomEvent === 'function') {\n\t\t\t\treturn (function(noop, self, CustomEvent) {\n\t\t\t\t\tvar hasCustomEvent = false;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar ev = new CustomEvent('unhandledRejection');\n\t\t\t\t\t\thasCustomEvent = ev instanceof CustomEvent;\n\t\t\t\t\t} catch (e) {}\n\n\t\t\t\t\treturn !hasCustomEvent ? noop : function(type, rejection) {\n\t\t\t\t\t\tvar ev = new CustomEvent(type, {\n\t\t\t\t\t\t\tdetail: {\n\t\t\t\t\t\t\t\treason: rejection.value,\n\t\t\t\t\t\t\t\tkey: rejection\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tbubbles: false,\n\t\t\t\t\t\t\tcancelable: true\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn !self.dispatchEvent(ev);\n\t\t\t\t\t};\n\t\t\t\t}(noop, self, CustomEvent));\n\t\t\t}\n\n\t\t\treturn noop;\n\t\t}\n\n\t\treturn Promise;\n\t};\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n}).call(this,require('_process'))\n\n},{\"_process\":26}],65:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\treturn {\n\t\tpending: toPendingState,\n\t\tfulfilled: toFulfilledState,\n\t\trejected: toRejectedState,\n\t\tinspect: inspect\n\t};\n\n\tfunction toPendingState() {\n\t\treturn { state: 'pending' };\n\t}\n\n\tfunction toRejectedState(e) {\n\t\treturn { state: 'rejected', reason: e };\n\t}\n\n\tfunction toFulfilledState(x) {\n\t\treturn { state: 'fulfilled', value: x };\n\t}\n\n\tfunction inspect(handler) {\n\t\tvar state = handler.state();\n\t\treturn state === 0 ? toPendingState()\n\t\t\t : state > 0   ? toFulfilledState(handler.value)\n\t\t\t               : toRejectedState(handler.value);\n\t}\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n},{}],66:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n\n/**\n * Promises/A+ and when() implementation\n * when is part of the cujoJS family of libraries (http://cujojs.com/)\n * @author Brian Cavalier\n * @author John Hann\n */\n(function(define) { 'use strict';\ndefine(function (require) {\n\n\tvar timed = require('./lib/decorators/timed');\n\tvar array = require('./lib/decorators/array');\n\tvar flow = require('./lib/decorators/flow');\n\tvar fold = require('./lib/decorators/fold');\n\tvar inspect = require('./lib/decorators/inspect');\n\tvar generate = require('./lib/decorators/iterate');\n\tvar progress = require('./lib/decorators/progress');\n\tvar withThis = require('./lib/decorators/with');\n\tvar unhandledRejection = require('./lib/decorators/unhandledRejection');\n\tvar TimeoutError = require('./lib/TimeoutError');\n\n\tvar Promise = [array, flow, fold, generate, progress,\n\t\tinspect, withThis, timed, unhandledRejection]\n\t\t.reduce(function(Promise, feature) {\n\t\t\treturn feature(Promise);\n\t\t}, require('./lib/Promise'));\n\n\tvar apply = require('./lib/apply')(Promise);\n\n\t// Public API\n\n\twhen.promise     = promise;              // Create a pending promise\n\twhen.resolve     = Promise.resolve;      // Create a resolved promise\n\twhen.reject      = Promise.reject;       // Create a rejected promise\n\n\twhen.lift        = lift;                 // lift a function to return promises\n\twhen['try']      = attempt;              // call a function and return a promise\n\twhen.attempt     = attempt;              // alias for when.try\n\n\twhen.iterate     = Promise.iterate;      // DEPRECATED (use cujojs/most streams) Generate a stream of promises\n\twhen.unfold      = Promise.unfold;       // DEPRECATED (use cujojs/most streams) Generate a stream of promises\n\n\twhen.join        = join;                 // Join 2 or more promises\n\n\twhen.all         = all;                  // Resolve a list of promises\n\twhen.settle      = settle;               // Settle a list of promises\n\n\twhen.any         = lift(Promise.any);    // One-winner race\n\twhen.some        = lift(Promise.some);   // Multi-winner race\n\twhen.race        = lift(Promise.race);   // First-to-settle race\n\n\twhen.map         = map;                  // Array.map() for promises\n\twhen.filter      = filter;               // Array.filter() for promises\n\twhen.reduce      = lift(Promise.reduce);       // Array.reduce() for promises\n\twhen.reduceRight = lift(Promise.reduceRight);  // Array.reduceRight() for promises\n\n\twhen.isPromiseLike = isPromiseLike;      // Is something promise-like, aka thenable\n\n\twhen.Promise     = Promise;              // Promise constructor\n\twhen.defer       = defer;                // Create a {promise, resolve, reject} tuple\n\n\t// Error types\n\n\twhen.TimeoutError = TimeoutError;\n\n\t/**\n\t * Get a trusted promise for x, or by transforming x with onFulfilled\n\t *\n\t * @param {*} x\n\t * @param {function?} onFulfilled callback to be called when x is\n\t *   successfully fulfilled.  If promiseOrValue is an immediate value, callback\n\t *   will be invoked immediately.\n\t * @param {function?} onRejected callback to be called when x is\n\t *   rejected.\n\t * @param {function?} onProgress callback to be called when progress updates\n\t *   are issued for x. @deprecated\n\t * @returns {Promise} a new promise that will fulfill with the return\n\t *   value of callback or errback or the completion value of promiseOrValue if\n\t *   callback and/or errback is not supplied.\n\t */\n\tfunction when(x, onFulfilled, onRejected, onProgress) {\n\t\tvar p = Promise.resolve(x);\n\t\tif (arguments.length < 2) {\n\t\t\treturn p;\n\t\t}\n\n\t\treturn p.then(onFulfilled, onRejected, onProgress);\n\t}\n\n\t/**\n\t * Creates a new promise whose fate is determined by resolver.\n\t * @param {function} resolver function(resolve, reject, notify)\n\t * @returns {Promise} promise whose fate is determine by resolver\n\t */\n\tfunction promise(resolver) {\n\t\treturn new Promise(resolver);\n\t}\n\n\t/**\n\t * Lift the supplied function, creating a version of f that returns\n\t * promises, and accepts promises as arguments.\n\t * @param {function} f\n\t * @returns {Function} version of f that returns promises\n\t */\n\tfunction lift(f) {\n\t\treturn function() {\n\t\t\tfor(var i=0, l=arguments.length, a=new Array(l); i<l; ++i) {\n\t\t\t\ta[i] = arguments[i];\n\t\t\t}\n\t\t\treturn apply(f, this, a);\n\t\t};\n\t}\n\n\t/**\n\t * Call f in a future turn, with the supplied args, and return a promise\n\t * for the result.\n\t * @param {function} f\n\t * @returns {Promise}\n\t */\n\tfunction attempt(f /*, args... */) {\n\t\t/*jshint validthis:true */\n\t\tfor(var i=0, l=arguments.length-1, a=new Array(l); i<l; ++i) {\n\t\t\ta[i] = arguments[i+1];\n\t\t}\n\t\treturn apply(f, this, a);\n\t}\n\n\t/**\n\t * Creates a {promise, resolver} pair, either or both of which\n\t * may be given out safely to consumers.\n\t * @return {{promise: Promise, resolve: function, reject: function, notify: function}}\n\t */\n\tfunction defer() {\n\t\treturn new Deferred();\n\t}\n\n\tfunction Deferred() {\n\t\tvar p = Promise._defer();\n\n\t\tfunction resolve(x) { p._handler.resolve(x); }\n\t\tfunction reject(x) { p._handler.reject(x); }\n\t\tfunction notify(x) { p._handler.notify(x); }\n\n\t\tthis.promise = p;\n\t\tthis.resolve = resolve;\n\t\tthis.reject = reject;\n\t\tthis.notify = notify;\n\t\tthis.resolver = { resolve: resolve, reject: reject, notify: notify };\n\t}\n\n\t/**\n\t * Determines if x is promise-like, i.e. a thenable object\n\t * NOTE: Will return true for *any thenable object*, and isn't truly\n\t * safe, since it may attempt to access the `then` property of x (i.e.\n\t *  clever/malicious getters may do weird things)\n\t * @param {*} x anything\n\t * @returns {boolean} true if x is promise-like\n\t */\n\tfunction isPromiseLike(x) {\n\t\treturn x && typeof x.then === 'function';\n\t}\n\n\t/**\n\t * Return a promise that will resolve only once all the supplied arguments\n\t * have resolved. The resolution value of the returned promise will be an array\n\t * containing the resolution values of each of the arguments.\n\t * @param {...*} arguments may be a mix of promises and values\n\t * @returns {Promise}\n\t */\n\tfunction join(/* ...promises */) {\n\t\treturn Promise.all(arguments);\n\t}\n\n\t/**\n\t * Return a promise that will fulfill once all input promises have\n\t * fulfilled, or reject when any one input promise rejects.\n\t * @param {array|Promise} promises array (or promise for an array) of promises\n\t * @returns {Promise}\n\t */\n\tfunction all(promises) {\n\t\treturn when(promises, Promise.all);\n\t}\n\n\t/**\n\t * Return a promise that will always fulfill with an array containing\n\t * the outcome states of all input promises.  The returned promise\n\t * will only reject if `promises` itself is a rejected promise.\n\t * @param {array|Promise} promises array (or promise for an array) of promises\n\t * @returns {Promise} promise for array of settled state descriptors\n\t */\n\tfunction settle(promises) {\n\t\treturn when(promises, Promise.settle);\n\t}\n\n\t/**\n\t * Promise-aware array map function, similar to `Array.prototype.map()`,\n\t * but input array may contain promises or values.\n\t * @param {Array|Promise} promises array of anything, may contain promises and values\n\t * @param {function(x:*, index:Number):*} mapFunc map function which may\n\t *  return a promise or value\n\t * @returns {Promise} promise that will fulfill with an array of mapped values\n\t *  or reject if any input promise rejects.\n\t */\n\tfunction map(promises, mapFunc) {\n\t\treturn when(promises, function(promises) {\n\t\t\treturn Promise.map(promises, mapFunc);\n\t\t});\n\t}\n\n\t/**\n\t * Filter the provided array of promises using the provided predicate.  Input may\n\t * contain promises and values\n\t * @param {Array|Promise} promises array of promises and values\n\t * @param {function(x:*, index:Number):boolean} predicate filtering predicate.\n\t *  Must return truthy (or promise for truthy) for items to retain.\n\t * @returns {Promise} promise that will fulfill with an array containing all items\n\t *  for which predicate returned truthy.\n\t */\n\tfunction filter(promises, predicate) {\n\t\treturn when(promises, function(promises) {\n\t\t\treturn Promise.filter(promises, predicate);\n\t\t});\n\t}\n\n\treturn when;\n});\n})(typeof define === 'function' && define.amd ? define : function (factory) { module.exports = factory(require); });\n\n},{\"./lib/Promise\":49,\"./lib/TimeoutError\":51,\"./lib/apply\":52,\"./lib/decorators/array\":53,\"./lib/decorators/flow\":54,\"./lib/decorators/fold\":55,\"./lib/decorators/inspect\":56,\"./lib/decorators/iterate\":57,\"./lib/decorators/progress\":58,\"./lib/decorators/timed\":59,\"./lib/decorators/unhandledRejection\":60,\"./lib/decorators/with\":61}]},{},[1])(1)\n});\n//# sourceMappingURL=data:application/json;base64,\n"],"sourceRoot":"/source/"}