{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 4a537185da5b287cbf54","webpack:///./src/js-joda.js","webpack:///./src/LocalDate.js","webpack:///./src/assert.js","webpack:///./src/MathUtil.js","webpack:///./src/chrono/IsoChronology.js","webpack:///./src/temporal/ChronoField.js","webpack:///./src/temporal/ValueRange.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;sCCtC0B,CAAa;;sBAExB;AACX,cAAS,sBAAW;EACvB;;;;;;;;;;;;;;;;;mCCJoB,CAAU;;qCAEN,CAAY;;gDACP,CAAwB;;gDACL,CAAwB;;;;;AAMzE,KAAO,cAAc,GAAG,MAAM,CAAC;;;;;;;AAQ/B,KAAO,iBAAiB,GAAI,cAAc,GAAG,CAAC,IAAK,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;KAiBpD,SAAS;;;;;;;;;AAQP,cARF,SAAS,CAQN,IAAI,EAAE,KAAK,EAAE,UAAU,EAAC;+BAR3B,SAAS;;AASd,kBAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;AAC5C,aAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAClB,aAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,aAAI,CAAC,IAAI,GAAG,UAAU,CAAC;MAC1B;;;;;;;kBAbQ,SAAS;;gBAmBd,gBAAG;AACH,oBAAO,IAAI,CAAC,KAAK;UACpB;;;;;;;;gBAMI,iBAAG;AACJ,oBAAO,IAAI,CAAC,MAAM;UACrB;;;;;;;;gBAME,eAAG;AACF,oBAAO,IAAI,CAAC,IAAI;UACnB;;;;;;;;;;;;;;;;;;;gBAiBO,kBAAC,SAAS,EAAE;AAChB,iBAAI,SAAS,KAAK,CAAC,EAAE;AACjB,wBAAO,IAAI,CAAC;cACf;AACD,iBAAI,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE,GAAG,SAAS,CAAC;AAC1C,oBAAO,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;UACtC;;;;;;;;;;;;gBAUS,sBAAG;AACT,iBAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;AACpB,iBAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;AACrB,iBAAI,KAAK,GAAG,CAAC,CAAC;AACd,kBAAK,IAAI,GAAG,GAAG,CAAC,CAAC;AACjB,iBAAI,CAAC,IAAI,CAAC,EAAE;AACR,sBAAK,IAAI,mBAAS,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,mBAAS,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,mBAAS,GAAG,CAAC,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;cAC5F,MAAM;AACH,sBAAK,IAAI,mBAAS,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,mBAAS,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,mBAAS,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;cAChF;AACD,kBAAK,IAAI,mBAAS,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC;AACzC,kBAAK,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACxB,iBAAI,CAAC,GAAG,CAAC,EAAE;AACP,sBAAK,EAAE,CAAC;AACR,qBAAI,CAAC,mCAAc,UAAU,CAAC,CAAC,CAAC,EAAE;AAC9B,0BAAK,EAAE,CAAC;kBACX;cACJ;AACD,oBAAO,KAAK,GAAG,iBAAiB,CAAC;UACpC;;;;;;;;;;gBAQO,oBAAG;AACP,iBAAI,SAAS,EAAE,WAAW,EAAE,UAAU,CAAC;;AAEvC,iBAAI,SAAS,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;AAC5B,iBAAI,UAAU,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;AAC9B,iBAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;;AAE1B,iBAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;;AAElC,iBAAI,OAAO,GAAG,IAAI,EAAE;AAClB,qBAAI,SAAS,GAAG,CAAC,EAAE;AACjB,+BAAU,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,SAAS,GAAG,KAAK,EAAC,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;kBACzD,MAAM;AACL,+BAAU,GAAG,CAAC,EAAE,IAAI,SAAS,GAAG,KAAK,EAAC,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;kBACnD;cACF,MAAM;AACL,qBAAI,SAAS,GAAG,IAAI,EAAE;AACpB,+BAAU,GAAG,GAAG,GAAG,SAAS,CAAC;kBAC9B,MAAM;AACL,+BAAU,GAAG,EAAE,GAAG,SAAS,CAAC;kBAC7B;cACF;;AAED,iBAAI,UAAU,GAAG,EAAE,EAAE;AACnB,4BAAW,GAAG,IAAI,GAAG,UAAU,CAAC;cACjC,MAAM;AACL,4BAAW,GAAG,GAAG,GAAG,UAAU,CAAC;cAChC;;AAED,iBAAI,QAAQ,GAAG,EAAE,EAAE;AACjB,0BAAS,GAAG,IAAI,GAAG,QAAQ,CAAC;cAC7B,MAAM;AACL,0BAAS,GAAG,GAAG,GAAG,QAAQ,CAAC;cAC5B;;AAED,oBAAO,UAAU,GAAG,WAAW,GAAG,SAAS,CAAC;UAC/C;;;;;;;;;;;;;;;;gBAcgB,oBAAC,QAAQ,EAAE;AACxB,iBAAI,MAAM,EAAE,YAAY,EAAE,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC;AAC7F,oBAAO,GAAG,QAAQ,GAAG,iBAAiB,CAAC;AACvC,oBAAO,IAAI,EAAE,CAAC;AACd,mBAAM,GAAG,CAAC,CAAC;AACX,iBAAI,OAAO,GAAG,CAAC,EAAE;AACb,6BAAY,GAAG,mBAAS,GAAG,CAAC,OAAO,GAAG,CAAC,EAAE,cAAc,CAAC,GAAG,CAAC,CAAC;AAC7D,uBAAM,GAAG,YAAY,GAAG,GAAG,CAAC;AAC5B,wBAAO,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;cAC7C;AACD,oBAAO,GAAG,mBAAS,GAAG,CAAC,GAAG,GAAG,OAAO,GAAG,GAAG,EAAE,cAAc,CAAC,CAAC;AAC5D,mBAAM,GAAG,OAAO,IAAI,GAAG,GAAG,OAAO,GAAG,mBAAS,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,mBAAS,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,mBAAS,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;AACxH,iBAAI,MAAM,GAAG,CAAC,EAAE;AACZ,wBAAO,EAAE,CAAC;AACV,uBAAM,GAAG,OAAO,IAAI,GAAG,GAAG,OAAO,GAAG,mBAAS,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,mBAAS,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,mBAAS,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;cAC3H;AACD,oBAAO,IAAI,MAAM,CAAC;AAClB,sBAAS,GAAG,MAAM,CAAC;AACnB,wBAAW,GAAG,mBAAS,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;AACnD,kBAAK,GAAG,CAAC,WAAW,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACnC,gBAAG,GAAG,SAAS,GAAG,mBAAS,GAAG,CAAC,WAAW,GAAG,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;AAC9D,oBAAO,IAAI,mBAAS,GAAG,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;AACzC,iBAAI,GAAG,OAAO,CAAC;AACf,oBAAO,IAAI,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;UAC1C;;;;;;;gBAKc,kBAAC,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE;AACrC,iBAAI,GAAG,CAAC;AACR,uCAAK,eAAe,CAAC,IAAI,CAAC,CAAC;AAC3B,gDAAc,eAAe,CAAC,KAAK,CAAC,CAAC;AACrC,+CAAa,eAAe,CAAC,UAAU,CAAC,CAAC;AACzC,iBAAI,UAAU,GAAG,EAAE,EAAE;AACjB,oBAAG,GAAG,EAAE,CAAC;AACT,yBAAQ,KAAK;AACT,0BAAK,CAAC;AACF,4BAAG,GAAG,mCAAc,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;AAC/C,+BAAM;AACV,0BAAK,CAAC,CAAC;AACP,0BAAK,CAAC,CAAC;AACP,0BAAK,CAAC,CAAC;AACP,0BAAK,EAAE;AACH,4BAAG,GAAG,EAAE,CAAC;AAAA,kBAChB;AACD,qBAAI,UAAU,GAAG,GAAG,EAAE;AAClB,yBAAI,UAAU,KAAK,EAAE,EAAE;AACnB,6CAAO,KAAK,EAAE,iCAAiC,GAAG,IAAI,GAAG,sBAAsB,CAAC,CAAC;sBACpF,MAAM;AACH,6CAAO,KAAK,EAAE,gBAAgB,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,UAAU,GAAG,GAAG,CAAC,CAAC;sBACrF;kBACJ;cACJ;UACJ;;;YAzMQ,SAAS;;;;;;;;;;;;;;;;ACnCf,UAAS,MAAM,CAAC,SAAS,EAAE,GAAG,EAAE;AACnC,SAAG,CAAC,SAAS,EAAC;AACV,eAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;MACxB;;;;;;;;;;;;;;;;;;;;KCAQ,QAAQ;cAAR,QAAQ;+BAAR,QAAQ;;;kBAAR,QAAQ;;gBACP,aAAC,CAAC,EAAE,CAAC,EAAE;AACb,oBAAO,EAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;UACpB;;;YAHQ,QAAQ;;;;;;;;;;;;;;;;;;;KCHR,aAAa;cAAb,aAAa;+BAAb,aAAa;;;kBAAb,aAAa;;;;;;;;;;;;;;;;;;;;;;gBAoBL,oBAAC,aAAa,EAAE;AAC7B,oBAAQ,CAAC,aAAa,GAAG,CAAC,MAAM,CAAC,KAAO,aAAa,GAAG,GAAG,KAAM,CAAC,IAAK,aAAa,GAAG,GAAG,KAAM,CAAC,CAAC,CAAC;UACtG;;;YAtBQ,aAAa;;;;;;;;;;;;;;;;;;;uCCAC,CAAc;;KAElC,WAAW;AAEH,cAFR,WAAW,CAEF,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,cAAc,EAAE;+BAF3D,WAAW;;AAGV,aAAI,CAAC,IAAI,GAAG,YAAY;AACpB,oBAAO,IAAI,CAAC;UACf,CAAC;AACF,aAAI,CAAC,QAAQ,GAAG,YAAY;AACxB,oBAAO,QAAQ,CAAC;UACnB,CAAC;AACF,aAAI,CAAC,SAAS,GAAG,YAAY;AACzB,oBAAO,SAAS,CAAC;UACpB,CAAC;AACF,aAAI,CAAC,KAAK,GAAG,YAAY;AACrB,oBAAO,KAAK,CAAC;UAChB,CAAC;AACF,aAAI,CAAC,cAAc,GAAG,YAAY;AAC9B,oBAAO,cAAc,CAAC;UACzB,CAAC;MACL;;kBAlBE,WAAW;;gBAoBC,yBAAC,KAAK,EAAE;AACnB,oBAAO,IAAI,CAAC,KAAK,EAAE,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;UAC3D;;;YAtBE,WAAW;;;AA0BX,KAAM,YAAY,GAAG,IAAI,WAAW,CACvC,YAAY,EAAE,IAAI,EAAE,IAAI,EAAE,uBAAW,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,CAC5D,CAAC;;;AAEK,KAAM,aAAa,GAAG,IAAI,WAAW,CACxC,aAAa,EAAE,IAAI,EAAE,IAAI,EAAE,uBAAW,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,OAAO,CAC3D,CAAC;;;AAEK,KAAM,IAAI,GAAG,IAAI,WAAW,CAAC,EAAE,GAClC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,uBAAW,EAAE,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,MAAM,CAC7D,CAAC;;;;;;;;;;;;;;;;;mCCtCmB,CAAW;;;;;;;;;;;;;;;;;;;KAmBnB,UAAU;AAER,cAFF,UAAU,CAEP,WAAW,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE;+BAFrD,UAAU;;AAGf,6BAAO,EAAE,WAAW,GAAG,UAAU,CAAC,EAAE,0BAA0B,GAAG,WAAW,GACxE,6CAA6C,GAAG,UAAU,GAAG,GAAG,CAAC,CAAC;AACtE,6BAAO,EAAE,WAAW,GAAG,UAAU,CAAC,EAAE,0BAA0B,GAAG,WAAW,GACxE,6CAA6C,GAAG,UAAU,GAAG,GAAG,CAAC,CAAC;AACtE,6BAAO,EAAE,UAAU,GAAG,UAAU,CAAC,EAAE,iBAAiB,GAAG,UAAU,GAC7D,qCAAqC,GAAG,UAAU,GAAG,GAAG,CAAC,CAAC;;AAE9D,aAAI,CAAC,OAAO,GAAG,YAAY;AACvB,oBAAO,WAAW,CAAC;UACtB,CAAC;AACF,aAAI,CAAC,cAAc,GAAG,YAAY;AAC9B,oBAAO,UAAU,CAAC;UACrB,CAAC;AACF,aAAI,CAAC,OAAO,GAAG,YAAY;AACvB,oBAAO,UAAU,CAAC;UACrB,CAAC;AACF,aAAI,CAAC,eAAe,GAAG,YAAY;AAC/B,oBAAO,WAAW,CAAC;UACtB,CAAC;MACL;;kBAtBQ,UAAU;;gBAwBP,sBAAC,KAAK,EAAE;AAChB,oBAAQ,IAAI,CAAC,OAAO,EAAE,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE,CAAE;UAC/D;;;gBAEc,yBAAC,KAAK,EAAE,KAAK,EAAE;AAC1B,iBAAI,GAAG,CAAC;AACR,iBAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;AAC3B,qBAAI,KAAK,IAAI,IAAI,EAAE;AACf,wBAAG,GAAI,oBAAoB,GAAG,KAAK,GAAG,iBAAiB,GAAI,IAAI,CAAC,QAAQ,EAAG,GAAG,KAAK,GAAI,KAAK,CAAC;kBAChG,MAAM;AACH,wBAAG,GAAI,8BAA8B,GAAI,IAAI,CAAC,QAAQ,EAAG,GAAG,KAAK,GAAI,KAAK,CAAC;kBAC9E;AACD,wBAAO,oBAAO,KAAK,EAAE,GAAG,CAAC,CAAC;cAC7B;UACJ;;;;;;;;;;;;;;gBAYO,oBAAG;AACP,iBAAI,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,cAAc,EAAE,GAAG,GAAG,GAAI,IAAI,CAAC,cAAc,EAAG,GAAG,EAAE,CAAC,CAAC;AAC3G,gBAAG,IAAI,KAAK,CAAC;AACb,gBAAG,IAAI,IAAI,CAAC,eAAe,EAAE,IAAI,IAAI,CAAC,eAAe,EAAE,KAAK,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,GAAI,IAAI,CAAC,OAAO,EAAG,GAAG,EAAE,CAAC,CAAC;AAC1G,oBAAO,GAAG,CAAC;UACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAiCQ,cAAG;AACR,iBAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AACxB,wBAAO,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;cACjF,MAAM,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAC/B,wBAAO,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;cACjF,MAAM,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAC/B,wBAAO,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;cACjF,MAAM;AACH,wBAAO,oBAAO,KAAK,EAAE,8BAA8B,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;cAC3E;UACJ;;;YAlGQ,UAAU","file":"js-joda.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jsjoda\"] = factory();\n\telse\n\t\troot[\"jsjoda\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4a537185da5b287cbf54\n **/","import { LocalDate } from './LocalDate'\n\nexport default {\n    LocalDate: LocalDate\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/js-joda.js\n **/","import {assert} from './assert';\n\nimport { MathUtil } from './MathUtil';\nimport { IsoChronology } from './chrono/IsoChronology';\nimport {DAY_OF_MONTH, MONTH_OF_YEAR, YEAR } from './temporal/ChronoField';\n\n\n/**\n * The number of days in a 400 year cycle.\n */\nconst  DAYS_PER_CYCLE = 146097;\n\n\n  /**\n   * The number of days from year zero to year 1970.\n   * There are five 400 year cycles from year zero to 2000.\n   * There are 7 leap years from 1970 to 2000.\n   */\nconst  DAYS_0000_TO_1970 = (DAYS_PER_CYCLE * 5) - (30 * 365 + 7);\n\n/**\n * A date without a time-zone in the ISO-8601 calendar system,\n * such as 2007-12-03.\n *\n * LocalDate is an immutable date-time object that represents a date,\n * often viewed as year-month-day. Other date fields, such as day-of-year,\n * day-of-week and week-of-year, can also be accessed.\n * For example, the value \"2nd October 2007\" can be stored in a LocalDate.\n *\n * This class does not store or represent a time or time-zone.\n * Instead, it is a description of the date, as used for birthdays.\n * It cannot represent an instant on the time-line without additional information\n * such as an offset or time-zone.\n */\n\nexport class LocalDate {\n\n    /**\n     *\n     * @param {number} year\n     * @param {number} month\n     * @param {number} dayOfMonth\n     */\n    constructor(year, month, dayOfMonth){\n        LocalDate.validate(year, month, dayOfMonth);\n        this._year = year;\n        this._month = month;\n        this._day = dayOfMonth;\n    }\n\n    /**\n     *\n     * @return {number} gets the year\n     */\n    year() {\n        return this._year\n    }\n\n    /**\n     *\n     * @return {number} gets the month\n     */\n    month() {\n        return this._month\n    }\n\n    /**\n     *\n     * @return {number} gets the day of month\n     */\n    day() {\n        return this._day\n    }\n\n    /*\n     * Returns a copy of this LocalDate with the specified number of days added.\n     * \n     * This method adds the specified amount to the days field incrementing the\n     * month and year fields as necessary to ensure the result remains valid.\n     * The result is only invalid if the maximum/minimum year is exceeded.\n     * \n     * For example, 2008-12-31 plus one day would result in 2009-01-01.\n     * \n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} daysToAdd - the days to add, may be negative\n     * @return {LocalDate} a LocalDate based on this date with the days added, not null\n     * @throws AssertionError if the result exceeds the supported date range\n     */\n    plusDays(daysToAdd) {\n        if (daysToAdd === 0) {\n            return this;\n        }\n        var mjDay = this.toEpochDay() + daysToAdd;\n        return LocalDate.ofEpochDay(mjDay);\n    };\n    \n    /**\n     * Converts this date to the Epoch Day.\n     *\n     * The Epoch Day count is a simple incrementing count of days where day 0 is 1970-01-01 (ISO).\n     * This definition is the same for all chronologies, enabling conversion.\n     *\n     * @return {number} the Epoch Day equivalent to this date\n     */\n    toEpochDay() {\n        var y = this.year();\n        var m = this.month();\n        var total = 0;\n        total += 365 * y;\n        if (y >= 0) {\n            total += MathUtil.div(y + 3, 4) - MathUtil.div(y + 99, 100) + MathUtil.div(y + 399, 400);\n        } else {\n            total -= MathUtil.div(y, -4) - MathUtil.div(y, -100) + MathUtil.div(y, -400);\n        }\n        total += MathUtil.div(367 * m - 362, 12);\n        total += this.day() - 1;\n        if (m > 2) {\n            total--;\n            if (!IsoChronology.isLeapYear(y)) {\n                total--;\n            }\n        }\n        return total - DAYS_0000_TO_1970;\n    }\n\n    /**\n     * Outputs this date as a String, such as 2007-12-03.\n     * The output will be in the ISO-8601 format uuuu-MM-dd.\n     *\n     * @return {string} a string representation of this date, not null\n     */\n    toString() {\n        var dayString, monthString, yearString;\n\n        var yearValue = this.year();\n        var monthValue = this.month();\n        var dayValue = this.day();\n\n        var absYear = Math.abs(yearValue);\n\n        if (absYear < 1000) {\n          if (yearValue < 0) {\n            yearString = \"-\" + (\"\" + (yearValue - 10000)).slice(-4);\n          } else {\n            yearString = (\"\" + (yearValue + 10000)).slice(-4);\n          }\n        } else {\n          if (yearValue > 9999) {\n            yearString = \"+\" + yearValue;\n          } else {\n            yearString = \"\" + yearValue;\n          }\n        }\n\n        if (monthValue < 10) {\n          monthString = \"-0\" + monthValue;\n        } else {\n          monthString = \"-\" + monthValue;\n        }\n\n        if (dayValue < 10) {\n          dayString = \"-0\" + dayValue;\n        } else {\n          dayString = \"-\" + dayValue;\n        }\n\n        return yearString + monthString + dayString;\n    }\n\n    /*\n     * Obtains an instance of LocalDate from the epoch day count.\n     *\n     * This returns a LocalDate with the specified epoch-day.\n     * The {@link ChronoField#EPOCH_DAY EPOCH_DAY} is a simple incrementing count\n     * of days where day 0 is 1970-01-01. Negative numbers represent earlier days.\n     *\n     * @param {number} epochDay - the Epoch Day to convert, based on the epoch 1970-01-01\n     * @return {LocalDate} the local date, not null\n     * @throws AssertionError if the epoch days exceeds the supported date range\n     */\n\n    static ofEpochDay(epochDay) {\n        var adjust, adjustCycles, dom, doyEst, marchDoy0, marchMonth0, month, year, yearEst, zeroDay;\n        zeroDay = epochDay + DAYS_0000_TO_1970;\n        zeroDay -= 60;\n        adjust = 0;\n        if (zeroDay < 0) {\n            adjustCycles = MathUtil.div(zeroDay + 1, DAYS_PER_CYCLE) - 1;\n            adjust = adjustCycles * 400;\n            zeroDay += -adjustCycles * DAYS_PER_CYCLE;\n        }\n        yearEst = MathUtil.div(400 * zeroDay + 591, DAYS_PER_CYCLE);\n        doyEst = zeroDay - (365 * yearEst + MathUtil.div(yearEst, 4) - MathUtil.div(yearEst, 100) + MathUtil.div(yearEst, 400));\n        if (doyEst < 0) {\n            yearEst--;\n            doyEst = zeroDay - (365 * yearEst + MathUtil.div(yearEst, 4) - MathUtil.div(yearEst, 100) + MathUtil.div(yearEst, 400));\n        }\n        yearEst += adjust;\n        marchDoy0 = doyEst;\n        marchMonth0 = MathUtil.div(marchDoy0 * 5 + 2, 153);\n        month = (marchMonth0 + 2) % 12 + 1;\n        dom = marchDoy0 - MathUtil.div(marchMonth0 * 306 + 5, 10) + 1;\n        yearEst += MathUtil.div(marchMonth0, 10);\n        year = yearEst;\n        return new LocalDate(year, month, dom);\n    };\n\n    /**\n     * @private\n     */\n    static validate(year, month, dayOfMonth) {\n        var dom;\n        YEAR.checkValidValue(year);\n        MONTH_OF_YEAR.checkValidValue(month);\n        DAY_OF_MONTH.checkValidValue(dayOfMonth);\n        if (dayOfMonth > 28) {\n            dom = 31;\n            switch (month) {\n                case 2:\n                    dom = IsoChronology.isLeapYear(year) ? 29 : 28;\n                    break;\n                case 4:\n                case 6:\n                case 9:\n                case 11:\n                    dom = 30;\n            }\n            if (dayOfMonth > dom) {\n                if (dayOfMonth === 29) {\n                    assert(false, \"Invalid date 'February 29' as '\" + year + \"' is not a leap year\");\n                } else {\n                    assert(false, \"Invalid date '\" + year + \"' '\" + month + \"' '\" + dayOfMonth + \"'\");\n                }\n            }\n        }\n    };\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/LocalDate.js\n **/","export function assert(assertion, msg) {\n    if(!assertion){\n        throw new Error(msg);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/assert.js\n **/","/**\n * Math helper with static function for integer operations\n */\nexport class MathUtil {\n    static div(a, b) {\n        return ~~(a / b);\n    }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/MathUtil.js\n **/","export class IsoChronology {\n    /**\n     * Checks if the year is a leap year, according to the ISO proleptic\n     * calendar system rules.\n     *\n     * This method applies the current rules for leap years across the whole time-line.\n     * In general, a year is a leap year if it is divisible by four without\n     * remainder. However, years divisible by 100, are not leap years, with\n     * the exception of years divisible by 400 which are.\n     *\n     * For example, 1904 is a leap year it is divisible by 4.\n     * 1900 was not a leap year as it is divisible by 100, however 2000 was a\n     * leap year as it is divisible by 400.\n     *\n     * The calculation is proleptic - applying the same rules into the far future and far past.\n     * This is historically inaccurate, but is correct for the ISO-8601 standard.\n     *\n     * @param {number} prolepticYear - the ISO proleptic year to check\n     * @return true if the year is leap, false otherwise\n     */\n    static isLeapYear(prolepticYear) {\n        return ((prolepticYear & 3) === 0) && ((prolepticYear % 100) !== 0 || (prolepticYear % 400) === 0);\n    }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/chrono/IsoChronology.js\n **/","import { ValueRange } from './ValueRange';\n\nclass  ChronoField {\n\n    constructor(name, baseUnit, rangeUnit, range, displayNameKey) {\n        this.name = function () {\n            return name;\n        };\n        this.baseUnit = function () {\n            return baseUnit;\n        };\n        this.rangeUnit = function () {\n            return rangeUnit;\n        };\n        this.range = function () {\n            return range;\n        };\n        this.displayNameKey = function () {\n            return displayNameKey;\n        };\n    }\n\n    checkValidValue(value) {\n        return this.range().checkValidValue(value, this.name());\n    }\n}\n\n\nexport const DAY_OF_MONTH = new ChronoField(\n    \"DayOfMonth\", null, null, ValueRange.of(1, 28, 31), \"day\"\n);\n\nexport const MONTH_OF_YEAR = new ChronoField(\n    \"MonthOfYear\", null, null, ValueRange.of(1, 12), \"month\"\n);\n\nexport const YEAR = new ChronoField(\"\" +\n    \"Year\", null, null, ValueRange.of(-999999, 999999), \"year\"\n);\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/temporal/ChronoField.js\n **/","import {assert} from '../assert';\n\n/**\n * The range of valid values for a date-time field.\n * \n * All TemporalField instances have a valid range of values.\n * For example, the ISO day-of-month runs from 1 to somewhere between 28 and 31.\n * This class captures that valid range.\n * \n * It is important to be aware of the limitations of this class.\n * Only the minimum and maximum values are provided.\n * It is possible for there to be invalid values within the outer range.\n * For example, a weird field may have valid values of 1, 2, 4, 6, 7, thus\n * have a range of '1 - 7', despite that fact that values 3 and 5 are invalid.\n * \n * Instances of this class are not tied to a specific field.\n *\n */\n\nexport class ValueRange {\n\n    constructor(minSmallest, minLargest, maxSmallest, maxLargest) {\n        assert(!(minSmallest > minLargest), \"Smallest minimum value '\" + minSmallest +\n            \"' must be less than largest minimum value '\" + minLargest + \"'\");\n        assert(!(maxSmallest > maxLargest), \"Smallest maximum value '\" + maxSmallest +\n            \"' must be less than largest maximum value '\" + maxLargest + \"'\");\n        assert(!(minLargest > maxLargest), \"Minimum value '\" + minLargest +\n            \"' must be less than maximum value '\" + maxLargest + \"'\");\n\n        this.minimum = function () {\n            return minSmallest;\n        };\n        this.largestMinimum = function () {\n            return minLargest;\n        };\n        this.maximum = function () {\n            return maxLargest;\n        };\n        this.smallestMaximum = function () {\n            return maxSmallest;\n        };\n    }\n\n    isValidValue(value) {\n        return (this.minimum() <= value && value <= this.maximum());\n    }\n\n    checkValidValue(value, field) {\n        var msg;\n        if (!this.isValidValue(value)) {\n            if (field != null) {\n                msg = (\"Invalid value for \" + field + \" (valid values \" + (this.toString()) + \"): \") + value;\n            } else {\n                msg = (\"Invalid value (valid values \" + (this.toString()) + \"): \") + value;\n            }\n            return assert(false, msg);\n        }\n    }\n\n    /*\n     * Outputs this range as a String.\n     * \n     * The format will be '{min}/{largestMin} - {smallestMax}/{max}',\n     * where the largestMin or smallestMax sections may be omitted, together\n     * with associated slash, if they are the same as the min or max.\n     *\n     * @return {string} a string representation of this range, not null\n     */\n\n    toString() {\n        var str = this.minimum() + (this.minimum() !== this.largestMinimum() ? \"/\" + (this.largestMinimum()) : \"\");\n        str += \" - \";\n        str += this.smallestMaximum() + (this.smallestMaximum() !== this.maximum() ? \"/\" + (this.maximum()) : \"\");\n        return str;\n    }\n\n    /*\n     * called with 2 params: Obtains a fixed value range.\n     *\n     * This factory obtains a range where the minimum and maximum values are fixed.\n     * For example, the ISO month-of-year always runs from 1 to 12.\n     *\n     * @param min  the minimum value\n     * @param max  the maximum value\n     * @return the ValueRange for min, max, not null\n\n     * called with 3 params: Obtains a variable value range.\n     *\n     * This factory obtains a range where the minimum value is fixed and the maximum value may vary.\n     * For example, the ISO day-of-month always starts at 1, but ends between 28 and 31.\n     *\n     * @param min  the minimum value\n     * @param maxSmallest  the smallest maximum value\n     * @param maxLargest  the largest maximum value\n     * @return the ValueRange for min, smallest max, largest max, not null\n\n     * called with 4 params: Obtains a fully variable value range.\n     *\n     * This factory obtains a range where both the minimum and maximum value may vary.\n     *\n     * @param minSmallest  the smallest minimum value\n     * @param minLargest  the largest minimum value\n     * @param maxSmallest  the smallest maximum value\n     * @param maxLargest  the largest maximum value\n     * @return {ValueRange} the ValueRange for smallest min, largest min, smallest max, largest max, not null\n     */\n\n    static of() {\n        if (arguments.length === 2) {\n            return new ValueRange(arguments[0], arguments[0], arguments[1], arguments[1]);\n        } else if (arguments.length === 3) {\n            return new ValueRange(arguments[0], arguments[0], arguments[1], arguments[2]);\n        } else if (arguments.length === 4) {\n            return new ValueRange(arguments[0], arguments[1], arguments[2], arguments[3]);\n        } else {\n            return assert(false, \"Invalid number of arguments \" + arguments.length);\n        }\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/temporal/ValueRange.js\n **/"],"sourceRoot":""}