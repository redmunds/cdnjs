{"version":3,"file":null,"sources":["/Users/anon/projects/my/kefir/src/utils/objects.js","/Users/anon/projects/my/kefir/src/utils/collections.js","/Users/anon/projects/my/kefir/src/dispatcher.js","/Users/anon/projects/my/kefir/src/observable.js","/Users/anon/projects/my/kefir/src/stream.js","/Users/anon/projects/my/kefir/src/property.js","/Users/anon/projects/my/kefir/src/primary/never.js","/Users/anon/projects/my/kefir/src/patterns/time-based.js","/Users/anon/projects/my/kefir/src/time-based/later.js","/Users/anon/projects/my/kefir/src/time-based/interval.js","/Users/anon/projects/my/kefir/src/time-based/sequentially.js","/Users/anon/projects/my/kefir/src/time-based/from-poll.js","/Users/anon/projects/my/kefir/src/emitter.js","/Users/anon/projects/my/kefir/src/time-based/with-interval.js","/Users/anon/projects/my/kefir/src/primary/stream.js","/Users/anon/projects/my/kefir/src/primary/from-callback.js","/Users/anon/projects/my/kefir/src/primary/from-node-callback.js","/Users/anon/projects/my/kefir/src/utils/functions.js","/Users/anon/projects/my/kefir/src/primary/from-sub-unsub.js","/Users/anon/projects/my/kefir/src/primary/from-events.js","/Users/anon/projects/my/kefir/src/primary/constant.js","/Users/anon/projects/my/kefir/src/primary/constant-error.js","/Users/anon/projects/my/kefir/src/patterns/one-source.js","/Users/anon/projects/my/kefir/src/one-source/to-property.js","/Users/anon/projects/my/kefir/src/one-source/changes.js","/Users/anon/projects/my/kefir/src/interop/from-promise.js","/Users/anon/projects/my/kefir/src/interop/to-promise.js","/Users/anon/projects/my/kefir/src/interop/from-es-observable.js","/Users/anon/projects/my/kefir/src/interop/to-es-observable.js","/Users/anon/projects/my/kefir/src/many-sources/combine.js","/Users/anon/projects/my/kefir/src/one-source/map.js","/Users/anon/projects/my/kefir/src/one-source/filter.js","/Users/anon/projects/my/kefir/src/one-source/take.js","/Users/anon/projects/my/kefir/src/one-source/take-errors.js","/Users/anon/projects/my/kefir/src/one-source/take-while.js","/Users/anon/projects/my/kefir/src/one-source/last.js","/Users/anon/projects/my/kefir/src/one-source/skip.js","/Users/anon/projects/my/kefir/src/one-source/skip-while.js","/Users/anon/projects/my/kefir/src/one-source/skip-duplicates.js","/Users/anon/projects/my/kefir/src/one-source/diff.js","/Users/anon/projects/my/kefir/src/one-source/scan.js","/Users/anon/projects/my/kefir/src/one-source/flatten.js","/Users/anon/projects/my/kefir/src/one-source/delay.js","/Users/anon/projects/my/kefir/src/one-source/throttle.js","/Users/anon/projects/my/kefir/src/one-source/debounce.js","/Users/anon/projects/my/kefir/src/one-source/map-errors.js","/Users/anon/projects/my/kefir/src/one-source/filter-errors.js","/Users/anon/projects/my/kefir/src/one-source/ignore-values.js","/Users/anon/projects/my/kefir/src/one-source/ignore-errors.js","/Users/anon/projects/my/kefir/src/one-source/ignore-end.js","/Users/anon/projects/my/kefir/src/one-source/before-end.js","/Users/anon/projects/my/kefir/src/one-source/sliding-window.js","/Users/anon/projects/my/kefir/src/one-source/buffer-while.js","/Users/anon/projects/my/kefir/src/one-source/buffer-with-count.js","/Users/anon/projects/my/kefir/src/one-source/buffer-with-time-or-count.js","/Users/anon/projects/my/kefir/src/one-source/transduce.js","/Users/anon/projects/my/kefir/src/one-source/with-handler.js","/Users/anon/projects/my/kefir/src/many-sources/zip.js","/Users/anon/projects/my/kefir/src/many-sources/abstract-pool.js","/Users/anon/projects/my/kefir/src/many-sources/merge.js","/Users/anon/projects/my/kefir/src/many-sources/repeat.js","/Users/anon/projects/my/kefir/src/many-sources/concat.js","/Users/anon/projects/my/kefir/src/many-sources/pool.js","/Users/anon/projects/my/kefir/src/many-sources/flat-map.js","/Users/anon/projects/my/kefir/src/many-sources/flat-map-errors.js","/Users/anon/projects/my/kefir/src/patterns/two-sources.js","/Users/anon/projects/my/kefir/src/two-sources/filter-by.js","/Users/anon/projects/my/kefir/src/two-sources/sampled-by.js","/Users/anon/projects/my/kefir/src/two-sources/skip-until-by.js","/Users/anon/projects/my/kefir/src/two-sources/take-until-by.js","/Users/anon/projects/my/kefir/src/two-sources/buffer-by.js","/Users/anon/projects/my/kefir/src/two-sources/buffer-while-by.js","/Users/anon/projects/my/kefir/src/two-sources/awaiting.js","/Users/anon/projects/my/kefir/src/one-source/values-to-errors.js","/Users/anon/projects/my/kefir/src/one-source/errors-to-values.js","/Users/anon/projects/my/kefir/src/one-source/end-on-error.js","/Users/anon/projects/my/kefir/src/index.js","/Users/anon/projects/my/kefir/src/constants.js","/Users/anon/projects/my/kefir/node_modules/symbol-observable/lib/ponyfill.js","/Users/anon/projects/my/kefir/node_modules/symbol-observable/lib/index.js","/Users/anon/projects/my/kefir/node_modules/symbol-observable/index.js","/Users/anon/projects/my/kefir/src/interop/static-land.js","/Users/anon/projects/my/kefir/src/utils/now.js"],"sourcesContent":["function createObj(proto) {\n  let F = function() {};\n  F.prototype = proto;\n  return new F();\n}\n\nfunction extend(target /*, mixin1, mixin2...*/) {\n  let length = arguments.length\n    , i, prop;\n  for (i = 1; i < length; i++) {\n    for (prop in arguments[i]) {\n      target[prop] = arguments[i][prop];\n    }\n  }\n  return target;\n}\n\nfunction inherit(Child, Parent /*, mixin1, mixin2...*/) {\n  let length = arguments.length\n    , i;\n  Child.prototype = createObj(Parent.prototype);\n  Child.prototype.constructor = Child;\n  for (i = 2; i < length; i++) {\n    extend(Child.prototype, arguments[i]);\n  }\n  return Child;\n}\n\nexport {extend, inherit};\n","function concat(a, b) {\n  let result, length, i, j;\n  if (a.length === 0) {\n    return b;\n  }\n  if (b.length === 0) {\n    return a;\n  }\n  j = 0;\n  result = new Array(a.length + b.length);\n  length = a.length;\n  for (i = 0; i < length; i++, j++) {\n    result[j] = a[i];\n  }\n  length = b.length;\n  for (i = 0; i < length; i++, j++) {\n    result[j] = b[i];\n  }\n  return result;\n}\n\nfunction circleShift(arr, distance) {\n  let length = arr.length\n    , result = new Array(length)\n    , i;\n  for (i = 0; i < length; i++) {\n    result[(i + distance) % length] = arr[i];\n  }\n  return result;\n}\n\nfunction find(arr, value) {\n  let length = arr.length\n    , i;\n  for (i = 0; i < length; i++) {\n    if (arr[i] === value) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction findByPred(arr, pred) {\n  let length = arr.length\n    , i;\n  for (i = 0; i < length; i++) {\n    if (pred(arr[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction cloneArray(input) {\n  let length = input.length\n    , result = new Array(length)\n    , i;\n  for (i = 0; i < length; i++) {\n    result[i] = input[i];\n  }\n  return result;\n}\n\nfunction remove(input, index) {\n  let length = input.length\n    , result, i, j;\n  if (index >= 0 && index < length) {\n    if (length === 1) {\n      return [];\n    } else {\n      result = new Array(length - 1);\n      for (i = 0, j = 0; i < length; i++) {\n        if (i !== index) {\n          result[j] = input[i];\n          j++;\n        }\n      }\n      return result;\n    }\n  } else {\n    return input;\n  }\n}\n\nfunction removeByPred(input, pred) {\n  return remove(input, findByPred(input, pred));\n}\n\nfunction map(input, fn) {\n  let length = input.length\n    , result = new Array(length)\n    , i;\n  for (i = 0; i < length; i++) {\n    result[i] = fn(input[i]);\n  }\n  return result;\n}\n\nfunction forEach(arr, fn) {\n  let length = arr.length\n    , i;\n  for (i = 0; i < length; i++) {\n    fn(arr[i]);\n  }\n}\n\nfunction fillArray(arr, value) {\n  let length = arr.length\n    , i;\n  for (i = 0; i < length; i++) {\n    arr[i] = value;\n  }\n}\n\nfunction contains(arr, value) {\n  return find(arr, value) !== -1;\n}\n\nfunction slide(cur, next, max) {\n  let length = Math.min(max, cur.length + 1),\n      offset = cur.length - length + 1,\n      result = new Array(length),\n      i;\n  for (i = offset; i < length; i++) {\n    result[i - offset] = cur[i];\n  }\n  result[length - 1] = next;\n  return result;\n}\n\n\n\n\nexport {\n  concat,\n  circleShift,\n  find,\n  findByPred,\n  cloneArray,\n  remove,\n  removeByPred,\n  map,\n  forEach,\n  fillArray,\n  contains,\n  slide\n};\n","import {extend} from './utils/objects';\nimport {VALUE, ERROR, ANY} from './constants';\nimport {concat, findByPred, remove, contains} from './utils/collections';\n\nfunction callSubscriber(type, fn, event) {\n  if (type === ANY) {\n    fn(event);\n  } else if (type === event.type) {\n    if (type === VALUE || type === ERROR) {\n      fn(event.value);\n    } else {\n      fn();\n    }\n  }\n}\n\nfunction Dispatcher() {\n  this._items = [];\n  this._inLoop = 0;\n  this._removedItems = null;\n}\n\nextend(Dispatcher.prototype, {\n\n  add(type, fn) {\n    this._items = concat(this._items, [{type, fn}]);\n    return this._items.length;\n  },\n\n  remove(type, fn) {\n    const index = findByPred(this._items, (x) => x.type === type && x.fn === fn);\n\n    // if we're currently in a notification loop,\n    // remember this subscriber was removed\n    if (this._inLoop !== 0 && index !== -1) {\n      if (this._removedItems === null) {\n        this._removedItems = [];\n      }\n      this._removedItems.push(this._items[index]);\n    }\n\n    this._items = remove(this._items, index);\n    return this._items.length;\n  },\n\n  dispatch(event) {\n    this._inLoop++;\n    for (let i = 0, items = this._items; i < items.length; i++) {\n\n      // cleanup was called\n      if (this._items === null) {\n        break;\n      }\n\n      // this subscriber was removed\n      if (this._removedItems !== null && contains(this._removedItems, items[i])) {\n        continue;\n      }\n\n      callSubscriber(items[i].type, items[i].fn, event);\n    }\n    this._inLoop--;\n    if (this._inLoop === 0) {\n      this._removedItems = null;\n    }\n  },\n\n  cleanup() {\n    this._items = null;\n  }\n\n});\n\n\nexport {callSubscriber, Dispatcher};\n","import {extend} from './utils/objects';\nimport {VALUE, ERROR, ANY, END} from './constants';\nimport {Dispatcher, callSubscriber} from './dispatcher';\nimport {findByPred} from './utils/collections';\n\n\n\nfunction Observable() {\n  this._dispatcher = new Dispatcher();\n  this._active = false;\n  this._alive = true;\n  this._activating = false;\n  this._logHandlers = null;\n}\n\nextend(Observable.prototype, {\n\n  _name: 'observable',\n\n  _onActivation() {},\n  _onDeactivation() {},\n\n  _setActive(active) {\n    if (this._active !== active) {\n      this._active = active;\n      if (active) {\n        this._activating = true;\n        this._onActivation();\n        this._activating = false;\n      } else {\n        this._onDeactivation();\n      }\n    }\n  },\n\n  _clear() {\n    this._setActive(false);\n    this._dispatcher.cleanup();\n    this._dispatcher = null;\n    this._logHandlers = null;\n  },\n\n  _emit(type, x) {\n    switch (type) {\n      case VALUE: return this._emitValue(x);\n      case ERROR: return this._emitError(x);\n      case END: return this._emitEnd();\n    }\n  },\n\n  _emitValue(value) {\n    if (this._alive) {\n      this._dispatcher.dispatch({type: VALUE, value});\n    }\n  },\n\n  _emitError(value) {\n    if (this._alive) {\n      this._dispatcher.dispatch({type: ERROR, value});\n    }\n  },\n\n  _emitEnd() {\n    if (this._alive) {\n      this._alive = false\n      this._dispatcher.dispatch({type: END});\n      this._clear();\n    }\n  },\n\n  _on(type, fn) {\n    if (this._alive) {\n      this._dispatcher.add(type, fn);\n      this._setActive(true);\n    } else {\n      callSubscriber(type, fn, {type: END});\n    }\n    return this;\n  },\n\n  _off(type, fn) {\n    if (this._alive) {\n      let count = this._dispatcher.remove(type, fn);\n      if (count === 0) {\n        this._setActive(false);\n      }\n    }\n    return this;\n  },\n\n  onValue(fn) {\n    return this._on(VALUE, fn);\n  },\n  onError(fn) {\n    return this._on(ERROR, fn);\n  },\n  onEnd(fn) {\n    return this._on(END, fn);\n  },\n  onAny(fn) {\n    return this._on(ANY, fn);\n  },\n\n  offValue(fn) {\n    return this._off(VALUE, fn);\n  },\n  offError(fn) {\n    return this._off(ERROR, fn);\n  },\n  offEnd(fn) {\n    return this._off(END, fn);\n  },\n  offAny(fn) {\n    return this._off(ANY, fn);\n  },\n\n  observe(observerOrOnValue, onError, onEnd) {\n    const _this = this;\n    let closed = false;\n\n    const observer = !observerOrOnValue || typeof observerOrOnValue === 'function'\n      ? {value: observerOrOnValue, error: onError, end: onEnd}\n      : observerOrOnValue;\n\n    const handler = function(event) {\n      if (event.type === END) {\n        closed = true;\n      }\n      if (event.type === VALUE && observer.value) {\n        observer.value(event.value);\n      } else if (event.type === ERROR && observer.error) {\n        observer.error(event.value);\n      } else if (event.type === END && observer.end) {\n        observer.end(event.value);\n      }\n    };\n\n    this.onAny(handler);\n\n    return {\n      unsubscribe() {\n        if (!closed) {\n          _this.offAny(handler);\n          closed = true;\n        }\n      },\n      get closed() {\n        return closed;\n      }\n    };\n  },\n\n  // A and B must be subclasses of Stream and Property (order doesn't matter)\n  _ofSameType(A, B) {\n    return A.prototype.getType() === this.getType() ? A : B;\n  },\n\n  setName(sourceObs /* optional */, selfName) {\n    this._name = selfName ? `${sourceObs._name}.${selfName}` : sourceObs;\n    return this;\n  },\n\n\n  log(name = this.toString()) {\n\n    let isCurrent\n    let handler = function(event) {\n      let type = `<${event.type}${isCurrent ? ':current' : ''}>`;\n      if (event.type === END) {\n        console.log(name, type);\n      } else {\n        console.log(name, type, event.value);\n      }\n    };\n\n    if (this._alive) {\n      if (!this._logHandlers) {\n        this._logHandlers = [];\n      }\n      this._logHandlers.push({name: name, handler: handler});\n    }\n\n    isCurrent = true;\n    this.onAny(handler);\n    isCurrent = false;\n\n    return this;\n  },\n\n  offLog(name = this.toString()) {\n\n    if (this._logHandlers) {\n      let handlerIndex = findByPred(this._logHandlers, obj => obj.name === name);\n      if (handlerIndex !== -1) {\n        this.offAny(this._logHandlers[handlerIndex].handler);\n        this._logHandlers.splice(handlerIndex, 1);\n      }\n    }\n\n    return this;\n  }\n});\n\n// extend() can't handle `toString` in IE8\nObservable.prototype.toString = function() {\n  return `[${this._name}]`;\n};\n\n\nexport default Observable;\n","import {inherit} from './utils/objects';\nimport Observable from './observable';\n\n\nfunction Stream() {\n  Observable.call(this);\n}\n\ninherit(Stream, Observable, {\n\n  _name: 'stream',\n\n  getType() {\n    return 'stream';\n  }\n\n});\n\nexport default Stream;\n","import {inherit} from './utils/objects';\nimport {VALUE, ERROR, END} from './constants';\nimport {callSubscriber} from './dispatcher';\nimport Observable from './observable';\n\n\n\nfunction Property() {\n  Observable.call(this);\n  this._currentEvent = null;\n}\n\ninherit(Property, Observable, {\n\n  _name: 'property',\n\n  _emitValue(value) {\n    if (this._alive) {\n      this._currentEvent = {type: VALUE, value};\n      if (!this._activating) {\n        this._dispatcher.dispatch({type: VALUE, value});\n      }\n    }\n  },\n\n  _emitError(value) {\n    if (this._alive) {\n      this._currentEvent = {type: ERROR, value};\n      if (!this._activating) {\n        this._dispatcher.dispatch({type: ERROR, value});\n      }\n    }\n  },\n\n  _emitEnd() {\n    if (this._alive) {\n      this._alive = false\n      if (!this._activating) {\n        this._dispatcher.dispatch({type: END});\n      }\n      this._clear();\n    }\n  },\n\n\n  _on(type, fn) {\n    if (this._alive) {\n      this._dispatcher.add(type, fn);\n      this._setActive(true);\n    }\n    if (this._currentEvent !== null) {\n      callSubscriber(type, fn, this._currentEvent);\n    }\n    if (!this._alive) {\n      callSubscriber(type, fn, {type: END});\n    }\n    return this;\n  },\n\n  getType() {\n    return 'property';\n  }\n\n});\n\nexport default Property;\n\n\n\n\n\n\n","import Stream from '../stream';\n\n\nconst neverS = new Stream();\nneverS._emitEnd();\nneverS._name = 'never';\n\nexport default function never() {\n  return neverS;\n}\n","import {inherit} from '../utils/objects';\nimport Stream from '../stream';\n\nexport default function timeBased(mixin) {\n\n  function AnonymousStream(wait, options) {\n    Stream.call(this);\n    this._wait = wait;\n    this._intervalId = null;\n    this._$onTick = () => this._onTick();\n    this._init(options);\n  }\n\n  inherit(AnonymousStream, Stream, {\n\n    _init() {},\n    _free() {},\n\n    _onTick() {},\n\n    _onActivation() {\n      this._intervalId = setInterval(this._$onTick, this._wait);\n    },\n\n    _onDeactivation() {\n      if (this._intervalId !== null) {\n        clearInterval(this._intervalId);\n        this._intervalId = null;\n      }\n    },\n\n    _clear() {\n      Stream.prototype._clear.call(this);\n      this._$onTick = null;\n      this._free();\n    }\n\n  }, mixin);\n\n  return AnonymousStream;\n}\n","import timeBased from '../patterns/time-based';\n\nconst S = timeBased({\n\n  _name: 'later',\n\n  _init({x}) {\n    this._x = x;\n  },\n\n  _free() {\n    this._x = null;\n  },\n\n  _onTick() {\n    this._emitValue(this._x);\n    this._emitEnd();\n  }\n\n});\n\n\nexport default function later(wait, x) {\n  return new S(wait, {x});\n}\n","import timeBased from '../patterns/time-based';\n\nconst S = timeBased({\n\n  _name: 'interval',\n\n  _init({x}) {\n    this._x = x;\n  },\n\n  _free() {\n    this._x = null;\n  },\n\n  _onTick() {\n    this._emitValue(this._x);\n  }\n\n});\n\n\nexport default function interval(wait, x) {\n  return new S(wait, {x});\n}\n","import timeBased from '../patterns/time-based';\nimport {cloneArray} from '../utils/collections';\nimport never from '../primary/never';\n\nconst S = timeBased({\n\n  _name: 'sequentially',\n\n  _init({xs}) {\n    this._xs = cloneArray(xs);\n  },\n\n  _free() {\n    this._xs = null;\n  },\n\n  _onTick() {\n    if (this._xs.length === 1) {\n      this._emitValue(this._xs[0]);\n      this._emitEnd();\n    } else {\n      this._emitValue(this._xs.shift());\n    }\n  }\n\n});\n\n\nexport default function sequentially(wait, xs) {\n  return xs.length === 0 ? never() : new S(wait, {xs});\n}\n","import timeBased from '../patterns/time-based';\n\nconst S = timeBased({\n\n  _name: 'fromPoll',\n\n  _init({fn}) {\n    this._fn = fn;\n  },\n\n  _free() {\n    this._fn = null;\n  },\n\n  _onTick() {\n    const fn = this._fn;\n    this._emitValue(fn());\n  }\n\n});\n\n\nexport default function fromPoll(wait, fn) {\n  return new S(wait, {fn});\n}\n","export default function emitter(obs) {\n\n  function value(x) {\n    obs._emitValue(x);\n    return obs._active;\n  }\n\n  function error(x) {\n    obs._emitError(x);\n    return obs._active;\n  }\n\n  function end() {\n    obs._emitEnd();\n    return obs._active;\n  }\n\n  function event(e) {\n    obs._emit(e.type, e.value);\n    return obs._active;\n  }\n\n  return {\n    value,\n    error,\n    end,\n    event,\n\n    // legacy\n    emit: value,\n    emitEvent: event\n  };\n}\n","import timeBased from '../patterns/time-based';\nimport emitter from '../emitter';\n\n\nconst S = timeBased({\n\n  _name: 'withInterval',\n\n  _init({fn}) {\n    this._fn = fn;\n    this._emitter = emitter(this);\n  },\n\n  _free() {\n    this._fn = null;\n    this._emitter = null;\n  },\n\n  _onTick() {\n    const fn = this._fn;\n    fn(this._emitter);\n  }\n\n});\n\n\nexport default function withInterval(wait, fn) {\n  return new S(wait, {fn});\n}\n","import {inherit} from '../utils/objects';\nimport Stream from '../stream';\nimport emitter from '../emitter';\n\nfunction S(fn) {\n  Stream.call(this);\n  this._fn = fn;\n  this._unsubscribe = null;\n}\n\ninherit(S, Stream, {\n\n  _name: 'stream',\n\n  _onActivation() {\n    const fn = this._fn;\n    const unsubscribe = fn(emitter(this));\n    this._unsubscribe = (typeof unsubscribe === 'function') ? unsubscribe : null;\n\n    // fix https://github.com/rpominov/kefir/issues/35\n    if (!this._active) {\n      this._callUnsubscribe();\n    }\n  },\n\n  _callUnsubscribe() {\n    if (this._unsubscribe !== null) {\n      this._unsubscribe();\n      this._unsubscribe = null;\n    }\n  },\n\n  _onDeactivation() {\n    this._callUnsubscribe();\n  },\n\n  _clear() {\n    Stream.prototype._clear.call(this);\n    this._fn = null;\n  }\n\n});\n\nexport default function stream(fn) {\n  return new S(fn);\n}\n","import stream from './stream';\n\nexport default function fromCallback(callbackConsumer) {\n\n  let called = false;\n\n  return stream(function(emitter) {\n\n    if (!called) {\n      callbackConsumer(function(x) {\n        emitter.emit(x);\n        emitter.end();\n      });\n      called = true;\n    }\n\n  }).setName('fromCallback');\n}\n","import stream from './stream';\n\nexport default function fromNodeCallback(callbackConsumer) {\n\n  let called = false;\n\n  return stream(function(emitter) {\n\n    if (!called) {\n      callbackConsumer(function(error, x) {\n        if (error) {\n          emitter.error(error);\n        } else {\n          emitter.emit(x);\n        }\n        emitter.end();\n      });\n      called = true;\n    }\n\n  }).setName('fromNodeCallback');\n\n}\n","function spread(fn, length) {\n  switch(length) {\n    case 0: return function() {return fn();};\n    case 1: return function(a) {return fn(a[0]);};\n    case 2: return function(a) {return fn(a[0], a[1]);};\n    case 3: return function(a) {return fn(a[0], a[1], a[2]);};\n    case 4: return function(a) {return fn(a[0], a[1], a[2], a[3]);};\n    default: return function(a) {return fn.apply(null, a);};\n  }\n}\n\nfunction apply(fn, c, a) {\n  let aLength = a ? a.length : 0;\n  if (c == null) {\n    switch (aLength) {\n      case 0: return fn();\n      case 1: return fn(a[0]);\n      case 2: return fn(a[0], a[1]);\n      case 3: return fn(a[0], a[1], a[2]);\n      case 4: return fn(a[0], a[1], a[2], a[3]);\n      default: return fn.apply(null, a);\n    }\n  } else {\n    switch (aLength) {\n      case 0: return fn.call(c);\n      default: return fn.apply(c, a);\n    }\n  }\n}\n\nexport {spread, apply};\n","import stream from './stream';\nimport {apply} from '../utils/functions';\n\nexport default function fromSubUnsub(sub, unsub, transformer /* Function | falsey */) {\n  return stream(function(emitter) {\n\n    let handler = transformer\n      ? function() {\n        emitter.emit(apply(transformer, this, arguments));\n      }\n      : x => {\n        emitter.emit(x)\n      };\n\n    sub(handler);\n    return () => unsub(handler);\n\n  }).setName('fromSubUnsub');\n}\n","import fromSubUnsub from './from-sub-unsub';\n\nconst pairs = [\n  ['addEventListener', 'removeEventListener'],\n  ['addListener', 'removeListener'],\n  ['on', 'off']\n];\n\nexport default function fromEvents(target, eventName, transformer) {\n  let sub, unsub;\n\n  for (let i = 0; i < pairs.length; i++) {\n    if (typeof target[pairs[i][0]] === 'function' && typeof target[pairs[i][1]] === 'function') {\n      sub = pairs[i][0];\n      unsub = pairs[i][1];\n      break;\n    }\n  }\n\n  if (sub === undefined) {\n    throw new Error('target don\\'t support any of ' +\n      'addEventListener/removeEventListener, addListener/removeListener, on/off method pair');\n  }\n\n  return fromSubUnsub(\n    (handler) => target[sub](eventName, handler),\n    (handler) => target[unsub](eventName, handler),\n    transformer\n  ).setName('fromEvents');\n}\n","import {inherit} from '../utils/objects';\nimport Property from '../property';\n\n// HACK:\n//   We don't call parent Class constructor, but instead putting all necessary\n//   properties into prototype to simulate ended Property\n//   (see Propperty and Observable classes).\n\nfunction P(value) {\n  this._currentEvent = {type: 'value', value, current: true};\n}\n\ninherit(P, Property, {\n  _name: 'constant',\n  _active: false,\n  _activating: false,\n  _alive: false,\n  _dispatcher: null,\n  _logHandlers: null\n});\n\nexport default function constant(x) {\n  return new P(x);\n}\n","import {inherit} from '../utils/objects';\nimport Property from '../property';\n\n\n// HACK:\n//   We don't call parent Class constructor, but instead putting all necessary\n//   properties into prototype to simulate ended Property\n//   (see Propperty and Observable classes).\n\nfunction P(value) {\n  this._currentEvent = {type: 'error', value, current: true};\n}\n\ninherit(P, Property, {\n  _name: 'constantError',\n  _active: false,\n  _activating: false,\n  _alive: false,\n  _dispatcher: null,\n  _logHandlers: null\n});\n\nexport default function constantError(x) {\n  return new P(x);\n}\n","import Stream from '../stream';\nimport Property from '../property';\nimport {inherit} from '../utils/objects';\nimport {VALUE, ERROR, END} from '../constants';\n\n\nfunction createConstructor(BaseClass, name) {\n  return function AnonymousObservable(source, options) {\n    BaseClass.call(this);\n    this._source = source;\n    this._name = `${source._name}.${name}`;\n    this._init(options);\n    this._$handleAny = (event) => this._handleAny(event);\n  }\n}\n\nfunction createClassMethods(BaseClass) {\n  return {\n\n    _init() {},\n    _free() {},\n\n    _handleValue(x) {\n      this._emitValue(x);\n    },\n    _handleError(x) {\n      this._emitError(x);\n    },\n    _handleEnd() {\n      this._emitEnd();\n    },\n\n    _handleAny(event) {\n      switch (event.type) {\n        case VALUE: return this._handleValue(event.value);\n        case ERROR: return this._handleError(event.value);\n        case END: return this._handleEnd();\n      }\n    },\n\n    _onActivation() {\n      this._source.onAny(this._$handleAny);\n    },\n    _onDeactivation() {\n      this._source.offAny(this._$handleAny);\n    },\n\n    _clear() {\n      BaseClass.prototype._clear.call(this);\n      this._source = null;\n      this._$handleAny = null;\n      this._free();\n    }\n\n  };\n}\n\n\n\nfunction createStream(name, mixin) {\n  const S = createConstructor(Stream, name);\n  inherit(S, Stream, createClassMethods(Stream), mixin);\n  return S;\n}\n\n\nfunction createProperty(name, mixin) {\n  const P = createConstructor(Property, name);\n  inherit(P, Property, createClassMethods(Property), mixin);\n  return P;\n}\n\n\nexport {createStream, createProperty};\n","import {createProperty} from '../patterns/one-source';\n\n\nconst P = createProperty('toProperty', {\n\n  _init({fn}) {\n    this._getInitialCurrent = fn;\n  },\n\n  _onActivation() {\n    if (this._getInitialCurrent !== null) {\n      const getInitial = this._getInitialCurrent;\n      this._emitValue(getInitial());\n    }\n    this._source.onAny(this._$handleAny);  // copied from patterns/one-source\n  }\n\n});\n\n\n\nexport default function toProperty(obs, fn = null) {\n  if (fn !== null && typeof fn !== 'function') {\n    throw new Error('You should call toProperty() with a function or no arguments.');\n  }\n  return new P(obs, {fn});\n}\n","import {createStream} from '../patterns/one-source';\n\n\n\nconst S = createStream('changes', {\n\n  _handleValue(x) {\n    if (!this._activating) {\n      this._emitValue(x);\n    }\n  },\n\n  _handleError(x) {\n    if (!this._activating) {\n      this._emitError(x);\n    }\n  }\n\n});\n\n\nexport default function changes(obs) {\n  return new S(obs);\n}\n","import stream from '../primary/stream';\nimport toProperty from '../one-source/to-property';\n\nexport default function fromPromise(promise) {\n\n  let called = false;\n\n  let result = stream(function(emitter) {\n    if (!called) {\n      let onValue = function(x) {\n        emitter.emit(x);\n        emitter.end();\n      };\n      let onError = function(x) {\n        emitter.error(x);\n        emitter.end();\n      };\n      let _promise = promise.then(onValue, onError);\n\n      // prevent libraries like 'Q' or 'when' from swallowing exceptions\n      if (_promise && typeof _promise.done === 'function') {\n        _promise.done();\n      }\n\n      called = true;\n    }\n  })\n\n  return toProperty(result, null).setName('fromPromise');\n\n}\n","import {VALUE, END} from '../constants';\n\nfunction getGlodalPromise() {\n  if (typeof Promise === 'function') {\n    return Promise;\n  } else {\n    throw new Error('There isn\\'t default Promise, use shim or parameter');\n  }\n}\n\nexport default function(obs, Promise = getGlodalPromise()) {\n  let last = null;\n  return new Promise((resolve, reject) => {\n    obs.onAny(event => {\n      if (event.type === END && last !== null) {\n        (last.type === VALUE ? resolve : reject)(last.value);\n        last = null;\n      } else {\n        last = event;\n      }\n    });\n  });\n}\n","import stream from '../primary/stream';\nimport $$observable from 'symbol-observable';\n\nexport default function fromESObservable(_observable) {\n  const observable = _observable[$$observable] ? _observable[$$observable]() : _observable;\n  return stream(function(emitter) {\n    const unsub = observable.subscribe({\n      error(error) {\n        emitter.error(error);\n        emitter.end();\n      },\n      next(value) {\n        emitter.emit(value);\n      },\n      complete() {\n        emitter.end();\n      }\n    })\n\n    if (unsub.unsubscribe) {\n      return function () { unsub.unsubscribe(); };\n    } else {\n      return unsub;\n    }\n  }).setName('fromESObservable');\n}\n","import $$observable from 'symbol-observable';\nimport {extend} from '../utils/objects';\nimport {VALUE, ERROR, END} from '../constants';\n\nfunction ESObservable(observable) {\n  this._observable = observable.takeErrors(1);\n}\n\nextend(ESObservable.prototype, {\n  subscribe(observerOrOnNext, onError, onComplete) {\n\n    const observer = typeof observerOrOnNext === 'function'\n      ? {next: observerOrOnNext, error: onError, complete: onComplete}\n      : observerOrOnNext\n\n    const fn = event => {\n      if (event.type === END) {\n        closed = true;\n      }\n\n      if (event.type === VALUE && observer.next) {\n        observer.next(event.value);\n      } else if (event.type === ERROR && observer.error) {\n        observer.error(event.value);\n      } else if (event.type === END && observer.complete) {\n        observer.complete(event.value);\n      }\n    }\n\n    this._observable.onAny(fn);\n    let closed = false\n\n    const subscription = {\n      unsubscribe: () => {\n        closed = true;\n        this._observable.offAny(fn);\n      },\n      get closed() {\n        return closed\n      }\n    };\n    return subscription;\n\n  }\n});\n\n// Need to assign directly b/c Symbols aren't enumerable.\nESObservable.prototype[$$observable] = function() {\n  return this;\n};\n\nexport default function toESObservable() {\n  return new ESObservable(this);\n}\n","import Stream from '../stream';\nimport {VALUE, ERROR, NOTHING} from '../constants';\nimport {inherit} from '../utils/objects';\nimport {concat, fillArray} from '../utils/collections';\nimport {spread} from '../utils/functions';\nimport never from '../primary/never';\n\n\n\nfunction defaultErrorsCombinator(errors) {\n  let latestError;\n  for (let i = 0; i < errors.length; i++) {\n    if (errors[i] !== undefined) {\n      if (latestError === undefined || latestError.index < errors[i].index) {\n        latestError = errors[i];\n      }\n    }\n  }\n  return latestError.error;\n}\n\nfunction Combine(active, passive, combinator) {\n  Stream.call(this);\n  this._activeCount = active.length;\n  this._sources = concat(active, passive);\n  this._combinator = combinator ? spread(combinator, this._sources.length) : (x => x);\n  this._aliveCount = 0;\n  this._latestValues = new Array(this._sources.length);\n  this._latestErrors = new Array(this._sources.length);\n  fillArray(this._latestValues, NOTHING);\n  this._emitAfterActivation = false;\n  this._endAfterActivation = false;\n  this._latestErrorIndex = 0;\n\n  this._$handlers = [];\n  for (let i = 0; i < this._sources.length; i++) {\n    this._$handlers.push((event) => this._handleAny(i, event));\n  }\n\n}\n\n\ninherit(Combine, Stream, {\n\n  _name: 'combine',\n\n  _onActivation() {\n    this._aliveCount = this._activeCount;\n\n    // we need to suscribe to _passive_ sources before _active_\n    // (see https://github.com/rpominov/kefir/issues/98)\n    for (let i = this._activeCount; i < this._sources.length; i++) {\n      this._sources[i].onAny(this._$handlers[i]);\n    }\n    for (let i = 0; i < this._activeCount; i++) {\n      this._sources[i].onAny(this._$handlers[i]);\n    }\n\n    if (this._emitAfterActivation) {\n      this._emitAfterActivation = false;\n      this._emitIfFull();\n    }\n    if (this._endAfterActivation) {\n      this._emitEnd();\n    }\n  },\n\n  _onDeactivation() {\n    let length = this._sources.length,\n        i;\n    for (i = 0; i < length; i++) {\n      this._sources[i].offAny(this._$handlers[i]);\n    }\n  },\n\n  _emitIfFull() {\n    let hasAllValues = true;\n    let hasErrors = false;\n    let length = this._latestValues.length;\n    let valuesCopy = new Array(length);\n    let errorsCopy = new Array(length);\n\n    for (let i = 0; i < length; i++) {\n      valuesCopy[i] = this._latestValues[i];\n      errorsCopy[i] = this._latestErrors[i];\n\n      if (valuesCopy[i] === NOTHING) {\n        hasAllValues = false;\n      }\n\n      if (errorsCopy[i] !== undefined) {\n        hasErrors = true;\n      }\n    }\n\n    if (hasAllValues) {\n      const combinator = this._combinator;\n      this._emitValue(combinator(valuesCopy));\n    }\n    if (hasErrors) {\n      this._emitError(defaultErrorsCombinator(errorsCopy));\n    }\n  },\n\n  _handleAny(i, event) {\n\n    if (event.type === VALUE || event.type === ERROR) {\n\n      if (event.type === VALUE) {\n        this._latestValues[i] = event.value;\n        this._latestErrors[i] = undefined;\n      }\n      if (event.type === ERROR) {\n        this._latestValues[i] = NOTHING;\n        this._latestErrors[i] = {\n          index: this._latestErrorIndex++,\n          error: event.value\n        };\n      }\n\n      if (i < this._activeCount) {\n        if (this._activating) {\n          this._emitAfterActivation = true;\n        } else {\n          this._emitIfFull();\n        }\n      }\n\n    } else { // END\n\n      if (i < this._activeCount) {\n        this._aliveCount--;\n        if (this._aliveCount === 0) {\n          if (this._activating) {\n            this._endAfterActivation = true;\n          } else {\n            this._emitEnd();\n          }\n        }\n      }\n\n    }\n  },\n\n  _clear() {\n    Stream.prototype._clear.call(this);\n    this._sources = null;\n    this._latestValues = null;\n    this._latestErrors = null;\n    this._combinator = null;\n    this._$handlers = null;\n  }\n\n});\n\n\nexport default function combine(active, passive = [], combinator) {\n  if (typeof passive === 'function') {\n    combinator = passive;\n    passive = [];\n  }\n  return active.length === 0 ? never() : new Combine(active, passive, combinator);\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._fn = fn;\n  },\n\n  _free() {\n    this._fn = null;\n  },\n\n  _handleValue(x) {\n    const fn = this._fn;\n    this._emitValue(fn(x));\n  }\n\n};\n\nconst S = createStream('map', mixin);\nconst P = createProperty('map', mixin);\n\n\nconst id = x => x;\n\nexport default function map(obs, fn = id) {\n  return new (obs._ofSameType(S, P))(obs, {fn});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._fn = fn;\n  },\n\n  _free() {\n    this._fn = null;\n  },\n\n  _handleValue(x) {\n    const fn = this._fn;\n    if (fn(x)) {\n      this._emitValue(x);\n    }\n  }\n\n};\n\nconst S = createStream('filter', mixin);\nconst P = createProperty('filter', mixin);\n\n\nconst id = x => x;\n\nexport default function filter(obs, fn = id) {\n  return new (obs._ofSameType(S, P))(obs, {fn});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({n}) {\n    this._n = n;\n    if (n <= 0) {\n      this._emitEnd();\n    }\n  },\n\n  _handleValue(x) {\n    this._n--;\n    this._emitValue(x);\n    if (this._n === 0) {\n      this._emitEnd();\n    }\n  }\n\n};\n\nconst S = createStream('take', mixin);\nconst P = createProperty('take', mixin);\n\n\nexport default function take(obs, n) {\n  return new (obs._ofSameType(S, P))(obs, {n});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({n}) {\n    this._n = n;\n    if (n <= 0) {\n      this._emitEnd();\n    }\n  },\n\n  _handleError(x) {\n    this._n--;\n    this._emitError(x);\n    if (this._n === 0) {\n      this._emitEnd();\n    }\n  }\n\n};\n\nconst S = createStream('takeErrors', mixin);\nconst P = createProperty('takeErrors', mixin);\n\n\nexport default function takeErrors(obs, n) {\n  return new (obs._ofSameType(S, P))(obs, {n});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._fn = fn;\n  },\n\n  _free() {\n    this._fn = null;\n  },\n\n  _handleValue(x) {\n    const fn = this._fn;\n    if (fn(x)) {\n      this._emitValue(x);\n    } else {\n      this._emitEnd();\n    }\n  }\n\n};\n\nconst S = createStream('takeWhile', mixin);\nconst P = createProperty('takeWhile', mixin);\n\n\nconst id = x => x;\n\nexport default function takeWhile(obs, fn = id) {\n  return new (obs._ofSameType(S, P))(obs, {fn});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\nimport {NOTHING} from '../constants';\n\nconst mixin = {\n\n  _init() {\n    this._lastValue = NOTHING;\n  },\n\n  _free() {\n    this._lastValue = null;\n  },\n\n  _handleValue(x) {\n    this._lastValue = x;\n  },\n\n  _handleEnd() {\n    if (this._lastValue !== NOTHING) {\n      this._emitValue(this._lastValue);\n    }\n    this._emitEnd();\n  }\n\n};\n\nconst S = createStream('last', mixin);\nconst P = createProperty('last', mixin);\n\n\nexport default function last(obs) {\n  return new (obs._ofSameType(S, P))(obs);\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({n}) {\n    this._n = Math.max(0, n);\n  },\n\n  _handleValue(x) {\n    if (this._n === 0) {\n      this._emitValue(x);\n    } else {\n      this._n--;\n    }\n  }\n\n};\n\nconst S = createStream('skip', mixin);\nconst P = createProperty('skip', mixin);\n\n\nexport default function skip(obs, n) {\n  return new (obs._ofSameType(S, P))(obs, {n});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._fn = fn;\n  },\n\n  _free() {\n    this._fn = null;\n  },\n\n  _handleValue(x) {\n    const fn = this._fn;\n    if (this._fn !== null && !fn(x)) {\n      this._fn = null;\n    }\n    if (this._fn === null) {\n      this._emitValue(x);\n    }\n  }\n\n};\n\nconst S = createStream('skipWhile', mixin);\nconst P = createProperty('skipWhile', mixin);\n\n\nconst id = x => x;\n\nexport default function skipWhile(obs, fn = id) {\n  return new (obs._ofSameType(S, P))(obs, {fn});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\nimport {NOTHING} from '../constants';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._fn = fn;\n    this._prev = NOTHING;\n  },\n\n  _free() {\n    this._fn = null;\n    this._prev = null;\n  },\n\n  _handleValue(x) {\n    const fn = this._fn;\n    if (this._prev === NOTHING || !fn(this._prev, x)) {\n      this._prev = x;\n      this._emitValue(x);\n    }\n  }\n\n};\n\nconst S = createStream('skipDuplicates', mixin);\nconst P = createProperty('skipDuplicates', mixin);\n\n\nconst eq = (a, b) => a === b;\n\nexport default function skipDuplicates(obs, fn = eq) {\n  return new (obs._ofSameType(S, P))(obs, {fn});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\nimport {NOTHING} from '../constants';\n\nconst mixin = {\n\n  _init({fn, seed}) {\n    this._fn = fn;\n    this._prev = seed;\n  },\n\n  _free() {\n    this._prev = null;\n    this._fn = null;\n  },\n\n  _handleValue(x) {\n    if (this._prev !== NOTHING) {\n      const fn = this._fn;\n      this._emitValue(fn(this._prev, x));\n    }\n    this._prev = x;\n  }\n\n};\n\nconst S = createStream('diff', mixin);\nconst P = createProperty('diff', mixin);\n\n\nfunction defaultFn(a, b) {\n  return [a, b];\n}\n\nexport default function diff(obs, fn, seed = NOTHING) {\n  return new (obs._ofSameType(S, P))(obs, {fn: fn || defaultFn, seed});\n}\n","import {createProperty} from '../patterns/one-source';\nimport {ERROR, NOTHING} from '../constants';\n\n\nconst P = createProperty('scan', {\n\n  _init({fn, seed}) {\n    this._fn = fn;\n    this._seed = seed;\n    if (seed !== NOTHING) {\n      this._emitValue(seed);\n    }\n  },\n\n  _free() {\n    this._fn = null;\n    this._seed = null;\n  },\n\n  _handleValue(x) {\n    const fn = this._fn;\n    if (this._currentEvent === null || this._currentEvent.type === ERROR) {\n      this._emitValue(this._seed === NOTHING ? x : fn(this._seed, x));\n    } else {\n      this._emitValue(fn(this._currentEvent.value, x));\n    }\n  }\n\n});\n\n\nexport default function scan(obs, fn, seed = NOTHING) {\n  return new P(obs, {fn, seed});\n}\n","import {createStream} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._fn = fn;\n  },\n\n  _free() {\n    this._fn = null;\n  },\n\n  _handleValue(x) {\n    const fn = this._fn;\n    const xs = fn(x);\n    for (let i = 0; i < xs.length; i++) {\n      this._emitValue(xs[i]);\n    }\n  }\n\n};\n\nconst S = createStream('flatten', mixin);\n\n\nconst id = x => x;\n\nexport default function flatten(obs, fn = id) {\n  return new S(obs, {fn});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst END_MARKER = {};\n\nconst mixin = {\n\n  _init({wait}) {\n    this._wait = Math.max(0, wait);\n    this._buff = [];\n    this._$shiftBuff = () => {\n      const value = this._buff.shift();\n      if (value === END_MARKER) {\n        this._emitEnd();\n      } else {\n        this._emitValue(value);\n      }\n    };\n  },\n\n  _free() {\n    this._buff = null;\n    this._$shiftBuff = null;\n  },\n\n  _handleValue(x) {\n    if (this._activating) {\n      this._emitValue(x);\n    } else {\n      this._buff.push(x);\n      setTimeout(this._$shiftBuff, this._wait);\n    }\n  },\n\n  _handleEnd() {\n    if (this._activating) {\n      this._emitEnd();\n    } else {\n      this._buff.push(END_MARKER);\n      setTimeout(this._$shiftBuff, this._wait);\n    }\n  }\n\n};\n\nconst S = createStream('delay', mixin);\nconst P = createProperty('delay', mixin);\n\nexport default function delay(obs, wait) {\n  return new (obs._ofSameType(S, P))(obs, {wait});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\nimport now from '../utils/now';\n\n\nconst mixin = {\n\n  _init({wait, leading, trailing}) {\n    this._wait = Math.max(0, wait);\n    this._leading = leading;\n    this._trailing = trailing;\n    this._trailingValue = null;\n    this._timeoutId = null;\n    this._endLater = false;\n    this._lastCallTime = 0;\n    this._$trailingCall = () => this._trailingCall();\n  },\n\n  _free() {\n    this._trailingValue = null;\n    this._$trailingCall = null;\n  },\n\n  _handleValue(x) {\n    if (this._activating) {\n      this._emitValue(x);\n    } else {\n      let curTime = now();\n      if (this._lastCallTime === 0 && !this._leading) {\n        this._lastCallTime = curTime;\n      }\n      let remaining = this._wait - (curTime - this._lastCallTime);\n      if (remaining <= 0) {\n        this._cancelTrailing();\n        this._lastCallTime = curTime;\n        this._emitValue(x);\n      } else if (this._trailing) {\n        this._cancelTrailing();\n        this._trailingValue = x;\n        this._timeoutId = setTimeout(this._$trailingCall, remaining);\n      }\n    }\n  },\n\n  _handleEnd() {\n    if (this._activating) {\n      this._emitEnd();\n    } else {\n      if (this._timeoutId) {\n        this._endLater = true;\n      } else {\n        this._emitEnd();\n      }\n    }\n  },\n\n  _cancelTrailing() {\n    if (this._timeoutId !== null) {\n      clearTimeout(this._timeoutId);\n      this._timeoutId = null;\n    }\n  },\n\n  _trailingCall() {\n    this._emitValue(this._trailingValue);\n    this._timeoutId = null;\n    this._trailingValue = null;\n    this._lastCallTime = !this._leading ? 0 : now();\n    if (this._endLater) {\n      this._emitEnd();\n    }\n  }\n\n};\n\nconst S = createStream('throttle', mixin);\nconst P = createProperty('throttle', mixin);\n\n\nexport default function throttle(obs, wait, {leading = true, trailing = true} = {}) {\n  return new (obs._ofSameType(S, P))(obs, {wait, leading, trailing});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\nimport now from '../utils/now';\n\n\nconst mixin = {\n\n  _init({wait, immediate}) {\n    this._wait = Math.max(0, wait);\n    this._immediate = immediate;\n    this._lastAttempt = 0;\n    this._timeoutId = null;\n    this._laterValue = null;\n    this._endLater = false;\n    this._$later = () => this._later();\n  },\n\n  _free() {\n    this._laterValue = null;\n    this._$later = null;\n  },\n\n  _handleValue(x) {\n    if (this._activating) {\n      this._emitValue(x);\n    } else {\n      this._lastAttempt = now();\n      if (this._immediate && !this._timeoutId) {\n        this._emitValue(x);\n      }\n      if (!this._timeoutId) {\n        this._timeoutId = setTimeout(this._$later, this._wait);\n      }\n      if (!this._immediate) {\n        this._laterValue = x;\n      }\n    }\n  },\n\n  _handleEnd() {\n    if (this._activating) {\n      this._emitEnd();\n    } else {\n      if (this._timeoutId && !this._immediate) {\n        this._endLater = true;\n      } else {\n        this._emitEnd();\n      }\n    }\n  },\n\n  _later() {\n    let last = now() - this._lastAttempt;\n    if (last < this._wait && last >= 0) {\n      this._timeoutId = setTimeout(this._$later, this._wait - last);\n    } else {\n      this._timeoutId = null;\n      if (!this._immediate) {\n        this._emitValue(this._laterValue);\n        this._laterValue = null;\n      }\n      if (this._endLater) {\n        this._emitEnd();\n      }\n    }\n  }\n\n};\n\nconst S = createStream('debounce', mixin);\nconst P = createProperty('debounce', mixin);\n\nexport default function debounce(obs, wait, {immediate = false} = {}) {\n  return new (obs._ofSameType(S, P))(obs, {wait, immediate});\n}\n\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._fn = fn;\n  },\n\n  _free() {\n    this._fn = null;\n  },\n\n  _handleError(x) {\n    const fn = this._fn;\n    this._emitError(fn(x));\n  }\n\n};\n\nconst S = createStream('mapErrors', mixin);\nconst P = createProperty('mapErrors', mixin);\n\n\nconst id = x => x;\n\nexport default function mapErrors(obs, fn = id) {\n  return new (obs._ofSameType(S, P))(obs, {fn});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._fn = fn;\n  },\n\n  _free() {\n    this._fn = null;\n  },\n\n  _handleError(x) {\n    const fn = this._fn;\n    if (fn(x)) {\n      this._emitError(x);\n    }\n  }\n\n};\n\nconst S = createStream('filterErrors', mixin);\nconst P = createProperty('filterErrors', mixin);\n\n\nconst id = x => x;\n\nexport default function filterErrors(obs, fn = id) {\n  return new (obs._ofSameType(S, P))(obs, {fn});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n  _handleValue() {}\n};\n\nconst S = createStream('ignoreValues', mixin);\nconst P = createProperty('ignoreValues', mixin);\n\n\nexport default function ignoreValues(obs) {\n  return new (obs._ofSameType(S, P))(obs);\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n  _handleError() {}\n};\n\nconst S = createStream('ignoreErrors', mixin);\nconst P = createProperty('ignoreErrors', mixin);\n\n\nexport default function ignoreErrors(obs) {\n  return new (obs._ofSameType(S, P))(obs);\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n  _handleEnd() {}\n};\n\nconst S = createStream('ignoreEnd', mixin);\nconst P = createProperty('ignoreEnd', mixin);\n\n\nexport default function ignoreEnd(obs) {\n  return new (obs._ofSameType(S, P))(obs);\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._fn = fn;\n  },\n\n  _free() {\n    this._fn = null;\n  },\n\n  _handleEnd() {\n    const fn = this._fn;\n    this._emitValue(fn());\n    this._emitEnd();\n  }\n\n};\n\nconst S = createStream('beforeEnd', mixin);\nconst P = createProperty('beforeEnd', mixin);\n\nexport default function beforeEnd(obs, fn) {\n  return new (obs._ofSameType(S, P))(obs, {fn});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\nimport {slide} from '../utils/collections';\n\nconst mixin = {\n\n  _init({min, max}) {\n    this._max = max;\n    this._min = min;\n    this._buff = [];\n  },\n\n  _free() {\n    this._buff = null;\n  },\n\n  _handleValue(x) {\n    this._buff = slide(this._buff, x, this._max);\n    if (this._buff.length >= this._min) {\n      this._emitValue(this._buff);\n    }\n  }\n\n};\n\nconst S = createStream('slidingWindow', mixin);\nconst P = createProperty('slidingWindow', mixin);\n\n\nexport default function slidingWindow(obs, max, min = 0) {\n  return new (obs._ofSameType(S, P))(obs, {min, max});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({fn, flushOnEnd}) {\n    this._fn = fn;\n    this._flushOnEnd = flushOnEnd;\n    this._buff = [];\n  },\n\n  _free() {\n    this._buff = null;\n  },\n\n  _flush() {\n    if (this._buff !== null && this._buff.length !== 0) {\n      this._emitValue(this._buff);\n      this._buff = [];\n    }\n  },\n\n  _handleValue(x) {\n    this._buff.push(x);\n    const fn = this._fn;\n    if (!fn(x)) {\n      this._flush();\n    }\n  },\n\n  _handleEnd() {\n    if (this._flushOnEnd) {\n      this._flush();\n    }\n    this._emitEnd();\n  }\n\n};\n\nconst S = createStream('bufferWhile', mixin);\nconst P = createProperty('bufferWhile', mixin);\n\n\nconst id = x => x;\n\nexport default function bufferWhile(obs, fn, {flushOnEnd = true} = {}) {\n  return new (obs._ofSameType(S, P))(obs, {fn: fn || id, flushOnEnd});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({count, flushOnEnd}) {\n    this._count = count;\n    this._flushOnEnd = flushOnEnd;\n    this._buff = [];\n  },\n\n  _free() {\n    this._buff = null;\n  },\n\n  _flush() {\n    if (this._buff !== null && this._buff.length !== 0) {\n      this._emitValue(this._buff);\n      this._buff = [];\n    }\n  },\n\n  _handleValue(x) {\n    this._buff.push(x);\n    if (this._buff.length >= this._count) {\n      this._flush();\n    }\n  },\n\n  _handleEnd() {\n    if (this._flushOnEnd) {\n      this._flush();\n    }\n    this._emitEnd();\n  }\n\n};\n\nconst S = createStream('bufferWithCount', mixin);\nconst P = createProperty('bufferWithCount', mixin);\n\nexport default function bufferWhile(obs, count, {flushOnEnd = true} = {}) {\n  return new (obs._ofSameType(S, P))(obs, {count: count, flushOnEnd});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({wait, count, flushOnEnd}) {\n    this._wait = wait;\n    this._count = count;\n    this._flushOnEnd = flushOnEnd;\n    this._intervalId = null;\n    this._$onTick = () => this._flush();\n    this._buff = [];\n  },\n\n  _free() {\n    this._$onTick = null;\n    this._buff = null;\n  },\n\n  _flush() {\n    if (this._buff !== null) {\n      this._emitValue(this._buff);\n      this._buff = [];\n    }\n  },\n\n  _handleValue(x) {\n    this._buff.push(x);\n    if (this._buff.length >= this._count) {\n      clearInterval(this._intervalId);\n      this._flush();\n      this._intervalId = setInterval(this._$onTick, this._wait);\n    }\n  },\n\n  _handleEnd() {\n    if (this._flushOnEnd && this._buff.length !== 0) {\n      this._flush();\n    }\n    this._emitEnd();\n  },\n\n  _onActivation() {\n    this._intervalId = setInterval(this._$onTick, this._wait);\n    this._source.onAny(this._$handleAny); // copied from patterns/one-source\n  },\n\n  _onDeactivation() {\n    if (this._intervalId !== null) {\n      clearInterval(this._intervalId);\n      this._intervalId = null;\n    }\n    this._source.offAny(this._$handleAny); // copied from patterns/one-source\n  }\n\n};\n\n\nconst S = createStream('bufferWithTimeOrCount', mixin);\nconst P = createProperty('bufferWithTimeOrCount', mixin);\n\nexport default function bufferWithTimeOrCount(obs, wait, count, {flushOnEnd = true} = {}) {\n  return new (obs._ofSameType(S, P))(obs, {wait, count, flushOnEnd});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nfunction xformForObs(obs) {\n  return {\n\n    '@@transducer/step'(res, input) {\n      obs._emitValue(input);\n      return null;\n    },\n\n    '@@transducer/result'() {\n      obs._emitEnd();\n      return null;\n    }\n\n  };\n}\n\nconst mixin = {\n\n  _init({transducer}) {\n    this._xform = transducer(xformForObs(this));\n  },\n\n  _free() {\n    this._xform = null;\n  },\n\n  _handleValue(x) {\n    if (this._xform['@@transducer/step'](null, x) !== null) {\n      this._xform['@@transducer/result'](null);\n    }\n  },\n\n  _handleEnd() {\n    this._xform['@@transducer/result'](null);\n  }\n\n};\n\nconst S = createStream('transduce', mixin);\nconst P = createProperty('transduce', mixin);\n\n\nexport default function transduce(obs, transducer) {\n  return new (obs._ofSameType(S, P))(obs, {transducer});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\nimport emitter from '../emitter';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._handler = fn;\n    this._emitter = emitter(this);\n  },\n\n  _free() {\n    this._handler = null;\n    this._emitter = null;\n  },\n\n  _handleAny(event) {\n    this._handler(this._emitter, event);\n  }\n\n};\n\nconst S = createStream('withHandler', mixin);\nconst P = createProperty('withHandler', mixin);\n\n\n\nexport default function withHandler(obs, fn) {\n  return new (obs._ofSameType(S, P))(obs, {fn});\n}\n","import Stream from '../stream';\nimport {VALUE, ERROR, END} from '../constants';\nimport {inherit} from '../utils/objects';\nimport {map, cloneArray} from '../utils/collections';\nimport {spread} from '../utils/functions';\nimport never from '../primary/never';\n\n\nconst isArray = Array.isArray || function(xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\nfunction Zip(sources, combinator) {\n  Stream.call(this);\n\n  this._buffers = map(sources, (source) => isArray(source) ? cloneArray(source) : []);\n  this._sources = map(sources, (source) => isArray(source) ? never() : source);\n\n  this._combinator = combinator ? spread(combinator, this._sources.length) : (x => x);\n  this._aliveCount = 0;\n\n  this._$handlers = [];\n  for (let i = 0; i < this._sources.length; i++) {\n    this._$handlers.push((event) => this._handleAny(i, event));\n  }\n}\n\n\ninherit(Zip, Stream, {\n\n  _name: 'zip',\n\n  _onActivation() {\n\n    // if all sources are arrays\n    while (this._isFull()) {\n      this._emit();\n    }\n\n    const length = this._sources.length;\n    this._aliveCount = length;\n    for (let i = 0; i < length && this._active; i++) {\n      this._sources[i].onAny(this._$handlers[i]);\n    }\n  },\n\n  _onDeactivation() {\n    for (let i = 0; i < this._sources.length; i++) {\n      this._sources[i].offAny(this._$handlers[i]);\n    }\n  },\n\n  _emit() {\n    let values = new Array(this._buffers.length);\n    for (let i = 0; i < this._buffers.length; i++) {\n      values[i] = this._buffers[i].shift();\n    }\n    const combinator = this._combinator;\n    this._emitValue(combinator(values));\n  },\n\n  _isFull() {\n    for (let i = 0; i < this._buffers.length; i++) {\n      if (this._buffers[i].length === 0) {\n        return false;\n      }\n    }\n    return true;\n  },\n\n  _handleAny(i, event) {\n    if (event.type === VALUE) {\n      this._buffers[i].push(event.value);\n      if (this._isFull()) {\n        this._emit();\n      }\n    }\n    if (event.type === ERROR) {\n      this._emitError(event.value);\n    }\n    if (event.type === END) {\n      this._aliveCount--;\n      if (this._aliveCount === 0) {\n        this._emitEnd();\n      }\n    }\n  },\n\n  _clear() {\n    Stream.prototype._clear.call(this);\n    this._sources = null;\n    this._buffers = null;\n    this._combinator = null;\n    this._$handlers = null;\n  }\n\n});\n\n\n\nexport default function zip(observables, combinator /* Function | falsey */) {\n  return observables.length === 0 ? never() : new Zip(observables, combinator);\n}\n","import Stream from '../stream';\nimport {VALUE, ERROR} from '../constants';\nimport {inherit} from '../utils/objects';\nimport {concat, forEach, findByPred, find, remove, cloneArray} from '../utils/collections';\n\nconst id = (x => x);\n\nfunction AbstractPool({queueLim = 0, concurLim = -1, drop = 'new'} = {}) {\n  Stream.call(this);\n\n  this._queueLim = queueLim < 0 ? -1 : queueLim;\n  this._concurLim = concurLim < 0 ? -1 : concurLim;\n  this._drop = drop;\n  this._queue = [];\n  this._curSources = [];\n  this._$handleSubAny = (event) => this._handleSubAny(event);\n  this._$endHandlers = [];\n  this._currentlyAdding = null;\n\n  if (this._concurLim === 0) {\n    this._emitEnd();\n  }\n}\n\ninherit(AbstractPool, Stream, {\n\n  _name: 'abstractPool',\n\n  _add(obj, toObs /* Function | falsey */) {\n    toObs = toObs || id;\n    if (this._concurLim === -1 || this._curSources.length < this._concurLim) {\n      this._addToCur(toObs(obj));\n    } else {\n      if (this._queueLim === -1 || this._queue.length < this._queueLim) {\n        this._addToQueue(toObs(obj));\n      } else if (this._drop === 'old') {\n        this._removeOldest();\n        this._add(obj, toObs);\n      }\n    }\n  },\n\n  _addAll(obss) {\n    forEach(obss, (obs) => this._add(obs));\n  },\n\n  _remove(obs) {\n    if (this._removeCur(obs) === -1) {\n      this._removeQueue(obs);\n    }\n  },\n\n  _addToQueue(obs) {\n    this._queue = concat(this._queue, [obs]);\n  },\n\n  _addToCur(obs) {\n    if (this._active) {\n\n      // HACK:\n      //\n      // We have two optimizations for cases when `obs` is ended. We don't want\n      // to add such observable to the list, but only want to emit events\n      // from it (if it has some).\n      //\n      // Instead of this hacks, we could just did following,\n      // but it would be 5-8 times slower:\n      //\n      //     this._curSources = concat(this._curSources, [obs]);\n      //     this._subscribe(obs);\n      //\n\n      // #1\n      // This one for cases when `obs` already ended\n      // e.g., Kefir.constant() or Kefir.never()\n      if (!obs._alive) {\n        if (obs._currentEvent) {\n          this._emit(obs._currentEvent.type, obs._currentEvent.value);\n        }\n        return;\n      }\n\n      // #2\n      // This one is for cases when `obs` going to end synchronously on\n      // first subscriber e.g., Kefir.stream(em => {em.emit(1); em.end()})\n      this._currentlyAdding = obs;\n      obs.onAny(this._$handleSubAny);\n      this._currentlyAdding = null;\n      if (obs._alive) {\n        this._curSources = concat(this._curSources, [obs]);\n        if (this._active) {\n          this._subToEnd(obs);\n        }\n      }\n\n    } else {\n      this._curSources = concat(this._curSources, [obs]);\n    }\n  },\n\n  _subToEnd(obs) {\n    const onEnd = () => this._removeCur(obs);\n    this._$endHandlers.push({obs: obs, handler: onEnd});\n    obs.onEnd(onEnd);\n  },\n\n  _subscribe(obs) {\n    obs.onAny(this._$handleSubAny);\n\n    // it can become inactive in responce of subscribing to `obs.onAny` above\n    if (this._active) {\n      this._subToEnd(obs);\n    }\n  },\n\n  _unsubscribe(obs) {\n    obs.offAny(this._$handleSubAny);\n\n    let onEndI = findByPred(this._$endHandlers, (obj) => obj.obs === obs);\n    if (onEndI !== -1) {\n      obs.offEnd(this._$endHandlers[onEndI].handler);\n      this._$endHandlers.splice(onEndI, 1);\n    }\n  },\n\n  _handleSubAny(event) {\n    if (event.type === VALUE) {\n      this._emitValue(event.value);\n    } else if (event.type === ERROR) {\n      this._emitError(event.value);\n    }\n  },\n\n  _removeQueue(obs) {\n    let index = find(this._queue, obs);\n    this._queue = remove(this._queue, index);\n    return index;\n  },\n\n  _removeCur(obs) {\n    if (this._active) {\n      this._unsubscribe(obs);\n    }\n    let index = find(this._curSources, obs);\n    this._curSources = remove(this._curSources, index);\n    if (index !== -1) {\n      if (this._queue.length !== 0) {\n        this._pullQueue();\n      } else if (this._curSources.length === 0) {\n        this._onEmpty();\n      }\n    }\n    return index;\n  },\n\n  _removeOldest() {\n    this._removeCur(this._curSources[0]);\n  },\n\n  _pullQueue() {\n    if (this._queue.length !== 0) {\n      this._queue = cloneArray(this._queue);\n      this._addToCur(this._queue.shift());\n    }\n  },\n\n  _onActivation() {\n    for (let i = 0, sources = this._curSources; i < sources.length && this._active; i++) {\n      this._subscribe(sources[i]);\n    }\n  },\n\n  _onDeactivation() {\n    for (let i = 0, sources = this._curSources; i < sources.length; i++) {\n      this._unsubscribe(sources[i]);\n    }\n    if (this._currentlyAdding !== null) {\n      this._unsubscribe(this._currentlyAdding);\n    }\n  },\n\n  _isEmpty() {\n    return this._curSources.length === 0;\n  },\n\n  _onEmpty() {},\n\n  _clear() {\n    Stream.prototype._clear.call(this);\n    this._queue = null;\n    this._curSources = null;\n    this._$handleSubAny = null;\n    this._$endHandlers = null;\n  }\n\n});\n\nexport default AbstractPool;\n","import {inherit} from '../utils/objects';\nimport AbstractPool from './abstract-pool';\nimport never from '../primary/never';\n\n\nfunction Merge(sources) {\n  AbstractPool.call(this);\n  this._addAll(sources);\n  this._initialised = true;\n}\n\ninherit(Merge, AbstractPool, {\n\n  _name: 'merge',\n\n  _onEmpty() {\n    if (this._initialised) {\n      this._emitEnd();\n    }\n  }\n\n});\n\nexport default function merge(observables) {\n  return observables.length === 0 ? never() : new Merge(observables);\n}\n","import {inherit} from '../utils/objects';\nimport Stream from '../stream';\nimport {END} from '../constants';\n\n\n\nfunction S(generator) {\n  Stream.call(this);\n  this._generator = generator;\n  this._source = null;\n  this._inLoop = false;\n  this._iteration = 0;\n  this._$handleAny = (event) => this._handleAny(event);\n}\n\ninherit(S, Stream, {\n\n  _name: 'repeat',\n\n  _handleAny(event) {\n    if (event.type === END) {\n      this._source = null;\n      this._getSource();\n    } else {\n      this._emit(event.type, event.value);\n    }\n  },\n\n  _getSource() {\n    if (!this._inLoop) {\n      this._inLoop = true;\n      const generator = this._generator;\n      while (this._source === null && this._alive && this._active) {\n        this._source = generator(this._iteration++);\n        if (this._source) {\n          this._source.onAny(this._$handleAny);\n        } else {\n          this._emitEnd();\n        }\n      }\n      this._inLoop = false;\n    }\n  },\n\n  _onActivation() {\n    if (this._source) {\n      this._source.onAny(this._$handleAny);\n    } else {\n      this._getSource();\n    }\n  },\n\n  _onDeactivation() {\n    if (this._source) {\n      this._source.offAny(this._$handleAny);\n    }\n  },\n\n  _clear() {\n    Stream.prototype._clear.call(this);\n    this._generator = null;\n    this._source = null;\n    this._$handleAny = null;\n  }\n\n});\n\n\nexport default function(generator) {\n  return new S(generator);\n}\n","import repeat from './repeat';\n\nexport default function concat(observables) {\n  return repeat(function(index) {\n    return observables.length > index ? observables[index] : false;\n  }).setName('concat');\n}\n","import {inherit} from '../utils/objects';\nimport AbstractPool from './abstract-pool';\n\n\n\nfunction Pool() {\n  AbstractPool.call(this);\n}\n\ninherit(Pool, AbstractPool, {\n\n  _name: 'pool',\n\n  plug(obs) {\n    this._add(obs);\n    return this;\n  },\n\n  unplug(obs) {\n    this._remove(obs);\n    return this;\n  }\n\n});\n\nexport default Pool;\n","import {VALUE, ERROR, END} from '../constants';\nimport {inherit} from '../utils/objects';\nimport AbstractPool from './abstract-pool';\n\n\n\n\nfunction FlatMap(source, fn, options) {\n  AbstractPool.call(this, options);\n  this._source = source;\n  this._fn = fn;\n  this._mainEnded = false;\n  this._lastCurrent = null;\n  this._$handleMain = (event) => this._handleMain(event);\n}\n\ninherit(FlatMap, AbstractPool, {\n\n  _onActivation() {\n    AbstractPool.prototype._onActivation.call(this);\n    if (this._active) {\n      this._source.onAny(this._$handleMain);\n    }\n  },\n\n  _onDeactivation() {\n    AbstractPool.prototype._onDeactivation.call(this);\n    this._source.offAny(this._$handleMain);\n    this._hadNoEvSinceDeact = true;\n  },\n\n  _handleMain(event) {\n\n    if (event.type === VALUE) {\n      // Is latest value before deactivation survived, and now is 'current' on this activation?\n      // We don't want to handle such values, to prevent to constantly add\n      // same observale on each activation/deactivation when our main source\n      // is a `Kefir.conatant()` for example.\n      let sameCurr = this._activating && this._hadNoEvSinceDeact && this._lastCurrent === event.value;\n      if (!sameCurr) {\n        this._add(event.value, this._fn);\n      }\n      this._lastCurrent = event.value;\n      this._hadNoEvSinceDeact = false;\n    }\n\n    if (event.type === ERROR) {\n      this._emitError(event.value);\n    }\n\n    if (event.type === END) {\n      if (this._isEmpty()) {\n        this._emitEnd();\n      } else {\n        this._mainEnded = true;\n      }\n    }\n\n  },\n\n  _onEmpty() {\n    if (this._mainEnded) {\n      this._emitEnd();\n    }\n  },\n\n  _clear() {\n    AbstractPool.prototype._clear.call(this);\n    this._source = null;\n    this._lastCurrent = null;\n    this._$handleMain = null;\n  }\n\n});\n\n\n\n\nexport default FlatMap;\n","import {VALUE, ERROR, END} from '../constants';\nimport {inherit} from '../utils/objects';\nimport FlatMap from './flat-map';\n\nfunction FlatMapErrors(source, fn) {\n  FlatMap.call(this, source, fn);\n}\n\ninherit(FlatMapErrors, FlatMap, {\n\n  // Same as in FlatMap, only VALUE/ERROR flipped\n  _handleMain(event) {\n\n    if (event.type === ERROR) {\n      let sameCurr = this._activating && this._hadNoEvSinceDeact && this._lastCurrent === event.value;\n      if (!sameCurr) {\n        this._add(event.value, this._fn);\n      }\n      this._lastCurrent = event.value;\n      this._hadNoEvSinceDeact = false;\n    }\n\n    if (event.type === VALUE) {\n      this._emitValue(event.value);\n    }\n\n    if (event.type === END) {\n      if (this._isEmpty()) {\n        this._emitEnd();\n      } else {\n        this._mainEnded = true;\n      }\n    }\n\n  }\n\n\n\n});\n\nexport default FlatMapErrors;\n","import Stream from '../stream';\nimport Property from '../property';\nimport {inherit} from '../utils/objects';\nimport {VALUE, ERROR, END, NOTHING} from '../constants';\n\n\n\n\n\nfunction createConstructor(BaseClass, name) {\n  return function AnonymousObservable(primary, secondary, options) {\n    BaseClass.call(this);\n    this._primary = primary;\n    this._secondary = secondary;\n    this._name = `${primary._name}.${name}`;\n    this._lastSecondary = NOTHING;\n    this._$handleSecondaryAny = (event) => this._handleSecondaryAny(event);\n    this._$handlePrimaryAny = (event) => this._handlePrimaryAny(event);\n    this._init(options);\n  }\n}\n\nfunction createClassMethods(BaseClass) {\n  return {\n    _init() {},\n    _free() {},\n\n    _handlePrimaryValue(x) {\n      this._emitValue(x);\n    },\n    _handlePrimaryError(x) {\n      this._emitError(x);\n    },\n    _handlePrimaryEnd() {\n      this._emitEnd();\n    },\n\n    _handleSecondaryValue(x) {\n      this._lastSecondary = x;\n    },\n    _handleSecondaryError(x) {\n      this._emitError(x);\n    },\n    _handleSecondaryEnd() {},\n\n    _handlePrimaryAny(event) {\n      switch (event.type) {\n        case VALUE: return this._handlePrimaryValue(event.value);\n        case ERROR: return this._handlePrimaryError(event.value);\n        case END: return this._handlePrimaryEnd(event.value);\n      }\n    },\n    _handleSecondaryAny(event) {\n      switch (event.type) {\n        case VALUE: return this._handleSecondaryValue(event.value);\n        case ERROR: return this._handleSecondaryError(event.value);\n        case END:\n          this._handleSecondaryEnd(event.value);\n          this._removeSecondary();\n      }\n    },\n\n    _removeSecondary() {\n      if (this._secondary !== null) {\n        this._secondary.offAny(this._$handleSecondaryAny);\n        this._$handleSecondaryAny = null;\n        this._secondary = null;\n      }\n    },\n\n    _onActivation() {\n      if (this._secondary !== null) {\n        this._secondary.onAny(this._$handleSecondaryAny);\n      }\n      if (this._active) {\n        this._primary.onAny(this._$handlePrimaryAny);\n      }\n    },\n    _onDeactivation() {\n      if (this._secondary !== null) {\n        this._secondary.offAny(this._$handleSecondaryAny);\n      }\n      this._primary.offAny(this._$handlePrimaryAny);\n    },\n\n    _clear() {\n      BaseClass.prototype._clear.call(this);\n      this._primary = null;\n      this._secondary = null;\n      this._lastSecondary = null;\n      this._$handleSecondaryAny = null;\n      this._$handlePrimaryAny = null;\n      this._free();\n    }\n\n  };\n}\n\n\n\nfunction createStream(name, mixin) {\n  const S = createConstructor(Stream, name);\n  inherit(S, Stream, createClassMethods(Stream), mixin);\n  return S;\n}\n\n\nfunction createProperty(name, mixin) {\n  const P = createConstructor(Property, name);\n  inherit(P, Property, createClassMethods(Property), mixin);\n  return P;\n}\n\n\nexport {createStream, createProperty};\n\n","import {createStream, createProperty} from '../patterns/two-sources';\nimport {NOTHING} from '../constants';\n\n\nconst mixin = {\n\n  _handlePrimaryValue(x) {\n    if (this._lastSecondary !== NOTHING && this._lastSecondary) {\n      this._emitValue(x);\n    }\n  },\n\n  _handleSecondaryEnd() {\n    if (this._lastSecondary === NOTHING || !this._lastSecondary) {\n      this._emitEnd();\n    }\n  }\n\n};\n\nconst S = createStream('filterBy', mixin);\nconst P = createProperty('filterBy', mixin);\n\n\nexport default function filterBy(primary, secondary) {\n  return new (primary._ofSameType(S, P))(primary, secondary);\n}\n\n","import combine from '../many-sources/combine';\n\nconst id2 = (_, x) => x;\n\nexport default function sampledBy(passive, active, combinator) {\n  let _combinator = combinator ? ((a, b) => combinator(b, a)) : id2;\n  return combine([active], [passive], _combinator).setName(passive, 'sampledBy');\n}\n","import {createStream, createProperty} from '../patterns/two-sources';\nimport {NOTHING} from '../constants';\n\n\nconst mixin = {\n\n  _handlePrimaryValue(x) {\n    if (this._lastSecondary !== NOTHING) {\n      this._emitValue(x);\n    }\n  },\n\n  _handleSecondaryEnd() {\n    if (this._lastSecondary === NOTHING) {\n      this._emitEnd();\n    }\n  }\n\n};\n\nconst S = createStream('skipUntilBy', mixin);\nconst P = createProperty('skipUntilBy', mixin);\n\n\nexport default function skipUntilBy(primary, secondary) {\n  return new (primary._ofSameType(S, P))(primary, secondary);\n}\n\n","import {createStream, createProperty} from '../patterns/two-sources';\n\nconst mixin = {\n\n  _handleSecondaryValue() {\n    this._emitEnd();\n  }\n\n};\n\nconst S = createStream('takeUntilBy', mixin);\nconst P = createProperty('takeUntilBy', mixin);\n\n\nexport default function takeUntilBy(primary, secondary) {\n  return new (primary._ofSameType(S, P))(primary, secondary);\n}\n\n","import {createStream, createProperty} from '../patterns/two-sources';\n\n\nconst mixin = {\n\n  _init({flushOnEnd = true} = {}) {\n    this._buff = [];\n    this._flushOnEnd = flushOnEnd;\n  },\n\n  _free() {\n    this._buff = null;\n  },\n\n  _flush() {\n    if (this._buff !== null) {\n      this._emitValue(this._buff);\n      this._buff = [];\n    }\n  },\n\n  _handlePrimaryEnd() {\n    if (this._flushOnEnd) {\n      this._flush();\n    }\n    this._emitEnd();\n  },\n\n  _onActivation() {\n    this._primary.onAny(this._$handlePrimaryAny);\n    if (this._alive && this._secondary !== null) {\n      this._secondary.onAny(this._$handleSecondaryAny);\n    }\n  },\n\n  _handlePrimaryValue(x) {\n    this._buff.push(x);\n  },\n\n  _handleSecondaryValue() {\n    this._flush();\n  },\n\n  _handleSecondaryEnd() {\n    if (!this._flushOnEnd) {\n      this._emitEnd();\n    }\n  }\n\n};\n\n\nconst S = createStream('bufferBy', mixin);\nconst P = createProperty('bufferBy', mixin);\n\n\nexport default function bufferBy(primary, secondary, options /* optional */) {\n  return new (primary._ofSameType(S, P))(primary, secondary, options);\n}\n","import {createStream, createProperty} from '../patterns/two-sources';\nimport {NOTHING} from '../constants';\n\n\nconst mixin = {\n\n  _init({flushOnEnd = true, flushOnChange = false} = {}) {\n    this._buff = [];\n    this._flushOnEnd = flushOnEnd;\n    this._flushOnChange = flushOnChange;\n  },\n\n  _free() {\n    this._buff = null;\n  },\n\n  _flush() {\n    if (this._buff !== null) {\n      this._emitValue(this._buff);\n      this._buff = [];\n    }\n  },\n\n  _handlePrimaryEnd() {\n    if (this._flushOnEnd) {\n      this._flush();\n    }\n    this._emitEnd();\n  },\n\n  _handlePrimaryValue(x) {\n    this._buff.push(x);\n    if (this._lastSecondary !== NOTHING && !this._lastSecondary) {\n      this._flush();\n    }\n  },\n\n  _handleSecondaryEnd() {\n    if (!this._flushOnEnd && (this._lastSecondary === NOTHING || this._lastSecondary)) {\n      this._emitEnd();\n    }\n  },\n\n  _handleSecondaryValue(x) {\n    if (this._flushOnChange && !x) {\n      this._flush();\n    }\n\n    // from default _handleSecondaryValue\n    this._lastSecondary = x;\n  }\n\n};\n\n\nconst S = createStream('bufferWhileBy', mixin);\nconst P = createProperty('bufferWhileBy', mixin);\n\n\nexport default function bufferWhileBy(primary, secondary, options /* optional */) {\n  return new (primary._ofSameType(S, P))(primary, secondary, options);\n}\n","import merge from '../many-sources/merge';\nimport map from '../one-source/map';\nimport skipDuplicates from '../one-source/skip-duplicates';\nimport toProperty from '../one-source/to-property';\n\nconst f = () => false;\nconst t = () => true;\n\nexport default function awaiting(a, b) {\n  let result = merge([map(a, t), map(b, f)]);\n  result = skipDuplicates(result);\n  result = toProperty(result, f);\n  return result.setName(a, 'awaiting');\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._fn = fn;\n  },\n\n  _free() {\n    this._fn = null;\n  },\n\n  _handleValue(x) {\n    const fn = this._fn;\n    let result = fn(x);\n    if (result.convert) {\n      this._emitError(result.error);\n    } else {\n      this._emitValue(x);\n    }\n  }\n\n};\n\nconst S = createStream('valuesToErrors', mixin);\nconst P = createProperty('valuesToErrors', mixin);\n\n\nconst defFn = x => ({convert: true, error: x});\n\nexport default function valuesToErrors(obs, fn = defFn) {\n  return new (obs._ofSameType(S, P))(obs, {fn});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._fn = fn;\n  },\n\n  _free() {\n    this._fn = null;\n  },\n\n  _handleError(x) {\n    const fn = this._fn;\n    const result = fn(x);\n    if (result.convert) {\n      this._emitValue(result.value);\n    } else {\n      this._emitError(x);\n    }\n  }\n\n};\n\nconst S = createStream('errorsToValues', mixin);\nconst P = createProperty('errorsToValues', mixin);\n\n\nconst defFn = x => ({convert: true, value: x});\n\nexport default function errorsToValues(obs, fn = defFn) {\n  return new (obs._ofSameType(S, P))(obs, {fn});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _handleError(x) {\n    this._emitError(x);\n    this._emitEnd();\n  }\n\n};\n\nconst S = createStream('endOnError', mixin);\nconst P = createProperty('endOnError', mixin);\n\n\nexport default function endOnError(obs) {\n  return new (obs._ofSameType(S, P))(obs);\n}\n","import Observable from './observable';\nimport Stream from './stream';\nimport Property from './property';\n\n\n\n// Create a stream\n// -----------------------------------------------------------------------------\n\n// () -> Stream\nimport never from './primary/never';\n\n// (number, any) -> Stream\nimport later from './time-based/later';\n\n// (number, any) -> Stream\nimport interval from './time-based/interval';\n\n// (number, Array<any>) -> Stream\nimport sequentially from './time-based/sequentially';\n\n// (number, Function) -> Stream\nimport fromPoll from './time-based/from-poll';\n\n// (number, Function) -> Stream\nimport withInterval from './time-based/with-interval';\n\n// (Function) -> Stream\nimport fromCallback from './primary/from-callback';\n\n// (Function) -> Stream\nimport fromNodeCallback from './primary/from-node-callback';\n\n// Target = {addEventListener, removeEventListener}|{addListener, removeListener}|{on, off}\n// (Target, string, Function|undefined) -> Stream\nimport fromEvents from './primary/from-events';\n\n// (Function) -> Stream\nimport stream from './primary/stream';\n\n\n\n// Create a property\n// -----------------------------------------------------------------------------\n\n// (any) -> Property\nimport constant from './primary/constant';\n\n// (any) -> Property\nimport constantError from './primary/constant-error';\n\n\n\n// Convert observables\n// -----------------------------------------------------------------------------\n\n// (Stream|Property, Function|undefined) -> Property\nimport toProperty from './one-source/to-property';\nObservable.prototype.toProperty = function(fn) {\n  return toProperty(this, fn);\n};\n\n// (Stream|Property) -> Stream\nimport changes from './one-source/changes';\nObservable.prototype.changes = function() {\n  return changes(this);\n};\n\n\n\n// Interoperation with other implimentations\n// -----------------------------------------------------------------------------\n\n// (Promise) -> Property\nimport fromPromise from './interop/from-promise';\n\n// (Stream|Property, Function|undefined) -> Promise\nimport toPromise from './interop/to-promise';\nObservable.prototype.toPromise = function(Promise) {\n  return toPromise(this, Promise);\n};\n\n// (ESObservable) -> Stream\nimport fromESObservable from './interop/from-es-observable';\n\n// (Stream|Property) -> ES7 Observable\nimport toESObservable from './interop/to-es-observable';\nObservable.prototype.toESObservable = toESObservable;\nimport $$observable from 'symbol-observable';\nObservable.prototype[$$observable] = toESObservable;\n\nimport * as staticLand from './interop/static-land'\n\n\n// Modify an observable\n// -----------------------------------------------------------------------------\n\n// (Stream, Function|undefined) -> Stream\n// (Property, Function|undefined) -> Property\nimport map from './one-source/map';\nObservable.prototype.map = function(fn) {\n  return map(this, fn);\n};\n\n// (Stream, Function|undefined) -> Stream\n// (Property, Function|undefined) -> Property\nimport filter from './one-source/filter';\nObservable.prototype.filter = function(fn) {\n  return filter(this, fn);\n};\n\n// (Stream, number) -> Stream\n// (Property, number) -> Property\nimport take from './one-source/take';\nObservable.prototype.take = function(n) {\n  return take(this, n);\n};\n\n// (Stream, number) -> Stream\n// (Property, number) -> Property\nimport takeErrors from './one-source/take-errors';\nObservable.prototype.takeErrors = function(n) {\n  return takeErrors(this, n);\n};\n\n// (Stream, Function|undefined) -> Stream\n// (Property, Function|undefined) -> Property\nimport takeWhile from './one-source/take-while';\nObservable.prototype.takeWhile = function(fn) {\n  return takeWhile(this, fn);\n};\n\n// (Stream) -> Stream\n// (Property) -> Property\nimport last from './one-source/last';\nObservable.prototype.last = function() {\n  return last(this);\n};\n\n// (Stream, number) -> Stream\n// (Property, number) -> Property\nimport skip from './one-source/skip';\nObservable.prototype.skip = function(n) {\n  return skip(this, n);\n};\n\n// (Stream, Function|undefined) -> Stream\n// (Property, Function|undefined) -> Property\nimport skipWhile from './one-source/skip-while';\nObservable.prototype.skipWhile = function(fn) {\n  return skipWhile(this, fn);\n};\n\n// (Stream, Function|undefined) -> Stream\n// (Property, Function|undefined) -> Property\nimport skipDuplicates from './one-source/skip-duplicates';\nObservable.prototype.skipDuplicates = function(fn) {\n  return skipDuplicates(this, fn);\n};\n\n// (Stream, Function|falsey, any|undefined) -> Stream\n// (Property, Function|falsey, any|undefined) -> Property\nimport diff from './one-source/diff';\nObservable.prototype.diff = function(fn, seed) {\n  return diff(this, fn, seed);\n};\n\n// (Stream|Property, Function, any|undefined) -> Property\nimport scan from './one-source/scan';\nObservable.prototype.scan = function(fn, seed) {\n  return scan(this, fn, seed);\n};\n\n// (Stream, Function|undefined) -> Stream\n// (Property, Function|undefined) -> Property\nimport flatten from './one-source/flatten';\nObservable.prototype.flatten = function(fn) {\n  return flatten(this, fn);\n};\n\n// (Stream, number) -> Stream\n// (Property, number) -> Property\nimport delay from './one-source/delay';\nObservable.prototype.delay = function(wait) {\n  return delay(this, wait);\n};\n\n// Options = {leading: boolean|undefined, trailing: boolean|undefined}\n// (Stream, number, Options|undefined) -> Stream\n// (Property, number, Options|undefined) -> Property\nimport throttle from './one-source/throttle';\nObservable.prototype.throttle = function(wait, options) {\n  return throttle(this, wait, options);\n};\n\n// Options = {immediate: boolean|undefined}\n// (Stream, number, Options|undefined) -> Stream\n// (Property, number, Options|undefined) -> Property\nimport debounce from './one-source/debounce';\nObservable.prototype.debounce = function(wait, options) {\n  return debounce(this, wait, options);\n};\n\n// (Stream, Function|undefined) -> Stream\n// (Property, Function|undefined) -> Property\nimport mapErrors from './one-source/map-errors';\nObservable.prototype.mapErrors = function(fn) {\n  return mapErrors(this, fn);\n};\n\n// (Stream, Function|undefined) -> Stream\n// (Property, Function|undefined) -> Property\nimport filterErrors from './one-source/filter-errors';\nObservable.prototype.filterErrors = function(fn) {\n  return filterErrors(this, fn);\n};\n\n// (Stream) -> Stream\n// (Property) -> Property\nimport ignoreValues from './one-source/ignore-values';\nObservable.prototype.ignoreValues = function() {\n  return ignoreValues(this);\n};\n\n// (Stream) -> Stream\n// (Property) -> Property\nimport ignoreErrors from './one-source/ignore-errors';\nObservable.prototype.ignoreErrors = function() {\n  return ignoreErrors(this);\n};\n\n// (Stream) -> Stream\n// (Property) -> Property\nimport ignoreEnd from './one-source/ignore-end';\nObservable.prototype.ignoreEnd = function() {\n  return ignoreEnd(this);\n};\n\n// (Stream, Function) -> Stream\n// (Property, Function) -> Property\nimport beforeEnd from './one-source/before-end';\nObservable.prototype.beforeEnd = function(fn) {\n  return beforeEnd(this, fn);\n};\n\n// (Stream, number, number|undefined) -> Stream\n// (Property, number, number|undefined) -> Property\nimport slidingWindow from './one-source/sliding-window';\nObservable.prototype.slidingWindow = function(max, min) {\n  return slidingWindow(this, max, min);\n};\n\n// Options = {flushOnEnd: boolean|undefined}\n// (Stream, Function|falsey, Options|undefined) -> Stream\n// (Property, Function|falsey, Options|undefined) -> Property\nimport bufferWhile from './one-source/buffer-while';\nObservable.prototype.bufferWhile = function(fn, options) {\n  return bufferWhile(this, fn, options);\n};\n\n// (Stream, number) -> Stream\n// (Property, number) -> Property\nimport bufferWithCount from './one-source/buffer-with-count';\nObservable.prototype.bufferWithCount = function(count, options) {\n  return bufferWithCount(this, count, options);\n};\n\n// Options = {flushOnEnd: boolean|undefined}\n// (Stream, number, number, Options|undefined) -> Stream\n// (Property, number, number, Options|undefined) -> Property\nimport bufferWithTimeOrCount from './one-source/buffer-with-time-or-count';\nObservable.prototype.bufferWithTimeOrCount = function(wait, count, options) {\n  return bufferWithTimeOrCount(this, wait, count, options);\n};\n\n// (Stream, Function) -> Stream\n// (Property, Function) -> Property\nimport transduce from './one-source/transduce';\nObservable.prototype.transduce = function(transducer) {\n  return transduce(this, transducer);\n};\n\n// (Stream, Function) -> Stream\n// (Property, Function) -> Property\nimport withHandler from './one-source/with-handler';\nObservable.prototype.withHandler = function(fn) {\n  return withHandler(this, fn);\n};\n\n\n\n// Combine observables\n// -----------------------------------------------------------------------------\n\n// (Array<Stream|Property>, Function|undefiend) -> Stream\n// (Array<Stream|Property>, Array<Stream|Property>, Function|undefiend) -> Stream\nimport combine from './many-sources/combine';\nObservable.prototype.combine = function(other, combinator) {\n  return combine([this, other], combinator);\n};\n\n// (Array<Stream|Property>, Function|undefiend) -> Stream\nimport zip from './many-sources/zip';\nObservable.prototype.zip = function(other, combinator) {\n  return zip([this, other], combinator);\n};\n\n// (Array<Stream|Property>) -> Stream\nimport merge from './many-sources/merge';\nObservable.prototype.merge = function(other) {\n  return merge([this, other]);\n};\n\n// (Array<Stream|Property>) -> Stream\nimport concat from './many-sources/concat';\nObservable.prototype.concat = function(other) {\n  return concat([this, other]);\n};\n\n// () -> Pool\nimport Pool from './many-sources/pool';\nconst pool = function() {\n  return new Pool();\n};\n\n// (Function) -> Stream\nimport repeat from './many-sources/repeat';\n\n// Options = {concurLim: number|undefined, queueLim: number|undefined, drop: 'old'|'new'|undefiend}\n// (Stream|Property, Function|falsey, Options|undefined) -> Stream\nimport FlatMap from './many-sources/flat-map';\nObservable.prototype.flatMap = function(fn) {\n  return new FlatMap(this, fn).setName(this, 'flatMap');\n};\nObservable.prototype.flatMapLatest = function(fn) {\n  return new FlatMap(this, fn, {concurLim: 1, drop: 'old'}).setName(this, 'flatMapLatest');\n};\nObservable.prototype.flatMapFirst = function(fn) {\n  return new FlatMap(this, fn, {concurLim: 1}).setName(this, 'flatMapFirst');\n};\nObservable.prototype.flatMapConcat = function(fn) {\n  return new FlatMap(this, fn, {queueLim: -1, concurLim: 1}).setName(this, 'flatMapConcat');\n};\nObservable.prototype.flatMapConcurLimit = function(fn, limit) {\n  return new FlatMap(this, fn, {queueLim: -1, concurLim: limit}).setName(this, 'flatMapConcurLimit');\n};\n\n// (Stream|Property, Function|falsey) -> Stream\nimport FlatMapErrors from './many-sources/flat-map-errors';\nObservable.prototype.flatMapErrors = function(fn) {\n  return new FlatMapErrors(this, fn).setName(this, 'flatMapErrors');\n};\n\n\n\n// Combine two observables\n// -----------------------------------------------------------------------------\n\n// (Stream, Stream|Property) -> Stream\n// (Property, Stream|Property) -> Property\nimport filterBy from './two-sources/filter-by';\nObservable.prototype.filterBy = function(other) {\n  return filterBy(this, other);\n};\n\n// (Stream, Stream|Property, Function|undefiend) -> Stream\n// (Property, Stream|Property, Function|undefiend) -> Property\nimport sampledBy2items from './two-sources/sampled-by';\nObservable.prototype.sampledBy = function(other, combinator) {\n  return sampledBy2items(this, other, combinator);\n};\n\n// (Stream, Stream|Property) -> Stream\n// (Property, Stream|Property) -> Property\nimport skipUntilBy from './two-sources/skip-until-by';\nObservable.prototype.skipUntilBy = function(other) {\n  return skipUntilBy(this, other);\n};\n\n// (Stream, Stream|Property) -> Stream\n// (Property, Stream|Property) -> Property\nimport takeUntilBy from './two-sources/take-until-by';\nObservable.prototype.takeUntilBy = function(other) {\n  return takeUntilBy(this, other);\n};\n\n// Options = {flushOnEnd: boolean|undefined}\n// (Stream, Stream|Property, Options|undefined) -> Stream\n// (Property, Stream|Property, Options|undefined) -> Property\nimport bufferBy from './two-sources/buffer-by';\nObservable.prototype.bufferBy = function(other, options) {\n  return bufferBy(this, other, options);\n};\n\n// Options = {flushOnEnd: boolean|undefined}\n// (Stream, Stream|Property, Options|undefined) -> Stream\n// (Property, Stream|Property, Options|undefined) -> Property\nimport bufferWhileBy from './two-sources/buffer-while-by';\nObservable.prototype.bufferWhileBy = function(other, options) {\n  return bufferWhileBy(this, other, options);\n};\n\n\n\n// Deprecated\n// -----------------------------------------------------------------------------\n\nlet DEPRECATION_WARNINGS = true\nexport function dissableDeprecationWarnings() {\n  DEPRECATION_WARNINGS = false\n}\n\nfunction warn(msg) {\n  if (DEPRECATION_WARNINGS && console && typeof console.warn === 'function') {\n    const msg2 = '\\nHere is an Error object for you containing the call stack:';\n    console.warn(msg, msg2, new Error());\n  }\n}\n\n// (Stream|Property, Stream|Property) -> Property\nimport awaiting from './two-sources/awaiting';\nObservable.prototype.awaiting = function(other) {\n  warn('You are using deprecated .awaiting() method, see https://github.com/rpominov/kefir/issues/145')\n  return awaiting(this, other);\n};\n\n// (Stream, Function|undefined) -> Stream\n// (Property, Function|undefined) -> Property\nimport valuesToErrors from './one-source/values-to-errors';\nObservable.prototype.valuesToErrors = function(fn) {\n  warn('You are using deprecated .valuesToErrors() method, see https://github.com/rpominov/kefir/issues/149')\n  return valuesToErrors(this, fn);\n};\n\n\n// (Stream, Function|undefined) -> Stream\n// (Property, Function|undefined) -> Property\nimport errorsToValues from './one-source/errors-to-values';\nObservable.prototype.errorsToValues = function(fn) {\n  warn('You are using deprecated .errorsToValues() method, see https://github.com/rpominov/kefir/issues/149')\n  return errorsToValues(this, fn);\n};\n\n// (Stream) -> Stream\n// (Property) -> Property\nimport endOnError from './one-source/end-on-error';\nObservable.prototype.endOnError = function() {\n  warn('You are using deprecated .endOnError() method, see https://github.com/rpominov/kefir/issues/150')\n  return endOnError(this);\n};\n\n\n\n// Exports\n// --------------------------------------------------------------------------\n\nconst Kefir = { Observable, Stream, Property, never, later, interval, sequentially,\nfromPoll, withInterval, fromCallback, fromNodeCallback, fromEvents, stream,\nconstant, constantError, fromPromise, fromESObservable, combine, zip, merge,\nconcat, Pool, pool, repeat, staticLand };\n\nKefir.Kefir = Kefir;\n\nexport { Kefir, Observable, Stream, Property, never, later, interval, sequentially,\nfromPoll, withInterval, fromCallback, fromNodeCallback, fromEvents, stream,\nconstant, constantError, fromPromise, fromESObservable, combine, zip, merge,\nconcat, Pool, pool, repeat, staticLand };\n\nexport default Kefir\n","export const NOTHING = ['<nothing>'];\nexport const END = 'end';\nexport const VALUE = 'value';\nexport const ERROR = 'error';\nexport const ANY = 'any';\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _ponyfill = require('./ponyfill');\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root = undefined; /* global window */\n\nif (typeof global !== 'undefined') {\n\troot = global;\n} else if (typeof window !== 'undefined') {\n\troot = window;\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;","module.exports = require('./lib/index');\n","import constant from '../primary/constant';\nimport never from '../primary/never';\nimport combine from '../many-sources/combine';\n\nconst Observable = {\n\n  empty() {\n    return never();\n  },\n\n  // Monoid based on merge() seems more useful than one based on concat().\n  concat(a, b) {\n    return a.merge(b);\n  },\n\n  of(x) {\n    return constant(x);\n  },\n\n  map(fn, obs) {\n    return obs.map(fn);\n  },\n\n  bimap(fnErr, fnVal, obs) {\n    return obs.mapErrors(fnErr).map(fnVal);\n  },\n\n  // This ap strictly speaking incompatible with chain. If we derive ap from chain we get\n  // different (not very useful) behavior. But spec requires that if method can be derived\n  // it must have the same behavior as hand-written method. We intentionally violate the spec\n  // in hope that it won't cause many troubles in practice. And in return we have more useful type.\n  ap(obsFn, obsVal) {\n    return combine([obsFn, obsVal], (fn, val) => fn(val));\n  },\n\n  chain(fn, obs) {\n    return obs.flatMap(fn);\n  }\n\n}\n\nexport {Observable}\n","export default Date.now ?\n  (() => Date.now()) :\n  (() => new Date().getTime());\n"],"names":["createObj","proto","F","prototype","extend","target","length","arguments","i","prop","inherit","Child","Parent","constructor","concat","a","b","result","j","Array","find","arr","value","findByPred","pred","cloneArray","input","remove","index","map","fn","forEach","fillArray","contains","slide","cur","next","max","Math","min","offset","callSubscriber","type","event","ANY","VALUE","ERROR","Dispatcher","_items","_inLoop","_removedItems","Observable","_dispatcher","_active","_alive","_activating","_logHandlers","Stream","call","this","Property","_currentEvent","never","neverS","timeBased","mixin","AnonymousStream","wait","options","_wait","_intervalId","_$onTick","_this","_onTick","_init","setInterval","_clear","_free","later","x","S","interval","sequentially","xs","fromPoll","emitter","obs","_emitValue","error","_emitError","end","_emitEnd","e","_emit","withInterval","_fn","_unsubscribe","stream","fromCallback","callbackConsumer","called","emit","setName","fromNodeCallback","spread","apply","c","aLength","fromSubUnsub","sub","unsub","transformer","handler","fromEvents","eventName","pairs","undefined","Error","P","current","constant","constantError","createConstructor","BaseClass","name","source","_source","_name","_$handleAny","_handleAny","createClassMethods","_handleValue","_handleError","END","_handleEnd","onAny","offAny","createStream","createProperty","toProperty","changes","fromPromise","promise","onValue","onError","_promise","then","done","getGlodalPromise","Promise","last","resolve","reject","fromESObservable","_observable","observable","$$observable","subscribe","unsubscribe","ESObservable","takeErrors","toESObservable","defaultErrorsCombinator","errors","latestError","Combine","active","passive","combinator","_activeCount","_sources","_combinator","_aliveCount","_latestValues","_latestErrors","NOTHING","_emitAfterActivation","_endAfterActivation","_latestErrorIndex","_$handlers","push","combine","id","_ofSameType","filter","take","n","takeWhile","skip","skipWhile","skipDuplicates","eq","defaultFn","diff","seed","scan","flatten","delay","throttle","leading","trailing","debounce","immediate","mapErrors","filterErrors","ignoreValues","ignoreErrors","ignoreEnd","beforeEnd","slidingWindow","bufferWhile","flushOnEnd","count","bufferWithTimeOrCount","xformForObs","res","transduce","transducer","withHandler","Zip","sources","_buffers","isArray","zip","observables","AbstractPool","queueLim","concurLim","drop","_queueLim","_concurLim","_drop","_queue","_curSources","_$handleSubAny","_handleSubAny","_$endHandlers","_currentlyAdding","Merge","_addAll","_initialised","merge","generator","_generator","_iteration","repeat","Pool","FlatMap","_mainEnded","_lastCurrent","_$handleMain","_handleMain","FlatMapErrors","primary","secondary","_primary","_secondary","_lastSecondary","_$handleSecondaryAny","_handleSecondaryAny","_$handlePrimaryAny","_handlePrimaryAny","_handlePrimaryValue","_handlePrimaryError","_handlePrimaryEnd","_handleSecondaryValue","_handleSecondaryError","_handleSecondaryEnd","_removeSecondary","filterBy","sampledBy","id2","skipUntilBy","takeUntilBy","bufferBy","bufferWhileBy","awaiting","t","f","valuesToErrors","defFn","errorsToValues","endOnError","dissableDeprecationWarnings","warn","msg","DEPRECATION_WARNINGS","console","msg2","items","_onActivation","_onDeactivation","_setActive","cleanup","dispatch","add","_on","_off","observerOrOnValue","onEnd","closed","observer","A","B","getType","sourceObs","selfName","toString","isCurrent","log","handlerIndex","obj","splice","_x","_xs","shift","_emitter","_callUnsubscribe","_getInitialCurrent","getInitial","symbolObservablePonyfill","root","_Symbol","Symbol","Object","defineProperty","exports","_interopRequireDefault","__esModule","default","_ponyfill","require$$0","_ponyfill2","commonjsHelpers.commonjsGlobal","window","module","observerOrOnNext","onComplete","complete","subscription","_i","_emitIfFull","hasAllValues","hasErrors","valuesCopy","errorsCopy","fnErr","fnVal","obsFn","obsVal","val","flatMap","_n","_lastValue","_prev","_seed","END_MARKER","_buff","_$shiftBuff","Date","now","getTime","_leading","_trailing","_trailingValue","_timeoutId","_endLater","_lastCallTime","_$trailingCall","_trailingCall","curTime","remaining","_cancelTrailing","setTimeout","_immediate","_lastAttempt","_laterValue","_$later","_later","_max","_min","_flushOnEnd","_flush","_count","_xform","_handler","_isFull","values","toObs","_addToCur","_addToQueue","_removeOldest","_add","obss","_this2","_removeCur","_removeQueue","_subToEnd","_this3","onEndI","offEnd","_pullQueue","_onEmpty","_subscribe","_getSource","_remove","_hadNoEvSinceDeact","sameCurr","_isEmpty","_","flushOnChange","_flushOnChange","convert","toPromise","bufferWithCount","other","pool","flatMapLatest","flatMapFirst","flatMapConcat","flatMapConcurLimit","limit","flatMapErrors","sampledBy2items","Kefir","staticLand"],"mappings":";;;gMAAA,SAASA,GAAUC,MACbC,GAAI,sBACNC,UAAYF,EACP,GAAIC,GAGb,QAASE,GAAOC,MACVC,GAASC,UAAUD,OACnBE,SAAGC,aACFD,EAAI,EAAGA,EAAIF,EAAQE,QACjBC,IAAQF,WAAUC,KACdC,GAAQF,UAAUC,GAAGC,SAGzBJ,GAGT,QAASK,GAAQC,EAAOC,MAClBN,GAASC,UAAUD,OACnBE,eACEL,UAAYH,EAAUY,EAAOT,aAC7BA,UAAUU,YAAcF,EACzBH,EAAI,EAAGA,EAAIF,EAAQE,MACfG,EAAMR,UAAWI,UAAUC,UAE7BG,GCzBT,QAASG,GAAOC,EAAGC,MACbC,UAAQX,SAAQE,SAAGU,YACN,IAAbH,EAAET,aACGU,MAEQ,IAAbA,EAAEV,aACGS,SAEL,IACK,GAAII,OAAMJ,EAAET,OAASU,EAAEV,UACvBS,EAAET,OACNE,EAAI,EAAGA,EAAIF,EAAQE,IAAKU,MACpBA,GAAKH,EAAEP,SAEPQ,EAAEV,OACNE,EAAI,EAAGA,EAAIF,EAAQE,IAAKU,MACpBA,GAAKF,EAAER,SAETS,GAaT,QAASG,GAAKC,EAAKC,MACbhB,GAASe,EAAIf,OACbE,aACCA,EAAI,EAAGA,EAAIF,EAAQE,OAClBa,EAAIb,KAAOc,QACNd,UAGJ,EAGT,QAASe,GAAWF,EAAKG,MACnBlB,GAASe,EAAIf,OACbE,aACCA,EAAI,EAAGA,EAAIF,EAAQE,OAClBgB,EAAKH,EAAIb,UACJA,UAGJ,EAGT,QAASiB,GAAWC,MACdpB,GAASoB,EAAMpB,OACfW,EAAS,GAAIE,OAAMb,GACnBE,aACCA,EAAI,EAAGA,EAAIF,EAAQE,MACfA,GAAKkB,EAAMlB,SAEbS,GAGT,QAASU,GAAOD,EAAOE,MACjBtB,GAASoB,EAAMpB,OACfW,SAAQT,SAAGU,YACXU,GAAS,GAAKA,EAAQtB,EAAQ,IACjB,IAAXA,iBAGO,GAAIa,OAAMb,EAAS,GACvBE,EAAI,EAAGU,EAAI,EAAGV,EAAIF,EAAQE,IACzBA,IAAMoB,MACDV,GAAKQ,EAAMlB,cAIfS,SAGFS,GAQX,QAASG,GAAIH,EAAOI,MACdxB,GAASoB,EAAMpB,OACfW,EAAS,GAAIE,OAAMb,GACnBE,aACCA,EAAI,EAAGA,EAAIF,EAAQE,MACfA,GAAKsB,EAAGJ,EAAMlB,UAEhBS,GAGT,QAASc,GAAQV,EAAKS,MAChBxB,GAASe,EAAIf,OACbE,aACCA,EAAI,EAAGA,EAAIF,EAAQE,MACnBa,EAAIb,IAIX,QAASwB,GAAUX,EAAKC,MAClBhB,GAASe,EAAIf,OACbE,aACCA,EAAI,EAAGA,EAAIF,EAAQE,MAClBA,GAAKc,EAIb,QAASW,GAASZ,EAAKC,SACdF,GAAKC,EAAKC,MAAW,EAG9B,QAASY,GAAMC,EAAKC,EAAMC,MACpB/B,GAASgC,KAAKC,IAAIF,EAAKF,EAAI7B,OAAS,GACpCkC,EAASL,EAAI7B,OAASA,EAAS,EAC/BW,EAAS,GAAIE,OAAMb,GACnBE,aACCA,EAAIgC,EAAQhC,EAAIF,EAAQE,MACpBA,EAAIgC,GAAUL,EAAI3B,YAEpBF,EAAS,GAAK8B,EACdnB,EC3HT,QAASwB,GAAeC,EAAMZ,EAAIa,GAC5BD,IAASE,KACRD,GACMD,IAASC,EAAMD,OACpBA,IAASG,IAASH,IAASI,KAC1BH,EAAMrB,YAOf,QAASyB,UACFC,eACAC,QAAU,OACVC,cAAgB,KCZvB,QAASC,UACFC,YAAc,GAAIL,QAClBM,SAAU,OACVC,QAAS,OACTC,aAAc,OACdC,aAAe,KCRtB,QAASC,OACIC,KAAKC,MCElB,QAASC,OACIF,KAAKC,WACXE,cAAgB,KCFR,QAASC,WACfC,ICLM,QAASC,GAAUC,WAEvBC,GAAgBC,EAAMC,gBACtBV,KAAKC,WACPU,MAAQF,OACRG,YAAc,UACdC,SAAW,iBAAMC,GAAKC,gBACtBC,MAAMN,YAGLF,EAAiBT,4FAQhBa,YAAcK,YAAYhB,KAAKY,SAAUZ,KAAKU,mCAI1B,OAArBV,KAAKW,4BACOX,KAAKW,kBACdA,YAAc,2BAKdnE,UAAUyE,OAAOlB,KAAKC,WACxBY,SAAW,UACXM,UAGNZ,GAEIC,ECjBM,QAASY,GAAMX,EAAMY,SAC3B,IAAIC,IAAEb,GAAOY,MCFP,QAASE,GAASd,EAAMY,SAC9B,IAAIC,IAAEb,GAAOY,MCMP,QAASG,GAAaf,EAAMgB,SACpB,KAAdA,EAAG7E,OAAewD,IAAU,GAAIkB,IAAEb,GAAOgB,OCPnC,QAASC,GAASjB,EAAMrC,SAC9B,IAAIkD,IAAEb,GAAOrC,OCvBP,QAASuD,GAAQC,WAErBhE,GAAMyD,YACTQ,WAAWR,GACRO,EAAIjC,gBAGJmC,GAAMT,YACTU,WAAWV,GACRO,EAAIjC,gBAGJqC,cACHC,WACGL,EAAIjC,gBAGJV,GAAMiD,YACTC,MAAMD,EAAElD,KAAMkD,EAAEtE,OACbgE,EAAIjC,kDAUL/B,YACKqB,GCJA,QAASmD,GAAa3B,EAAMrC,SAClC,IAAIkD,IAAEb,GAAOrC,OCvBtB,QAASkD,GAAElD,KACF4B,KAAKC,WACPoC,IAAMjE,OACNkE,aAAe,KAoCP,QAASC,GAAOnE,SACtB,IAAIkD,GAAElD,GC1CA,QAASoE,GAAaC,MAE/BC,IAAS,QAENH,GAAO,SAASZ,GAEhBe,MACc,SAASrB,KAChBsB,KAAKtB,KACLW,WAED,KAGVY,QAAQ,gBCdE,QAASC,GAAiBJ,MAEnCC,IAAS,QAENH,GAAO,SAASZ,GAEhBe,MACc,SAASZ,EAAOT,GAC3BS,IACMA,MAAMA,KAENa,KAAKtB,KAEPW,WAED,KAGVY,QAAQ,oBCpBb,QAASE,GAAO1E,EAAIxB,UACXA,OACA,SAAU,kBAAmBwB,UAC7B,SAAU,UAASf,SAAWe,GAAGf,EAAE,SACnC,SAAU,UAASA,SAAWe,GAAGf,EAAE,GAAIA,EAAE,SACzC,SAAU,UAASA,SAAWe,GAAGf,EAAE,GAAIA,EAAE,GAAIA,EAAE,SAC/C,SAAU,UAASA,SAAWe,GAAGf,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,mBAC1C,UAASA,SAAWe,GAAG2E,MAAM,KAAM1F,KAIvD,QAAS0F,GAAM3E,EAAI4E,EAAG3F,MAChB4F,GAAU5F,EAAIA,EAAET,OAAS,KACpB,MAALoG,SACMC,OACD,SAAU7E,SACV,SAAUA,GAAGf,EAAE,QACf,SAAUe,GAAGf,EAAE,GAAIA,EAAE,QACrB,SAAUe,GAAGf,EAAE,GAAIA,EAAE,GAAIA,EAAE,QAC3B,SAAUe,GAAGf,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,kBACtBe,GAAG2E,MAAM,KAAM1F,eAGzB4F,OACD,SAAU7E,GAAG4B,KAAKgD,iBACP5E,GAAG2E,MAAMC,EAAG3F,ICtBnB,QAAS6F,GAAaC,EAAKC,EAAOC,SACxCd,GAAO,SAASZ,MAEjB2B,GAAUD,EACV,aACQV,KAAKI,EAAMM,EAAapD,KAAMpD,aAEtC,cACQ8F,KAAKtB,aAGbiC,GACG,iBAAMF,GAAME,MAElBV,QAAQ,gBCTE,QAASW,GAAW5G,EAAQ6G,EAAWH,OAG/C,GAFDF,UAAKC,SAEAtG,EAAI,EAAGA,EAAI2G,GAAM7G,OAAQE,OACG,kBAAxBH,GAAO8G,GAAM3G,GAAG,KAAqD,kBAAxBH,GAAO8G,GAAM3G,GAAG,IAAoB,GACpF2G,GAAM3G,GAAG,KACP2G,GAAM3G,GAAG,YAKT4G,SAARP,OACI,IAAIQ,OAAM,0HAIXT,GACL,SAACI,SAAY3G,GAAOwG,GAAKK,EAAWF,IACpC,SAACA,SAAY3G,GAAOyG,GAAOI,EAAWF,IACtCD,GACAT,QAAQ,cCpBZ,QAASgB,GAAEhG,QACJuC,eAAiBnB,KAAM,QAASpB,QAAOiG,SAAS,GAYxC,QAASC,GAASzC,SACxB,IAAIuC,GAAEvC,GCbf,QAASuC,GAAEhG,QACJuC,eAAiBnB,KAAM,QAASpB,QAAOiG,SAAS,GAYxC,QAASE,GAAc1C,SAC7B,IAAIuC,GAAEvC,GCjBf,QAAS2C,GAAkBC,EAAWC,SAC7B,UAA6BC,EAAQzD,gBAChCV,KAAKC,WACVmE,QAAUD,OACVE,MAAWF,EAAOE,UAASH,OAC3BlD,MAAMN,QACN4D,YAAc,SAACrF,SAAU6B,GAAKyD,WAAWtF,KAIlD,QAASuF,GAAmBP,sEAMX5C,QACNQ,WAAWR,0BAELA,QACNU,WAAWV,+BAGXY,gCAGIhD,UACDA,EAAMD,UACPG,UAAcc,MAAKwE,aAAaxF,EAAMrB,WACtCwB,UAAca,MAAKyE,aAAazF,EAAMrB,WACtC+G,UAAY1E,MAAK2E,6CAKnBR,QAAQS,MAAM5E,KAAKqE,8CAGnBF,QAAQU,OAAO7E,KAAKqE,kCAIf7H,UAAUyE,OAAOlB,KAAKC,WAC3BmE,QAAU,UACVE,YAAc,UACdnD,UAQX,QAAS4D,GAAab,EAAM3D,MACpBe,GAAI0C,EAAkBjE,EAAQmE,YAC5B5C,EAAGvB,EAAQyE,EAAmBzE,GAASQ,GACxCe,EAIT,QAAS0D,GAAed,EAAM3D,MACtBqD,GAAII,EAAkB9D,EAAUgE,YAC9BN,EAAG1D,EAAUsE,EAAmBtE,GAAWK,GAC5CqD,EChDM,QAASqB,GAAWrD,MAAKxD,8CAAK,qBAChC,OAAPA,GAA6B,kBAAPA,QAClB,IAAIuF,OAAM,uEAEX,IAAIC,IAAEhC,GAAMxD,OCJN,QAAS8G,GAAQtD,SACvB,IAAIN,IAAEM,GCnBA,QAASuD,GAAYC,MAE9B1C,IAAS,EAETnF,EAASgF,EAAO,SAASZ,OACtBe,EAAQ,IACP2C,GAAU,SAAShE,KACbsB,KAAKtB,KACLW,OAENsD,EAAU,SAASjE,KACbS,MAAMT,KACNW,OAENuD,EAAWH,EAAQI,KAAKH,EAASC,EAGjCC,IAAqC,kBAAlBA,GAASE,QACrBA,UAGF,WAINR,GAAW1H,EAAQ,MAAMqF,QAAQ,eC1B1C,QAAS8C,QACgB,kBAAZC,eACFA,cAED,IAAIhC,OAAM,iEAII/B,MAAK+D,8CAAUD,iBACjCE,EAAO,WACJ,IAAID,GAAQ,SAACE,EAASC,KACvBjB,MAAM,YACJ5F,EAAMD,OAAS2F,IAAgB,OAATiB,IACvBA,EAAK5G,OAASG,GAAQ0G,EAAUC,GAAQF,EAAKhI,SACvC,QAEAqB,qECfA,QAAS8G,GAAiBC,MACjCC,GAAaD,EAAYE,IAAgBF,EAAYE,MAAkBF,QACtEzD,GAAO,SAASZ,MACfyB,GAAQ6C,EAAWE,0BACjBrE,KACIA,MAAMA,KACNE,qBAELpE,KACK+E,KAAK/E,0BAGLoE,eAIRoB,GAAMgD,YACD,aAAoBA,eAEpBhD,IAERR,QAAQ,oBCpBb,QAASyD,GAAaJ,QACfD,YAAcC,EAAWK,WAAW,GA8C5B,QAASC,WACf,IAAIF,GAAapG,MC3C1B,QAASuG,GAAwBC,OAE1B,GADDC,UACK5J,EAAI,EAAGA,EAAI2J,EAAO7J,OAAQE,IACf4G,SAAd+C,EAAO3J,KACW4G,SAAhBgD,GAA6BA,EAAYxI,MAAQuI,EAAO3J,GAAGoB,WAC/CuI,EAAO3J,UAIpB4J,GAAY5E,MAGrB,QAAS6E,GAAQC,EAAQC,EAASC,gBACzB9G,KAAKC,WACP8G,aAAeH,EAAOhK,YACtBoK,SAAW5J,EAAOwJ,EAAQC,QAC1BI,YAAcH,EAAahE,EAAOgE,EAAY7G,KAAK+G,SAASpK,QAAW,kBAAKyE,SAC5E6F,YAAc,OACdC,cAAgB,GAAI1J,OAAMwC,KAAK+G,SAASpK,aACxCwK,cAAgB,GAAI3J,OAAMwC,KAAK+G,SAASpK,UACnCqD,KAAKkH,cAAeE,SACzBC,sBAAuB,OACvBC,qBAAsB,OACtBC,kBAAoB,OAEpBC,kBACA,eAAI3K,KACF2K,WAAWC,KAAK,SAACzI,SAAU6B,GAAKyD,WAAWzH,EAAGmC,MAD5CnC,EAAI,EAAGA,EAAImD,KAAK+G,SAASpK,OAAQE,MAAjCA,GAyHI,QAAS6K,IAAQf,MAAQC,8DAAcC,qBAC7B,kBAAZD,OACIA,QAGU,IAAlBD,EAAOhK,OAAewD,IAAU,GAAIuG,GAAQC,EAAQC,EAASC,GCxIvD,QAAS3I,IAAIyD,MAAKxD,8CAAKwJ,sBAC7B,KAAKhG,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAMxD,OCC5B,QAAS0J,IAAOlG,MAAKxD,8CAAKwJ,sBAChC,KAAKhG,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAMxD,OCH5B,QAAS2J,IAAKnG,EAAKoG,SACzB,KAAKpG,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAMoG,MCD5B,QAAS1B,IAAW1E,EAAKoG,SAC/B,KAAKpG,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAMoG,MCG5B,QAASC,IAAUrG,MAAKxD,8CAAKwJ,sBACnC,KAAKhG,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAMxD,OCA5B,QAASwH,IAAKhE,SACpB,KAAKA,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GCTtB,QAASsG,IAAKtG,EAAKoG,SACzB,KAAKpG,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAMoG,MCO5B,QAASG,IAAUvG,MAAKxD,8CAAKwJ,sBACnC,KAAKhG,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAMxD,OCA5B,QAASgK,IAAexG,MAAKxD,8CAAKiK,sBACxC,KAAKzG,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAMxD,OCH3C,QAASkK,IAAUjL,EAAGC,UACZD,EAAGC,GAGE,QAASiL,IAAK3G,EAAKxD,MAAIoK,8CAAOnB,sBACpC,KAAKzF,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAMxD,GAAIA,GAAMkK,GAAWE,SCHjD,QAASC,IAAK7G,EAAKxD,MAAIoK,8CAAOnB,sBACpC,IAAIzD,IAAEhC,GAAMxD,KAAIoK,SCLV,QAASE,IAAQ9G,MAAKxD,8CAAKwJ,sBACjC,IAAItG,IAAEM,GAAMxD,OCmBN,QAASuK,IAAM/G,EAAKnB,SAC1B,KAAKmB,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAMnB,SC8B5B,QAASmI,IAAShH,EAAKnB,wEAAOoI,QAAAA,oBAAgBC,SAAAA,sBACpD,KAAKlH,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAMnB,OAAMoI,UAASC,aCR3C,QAASC,IAASnH,EAAKnB,wEAAOuI,UAAAA,sBACpC,KAAKpH,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAMnB,OAAMuI,cC/ClC,QAASC,IAAUrH,MAAKxD,8CAAKwJ,sBACnC,KAAKhG,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAMxD,OCC5B,QAAS8K,IAAatH,MAAKxD,8CAAKwJ,sBACtC,KAAKhG,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAMxD,OClB5B,QAAS+K,IAAavH,SAC5B,KAAKA,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GCDtB,QAASwH,IAAaxH,SAC5B,KAAKA,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GCDtB,QAASyH,IAAUzH,SACzB,KAAKA,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GCYtB,QAAS0H,IAAU1H,EAAKxD,SAC9B,KAAKwD,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAMxD,OCI5B,QAASmL,IAAc3H,EAAKjD,MAAKE,8CAAM,qBAC7C,KAAK+C,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAM/C,MAAKF,QCejC,QAAS6K,IAAY5H,EAAKxD,wEAAKqL,WAAAA,sBACrC,KAAK7H,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAMxD,GAAIA,GAAMwJ,GAAI6B,eCL1C,QAASD,IAAY5H,EAAK8H,wEAAQD,WAAAA,sBACxC,KAAK7H,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAM8H,MAAOA,EAAOD,eCmB1C,QAASE,IAAsB/H,EAAKnB,EAAMiJ,wEAAQD,WAAAA,sBACxD,KAAK7H,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAMnB,OAAMiJ,QAAOD,eC3DxD,QAASG,IAAYhI,uCAGGiI,EAAK7L,YACnB6D,WAAW7D,GACR,gDAIHiE,WACG,OAgCE,QAAS6H,IAAUlI,EAAKmI,SAC9B,KAAKnI,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAMmI,eCnB5B,QAASC,IAAYpI,EAAKxD,SAChC,KAAKwD,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAMxD,OCd3C,QAAS6L,IAAIC,EAASpD,gBACb9G,KAAKC,WAEPkK,SAAWhM,EAAI+L,EAAS,SAAC/F,SAAWiG,IAAQjG,GAAUpG,EAAWoG,aACjE6C,SAAW7I,EAAI+L,EAAS,SAAC/F,SAAWiG,IAAQjG,GAAU/D,IAAU+D,SAEhE8C,YAAcH,EAAahE,EAAOgE,EAAY7G,KAAK+G,SAASpK,QAAW,kBAAKyE,SAC5E6F,YAAc,OAEdO,kBACA,eAAI3K,KACF2K,WAAWC,KAAK,SAACzI,SAAU6B,GAAKyD,WAAWzH,EAAGmC,MAD5CnC,EAAI,EAAGA,EAAImD,KAAK+G,SAASpK,OAAQE,MAAjCA,GA8EI,QAASuN,IAAIC,EAAaxD,SACT,KAAvBwD,EAAY1N,OAAewD,IAAU,GAAI6J,IAAIK,EAAaxD,GC/FnE,QAASyD,kFAAcC,SAAAA,aAAW,QAAGC,UAAAA,cAAY,QAAIC,KAAAA,aAAO,UACnD1K,KAAKC,WAEP0K,UAAYH,EAAW,GAAI,EAAKA,OAChCI,WAAaH,EAAY,GAAI,EAAKA,OAClCI,MAAQH,OACRI,eACAC,oBACAC,eAAiB,SAAC/L,SAAU6B,GAAKmK,cAAchM,SAC/CiM,sBACAC,iBAAmB,KAEA,IAApBlL,KAAK2K,iBACF3I,WCfT,QAASmJ,IAAMlB,MACAlK,KAAKC,WACboL,QAAQnB,QACRoB,cAAe,EAeP,QAASC,IAAMjB,SACE,KAAvBA,EAAY1N,OAAewD,IAAU,GAAIgL,IAAMd,GClBxD,QAAShJ,IAAEkK,gBACFxL,KAAKC,WACPwL,WAAaD,OACbpH,QAAU,UACV7E,SAAU,OACVmM,WAAa,OACbpH,YAAc,SAACrF,SAAU6B,GAAKyD,WAAWtF,gBAwDxBuM,SACf,IAAIlK,IAAEkK,GCnEA,QAASpO,IAAOkN,SACtBqB,IAAO,SAASzN,SACdoM,GAAY1N,OAASsB,GAAQoM,EAAYpM,KAC/C0E,QAAQ,UCAb,QAASgJ,SACM5L,KAAKC,MCCpB,QAAS4L,IAAQ1H,EAAQ/F,EAAIsC,iBACdV,KAAKC,KAAMS,QACnB0D,QAAUD,OACV9B,IAAMjE,OACN0N,YAAa,OACbC,aAAe,UACfC,aAAe,SAAC/M,SAAU6B,GAAKmL,YAAYhN,ICTlD,QAASiN,IAAc/H,EAAQ/F,MACrB4B,KAAKC,KAAMkE,EAAQ/F,GCI7B,QAAS4F,IAAkBC,EAAWC,SAC7B,UAA6BiI,EAASC,EAAW1L,gBAC5CV,KAAKC,WACVoM,SAAWF,OACXG,WAAaF,OACb/H,MAAW8H,EAAQ9H,UAASH,OAC5BqI,eAAiBlF,QACjBmF,qBAAuB,SAACvN,SAAU6B,GAAK2L,oBAAoBxN,SAC3DyN,mBAAqB,SAACzN,SAAU6B,GAAK6L,kBAAkB1N,SACvD+B,MAAMN,IAIf,QAAS8D,IAAmBP,6EAKJ5C,QACbQ,WAAWR,iCAEEA,QACbU,WAAWV,sCAGXY,2CAGeZ,QACfkL,eAAiBlL,kCAEFA,QACfU,WAAWV,gEAIApC,UACRA,EAAMD,UACPG,UAAcc,MAAK2M,oBAAoB3N,EAAMrB,WAC7CwB,UAAca,MAAK4M,oBAAoB5N,EAAMrB,WAC7C+G,UAAY1E,MAAK6M,kBAAkB7N,EAAMrB,sCAG9BqB,UACVA,EAAMD,UACPG,UAAcc,MAAK8M,sBAAsB9N,EAAMrB,WAC/CwB,UAAca,MAAK+M,sBAAsB/N,EAAMrB,WAC/C+G,SACEsI,oBAAoBhO,EAAMrB,YAC1BsP,iDAKe,OAApBjN,KAAKqM,kBACFA,WAAWxH,OAAO7E,KAAKuM,2BACvBA,qBAAuB,UACvBF,WAAa,gCAKI,OAApBrM,KAAKqM,iBACFA,WAAWzH,MAAM5E,KAAKuM,sBAEzBvM,KAAKN,cACF0M,SAASxH,MAAM5E,KAAKyM,gDAIH,OAApBzM,KAAKqM,iBACFA,WAAWxH,OAAO7E,KAAKuM,2BAEzBH,SAASvH,OAAO7E,KAAKyM,yCAIhBjQ,UAAUyE,OAAOlB,KAAKC,WAC3BoM,SAAW,UACXC,WAAa,UACbC,eAAiB,UACjBC,qBAAuB,UACvBE,mBAAqB,UACrBvL,UAQX,QAAS4D,IAAab,EAAM3D,MACpBe,GAAI0C,GAAkBjE,EAAQmE,YAC5B5C,EAAGvB,EAAQyE,GAAmBzE,GAASQ,GACxCe,EAIT,QAAS0D,IAAed,EAAM3D,MACtBqD,GAAII,GAAkB9D,EAAUgE,YAC9BN,EAAG1D,EAAUsE,GAAmBtE,GAAWK,GAC5CqD,ECtFM,QAASuJ,IAAShB,EAASC,SACjC,KAAKD,EAAQtE,YAAYvG,GAAGsC,KAAIuI,EAASC,GCrBnC,QAASgB,IAAUvG,EAASD,EAAQE,MAC7CG,GAAcH,EAAc,SAACzJ,EAAGC,SAAMwJ,GAAWxJ,EAAGD,IAAMgQ,SACvD1F,KAASf,IAAUC,GAAUI,GAAarE,QAAQiE,EAAS,aCkBrD,QAASyG,IAAYnB,EAASC,SACpC,KAAKD,EAAQtE,YAAYvG,GAAGsC,KAAIuI,EAASC,GCXnC,QAASmB,IAAYpB,EAASC,SACpC,KAAKD,EAAQtE,YAAYvG,GAAGsC,KAAIuI,EAASC,GCyCnC,QAASoB,IAASrB,EAASC,EAAW1L,SAC5C,KAAKyL,EAAQtE,YAAYvG,GAAGsC,KAAIuI,EAASC,EAAW1L,GCE9C,QAAS+M,IAActB,EAASC,EAAW1L,SACjD,KAAKyL,EAAQtE,YAAYvG,GAAGsC,KAAIuI,EAASC,EAAW1L,GCpD9C,QAASgN,IAASrQ,EAAGC,MAC9BC,GAASgO,IAAOpN,GAAId,EAAGsQ,IAAIxP,GAAIb,EAAGsQ,eAC7BxF,GAAe7K,KACf0H,EAAW1H,EAAQqQ,IACrBrQ,EAAOqF,QAAQvF,EAAG,YCkBZ,QAASwQ,IAAejM,MAAKxD,8CAAK0P,sBACxC,KAAKlM,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAMxD,OCD5B,QAAS2P,IAAenM,MAAKxD,8CAAK0P,sBACxC,KAAKlM,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GAAMxD,OChB5B,QAAS4P,IAAWpM,SAC1B,KAAKA,EAAIiG,YAAYvG,GAAGsC,KAAIhC,GCwY9B,QAASqM,UACS,EAGzB,QAASC,IAAKC,MACRC,IAAwBC,SAAmC,kBAAjBA,SAAQH,KAAqB,IACnEI,GAAO,uEACLJ,KAAKC,EAAKG,EAAM,GAAI3K,SC/ZzB,GAAM0D,KAAW,aACX1C,GAAM,MACNxF,GAAQ,QACRC,GAAQ,QACRF,GAAM,K3EkBnBxC,GAAO2C,EAAW5C,wBAEZuC,EAAMZ,eACHkB,OAASlC,EAAO6C,KAAKX,SAAUN,OAAMZ,QACnC6B,KAAKX,OAAO1C,wBAGdoC,EAAMZ,MACLF,GAAQL,EAAWoC,KAAKX,OAAQ,SAAC+B,SAAMA,GAAErC,OAASA,GAAQqC,EAAEjD,KAAOA,UAIpD,KAAjB6B,KAAKV,SAAiBrB,KAAU,IACP,OAAvB+B,KAAKT,qBACFA,uBAEFA,cAAckI,KAAKzH,KAAKX,OAAOpB,UAGjCoB,OAASrB,EAAOgC,KAAKX,OAAQpB,GAC3B+B,KAAKX,OAAO1C,0BAGZqC,QACFM,cACA,GAAIzC,GAAI,EAAGyR,EAAQtO,KAAKX,OAAQxC,EAAIyR,EAAM3R,QAGzB,OAAhBqD,KAAKX,OAH4CxC,IAQ1B,OAAvBmD,KAAKT,eAA0BjB,EAAS0B,KAAKT,cAAe+O,EAAMzR,OAIvDyR,EAAMzR,GAAGkC,KAAMuP,EAAMzR,GAAGsB,GAAIa,QAExCM,UACgB,IAAjBU,KAAKV,eACFC,cAAgB,+BAKlBF,OAAS,QCrDlB5C,EAAO+C,EAAWhD,iBAET,yFAKImK,GACL3G,KAAKN,UAAYiH,SACdjH,QAAUiH,EACXA,QACG/G,aAAc,OACd2O,qBACA3O,aAAc,QAEd4O,2CAMJC,YAAW,QACXhP,YAAYiP,eACZjP,YAAc,UACdI,aAAe,qBAGhBd,EAAMqC,UACFrC,OACDG,UAAcc,MAAK4B,WAAWR,OAC9BjC,UAAca,MAAK8B,WAAWV,OAC9BsD,UAAY1E,MAAKgC,iCAIfrE,GACLqC,KAAKL,aACFF,YAAYkP,UAAU5P,KAAMG,GAAOvB,+BAIjCA,GACLqC,KAAKL,aACFF,YAAYkP,UAAU5P,KAAMI,GAAOxB,+BAKtCqC,KAAKL,cACFA,QAAS,OACTF,YAAYkP,UAAU5P,KAAM2F,UAC5BzD,wBAILlC,EAAMZ,SACJ6B,MAAKL,aACFF,YAAYmP,IAAI7P,EAAMZ,QACtBsQ,YAAW,MAED1P,EAAMZ,GAAKY,KAAM2F,KAE3B1E,oBAGJjB,EAAMZ,MACL6B,KAAKL,OAAQ,IACX8J,GAAQzJ,KAAKP,YAAYzB,OAAOe,EAAMZ,EAC5B,KAAVsL,QACGgF,YAAW,SAGbzO,wBAGD7B,SACC6B,MAAK6O,IAAI3P,GAAOf,qBAEjBA,SACC6B,MAAK6O,IAAI1P,GAAOhB,mBAEnBA,SACG6B,MAAK6O,IAAInK,GAAKvG,mBAEjBA,SACG6B,MAAK6O,IAAI5P,GAAKd,sBAGdA,SACA6B,MAAK8O,KAAK5P,GAAOf,sBAEjBA,SACA6B,MAAK8O,KAAK3P,GAAOhB,oBAEnBA,SACE6B,MAAK8O,KAAKpK,GAAKvG,oBAEjBA,SACE6B,MAAK8O,KAAK7P,GAAKd,qBAGhB4Q,EAAmB1J,EAAS2J,MAC5BnO,GAAQb,KACViP,GAAS,EAEPC,EAAYH,GAAkD,kBAAtBA,GAE1CA,GADCpR,MAAOoR,EAAmBlN,MAAOwD,EAAStD,IAAKiN,GAG9C3L,EAAU,SAASrE,GACnBA,EAAMD,OAAS2F,QACR,GAEP1F,EAAMD,OAASG,IAASgQ,EAASvR,QAC1BA,MAAMqB,EAAMrB,OACZqB,EAAMD,OAASI,IAAS+P,EAASrN,QACjCA,MAAM7C,EAAMrB,OACZqB,EAAMD,OAAS2F,IAAOwK,EAASnN,OAC/BA,IAAI/C,EAAMrB,oBAIlBiH,MAAMvB,2BAIF4L,MACGpK,OAAOxB,MACJ,OAGT4L,gBACKA,2BAMDE,EAAGC,SACND,GAAE3S,UAAU6S,YAAcrP,KAAKqP,UAAYF,EAAIC,oBAGhDE,EAA0BC,eAC3BnL,MAAQmL,EAAcD,EAAUlL,UAASmL,EAAaD,EACpDtP,wBAILiE,8CAAOjE,KAAKwP,wBAEVC,SACApM,EAAU,SAASrE,MACjBD,OAAWC,EAAMD,MAAO0Q,EAAY,WAAa,OACjDzQ,GAAMD,OAAS2F,WACTgL,IAAIzL,EAAMlF,WAEV2Q,IAAIzL,EAAMlF,EAAMC,EAAMrB,cAI9BqC,MAAKL,SACFK,KAAKH,oBACHA,sBAEFA,aAAa4H,MAAMxD,KAAMA,EAAMZ,QAASA,QAGnC,OACPuB,MAAMvB,MACC,EAELrD,2BAGFiE,8CAAOjE,KAAKwP,2BAEbxP,KAAKH,aAAc,IACjB8P,GAAe/R,EAAWoC,KAAKH,aAAc,kBAAO+P,GAAI3L,OAASA,GACjE0L,MAAiB,SACd9K,OAAO7E,KAAKH,aAAa8P,GAActM,cACvCxD,aAAagQ,OAAOF,EAAc,UAIpC3P,SAKXR,EAAWhD,UAAUgT,SAAW,qBACnBxP,KAAKoE,WCrMlBrH,EAAQ+C,EAAQN,SAEP,kCAGE,YCDXzC,EAAQkD,EAAUT,SAET,+BAEI7B,GACLqC,KAAKL,cACFO,eAAiBnB,KAAMG,GAAOvB,SAC9BqC,KAAKJ,kBACHH,YAAYkP,UAAU5P,KAAMG,GAAOvB,gCAKnCA,GACLqC,KAAKL,cACFO,eAAiBnB,KAAMI,GAAOxB,SAC9BqC,KAAKJ,kBACHH,YAAYkP,UAAU5P,KAAMI,GAAOxB,gCAMxCqC,KAAKL,cACFA,QAAS,EACTK,KAAKJ,kBACHH,YAAYkP,UAAU5P,KAAM2F,UAE9BzD,wBAKLlC,EAAMZ,SACJ6B,MAAKL,cACFF,YAAYmP,IAAI7P,EAAMZ,QACtBsQ,YAAW,IAES,OAAvBzO,KAAKE,iBACQnB,EAAMZ,EAAI6B,KAAKE,eAE3BF,KAAKL,UACOZ,EAAMZ,GAAKY,KAAM2F,KAE3B1E,+BAIA,aCzDX,IAAMI,IAAS,GAAIN,EACnBM,IAAO4B,WACP5B,GAAOgE,MAAQ,OEHf,IAAM/C,IAAIhB,SAED,6BAEAe,KAAAA,OACA0O,GAAK1O,yBAIL0O,GAAK,8BAILlO,WAAW5B,KAAK8P,SAChB9N,cCdHX,GAAIhB,SAED,gCAEAe,KAAAA,OACA0O,GAAK1O,yBAIL0O,GAAK,8BAILlO,WAAW5B,KAAK8P,OCXnBzO,GAAIhB,SAED,oCAEAmB,KAAAA,QACAuO,IAAMjS,EAAW0D,0BAIjBuO,IAAM,yBAIa,IAApB/P,KAAK+P,IAAIpT,aACNiF,WAAW5B,KAAK+P,IAAI,SACpB/N,iBAEAJ,WAAW5B,KAAK+P,IAAIC,YCnBzB3O,GAAIhB,SAED,gCAEAlC,KAAAA,QACAiE,IAAMjE,yBAINiE,IAAM,4BAILjE,GAAK6B,KAAKoC,SACXR,WAAWzD,QEZdkD,GAAIhB,SAED,oCAEAlC,KAAAA,QACAiE,IAAMjE,OACN8R,SAAWvO,EAAQ1B,6BAInBoC,IAAM,UACN6N,SAAW,4BAIV9R,GAAK6B,KAAKoC,MACbpC,KAAKiQ,YCVZlT,GAAQsE,EAAGvB,SAEF,qCAGC3B,GAAK6B,KAAKoC,IACV+D,EAAchI,EAAGuD,EAAQ1B,YAC1BqC,aAAuC,kBAAhB8D,GAA8BA,EAAc,KAGnEnG,KAAKN,cACHwQ,gDAKmB,OAAtBlQ,KAAKqC,oBACFA,oBACAA,aAAe,uCAKjB6N,wCAIE1T,UAAUyE,OAAOlB,KAAKC,WACxBoC,IAAM,OKpCf,IAAMoB,MACH,mBAAoB,wBACpB,cAAe,mBACf,KAAM,OCOTzG,GAAQ4G,EAAG1D,SACF,oBACE,eACI,UACL,cACK,kBACC,OCLhBlD,EAAQ4G,EAAG1D,SACF,yBACE,eACI,UACL,cACK,kBACC,MEhBhB,IAAM0D,IAAIoB,EAAe,mCAEhB5G,KAAAA,QACAgS,mBAAqBhS,+BAIM,OAA5B6B,KAAKmQ,mBAA6B,IAC9BC,GAAapQ,KAAKmQ,wBACnBvO,WAAWwO,UAEbjM,QAAQS,MAAM5E,KAAKqE,gBCVtBhD,GAAIyD,EAAa,iCAER1D,GACNpB,KAAKJ,kBACHgC,WAAWR,0BAIPA,GACNpB,KAAKJ,kBACHkC,WAAWV,iIsDRtB,QAASiP,GAAyBC,MAC7BhT,GACAiT,EAAUD,EAAKE,aAEI,kBAAZD,GACNA,EAAQvK,aACFuK,EAAQvK,cAERuK,EAAQ,gBACTvK,WAAa1I,KAGb,eAGHA,EAnBRmT,OAAOC,eAAeC,EAAS,qBACvB,IAERA,EAAA,QAAqBN,gFCKrB,QAASO,GAAuBhB,SAAcA,IAAOA,EAAIiB,WAAajB,GAAQkB,QAAWlB,GARzFa,OAAOC,eAAeC,EAAS,qBACvB,GAGR,IAAII,GAAYC,GAEZC,EAAaL,EAAuBG,GAIpCT,EAAO7M,MAEW,oBAAXyN,MACHA,GACqB,mBAAXC,YACVA,OAGR,IAAI7T,IAAS,EAAI2T,EAAA,SAAuBX,EACxCK,GAAA,QAAqBrT,8ECrBrB8T,EAAOT,QAAUK,6DpDQjBvU,GAAO2J,EAAa5J,8BACR6U,EAAkBhM,EAASiM,cAE7BpC,EAAuC,kBAArBmC,IACnB5S,KAAM4S,EAAkBxP,MAAOwD,EAASkM,SAAUD,GACnDD,EAEElT,EAAK,YACLa,EAAMD,OAAS2F,QACR,GAGP1F,EAAMD,OAASG,IAASgQ,EAASzQ,OAC1BA,KAAKO,EAAMrB,OACXqB,EAAMD,OAASI,IAAS+P,EAASrN,QACjCA,MAAM7C,EAAMrB,OACZqB,EAAMD,OAAS2F,IAAOwK,EAASqC,YAC/BA,SAASvS,EAAMrB,aAIvBoI,YAAYnB,MAAMzG,MACnB8Q,IAAS,EAEPuC,eACS,cACF,IACJzL,YAAYlB,OAAO1G,OAEtB8Q,gBACKA,WAGJuC,MAMXpL,EAAa5J,UAAUyJ,IAAgB,iBAC9BjG,OCNTjD,EAAQ2J,EAAS5G,SAER,wCAGAmH,YAAcjH,KAAK8G,iBAInB,GAAIjK,GAAImD,KAAK8G,aAAcjK,EAAImD,KAAK+G,SAASpK,OAAQE,SACnDkK,SAASlK,GAAG+H,MAAM5E,KAAKwH,WAAW3K,QAEpC,GAAI4U,GAAI,EAAGA,EAAIzR,KAAK8G,aAAc2K,SAChC1K,SAAS0K,GAAG7M,MAAM5E,KAAKwH,WAAWiK,GAGrCzR,MAAKqH,4BACFA,sBAAuB,OACvBqK,eAEH1R,KAAKsH,0BACFtF,0CAKHrF,GAASqD,KAAK+G,SAASpK,OACvBE,aACCA,EAAI,EAAGA,EAAIF,EAAQE,SACjBkK,SAASlK,GAAGgI,OAAO7E,KAAKwH,WAAW3K,gCAWrC,GAND8U,IAAe,EACfC,GAAY,EACZjV,EAASqD,KAAKkH,cAAcvK,OAC5BkV,EAAa,GAAIrU,OAAMb,GACvBmV,EAAa,GAAItU,OAAMb,GAElBE,EAAI,EAAGA,EAAIF,EAAQE,MACfA,GAAKmD,KAAKkH,cAAcrK,KACxBA,GAAKmD,KAAKmH,cAActK,GAE/BgV,EAAWhV,KAAOuK,QACL,GAGK3D,SAAlBqO,EAAWjV,QACD,MAIZ8U,EAAc,IACV9K,GAAa7G,KAAKgH,iBACnBpF,WAAWiF,EAAWgL,IAEzBD,QACG9P,WAAWyE,EAAwBuL,yBAIjCjV,EAAGmC,GAERA,EAAMD,OAASG,IAASF,EAAMD,OAASI,IAErCH,EAAMD,OAASG,UACZgI,cAAcrK,GAAKmC,EAAMrB,WACzBwJ,cAActK,GAAK4G,QAEtBzE,EAAMD,OAASI,UACZ+H,cAAcrK,GAAKuK,QACnBD,cAActK,UACVmD,KAAKuH,0BACLvI,EAAMrB,QAIbd,EAAImD,KAAK8G,eACP9G,KAAKJ,iBACFyH,sBAAuB,OAEvBqK,gBAML7U,EAAImD,KAAK8G,oBACNG,cACoB,IAArBjH,KAAKiH,cACHjH,KAAKJ,iBACF0H,qBAAsB,OAEtBtF,kCASNxF,UAAUyE,OAAOlB,KAAKC,WACxB+G,SAAW,UACXG,cAAgB,UAChBC,cAAgB,UAChBH,YAAc,UACdQ,WAAa,OoDlJtB,IAAMhI,4BAGKW,sBAIF/C,EAAGC,SACDD,GAAEkO,MAAMjO,gBAGd+D,SACMyC,GAASzC,iBAGdjD,EAAIwD,SACCA,GAAIzD,IAAIC,mBAGX4T,EAAOC,EAAOrQ,SACXA,GAAIqH,UAAU+I,GAAO7T,IAAI8T,gBAO/BC,EAAOC,SACDxK,KAASuK,EAAOC,GAAS,SAAC/T,EAAIgU,SAAQhU,GAAGgU,qBAG5ChU,EAAIwD,SACDA,GAAIyQ,QAAQjU,uCnDlCjBmC,yBAEGnC,KAAAA,QACAiE,IAAMjE,yBAINiE,IAAM,4BAGAhB,MACLjD,GAAK6B,KAAKoC,SACXR,WAAWzD,EAAGiD,MAKjBC,GAAIyD,EAAa,MAAOxE,IACxBqD,GAAIoB,EAAe,MAAOzE,IAG1BqH,GAAK,kBAAKvG,ICrBVd,yBAEGnC,KAAAA,QACAiE,IAAMjE,yBAINiE,IAAM,4BAGAhB,MACLjD,GAAK6B,KAAKoC,GACZjE,GAAGiD,SACAQ,WAAWR,KAMhBC,GAAIyD,EAAa,SAAUxE,IAC3BqD,GAAIoB,EAAe,SAAUzE,IAG7BqH,GAAK,kBAAKvG,ICvBVd,yBAEGyH,KAAAA,OACAsK,GAAKtK,EACNA,GAAK,QACF/F,kCAIIZ,QACNiR,UACAzQ,WAAWR,GACA,IAAZpB,KAAKqS,SACFrQ,aAMLX,GAAIyD,EAAa,OAAQxE,IACzBqD,GAAIoB,EAAe,OAAQzE,ICpB3BA,yBAEGyH,KAAAA,OACAsK,GAAKtK,EACNA,GAAK,QACF/F,kCAIIZ,QACNiR,UACAvQ,WAAWV,GACA,IAAZpB,KAAKqS,SACFrQ,aAMLX,GAAIyD,EAAa,aAAcxE,IAC/BqD,GAAIoB,EAAe,aAAczE,ICpBjCA,yBAEGnC,KAAAA,QACAiE,IAAMjE,yBAINiE,IAAM,4BAGAhB,MACLjD,GAAK6B,KAAKoC,GACZjE,GAAGiD,QACAQ,WAAWR,QAEXY,aAMLX,GAAIyD,EAAa,YAAaxE,IAC9BqD,GAAIoB,EAAe,YAAazE,IAGhCqH,GAAK,kBAAKvG,ICxBVd,0BAGGgS,WAAalL,0BAIbkL,WAAa,4BAGPlR,QACNkR,WAAalR,yBAIdpB,KAAKsS,aAAelL,SACjBxF,WAAW5B,KAAKsS,iBAElBtQ,aAKHX,GAAIyD,EAAa,OAAQxE,IACzBqD,GAAIoB,EAAe,OAAQzE,ICzB3BA,yBAEGyH,KAAAA,OACAsK,GAAK1T,KAAKD,IAAI,EAAGqJ,0BAGX3G,GACK,IAAZpB,KAAKqS,QACFzQ,WAAWR,QAEXiR,OAMLhR,GAAIyD,EAAa,OAAQxE,IACzBqD,GAAIoB,EAAe,OAAQzE,ICjB3BA,yBAEGnC,KAAAA,QACAiE,IAAMjE,yBAINiE,IAAM,4BAGAhB,MACLjD,GAAK6B,KAAKoC,GACC,QAAbpC,KAAKoC,KAAiBjE,EAAGiD,UACtBgB,IAAM,MAEI,OAAbpC,KAAKoC,UACFR,WAAWR,KAMhBC,GAAIyD,EAAa,YAAaxE,IAC9BqD,GAAIoB,EAAe,YAAazE,IAGhCqH,GAAK,kBAAKvG,ICzBVd,yBAEGnC,KAAAA,QACAiE,IAAMjE,OACNoU,MAAQnL,0BAIRhF,IAAM,UACNmQ,MAAQ,4BAGFnR,MACLjD,GAAK6B,KAAKoC,GACZpC,MAAKuS,QAAUnL,IAAYjJ,EAAG6B,KAAKuS,MAAOnR,UACvCmR,MAAQnR,OACRQ,WAAWR,MAMhBC,GAAIyD,EAAa,iBAAkBxE,IACnCqD,GAAIoB,EAAe,iBAAkBzE,IAGrC8H,GAAK,SAAChL,EAAGC,SAAMD,KAAMC,GC1BrBiD,yBAEGnC,KAAAA,GAAIoK,IAAAA,UACJnG,IAAMjE,OACNoU,MAAQhK,yBAIRgK,MAAQ,UACRnQ,IAAM,4BAGAhB,MACPpB,KAAKuS,QAAUnL,GAAS,IACpBjJ,GAAK6B,KAAKoC,SACXR,WAAWzD,EAAG6B,KAAKuS,MAAOnR,SAE5BmR,MAAQnR,IAKXC,GAAIyD,EAAa,OAAQxE,IACzBqD,GAAIoB,EAAe,OAAQzE,ICtB3BqD,GAAIoB,EAAe,6BAEhB5G,KAAAA,GAAIoK,IAAAA,UACJnG,IAAMjE,OACNqU,MAAQjK,EACTA,IAASnB,SACNxF,WAAW2G,0BAKbnG,IAAM,UACNoQ,MAAQ,4BAGFpR,MACLjD,GAAK6B,KAAKoC,GACW,QAAvBpC,KAAKE,eAA0BF,KAAKE,cAAcnB,OAASI,QACxDyC,WAAW5B,KAAKwS,QAAUpL,GAAUhG,EAAIjD,EAAG6B,KAAKwS,MAAOpR,SAEvDQ,WAAWzD,EAAG6B,KAAKE,cAAcvC,MAAOyD,OCtB7Cd,yBAEGnC,KAAAA,QACAiE,IAAMjE,yBAINiE,IAAM,4BAGAhB,OAGN,GAFCjD,GAAK6B,KAAKoC,IACVZ,EAAKrD,EAAGiD,GACLvE,EAAI,EAAGA,EAAI2E,EAAG7E,OAAQE,SACxB+E,WAAWJ,EAAG3E,MAMnBwE,GAAIyD,EAAa,UAAWxE,IAG5BqH,GAAK,kBAAKvG,ICvBVqR,MAEAnS,iCAEGE,IAAAA,UACAE,MAAQ/B,KAAKD,IAAI,EAAG8B,QACpBkS,cACAC,YAAc,cACXhV,GAAQkD,EAAK6R,MAAM1C,OACrBrS,KAAU8U,KACPzQ,aAEAJ,WAAWjE,2BAMf+U,MAAQ,UACRC,YAAc,4BAGRvR,GACPpB,KAAKJ,iBACFgC,WAAWR,SAEXsR,MAAMjL,KAAKrG,cACLpB,KAAK2S,YAAa3S,KAAKU,+BAKhCV,KAAKJ,iBACFoC,iBAEA0Q,MAAMjL,KAAKgL,eACLzS,KAAK2S,YAAa3S,KAAKU,UAMlCW,GAAIyD,EAAa,QAASxE,IAC1BqD,GAAIoB,EAAe,QAASzE,OwC7CnBsS,KAAKC,IACjB,iBAAMD,MAAKC,OACX,kBAAM,GAAID,OAAOE,WvCEdxS,iCAEGE,IAAAA,KAAMoI,IAAAA,QAASC,IAAAA,cACfnI,MAAQ/B,KAAKD,IAAI,EAAG8B,QACpBuS,SAAWnK,OACXoK,UAAYnK,OACZoK,eAAiB,UACjBC,WAAa,UACbC,WAAY,OACZC,cAAgB,OAChBC,eAAiB,iBAAMxS,GAAKyS,wCAI5BL,eAAiB,UACjBI,eAAiB,4BAGXjS,MACPpB,KAAKJ,iBACFgC,WAAWR,OACX,IACDmS,GAAUV,IACa,KAAvB7S,KAAKoT,eAAwBpT,KAAK+S,gBAC/BK,cAAgBG,MAEnBC,GAAYxT,KAAKU,OAAS6S,EAAUvT,KAAKoT,cACzCI,IAAa,QACVC,uBACAL,cAAgBG,OAChB3R,WAAWR,IACPpB,KAAKgT,iBACTS,uBACAR,eAAiB7R,OACjB8R,WAAaQ,WAAW1T,KAAKqT,eAAgBG,4BAMlDxT,KAAKJ,iBACFoC,WAEDhC,KAAKkT,gBACFC,WAAY,OAEZnR,uCAMe,OAApBhC,KAAKkT,0BACMlT,KAAKkT,iBACbA,WAAa,qCAKftR,WAAW5B,KAAKiT,qBAChBC,WAAa,UACbD,eAAiB,UACjBG,cAAiBpT,KAAK+S,SAAeF,KAAJ,EAClC7S,KAAKmT,gBACFnR,aAMLX,GAAIyD,EAAa,WAAYxE,IAC7BqD,GAAIoB,EAAe,WAAYzE,ICvE/BA,iCAEGE,IAAAA,KAAMuI,IAAAA,eACNrI,MAAQ/B,KAAKD,IAAI,EAAG8B,QACpBmT,WAAa5K,OACb6K,aAAe,OACfV,WAAa,UACbW,YAAc,UACdV,WAAY,OACZW,QAAU,iBAAMjT,GAAKkT,iCAIrBF,YAAc,UACdC,QAAU,4BAGJ1S,GACPpB,KAAKJ,iBACFgC,WAAWR,SAEXwS,aAAef,KAChB7S,KAAK2T,aAAe3T,KAAKkT,iBACtBtR,WAAWR,GAEbpB,KAAKkT,kBACHA,WAAaQ,WAAW1T,KAAK8T,QAAS9T,KAAKU,QAE7CV,KAAK2T,kBACHE,YAAczS,2BAMnBpB,KAAKJ,iBACFoC,WAEDhC,KAAKkT,aAAelT,KAAK2T,gBACtBR,WAAY,OAEZnR,iCAML2D,GAAOkN,KAAQ7S,KAAK4T,YACpBjO,GAAO3F,KAAKU,OAASiF,GAAQ,OAC1BuN,WAAaQ,WAAW1T,KAAK8T,QAAS9T,KAAKU,MAAQiF,SAEnDuN,WAAa,KACblT,KAAK2T,kBACH/R,WAAW5B,KAAK6T,kBAChBA,YAAc,MAEjB7T,KAAKmT,gBACFnR,cAOPX,GAAIyD,EAAa,WAAYxE,IAC7BqD,GAAIoB,EAAe,WAAYzE,ICnE/BA,yBAEGnC,KAAAA,QACAiE,IAAMjE,yBAINiE,IAAM,4BAGAhB,MACLjD,GAAK6B,KAAKoC,SACXN,WAAW3D,EAAGiD,MAKjBC,GAAIyD,EAAa,YAAaxE,IAC9BqD,GAAIoB,EAAe,YAAazE,IAGhCqH,GAAK,kBAAKvG,ICrBVd,yBAEGnC,KAAAA,QACAiE,IAAMjE,yBAINiE,IAAM,4BAGAhB,MACLjD,GAAK6B,KAAKoC,GACZjE,GAAGiD,SACAU,WAAWV,KAMhBC,GAAIyD,EAAa,eAAgBxE,IACjCqD,GAAIoB,EAAe,eAAgBzE,IAGnCqH,GAAK,kBAAKvG,ICvBVd,+BAIAe,GAAIyD,EAAa,eAAgBxE,IACjCqD,GAAIoB,EAAe,eAAgBzE,ICLnCA,+BAIAe,GAAIyD,EAAa,eAAgBxE,IACjCqD,GAAIoB,EAAe,eAAgBzE,ICLnCA,6BAIAe,GAAIyD,EAAa,YAAaxE,IAC9BqD,GAAIoB,EAAe,YAAazE,ICLhCA,yBAEGnC,KAAAA,QACAiE,IAAMjE,yBAINiE,IAAM,+BAILjE,GAAK6B,KAAKoC,SACXR,WAAWzD,UACX6D,aAKHX,GAAIyD,EAAa,YAAaxE,IAC9BqD,GAAIoB,EAAe,YAAazE,IClBhCA,yBAEG1B,KAAAA,IAAKF,IAAAA,SACLsV,KAAOtV,OACPuV,KAAOrV,OACP8T,gCAIAA,MAAQ,4BAGFtR,QACNsR,MAAQnU,EAAMyB,KAAK0S,MAAOtR,EAAGpB,KAAKgU,MACnChU,KAAK0S,MAAM/V,QAAUqD,KAAKiU,WACvBrS,WAAW5B,KAAK0S,SAMrBrR,GAAIyD,EAAa,gBAAiBxE,IAClCqD,GAAIoB,EAAe,gBAAiBzE,ICvBpCA,yBAEGnC,KAAAA,GAAIqL,IAAAA,gBACJpH,IAAMjE,OACN+V,YAAc1K,OACdkJ,gCAIAA,MAAQ,wBAIM,OAAf1S,KAAK0S,OAAwC,IAAtB1S,KAAK0S,MAAM/V,cAC/BiF,WAAW5B,KAAK0S,YAChBA,iCAIItR,QACNsR,MAAMjL,KAAKrG,MACVjD,GAAK6B,KAAKoC,GACXjE,GAAGiD,SACD+S,gCAKHnU,KAAKkU,kBACFC,cAEFnS,aAKHX,GAAIyD,EAAa,cAAexE,IAChCqD,GAAIoB,EAAe,cAAezE,IAGlCqH,GAAK,kBAAKvG,ICxCVd,yBAEGmJ,KAAAA,MAAOD,IAAAA,gBACP4K,OAAS3K,OACTyK,YAAc1K,OACdkJ,gCAIAA,MAAQ,wBAIM,OAAf1S,KAAK0S,OAAwC,IAAtB1S,KAAK0S,MAAM/V,cAC/BiF,WAAW5B,KAAK0S,YAChBA,iCAIItR,QACNsR,MAAMjL,KAAKrG,GACZpB,KAAK0S,MAAM/V,QAAUqD,KAAKoU,aACvBD,gCAKHnU,KAAKkU,kBACFC,cAEFnS,aAKHX,GAAIyD,EAAa,kBAAmBxE,IACpCqD,GAAIoB,EAAe,kBAAmBzE,ICpCtCA,iCAEGE,IAAAA,KAAMiJ,IAAAA,MAAOD,IAAAA,gBACb9I,MAAQF,OACR4T,OAAS3K,OACTyK,YAAc1K,OACd7I,YAAc,UACdC,SAAW,iBAAMC,GAAKsT,eACtBzB,gCAIA9R,SAAW,UACX8R,MAAQ,wBAIM,OAAf1S,KAAK0S,aACF9Q,WAAW5B,KAAK0S,YAChBA,iCAIItR,QACNsR,MAAMjL,KAAKrG,GACZpB,KAAK0S,MAAM/V,QAAUqD,KAAKoU,uBACdpU,KAAKW,kBACdwT,cACAxT,YAAcK,YAAYhB,KAAKY,SAAUZ,KAAKU,+BAKjDV,KAAKkU,aAAqC,IAAtBlU,KAAK0S,MAAM/V,aAC5BwX,cAEFnS,0CAIArB,YAAcK,YAAYhB,KAAKY,SAAUZ,KAAKU,YAC9CyD,QAAQS,MAAM5E,KAAKqE,yCAIC,OAArBrE,KAAKW,4BACOX,KAAKW,kBACdA,YAAc,WAEhBwD,QAAQU,OAAO7E,KAAKqE,eAMvBhD,GAAIyD,EAAa,wBAAyBxE,IAC1CqD,GAAIoB,EAAe,wBAAyBzE,ICxC5CA,yBAEGwJ,KAAAA,gBACAuK,OAASvK,EAAWH,GAAY3J;wBAIhCqU,OAAS,4BAGHjT,GACuC,OAA9CpB,KAAKqU,OAAO,qBAAqB,KAAMjT,SACpCiT,OAAO,uBAAuB,kCAKhCA,OAAO,uBAAuB,QAKjChT,GAAIyD,EAAa,YAAaxE,IAC9BqD,GAAIoB,EAAe,YAAazE,ICtChCA,yBAEGnC,KAAAA,QACAmW,SAAWnW,OACX8R,SAAWvO,EAAQ1B,6BAInBsU,SAAW,UACXrE,SAAW,0BAGPjR,QACJsV,SAAStU,KAAKiQ,SAAUjR,KAK3BqC,GAAIyD,EAAa,cAAexE,IAChCqD,GAAIoB,EAAe,cAAezE,ICdlC6J,GAAU3M,MAAM2M,SAAW,SAAS3I,SACM,mBAAvCiP,OAAOjU,UAAUgT,SAASzP,KAAKyB,GAoBxCzE,GAAQiN,GAAKlK,SAEJ,oCAKEE,KAAKuU,gBACLrS,WAGDvF,GAASqD,KAAK+G,SAASpK,YACxBsK,YAActK,MACd,GAAIE,GAAI,EAAGA,EAAIF,GAAUqD,KAAKN,QAAS7C,SACrCkK,SAASlK,GAAG+H,MAAM5E,KAAKwH,WAAW3K,oCAKpC,GAAIA,GAAI,EAAGA,EAAImD,KAAK+G,SAASpK,OAAQE,SACnCkK,SAASlK,GAAGgI,OAAO7E,KAAKwH,WAAW3K,0BAMrC,GADD2X,GAAS,GAAIhX,OAAMwC,KAAKkK,SAASvN,QAC5BE,EAAI,EAAGA,EAAImD,KAAKkK,SAASvN,OAAQE,MACjCA,GAAKmD,KAAKkK,SAASrN,GAAGmT,WAEzBnJ,GAAa7G,KAAKgH,iBACnBpF,WAAWiF,EAAW2N,4BAItB,GAAI3X,GAAI,EAAGA,EAAImD,KAAKkK,SAASvN,OAAQE,OACR,IAA5BmD,KAAKkK,SAASrN,GAAGF,cACZ,SAGJ,uBAGEE,EAAGmC,GACRA,EAAMD,OAASG,UACZgL,SAASrN,GAAG4K,KAAKzI,EAAMrB,OACxBqC,KAAKuU,gBACFrS,SAGLlD,EAAMD,OAASI,SACZ2C,WAAW9C,EAAMrB,OAEpBqB,EAAMD,OAAS2F,UACZuC,cACoB,IAArBjH,KAAKiH,kBACFjF,iCAMFxF,UAAUyE,OAAOlB,KAAKC,WACxB+G,SAAW,UACXmD,SAAW,UACXlD,YAAc,UACdQ,WAAa,OCzFtB,IAAMG,IAAM,kBAAKvG,GAmBjBrE,GAAQuN,GAAcxK,SAEb,6BAEF8P,EAAK6E,KACAA,GAAS9M,GACb3H,KAAK2K,cAAe,GAAM3K,KAAK8K,YAAYnO,OAASqD,KAAK2K,gBACtD+J,UAAUD,EAAM7E,IAEjB5P,KAAK0K,aAAc,GAAM1K,KAAK6K,OAAOlO,OAASqD,KAAK0K,eAChDiK,YAAYF,EAAM7E,IACC,QAAf5P,KAAK4K,aACTgK,qBACAC,KAAKjF,EAAK6E,sBAKbK,gBACEA,EAAM,SAACnT,SAAQoT,GAAKF,KAAKlT,uBAG3BA,GACF3B,KAAKgV,WAAWrT,MAAS,QACtBsT,aAAatT,yBAIVA,QACLkJ,OAAS1N,EAAO6C,KAAK6K,QAASlJ,wBAG3BA,MACJ3B,KAAKN,QAAS,KAkBXiC,EAAIhC,mBACHgC,EAAIzB,oBACDgC,MAAMP,EAAIzB,cAAcnB,KAAM4C,EAAIzB,cAAcvC,aAQpDuN,iBAAmBvJ,IACpBiD,MAAM5E,KAAK+K,qBACVG,iBAAmB,KACpBvJ,EAAIhC,cACDmL,YAAc3N,EAAO6C,KAAK8K,aAAcnJ,IACzC3B,KAAKN,cACFwV,UAAUvT,cAKdmJ,YAAc3N,EAAO6C,KAAK8K,aAAcnJ,wBAIvCA,cACFqN,EAAQ,iBAAMmG,GAAKH,WAAWrT,SAC/BsJ,cAAcxD,MAAM9F,IAAKA,EAAK0B,QAAS2L,MACxCA,MAAMA,wBAGDrN,KACLiD,MAAM5E,KAAK+K,gBAGX/K,KAAKN,cACFwV,UAAUvT,0BAINA,KACPkD,OAAO7E,KAAK+K,mBAEZqK,GAASxX,EAAWoC,KAAKiL,cAAe,SAAC2E,SAAQA,GAAIjO,MAAQA,GAC7DyT,MAAW,MACTC,OAAOrV,KAAKiL,cAAcmK,GAAQ/R,cACjC4H,cAAc4E,OAAOuF,EAAQ,4BAIxBpW,GACRA,EAAMD,OAASG,QACZ0C,WAAW5C,EAAMrB,OACbqB,EAAMD,OAASI,SACnB2C,WAAW9C,EAAMrB,8BAIbgE,MACP1D,GAAQR,EAAKuC,KAAK6K,OAAQlJ,eACzBkJ,OAAS7M,EAAOgC,KAAK6K,OAAQ5M,GAC3BA,uBAGE0D,GACL3B,KAAKN,cACF2C,aAAaV,MAEhB1D,GAAQR,EAAKuC,KAAK8K,YAAanJ,eAC9BmJ,YAAc9M,EAAOgC,KAAK8K,YAAa7M,GACxCA,KAAU,IACe,IAAvB+B,KAAK6K,OAAOlO,YACT2Y,aACgC,IAA5BtV,KAAK8K,YAAYnO,aACrB4Y,YAGFtX,iCAIF+W,WAAWhV,KAAK8K,YAAY,2BAIN,IAAvB9K,KAAK6K,OAAOlO,cACTkO,OAAS/M,EAAWkC,KAAK6K,aACzB6J,UAAU1U,KAAK6K,OAAOmF,wCAKxB,GAAInT,GAAI,EAAGoN,EAAUjK,KAAK8K,YAAajO,EAAIoN,EAAQtN,QAAUqD,KAAKN,QAAS7C,SACzE2Y,WAAWvL,EAAQpN,oCAKrB,GAAIA,GAAI,EAAGoN,EAAUjK,KAAK8K,YAAajO,EAAIoN,EAAQtN,OAAQE,SACzDwF,aAAa4H,EAAQpN,GAEE,QAA1BmD,KAAKkL,uBACF7I,aAAarC,KAAKkL,6CAKU,KAA5BlL,KAAK8K,YAAYnO,kDAMjBH,UAAUyE,OAAOlB,KAAKC,WACxB6K,OAAS,UACTC,YAAc,UACdC,eAAiB,UACjBE,cAAgB,QCrLzBlO,EAAQoO,GAAOb,UAEN,4BAGDtK,KAAKqL,mBACFrJ,cCFXjF,EAAQsE,GAAGvB,SAEF,6BAEId,GACLA,EAAMD,OAAS2F,SACZP,QAAU,UACVsR,mBAEAvT,MAAMlD,EAAMD,KAAMC,EAAMrB,kCAK1BqC,KAAKV,QAAS,MACZA,SAAU,SACTiM,GAAYvL,KAAKwL,WACC,OAAjBxL,KAAKmE,SAAoBnE,KAAKL,QAAUK,KAAKN,cAC7CyE,QAAUoH,EAAUvL,KAAKyL,cAC1BzL,KAAKmE,aACFA,QAAQS,MAAM5E,KAAKqE,kBAEnBrC,gBAGJ1C,SAAU,6BAKbU,KAAKmE,aACFA,QAAQS,MAAM5E,KAAKqE,kBAEnBoR,yCAKHzV,KAAKmE,cACFA,QAAQU,OAAO7E,KAAKqE,kCAKpB7H,UAAUyE,OAAOlB,KAAKC,WACxBwL,WAAa,UACbrH,QAAU,UACVE,YAAc,QErDvBtH,EAAQ4O,GAAMrB,UAEL,qBAEF3I,eACEkT,KAAKlT,GACH3B,sBAGF2B,eACA+T,QAAQ/T,GACN3B,QCJXjD,EAAQ6O,GAAStB,gCAGA9N,UAAU+R,cAAcxO,KAAKC,MACtCA,KAAKN,cACFyE,QAAQS,MAAM5E,KAAK+L,6CAKbvP,UAAUgS,gBAAgBzO,KAAKC,WACvCmE,QAAQU,OAAO7E,KAAK+L,mBACpB4J,oBAAqB,wBAGhB3W,MAENA,EAAMD,OAASG,GAAO,IAKpB0W,GAAW5V,KAAKJ,aAAeI,KAAK2V,oBAAsB3V,KAAK8L,eAAiB9M,EAAMrB,KACrFiY,SACEf,KAAK7V,EAAMrB,MAAOqC,KAAKoC,UAEzB0J,aAAe9M,EAAMrB,WACrBgY,oBAAqB,EAGxB3W,EAAMD,OAASI,SACZ2C,WAAW9C,EAAMrB,OAGpBqB,EAAMD,OAAS2F,KACb1E,KAAK6V,gBACF7T,gBAEA6J,YAAa,wBAOlB7L,KAAK6L,iBACF7J,iCAKMxF,UAAUyE,OAAOlB,KAAKC,WAC9BmE,QAAU,UACV2H,aAAe,UACfC,aAAe,QC9DxBhP,EAAQkP,GAAeL,yBAGT5M,MAENA,EAAMD,OAASI,GAAO,IACpByW,GAAW5V,KAAKJ,aAAeI,KAAK2V,oBAAsB3V,KAAK8L,eAAiB9M,EAAMrB,KACrFiY,SACEf,KAAK7V,EAAMrB,MAAOqC,KAAKoC,UAEzB0J,aAAe9M,EAAMrB,WACrBgY,oBAAqB,EAGxB3W,EAAMD,OAASG,SACZ0C,WAAW5C,EAAMrB,OAGpBqB,EAAMD,OAAS2F,KACb1E,KAAK6V,gBACF7T,gBAEA6J,YAAa,KE1B1B,IAAMvL,kCAEgBc,GACdpB,KAAKsM,iBAAmBlF,IAAWpH,KAAKsM,qBACrC1K,WAAWR,mCAKdpB,KAAKsM,iBAAmBlF,IAAYpH,KAAKsM,qBACtCtK,aAMLX,GAAIyD,GAAa,WAAYxE,IAC7BqD,GAAIoB,GAAe,WAAYzE,ICnB/B8M,GAAM,SAAC0I,EAAG1U,SAAMA,ICEhBd,iCAEgBc,GACdpB,KAAKsM,iBAAmBlF,SACrBxF,WAAWR,mCAKdpB,KAAKsM,iBAAmBlF,SACrBpF,aAMLX,GAAIyD,GAAa,cAAexE,IAChCqD,GAAIoB,GAAe,cAAezE,ICnBlCA,0CAGG0B,aAKHX,GAAIyD,GAAa,cAAexE,IAChCqD,GAAIoB,GAAe,cAAezE,ICRlCA,0FAEGkJ,WAAAA,qBACAkJ,cACAwB,YAAc1K,yBAIdkJ,MAAQ,wBAIM,OAAf1S,KAAK0S,aACF9Q,WAAW5B,KAAK0S,YAChBA,wCAKH1S,KAAKkU,kBACFC,cAEFnS,0CAIAoK,SAASxH,MAAM5E,KAAKyM,oBACrBzM,KAAKL,QAA8B,OAApBK,KAAKqM,iBACjBA,WAAWzH,MAAM5E,KAAKuM,oDAIXnL,QACbsR,MAAMjL,KAAKrG,0CAIX+S,yCAIAnU,KAAKkU,kBACHlS,aAOLX,GAAIyD,GAAa,WAAYxE,IAC7BqD,GAAIoB,GAAe,WAAYzE,ICjD/BA,0FAEGkJ,WAAAA,oBAAmBuM,cAAAA,qBACnBrD,cACAwB,YAAc1K,OACdwM,eAAiBD,yBAIjBrD,MAAQ,wBAIM,OAAf1S,KAAK0S,aACF9Q,WAAW5B,KAAK0S,YAChBA,wCAKH1S,KAAKkU,kBACFC,cAEFnS,yCAGaZ,QACbsR,MAAMjL,KAAKrG,GACZpB,KAAKsM,iBAAmBlF,IAAYpH,KAAKsM,qBACtC6H,yCAKFnU,KAAKkU,aAAgBlU,KAAKsM,iBAAmBlF,KAAWpH,KAAKsM,qBAC3DtK,2CAIaZ,GAChBpB,KAAKgW,iBAAmB5U,QACrB+S,cAIF7H,eAAiBlL,IAMpBC,GAAIyD,GAAa,gBAAiBxE,IAClCqD,GAAIoB,GAAe,gBAAiBzE,ICnDpCqN,GAAI,kBAAM,GACVD,GAAI,kBAAM,GCJVpN,yBAEGnC,KAAAA,QACAiE,IAAMjE,yBAINiE,IAAM,4BAGAhB,MACLjD,GAAK6B,KAAKoC,IACZ9E,EAASa,EAAGiD,EACZ9D,GAAO2Y,aACJnU,WAAWxE,EAAOuE,YAElBD,WAAWR,KAMhBC,GAAIyD,EAAa,iBAAkBxE,IACnCqD,GAAIoB,EAAe,iBAAkBzE,IAGrCuN,GAAQ,mBAAOoI,SAAS,EAAMpU,MAAOT,IC1BrCd,yBAEGnC,KAAAA,QACAiE,IAAMjE,yBAINiE,IAAM,4BAGAhB,MACLjD,GAAK6B,KAAKoC,IACV9E,EAASa,EAAGiD,EACd9D,GAAO2Y,aACJrU,WAAWtE,EAAOK,YAElBmE,WAAWV,KAMhBC,GAAIyD,EAAa,iBAAkBxE,IACnCqD,GAAIoB,EAAe,iBAAkBzE,IAGrCuN,GAAQ,mBAAOoI,SAAS,EAAMtY,MAAOyD,IC1BrCd,0BAESc,QACNU,WAAWV,QACXY,aAKHX,GAAIyD,EAAa,aAAcxE,IAC/BqD,GAAIoB,EAAe,aAAczE,GC8CvCd,GAAWhD,UAAUwI,WAAa,SAAS7G,SAClC6G,GAAWhF,KAAM7B,IAK1BqB,EAAWhD,UAAUyI,QAAU,iBACtBA,GAAQjF,OAajBR,EAAWhD,UAAU0Z,UAAY,SAASxQ,SACjCwQ,GAAUlW,KAAM0F,IAQzBlG,EAAWhD,UAAU8J,eAAiBA,EAEtC9G,EAAWhD,UAAUyJ,IAAgBK,EAWrC9G,EAAWhD,UAAU0B,IAAM,SAASC,SAC3BD,IAAI8B,KAAM7B,IAMnBqB,EAAWhD,UAAUqL,OAAS,SAAS1J,SAC9B0J,IAAO7H,KAAM7B,IAMtBqB,EAAWhD,UAAUsL,KAAO,SAASC,SAC5BD,IAAK9H,KAAM+H,IAMpBvI,EAAWhD,UAAU6J,WAAa,SAAS0B,SAClC1B,IAAWrG,KAAM+H,IAM1BvI,EAAWhD,UAAUwL,UAAY,SAAS7J,SACjC6J,IAAUhI,KAAM7B,IAMzBqB,EAAWhD,UAAUmJ,KAAO,iBACnBA,IAAK3F,OAMdR,EAAWhD,UAAUyL,KAAO,SAASF,SAC5BE,IAAKjI,KAAM+H,IAMpBvI,EAAWhD,UAAU0L,UAAY,SAAS/J,SACjC+J,IAAUlI,KAAM7B,IAMzBqB,EAAWhD,UAAU2L,eAAiB,SAAShK,SACtCgK,IAAenI,KAAM7B,IAM9BqB,EAAWhD,UAAU8L,KAAO,SAASnK,EAAIoK,SAChCD,IAAKtI,KAAM7B,EAAIoK,IAKxB/I,EAAWhD,UAAUgM,KAAO,SAASrK,EAAIoK,SAChCC,IAAKxI,KAAM7B,EAAIoK,IAMxB/I,EAAWhD,UAAUiM,QAAU,SAAStK,SAC/BsK,IAAQzI,KAAM7B,IAMvBqB,EAAWhD,UAAUkM,MAAQ,SAASlI,SAC7BkI,IAAM1I,KAAMQ,IAOrBhB,EAAWhD,UAAUmM,SAAW,SAASnI,EAAMC,SACtCkI,IAAS3I,KAAMQ,EAAMC,IAO9BjB,EAAWhD,UAAUsM,SAAW,SAAStI,EAAMC,SACtCqI,IAAS9I,KAAMQ,EAAMC,IAM9BjB,EAAWhD,UAAUwM,UAAY,SAAS7K,SACjC6K,IAAUhJ,KAAM7B,IAMzBqB,EAAWhD,UAAUyM,aAAe,SAAS9K,SACpC8K,IAAajJ,KAAM7B,IAM5BqB,EAAWhD,UAAU0M,aAAe,iBAC3BA,IAAalJ,OAMtBR,EAAWhD,UAAU2M,aAAe,iBAC3BA,IAAanJ,OAMtBR,EAAWhD,UAAU4M,UAAY,iBACxBA,IAAUpJ,OAMnBR,EAAWhD,UAAU6M,UAAY,SAASlL,SACjCkL,IAAUrJ,KAAM7B,IAMzBqB,EAAWhD,UAAU8M,cAAgB,SAAS5K,EAAKE,SAC1C0K,IAActJ,KAAMtB,EAAKE,IAOlCY,EAAWhD,UAAU+M,YAAc,SAASpL,EAAIsC,SACvC8I,IAAYvJ,KAAM7B,EAAIsC,IAM/BjB,EAAWhD,UAAU2Z,gBAAkB,SAAS1M,EAAOhJ,SAC9C0V,IAAgBnW,KAAMyJ,EAAOhJ,IAOtCjB,EAAWhD,UAAUkN,sBAAwB,SAASlJ,EAAMiJ,EAAOhJ,SAC1DiJ,IAAsB1J,KAAMQ,EAAMiJ,EAAOhJ,IAMlDjB,EAAWhD,UAAUqN,UAAY,SAASC,SACjCD,IAAU7J,KAAM8J,IAMzBtK,EAAWhD,UAAUuN,YAAc,SAAS5L,SACnC4L,IAAY/J,KAAM7B,IAW3BqB,EAAWhD,UAAUkL,QAAU,SAAS0O,EAAOvP,SACtCa,KAAS1H,KAAMoW,GAAQvP,IAKhCrH,EAAWhD,UAAU4N,IAAM,SAASgM,EAAOvP,SAClCuD,KAAKpK,KAAMoW,GAAQvP,IAK5BrH,EAAWhD,UAAU8O,MAAQ,SAAS8K,SAC7B9K,KAAOtL,KAAMoW,KAKtB5W,EAAWhD,UAAUW,OAAS,SAASiZ,SAC9BjZ,KAAQ6C,KAAMoW,IAKvB,IAAMC,IAAO,iBACJ,IAAI1K,IASbnM,GAAWhD,UAAU4V,QAAU,SAASjU,SAC/B,IAAIyN,IAAQ5L,KAAM7B,GAAIwE,QAAQ3C,KAAM,YAE7CR,EAAWhD,UAAU8Z,cAAgB,SAASnY,SACrC,IAAIyN,IAAQ5L,KAAM7B,GAAKqM,UAAW,EAAGC,KAAM,QAAQ9H,QAAQ3C,KAAM,kBAE1ER,EAAWhD,UAAU+Z,aAAe,SAASpY,SACpC,IAAIyN,IAAQ5L,KAAM7B,GAAKqM,UAAW,IAAI7H,QAAQ3C,KAAM,iBAE7DR,EAAWhD,UAAUga,cAAgB,SAASrY,SACrC,IAAIyN,IAAQ5L,KAAM7B,GAAKoM,UAAU,EAAIC,UAAW,IAAI7H,QAAQ3C,KAAM,kBAE3ER,EAAWhD,UAAUia,mBAAqB,SAAStY,EAAIuY,SAC9C,IAAI9K,IAAQ5L,KAAM7B,GAAKoM,UAAU,EAAIC,UAAWkM,IAAQ/T,QAAQ3C,KAAM,uBAK/ER,EAAWhD,UAAUma,cAAgB,SAASxY,SACrC,IAAI8N,IAAcjM,KAAM7B,GAAIwE,QAAQ3C,KAAM,kBAWnDR,EAAWhD,UAAU0Q,SAAW,SAASkJ,SAChClJ,IAASlN,KAAMoW,IAMxB5W,EAAWhD,UAAU2Q,UAAY,SAASiJ,EAAOvP,SACxC+P,IAAgB5W,KAAMoW,EAAOvP,IAMtCrH,EAAWhD,UAAU6Q,YAAc,SAAS+I,SACnC/I,IAAYrN,KAAMoW,IAM3B5W,EAAWhD,UAAU8Q,YAAc,SAAS8I,SACnC9I,IAAYtN,KAAMoW,IAO3B5W,EAAWhD,UAAU+Q,SAAW,SAAS6I,EAAO3V,SACvC8M,IAASvN,KAAMoW,EAAO3V,IAO/BjB,EAAWhD,UAAUgR,cAAgB,SAAS4I,EAAO3V,SAC5C+M,IAAcxN,KAAMoW,EAAO3V,GAQpC,IAAI0N,KAAuB,CAc3B3O,GAAWhD,UAAUiR,SAAW,SAAS2I,aAClC,iGACE3I,GAASzN,KAAMoW,IAMxB5W,EAAWhD,UAAUoR,eAAiB,SAASzP,aACxC,uGACEyP,GAAe5N,KAAM7B,IAO9BqB,EAAWhD,UAAUsR,eAAiB,SAAS3P,aACxC,uGACE2P,GAAe9N,KAAM7B,IAM9BqB,EAAWhD,UAAUuR,WAAa,qBAC3B,mGACEA,GAAW/N,MAQpB,IAAM6W,KAAUrX,aAAYM,SAAQG,WAAUE,QAAOgB,QAAOG,WAAUC,0BAC5DY,eAAcI,eAAcK,mBAAkBU,aAAYhB,oBAC1DwB,gBAAeoB,cAAaY,mBAAkB4B,WAAS0C,OAAKkB,mBAC9DK,QAAM0K,QAAM3K,UAAQoL,cAE5BD,IAAMA,MAAQA"}