{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "/Users/johann/Development/speedtest/lib/Network.js",
    "/Users/johann/Development/speedtest/lib/EventDispatcher.js",
    "/Users/johann/Development/speedtest/lib/Http/BandwidthModule.js",
    "/Users/johann/Development/speedtest/lib/Http/HttpModule.js",
    "/Users/johann/Development/speedtest/lib/Http/LatencyModule.js",
    "/Users/johann/Development/speedtest/lib/Timing.js",
    "/Users/johann/Development/speedtest/utils/helpers.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import EventDispatcher from './EventDispatcher';\nimport HttpModule from './Http/HttpModule';\nimport LatencyModule from './Http/LatencyModule';\nimport BandwidthModule from './Http/BandwidthModule';\nimport Timing from './Timing';\nimport {isObject, assign, except} from '../utils/helpers';\n\nexport default class Network {\n\n    /**\n     * Only for testing purposes! Exposes all the internal classes to the global scope.\n     */\n    static _exposeInternalClasses()\n    {\n        assign(window, {EventDispatcher, HttpModule, LatencyModule, BandwidthModule, Timing});\n    }\n\n    constructor(settings = {})\n    {\n        this._modules = {};\n        this._modulesInitialized = false;\n        this._pendingSettings = {};\n\n        this._registerModule('latency', settings => new LatencyModule(settings))\n            ._registerModule('upload', settings => new BandwidthModule('upload', settings))\n            ._registerModule('download', settings => new BandwidthModule('download', settings));\n\n        this._initModules(this.settings(settings));\n    }\n\n    settings(settings = null)\n    {\n        let moduleNames = Object.keys(this._modules);\n\n        if (isObject(settings)) {\n            // Extract the global settings\n            let globalSettings = except(settings, moduleNames);\n\n            // Extract the local settings\n            let localSettings = except(settings, Object.keys(globalSettings));\n\n            // Create new settings with the global ones nested in the local ones\n            settings = moduleNames.reduce((settings, moduleName) => {\n                return assign(settings, {[moduleName]: globalSettings});\n            }, {});\n\n            // Apply the local settings to the new settings\n            settings = assign(settings, localSettings);\n\n            // Apply the settings to the modules\n            if (this._modulesInitialized) {\n                Object.keys(this._modules).forEach(name => {\n                    this._modules[name].settings(settings[name]);\n                });\n            }\n\n            // If the modules aren't instanciated, store the settings.\n            else {\n                this._pendingSettings = settings;\n            }\n\n            return this;\n        } else {\n            return moduleNames.reduce((settings, moduleName) => {\n                return assign(settings, {[moduleName]: this._modules[moduleName].settings()});\n            }, {});\n        }\n    }\n\n    isRequesting()\n    {\n        let requesting = false;\n\n        for (let name in this._modules) {\n            if (this._modules.hasOwnProperty(name)) {\n                requesting = requesting || this._modules[name].isRequesting();\n            }\n        }\n\n        return requesting;\n    }\n\n    _registerModule(name, moduleCallback)\n    {\n        this._modules[name] = moduleCallback;\n        return this;\n    }\n\n    _initModules()\n    {\n        if (!this._modulesInitialized) {\n            // Initialize the modules with their respective settings\n            Object.keys(this._modules).forEach(name => {\n                this._modules[name] = this._modules[name](this._pendingSettings[name]).on('_newRequest', () => {\n                    return !this.isRequesting();\n                });\n\n                this[name] = this._modules[name];\n            });\n\n            this._modulesInitialized = true;\n        }\n\n        return this;\n    }\n\n}\n",
    "export default class EventDispatcher {\n\n    constructor()\n    {\n        // Contains all the event callbacks, organized by event types.\n        this._events = {};\n    }\n\n    on(eventTypes, callback)\n    {\n        eventTypes = Array.isArray(eventTypes) ? eventTypes : [eventTypes];\n\n        eventTypes.forEach(eventType => {\n            var events = this._events[eventType] = this._events[eventType] || [];\n\n            // If the callback isn't already registered, store it.\n            if (!~events.indexOf(callback)) {\n                events.push(callback);\n            }\n        });\n\n        return this;\n    }\n\n    off(eventTypes, callback)\n    {\n        eventTypes = Array.isArray(eventTypes) ? eventTypes : [eventTypes];\n\n        eventTypes.forEach(eventType => {\n            var events = this._events[eventType];\n\n            // If there is no specified callback, simply delete all the callbacks binded to the provided event type.\n            if (callback == undefined && events) {\n                delete this._events[eventType];\n            } else {\n                var eventIndex = events ? events.indexOf(callback) : -1;\n\n                // If the callback is registered, remove it from the array.\n                if (~eventIndex) {\n                    events.splice(eventIndex, 1);\n                }\n            }\n        });\n\n        return this;\n    }\n\n    trigger(eventType, ...extraParameters)\n    {\n        var events = this._events[eventType] || [];\n\n        // A callback can return a boolean value which will be logically compared to the other callbacks values before\n        // being returned by the trigger() method. This allows a callback to send a \"signal\" to the caller, like\n        // cancelling an action.\n        var returnValue = true;\n\n        events.forEach(callback => {\n            // A callback must explicitly return false if it wants the trigger() method to return false, undefined will\n            // not work. This avoids crappy callbacks to mess up with the triggering system.\n            var value = callback(...extraParameters);\n            value = value !== false ? true : false;\n\n            returnValue = returnValue && value; // Compare the result of the callback to the actual return value\n        });\n\n        return returnValue;\n    }\n\n}\n",
    "import HttpModule from './HttpModule';\nimport Timing from '../Timing';\nimport {defer} from '../../utils/helpers';\n\nexport default class BandwidthModule extends HttpModule {\n\n    constructor(loadingType, settings = {})\n    {\n        loadingType = (~['upload', 'download'].indexOf(loadingType)) ? loadingType : 'download';\n\n        this._enhanceDefaultSettings({\n            data: {\n                // 2 MB for upload, 10 MB for download\n                size: loadingType == 'upload' ? (2 * 1024 * 1024) : (10 * 1024 * 1024),\n                multiplier: 2\n            }\n        });\n\n        super.constructor(loadingType, settings);\n\n        // Define the object properties\n        this._loadingType = loadingType;\n\n        this._intendedEnd = false;\n        this._isRestarting = false;\n\n        this._lastLoadedValue = null;\n        this._speedRecords = [];\n        this._avgSpeed = null;\n\n        this._requestID = 0;\n        this._progressID = 0;\n\n        this._started = false;\n        this._firstProgress = true;\n        this._deferredProgress;\n\n        // Unique labels for each request, exclusively used to make measures.\n        this._timingLabels = {\n            start: null,\n            progress: null,\n            end: null,\n            measure: null\n        };\n\n        // Bind to XHR events\n        this.on('xhr-upload-loadstart', () => Timing.mark(this._timingLabels.start));\n        this.on('xhr-readystatechange', xhr => {\n            if (!this._started && xhr.readyState == XMLHttpRequest.LOADING) {\n                Timing.mark(this._timingLabels.start);\n                this._started = true;\n            }\n        });\n\n        var eventsPrefix = (loadingType == 'upload') ? 'xhr-upload' : 'xhr';\n\n        this.on(`${eventsPrefix}-progress`, (xhr, event) => this._progress(event));\n        this.on(`${eventsPrefix}-timeout`, () => this._timeout());\n        this.on(`${eventsPrefix}-loadend`, () => this._end());\n    }\n\n    start()\n    {\n        var loadingType = this._loadingType,\n            dataSettings = this.settings().data,\n            reqID = this._requestID++;\n\n        this._intendedEnd = false;\n        this._lastLoadedValue = null;\n        this._speedRecords = [];\n        this._started = false;\n        this._firstProgress = true;\n        this._deferredProgress = defer();\n\n        // Trigger the start event\n        if (!this._isRestarting) {\n            this.trigger('start', dataSettings.size);\n        }\n\n        // Create unique timing labels for the new request\n        var labels = this._timingLabels;\n        labels.start = `${loadingType}-${reqID}-start`;\n        labels.progress = `${loadingType}-${reqID}-progress`;\n        labels.end = `${loadingType}-${reqID}-end`;\n        labels.measure = `${loadingType}-${reqID}-measure`;\n\n        // Generate some random data to upload to the server. Here we're using a Blob instead of an ArrayBuffer because\n        // of a bug in Chrome (tested in v33.0.1750.146), causing a freeze of the page while trying to directly upload\n        // an ArrayBuffer (through an ArrayBufferView). The freeze lasts nearly 4.5s for 10MB of data. Using a Blob\n        // seems to solve the problem.\n        var blob = (loadingType == 'upload') ? new Blob([new ArrayBuffer(dataSettings.size)]) : null;\n\n        var type = (loadingType == 'download') ? 'GET' : 'POST';\n\n        // Initiate and send a new request\n        this._newRequest(type, {\n            size: dataSettings.size\n        })._sendRequest(blob);\n    }\n\n    abort()\n    {\n        this._intendedEnd = true;\n        return this._abort();\n    }\n\n    _progress(event)\n    {\n        // Ignore the first progress event, it generally contributes to get incoherent values.\n        if (this._firstProgress) return this._firstProgress = false;\n\n        // Execute the previous progress trigger\n        this._deferredProgress.run();\n\n        var labels = this._timingLabels,\n            progressID = this._progressID++,\n            markLabel = `${labels.progress}-${progressID}`,\n            loaded = event.loaded;\n\n        Timing.mark(markLabel);\n\n        // Measure the average speed (B/s) since the request started\n        var avgMeasure = Timing.measure(\n                `${labels.measure}-avg-${progressID}`,\n                labels.start,\n                markLabel\n            ),\n            avgSpeed = loaded / avgMeasure * 1000;\n\n        var instantSpeed;\n\n        if (!this._lastLoadedValue) { // We are executing the first progress event of the current request\n            instantSpeed = avgSpeed; // The instant speed of the first progress event is equal to the average one\n        } else {\n            // Measure the instant speed (B/s), which defines the speed between two progress events.\n            var instantMeasure = Timing.measure(\n                `${labels.measure}-instant-${progressID}`,\n                // Set the mark of the previous progress event as the starting point\n                `${labels.progress}-${progressID - 1}`,\n                markLabel\n            );\n            instantSpeed = (loaded - this._lastLoadedValue) / instantMeasure * 1000;\n        }\n\n        // Save the `loaded` property of the event for the next progress event\n        this._lastLoadedValue = loaded;\n\n        // Defer measures saving and event triggering, this allows to cancel the last progress event, which can generate\n        // incoherent values.\n        this._deferredProgress = defer(() => {\n            this._avgSpeed = avgSpeed;\n            this._speedRecords.push(instantSpeed);\n\n            this.trigger('progress', avgSpeed, instantSpeed);\n        });\n    }\n\n    _timeout()\n    {\n        this._intendedEnd = true;\n    }\n\n    _end()\n    {\n        // A timeout or an abort occured, bypass the further requests and trigger the \"end\" event.\n        if (this._intendedEnd) {\n            this._isRestarting = false;\n            this.trigger('end', this._avgSpeed, this._speedRecords);\n        }\n\n        // The request ended to early, restart it with an increased data size.\n        else {\n            var loadingType = this._loadingType,\n                dataSettings = this.settings().data;\n\n            dataSettings.size *= dataSettings.multiplier;\n\n            this.trigger('restart', dataSettings.size);\n\n            this._isRestarting = true;\n            this.start();\n        }\n    }\n\n\n}\n",
    "import EventDispatcher from '../EventDispatcher';\nimport {isObject, assign, assignStrict} from '../../utils/helpers';\n\nexport default class HttpModule extends EventDispatcher {\n\n    constructor(moduleName, settings = {})\n    {\n        super.constructor();\n\n        this._enhanceDefaultSettings({\n            endpoint: './network.php',\n            delay: 8000\n        });\n\n        this.settings(settings);\n\n        this._moduleName = moduleName;\n        this._xhr = null;\n        this._lastURLToken = null;\n\n        this._requestingOverridden = false;\n        this._requesting = false;\n\n        // Each time a request starts or ends, set the requesting value unless it has been overridden with the\n        // _setRequesting() method.\n        this.on(['xhr-loadstart', 'xhr-upload-loadstart'], () => {\n            if (!this._requestingOverridden) {\n                this._requesting = true;\n            }\n        });\n\n        this.on(['xhr-loadend', 'xhr-upload-loadend'], () => {\n            if (!this._requestingOverridden) {\n                this._requesting = false;\n            }\n        });\n    }\n\n    settings(settings = null)\n    {\n        if (isObject(settings)) {\n            this._settings = assignStrict(this._defaultSettings || {}, this._settings || {}, settings);\n            return this;\n        } else {\n            return this._settings || this._defaultSettings || {};\n        }\n    }\n\n    isRequesting()\n    {\n        return this._requesting;\n    }\n\n    _enhanceDefaultSettings(settings)\n    {\n        this._defaultSettings = assign(this._defaultSettings || {}, settings);\n    }\n\n    _newRequest(httpMethod, queryParams)\n    {\n        // Check if a callback binded to the \"_newRequest\" event returns false, if it's the case, cancel the request\n        // creation. If the requesting status has been overridden, there's no need to cancel the request since the user\n        // should know what he's doing.\n        if (!this.trigger('_newRequest') && !this._requestingOverridden) {\n            console.warn('To ensure accurate measures, you can only make one request at a time.');\n            return this;\n        }\n\n        var settings = this.settings(),\n            xhr = new XMLHttpRequest(),\n            validHttpMethods = ['GET', 'POST'];\n\n        // Prepare the new request.\n        if (!~validHttpMethods.indexOf(httpMethod)) {\n            console.warn('The HTTP method must be GET or POST.');\n            return this;\n        }\n\n        queryParams = queryParams || {};\n\n        // Generate an URL token to avoid any caching issues. This token will also allow to identify the request in the\n        // Resource Timing entries.\n        var tokenSuffix = (new Date).getTime();\n        this._lastURLToken = `network-${tokenSuffix}`;\n\n        // Append the query parameters\n        var url = settings.endpoint;\n        url += ~url.indexOf('?') ? '&' : '?';\n        url += `module=${this._moduleName}`;\n\n        Object.keys(queryParams).forEach(param => {\n            var value = encodeURIComponent(queryParams[param]);\n            url += `&${param}=${value}`;\n        });\n\n        url += `&${this._lastURLToken}`;\n\n        xhr.open(httpMethod, url);\n\n        // Define the timeout of the request\n        xhr.timeout = settings.delay;\n\n        // Abort the previous request if it hasn't been sent\n        if (this._xhr && this._xhr.readyState == XMLHttpRequest.OPENED) {\n            this._xhr.abort();\n        }\n\n        // Replace the old request by the new one\n        this._xhr = xhr;\n\n        // Bind all the XHR events\n        var self = this,\n            eventTypes = ['loadstart', 'progress', 'abort', 'error', 'load', 'timeout', 'loadend', 'readystatechange'];\n\n        eventTypes.forEach(eventType => {\n            xhr.addEventListener(eventType, function() {\n                // A last progress event can be triggered once a request has timed out, ignore it.\n                if (eventType == 'progress' && !self._requesting) {\n                    return;\n                }\n\n                self.trigger(`xhr-${eventType}`, xhr, ...arguments);\n            });\n\n            // The XMLHttpRequestUpload interface supports all the above event types except the \"readystatechange\" one\n            if (eventType != 'readystatechange') {\n                xhr.upload.addEventListener(eventType, function() {\n                    self.trigger(`xhr-upload-${eventType}`, xhr, ...arguments);\n                });\n            }\n        });\n\n        return this;\n    }\n\n    _sendRequest(data)\n    {\n        if (this._xhr && this._xhr.readyState == XMLHttpRequest.OPENED) {\n            this._xhr.send(typeof data != 'undefined' ? data : null);\n        } else {\n            console.warn('A request must have been created before it can be sent.');\n        }\n\n        return this;\n    }\n\n    _abort()\n    {\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n\n        return this;\n    }\n\n    _getTimingEntry(callback)\n    {\n        // The Resource Timing entries aren't immediately available once the 'load' event is triggered by an\n        // XMLHttpRequest, we must wait for another process tick to check for a refreshed list.\n        setTimeout((lastURLToken => {\n            return () => {\n                // Filter the timing entries to return only the one concerned by the last request made\n                var entries = performance.getEntriesByType('resource').filter(function(entry) {\n                    return ~entry.name.indexOf(lastURLToken);\n                });\n\n                // Return the entry through the callback\n                typeof callback == 'function' && callback(entries.length ? entries[0] : null);\n            };\n        })(this._lastURLToken), 0);\n\n        return this;\n    }\n\n    _setRequesting(value)\n    {\n        this._requestingOverridden = true;\n        this._requesting = value;\n    }\n\n}\n",
    "import HttpModule from './HttpModule';\nimport Timing from '../Timing';\nimport {isObject, assignStrict, except} from '../../utils/helpers';\n\nexport default class LatencyModule extends HttpModule {\n\n    constructor(settings = {})\n    {\n        this._enhanceDefaultSettings({\n            measures: 5,\n            attempts: 3\n        });\n\n        super.constructor('latency');\n\n        // Don't use the settings method of parent class but the overridden one in this class\n        this.settings(settings);\n\n        // Define the object properties\n        this._requestsLeft = 0;\n        this._attemptsLeft = 0;\n\n        this._latencies = [];\n        this._requestID = 0;\n\n        // Unique labels for each request, exclusively used to make measures.\n        this._timingLabels = {\n            start: null,\n            end: null,\n            measure: null\n        };\n\n        // Measure the latency with the Resource Timing API once the request is finished\n        if (Timing.supportsResourceTiming()) {\n            this.on('xhr-load', () => this._measure());\n        }\n\n        // If the browser doesn't support the Resource Timing API, we fallback on a Datetime solution.\n        else {\n            // Set a mark when the request starts\n            this.on('xhr-loadstart', () => Timing.mark(this._timingLabels.start));\n\n            // Then make a measure with the previous mark\n            this.on('xhr-readystatechange', xhr => this._measure(xhr));\n        }\n    }\n\n    settings(settings = null)\n    {\n        if (isObject(settings)) {\n            return super.settings(assignStrict(settings, {\n                delay: 0 // We dont want any timeout during a latency calculation\n            }));\n        } else {\n            return except(super.settings(), ['delay']);\n        }\n    }\n\n    start()\n    {\n        // Set the number of requests required to establish the network latency. If the browser doesn't support the\n        // Resource Timing API, add a request that will be ignored to avoid a longer request due to a possible\n        // DNS/whatever fetch.\n        let {measures, attempts} = this.settings();\n\n        this._requestsLeft = measures;\n        this._attemptsLeft = attempts * measures;\n\n        if (!Timing.supportsResourceTiming()) {\n            this._requestsLeft++;\n            this._attemptsLeft++;\n        }\n\n        // Override the requesting value since a complete latency request consists off multiple ones\n        this._setRequesting(true);\n\n        this._latencies = [];\n        this._nextRequest();\n\n        return this;\n    }\n\n    _nextRequest(retry = false)\n    {\n        const reqID = this._requestID++;\n        let requestsLeft = retry ? this._requestsLeft : this._requestsLeft--;\n\n        if (this._attemptsLeft-- && (requestsLeft || retry)) {\n            // Create unique timing labels for the new request\n            var labels = this._timingLabels;\n            labels.start = `latency-${reqID}-start`;\n            labels.end = `latency-${reqID}-end`;\n            labels.measure = `latency-${reqID}-measure`;\n\n            // Create the new request and send it\n            this._newRequest('GET')._sendRequest();\n        } else {\n            // All the requests are finished, set the requesting status to false.\n            this._setRequesting(false);\n\n            // If all the requests have been executed, calculate the average latency. Since the _getTimingEntry() method\n            // is asynchronous, wait for the next process tick to execute the _end() method, to be sure that all the\n            // latencies have been retrieved.\n            setTimeout(() => this._end(), 0);\n        }\n    }\n\n    _measure(xhr = null)\n    {\n        // With Resource Timing API\n        if (!xhr) {\n            this._getTimingEntry(entry => {\n                // The latency calculation differs between an HTTP and an HTTPS connection\n                // See: http://www.w3.org/TR/resource-timing/#processing-model\n                let latency = !entry.secureConnectionStart\n                        ? entry.connectEnd - entry.connectStart\n                        : entry.secureConnectionStart - entry.connectStart;\n\n                if (latency) this._latencies.push(latency);\n                this._nextRequest(!latency);\n            });\n        }\n\n        // Without Resource Timing API\n        else if (this._requestsLeft < this.settings().measures) {\n\n            // Measure and save the latency if the headers have been received\n            if (xhr.readyState == XMLHttpRequest.HEADERS_RECEIVED) {\n                let labels = this._timingLabels;\n\n                Timing.mark(labels.end);\n                let latency = Timing.measure(labels.measure, labels.start, labels.end);\n\n                if (latency) this._latencies.push(latency);\n\n                // Abort the current request before we run a new one\n                this._abort();\n                this._nextRequest(!latency);\n            }\n\n        }\n\n        // Ignore the first request when using the XHR states. See the comments in the start() method for explanations.\n        else {\n            this._nextRequest();\n        }\n    }\n\n    _end()\n    {\n        let latencies = this._latencies;\n\n        // Get the average latency\n        let avgLatency = latencies.reduce((a, b) => a + b, 0) / (latencies.length || 1);\n        avgLatency = avgLatency || null;\n\n        // If there is not enough measures, display a warning.\n        if (latencies.length < this.settings().measures) {\n            let {measures, attempts} = this.settings();\n\n            console.warn([\n                'An insufficient number of measures have been processed, this could be due to your web server using',\n                `persistant connections or to your client settings (measures: ${measures}, attempts: ${attempts})`\n            ].join(' '));\n        }\n\n        // Trigger the \"end\" event with the average latency and the latency list as parameters\n        this.trigger('end', avgLatency, latencies);\n    }\n\n}\n",
    "class Timing {\n\n    constructor()\n    {\n        this._marks = {};\n        this._measures = {};\n\n        // Does the browser support the following APIs?\n        this._support = {\n            performance: !!window.performance,\n            userTiming: window.performance && performance.mark,\n            resourceTiming: window.performance\n                            && (typeof performance.getEntriesByType == \"function\")\n                            && performance.timing\n        };\n    }\n\n    mark(label)\n    {\n        var support = this._support,\n            marks = this._marks;\n\n        if (support.userTiming) {\n            performance.mark(label);\n        } else if (support.performance) {\n            marks[label] = performance.now();\n        } else {\n            marks[label] = (new Date).getTime();\n        }\n\n        return this;\n    }\n\n    measure(measureLabel, markLabelA, markLabelB)\n    {\n        var support = this._support,\n            marks = this._marks,\n            measures = this._measures;\n\n        if (typeof measures[measureLabel] == 'undefined') {\n            if (support.userTiming) {\n                performance.measure(measureLabel, markLabelA, markLabelB);\n                measures[measureLabel] = performance.getEntriesByName(measureLabel)[0].duration;\n            } else {\n                measures[measureLabel] = marks[markLabelB] - marks[markLabelA];\n            }\n        }\n\n        return measures[measureLabel];\n    }\n\n    supportsResourceTiming()\n    {\n        return this._support.resourceTiming;\n    }\n\n}\n\nexport default new Timing();\n",
    "export function isObject(obj)\n{\n    return obj != undefined && obj != null && typeof obj.valueOf() == 'object';\n}\n\nexport function copy(value)\n{\n    return JSON.parse(JSON.stringify(value));\n}\n\nfunction _assign(strict = false, target = {}, ...sources)\n{\n    sources.forEach(source => {\n        Object.keys(source).forEach(key => {\n            if (!strict || target.hasOwnProperty(key)) {\n                let value = source[key];\n                target[key] = isObject(value) ? assign(target[key], value) : value;\n            }\n        })\n    });\n\n    return target;\n}\n\nexport function assign(target = {}, ...sources)\n{\n    return _assign(false, target, ...sources);\n}\n\nexport function assignStrict(target = {}, ...sources)\n{\n    return _assign(true, target, ...sources);\n}\n\nexport function except(obj, indexes)\n{\n    let objCopy = copy(obj);\n\n    indexes.forEach(index => delete objCopy[index]);\n\n    return objCopy;\n}\n\nexport function defer(cb = () => {})\n{\n    return new class {\n        constructor()\n        {\n            this.cb = cb;\n        }\n\n        run()\n        {\n            if (this.cb) this.cb();\n            delete this.cb;\n        }\n    };\n}\n"
  ]
}