var Proxy,fermata={};fermata.registerPlugin=function(e,t){fermata[e]=function(){var e={base:"",path:[],query:{}},r=[];return r.push(fermata._transport),[].push.apply(r,arguments),fermata._makeNativeURL(t.apply(e,r),e)},fermata._useExports&&(exports[e]=fermata[e])},fermata._makeNativeURL=function(e,t){return fermata._wrapTheWrapper(function(){var r=[].splice.call(arguments,0),a=fermata._typeof2(r[r.length-1]);if("undefined"===a)return fermata._stringForURL(t);if("function"===a){var n=r.pop(),o=r.pop(),i=fermata._normalize(r.pop()||{}),s=t.path.pop().toUpperCase();return e({base:t.base,method:s,path:t.path,query:t.query,headers:i,data:o},n)}var u="object"===a?fermata._extend(fermata._extend({},t.query),r.pop()):t.query,f=r.length?t.path.concat(r):t.path;return fermata._makeNativeURL(e,{base:t.base,path:f,query:u})})},fermata._wrapTheWrapper=function(e){return Proxy||fermata._nodeProxy?Proxy?Proxy.createFunction({getOwnPropertyDescriptor:function(e){},getPropertyDescriptor:function(e){},getPropertyNames:function(){return[]},enumerate:function(){return[]},defineProperty:function(){return!1},delete:function(){return!1},fix:function(){},get:function(t,r){return e(r)}},e):fermata._nodeProxy.createFunction({getOwnPropertyDescriptor:function(e){},enumerate:function(){return[]},delete:function(){return!1},fix:function(){},set:function(e,t,r){},get:function(t,r){return e(r)}},e):fermata._extend(e,{get:function(){e("get").apply(null,arguments)},put:function(){e("put").apply(null,arguments)},post:function(){e("post").apply(null,arguments)},delete:function(){e("delete").apply(null,arguments)},del:function(){e("delete").apply(null,arguments)}})},fermata._nodeTransport=function(e,t){var r=fermata._stringForURL(e),a=require("url").parse(r),n={},o=null,i=!0;a.auth&&(n.Authorization="Basic "+new Buffer(a.auth).toString("base64")),fermata._extend(n,e.headers),console.log(typeof e.data),e.data&&"GET"===e.method||"HEAD"===e.method?console.warn("Ignoring data passed to GET or HEAD request."):"string"==typeof e.data?(o=new Buffer(e.data,"utf8"),n["Content-Type"]||(n["Content-Type"]="text/plain;charset=UTF-8")):e.data&&e.data.length&&(i=!1,o=new Buffer(e.data));var s=("https:"===a.protocol?require("https"):require("http")).request({host:a.hostname,port:a.port,method:e.method,path:a.pathname+(a.search||""),headers:n});o?(s.setHeader("Content-Length",o.length),s.write(o)):s.setHeader("Content-Length",0),s.end(),s.on("error",function(e){t(e,null)}),s.on("response",function(e){var r=new Buffer(0);e.on("data",function(e){var t=r;r=new Buffer(t.length+e.length),t.copy(r),e.copy(r,t.length)}),e.on("end",function(){i&&(r=r.toString("utf8")),t(null,{status:e.statusCode,headers:fermata._normalize(e.headers),data:r})})})},fermata._xhrTransport=function(e,t){var r=new XMLHttpRequest,a=fermata._stringForURL(e);r.open(e.method,a,!0),Object.keys(e.headers).forEach(function(t){r.setRequestHeader(t,e.headers[t])}),r.send(e.data),r.onreadystatechange=function(){if(this.readyState===(r.DONE||4))if(this.status){var e={};this.getAllResponseHeaders().split("\r\n").forEach(function(t){t&&(t=t.split(": "),e[t[0]]=t.slice(1).join(": "))}),t(null,{status:this.status,headers:fermata._normalize(e),data:this.responseText})}else t(Error("XHR request failed"),null)}},fermata._stringForURL=function(e){var t=e.path.map(function(e){return e.join?e.join("/"):encodeURIComponent(e)}).join("/"),r=Object.keys(e.query).map(function(t){var r=e.query[t];return"$"===t[0]&&(t=t.slice(1),"$"!==t[0]&&(r=JSON.stringify(r))),[].concat(r).map(function(e){return encodeURIComponent(t)+(null!==e?"="+encodeURIComponent(e):"")}).join("&")}).join("&");return e.base+"/"+t+(r?"?"+r:"")},fermata._normalize=function(e){var t={};return Object.keys(e).forEach(function(r){var a=r.split("-").map(function(e){return e&&e[0].toUpperCase()+e.slice(1).toLowerCase()}).join("-");t[a]=e[r]}),t},fermata._extend=function(e,t){return Object.keys(t).forEach(function(r){e[r]=t[r]}),e},fermata._typeof2=function(e){return Array.isArray(e)?"array":typeof e},"undefined"==typeof window?(fermata._useExports=!0,fermata._transport=fermata._nodeTransport,Proxy||(fermata._nodeProxy=require("node-proxy")),exports.registerPlugin=fermata.registerPlugin):fermata._transport=fermata._xhrTransport,fermata.registerPlugin("raw",function(e,t){return fermata._extend(this,t),e}),fermata.registerPlugin("json",function(e,t){return this.base=t,function(t,r){t.headers.Accept="application/json",t.headers["Content-Type"]="application/json",t.data=JSON.stringify(t.data),e(t,function(e,t){if(!e){"2"!==t.status.toFixed()[0]&&(e=Error("Bad status code from server: "+t.status));try{t=JSON.parse(t.data)}catch(t){e=t}}r(e,t)})}}),fermata.registerPlugin("api",function(e,t){var r=t.url.replace(/\/$/,"");return t.user&&(r=r.replace(/\/\/(\w)/,"//"+t.user+":PASSWORD@$1")),console.warn('Using deprecated API! Please initialize with `fermata.json("'+r+'")`'),this.base=r,function(t,r){t.headers.Accept="application/json",t.headers["Content-Type"]="application/json",t.data=JSON.stringify(t.data),e(t,function(e,t){if(!e){"2"!==t.status.toFixed()[0]&&(e=Error("Bad status code from server: "+t.status));try{t=JSON.parse(t.data)}catch(t){e=t}}r(e,t)})}});
//# sourceMappingURL=fermata.min.js.map