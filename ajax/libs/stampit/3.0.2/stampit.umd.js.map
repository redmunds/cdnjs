{"version":3,"file":null,"sources":["../src/isObject.js","../src/isFunction.js","../src/extract-functions.js","../src/isPlainObject.js","../src/merge.js","../src/standardise-descriptor.js","../src/compose.js","../src/isStamp.js","../src/stampit.js"],"sourcesContent":["export default function isObject(obj) {\n  const type = typeof obj;\n  return !!obj && (type === 'object' || type === 'function');\n}\n","export default function isFunction(obj) {\n  return typeof obj === 'function';\n}\n","import isFunction from './isFunction';\n\nexport default function (...args) {\n  let result = [];\n  for (let i = 0; i < args.length; i += 1) {\n    const arg = args[i];\n    if (isFunction(arg)) result.push(arg);\n    else if (Array.isArray(arg)) result = result.concat(arg.filter(isFunction));\n  }\n  return result.length === 0 ? undefined : result;\n}\n","export default function isPlainObject(value) {\n  return !!value && typeof value === 'object' &&\n    Object.getPrototypeOf(value) === Object.prototype;\n}\n","import isObject from './isObject';\nimport isPlainObject from './isPlainObject';\n\n/**\n * The 'src' argument plays the command role.\n * The returned values is always of the same type as the 'src'.\n * @param dst\n * @param src\n * @returns {*}\n */\nfunction mergeOne(dst, src) {\n  if (src === undefined) return dst;\n\n  // According to specification arrays must be concatenated.\n  // Also, the '.concat' creates a new array instance. Overrides the 'dst'.\n  if (Array.isArray(src)) return (Array.isArray(dst) ? dst : []).concat(src);\n\n  // Now deal with non plain 'src' object. 'src' overrides 'dst'\n  // Note that functions are also assigned! We do not deep merge functions.\n  if (!isPlainObject(src)) return src;\n\n  // See if 'dst' is allowed to be mutated. If not - it's overridden with a new plain object.\n  const returnValue = isObject(dst) ? dst : {};\n\n  const keys = Object.keys(src);\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n\n    const srcValue = src[key];\n    // Do not merge properties with the 'undefined' value.\n    if (srcValue !== undefined) {\n      const dstValue = returnValue[key];\n      // Recursive calls to mergeOne() must allow only plain objects or arrays in dst\n      const newDst = isPlainObject(dstValue) || Array.isArray(srcValue) ? dstValue : {};\n\n      // deep merge each property. Recursion!\n      returnValue[key] = mergeOne(newDst, srcValue);\n    }\n  }\n\n  return returnValue;\n}\n\nexport default function (dst, ...srcs) {\n  return srcs.reduce(mergeOne, dst);\n}\n","import isObject from './isObject';\nimport extractFunctions from './extract-functions';\nimport merge from './merge';\n\nconst assign = Object.assign;\n\nexport default function ({\n  methods,\n\n  properties,\n  props,\n  refs,\n\n  initializers,\n  init,\n\n  deepProperties,\n  deepProps,\n\n  propertyDescriptors,\n\n  staticProperties,\n  statics,\n\n  staticDeepProperties,\n  deepStatics,\n\n  staticPropertyDescriptors,\n\n  configuration,\n  conf,\n\n  deepConfiguration,\n  deepConf\n} = {}) {\n  const p = isObject(props) || isObject(refs) || isObject(properties) ?\n    assign({}, props, refs, properties) : undefined;\n\n  let dp = isObject(deepProps) ? merge({}, deepProps) : undefined;\n  dp = isObject(deepProperties) ? merge(dp, deepProperties) : dp;\n\n  const sp = isObject(statics) || isObject(staticProperties) ?\n    assign({}, statics, staticProperties) : undefined;\n\n  let dsp = isObject(deepStatics) ? merge({}, deepStatics) : undefined;\n  dsp = isObject(staticDeepProperties) ? merge(dsp, staticDeepProperties) : dsp;\n\n  const c = isObject(conf) || isObject(configuration) ?\n    assign({}, conf, configuration) : undefined;\n\n  let dc = isObject(deepConf) ? merge({}, deepConf) : undefined;\n  dc = isObject(deepConfiguration) ? merge(dc, deepConfiguration) : dc;\n\n  return {\n    methods,\n    properties: p,\n    initializers: extractFunctions(init, initializers),\n    deepProperties: dp,\n    staticProperties: sp,\n    staticDeepProperties: dsp,\n    propertyDescriptors,\n    staticPropertyDescriptors,\n    configuration: c,\n    deepConfiguration: dc\n  };\n}\n","import isFunction from './isFunction';\nimport isObject from './isObject';\nimport isComposable from './isComposable';\nimport merge from './merge';\n\nconst assign = Object.assign;\n\n/**\n * Creates new factory instance.\n * @param {object} descriptor The information about the object the factory will be creating.\n * @returns {Function} The new factory function.\n */\nfunction createFactory(descriptor) {\n  return function Stamp(options, ...args) {\n    const obj = Object.create(descriptor.methods || {});\n\n    merge(obj, descriptor.deepProperties);\n    assign(obj, descriptor.properties);\n    Object.defineProperties(obj, descriptor.propertyDescriptors || {});\n\n    if (!descriptor.initializers || descriptor.initializers.length === 0) return obj;\n\n    if (options === undefined) options = {};\n    return descriptor.initializers.filter(isFunction).reduce((resultingObj, initializer) => {\n      const returnedValue = initializer.call(resultingObj, options,\n        {instance: resultingObj, stamp: Stamp, args: [options].concat(args)});\n      return returnedValue === undefined ? resultingObj : returnedValue;\n    }, obj);\n  };\n}\n\n/**\n * Returns a new stamp given a descriptor and a compose function implementation.\n * @param {object} [descriptor={}] The information about the object the stamp will be creating.\n * @param {Function} composeFunction The \"compose\" function implementation.\n * @returns {Function}\n */\nfunction createStamp(descriptor, composeFunction) {\n  const Stamp = createFactory(descriptor);\n\n  merge(Stamp, descriptor.staticDeepProperties);\n  assign(Stamp, descriptor.staticProperties);\n  Object.defineProperties(Stamp, descriptor.staticPropertyDescriptors || {});\n\n  const composeImplementation = isFunction(Stamp.compose) ? Stamp.compose : composeFunction;\n  Stamp.compose = function _compose(...args) {\n    return composeImplementation.apply(this, args);\n  };\n  assign(Stamp.compose, descriptor);\n\n  return Stamp;\n}\n\n/**\n * Mutates the dstDescriptor by merging the srcComposable data into it.\n * @param {object} dstDescriptor The descriptor object to merge into.\n * @param {object} [srcComposable] The composable (either descriptor or stamp) to merge data form.\n * @returns {object} Returns the dstDescriptor argument.\n */\nfunction mergeComposable(dstDescriptor, srcComposable) {\n  const srcDescriptor = (srcComposable && srcComposable.compose) || srcComposable;\n  if (!isComposable(srcDescriptor)) return dstDescriptor;\n\n  const combineProperty = (propName, action) => {\n    if (!isObject(srcDescriptor[propName])) return;\n    if (!isObject(dstDescriptor[propName])) dstDescriptor[propName] = {};\n    action(dstDescriptor[propName], srcDescriptor[propName]);\n  };\n\n  combineProperty('methods', assign);\n  combineProperty('properties', assign);\n  combineProperty('deepProperties', merge);\n  combineProperty('propertyDescriptors', assign);\n  combineProperty('staticProperties', assign);\n  combineProperty('staticDeepProperties', merge);\n  combineProperty('staticPropertyDescriptors', assign);\n  combineProperty('configuration', assign);\n  combineProperty('deepConfiguration', merge);\n  if (Array.isArray(srcDescriptor.initializers)) {\n    dstDescriptor.initializers = srcDescriptor.initializers.reduce((result, init) => {\n      if (isFunction(init) && result.indexOf(init) < 0) {\n        result.push(init);\n      }\n      return result;\n    }, Array.isArray(dstDescriptor.initializers) ? dstDescriptor.initializers : []);\n  }\n\n  return dstDescriptor;\n}\n\n/**\n * Given the list of composables (stamp descriptors and stamps) returns\n * a new stamp (composable factory function).\n * @param {...(object|Function)} [composables] The list of composables.\n * @returns {Stamp} A new stamp (aka composable factory function)\n */\nexport default function compose(...composables) {\n  const descriptor = [this]\n    .concat(composables)\n    .filter(isObject)\n    .reduce(mergeComposable, {});\n  return createStamp(descriptor, compose);\n}\n\n\n/**\n * The Stamp Descriptor\n * @typedef {Function|Object} Descriptor\n * @returns {Stamp} A new stamp based on this Stamp\n * @property {Object} [methods] Methods or other data used as object instances' prototype\n * @property {Array<Function>} [initializers] List of initializers called for each object instance\n * @property {Object} [properties] Shallow assigned properties of object instances\n * @property {Object} [deepProperties] Deeply merged properties of object instances\n * @property {Object} [staticProperties] Shallow assigned properties of Stamps\n * @property {Object} [staticDeepProperties] Deeply merged properties of Stamps\n * @property {Object} [configuration] Shallow assigned properties of Stamp arbitrary metadata\n * @property {Object} [deepConfiguration] Deeply merged properties of Stamp arbitrary metadata\n * @property {Object} [propertyDescriptors] ES5 Property Descriptors applied to object instances\n * @property {Object} [staticPropertyDescriptors] ES5 Property Descriptors applied to Stamps\n */\n\n/**\n * The Stamp factory function\n * @typedef {Function} Stamp\n * @returns {*} Instantiated object\n * @property {Descriptor} compose - The Stamp descriptor and composition function\n */\n","import isFunction from './isFunction';\n\nexport default function isStamp(obj) {\n  return isFunction(obj) && isFunction(obj.compose);\n}\n","import standardiseDescriptor from './standardise-descriptor';\nimport extractFunctions from './extract-functions';\nimport merge from './merge';\nimport compose from './compose';\nimport isComposable from './isComposable';\nimport isStamp from './isStamp';\n\nconst assign = Object.assign;\n\nfunction createUtilityFunction(propName, action) {\n  return function composeUtil() {\n    const descriptor = {};\n    descriptor[propName] = action({}, ...arguments);\n    return ((this && this.compose) || stampit).call(this, descriptor);\n  };\n}\n\nexport const methods = createUtilityFunction('methods', assign);\n\nexport const properties = createUtilityFunction('properties', assign);\nexport {properties as refs};\nexport {properties as props};\n\nexport function initializers(...args) {\n  return ((this && this.compose) || stampit).call(this, {\n    initializers: extractFunctions(...args)\n  });\n}\nexport {initializers as init};\n\nexport const deepProperties = createUtilityFunction('deepProperties', merge);\nexport {deepProperties as deepProps};\n\nexport const staticProperties = createUtilityFunction('staticProperties', assign);\nexport {staticProperties as statics};\n\nexport const staticDeepProperties = createUtilityFunction('staticDeepProperties', merge);\nexport {staticDeepProperties as deepStatics};\n\nexport const configuration = createUtilityFunction('configuration', assign);\nexport {configuration as conf};\n\nexport const deepConfiguration = createUtilityFunction('deepConfiguration', merge);\nexport {deepConfiguration as deepConf};\n\nexport const propertyDescriptors = createUtilityFunction('propertyDescriptors', assign);\n\nexport const staticPropertyDescriptors = createUtilityFunction('staticPropertyDescriptors', assign);\n\nconst allUtilities = {\n  methods,\n\n  properties,\n  refs: properties,\n  props: properties,\n\n  initializers,\n  init: initializers,\n\n  deepProperties,\n  deepProps: deepProperties,\n\n  staticProperties,\n  statics: staticProperties,\n\n  staticDeepProperties,\n  deepStatics: staticDeepProperties,\n\n  configuration,\n  conf: configuration,\n\n  deepConfiguration,\n  deepConf: deepConfiguration,\n\n  propertyDescriptors,\n\n  staticPropertyDescriptors\n};\n\n/**\n * Infected stamp. Used as a storage of the infection metadata\n * @type {Function}\n * @return {Stamp}\n */\nconst baseStampit = compose(\n  {staticProperties: allUtilities},\n  {\n    staticProperties: {\n      create(...args) {\n        return this(...args);\n      },\n      compose: stampit // infecting\n    }\n  }\n);\n\n/**\n * Infected compose\n * @return {Stamp}\n */\nfunction stampit(...args) {\n  args = args.filter(isComposable)\n    .map(arg => isStamp(arg) ? arg : standardiseDescriptor(arg));\n\n  // Calling the standard pure compose function here.\n  return compose.apply(this || baseStampit, args);\n}\n\nconst exportedCompose = stampit.bind(); // bind to 'undefined'\nexport {exportedCompose as compose};\nstampit.compose = exportedCompose;\n\n// Setting up the shortcut functions\nexport default assign(stampit, allUtilities);\n"],"names":["isObject","obj","type","isFunction","result","i","length","arg","push","Array","isArray","concat","filter","undefined","isPlainObject","value","Object","getPrototypeOf","prototype","mergeOne","dst","src","returnValue","keys","key","srcValue","dstValue","newDst","srcs","reduce","assign","methods","properties","props","refs","initializers","init","deepProperties","deepProps","propertyDescriptors","staticProperties","statics","staticDeepProperties","deepStatics","staticPropertyDescriptors","configuration","conf","deepConfiguration","deepConf","p","dp","merge","sp","dsp","c","dc","extractFunctions","createFactory","descriptor","Stamp","options","args","create","defineProperties","resultingObj","initializer","returnedValue","call","instance","stamp","createStamp","composeFunction","composeImplementation","compose","_compose","apply","mergeComposable","dstDescriptor","srcComposable","srcDescriptor","isComposable","combineProperty","propName","action","indexOf","composables","isStamp","createUtilityFunction","composeUtil","arguments","stampit","allUtilities","baseStampit","map","standardiseDescriptor","exportedCompose","bind"],"mappings":"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"}