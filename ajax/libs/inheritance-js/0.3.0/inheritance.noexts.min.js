/*!
 * Inheritance.js (0.3.0)
 *
 * Copyright (c) 2015 Brandon Sara (http://bsara.github.io)
 * Licensed under the CPOL-1.02 (https://github.com/bsara/inheritance.js/blob/master/LICENSE.md)
 */
!function(e,t){"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?module.exports=t():(e.I=t(),e.ObjectDefinition=e.I.ObjectDefinition,delete e.I.ObjectDefinition)}(this,function(){function e(e,t){var r=e||{};t instanceof Array||(t=[t]);for(var n=0;n<t.length;n++){var o=t[n];if(o)for(var i in o)o.hasOwnProperty(i)&&(r[i]=o[i])}return r}function t(e,r){var n=e||{};r instanceof Array||(r=[r]);for(var o=0;o<r.length;o++){var i=r[o];if(i)for(var p in i)i.hasOwnProperty(p)&&("object"!=typeof i[p]?n[p]=i[p]:t(n[p],i[p]))}return n}function r(t,r){if(t=t||{prototype:{}},"undefined"==typeof t.prototype||null===t.prototype)throw new TypeError("`obj.prototype` cannot be `undefined` or `null`!");return t.prototype=e(t.prototype,r),t}function n(e,r){if(e=e||{prototype:{}},"undefined"==typeof e.prototype||null===e.prototype)throw new TypeError("`obj.prototype` cannot be `undefined` or `null`!");return e.prototype=t(e.prototype,r),e}function o(e,r){var n;e=e||Object,r=r||{};var o=r.ctor||function(){return this["super"].apply(this,arguments)};for(n in e)"extend"!==n&&(o[n]=e[n]);o.__super__=e.prototype,i(o);var p=r.mixins;null!==p&&p instanceof Array&&t(r,p);var u=r["static"];if("undefined"!=typeof u&&null!==u)for(n in u)o[n]=u[n];o.prototype=Object.create(e.prototype),o.prototype.objDef=o,o.prototype.constructor=function(){if(!(this instanceof o))return new o(arguments);for(var e in this._super)"_super"!==e&&(this._super[e]=this._super[e].bind(this));this["super"](),o(arguments)},o.prototype["super"]=function(){this.objDef.__super__.constructor.apply(this,arguments)},o.prototype._super={};for(n in e.prototype)o.prototype._super[n]=function(){return this.objDef.__super__[n].apply(this,arguments)};for(n in r)"constructor"!==n&&"ctor"!==n&&"objDef"!==n&&"mixins"!==n&&"static"!==n&&"super"!==n&&"_super"!==n&&(o.prototype[n]=r[n]);return o}function i(e,t,r){if("undefined"==typeof e||null===e)throw new TypeError("`obj` cannot be undefined or null!");if(t!==!0&&"undefined"!=typeof e.extend&&null!==e.extend){if(r===!0)return e;throw new TypeError("`obj.extend` already exists! You're seeing this error to prevent the current extend function from being overwritten. See docs for how to override this functionality.")}return Object.defineProperty(e,"extend",{value:function(t){return o(e,t)},configurable:!0,enumerable:!1,writable:!0}),e}var p={create:function(e){return o(Object,e)}};return{mix:e,mixDeep:t,mixPrototype:r,mixPrototypeDeep:n,inheritance:o,makeInheritable:i,ObjectDefinition:p}});