/*!
 * Inheritance.js (0.4.4)
 *
 * Copyright (c) 2015 Brandon Sara (http://bsara.github.io)
 * Licensed under the CPOL-1.02 (https://github.com/bsara/inheritance.js/blob/master/LICENSE.md)
 */
!function(e,t){"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?module.exports=t():(e.I={},e.I=t())}(this,function(){function mix(e,t){var r=e||{};t instanceof Array||(t=[t]);for(var n=0;n<t.length;n++){var o=t[n];if(o)for(var i in o)o.hasOwnProperty(i)&&(r[i]=o[i])}return r}function mixDeep(e,t){var r=e||{};t instanceof Array||(t=[t]);for(var n=0;n<t.length;n++){var o=t[n];if(o)for(var i in o)o.hasOwnProperty(i)&&("object"!=typeof o[i]?r[i]=o[i]:mixDeep(r[i],o[i]))}return r}function inheritance(parent,objDefProps){parent=parent||Object,objDefProps=objDefProps||{};var objDef,objCtor=objDefProps.ctor||function(){return objDef.__super__.constructor.apply(this,arguments)},objDefName=objDefProps.__defName;return objDefName="string"==typeof objDefName&&objDefName.trim()?objDefName.trim():objCtor.name?objCtor.name:void 0,delete objDefProps.__defName,eval("objDef = function"+(objDefName?" "+objDefName:"")+"() { return objCtor.apply(this, arguments); };"),objDef.isObjDef=!0,objDef.prototype=Object.create(parent.prototype),_addOwnerIfFunction(objDef.prototype,objCtor),Object.defineProperty(objDef.prototype,"__ctor__",{value:objCtor,configurable:!1,enumerable:!1,writable:!1}),makeInheritable(objDef),_setupMixins(objDefProps),_setupStaticProperties(objDef,objDefProps),_setupPrivateProperties(objDef,objDefProps),_setupSuperFunction(objDef),_setupPublicProperties(objDef,objDefProps),Object.defineProperty(objDef,"__super__",{value:parent.prototype,configurable:!1,enumerable:!1,writable:!1}),objDef}function _addOwnerIfFunction(e,t){return"function"==typeof t&&(t.owner=e),t}function _updatePrototypeWithMixDeep(e,t,r){return"object"==typeof t[r]&&typeof t[r]==typeof e[r]&&"undefined"==typeof t[r].prototype&&"undefined"==typeof e[r].prototype?void mixDeep(e[r],t[r]):void(e[r]=_addOwnerIfFunction(e,t[r]))}function _setupMixins(e){var t=e.mixins;null!==t&&t instanceof Array&&mixDeep(e,t)}function _setupStaticProperties(e,t){var r,n=t["static"];if("undefined"!=typeof n&&null!==n){for(r in n)"consts"!==r&&"__super__"!==r&&(e[r]=_addOwnerIfFunction(e,n[r]));var o=n.consts;if("undefined"!=typeof o&&null!==o)for(r in o)Object.defineProperty(e,r,{value:o[r],configurable:!1,enumerable:!0,writable:!1})}}function _setupPrivateProperties(e,t){var r,n=t["private"];if("undefined"!=typeof n&&null!==n){for(r in n)"constructor"!==r&&"ctor"!==r&&"static"!==r&&"_super"!==r&&"__ctor__"!==r&&Object.defineProperty(e.prototype,r,{value:_addOwnerIfFunction(e.prototype,n[r]),configurable:!0,enumerable:!1,writable:!0});var o=n["static"];if("undefined"!=typeof o&&null!==o)for(r in o)Object.defineProperty(e,r,{value:_addOwnerIfFunction(e,o[r]),configurable:!0,enumerable:!1,writable:!0})}}function _setupPublicProperties(e,t){e.prototype.constructor=_addOwnerIfFunction(e.prototype,e);for(var r in t)"constructor"!==r&&"ctor"!==r&&"mixins"!==r&&"private"!==r&&"static"!==r&&"_super"!==r&&"__ctor__"!==r&&_updatePrototypeWithMixDeep(e.prototype,t,r)}function _setupSuperFunction(e){Object.defineProperty(e.prototype,"_super",{configurable:!1,enumerable:!1,writable:!1,value:function(){var e=arguments.callee.caller;if(e){var t=e.owner,r=t.constructor.__super__;if(r){if(e===t.constructor||e===t.__ctor__)return r.constructor.apply(this,arguments);var n=e.name;if(!n)for(var o=Object.getOwnPropertyNames(t),i=0;i<o.length;i++){var f=o[i];if(t[f]===e){n=f;break}}if(n){var a=r[n];if("function"==typeof a&&null!==a)return a.apply(this,arguments)}}}}})}function makeInheritable(e,t,r){if("undefined"==typeof e||null===e)throw new TypeError("`obj` cannot be undefined or null!");if(t!==!0&&"undefined"!=typeof e.extend&&null!==e.extend){if(r===!0)return e;throw new TypeError("`obj.extend` already exists! You're seeing this error to prevent the current extend function from being overwritten. See docs for how to override this functionality.")}return Object.defineProperty(e,"extend",{value:function(t){return inheritance(e,t)},configurable:!0,enumerable:!1,writable:!0}),e}function seal(e,t,r){if("undefined"==typeof e||null===e)throw new TypeError("`obj` cannot be undefined or null!");if(t!==!0&&"undefined"!=typeof e.extend&&null!==e.extend){if(r===!0)return e;throw new TypeError("`obj.extend` already exists! You're seeing this error to prevent the current extend function from being overwritten. See docs for how to override this functionality.")}return"undefined"!=typeof e.extend&&null!==e.extend&&delete e.extend,Object.defineProperties(e,{sealed:{configurable:!1,enumerable:!1,writable:!1,value:!0},extend:{configurable:!1,enumerable:!1,writable:!1,value:function(){throw new TypeError("The object definition you are trying to extend is sealed and cannot be inherited.")}}}),e}var ObjectDefinition={create:function(e){return inheritance(Object,e)},createSealed:function(e){return seal(inheritance(Object,e),!0)}};return seal(ObjectDefinition,!0),{mix:mix,mixDeep:mixDeep,inheritance:inheritance,makeInheritable:makeInheritable,seal:seal,ObjectDefinition:ObjectDefinition}});