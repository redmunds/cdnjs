/*!
 * Inheritance.js (0.2.0)
 *
 * Copyright (c) 2015 Brandon Sara (http://bsara.github.io)
 * Licensed under the CPOL-1.02 (https://github.com/bsara/inheritance.js/blob/master/LICENSE.md)
 */
!function(e,t){if("function"==typeof define&&define.amd)define(t);else if("object"==typeof exports)module.exports=t();else{var r=t();if("function"==typeof r){var n="undefined"!=typeof r.name?r.name:/^function\s+([\w\$]+)\s*\(/.exec(r.toString())[1];return void(e[n]=r)}for(var n in r)r.hasOwnProperty(n)&&(e[n]=r[n])}}(this,function(){function e(e,t){for(var r=e||{},n=0;n<t.length;n++){var o=t[n];if(o)for(var i in o)o.hasOwnProperty(i)&&(r[i]=o[i])}return r}function t(e,r){for(var n=e||{},o=0;o<r.length;o++){var i=r[o];if(i)for(var u in i)i.hasOwnProperty(u)&&("object"!=typeof i[u]?n[u]=i[u]:t(n[u],i[u]))}return n}function r(e,r){var o;e=e||Object,r=r||{};var i=r.ctor||function(){return this["super"].apply(this,arguments)};for(o in e)"extend"!==o&&(i[o]=e[o]);i.__super__=e.prototype,n(i);var u=r.mixins;null!==u&&u instanceof Array&&t(r,u);var f=r["static"];if("undefined"!=typeof f&&null!==f)for(o in f)i[o]=f[o];i.prototype=Object.create(e.prototype),i.prototype.objDef=i,i.prototype.constructor=function(){if(!(this instanceof i))return new i(arguments);for(var e in this._super)"_super"!==e&&(this._super[e]=this._super[e].bind(this));i(arguments)},i.prototype["super"]=function(){this.objDef.__super__.constructor.apply(this,arguments)},i.prototype._super={};for(o in e.prototype)i.prototype._super[o]=function(){return this.objDef.__super__[o].apply(this,arguments)};for(o in r)"constructor"!==o&&"ctor"!==o&&"objDef"!==o&&"mixins"!==o&&"static"!==o&&"super"!==o&&"_super"!==o&&(i.prototype[o]=r[o]);return i}function n(e,t,n){if("undefined"==typeof e||null===e)throw new TypeError("`obj` cannot be undefined or null!");if(t!==!0&&"undefined"!=typeof e.extend&&null!==e.extend){if(n===!0)return e;throw new TypeError("`obj.extend` already exists! You're seeing this error to prevent the current extend function from being overwritten. See docs for how to override this functionality.")}return e.extend=function(t){return r(e,t)},e}n(Object),Object.prototype.mix=function(){return e(this,arguments)},Object.prototype.mixDeep=function(){return t(this,arguments)};var o={create:function(e){return Object.extend(e)}};return{mix:e,mixDeep:t,inheritance:r,makeInheritable:n,ObjectDefinition:o}});