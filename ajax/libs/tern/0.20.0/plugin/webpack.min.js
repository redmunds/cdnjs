function getResolver(e){var r={unsafeCache:!0,modules:["node_modules"],extensions:[".js",".jsx",".json"],aliasFields:["browser"],mainFields:["browser","web","browserify","main"],fileSystem:new SyncNodeJsInputFileSystem},o=fs.existsSync(e)?require(e).resolve:null;return o&&Object.keys(o).forEach(function(e){"packageMains"===e?r.mainFields=o[e]:"root"===e?r.modules.unshift(o[e]):r[e]=o[e]}),ResolverFactory.createResolver(r)}function resolveToFile(e,r,o){var n=infer.cx().parent.projectDir,s=path.resolve(n,o);try{return e.resolveSync({},path.dirname(s),r)}catch(e){return console.log(e.stack),""}}if("object"!=typeof exports||"object"!=typeof module)throw new Error("This plugin works only in a CommonJS environment");var infer=require("../lib/infer"),tern=require("../lib/tern");require("./commonjs"),require("./es_modules");var fs=require("fs"),path=require("path"),ResolverFactory=require("enhanced-resolve").ResolverFactory,SyncNodeJsInputFileSystem=require("enhanced-resolve/lib/SyncNodeJsInputFileSystem");tern.registerPlugin("webpack",function(e,r){var o=r.configPath||"./webpack.config.js";o=path.resolve(e.options.projectDir,o);var n=getResolver(o);e.loadPlugin("commonjs"),e.loadPlugin("es_modules"),e.mod.modules.resolvers.push(function(e,r){var o=resolveToFile(n,e,r);return o&&infer.cx().parent.normalizeFilename(o)})});
//# sourceMappingURL=webpack.min.js.map