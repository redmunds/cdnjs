!function(n,r){r.module("nemLogging",[]),r.module("nemLogging").provider("nemDebug",function(){var n=null;return this.$get=function(){return n},this.debug=n,this});var t=function(n,r){return function(){return n.apply(r,arguments)}};r.module("nemLogging").provider("nemSimpleLogger",["nemDebugProvider",function(n){var r,e,i,o,u,g,l,s,f,h,d,a;for(d=n.debug,i={},o=["debug","info","warn","error","log"],r={},f=s=0,h=o.length;h>s;f=++s)a=o[f],r[a]=f;return g=function(n,r,t){return n>=r?t():void 0},u=function(n){var r,t,e;if(r=!1,!n)return r;for(t=0,e=o.length;e>t&&(a=o[t],r=null!=n[a]&&"function"==typeof n[a],r);t++);return r},l=function(n,r){var t,e,u,g;for(null==i[n]&&(i[n]=d(n)),t=i[n],g={},e=0,u=o.length;u>e;e++)a=o[e],g[a]="debug"===a?t:r[a];return g},e=function(){function n(n){var e,i,l,s,f;if(this.$log=n,this.spawn=t(this.spawn,this),!this.$log)throw"internalLogger undefined";if(!u(this.$log))throw"@$log is invalid";for(this.doLog=!0,f={},e=function(n){return function(t){return f[t]=function(){return n.doLog?g(r[t],n.currentLevel,function(){var r;return(r=n.$log)[t].apply(r,arguments)}):void 0},n[t]=f[t]}}(this),i=0,l=o.length;l>i;i++)s=o[i],e(s);this.LEVELS=r,this.currentLevel=r.error}return n.prototype.spawn=function(r){if("string"==typeof r){if(!u(this.$log))throw"@$log is invalid";if(!d)throw"nemDebug is undefined this is probably the light version of this library sep debug logggers is not supported!";return l(r,this.$log)}return new n(r||this.$log)},n}(),this.decorator=["$log",function(n){var t;return t=new e(n),t.currentLevel=r.debug,t}],this.$get=["$log",function(n){return new e(n)}],this}])}(window,angular);