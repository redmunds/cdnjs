//dna.js v0.1.3 ~~ dnajs.org/license.html
var dna={};dna.util={value:function(a,b){return"string"==typeof b&&(b=b.split(".")),null===a||void 0===a||void 0===b?null:1===b.length?a[b[0]]:this.value(a[b[0]],b.slice(1))},findAll:function(a,b){return a.find(b).addBack(b)},apply:function(a,b,c){dna.util.findAll(a,b).each(c)}},dna.compile={regexDnaField:/^[\s]*(~~|\{\{).*(~~|\}\})[\s]*$/,regexDnaBasePair:/~~|{{|}}/,regexDnaBasePairs:/~~|\{\{|\}\}/g,isDnaField:function(){var a=$(this)[0].childNodes[0];return a&&a.nodeValue&&a.nodeValue.match(dna.compile.regexDnaField)},fieldElem:function(){$(this).addClass("dna-field").data("dna-field",$.trim($(this).text()).replace(dna.compile.regexDnaBasePairs,"")).empty()},attrElem:function(){var a=[];$.each(this.attributes,function(){3===this.value.split(dna.compile.regexDnaBasePair).length&&a.push(this.name.replace(/^data-dna-attr-/,""),this.value.split(dna.compile.regexDnaBasePair))}),a.length>0&&$(this).addClass("dna-attr").data("dna",a)},classElem:function(){var a=$(this).data("dna-class").split(",");$(this).addClass("dna-class").data("dna-class",a)},template:function(a){var b=a.elem.find("*").addBack();b.filter(dna.compile.isDnaField).each(dna.compile.fieldElem),b.each(dna.compile.attrElem),b.filter("[data-dna-class]").each(dna.compile.classElem),b.filter("[data-dna-require]").addClass("dna-require"),b.filter("[data-dna-missing]").addClass("dna-missing"),a.compiled=!0,a.elem.removeClass("dna-template").addClass("dna-clone")}},dna.store={templates:{},stash:function(a,b){var c=$("#"+a);return b||c.find(".dna-template").each(dna.store.stashNested),c.hasClass("dna-template")&&(dna.store.templates[a]={name:a,elem:c,container:c.parent().addClass("dna-contains-"+a),compiled:!1,clones:0}),c.removeAttr("id").detach(),dna.store.templates[a]},stashNested:function(){dna.store.stash($(this).attr("id"),!0)},getTemplate:function(a){var b=dna.store.templates[a]||dna.store.stash(a);return b||dna.core.berserk("Template not found: "+a),b.compiled||dna.compile.template(b),b}},dna.core={inject:function(a,b){dna.util.apply(a,".dna-field",function(){$(this).html(dna.util.value(b,$(this).data("dna-field")))});var c,d,e,f;dna.util.apply(a,".dna-attr",function(){for(c=$(this).data("dna"),x=0;x<c.length/2;x++)d=c[2*x],e=c[2*x+1],f=[e[0],dna.util.value(b,e[1]),e[2]].join(""),$(this).attr(c[2*x],f),"value"===c[2*x]&&$(this).val(f)}),dna.util.apply(a,".dna-class",function(){c=$(this).data("dna-class");for(var a=0;a<c.length;a++)$(this).addClass(dna.util.value(b,c[a]))})},thimblerig:function(a,b){dna.util.apply(a,".dna-require",function(){$(this).toggle(void 0!==dna.util.value(b,$(this).data("dna-require")))}),dna.util.apply(a,".dna-missing",function(){$(this).toggle(void 0===dna.util.value(b,$(this).data("dna-missing")))})},replicate:function(a,b,c){var d=a.elem.clone(!0,!0);a.clones++,dna.core.inject(d,b),dna.core.thimblerig(d,b);var e=c.holder?dna.util.findAll(c.holder,".dna-contains-"+a.name):a.container;return c.top?e.prepend(d):e.append(d),c.task&&c.task(d,b),c.fade&&d.hide().fadeIn(),d},unload:function(a,b,c){b.error||dna.api.clone(a,b,c)},berserk:function(a){throw"dna.js error -> "+a}},dna.api={clone:function(a,b,c){var d={fade:!1,top:!1,holder:null,empty:!1,task:null};$.extend(d,c);var e=dna.store.getTemplate(a);d.empty&&dna.api.empty(a);for(var f=b instanceof Array?b:[b],g=$(),h=0;h<f.length;h++)g=g.add(dna.core.replicate(e,f[h],d));return g},load:function(a,b,c){$.getJSON(b,function(b){dna.core.unload(a,b,c)})},empty:function(a,b){var c={fade:!1};$.extend(c,b);var d=dna.store.getTemplate(a).container.find(".dna-clone");return c.fade?d.fadeOut("normal",function(){$(this).remove()}):d.remove(),d},mutate:function(a,b){dna.core.inject(a,b)},debug:function(){return console.log("~~ dns.js ~~"),console.log("count:",Object.keys(dna.store.templates).length),console.log("names:",Object.keys(dna.store.templates)),console.log("templates:",dna.store.templates),navigator.appVersion}},dna.clone=dna.api.clone,dna.load=dna.api.load,dna.empty=dna.api.empty,dna.mutate=dna.api.mutate,dna.debug=dna.api.debug;