//dna.js ~~ v0.1.1 ~~ dnajs.org/license.html
var dna={util:{value:function(a,b){"string"===typeof b&&(b=b.split("."));return null===a||void 0===a||void 0===b?null:1===b.length?a[b[0]]:this.value(a[b[0]],b.slice(1))},findAll:function(a,b){return a.find(b).addBack(b)},apply:function(a,b,c){dna.util.findAll(a,b).each(c)}},compile:{regexDnaField:/^[\s]*(~~|\{\{).*(~~|\}\})[\s]*$/,regexDnaBasePair:/~~|{{|}}/,regexDnaBasePairs:/~~|\{\{|\}\}/g,isDnaField:function(){var a=$(this)[0].childNodes[0];return a&&a.nodeValue&&a.nodeValue.match(dna.compile.regexDnaField)},
fieldElem:function(){$(this).addClass("dna-field").data("dna-field",$.trim($(this).text()).replace(dna.compile.regexDnaBasePairs,"")).empty()},attrElem:function(){var a=[];$.each(this.attributes,function(){3===this.value.split(dna.compile.regexDnaBasePair).length&&a.push(this.name.replace(/^data-dna-attr-/,""),this.value.split(dna.compile.regexDnaBasePair))});0<a.length&&$(this).addClass("dna-attr").data("dna",a)},classElem:function(){var a=$(this).data("dna-class").split(",");$(this).addClass("dna-class").data("dna-class",
a)},template:function(a){var b=a.elem.find("*").addBack();b.filter(dna.compile.isDnaField).each(dna.compile.fieldElem);b.each(dna.compile.attrElem);b.filter("[data-dna-class]").each(dna.compile.classElem);b.filter("[data-dna-require]").addClass("dna-require");b.filter("[data-dna-missing]").addClass("dna-missing");a.compiled=!0;a.elem.removeClass("dna-template").addClass("dna-clone")}},store:{templates:null,stash:function(){var a=$(this);dna.store.templates||(dna.store.templates={});var b=a.attr("id");
dna.store.templates[b]={name:b,elem:a,container:a.parent().addClass("dna-contains-"+b),compiled:!1,clones:0};a.removeAttr("id").detach()},getTemplate:function(a){dna.store.templates||$(".dna-template").each(dna.store.stash);var b=dna.store.templates[a];b||dna.core.berserk("Template not found: "+a);b.compiled||dna.compile.template(b);return b}},core:{inject:function(a,b){dna.util.apply(a,".dna-field",function(){$(this).html(dna.util.value(b,$(this).data("dna-field")))});var c,d,e;dna.util.apply(a,
".dna-attr",function(){c=$(this).data("dna");for(x=0;x<c.length/2;x++)d=c[2*x+1],e=[d[0],dna.util.value(b,d[1]),d[2]].join(""),$(this).attr(c[2*x],e),"value"===c[2*x]&&$(this).val(e)});dna.util.apply(a,".dna-class",function(){c=$(this).data("dna-class");for(var a=0;a<c.length;a++)$(this).addClass(dna.util.value(b,c[a]))})},thimblerig:function(a,b){dna.util.apply(a,".dna-require",function(){$(this).toggle(null!==dna.util.value(b,$(this).data("dna-require")))});dna.util.apply(a,".dna-missing",function(){$(this).toggle(null===
dna.util.value(b,$(this).data("dna-missing")))})},replicate:function(a,b,c){var d=a.elem.clone(!0,!0);a.clones++;dna.core.inject(d,b);dna.core.thimblerig(d,b);a=c.holder?dna.util.findAll(c.holder,".dna-contains-"+a.name):a.container;c.top?a.prepend(d):a.append(d);c.task&&c.task(d,b);c.fade&&d.hide().fadeIn();return d},unload:function(a,b,c){b.error||dna.api.clone(a,b,c)},berserk:function(a){throw"dna.js error -> "+a;}},api:{clone:function(a,b,c){var d={fade:!1,top:!1,holder:null,empty:!1,task:null};
$.extend(d,c);c=dna.store.getTemplate(a);d.empty&&dna.api.empty(a);a=b instanceof Array?b:[b];b=$();for(var e=0;e<a.length;e++)b=b.add(dna.core.replicate(c,a[e],d));return b},load:function(a,b,c){$.getJSON(b,function(b){dna.core.unload(a,b,c)})},empty:function(a,b){var c={fade:!1};$.extend(c,b);var d=dna.store.getTemplate(a).container.find(".dna-clone");c.fade?d.fadeOut("normal",function(){$(this).remove()}):d.remove();return d},mutate:function(a,b){dna.core.inject(a,b)},debug:function(){console.log("~~ dns.js ~~");
console.log("count:",Object.keys(dna.store.templates).length);console.log("names:",Object.keys(dna.store.templates));console.log("templates:",dna.store.templates);return navigator.appVersion}}};dna.clone=dna.api.clone;dna.load=dna.api.load;dna.empty=dna.api.empty;dna.mutate=dna.api.mutate;dna.debug=dna.api.debug;
