// JSTS. See https://github.com/bjornharrtell/jsts
// Licenses:
// https://github.com/bjornharrtell/jsts/blob/master/LICENSE_BHARRTELL_BSD3.txt
// https://github.com/bjornharrtell/jsts/blob/master/LICENSE_EPLv1.txt
// https://github.com/bjornharrtell/jsts/blob/master/LICENSE_MDAVIS_BSD3.txt
// https://github.com/bjornharrtell/jsts/blob/master/LICENSE_MIT.txt
// https://github.com/bjornharrtell/jsts/blob/master/LICENSE_VSI_BSD3.txt
"use strict";function extend(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])}function NumberUtil(){}function IllegalArgumentException(){}function Double(){}function Comparable(){}function Clonable(){}function Comparator(){}function Serializable(){}function RuntimeException(){}function inherits(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t}function AssertionFailedException(){if(0===arguments.length)RuntimeException.call(this);else if(1===arguments.length){var t=arguments[0];RuntimeException.call(this,t)}}function Assert(){}function Coordinate(){if(this.x=null,this.y=null,this.z=null,0===arguments.length)Coordinate.call(this,0,0);else if(1===arguments.length){var t=arguments[0];Coordinate.call(this,t.x,t.y,t.z)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];Coordinate.call(this,e,n,Coordinate.NULL_ORDINATE)}else if(3===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2];this.x=e,this.y=n,this.z=i}}function DimensionalComparator(){if(this.dimensionsToTest=2,0===arguments.length)DimensionalComparator.call(this,2);else if(1===arguments.length){var t=arguments[0];if(2!==t&&3!==t)throw new IllegalArgumentException("only 2 or 3 dimensions may be specified");this.dimensionsToTest=t}}function Envelope(){if(this.minx=null,this.maxx=null,this.miny=null,this.maxy=null,0===arguments.length)this.init();else if(1===arguments.length){if(arguments[0]instanceof Coordinate){var t=arguments[0];this.init(t.x,t.x,t.y,t.y)}else if(arguments[0]instanceof Envelope){var e=arguments[0];this.init(e)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.init(n.x,i.x,n.y,i.y)}else if(4===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];this.init(r,o,s,a)}}function Exception(){}function NotRepresentableException(){Exception.call(this,"Projective point not representable on the Cartesian plane.")}function Location(){}function hasInterface(t,e){return t.interfaces_&&t.interfaces_().indexOf(e)>-1}function MathUtil(){}function StringBuffer(t){this.str=t}function Integer(t){this.value=t}function Character(){}function DD(){if(this.hi=0,this.lo=0,0===arguments.length)this.init(0);else if(1===arguments.length){if("number"==typeof arguments[0]){var t=arguments[0];this.init(t)}else if(arguments[0]instanceof DD){var e=arguments[0];this.init(e)}else if("string"==typeof arguments[0]){var n=arguments[0];DD.call(this,DD.parse(n))}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];this.init(i,r)}}function CGAlgorithmsDD(){}function CoordinateSequence(){}function System(){}function HCoordinate(){if(this.x=null,this.y=null,this.w=null,0===arguments.length)this.x=0,this.y=0,this.w=1;else if(1===arguments.length){var t=arguments[0];this.x=t.x,this.y=t.y,this.w=1}else if(2===arguments.length){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){var e=arguments[0],n=arguments[1];this.x=e,this.y=n,this.w=1}else if(arguments[0]instanceof HCoordinate&&arguments[1]instanceof HCoordinate){var i=arguments[0],r=arguments[1];this.x=i.y*r.w-r.y*i.w,this.y=r.x*i.w-i.x*r.w,this.w=i.x*r.y-r.x*i.y}else if(arguments[0]instanceof Coordinate&&arguments[1]instanceof Coordinate){var i=arguments[0],r=arguments[1];this.x=i.y-r.y,this.y=r.x-i.x,this.w=i.x*r.y-r.x*i.y}}else if(3===arguments.length){var e=arguments[0],n=arguments[1],o=arguments[2];this.x=e,this.y=n,this.w=o}else if(4===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2],a=arguments[3],l=i.y-r.y,u=r.x-i.x,c=i.x*r.y-r.x*i.y,h=s.y-a.y,d=a.x-s.x,g=s.x*a.y-a.x*s.y;this.x=u*g-d*c,this.y=h*c-l*g,this.w=l*d-h*u}}function CoordinateSequenceFactory(){}function Geometry(){this.envelope=null,this.factory=null,this.SRID=null,this.userData=null;var t=arguments[0];this.factory=t,this.SRID=t.getSRID()}function CoordinateFilter(){}function BoundaryNodeRule(){}function Mod2BoundaryNodeRule(){}function EndPointBoundaryNodeRule(){}function MultiValentEndPointBoundaryNodeRule(){}function MonoValentEndPointBoundaryNodeRule(){}function Iterator(){}function Collection(){}function IndexOutOfBoundsException$1(t){this.message=t||""}function List(){}function NoSuchElementException(t){this.message=t||""}function OperationNotSupported(t){this.message=t||""}function ArrayList(){this.array_=[],arguments[0]instanceof Collection&&this.addAll(arguments[0])}function CoordinateList(){if(ArrayList.apply(this),0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.ensureCapacity(t.length),this.add(t,!0)}else if(2===arguments.length){var t=arguments[0],e=arguments[1];this.ensureCapacity(t.length),this.add(t,e)}}function CoordinateArrays(){}function ForwardComparator(){}function BidirectionalComparator(){}function Map$1(){}function SortedMap(){}function Set(){}function HashSet(){this.array_=[],arguments[0]instanceof Collection&&this.addAll(arguments[0])}function colorOf(t){return null==t?BLACK:t.color}function parentOf(t){return null==t?null:t.parent}function setColor(t,e){null!==t&&(t.color=e)}function leftOf(t){return null==t?null:t.left}function rightOf(t){return null==t?null:t.right}function TreeMap(){this.root_=null,this.size_=0}function Lineal(){}function SortedSet(){}function TreeSet(){this.array_=[],arguments[0]instanceof Collection&&this.addAll(arguments[0])}function Arrays(){}function GeometryComponentFilter$1(){}function Dimension(){}function GeometryFilter(){}function CoordinateSequenceFilter(){}function GeometryCollection(){this.geometries=null;var t=arguments[0],e=arguments[1];if(Geometry.call(this,e),null===t&&(t=[]),Geometry.hasNullElements(t))throw new IllegalArgumentException("geometries must not contain null elements");this.geometries=t}function MultiLineString(){var t=arguments[0],e=arguments[1];GeometryCollection.call(this,t,e)}function BoundaryOp(){if(this.geom=null,this.geomFact=null,this.bnRule=null,this.endpointMap=null,1===arguments.length){var t=arguments[0];BoundaryOp.call(this,t,BoundaryNodeRule.MOD2_BOUNDARY_RULE)}else if(2===arguments.length){var t=arguments[0],e=arguments[1];this.geom=t,this.geomFact=t.getFactory(),this.bnRule=e}}function Counter(){this.count=null}function PrintStream(){}function StringReader(){}function DecimalFormat(){}function ByteArrayOutputStream(){}function IOException(){}function LineNumberReader(){}function StringUtil(){}function CoordinateSequences(){}function LineString(){this.points=null;var t=arguments[0],e=arguments[1];Geometry.call(this,e),this.init(t)}function Puntal(){}function Point(){this.coordinates=null;var t=arguments[0],e=arguments[1];Geometry.call(this,e),this.init(t)}function Polygonal(){}function Polygon(){this.shell=null,this.holes=null;var t=arguments[0],e=arguments[1],n=arguments[2];if(Geometry.call(this,n),null===t&&(t=this.getFactory().createLinearRing()),null===e&&(e=[]),Geometry.hasNullElements(e))throw new IllegalArgumentException("holes must not contain null elements");if(t.isEmpty()&&Geometry.hasNonEmptyElements(e))throw new IllegalArgumentException("shell is empty but holes are not");this.shell=t,this.holes=e}function MultiPoint(){var t=arguments[0],e=arguments[1];GeometryCollection.call(this,t,e)}function LinearRing(){if(arguments[0]instanceof Coordinate&&arguments[1]instanceof GeometryFactory){var t=arguments[0],e=arguments[1];LinearRing.call(this,e.getCoordinateSequenceFactory().create(t),e)}else if(hasInterface(arguments[0],CoordinateSequence)&&arguments[1]instanceof GeometryFactory){var t=arguments[0],e=arguments[1];LineString.call(this,t,e),this.validateConstruction()}}function MultiPolygon(){var t=arguments[0],e=arguments[1];GeometryCollection.call(this,t,e)}function GeometryEditor(){if(this.factory=null,this.isUserDataCopied=!1,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.factory=t}}function GeometryEditorOperation(){}function NoOpGeometryOperation(){}function CoordinateOperation(){}function CoordinateSequenceOperation(){}function CoordinateArraySequence(){if(this.dimension=3,this.coordinates=null,1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];CoordinateArraySequence.call(this,t,3)}else if(Number.isInteger(arguments[0])){var e=arguments[0];this.coordinates=new Array(e).fill(null);for(var n=0;e>n;n++)this.coordinates[n]=new Coordinate}else if(hasInterface(arguments[0],CoordinateSequence)){var i=arguments[0];if(null===i)return this.coordinates=new Array(0).fill(null),null;this.dimension=i.getDimension(),this.coordinates=new Array(i.size()).fill(null);for(var n=0;n<this.coordinates.length;n++)this.coordinates[n]=i.getCoordinateCopy(n)}}else if(2===arguments.length)if(arguments[0]instanceof Array&&Number.isInteger(arguments[1])){var t=arguments[0],r=arguments[1];this.coordinates=t,this.dimension=r,null===t&&(this.coordinates=new Array(0).fill(null))}else if(Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var e=arguments[0],r=arguments[1];this.coordinates=new Array(e).fill(null),this.dimension=r;for(var n=0;e>n;n++)this.coordinates[n]=new Coordinate}}function CoordinateArraySequenceFactory(){}function HashMap(){this.map_=new Map}function PrecisionModel(){if(this.modelType=null,this.scale=null,0===arguments.length)this.modelType=PrecisionModel.FLOATING;else if(1===arguments.length)if(arguments[0]instanceof Type){var t=arguments[0];this.modelType=t,t===PrecisionModel.FIXED&&this.setScale(1)}else if("number"==typeof arguments[0]){var e=arguments[0];this.modelType=PrecisionModel.FIXED,this.setScale(e)}else if(arguments[0]instanceof PrecisionModel){var n=arguments[0];this.modelType=n.modelType,this.scale=n.scale}}function Type(){this.name=null;var t=arguments[0];this.name=t,Type.nameToTypeMap.put(t,this)}function GeometryFactory(){if(this.precisionModel=null,this.coordinateSequenceFactory=null,this.SRID=null,0===arguments.length)GeometryFactory.call(this,new PrecisionModel,0);else if(1===arguments.length){if(hasInterface(arguments[0],CoordinateSequenceFactory)){var t=arguments[0];GeometryFactory.call(this,new PrecisionModel,0,t)}else if(arguments[0]instanceof PrecisionModel){var e=arguments[0];GeometryFactory.call(this,e,0,GeometryFactory.getDefaultCoordinateSequenceFactory())}}else if(2===arguments.length){var e=arguments[0],n=arguments[1];GeometryFactory.call(this,e,n,GeometryFactory.getDefaultCoordinateSequenceFactory())}else if(3===arguments.length){var e=arguments[0],n=arguments[1],t=arguments[2];this.precisionModel=e,this.coordinateSequenceFactory=t,this.SRID=n}}function WKTParser(t){this.geometryFactory=t||new GeometryFactory}function WKTWriter(t){this.parser=new WKTParser(t)}function LineIntersector(){this.result=null,this.inputLines=Array(2).fill().map(function(){return Array(2)}),this.intPt=new Array(2).fill(null),this.intLineIndex=null,this._isProper=null,this.pa=null,this.pb=null,this.precisionModel=null,this.intPt[0]=new Coordinate,this.intPt[1]=new Coordinate,this.pa=this.intPt[0],this.pb=this.intPt[1],this.result=0}function RobustLineIntersector(){LineIntersector.apply(this)}function RobustDeterminant(){}function RayCrossingCounter(){this.p=null,this.crossingCount=0,this.isPointOnSegment=!1;var t=arguments[0];this.p=t}function CGAlgorithms(){}function LineSegment(){if(this.p0=null,this.p1=null,0===arguments.length)LineSegment.call(this,new Coordinate,new Coordinate);else if(1===arguments.length){var t=arguments[0];LineSegment.call(this,t.p0,t.p1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.p0=e,this.p1=n}else if(4===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2],s=arguments[3];LineSegment.call(this,new Coordinate(i,r),new Coordinate(o,s))}}function IntersectionMatrix(){if(this.matrix=null,0===arguments.length)this.matrix=Array(3).fill().map(function(){return Array(3)}),this.setAll(Dimension.FALSE);else if(1===arguments.length)if("string"==typeof arguments[0]){var t=arguments[0];IntersectionMatrix.call(this),this.set(t)}else if(arguments[0]instanceof IntersectionMatrix){var e=arguments[0];IntersectionMatrix.call(this),this.matrix[Location.INTERIOR][Location.INTERIOR]=e.matrix[Location.INTERIOR][Location.INTERIOR],this.matrix[Location.INTERIOR][Location.BOUNDARY]=e.matrix[Location.INTERIOR][Location.BOUNDARY],this.matrix[Location.INTERIOR][Location.EXTERIOR]=e.matrix[Location.INTERIOR][Location.EXTERIOR],this.matrix[Location.BOUNDARY][Location.INTERIOR]=e.matrix[Location.BOUNDARY][Location.INTERIOR],this.matrix[Location.BOUNDARY][Location.BOUNDARY]=e.matrix[Location.BOUNDARY][Location.BOUNDARY],this.matrix[Location.BOUNDARY][Location.EXTERIOR]=e.matrix[Location.BOUNDARY][Location.EXTERIOR],this.matrix[Location.EXTERIOR][Location.INTERIOR]=e.matrix[Location.EXTERIOR][Location.INTERIOR],this.matrix[Location.EXTERIOR][Location.BOUNDARY]=e.matrix[Location.EXTERIOR][Location.BOUNDARY],this.matrix[Location.EXTERIOR][Location.EXTERIOR]=e.matrix[Location.EXTERIOR][Location.EXTERIOR]}}function Centroid(){this.areaBasePt=null,this.triangleCent3=new Coordinate,this.areasum2=0,this.cg3=new Coordinate,this.lineCentSum=new Coordinate,this.totalLength=0,this.ptCount=0,this.ptCentSum=new Coordinate;var t=arguments[0];this.areaBasePt=null,this.add(t)}function EmptyStackException(t){this.message=t||""}function Stack(){this.array_=[]}function UniqueCoordinateArrayFilter(){this.treeSet=new TreeSet,this.list=new ArrayList}function ConvexHull(){if(this.geomFactory=null,this.inputPts=null,1===arguments.length){var t=arguments[0];ConvexHull.call(this,ConvexHull.extractCoordinates(t),t.getFactory())}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.inputPts=UniqueCoordinateArrayFilter.filterCoordinates(e),this.geomFactory=n}}function RadialComparator(){this.origin=null;var t=arguments[0];this.origin=t}function InteriorPointArea(){this.factory=null,this.interiorPoint=null,this.maxWidth=0;var t=arguments[0];this.factory=t.getFactory(),this.add(t)}function SafeBisectorFinder(){this.poly=null,this.centreY=null,this.hiY=Double.MAX_VALUE,this.loY=-Double.MAX_VALUE;var t=arguments[0];this.poly=t,this.hiY=t.getEnvelopeInternal().getMaxY(),this.loY=t.getEnvelopeInternal().getMinY(),this.centreY=InteriorPointArea.avg(this.loY,this.hiY)}function InteriorPointLine(){this.centroid=null,this.minDistance=Double.MAX_VALUE,this.interiorPoint=null;var t=arguments[0];this.centroid=t.getCentroid().getCoordinate(),this.addInterior(t),null===this.interiorPoint&&this.addEndpoints(t)}function InteriorPointPoint(){this.centroid=null,this.minDistance=Double.MAX_VALUE,this.interiorPoint=null;var t=arguments[0];this.centroid=t.getCentroid().getCoordinate(),this.add(t)}function Angle$1(){}function Triangle(){this.p0=null,this.p1=null,this.p2=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.p0=t,this.p1=e,this.p2=n}function MinimumBoundingCircle(){this.input=null,this.extremalPts=null,this.centre=null,this.radius=0;var t=arguments[0];this.input=t}function MinimumDiameter(){if(this.inputGeom=null,this.isConvex=null,this.convexHullPts=null,this.minBaseSeg=new LineSegment,this.minWidthPt=null,this.minPtIndex=null,this.minWidth=0,1===arguments.length){var t=arguments[0];MinimumDiameter.call(this,t,!1)}else if(2===arguments.length){var t=arguments[0],e=arguments[1];this.inputGeom=t,this.isConvex=e}}function GeometryTransformer(){this.inputGeom=null,this.factory=null,this.pruneEmptyGeometry=!0,this.preserveGeometryCollectionType=!0,this.preserveCollections=!1,this.preserveType=!1}function Densifier(){this.inputGeom=null,this.distanceTolerance=null;var t=arguments[0];this.inputGeom=t}function DensifyTransformer(){GeometryTransformer.apply(this),this.distanceTolerance=null;var t=arguments[0];this.distanceTolerance=t}function Quadrant(){}function HalfEdge(){this._orig=null,this._sym=null,this._next=null;var t=arguments[0];this._orig=t}function MarkHalfEdge(){this._isMarked=!1;var t=arguments[0];HalfEdge.call(this,t)}function EdgeGraph(){this.vertexMap=new HashMap}function DissolveHalfEdge(){this._isStart=!1;var t=arguments[0];MarkHalfEdge.call(this,t)}function DissolveEdgeGraph(){EdgeGraph.apply(this)}function LineDissolver(){this.result=null,this.factory=null,this.graph=null,this.lines=new ArrayList,this.nodeEdgeStack=new Stack,this.ringStartEdge=null,this.graph=new DissolveEdgeGraph}function NodeBase(){this.items=new ArrayList,this.subnode=new Array(4).fill(null)}function DoubleBits(){}function Key(){this.pt=new Coordinate,this.level=0,this.env=null;var t=arguments[0];this.computeKey(t)}function Node(){NodeBase.apply(this),this.env=null,this.centrex=null,this.centrey=null,this.level=null;var t=arguments[0],e=arguments[1];this.env=t,this.level=e,this.centrex=(t.getMinX()+t.getMaxX())/2,this.centrey=(t.getMinY()+t.getMaxY())/2}function IntervalSize(){}function Root(){NodeBase.apply(this)}function SpatialIndex(){}function ItemVisitor(){}function ArrayListVisitor(){this.items=new ArrayList}function Quadtree(){this.root=null,this.minExtent=1,this.root=new Root}function Boundable(){}function ItemBoundable(){this.bounds=null,this.item=null;var t=arguments[0],e=arguments[1];this.bounds=t,this.item=e}function PriorityQueue(){this._size=null,this.items=null,this._size=0,this.items=new ArrayList,this.items.add(null)}function AbstractNode(){if(this.childBoundables=new ArrayList,this.bounds=null,this.level=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.level=t}}function BoundablePair(){this.boundable1=null,this.boundable2=null,this._distance=null,this.itemDistance=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.boundable1=t,this.boundable2=e,this.itemDistance=n,this._distance=this.distance()}function AbstractSTRtree(){if(this.root=null,this.built=!1,this.itemBoundables=new ArrayList,this.nodeCapacity=null,0===arguments.length)AbstractSTRtree.call(this,AbstractSTRtree.DEFAULT_NODE_CAPACITY);else if(1===arguments.length){var t=arguments[0];Assert.isTrue(t>1,"Node capacity must be greater than 1"),this.nodeCapacity=t}}function IntersectsOp$1(){}function ItemDistance(){}function STRtree(){if(0===arguments.length)STRtree.call(this,STRtree.DEFAULT_NODE_CAPACITY);else if(1===arguments.length){var t=arguments[0];AbstractSTRtree.call(this,t)}}function STRtreeNode(){var t=arguments[0];AbstractNode.call(this,t)}function GeoJSONParser(t){this.geometryFactory=t||new GeometryFactory}function GeoJSONReader(t){this.geometryFactory=t||new GeometryFactory,this.precisionModel=this.geometryFactory.getPrecisionModel(),this.parser=new GeoJSONParser(this.geometryFactory)}function GeoJSONWriter(){this.parser=new GeoJSONParser(this.geometryFactory)}function WKTReader(t){this.geometryFactory=t||new GeometryFactory,this.precisionModel=this.geometryFactory.getPrecisionModel(),this.parser=new WKTParser(this.geometryFactory)}function p2c(t){return[t.x,t.y]}function OL3Parser(t){this.geometryFactory=t||new GeometryFactory}function SegmentPointComparator(){}function SegmentNode(){this.segString=null,this.coord=null,this.segmentIndex=null,this.segmentOctant=null,this._isInterior=null;var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.segString=t,this.coord=new Coordinate(e),this.segmentIndex=n,this.segmentOctant=i,this._isInterior=!e.equals2D(t.getCoordinate(n))}function SegmentNodeList(){this.nodeMap=new TreeMap,this.edge=null;var t=arguments[0];this.edge=t}function NodeVertexIterator(){this.nodeList=null,this.edge=null,this.nodeIt=null,this.currNode=null,this.nextNode=null,this.currSegIndex=0;var t=arguments[0];this.nodeList=t,this.edge=t.getEdge(),this.nodeIt=t.iterator(),this.readNextNode()}function Octant(){}function SegmentString(){}function NodableSegmentString(){}function NodedSegmentString(){this.nodeList=new SegmentNodeList(this),this.pts=null,this.data=null;var t=arguments[0],e=arguments[1];this.pts=t,this.data=e}function MonotoneChainOverlapAction(){this.tempEnv1=new Envelope,this.tempEnv2=new Envelope,this.overlapSeg1=new LineSegment,this.overlapSeg2=new LineSegment}function MonotoneChain(){this.pts=null,this.start=null,this.end=null,this.env=null,this.context=null,this.id=null;var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.pts=t,this.start=e,this.end=n,this.context=i}function MonotoneChainBuilder(){}function Noder(){}function SinglePassNoder(){if(this.segInt=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.setSegmentIntersector(t)}}function MCIndexNoder(){if(this.monoChains=new ArrayList,this.index=new STRtree,this.idCounter=0,this.nodedSegStrings=null,this.nOverlaps=0,0===arguments.length);else if(1===arguments.length){var t=arguments[0];SinglePassNoder.call(this,t)}}function SegmentOverlapAction(){MonotoneChainOverlapAction.apply(this),this.si=null;var t=arguments[0];this.si=t}function ScaledNoder(){if(this.noder=null,this.scaleFactor=null,this.offsetX=null,this.offsetY=null,this.isScaled=!1,2===arguments.length){var t=arguments[0],e=arguments[1];ScaledNoder.call(this,t,e,0,0)}else if(4===arguments.length){var t=arguments[0],e=arguments[1];arguments[2],arguments[3];this.noder=t,this.scaleFactor=e,this.isScaled=!this.isIntegerPrecision()}}function GeometryCollectionIterator(){this.parent=null,this.atStart=null,this.max=null,this.index=null,this.subcollectionIterator=null;var t=arguments[0];this.parent=t,this.atStart=!0,this.index=0,this.max=t.getNumGeometries()}function PointLocator(){if(this.boundaryRule=BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE,this.isIn=null,this.numBoundaries=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];if(null===t)throw new IllegalArgumentException("Rule must be non-null");this.boundaryRule=t}}function Position(){}function MonotoneChain$1(){this.mce=null,this.chainIndex=null;var t=arguments[0],e=arguments[1];this.mce=t,this.chainIndex=e}function SweepLineEvent(){if(this.label=null,this.xValue=null,this.eventType=null,this.insertEvent=null,this.deleteEventIndex=null,this.obj=null,2===arguments.length){var t=arguments[0],e=arguments[1];this.eventType=SweepLineEvent.DELETE,this.xValue=t,this.insertEvent=e}else if(3===arguments.length){var n=arguments[0],t=arguments[1],i=arguments[2];this.eventType=SweepLineEvent.INSERT,this.label=n,this.xValue=t,this.obj=i}}function EdgeSetIntersector(){}function SegmentIntersector(){this._hasIntersection=!1,this.hasProper=!1,this.hasProperInterior=!1,this.properIntersectionPoint=null,this.li=null,this.includeProper=null,this.recordIsolated=null,this.isSelfIntersection=null,this.numIntersections=0,this.numTests=0,this.bdyNodes=null,this._isDone=!1,this.isDoneWhenProperInt=!1;var t=arguments[0],e=arguments[1],n=arguments[2];this.li=t,this.includeProper=e,this.recordIsolated=n}function SimpleMCSweepLineIntersector(){EdgeSetIntersector.apply(this),this.events=new ArrayList,this.nOverlaps=null}function TopologyLocation(){if(this.location=null,1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];this.init(t.length)}else if(Number.isInteger(arguments[0])){var e=arguments[0];this.init(1),this.location[Position.ON]=e}else if(arguments[0]instanceof TopologyLocation){var n=arguments[0];if(this.init(n.location.length),null!==n)for(var i=0;i<this.location.length;i++)this.location[i]=n.location[i]}}else if(3===arguments.length){var e=arguments[0],r=arguments[1],o=arguments[2];this.init(3),this.location[Position.ON]=e,this.location[Position.LEFT]=r,this.location[Position.RIGHT]=o}}function Label(){if(this.elt=new Array(2).fill(null),1===arguments.length){if(Number.isInteger(arguments[0])){var t=arguments[0];this.elt[0]=new TopologyLocation(t),this.elt[1]=new TopologyLocation(t)}else if(arguments[0]instanceof Label){var e=arguments[0];this.elt[0]=new TopologyLocation(e.elt[0]),this.elt[1]=new TopologyLocation(e.elt[1])}}else if(2===arguments.length){var n=arguments[0],t=arguments[1];this.elt[0]=new TopologyLocation(Location.NONE),this.elt[1]=new TopologyLocation(Location.NONE),this.elt[n].setLocation(t)}else if(3===arguments.length){var t=arguments[0],i=arguments[1],r=arguments[2];this.elt[0]=new TopologyLocation(t,i,r),this.elt[1]=new TopologyLocation(t,i,r)}else if(4===arguments.length){var n=arguments[0],t=arguments[1],i=arguments[2],r=arguments[3];this.elt[0]=new TopologyLocation(Location.NONE,Location.NONE,Location.NONE),this.elt[1]=new TopologyLocation(Location.NONE,Location.NONE,Location.NONE),this.elt[n].setLocations(t,i,r)}}function PointOnGeometryLocator(){}function IntervalRTreeNode$1(){this.min=Double.POSITIVE_INFINITY,this.max=Double.NEGATIVE_INFINITY}function NodeComparator(){}function IntervalRTreeLeafNode(){IntervalRTreeNode$1.apply(this),this.item=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.min=t,this.max=e,this.item=n}function IntervalRTreeBranchNode(){IntervalRTreeNode$1.apply(this),this.node1=null,this.node2=null;var t=arguments[0],e=arguments[1];this.node1=t,this.node2=e,this.buildExtent(this.node1,this.node2)}function SortedPackedIntervalRTree(){this.leaves=new ArrayList,this.root=null,this.level=0}function LinearComponentExtracter(){if(this.lines=null,this.isForcedToLineString=!1,1===arguments.length){var t=arguments[0];this.lines=t}else if(2===arguments.length){var t=arguments[0],e=arguments[1];this.lines=t,this.isForcedToLineString=e}}function IndexedPointInAreaLocator(){this.index=null;var t=arguments[0];if(!hasInterface(t,Polygonal))throw new IllegalArgumentException("Argument must be Polygonal");this.index=new IntervalIndexedGeometry(t)}function SegmentVisitor(){this.counter=null;var t=arguments[0];this.counter=t}function IntervalIndexedGeometry(){this.index=new SortedPackedIntervalRTree;var t=arguments[0];this.init(t)}function EdgeIntersection(){this.coord=null,this.segmentIndex=null,this.dist=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.coord=new Coordinate(t),this.segmentIndex=e,this.dist=n}function EdgeIntersectionList(){this.nodeMap=new TreeMap,this.edge=null;var t=arguments[0];this.edge=t}function MonotoneChainIndexer(){}function MonotoneChainEdge(){this.e=null,this.pts=null,this.startIndex=null,this.env1=new Envelope,this.env2=new Envelope;var t=arguments[0];this.e=t,this.pts=t.getCoordinates();var e=new MonotoneChainIndexer;this.startIndex=e.getChainStartIndices(this.pts)}function Depth(){this.depth=Array(2).fill().map(function(){return Array(3)});for(var t=0;2>t;t++)for(var e=0;3>e;e++)this.depth[t][e]=Depth.NULL_VALUE}function GraphComponent(){if(this.label=null,this._isInResult=!1,this._isCovered=!1,this._isCoveredSet=!1,this._isVisited=!1,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.label=t}}function Edge(){if(GraphComponent.apply(this),this.pts=null,this.env=null,this.eiList=new EdgeIntersectionList(this),this.name=null,this.mce=null,this._isIsolated=!0,this.depth=new Depth,this.depthDelta=0,1===arguments.length){var t=arguments[0];Edge.call(this,t,null)}else if(2===arguments.length){var t=arguments[0],e=arguments[1];this.pts=t,this.label=e}}function Node$1(){GraphComponent.apply(this),this.coord=null,this.edges=null;var t=arguments[0],e=arguments[1];this.coord=t,this.edges=e,this.label=new Label(0,Location.NONE)}function NodeMap(){this.nodeMap=new TreeMap,this.nodeFact=null;var t=arguments[0];this.nodeFact=t}function EdgeEnd(){if(this.edge=null,this.label=null,this.node=null,this.p0=null,this.p1=null,this.dx=null,this.dy=null,this.quadrant=null,1===arguments.length){var t=arguments[0];this.edge=t}else if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];EdgeEnd.call(this,t,e,n,null)}else if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];EdgeEnd.call(this,t),this.init(e,n),this.label=i}}function TopologyException(){if(this.pt=null,1===arguments.length){var t=arguments[0];RuntimeException.call(this,t)}else if(2===arguments.length){var t=arguments[0],e=arguments[1];RuntimeException.call(this,TopologyException.msgWithCoord(t,e)),this.pt=new Coordinate(e)}}function DirectedEdge(){this._isForward=null,this._isInResult=!1,this._isVisited=!1,this.sym=null,this.next=null,this.nextMin=null,this.edgeRing=null,this.minEdgeRing=null,this.depth=[0,-999,-999];var t=arguments[0],e=arguments[1];if(EdgeEnd.call(this,t),this._isForward=e,e)this.init(t.getCoordinate(0),t.getCoordinate(1));else{var n=t.getNumPoints()-1;this.init(t.getCoordinate(n),t.getCoordinate(n-1))}this.computeDirectedLabel()}function NodeFactory(){}function PlanarGraph(){if(this.edges=new ArrayList,this.nodes=null,this.edgeEndList=new ArrayList,0===arguments.length)this.nodes=new NodeMap(new NodeFactory);else if(1===arguments.length){var t=arguments[0];this.nodes=new NodeMap(t)}}function GeometryGraph(){if(PlanarGraph.apply(this),this.parentGeom=null,this.lineEdgeMap=new HashMap,this.boundaryNodeRule=null,this.useBoundaryDeterminationRule=!0,this.argIndex=null,this.boundaryNodes=null,this._hasTooFewPoints=!1,this.invalidPoint=null,this.areaPtLocator=null,this.ptLocator=new PointLocator,2===arguments.length){var t=arguments[0],e=arguments[1];GeometryGraph.call(this,t,e,BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE)}else if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];this.argIndex=t,this.parentGeom=e,this.boundaryNodeRule=n,null!==e&&this.add(e)}}function IsSimpleOp(){if(this.inputGeom=null,this.isClosedEndpointsInInterior=!0,this.nonSimpleLocation=null,1===arguments.length){var t=arguments[0];this.inputGeom=t}else if(2===arguments.length){var t=arguments[0],e=arguments[1];this.inputGeom=t,this.isClosedEndpointsInInterior=!e.isInBoundary(2)}}function EndpointInfo(){this.pt=null,this.isClosed=null,this.degree=null;var t=arguments[0];this.pt=t,this.isClosed=!1,this.degree=0}function BufferParameters(){if(this.quadrantSegments=BufferParameters.DEFAULT_QUADRANT_SEGMENTS,this.endCapStyle=BufferParameters.CAP_ROUND,this.joinStyle=BufferParameters.JOIN_ROUND,this.mitreLimit=BufferParameters.DEFAULT_MITRE_LIMIT,this._isSingleSided=!1,this.simplifyFactor=BufferParameters.DEFAULT_SIMPLIFY_FACTOR,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.setQuadrantSegments(t)}else if(2===arguments.length){var t=arguments[0],e=arguments[1];this.setQuadrantSegments(t),this.setEndCapStyle(e)}else if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.setQuadrantSegments(t),this.setEndCapStyle(e),this.setJoinStyle(n),this.setMitreLimit(i)}}function RightmostEdgeFinder(){this.minIndex=-1,this.minCoord=null,this.minDe=null,this.orientedDe=null}function LinkedList(){this.array_=[]}function BufferSubgraph(){this.finder=null,this.dirEdgeList=new ArrayList,this.nodes=new ArrayList,this.rightMostCoord=null,this.env=null,this.finder=new RightmostEdgeFinder}function EdgeRing(){this.startDe=null,this.maxNodeDegree=-1,this.edges=new ArrayList,this.pts=new ArrayList,this.label=new Label(Location.NONE),this.ring=null,this._isHole=null,this.shell=null,this.holes=new ArrayList,this.geometryFactory=null;var t=arguments[0],e=arguments[1];this.geometryFactory=e,this.computePoints(t),this.computeRing()}function MinimalEdgeRing(){var t=arguments[0],e=arguments[1];EdgeRing.call(this,t,e)}function MaximalEdgeRing(){var t=arguments[0],e=arguments[1];EdgeRing.call(this,t,e)}function PolygonBuilder(){this.geometryFactory=null,this.shellList=new ArrayList;var t=arguments[0];this.geometryFactory=t}function BufferInputLineSimplifier(){this.inputLine=null,this.distanceTol=null,this.isDeleted=null,this.angleOrientation=CGAlgorithms.COUNTERCLOCKWISE;var t=arguments[0];this.inputLine=t}function OffsetSegmentString(){this.ptList=null,this.precisionModel=null,this.minimimVertexDistance=0,this.ptList=new ArrayList}function OffsetSegmentGenerator(){this.maxCurveSegmentError=0,this.filletAngleQuantum=null,this.closingSegLengthFactor=1,this.segList=null,this.distance=0,this.precisionModel=null,this.bufParams=null,this.li=null,this.s0=null,this.s1=null,this.s2=null,this.seg0=new LineSegment,this.seg1=new LineSegment,this.offset0=new LineSegment,this.offset1=new LineSegment,this.side=0,this._hasNarrowConcaveAngle=!1;var t=arguments[0],e=arguments[1],n=arguments[2];this.precisionModel=t,
this.bufParams=e,this.li=new RobustLineIntersector,this.filletAngleQuantum=Math.PI/2/e.getQuadrantSegments(),e.getQuadrantSegments()>=8&&e.getJoinStyle()===BufferParameters.JOIN_ROUND&&(this.closingSegLengthFactor=OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR),this.init(n)}function OffsetCurveBuilder(){this.distance=0,this.precisionModel=null,this.bufParams=null;var t=arguments[0],e=arguments[1];this.precisionModel=t,this.bufParams=e}function SubgraphDepthLocater(){this.subgraphs=null,this.seg=new LineSegment,this.cga=new CGAlgorithms;var t=arguments[0];this.subgraphs=t}function DepthSegment(){this.upwardSeg=null,this.leftDepth=null;var t=arguments[0],e=arguments[1];this.upwardSeg=new LineSegment(t),this.leftDepth=e}function OffsetCurveSetBuilder(){this.inputGeom=null,this.distance=null,this.curveBuilder=null,this.curveList=new ArrayList;var t=arguments[0],e=arguments[1],n=arguments[2];this.inputGeom=t,this.distance=e,this.curveBuilder=n}function SimplePointInAreaLocator(){this.geom=null;var t=arguments[0];this.geom=t}function EdgeEndStar(){this.edgeMap=new TreeMap,this.edgeList=null,this.ptInAreaLocation=[Location.NONE,Location.NONE]}function DirectedEdgeStar(){EdgeEndStar.apply(this),this.resultAreaEdgeList=null,this.label=null,this.SCANNING_FOR_INCOMING=1,this.LINKING_TO_OUTGOING=2}function OverlayNodeFactory(){NodeFactory.apply(this)}function OrientedCoordinateArray(){this.pts=null,this._orientation=null;var t=arguments[0];this.pts=t,this._orientation=OrientedCoordinateArray.orientation(t)}function EdgeList(){this.edges=new ArrayList,this.ocaMap=new TreeMap}function SegmentIntersector$1(){}function IntersectionAdder(){this._hasIntersection=!1,this.hasProper=!1,this.hasProperInterior=!1,this.hasInterior=!1,this.properIntersectionPoint=null,this.li=null,this.isSelfIntersection=null,this.numIntersections=0,this.numInteriorIntersections=0,this.numProperIntersections=0,this.numTests=0;var t=arguments[0];this.li=t}function BufferBuilder(){this.bufParams=null,this.workingPrecisionModel=null,this.workingNoder=null,this.geomFact=null,this.graph=null,this.edgeList=new EdgeList;var t=arguments[0];this.bufParams=t}function NodingValidator(){this.li=new RobustLineIntersector,this.segStrings=null;var t=arguments[0];this.segStrings=t}function HotPixel(){this.li=null,this.pt=null,this.originalPt=null,this.ptScaled=null,this.p0Scaled=null,this.p1Scaled=null,this.scaleFactor=null,this.minx=null,this.maxx=null,this.miny=null,this.maxy=null,this.corner=new Array(4).fill(null),this.safeEnv=null;var t=arguments[0],e=arguments[1],n=arguments[2];if(this.originalPt=t,this.pt=t,this.scaleFactor=e,this.li=n,0>=e)throw new IllegalArgumentException("Scale factor must be non-zero");1!==e&&(this.pt=new Coordinate(this.scale(t.x),this.scale(t.y)),this.p0Scaled=new Coordinate,this.p1Scaled=new Coordinate),this.initCorners(this.pt)}function MonotoneChainSelectAction(){this.tempEnv1=new Envelope,this.selectedSegment=new LineSegment}function MCIndexPointSnapper(){this.index=null;var t=arguments[0];this.index=t}function HotPixelSnapAction(){MonotoneChainSelectAction.apply(this),this.hotPixel=null,this.parentEdge=null,this.hotPixelVertexIndex=null,this._isNodeAdded=!1;var t=arguments[0],e=arguments[1],n=arguments[2];this.hotPixel=t,this.parentEdge=e,this.hotPixelVertexIndex=n}function InteriorIntersectionFinderAdder(){this.li=null,this.interiorIntersections=null;var t=arguments[0];this.li=t,this.interiorIntersections=new ArrayList}function MCIndexSnapRounder(){this.pm=null,this.li=null,this.scaleFactor=null,this.noder=null,this.pointSnapper=null,this.nodedSegStrings=null;var t=arguments[0];this.pm=t,this.li=new RobustLineIntersector,this.li.setPrecisionModel(t),this.scaleFactor=t.getScale()}function BufferOp(){if(this.argGeom=null,this.distance=null,this.bufParams=new BufferParameters,this.resultGeometry=null,this.saveException=null,1===arguments.length){var t=arguments[0];this.argGeom=t}else if(2===arguments.length){var t=arguments[0],e=arguments[1];this.argGeom=t,this.bufParams=e}}function PolygonExtracter(){this.comps=null;var t=arguments[0];this.comps=t}function GeometryLocation(){if(this.component=null,this.segIndex=null,this.pt=null,2===arguments.length){var t=arguments[0],e=arguments[1];GeometryLocation.call(this,t,GeometryLocation.INSIDE_AREA,e)}else if(3===arguments.length){var t=arguments[0],n=arguments[1],e=arguments[2];this.component=t,this.segIndex=n,this.pt=e}}function PointExtracter(){this.pts=null;var t=arguments[0];this.pts=t}function ConnectedElementLocationFilter(){this.locations=null;var t=arguments[0];this.locations=t}function DistanceOp(){if(this.geom=null,this.terminateDistance=0,this.ptLocator=new PointLocator,this.minDistanceLocation=null,this.minDistance=Double.MAX_VALUE,2===arguments.length){var t=arguments[0],e=arguments[1];DistanceOp.call(this,t,e,0)}else if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];this.geom=new Array(2).fill(null),this.geom[0]=t,this.geom[1]=e,this.terminateDistance=n}}function EdgeString(){this.factory=null,this.directedEdges=new ArrayList,this.coordinates=null;var t=arguments[0];this.factory=t}function GraphComponent$1(){this._isMarked=!1,this._isVisited=!1,this.data=null}function DirectedEdge$1(){GraphComponent$1.apply(this),this.parentEdge=null,this.from=null,this.to=null,this.p0=null,this.p1=null,this.sym=null,this.edgeDirection=null,this.quadrant=null,this.angle=null;var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.from=t,this.to=e,this.edgeDirection=i,this.p0=t.getCoordinate(),this.p1=n;var r=this.p1.x-this.p0.x,o=this.p1.y-this.p0.y;this.quadrant=Quadrant.quadrant(r,o),this.angle=Math.atan2(o,r)}function LineMergeDirectedEdge(){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];DirectedEdge$1.call(this,t,e,n,i)}function Edge$1(){if(GraphComponent$1.apply(this),this.dirEdge=null,0===arguments.length);else if(2===arguments.length){var t=arguments[0],e=arguments[1];this.setDirectedEdges(t,e)}}function DirectedEdgeStar$1(){this.outEdges=new ArrayList,this.sorted=!1}function Node$2(){if(GraphComponent$1.apply(this),this.pt=null,this.deStar=null,1===arguments.length){var t=arguments[0];Node$2.call(this,t,new DirectedEdgeStar$1)}else if(2===arguments.length){var t=arguments[0],e=arguments[1];this.pt=t,this.deStar=e}}function LineMergeEdge(){Edge$1.apply(this),this.line=null;var t=arguments[0];this.line=t}function NodeMap$1(){this.nodeMap=new TreeMap}function PlanarGraph$1(){this.edges=new HashSet,this.dirEdges=new HashSet,this.nodeMap=new NodeMap$1}function LineMergeGraph(){PlanarGraph$1.apply(this)}function LineMerger(){this.graph=new LineMergeGraph,this.mergedLineStrings=null,this.factory=null,this.edgeStrings=null}function BasicSegmentString(){this.pts=null,this.data=null;var t=arguments[0],e=arguments[1];this.pts=t,this.data=e}function InteriorIntersectionFinder(){this.findAllIntersections=!1,this.isCheckEndSegmentsOnly=!1,this.li=null,this.interiorIntersection=null,this.intSegments=null,this.intersections=new ArrayList,this.intersectionCount=0,this.keepIntersections=!0;var t=arguments[0];this.li=t,this.interiorIntersection=null}function FastNodingValidator(){this.li=new RobustLineIntersector,this.segStrings=null,this.findAllIntersections=!1,this.segInt=null,this._isValid=!0;var t=arguments[0];this.segStrings=t}function EdgeNodingValidator(){this.nv=null;var t=arguments[0];this.nv=new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(t))}function LineBuilder(){this.op=null,this.geometryFactory=null,this.ptLocator=null,this.lineEdgesList=new ArrayList,this.resultLineList=new ArrayList;var t=arguments[0],e=arguments[1],n=arguments[2];this.op=t,this.geometryFactory=e,this.ptLocator=n}function PointBuilder(){this.op=null,this.geometryFactory=null,this.resultPointList=new ArrayList;var t=arguments[0],e=arguments[1];arguments[2];this.op=t,this.geometryFactory=e}function GeometryGraphOperation(){if(this.li=new RobustLineIntersector,this.resultPrecisionModel=null,this.arg=null,1===arguments.length){var t=arguments[0];this.setComputationPrecision(t.getPrecisionModel()),this.arg=new Array(1).fill(null),this.arg[0]=new GeometryGraph(0,t)}else if(2===arguments.length){var t=arguments[0],e=arguments[1];GeometryGraphOperation.call(this,t,e,BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE)}else if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];t.getPrecisionModel().compareTo(e.getPrecisionModel())>=0?this.setComputationPrecision(t.getPrecisionModel()):this.setComputationPrecision(e.getPrecisionModel()),this.arg=new Array(2).fill(null),this.arg[0]=new GeometryGraph(0,t,n),this.arg[1]=new GeometryGraph(1,e,n)}}function OverlayOp(){this.ptLocator=new PointLocator,this.geomFact=null,this.resultGeom=null,this.graph=null,this.edgeList=new EdgeList,this.resultPolyList=new ArrayList,this.resultLineList=new ArrayList,this.resultPointList=new ArrayList;var t=arguments[0],e=arguments[1];GeometryGraphOperation.call(this,t,e),this.graph=new PlanarGraph(new OverlayNodeFactory),this.geomFact=t.getFactory()}function PolygonizeDirectedEdge(){this.edgeRing=null,this.next=null,this.label=-1;var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];DirectedEdge$1.call(this,t,e,n,i)}function PolygonizeEdge(){Edge$1.apply(this),this.line=null;var t=arguments[0];this.line=t}function EdgeRing$1(){this.factory=null,this.deList=new ArrayList,this.lowestEdge=null,this.ring=null,this.ringPts=null,this.holes=null,this.shell=null,this._isHole=null,this._isProcessed=!1,this._isIncludedSet=!1,this._isIncluded=!1;var t=arguments[0];this.factory=t}function EnvelopeComparator(){}function PolygonizeGraph(){PlanarGraph$1.apply(this),this.factory=null;var t=arguments[0];this.factory=t}function Polygonizer(){if(this.lineStringAdder=new LineStringAdder(this),this.graph=null,this.dangles=new ArrayList,this.cutEdges=new ArrayList,this.invalidRingLines=new ArrayList,this.holeList=null,this.shellList=null,this.polyList=null,this.isCheckingRingsValid=!0,this.extractOnlyPolygonal=null,this.geomFactory=null,0===arguments.length)Polygonizer.call(this,!1);else if(1===arguments.length){var t=arguments[0];this.extractOnlyPolygonal=t}}function LineStringAdder(){this.p=null;var t=arguments[0];this.p=t}function EdgeEndBuilder(){}function EdgeEndBundle(){if(this.edgeEnds=new ArrayList,1===arguments.length){var t=arguments[0];EdgeEndBundle.call(this,null,t)}else if(2===arguments.length){var t=(arguments[0],arguments[1]);EdgeEnd.call(this,t.getEdge(),t.getCoordinate(),t.getDirectedCoordinate(),new Label(t.getLabel())),this.insert(t)}}function EdgeEndBundleStar(){EdgeEndStar.apply(this)}function RelateNode(){var t=arguments[0],e=arguments[1];Node$1.call(this,t,e)}function RelateNodeFactory(){NodeFactory.apply(this)}function RelateComputer(){this.li=new RobustLineIntersector,this.ptLocator=new PointLocator,this.arg=null,this.nodes=new NodeMap(new RelateNodeFactory),this.im=null,this.isolatedEdges=new ArrayList,this.invalidPoint=null;var t=arguments[0];this.arg=t}function RelateOp$1(){if(this._relate=null,2===arguments.length){var t=arguments[0],e=arguments[1];GeometryGraphOperation.call(this,t,e),this._relate=new RelateComputer(this.arg)}else if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];GeometryGraphOperation.call(this,t,e,n),this._relate=new RelateComputer(this.arg)}}function GeometryCombiner(){this.geomFactory=null,this.skipEmpty=!1,this.inputGeoms=null;var t=arguments[0];this.geomFactory=GeometryCombiner.extractFactory(t),this.inputGeoms=t}function CascadedPolygonUnion(){this.inputPolys=null,this.geomFactory=null;var t=arguments[0];this.inputPolys=t,null===this.inputPolys&&(this.inputPolys=new ArrayList)}function PointGeometryUnion(){this.pointGeom=null,this.otherGeom=null,this.geomFact=null;var t=arguments[0],e=arguments[1];this.pointGeom=t,this.otherGeom=e,this.geomFact=e.getFactory()}function LineStringSnapper(){if(this.snapTolerance=0,this.srcPts=null,this.seg=new LineSegment,this.allowSnappingToSourceVertices=!1,this._isClosed=!1,arguments[0]instanceof LineString&&"number"==typeof arguments[1]){var t=arguments[0],e=arguments[1];LineStringSnapper.call(this,t.getCoordinates(),e)}else if(arguments[0]instanceof Array&&"number"==typeof arguments[1]){var n=arguments[0],e=arguments[1];this.srcPts=n,this._isClosed=LineStringSnapper.isClosed(n),this.snapTolerance=e}}function GeometrySnapper(){this.srcGeom=null;var t=arguments[0];this.srcGeom=t}function SnapTransformer(){if(GeometryTransformer.apply(this),this.snapTolerance=null,this.snapPts=null,this.isSelfSnap=!1,2===arguments.length){var t=arguments[0],e=arguments[1];this.snapTolerance=t,this.snapPts=e}else if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];this.snapTolerance=t,this.snapPts=e,this.isSelfSnap=n}}function CommonBits(){this.isFirst=!0,this.commonMantissaBitsCount=53,this.commonBits=0,this.commonSignExp=null}function CommonBitsRemover(){this.commonCoord=null,this.ccFilter=new CommonCoordinateFilter}function CommonCoordinateFilter(){this.commonBitsX=new CommonBits,this.commonBitsY=new CommonBits}function Translater(){this.trans=null;var t=arguments[0];this.trans=t}function SnapOverlayOp(){this.geom=new Array(2).fill(null),this.snapTolerance=null,this.cbr=null;var t=arguments[0],e=arguments[1];this.geom[0]=t,this.geom[1]=e,this.computeSnapTolerance()}function SnapIfNeededOverlayOp(){this.geom=new Array(2).fill(null);var t=arguments[0],e=arguments[1];this.geom[0]=t,this.geom[1]=e}function GeometryExtracter(){this.clz=null,this.comps=null;var t=arguments[0],e=arguments[1];this.clz=t,this.comps=e}function UnaryUnionOp(){if(this.polygons=new ArrayList,this.lines=new ArrayList,this.points=new ArrayList,this.geomFact=null,1===arguments.length){if(hasInterface(arguments[0],Collection)){var t=arguments[0];this.extract(t)}else if(arguments[0]instanceof Geometry){var e=arguments[0];this.extract(e)}}else if(2===arguments.length){var t=arguments[0],n=arguments[1];this.geomFact=n,this.extract(t)}}function ConnectedInteriorTester(){this.geometryFactory=new GeometryFactory,this.geomGraph=null,this.disconnectedRingcoord=null;var t=arguments[0];this.geomGraph=t}function NodeBase$1(){this.items=new ArrayList,this.subnode=[null,null]}function Interval(){if(this.min=null,this.max=null,0===arguments.length)this.min=0,this.max=0;else if(1===arguments.length){var t=arguments[0];this.init(t.min,t.max)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.init(e,n)}}function Key$1(){this.pt=0,this.level=0,this.interval=null;var t=arguments[0];this.computeKey(t)}function Node$3(){NodeBase$1.apply(this),this.interval=null,this.centre=null,this.level=null;var t=arguments[0],e=arguments[1];this.interval=t,this.level=e,this.centre=(t.getMin()+t.getMax())/2}function Root$1(){NodeBase$1.apply(this)}function Bintree(){this.root=null,this.minExtent=1,this.root=new Root$1}function PointInRing(){}function MCPointInRing(){this.ring=null,this.tree=null,this.crossings=0,this.interval=new Interval;var t=arguments[0];this.ring=t,this.buildIndex()}function MCSelecter(){MonotoneChainSelectAction.apply(this),this.mcp=null,this.p=null;var t=arguments[0],e=arguments[1];this.mcp=t,this.p=e}function RelateNodeGraph(){this.nodes=new NodeMap(new RelateNodeFactory)}function ConsistentAreaTester(){this.li=new RobustLineIntersector,this.geomGraph=null,this.nodeGraph=new RelateNodeGraph,this.invalidPoint=null;var t=arguments[0];this.geomGraph=t}function IndexedNestedRingTester(){this.graph=null,this.rings=new ArrayList,this.totalEnv=new Envelope,this.index=null,this.nestedPt=null;var t=arguments[0];this.graph=t}function TopologyValidationError(){if(this.errorType=null,this.pt=null,1===arguments.length){var t=arguments[0];TopologyValidationError.call(this,t,null)}else if(2===arguments.length){var t=arguments[0],e=arguments[1];this.errorType=t,null!==e&&(this.pt=e.copy())}}function IsValidOp(){this.parentGeometry=null,this.isSelfTouchingRingFormingHoleValid=!1,this.validErr=null;var t=arguments[0];this.parentGeometry=t}function PrecisionReducerCoordinateOperation(){GeometryEditor.CoordinateOperation.apply(this),this.targetPM=null,this.removeCollapsed=!0;var t=arguments[0],e=arguments[1];this.targetPM=t,this.removeCollapsed=e}function GeometryPrecisionReducer(){this.targetPM=null,this.removeCollapsed=!0,this.changePrecisionModel=!1,this.isPointwise=!1;var t=arguments[0];this.targetPM=t}function DouglasPeuckerLineSimplifier(){this.pts=null,this.usePt=null,this.distanceTolerance=null,this.seg=new LineSegment;var t=arguments[0];this.pts=t}function DouglasPeuckerSimplifier(){this.inputGeom=null,this.distanceTolerance=null,this.isEnsureValidTopology=!0;var t=arguments[0];this.inputGeom=t}function DPTransformer(){GeometryTransformer.apply(this),this.isEnsureValidTopology=!0,this.distanceTolerance=null;var t=arguments[0],e=arguments[1];this.isEnsureValidTopology=t,this.distanceTolerance=e}function TaggedLineSegment(){if(this.parent=null,this.index=null,2===arguments.length){var t=arguments[0],e=arguments[1];TaggedLineSegment.call(this,t,e,null,-1)}else if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];LineSegment.call(this,t,e),this.parent=n,this.index=i}}function TaggedLineString(){if(this.parentLine=null,this.segs=null,this.resultSegs=new ArrayList,this.minimumSize=null,1===arguments.length){var t=arguments[0];TaggedLineString.call(this,t,2)}else if(2===arguments.length){var t=arguments[0],e=arguments[1];this.parentLine=t,this.minimumSize=e,this.init()}}function LineSegmentIndex(){this.index=new Quadtree}function LineSegmentVisitor(){this.querySeg=null,this.items=new ArrayList;var t=arguments[0];this.querySeg=t}function TaggedLineStringSimplifier(){this.li=new RobustLineIntersector,this.inputIndex=new LineSegmentIndex,this.outputIndex=new LineSegmentIndex,this.line=null,this.linePts=null,this.distanceTolerance=0;var t=arguments[0],e=arguments[1];this.inputIndex=t,this.outputIndex=e}function TaggedLinesSimplifier(){this.inputIndex=new LineSegmentIndex,this.outputIndex=new LineSegmentIndex,this.distanceTolerance=0}function TopologyPreservingSimplifier(){this.inputGeom=null,this.lineSimplifier=new TaggedLinesSimplifier,this.linestringMap=null;var t=arguments[0];this.inputGeom=t}function LineStringTransformer(){GeometryTransformer.apply(this),this.linestringMap=null;var t=arguments[0];this.linestringMap=t}function LineStringMapBuilderFilter(){this.tps=null;var t=arguments[0];this.tps=t}function SplitSegment(){this.seg=null,this.segLen=null,this.splitPt=null,this.minimumLen=0;var t=arguments[0];this.seg=t,this.segLen=t.getLength()}function ConstraintSplitPointFinder(){}function NonEncroachingSplitPointFinder(){}function TrianglePredicate(){}function Vertex(){if(this.p=null,1===arguments.length){var t=arguments[0];this.p=new Coordinate(t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.p=new Coordinate(e,n)}else if(3===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2];this.p=new Coordinate(e,n,i)}}function ConstraintVertex(){this._isOnConstraint=null,this.constraint=null;var t=arguments[0];Vertex.call(this,t)}function QuadEdge(){this._rot=null,this.vertex=null,this.next=null,this.data=null}function IncrementalDelaunayTriangulator(){this.subdiv=null,this.isUsingTolerance=!1;var t=arguments[0];this.subdiv=t,this.isUsingTolerance=t.getTolerance()>0}function QuadEdgeLocator(){}function LastFoundQuadEdgeLocator(){this.subdiv=null,this.lastEdge=null;var t=arguments[0];this.subdiv=t,this.init()}function LocateFailureException(){if(this.seg=null,1===arguments.length){if("string"==typeof arguments[0]){var t=arguments[0];RuntimeException.call(this,t)}else if(arguments[0]instanceof LineSegment){var e=arguments[0];RuntimeException.call(this,"Locate failed to converge (at edge: "+e+").  Possible causes include invalid Subdivision topology or very close sites"),this.seg=new LineSegment(e)}}else if(2===arguments.length){var t=arguments[0],e=arguments[1];RuntimeException.call(this,LocateFailureException.msgWithSpatial(t,e)),this.seg=new LineSegment(e)}}function TriangleVisitor(){}function QuadEdgeSubdivision(){this.visitedKey=0,this.quadEdges=new ArrayList,this.startingEdge=null,this.tolerance=null,this.edgeCoincidenceTolerance=null,this.frameVertex=new Array(3).fill(null),this.frameEnv=null,this.locator=null,this.seg=new LineSegment,this.triEdges=new Array(3).fill(null);var t=arguments[0],e=arguments[1];this.tolerance=e,this.edgeCoincidenceTolerance=e/QuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR,this.createFrame(t),this.startingEdge=this.initSubdiv(),this.locator=new LastFoundQuadEdgeLocator(this)}function TriangleCircumcentreVisitor(){}function TriangleEdgesListVisitor(){this.triList=new ArrayList}function TriangleVertexListVisitor(){this.triList=new ArrayList}function TriangleCoordinatesVisitor(){this.coordList=new CoordinateList,this.triCoords=new ArrayList}function Segment(){if(this.ls=null,this.data=null,2===arguments.length){var t=arguments[0],e=arguments[1];this.ls=new LineSegment(t,e)}else if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];this.ls=new LineSegment(t,e),this.data=n}else if(6===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2],s=arguments[3],a=arguments[4],l=arguments[5];Segment.call(this,new Coordinate(i,r,o),new Coordinate(s,a,l))}else if(7===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2],s=arguments[3],a=arguments[4],l=arguments[5],n=arguments[6];Segment.call(this,new Coordinate(i,r,o),new Coordinate(s,a,l),n)}}function KdNodeVisitor(){}function KdNode(){if(this.p=null,this.data=null,this.left=null,this.right=null,this.count=null,2===arguments.length){var t=arguments[0],e=arguments[1];this.p=new Coordinate(t),this.left=null,this.right=null,this.count=1,this.data=e}else if(3===arguments.length){var n=arguments[0],i=arguments[1],e=arguments[2];this.p=new Coordinate(n,i),this.left=null,this.right=null,this.count=1,this.data=e}}function KdTree(){if(this.root=null,this.numberOfNodes=null,this.tolerance=null,0===arguments.length)KdTree.call(this,0);else if(1===arguments.length){var t=arguments[0];this.tolerance=t}}function BestMatchVisitor(){this.tolerance=null,this.matchNode=null,this.matchDist=0,this.p=null;var t=arguments[0],e=arguments[1];this.p=t,this.tolerance=e}function ConformingDelaunayTriangulator(){this.initialVertices=null,this.segVertices=null,this.segments=new ArrayList,this.subdiv=null,this.incDel=null,this.convexHull=null,this.splitFinder=new NonEncroachingSplitPointFinder,this.kdt=null,this.vertexFactory=null,this.computeAreaEnv=null,this.splitPt=null,this.tolerance=null;var t=arguments[0],e=arguments[1];this.initialVertices=new ArrayList(t),this.tolerance=e,this.kdt=new KdTree(e)}function DelaunayTriangulationBuilder(){this.siteCoords=null,this.tolerance=0,this.subdiv=null}function ConformingDelaunayTriangulationBuilder(){this.siteCoords=null,this.constraintLines=null,this.tolerance=0,this.subdiv=null,this.constraintVertexMap=new TreeMap}function VoronoiDiagramBuilder(){this.siteCoords=null,this.tolerance=0,this.subdiv=null,this.clipEnv=null,this.diagramEnv=null}function GeometryCollectionMapper(){this.mapOp=null;var t=arguments[0];this.mapOp=t}function RectangleContains(){this.rectEnv=null;var t=arguments[0];this.rectEnv=t.getEnvelopeInternal()}function RectangleLineIntersector(){this.li=new RobustLineIntersector,this.rectEnv=null,this.diagUp0=null,this.diagUp1=null,this.diagDown0=null,this.diagDown1=null;var t=arguments[0];this.rectEnv=t,this.diagUp0=new Coordinate(t.getMinX(),t.getMinY()),this.diagUp1=new Coordinate(t.getMaxX(),t.getMaxY()),this.diagDown0=new Coordinate(t.getMinX(),t.getMaxY()),this.diagDown1=new Coordinate(t.getMaxX(),t.getMinY())}function ShortCircuitedGeometryVisitor(){this._isDone=!1}function RectangleIntersects(){this.rectangle=null,this.rectEnv=null;var t=arguments[0];this.rectangle=t,this.rectEnv=t.getEnvelopeInternal()}function EnvelopeIntersectsVisitor(){ShortCircuitedGeometryVisitor.apply(this),this.rectEnv=null,this._intersects=!1;var t=arguments[0];this.rectEnv=t}function GeometryContainsPointVisitor(){ShortCircuitedGeometryVisitor.apply(this),this.rectSeq=null,this.rectEnv=null,this._containsPoint=!1;var t=arguments[0];this.rectSeq=t.getExteriorRing().getCoordinateSequence(),this.rectEnv=t.getEnvelopeInternal()}function RectangleIntersectsSegmentVisitor(){ShortCircuitedGeometryVisitor.apply(this),this.rectEnv=null,this.rectIntersector=null,this.hasIntersection=!1,this.p0=new Coordinate,this.p1=new Coordinate;var t=arguments[0];this.rectEnv=t.getEnvelopeInternal(),this.rectIntersector=new RectangleLineIntersector(this.rectEnv)}function patch(){var t={union:function(){if(0===arguments.length)return UnaryUnionOp.union(this);if(1===arguments.length){var t=arguments[0];if(this.isEmpty()||t.isEmpty()){if(this.isEmpty()&&t.isEmpty())return OverlayOp.createEmptyResult(OverlayOp.UNION,this,t,this.factory);if(this.isEmpty())return t.copy();if(t.isEmpty())return this.copy()}return this.checkNotGeometryCollection(this),this.checkNotGeometryCollection(t),SnapIfNeededOverlayOp.overlayOp(this,t,OverlayOp.UNION)}},isValid:function(){return IsValidOp.isValid(this)},intersection:function(t){if(this.isEmpty()||t.isEmpty())return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION,this,t,this.factory);if(this.isGeometryCollection()){var e=t;return GeometryCollectionMapper.map(this,{interfaces_:function(){return[MapOp]},map:function(t){return t.intersection(e)}})}return this.checkNotGeometryCollection(this),this.checkNotGeometryCollection(t),SnapIfNeededOverlayOp.overlayOp(this,t,OverlayOp.INTERSECTION)},intersects:function(t){return this.getEnvelopeInternal().intersects(t.getEnvelopeInternal())?this.isRectangle()?RectangleIntersects.intersects(this,t):t.isRectangle()?RectangleIntersects.intersects(t,this):this.relate(t).isIntersects():!1},buffer:function(){if(1===arguments.length){var t=arguments[0];return BufferOp.bufferOp(this,t)}if(2===arguments.length){var t=arguments[0],e=arguments[1];return BufferOp.bufferOp(this,t,e)}if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];return BufferOp.bufferOp(this,t,e,n)}},convexHull:function(){return new ConvexHull(this).getConvexHull()},relate:function(){for(var t=arguments.length,e=Array(t),n=0;t>n;n++)e[n]=arguments[n];if(1===e.length){var i=e[0];return this.checkNotGeometryCollection(this),this.checkNotGeometryCollection(i),RelateOp$1.relate(this,i)}if(2===e.length){var i=e[0],r=e[1];return this.relate(i).matches(r)}},getCentroid:function(){if(this.isEmpty())return this.factory.createPoint();var t=Centroid.getCentroid(this);return this.createPointFromInternalCoord(t,this)},getInteriorPoint:function(){if(this.isEmpty())return this.factory.createPoint();var t=null,e=this.getDimension();if(0===e){var n=new InteriorPointPoint(this);t=n.getInteriorPoint()}else if(1===e){var n=new InteriorPointLine(this);t=n.getInteriorPoint()}else{var n=new InteriorPointArea(this);t=n.getInteriorPoint()}return this.createPointFromInternalCoord(t,this)},symDifference:function(t){if(this.isEmpty()||t.isEmpty()){if(this.isEmpty()&&t.isEmpty())return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE,this,t,this.factory);if(this.isEmpty())return t.copy();if(t.isEmpty())return this.copy()}return this.checkNotGeometryCollection(this),this.checkNotGeometryCollection(t),SnapIfNeededOverlayOp.overlayOp(this,t,OverlayOp.SYMDIFFERENCE)},createPointFromInternalCoord:function(t,e){return e.getPrecisionModel().makePrecise(t),e.getFactory().createPoint(t)},disjoint:function(t){return!this.intersects(t)},toText:function(){var t=new WKTWriter;return t.write(this)},contains:function(t){return this.getEnvelopeInternal().contains(t.getEnvelopeInternal())?this.isRectangle()?RectangleContains.contains(this,t):this.relate(t).isContains():!1},difference:function(t){return this.isEmpty()?OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE,this,t,this.factory):t.isEmpty()?this.copy():(this.checkNotGeometryCollection(this),this.checkNotGeometryCollection(t),SnapIfNeededOverlayOp.overlayOp(this,t,OverlayOp.DIFFERENCE))},isSimple:function(){var t=new IsSimpleOp(this);return t.isSimple()},isWithinDistance:function(t,e){var n=this.getEnvelopeInternal().distance(t.getEnvelopeInternal());return n>e?!1:DistanceOp.isWithinDistance(this,t,e)},distance:function(t){return DistanceOp.distance(this,t)},isEquivalentClass:function(t){return this.getClass()===t.getClass()}};for(var e in t)Geometry.prototype[e]=t[e]}if(require("core-js/shim"),require("babel-regenerator-runtime"),global._babelPolyfill)throw new Error("only one instance of babel-polyfill is allowed");global._babelPolyfill=!0,extend(NumberUtil.prototype,{interfaces_:function(){return[]},getClass:function(){return NumberUtil}}),NumberUtil.equalsWithTolerance=function(t,e,n){return Math.abs(t-e)<=n},Double.isNaN=function(t){return Number.isNaN(t)},Double.doubleToLongBits=function(t){return t},Double.longBitsToDouble=function(t){return t},Double.isInfinite=function(t){return!Number.isFinite(t)},Double.MAX_VALUE=Number.MAX_VALUE,inherits(AssertionFailedException,RuntimeException),extend(AssertionFailedException.prototype,{interfaces_:function(){return[]},getClass:function(){return AssertionFailedException}}),extend(Assert.prototype,{interfaces_:function(){return[]},getClass:function(){return Assert}}),Assert.shouldNeverReachHere=function(){if(0===arguments.length)Assert.shouldNeverReachHere(null);else if(1===arguments.length){var t=arguments[0];throw new AssertionFailedException("Should never reach here"+(null!==t?": "+t:""))}},Assert.isTrue=function(){if(1===arguments.length){var t=arguments[0];Assert.isTrue(t,null)}else if(2===arguments.length){var t=arguments[0],e=arguments[1];if(!t)throw null===e?new AssertionFailedException:new AssertionFailedException(e)}},Assert.equals=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];Assert.equals(t,e,null)}else if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];if(!e.equals(t))throw new AssertionFailedException("Expected "+t+" but encountered "+e+(null!==n?": "+n:""))}},extend(Coordinate.prototype,{setOrdinate:function(t,e){switch(t){case Coordinate.X:this.x=e;break;case Coordinate.Y:this.y=e;break;case Coordinate.Z:this.z=e;break;default:throw new IllegalArgumentException("Invalid ordinate index: "+t)}},equals2D:function(){if(1===arguments.length){var t=arguments[0];return this.x!==t.x?!1:this.y===t.y}if(2===arguments.length){var e=arguments[0],n=arguments[1];return NumberUtil.equalsWithTolerance(this.x,e.x,n)?!!NumberUtil.equalsWithTolerance(this.y,e.y,n):!1}},getOrdinate:function(t){switch(t){case Coordinate.X:return this.x;case Coordinate.Y:return this.y;case Coordinate.Z:return this.z}throw new IllegalArgumentException("Invalid ordinate index: "+t)},equals3D:function(t){return this.x===t.x&&this.y===t.y&&(this.z===t.z||Double.isNaN(this.z)&&Double.isNaN(t.z))},equals:function(t){return t instanceof Coordinate?this.equals2D(t):!1},equalInZ:function(t,e){return NumberUtil.equalsWithTolerance(this.z,t.z,e)},compareTo:function(t){var e=t;return this.x<e.x?-1:this.x>e.x?1:this.y<e.y?-1:this.y>e.y?1:0},clone:function(){try{var t=null;return t}catch(t){if(t instanceof CloneNotSupportedException)return Assert.shouldNeverReachHere("this shouldn't happen because this class is Cloneable"),null;throw t}finally{}},copy:function(){return new Coordinate(this)},toString:function(){return"("+this.x+", "+this.y+", "+this.z+")"},distance3D:function(t){var e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return Math.sqrt(e*e+n*n+i*i)},distance:function(t){var e=this.x-t.x,n=this.y-t.y;return Math.sqrt(e*e+n*n)},hashCode:function(){var t=17;return t=37*t+Coordinate.hashCode(this.x),t=37*t+Coordinate.hashCode(this.y)},setCoordinate:function(t){this.x=t.x,this.y=t.y,this.z=t.z},interfaces_:function(){return[Comparable,Clonable,Serializable]},getClass:function(){return Coordinate}}),Coordinate.hashCode=function(){
if(1===arguments.length){var t=arguments[0],e=Double.doubleToLongBits(t);return Math.trunc(e^e>>>32)}},extend(DimensionalComparator.prototype,{compare:function(t,e){var n=t,i=e,r=DimensionalComparator.compare(n.x,i.x);if(0!==r)return r;var o=DimensionalComparator.compare(n.y,i.y);if(0!==o)return o;if(this.dimensionsToTest<=2)return 0;var s=DimensionalComparator.compare(n.z,i.z);return s},interfaces_:function(){return[Comparator]},getClass:function(){return DimensionalComparator}}),DimensionalComparator.compare=function(t,e){return e>t?-1:t>e?1:Double.isNaN(t)?Double.isNaN(e)?0:-1:Double.isNaN(e)?1:0},Coordinate.DimensionalComparator=DimensionalComparator,Coordinate.serialVersionUID=0x5cbf2c235c7e5800,Coordinate.NULL_ORDINATE=Double.NaN,Coordinate.X=0,Coordinate.Y=1,Coordinate.Z=2,extend(Envelope.prototype,{getArea:function(){return this.getWidth()*this.getHeight()},equals:function(t){if(!(t instanceof Envelope))return!1;var e=t;return this.isNull()?e.isNull():this.maxx===e.getMaxX()&&this.maxy===e.getMaxY()&&this.minx===e.getMinX()&&this.miny===e.getMinY()},intersection:function(t){if(this.isNull()||t.isNull()||!this.intersects(t))return new Envelope;var e=this.minx>t.minx?this.minx:t.minx,n=this.miny>t.miny?this.miny:t.miny,i=this.maxx<t.maxx?this.maxx:t.maxx,r=this.maxy<t.maxy?this.maxy:t.maxy;return new Envelope(e,i,n,r)},isNull:function(){return this.maxx<this.minx},getMaxX:function(){return this.maxx},covers:function(){if(1===arguments.length){if(arguments[0]instanceof Coordinate){var t=arguments[0];return this.covers(t.x,t.y)}if(arguments[0]instanceof Envelope){var e=arguments[0];return this.isNull()||e.isNull()?!1:e.getMinX()>=this.minx&&e.getMaxX()<=this.maxx&&e.getMinY()>=this.miny&&e.getMaxY()<=this.maxy}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return this.isNull()?!1:n>=this.minx&&n<=this.maxx&&i>=this.miny&&i<=this.maxy}},intersects:function(){if(1===arguments.length){if(arguments[0]instanceof Envelope){var t=arguments[0];return this.isNull()||t.isNull()?!1:!(t.minx>this.maxx||t.maxx<this.minx||t.miny>this.maxy||t.maxy<this.miny)}if(arguments[0]instanceof Coordinate){var e=arguments[0];return this.intersects(e.x,e.y)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return this.isNull()?!1:!(n>this.maxx||n<this.minx||i>this.maxy||i<this.miny)}},getMinY:function(){return this.miny},getMinX:function(){return this.minx},expandToInclude:function(){if(1===arguments.length){if(arguments[0]instanceof Coordinate){var t=arguments[0];this.expandToInclude(t.x,t.y)}else if(arguments[0]instanceof Envelope){var e=arguments[0];if(e.isNull())return null;this.isNull()?(this.minx=e.getMinX(),this.maxx=e.getMaxX(),this.miny=e.getMinY(),this.maxy=e.getMaxY()):(e.minx<this.minx&&(this.minx=e.minx),e.maxx>this.maxx&&(this.maxx=e.maxx),e.miny<this.miny&&(this.miny=e.miny),e.maxy>this.maxy&&(this.maxy=e.maxy))}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.isNull()?(this.minx=n,this.maxx=n,this.miny=i,this.maxy=i):(n<this.minx&&(this.minx=n),n>this.maxx&&(this.maxx=n),i<this.miny&&(this.miny=i),i>this.maxy&&(this.maxy=i))}},minExtent:function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return e>t?t:e},getWidth:function(){return this.isNull()?0:this.maxx-this.minx},compareTo:function(t){var e=t;return this.isNull()?e.isNull()?0:-1:e.isNull()?1:this.minx<e.minx?-1:this.minx>e.minx?1:this.miny<e.miny?-1:this.miny>e.miny?1:this.maxx<e.maxx?-1:this.maxx>e.maxx?1:this.maxy<e.maxy?-1:this.maxy>e.maxy?1:0},translate:function(t,e){return this.isNull()?null:void this.init(this.getMinX()+t,this.getMaxX()+t,this.getMinY()+e,this.getMaxY()+e)},toString:function(){return"Env["+this.minx+" : "+this.maxx+", "+this.miny+" : "+this.maxy+"]"},setToNull:function(){this.minx=0,this.maxx=-1,this.miny=0,this.maxy=-1},getHeight:function(){return this.isNull()?0:this.maxy-this.miny},maxExtent:function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return t>e?t:e},expandBy:function(){if(1===arguments.length){var t=arguments[0];this.expandBy(t,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this.isNull())return null;this.minx-=e,this.maxx+=e,this.miny-=n,this.maxy+=n,(this.minx>this.maxx||this.miny>this.maxy)&&this.setToNull()}},contains:function(){if(1===arguments.length){if(arguments[0]instanceof Envelope){var t=arguments[0];return this.covers(t)}if(arguments[0]instanceof Coordinate){var e=arguments[0];return this.covers(e)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return this.covers(n,i)}},centre:function(){return this.isNull()?null:new Coordinate((this.getMinX()+this.getMaxX())/2,(this.getMinY()+this.getMaxY())/2)},init:function(){if(0===arguments.length)this.setToNull();else if(1===arguments.length){if(arguments[0]instanceof Coordinate){var t=arguments[0];this.init(t.x,t.x,t.y,t.y)}else if(arguments[0]instanceof Envelope){var e=arguments[0];this.minx=e.minx,this.maxx=e.maxx,this.miny=e.miny,this.maxy=e.maxy}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.init(n.x,i.x,n.y,i.y)}else if(4===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];o>r?(this.minx=r,this.maxx=o):(this.minx=o,this.maxx=r),a>s?(this.miny=s,this.maxy=a):(this.miny=a,this.maxy=s)}},getMaxY:function(){return this.maxy},distance:function(t){if(this.intersects(t))return 0;var e=0;this.maxx<t.minx?e=t.minx-this.maxx:this.minx>t.maxx&&(e=this.minx-t.maxx);var n=0;return this.maxy<t.miny?n=t.miny-this.maxy:this.miny>t.maxy&&(n=this.miny-t.maxy),0===e?n:0===n?e:Math.sqrt(e*e+n*n)},hashCode:function(){var t=17;return t=37*t+Coordinate.hashCode(this.minx),t=37*t+Coordinate.hashCode(this.maxx),t=37*t+Coordinate.hashCode(this.miny),t=37*t+Coordinate.hashCode(this.maxy)},interfaces_:function(){return[Comparable,Serializable]},getClass:function(){return Envelope}}),Envelope.intersects=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];return n.x>=(t.x<e.x?t.x:e.x)&&n.x<=(t.x>e.x?t.x:e.x)&&n.y>=(t.y<e.y?t.y:e.y)&&n.y<=(t.y>e.y?t.y:e.y)}if(4===arguments.length){var t=arguments[0],e=arguments[1],i=arguments[2],r=arguments[3],o=Math.min(i.x,r.x),s=Math.max(i.x,r.x),a=Math.min(t.x,e.x),l=Math.max(t.x,e.x);return a>s?!1:o>l?!1:(o=Math.min(i.y,r.y),s=Math.max(i.y,r.y),a=Math.min(t.y,e.y),l=Math.max(t.y,e.y),a>s?!1:!(o>l))}},Envelope.serialVersionUID=0x51845cd552189800,inherits(NotRepresentableException,Exception),extend(NotRepresentableException.prototype,{interfaces_:function(){return[]},getClass:function(){return NotRepresentableException}}),extend(Location.prototype,{interfaces_:function(){return[]},getClass:function(){return Location}}),Location.toLocationSymbol=function(t){switch(t){case Location.EXTERIOR:return"e";case Location.BOUNDARY:return"b";case Location.INTERIOR:return"i";case Location.NONE:return"-"}throw new IllegalArgumentException("Unknown location value: "+t)},Location.INTERIOR=0,Location.BOUNDARY=1,Location.EXTERIOR=2,Location.NONE=-1,extend(MathUtil.prototype,{interfaces_:function(){return[]},getClass:function(){return MathUtil}}),MathUtil.log10=function(t){var e=Math.log(t);return Double.isInfinite(e)?e:Double.isNaN(e)?e:e/MathUtil.LOG_10},MathUtil.min=function(t,e,n,i){var r=t;return r>e&&(r=e),r>n&&(r=n),r>i&&(r=i),r},MathUtil.clamp=function(){if("number"==typeof arguments[2]&&"number"==typeof arguments[0]&&"number"==typeof arguments[1]){var t=arguments[0],e=arguments[1],n=arguments[2];return e>t?e:t>n?n:t}if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var t=arguments[0],e=arguments[1],n=arguments[2];return e>t?e:t>n?n:t}},MathUtil.wrap=function(t,e){return 0>t?e- -t%e:t%e},MathUtil.max=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=t;return e>i&&(i=e),n>i&&(i=n),i}if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],r=arguments[3],i=t;return e>i&&(i=e),n>i&&(i=n),r>i&&(i=r),i}},MathUtil.average=function(t,e){return(t+e)/2},MathUtil.LOG_10=Math.log(10),StringBuffer.prototype.append=function(t){this.str+=t},StringBuffer.prototype.setCharAt=function(t,e){return this.str.substr(0,t)+e+this.str.substr(t+1)},StringBuffer.prototype.toString=function(t){return this.str},Integer.prototype.intValue=function(){return this.value},Integer.prototype.compareTo=function(t){return this.value<t?-1:this.value>t?1:0},Integer.isNaN=function(t){return Number.isNaN(t)},Character.isWhitespace=function(t){return 32>=t&&t>=0||127==t},Character.toUpperCase=function(t){return t.toUpperCase()},extend(DD.prototype,{le:function(t){return this.hi<t.hi||this.hi===t.hi&&this.lo<=t.lo},extractSignificantDigits:function(t,e){var n=this.abs(),i=DD.magnitude(n.hi),r=DD.TEN.pow(i);n=n.divide(r),n.gt(DD.TEN)?(n=n.divide(DD.TEN),i+=1):n.lt(DD.ONE)&&(n=n.multiply(DD.TEN),i-=1);for(var o=i+1,s=new StringBuffer,a=DD.MAX_PRINT_DIGITS-1,l=0;a>=l;l++){t&&l===o&&s.append(".");var u=Math.trunc(n.hi);if(0>u)break;var c=!1,h=0;u>9?(c=!0,h="9"):h="0"+u,s.append(h),n=n.subtract(DD.valueOf(u)).multiply(DD.TEN),c&&n.selfAdd(DD.TEN);var d=!0,g=DD.magnitude(n.hi);if(0>g&&Math.abs(g)>=a-l&&(d=!1),!d)break}return e[0]=i,s.toString()},sqr:function(){return this.multiply(this)},doubleValue:function(){return this.hi+this.lo},subtract:function(){if(arguments[0]instanceof DD){var t=arguments[0];return this.add(t.negate())}if("number"==typeof arguments[0]){var t=arguments[0];return this.add(-t)}},equals:function(){if(1===arguments.length){var t=arguments[0];return this.hi===t.hi&&this.lo===t.lo}},isZero:function(){return 0===this.hi&&0===this.lo},selfSubtract:function(){if(arguments[0]instanceof DD){var t=arguments[0];return this.isNaN()?this:this.selfAdd(-t.hi,-t.lo)}if("number"==typeof arguments[0]){var t=arguments[0];return this.isNaN()?this:this.selfAdd(-t,0)}},getSpecialNumberString:function(){return this.isZero()?"0.0":this.isNaN()?"NaN ":null},min:function(t){return this.le(t)?this:t},selfDivide:function(){if(1===arguments.length){if(arguments[0]instanceof DD){var t=arguments[0];return this.selfDivide(t.hi,t.lo)}if("number"==typeof arguments[0]){var t=arguments[0];return this.selfDivide(t,0)}}else if(2===arguments.length){var e=arguments[0],n=arguments[1],i=null,r=null,o=null,s=null,a=null,l=null,u=null,c=null;return a=this.hi/e,l=DD.SPLIT*a,i=l-a,c=DD.SPLIT*e,i=l-i,r=a-i,o=c-e,u=a*e,o=c-o,s=e-o,c=i*o-u+i*s+r*o+r*s,l=(this.hi-u-c+this.lo-a*n)/e,c=a+l,this.hi=c,this.lo=a-c+l,this}},dump:function(){return"DD<"+this.hi+", "+this.lo+">"},divide:function(){if(arguments[0]instanceof DD){var t=arguments[0],e=null,n=null,i=null,r=null,o=null,s=null,a=null,l=null;o=this.hi/t.hi,s=DD.SPLIT*o,e=s-o,l=DD.SPLIT*t.hi,e=s-e,n=o-e,i=l-t.hi,a=o*t.hi,i=l-i,r=t.hi-i,l=e*i-a+e*r+n*i+n*r,s=(this.hi-a-l+this.lo-o*t.lo)/t.hi,l=o+s;var u=l,c=o-l+s;return new DD(u,c)}if("number"==typeof arguments[0]){var t=arguments[0];return Double.isNaN(t)?DD.createNaN():DD.copy(this).selfDivide(t,0)}},ge:function(t){return this.hi>t.hi||this.hi===t.hi&&this.lo>=t.lo},pow:function(t){if(0===t)return DD.valueOf(1);var e=new DD(this),n=DD.valueOf(1),i=Math.abs(t);if(i>1)for(;i>0;)i%2===1&&n.selfMultiply(e),i/=2,i>0&&(e=e.sqr());else n=e;return 0>t?n.reciprocal():n},ceil:function(){if(this.isNaN())return DD.NaN;var t=Math.ceil(this.hi),e=0;return t===this.hi&&(e=Math.ceil(this.lo)),new DD(t,e)},compareTo:function(t){var e=t;return this.hi<e.hi?-1:this.hi>e.hi?1:this.lo<e.lo?-1:this.lo>e.lo?1:0},rint:function(){if(this.isNaN())return this;var t=this.add(.5);return t.floor()},setValue:function(){if(arguments[0]instanceof DD){var t=arguments[0];return this.init(t),this}if("number"==typeof arguments[0]){var t=arguments[0];return this.init(t),this}},max:function(t){return this.ge(t)?this:t},sqrt:function(){if(this.isZero())return DD.valueOf(0);if(this.isNegative())return DD.NaN;var t=1/Math.sqrt(this.hi),e=this.hi*t,n=DD.valueOf(e),i=this.subtract(n.sqr()),r=i.hi*(.5*t);return n.add(r)},selfAdd:function(){if(1===arguments.length){if(arguments[0]instanceof DD){var t=arguments[0];return this.selfAdd(t.hi,t.lo)}if("number"==typeof arguments[0]){var t=arguments[0],e=null,n=null,i=null,r=null,o=null,s=null;return i=this.hi+t,o=i-this.hi,r=i-o,r=t-o+(this.hi-r),s=r+this.lo,e=i+s,n=s+(i-e),this.hi=e+n,this.lo=n+(e-this.hi),this}}else if(2===arguments.length){var a=arguments[0],l=arguments[1],e=null,n=null,u=null,c=null,i=null,r=null,o=null,s=null;i=this.hi+a,u=this.lo+l,o=i-this.hi,s=u-this.lo,r=i-o,c=u-s,r=a-o+(this.hi-r),c=l-s+(this.lo-c),o=r+u,e=i+o,n=o+(i-e),o=c+n;var h=e+o,d=o+(e-h);return this.hi=h,this.lo=d,this}},selfMultiply:function(){if(1===arguments.length){if(arguments[0]instanceof DD){var t=arguments[0];return this.selfMultiply(t.hi,t.lo)}if("number"==typeof arguments[0]){var t=arguments[0];return this.selfMultiply(t,0)}}else if(2===arguments.length){var e=arguments[0],n=arguments[1],i=null,r=null,o=null,s=null,a=null,l=null;a=DD.SPLIT*this.hi,i=a-this.hi,l=DD.SPLIT*e,i=a-i,r=this.hi-i,o=l-e,a=this.hi*e,o=l-o,s=e-o,l=i*o-a+i*s+r*o+r*s+(this.hi*n+this.lo*e);var u=a+l;i=a-u;var c=l+i;return this.hi=u,this.lo=c,this}},selfSqr:function(){return this.selfMultiply(this)},floor:function(){if(this.isNaN())return DD.NaN;var t=Math.floor(this.hi),e=0;return t===this.hi&&(e=Math.floor(this.lo)),new DD(t,e)},negate:function(){return this.isNaN()?this:new DD(-this.hi,-this.lo)},clone:function(){try{return null}catch(t){if(t instanceof CloneNotSupportedException)return null;throw t}finally{}},multiply:function(){if(arguments[0]instanceof DD){var t=arguments[0];return t.isNaN()?DD.createNaN():DD.copy(this).selfMultiply(t)}if("number"==typeof arguments[0]){var t=arguments[0];return Double.isNaN(t)?DD.createNaN():DD.copy(this).selfMultiply(t,0)}},isNaN:function(){return Double.isNaN(this.hi)},intValue:function(){return Math.trunc(this.hi)},toString:function(){var t=DD.magnitude(this.hi);return t>=-3&&20>=t?this.toStandardNotation():this.toSciNotation()},toStandardNotation:function(){var t=this.getSpecialNumberString();if(null!==t)return t;var e=new Array(1).fill(null),n=this.extractSignificantDigits(!0,e),i=e[0]+1,r=n;if("."===n.charAt(0))r="0"+n;else if(0>i)r="0."+DD.stringOfChar("0",-i)+n;else if(-1===n.indexOf(".")){var o=i-n.length,s=DD.stringOfChar("0",o);r=n+s+".0"}return this.isNegative()?"-"+r:r},reciprocal:function(){var t=null,e=null,n=null,i=null,r=null,o=null,s=null,a=null;r=1/this.hi,o=DD.SPLIT*r,t=o-r,a=DD.SPLIT*this.hi,t=o-t,e=r-t,n=a-this.hi,s=r*this.hi,n=a-n,i=this.hi-n,a=t*n-s+t*i+e*n+e*i,o=(1-s-a-r*this.lo)/this.hi;var l=r+o,u=r-l+o;return new DD(l,u)},toSciNotation:function(){if(this.isZero())return DD.SCI_NOT_ZERO;var t=this.getSpecialNumberString();if(null!==t)return t;var e=new Array(1).fill(null),n=this.extractSignificantDigits(!1,e),i=DD.SCI_NOT_EXPONENT_CHAR+e[0];if("0"===n.charAt(0))throw new IllegalStateException("Found leading zero: "+n);var r="";n.length>1&&(r=n.substring(1));var o=n.charAt(0)+"."+r;return this.isNegative()?"-"+o+i:o+i},abs:function(){return this.isNaN()?DD.NaN:this.isNegative()?this.negate():new DD(this)},isPositive:function(){return this.hi>0||0===this.hi&&this.lo>0},lt:function(t){return this.hi<t.hi||this.hi===t.hi&&this.lo<t.lo},add:function(){if(arguments[0]instanceof DD){var t=arguments[0];return DD.copy(this).selfAdd(t)}if("number"==typeof arguments[0]){var t=arguments[0];return DD.copy(this).selfAdd(t)}},init:function(){if(1===arguments.length){if("number"==typeof arguments[0]){var t=arguments[0];this.hi=t,this.lo=0}else if(arguments[0]instanceof DD){var e=arguments[0];this.hi=e.hi,this.lo=e.lo}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.hi=n,this.lo=i}},gt:function(t){return this.hi>t.hi||this.hi===t.hi&&this.lo>t.lo},isNegative:function(){return this.hi<0||0===this.hi&&this.lo<0},trunc:function(){return this.isNaN()?DD.NaN:this.isPositive()?this.floor():this.ceil()},signum:function(){return this.hi>0?1:this.hi<0?-1:this.lo>0?1:this.lo<0?-1:0},interfaces_:function(){return[Serializable,Comparable,Clonable]},getClass:function(){return DD}}),DD.sqr=function(t){return DD.valueOf(t).selfMultiply(t)},DD.valueOf=function(){if("string"==typeof arguments[0]){var t=arguments[0];return DD.parse(t)}if("number"==typeof arguments[0]){var e=arguments[0];return new DD(e)}},DD.sqrt=function(t){return DD.valueOf(t).sqrt()},DD.parse=function(t){for(var e=0,n=t.length;Character.isWhitespace(t.charAt(e));)e++;var i=!1;if(n>e){var r=t.charAt(e);"-"!==r&&"+"!==r||(e++,"-"===r&&(i=!0))}for(var o=new DD,s=0,a=0,l=0;;){if(e>=n)break;var u=t.charAt(e);if(e++,Character.isDigit(u)){var c=u-"0";o.selfMultiply(DD.TEN),o.selfAdd(c),s++}else{if("."!==u){if("e"===u||"E"===u){var h=t.substring(e);try{l=Integer.parseInt(h)}catch(e){throw e instanceof NumberFormatException?new NumberFormatException("Invalid exponent "+h+" in string "+t):e}finally{}break}throw new NumberFormatException("Unexpected character '"+u+"' at position "+e+" in string "+t)}a=s}}var d=o,g=s-a-l;if(0===g)d=o;else if(g>0){var f=DD.TEN.pow(g);d=o.divide(f)}else if(0>g){var f=DD.TEN.pow(-g);d=o.multiply(f)}return i?d.negate():d},DD.createNaN=function(){return new DD(Double.NaN,Double.NaN)},DD.copy=function(t){return new DD(t)},DD.magnitude=function(t){var e=Math.abs(t),n=Math.log(e)/Math.log(10),i=Math.trunc(Math.floor(n)),r=Math.pow(10,i);return e>=10*r&&(i+=1),i},DD.stringOfChar=function(t,e){for(var n=new StringBuffer,i=0;e>i;i++)n.append(t);return n.toString()},DD.PI=new DD(3.141592653589793,1.2246467991473532e-16),DD.TWO_PI=new DD(6.283185307179586,2.4492935982947064e-16),DD.PI_2=new DD(1.5707963267948966,6.123233995736766e-17),DD.E=new DD(2.718281828459045,1.4456468917292502e-16),DD.NaN=new DD(Double.NaN,Double.NaN),DD.EPS=1.23259516440783e-32,DD.SPLIT=134217729,DD.MAX_PRINT_DIGITS=32,DD.TEN=DD.valueOf(10),DD.ONE=DD.valueOf(1),DD.SCI_NOT_EXPONENT_CHAR="E",DD.SCI_NOT_ZERO="0.0E0",extend(CGAlgorithmsDD.prototype,{interfaces_:function(){return[]},getClass:function(){return CGAlgorithmsDD}}),CGAlgorithmsDD.orientationIndex=function(t,e,n){var i=CGAlgorithmsDD.orientationIndexFilter(t,e,n);if(1>=i)return i;var r=DD.valueOf(e.x).selfAdd(-t.x),o=DD.valueOf(e.y).selfAdd(-t.y),s=DD.valueOf(n.x).selfAdd(-e.x),a=DD.valueOf(n.y).selfAdd(-e.y);return r.selfMultiply(a).selfSubtract(o.selfMultiply(s)).signum()},CGAlgorithmsDD.signOfDet2x2=function(t,e,n,i){var r=t.multiply(i).selfSubtract(e.multiply(n));return r.signum()},CGAlgorithmsDD.intersection=function(t,e,n,i){var r=DD.valueOf(i.y).selfSubtract(n.y).selfMultiply(DD.valueOf(e.x).selfSubtract(t.x)),o=DD.valueOf(i.x).selfSubtract(n.x).selfMultiply(DD.valueOf(e.y).selfSubtract(t.y)),s=r.subtract(o),a=DD.valueOf(i.x).selfSubtract(n.x).selfMultiply(DD.valueOf(t.y).selfSubtract(n.y)),l=DD.valueOf(i.y).selfSubtract(n.y).selfMultiply(DD.valueOf(t.x).selfSubtract(n.x)),u=a.subtract(l),c=u.selfDivide(s).doubleValue(),h=DD.valueOf(t.x).selfAdd(DD.valueOf(e.x).selfSubtract(t.x).selfMultiply(c)).doubleValue(),d=DD.valueOf(e.x).selfSubtract(t.x).selfMultiply(DD.valueOf(t.y).selfSubtract(n.y)),g=DD.valueOf(e.y).selfSubtract(t.y).selfMultiply(DD.valueOf(t.x).selfSubtract(n.x)),f=d.subtract(g),p=f.selfDivide(s).doubleValue(),m=DD.valueOf(n.y).selfAdd(DD.valueOf(i.y).selfSubtract(n.y).selfMultiply(p)).doubleValue();return new Coordinate(h,m)},CGAlgorithmsDD.orientationIndexFilter=function(t,e,n){var i=null,r=(t.x-n.x)*(e.y-n.y),o=(t.y-n.y)*(e.x-n.x),s=r-o;if(r>0){if(0>=o)return CGAlgorithmsDD.signum(s);i=r+o}else{if(!(0>r))return CGAlgorithmsDD.signum(s);if(o>=0)return CGAlgorithmsDD.signum(s);i=-r-o}var a=CGAlgorithmsDD.DP_SAFE_EPSILON*i;return s>=a||-s>=a?CGAlgorithmsDD.signum(s):2},CGAlgorithmsDD.signum=function(t){return t>0?1:0>t?-1:0},CGAlgorithmsDD.DP_SAFE_EPSILON=1e-15,extend(CoordinateSequence.prototype,{setOrdinate:function(t,e,n){},size:function(){},getOrdinate:function(t,e){},getCoordinate:function(){if(1===arguments.length){arguments[0]}else if(2===arguments.length){arguments[0],arguments[1]}},getCoordinateCopy:function(t){},getDimension:function(){},getX:function(t){},clone:function(){},expandEnvelope:function(t){},copy:function(){},getY:function(t){},toCoordinateArray:function(){},interfaces_:function(){return[Clonable]},getClass:function(){return CoordinateSequence}}),CoordinateSequence.X=0,CoordinateSequence.Y=1,CoordinateSequence.Z=2,CoordinateSequence.M=3,System.arraycopy=function(t,e,n,i,r){for(var o=0,s=e;e+r>s;s++)n[i+o]=t[s],o++},System.getProperty=function(t){return{"line.separator":"\n"}[t]},extend(HCoordinate.prototype,{getY:function(){var t=this.y/this.w;if(Double.isNaN(t)||Double.isInfinite(t))throw new NotRepresentableException;return t},getX:function(){var t=this.x/this.w;if(Double.isNaN(t)||Double.isInfinite(t))throw new NotRepresentableException;return t},getCoordinate:function(){var t=new Coordinate;return t.x=this.getX(),t.y=this.getY(),t},interfaces_:function(){return[]},getClass:function(){return HCoordinate}}),HCoordinate.intersection=function(t,e,n,i){var r=t.y-e.y,o=e.x-t.x,s=t.x*e.y-e.x*t.y,a=n.y-i.y,l=i.x-n.x,u=n.x*i.y-i.x*n.y,c=o*u-l*s,h=a*s-r*u,d=r*l-a*o,g=c/d,f=h/d;if(Double.isNaN(g)||Double.isInfinite(g)||Double.isNaN(f)||Double.isInfinite(f))throw new NotRepresentableException;return new Coordinate(g,f)},extend(CoordinateSequenceFactory.prototype,{create:function(){if(1===arguments.length){if(arguments[0]instanceof Array){arguments[0]}else if(hasInterface(arguments[0],CoordinateSequence)){arguments[0]}}else if(2===arguments.length){arguments[0],arguments[1]}},interfaces_:function(){return[]},getClass:function(){return CoordinateSequenceFactory}}),extend(Geometry.prototype,{isGeometryCollection:function(){return this.getSortIndex()===Geometry.SORTINDEX_GEOMETRYCOLLECTION},getFactory:function(){return this.factory},getGeometryN:function(t){return this},getArea:function(){return 0},isRectangle:function(){return!1},equals:function(){if(1===arguments.length){if(arguments[0]instanceof Geometry){var t=arguments[0];return null===t?!1:this.equalsTopo(t)}if(arguments[0]instanceof Object){var e=arguments[0];if(!(e instanceof Geometry))return!1;var n=e;return this.equalsExact(n)}}},equalsExact:function(t){return this===t||this.equalsExact(t,0)},covers:function(t){return this.getEnvelopeInternal().covers(t.getEnvelopeInternal())?this.isRectangle()?!0:this.relate(t).isCovers():!1},touches:function(t){return this.getEnvelopeInternal().intersects(t.getEnvelopeInternal())?this.relate(t).isTouches(this.getDimension(),t.getDimension()):!1},geometryChanged:function(){this.apply(Geometry.geometryChangedFilter)},within:function(t){return t.contains(this)},geometryChangedAction:function(){this.envelope=null},equalsNorm:function(t){return null===t?!1:this.norm().equalsExact(t.norm())},getLength:function(){return 0},getNumGeometries:function(){return 1},compareTo:function(){if(1===arguments.length){var t=arguments[0],e=t;return this.getSortIndex()!==e.getSortIndex()?this.getSortIndex()-e.getSortIndex():this.isEmpty()&&e.isEmpty()?0:this.isEmpty()?-1:e.isEmpty()?1:this.compareToSameClass(t)}if(2===arguments.length){var t=arguments[0],n=arguments[1],e=t;return this.getSortIndex()!==e.getSortIndex()?this.getSortIndex()-e.getSortIndex():this.isEmpty()&&e.isEmpty()?0:this.isEmpty()?-1:e.isEmpty()?1:this.compareToSameClass(t,n)}},equalsTopo:function(t){return this.getEnvelopeInternal().equals(t.getEnvelopeInternal())?this.relate(t).isEquals(this.getDimension(),t.getDimension()):!1},coveredBy:function(t){return t.covers(this)},getUserData:function(){return this.userData},getSRID:function(){return this.SRID},getEnvelope:function(){return this.getFactory().toGeometry(this.getEnvelopeInternal())},checkNotGeometryCollection:function(t){if(this.getSortIndex()===Geometry.SORTINDEX_GEOMETRYCOLLECTION)throw new IllegalArgumentException("This method does not support GeometryCollection arguments")},equal:function(t,e,n){return 0===n?t.equals(e):t.distance(e)<=n},relate:function(){if(1===arguments.length){var t=arguments[0];return this.checkNotGeometryCollection(this),this.checkNotGeometryCollection(t),RelateOp.relate(this,t)}if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.relate(t).matches(e)}},overlaps:function(t){return this.getEnvelopeInternal().intersects(t.getEnvelopeInternal())?this.relate(t).isOverlaps(this.getDimension(),t.getDimension()):!1},norm:function(){var t=this.copy();return t.normalize(),t},getPrecisionModel:function(){return this.factory.getPrecisionModel()},getEnvelopeInternal:function(){return null===this.envelope&&(this.envelope=this.computeEnvelopeInternal()),new Envelope(this.envelope)},setSRID:function(t){this.SRID=t},setUserData:function(t){this.userData=t},toString:function(){return this.toText()},disjoint:function(t){return!this.intersects(t)},crosses:function(t){return this.getEnvelopeInternal().intersects(t.getEnvelopeInternal())?this.relate(t).isCrosses(this.getDimension(),t.getDimension()):!1},compare:function(t,e){for(var n=t.iterator(),i=e.iterator();n.hasNext()&&i.hasNext();){var r=n.next(),o=i.next(),s=r.compareTo(o);if(0!==s)return s}return n.hasNext()?1:i.hasNext()?-1:0},hashCode:function(){return this.getEnvelopeInternal().hashCode()},isGeometryCollectionOrDerived:function(){return this.getSortIndex()===Geometry.SORTINDEX_GEOMETRYCOLLECTION||this.getSortIndex()===Geometry.SORTINDEX_MULTIPOINT||this.getSortIndex()===Geometry.SORTINDEX_MULTILINESTRING||this.getSortIndex()===Geometry.SORTINDEX_MULTIPOLYGON},interfaces_:function(){return[Clonable,Comparable,Serializable]},getClass:function(){return Geometry}}),Geometry.hasNonEmptyElements=function(t){for(var e=0;e<t.length;e++)if(!t[e].isEmpty())return!0;return!1},Geometry.hasNullElements=function(t){for(var e=0;e<t.length;e++)if(null===t[e])return!0;return!1},Geometry.serialVersionUID=0x799ea46522854c00,Geometry.SORTINDEX_POINT=0,Geometry.SORTINDEX_MULTIPOINT=1,Geometry.SORTINDEX_LINESTRING=2,Geometry.SORTINDEX_LINEARRING=3,Geometry.SORTINDEX_MULTILINESTRING=4,Geometry.SORTINDEX_POLYGON=5,Geometry.SORTINDEX_MULTIPOLYGON=6,Geometry.SORTINDEX_GEOMETRYCOLLECTION=7,Geometry.geometryChangedFilter={interfaces_:function(){return[GeometryComponentFilter]},filter:function(t){t.geometryChangedAction()}},extend(CoordinateFilter.prototype,{filter:function(t){},interfaces_:function(){return[]},getClass:function(){return CoordinateFilter}}),extend(BoundaryNodeRule.prototype,{isInBoundary:function(t){},interfaces_:function(){return[]},getClass:function(){return BoundaryNodeRule}}),extend(Mod2BoundaryNodeRule.prototype,{isInBoundary:function(t){return t%2===1},interfaces_:function(){return[BoundaryNodeRule]},getClass:function(){return Mod2BoundaryNodeRule}}),extend(EndPointBoundaryNodeRule.prototype,{isInBoundary:function(t){return t>0},interfaces_:function(){return[BoundaryNodeRule]},getClass:function(){return EndPointBoundaryNodeRule}}),extend(MultiValentEndPointBoundaryNodeRule.prototype,{isInBoundary:function(t){return t>1},interfaces_:function(){return[BoundaryNodeRule]},getClass:function(){return MultiValentEndPointBoundaryNodeRule}}),extend(MonoValentEndPointBoundaryNodeRule.prototype,{isInBoundary:function(t){return 1===t},interfaces_:function(){return[BoundaryNodeRule]},getClass:function(){return MonoValentEndPointBoundaryNodeRule}}),BoundaryNodeRule.Mod2BoundaryNodeRule=Mod2BoundaryNodeRule,BoundaryNodeRule.EndPointBoundaryNodeRule=EndPointBoundaryNodeRule,BoundaryNodeRule.MultiValentEndPointBoundaryNodeRule=MultiValentEndPointBoundaryNodeRule,BoundaryNodeRule.MonoValentEndPointBoundaryNodeRule=MonoValentEndPointBoundaryNodeRule,BoundaryNodeRule.MOD2_BOUNDARY_RULE=new Mod2BoundaryNodeRule,BoundaryNodeRule.ENDPOINT_BOUNDARY_RULE=new EndPointBoundaryNodeRule,BoundaryNodeRule.MULTIVALENT_ENDPOINT_BOUNDARY_RULE=new MultiValentEndPointBoundaryNodeRule,BoundaryNodeRule.MONOVALENT_ENDPOINT_BOUNDARY_RULE=new MonoValentEndPointBoundaryNodeRule,BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE=BoundaryNodeRule.MOD2_BOUNDARY_RULE,Iterator.prototype.hasNext=function(){},Iterator.prototype.next=function(){},Iterator.prototype.remove=function(){},Collection.prototype.add=function(){},Collection.prototype.addAll=function(){},Collection.prototype.isEmpty=function(){},Collection.prototype.iterator=function(){},Collection.prototype.size=function(){},Collection.prototype.toArray=function(){},Collection.prototype.remove=function(){},IndexOutOfBoundsException$1.prototype=new Error,IndexOutOfBoundsException$1.prototype.name="IndexOutOfBoundsException",List.prototype=Object.create(Collection.prototype),List.prototype.constructor=List,List.prototype.get=function(){},List.prototype.set=function(){},List.prototype.isEmpty=function(){},NoSuchElementException.prototype=new Error,NoSuchElementException.prototype.name="NoSuchElementException",OperationNotSupported.prototype=new Error,OperationNotSupported.prototype.name="OperationNotSupported",ArrayList.prototype=Object.create(List.prototype),ArrayList.prototype.constructor=ArrayList,ArrayList.prototype.ensureCapacity=function(){},ArrayList.prototype.interfaces_=function(){return[List,Collection]},ArrayList.prototype.add=function(t){return this.array_.push(t),!0},ArrayList.prototype.clear=function(){this.array_=[]},ArrayList.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},ArrayList.prototype.set=function(t,e){var n=this.array_[t];return this.array_[t]=e,n},ArrayList.prototype.iterator=function(){return new Iterator_(this)},ArrayList.prototype.get=function(t){if(0>t||t>=this.size())throw new IndexOutOfBoundsException$1;return this.array_[t]},ArrayList.prototype.isEmpty=function(){return 0===this.array_.length},ArrayList.prototype.size=function(){return this.array_.length},ArrayList.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;n>e;e++)t.push(this.array_[e]);return t},ArrayList.prototype.remove=function(t){for(var e=!1,n=0,i=this.array_.length;i>n;n++)if(this.array_[n]===t){this.array_.splice(n,1),e=!0;break}return e};var Iterator_=function(t){this.arrayList_=t,this.position_=0};Iterator_.prototype.next=function(){if(this.position_===this.arrayList_.size())throw new NoSuchElementException;return this.arrayList_.get(this.position_++)},Iterator_.prototype.hasNext=function(){return this.position_<this.arrayList_.size()},Iterator_.prototype.set=function(t){return this.arrayList_.set(this.position_-1,t)},Iterator_.prototype.remove=function(){throw new OperationNotSupported},inherits(CoordinateList,ArrayList),extend(CoordinateList.prototype,{getCoordinate:function(t){return this.get(t)},addAll:function(){if(2===arguments.length){for(var t=arguments[0],e=arguments[1],n=!1,i=t.iterator();i.hasNext();)this.add(i.next(),e),n=!0;return n}return ArrayList.prototype.addAll.apply(this,arguments)},clone:function t(){for(var t=ArrayList.prototype.clone.call(this),e=0;e<this.size();e++)t.add(e,this.get(e).copy());return t},toCoordinateArray:function(){return this.toArray(CoordinateList.coordArrayType)},add:function(){if(1===arguments.length){var t=arguments[0];ArrayList.prototype.add.call(this,t)}else if(2===arguments.length){if(arguments[0]instanceof Array&&"boolean"==typeof arguments[1]){var t=arguments[0],e=arguments[1];return this.add(t,e,!0),!0}if(arguments[0]instanceof Coordinate&&"boolean"==typeof arguments[1]){var t=arguments[0],e=arguments[1];if(!e&&this.size()>=1){var n=this.get(this.size()-1);if(n.equals2D(t))return null}ArrayList.prototype.add.call(this,t)}else if(arguments[0]instanceof Object&&"boolean"==typeof arguments[1]){var i=arguments[0],e=arguments[1];return this.add(i,e),!0}}else if(3===arguments.length){if("boolean"==typeof arguments[2]&&arguments[0]instanceof Array&&"boolean"==typeof arguments[1]){var t=arguments[0],e=arguments[1],r=arguments[2];if(r)for(var o=0;o<t.length;o++)this.add(t[o],e);else for(var o=t.length-1;o>=0;o--)this.add(t[o],e);return!0}if("boolean"==typeof arguments[2]&&Number.isInteger(arguments[0])&&arguments[1]instanceof Coordinate){var s=arguments[0],t=arguments[1],e=arguments[2];
if(!e){var a=this.size();if(a>0){if(s>0){var l=this.get(s-1);if(l.equals2D(t))return null}if(a>s){var u=this.get(s);if(u.equals2D(t))return null}}}ArrayList.prototype.add.call(this,s,t)}}else if(4===arguments.length){var t=arguments[0],e=arguments[1],c=arguments[2],h=arguments[3],d=1;c>h&&(d=-1);for(var o=c;o!==h;o+=d)this.add(t[o],e);return!0}},closeRing:function(){this.size()>0&&this.add(new Coordinate(this.get(0)),!1)},interfaces_:function(){return[]},getClass:function(){return CoordinateList}}),CoordinateList.coordArrayType=new Array(0).fill(null),extend(CoordinateArrays.prototype,{interfaces_:function(){return[]},getClass:function(){return CoordinateArrays}}),CoordinateArrays.isRing=function(t){return t.length<4?!1:!!t[0].equals2D(t[t.length-1])},CoordinateArrays.ptNotInList=function(t,e){for(var n=0;n<t.length;n++){var i=t[n];if(CoordinateArrays.indexOf(i,e)<0)return i}return null},CoordinateArrays.scroll=function(t,e){var n=CoordinateArrays.indexOf(e,t);if(0>n)return null;var i=new Array(t.length).fill(null);System.arraycopy(t,n,i,0,t.length-n),System.arraycopy(t,0,i,t.length-n,n),System.arraycopy(i,0,t,0,t.length)},CoordinateArrays.equals=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(t===e)return!0;if(null===t||null===e)return!1;if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(!t[n].equals(e[n]))return!1;return!0}if(3===arguments.length){var t=arguments[0],e=arguments[1],i=arguments[2];if(t===e)return!0;if(null===t||null===e)return!1;if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(0!==i.compare(t[n],e[n]))return!1;return!0}},CoordinateArrays.intersection=function(t,e){for(var n=new CoordinateList,i=0;i<t.length;i++)e.intersects(t[i])&&n.add(t[i],!0);return n.toCoordinateArray()},CoordinateArrays.hasRepeatedPoints=function(t){for(var e=1;e<t.length;e++)if(t[e-1].equals(t[e]))return!0;return!1},CoordinateArrays.removeRepeatedPoints=function(t){if(!CoordinateArrays.hasRepeatedPoints(t))return t;var e=new CoordinateList(t,!1);return e.toCoordinateArray()},CoordinateArrays.reverse=function(t){for(var e=t.length-1,n=Math.trunc(e/2),i=0;n>=i;i++){var r=t[i];t[i]=t[e-i],t[e-i]=r}},CoordinateArrays.removeNull=function(t){for(var e=0,n=0;n<t.length;n++)null!==t[n]&&e++;var i=new Array(e).fill(null);if(0===e)return i;for(var r=0,n=0;n<t.length;n++)null!==t[n]&&(i[r++]=t[n]);return i},CoordinateArrays.copyDeep=function(){if(1===arguments.length){for(var t=arguments[0],e=new Array(t.length).fill(null),n=0;n<t.length;n++)e[n]=new Coordinate(t[n]);return e}if(5===arguments.length)for(var i=arguments[0],r=arguments[1],o=arguments[2],s=arguments[3],a=arguments[4],n=0;a>n;n++)o[s+n]=new Coordinate(i[r+n])},CoordinateArrays.isEqualReversed=function(t,e){for(var n=0;n<t.length;n++){var i=t[n],r=e[t.length-n-1];if(0!==i.compareTo(r))return!1}return!0},CoordinateArrays.envelope=function(t){for(var e=new Envelope,n=0;n<t.length;n++)e.expandToInclude(t[n]);return e},CoordinateArrays.toCoordinateArray=function(t){return t.toArray(CoordinateArrays.coordArrayType)},CoordinateArrays.atLeastNCoordinatesOrNothing=function(t,e){return e.length>=t?e:[]},CoordinateArrays.indexOf=function(t,e){for(var n=0;n<e.length;n++)if(t.equals(e[n]))return n;return-1},CoordinateArrays.increasingDirection=function(t){for(var e=0;e<Math.trunc(t.length/2);e++){var n=t.length-1-e,i=t[e].compareTo(t[n]);if(0!==i)return i}return 1},CoordinateArrays.compare=function(t,e){for(var n=0;n<t.length&&n<e.length;){var i=t[n].compareTo(e[n]);if(0!==i)return i;n++}return n<e.length?-1:n<t.length?1:0},CoordinateArrays.minCoordinate=function(t){for(var e=null,n=0;n<t.length;n++)(null===e||e.compareTo(t[n])>0)&&(e=t[n]);return e},CoordinateArrays.extract=function(t,e,n){e=MathUtil.clamp(e,0,t.length),n=MathUtil.clamp(n,-1,t.length);var i=n-e+1;0>n&&(i=0),e>=t.length&&(i=0),e>n&&(i=0);var r=new Array(i).fill(null);if(0===i)return r;for(var o=0,s=e;n>=s;s++)r[o++]=t[s];return r},extend(ForwardComparator.prototype,{compare:function(t,e){var n=t,i=e;return CoordinateArrays.compare(n,i)},interfaces_:function(){return[Comparator]},getClass:function(){return ForwardComparator}}),extend(BidirectionalComparator.prototype,{compare:function(t,e){var n=t,i=e;if(n.length<i.length)return-1;if(n.length>i.length)return 1;if(0===n.length)return 0;var r=CoordinateArrays.compare(n,i),o=CoordinateArrays.isEqualReversed(n,i);return o?0:r},OLDcompare:function(t,e){var n=t,i=e;if(n.length<i.length)return-1;if(n.length>i.length)return 1;if(0===n.length)return 0;for(var r=CoordinateArrays.increasingDirection(n),o=CoordinateArrays.increasingDirection(i),s=r>0?0:n.length-1,a=o>0?0:n.length-1,l=0;l<n.length;l++){var u=n[s].compareTo(i[a]);if(0!==u)return u;s+=r,a+=o}return 0},interfaces_:function(){return[Comparator]},getClass:function(){return BidirectionalComparator}}),CoordinateArrays.ForwardComparator=ForwardComparator,CoordinateArrays.BidirectionalComparator=BidirectionalComparator,CoordinateArrays.coordArrayType=new Array(0).fill(null),Map$1.prototype.get=function(){},Map$1.prototype.put=function(){},Map$1.prototype.size=function(){},Map$1.prototype.values=function(){},Map$1.prototype.entrySet=function(){},SortedMap.prototype=new Map$1,Set.prototype=new Collection,Set.prototype.contains=function(){},HashSet.prototype=new Set,HashSet.prototype.contains=function(t){for(var e=0,n=this.array_.length;n>e;e++){var i=this.array_[e];if(i===t)return!0}return!1},HashSet.prototype.add=function(t){return this.contains(t)?!1:(this.array_.push(t),!0)},HashSet.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},HashSet.prototype.remove=function(t){throw new javascript.util.OperationNotSupported},HashSet.prototype.size=function(){return this.array_.length},HashSet.prototype.isEmpty=function(){return 0===this.array_.length},HashSet.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;n>e;e++)t.push(this.array_[e]);return t},HashSet.prototype.iterator=function(){return new Iterator_$1(this)};var Iterator_$1=function(t){this.hashSet_=t,this.position_=0};Iterator_$1.prototype.next=function(){if(this.position_===this.hashSet_.size())throw new NoSuchElementException;return this.hashSet_.array_[this.position_++]},Iterator_$1.prototype.hasNext=function(){return this.position_<this.hashSet_.size()},Iterator_$1.prototype.remove=function(){throw new OperationNotSupported};var BLACK=0,RED=1;TreeMap.prototype=new SortedMap,TreeMap.prototype.get=function(t){for(var e=this.root_;null!==e;){var n=t.compareTo(e.key);if(0>n)e=e.left;else{if(!(n>0))return e.value;e=e.right}}return null},TreeMap.prototype.put=function(t,e){if(null===this.root_)return this.root_={key:t,value:e,left:null,right:null,parent:null,color:BLACK,getValue:function(){return this.value},getKey:function(){return this.key}},this.size_=1,null;var n,i,r=this.root_;do if(n=r,i=t.compareTo(r.key),0>i)r=r.left;else{if(!(i>0)){var o=r.value;return r.value=e,o}r=r.right}while(null!==r);var s={key:t,left:null,right:null,value:e,parent:n,color:BLACK,getValue:function(){return this.value},getKey:function(){return this.key}};return 0>i?n.left=s:n.right=s,this.fixAfterInsertion(s),this.size_++,null},TreeMap.prototype.fixAfterInsertion=function(t){for(t.color=RED;null!=t&&t!=this.root_&&t.parent.color==RED;)if(parentOf(t)==leftOf(parentOf(parentOf(t)))){var e=rightOf(parentOf(parentOf(t)));colorOf(e)==RED?(setColor(parentOf(t),BLACK),setColor(e,BLACK),setColor(parentOf(parentOf(t)),RED),t=parentOf(parentOf(t))):(t==rightOf(parentOf(t))&&(t=parentOf(t),this.rotateLeft(t)),setColor(parentOf(t),BLACK),setColor(parentOf(parentOf(t)),RED),this.rotateRight(parentOf(parentOf(t))))}else{var e=leftOf(parentOf(parentOf(t)));colorOf(e)==RED?(setColor(parentOf(t),BLACK),setColor(e,BLACK),setColor(parentOf(parentOf(t)),RED),t=parentOf(parentOf(t))):(t==leftOf(parentOf(t))&&(t=parentOf(t),this.rotateRight(t)),setColor(parentOf(t),BLACK),setColor(parentOf(parentOf(t)),RED),this.rotateLeft(parentOf(parentOf(t))))}this.root_.color=BLACK},TreeMap.prototype.values=function(){var t=new ArrayList,e=this.getFirstEntry();if(null!==e)for(t.add(e.value);null!==(e=TreeMap.successor(e));)t.add(e.value);return t},TreeMap.prototype.entrySet=function(){var t=new HashSet,e=this.getFirstEntry();if(null!==e)for(t.add(e);null!==(e=TreeMap.successor(e));)t.add(e);return t},TreeMap.prototype.rotateLeft=function(t){if(null!=t){var e=t.right;t.right=e.left,null!=e.left&&(e.left.parent=t),e.parent=t.parent,null==t.parent?this.root_=e:t.parent.left==t?t.parent.left=e:t.parent.right=e,e.left=t,t.parent=e}},TreeMap.prototype.rotateRight=function(t){if(null!=t){var e=t.left;t.left=e.right,null!=e.right&&(e.right.parent=t),e.parent=t.parent,null==t.parent?this.root_=e:t.parent.right==t?t.parent.right=e:t.parent.left=e,e.right=t,t.parent=e}},TreeMap.prototype.getFirstEntry=function(){var t=this.root_;if(null!=t)for(;null!=t.left;)t=t.left;return t},TreeMap.successor=function(t){if(null===t)return null;if(null!==t.right){for(var e=t.right;null!==e.left;)e=e.left;return e}for(var e=t.parent,n=t;null!==e&&n===e.right;)n=e,e=e.parent;return e},TreeMap.prototype.size=function(){return this.size_},extend(Lineal.prototype,{interfaces_:function(){return[]},getClass:function(){return Lineal}}),SortedSet.prototype=new Set,TreeSet.prototype=new SortedSet,TreeSet.prototype.contains=function(t){for(var e=0,n=this.array_.length;n>e;e++){var i=this.array_[e];if(0===i.compareTo(t))return!0}return!1},TreeSet.prototype.add=function(t){if(this.contains(t))return!1;for(var e=0,n=this.array_.length;n>e;e++){var i=this.array_[e];if(1===i.compareTo(t))return this.array_.splice(e,0,t),!0}return this.array_.push(t),!0},TreeSet.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},TreeSet.prototype.remove=function(t){throw new OperationNotSupported},TreeSet.prototype.size=function(){return this.array_.length},TreeSet.prototype.isEmpty=function(){return 0===this.array_.length},TreeSet.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;n>e;e++)t.push(this.array_[e]);return t},TreeSet.prototype.iterator=function(){return new Iterator_$2(this)};var Iterator_$2=function(t){this.treeSet_=t,this.position_=0};Iterator_$2.prototype.next=function(){if(this.position_===this.treeSet_.size())throw new NoSuchElementException;return this.treeSet_.array_[this.position_++]},Iterator_$2.prototype.hasNext=function(){return this.position_<this.treeSet_.size()},Iterator_$2.prototype.remove=function(){throw new OperationNotSupported},Arrays.sort=function(){var t,e,n,i,r=arguments[0];if(1===arguments.length)return i=function(t,e){return t.compareTo(e)},void r.sort(i);if(2===arguments.length)n=arguments[1],i=function(t,e){return n.compare(t,e)},r.sort(i);else{if(3===arguments.length){e=r.slice(arguments[1],arguments[2]),e.sort();var o=r.slice(0,arguments[1]).concat(e,r.slice(arguments[2],r.length));for(r.splice(0,r.length),t=0;t<o.length;t++)r.push(o[t]);return}if(4===arguments.length){for(e=r.slice(arguments[1],arguments[2]),n=arguments[3],i=function(t,e){return n.compare(t,e)},e.sort(i),o=r.slice(0,arguments[1]).concat(e,r.slice(arguments[2],r.length)),r.splice(0,r.length),t=0;t<o.length;t++)r.push(o[t]);return}}},Arrays.asList=function(t){for(var e=new ArrayList,n=0,i=t.length;i>n;n++)e.add(t[n]);return e},extend(GeometryComponentFilter$1.prototype,{filter:function(t){},interfaces_:function(){return[]},getClass:function(){return GeometryComponentFilter$1}}),extend(Dimension.prototype,{interfaces_:function(){return[]},getClass:function(){return Dimension}}),Dimension.toDimensionSymbol=function(t){switch(t){case Dimension.FALSE:return Dimension.SYM_FALSE;case Dimension.TRUE:return Dimension.SYM_TRUE;case Dimension.DONTCARE:return Dimension.SYM_DONTCARE;case Dimension.P:return Dimension.SYM_P;case Dimension.L:return Dimension.SYM_L;case Dimension.A:return Dimension.SYM_A}throw new IllegalArgumentException("Unknown dimension value: "+t)},Dimension.toDimensionValue=function(t){switch(Character.toUpperCase(t)){case Dimension.SYM_FALSE:return Dimension.FALSE;case Dimension.SYM_TRUE:return Dimension.TRUE;case Dimension.SYM_DONTCARE:return Dimension.DONTCARE;case Dimension.SYM_P:return Dimension.P;case Dimension.SYM_L:return Dimension.L;case Dimension.SYM_A:return Dimension.A}throw new IllegalArgumentException("Unknown dimension symbol: "+t)},Dimension.P=0,Dimension.L=1,Dimension.A=2,Dimension.FALSE=-1,Dimension.TRUE=-2,Dimension.DONTCARE=-3,Dimension.SYM_FALSE="F",Dimension.SYM_TRUE="T",Dimension.SYM_DONTCARE="*",Dimension.SYM_P="0",Dimension.SYM_L="1",Dimension.SYM_A="2",extend(GeometryFilter.prototype,{filter:function(t){},interfaces_:function(){return[]},getClass:function(){return GeometryFilter}}),extend(CoordinateSequenceFilter.prototype,{filter:function(t,e){},isDone:function(){},isGeometryChanged:function(){},interfaces_:function(){return[]},getClass:function(){return CoordinateSequenceFilter}}),inherits(GeometryCollection,Geometry),extend(GeometryCollection.prototype,{computeEnvelopeInternal:function(){for(var t=new Envelope,e=0;e<this.geometries.length;e++)t.expandToInclude(this.geometries[e].getEnvelopeInternal());return t},getGeometryN:function(t){return this.geometries[t]},getSortIndex:function(){return Geometry.SORTINDEX_GEOMETRYCOLLECTION},getCoordinates:function(){for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=0;n<this.geometries.length;n++)for(var i=this.geometries[n].getCoordinates(),r=0;r<i.length;r++)e++,t[e]=i[r];return t},getArea:function(){for(var t=0,e=0;e<this.geometries.length;e++)t+=this.geometries[e].getArea();return t},equalsExact:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(!this.isEquivalentClass(t))return!1;var n=t;if(this.geometries.length!==n.geometries.length)return!1;for(var i=0;i<this.geometries.length;i++)if(!this.geometries[i].equalsExact(n.geometries[i],e))return!1;return!0}return Geometry.prototype.equalsExact.apply(this,arguments)},normalize:function(){for(var t=0;t<this.geometries.length;t++)this.geometries[t].normalize();Arrays.sort(this.geometries)},getCoordinate:function(){return this.isEmpty()?null:this.geometries[0].getCoordinate()},getBoundaryDimension:function(){for(var t=Dimension.FALSE,e=0;e<this.geometries.length;e++)t=Math.max(t,this.geometries[e].getBoundaryDimension());return t},getDimension:function(){for(var t=Dimension.FALSE,e=0;e<this.geometries.length;e++)t=Math.max(t,this.geometries[e].getDimension());return t},getLength:function(){for(var t=0,e=0;e<this.geometries.length;e++)t+=this.geometries[e].getLength();return t},getNumPoints:function(){for(var t=0,e=0;e<this.geometries.length;e++)t+=this.geometries[e].getNumPoints();return t},getNumGeometries:function(){return this.geometries.length},reverse:function(){for(var t=this.geometries.length,e=new Array(t).fill(null),n=0;n<this.geometries.length;n++)e[n]=this.geometries[n].reverse();return this.getFactory().createGeometryCollection(e)},compareToSameClass:function(){if(1===arguments.length){var t=arguments[0],e=new TreeSet(Arrays.asList(this.geometries)),n=new TreeSet(Arrays.asList(t.geometries));return this.compare(e,n)}if(2===arguments.length){for(var t=arguments[0],i=arguments[1],r=t,o=this.getNumGeometries(),s=r.getNumGeometries(),a=0;o>a&&s>a;){var l=this.getGeometryN(a),u=r.getGeometryN(a),c=l.compareToSameClass(u,i);if(0!==c)return c;a++}return o>a?1:s>a?-1:0}},apply:function(){if(hasInterface(arguments[0],CoordinateFilter))for(var t=arguments[0],e=0;e<this.geometries.length;e++)this.geometries[e].apply(t);else if(hasInterface(arguments[0],CoordinateSequenceFilter)){var t=arguments[0];if(0===this.geometries.length)return null;for(var e=0;e<this.geometries.length&&(this.geometries[e].apply(t),!t.isDone());e++);t.isGeometryChanged()&&this.geometryChanged()}else if(hasInterface(arguments[0],GeometryFilter)){var t=arguments[0];t.filter(this);for(var e=0;e<this.geometries.length;e++)this.geometries[e].apply(t)}else if(hasInterface(arguments[0],GeometryComponentFilter$1)){var t=arguments[0];t.filter(this);for(var e=0;e<this.geometries.length;e++)this.geometries[e].apply(t)}},getBoundary:function(){return this.checkNotGeometryCollection(this),Assert.shouldNeverReachHere(),null},clone:function(){var t=Geometry.prototype.clone.call(this);t.geometries=new Array(this.geometries.length).fill(null);for(var e=0;e<this.geometries.length;e++)t.geometries[e]=this.geometries[e].clone();return t},getGeometryType:function(){return"GeometryCollection"},copy:function(){for(var t=new Array(this.geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this.geometries[e].copy();return new GeometryCollection(t,this.factory)},isEmpty:function(){for(var t=0;t<this.geometries.length;t++)if(!this.geometries[t].isEmpty())return!1;return!0},interfaces_:function(){return[]},getClass:function(){return GeometryCollection}}),GeometryCollection.serialVersionUID=-0x4f07bcb1f857d800,inherits(MultiLineString,GeometryCollection),extend(MultiLineString.prototype,{getSortIndex:function(){return Geometry.SORTINDEX_MULTILINESTRING},equalsExact:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.isEquivalentClass(t)?GeometryCollection.prototype.equalsExact.call(this,t,e):!1}return GeometryCollection.prototype.equalsExact.apply(this,arguments)},getBoundaryDimension:function(){return this.isClosed()?Dimension.FALSE:0},isClosed:function(){if(this.isEmpty())return!1;for(var t=0;t<this.geometries.length;t++)if(!this.geometries[t].isClosed())return!1;return!0},getDimension:function(){return 1},reverse:function(){for(var t=this.geometries.length,e=new Array(t).fill(null),n=0;n<this.geometries.length;n++)e[t-1-n]=this.geometries[n].reverse();return this.getFactory().createMultiLineString(e)},getBoundary:function(){return new BoundaryOp(this).getBoundary()},getGeometryType:function(){return"MultiLineString"},copy:function(){for(var t=new Array(this.geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this.geometries[e].copy();return new MultiLineString(t,this.factory)},interfaces_:function(){return[Lineal]},getClass:function(){return MultiLineString}}),MultiLineString.serialVersionUID=0x7155d2ab4afa8000,extend(BoundaryOp.prototype,{boundaryMultiLineString:function(t){if(this.geom.isEmpty())return this.getEmptyMultiPoint();var e=this.computeBoundaryCoordinates(t);return 1===e.length?this.geomFact.createPoint(e[0]):this.geomFact.createMultiPointFromCoords(e)},getBoundary:function(){return this.geom instanceof LineString?this.boundaryLineString(this.geom):this.geom instanceof MultiLineString?this.boundaryMultiLineString(this.geom):this.geom.getBoundary()},boundaryLineString:function(t){if(this.geom.isEmpty())return this.getEmptyMultiPoint();if(t.isClosed()){var e=this.bnRule.isInBoundary(2);return e?t.getStartPoint():this.geomFact.createMultiPoint()}return this.geomFact.createMultiPoint([t.getStartPoint(),t.getEndPoint()])},getEmptyMultiPoint:function(){return this.geomFact.createMultiPoint()},computeBoundaryCoordinates:function(t){var e=new ArrayList;this.endpointMap=new TreeMap;for(var n=0;n<t.getNumGeometries();n++){var i=t.getGeometryN(n);0!==i.getNumPoints()&&(this.addEndpoint(i.getCoordinateN(0)),this.addEndpoint(i.getCoordinateN(i.getNumPoints()-1)))}for(var r=this.endpointMap.entrySet().iterator();r.hasNext();){var o=r.next(),s=o.getValue(),a=s.count;this.bnRule.isInBoundary(a)&&e.add(o.getKey())}return CoordinateArrays.toCoordinateArray(e)},addEndpoint:function(t){var e=this.endpointMap.get(t);null===e&&(e=new Counter,this.endpointMap.put(t,e)),e.count++},interfaces_:function(){return[]},getClass:function(){return BoundaryOp}}),BoundaryOp.getBoundary=function(){if(1===arguments.length){var t=arguments[0],e=new BoundaryOp(t);return e.getBoundary()}if(2===arguments.length){var t=arguments[0],n=arguments[1],e=new BoundaryOp(t,n);return e.getBoundary()}},extend(Counter.prototype,{interfaces_:function(){return[]},getClass:function(){return Counter}}),extend(StringUtil.prototype,{interfaces_:function(){return[]},getClass:function(){return StringUtil}}),StringUtil.chars=function(t,e){for(var n=new Array(e).fill(null),i=0;e>i;i++)n[i]=t;return new String(n)},StringUtil.getStackTrace=function(){if(1===arguments.length){var t=arguments[0],e=new ByteArrayOutputStream,n=new PrintStream(e);return t.printStackTrace(n),e.toString()}if(2===arguments.length){for(var t=arguments[0],i=arguments[1],r="",o=new StringReader(StringUtil.getStackTrace(t)),s=new LineNumberReader(o),a=0;i>a;a++)try{r+=s.readLine()+StringUtil.NEWLINE}catch(t){if(!(t instanceof IOException))throw t;Assert.shouldNeverReachHere()}finally{}return r}},StringUtil.split=function(t,e){for(var n=e.length,i=new ArrayList,r=""+t,o=r.indexOf(e);o>=0;){var s=r.substring(0,o);i.add(s),r=r.substring(o+n),o=r.indexOf(e)}r.length>0&&i.add(r);for(var a=new Array(i.size()).fill(null),l=0;l<a.length;l++)a[l]=i.get(l);return a},StringUtil.toString=function(){if(1===arguments.length){var t=arguments[0];return StringUtil.SIMPLE_ORDINATE_FORMAT.format(t)}},StringUtil.spaces=function(t){return StringUtil.chars(" ",t)},StringUtil.NEWLINE=System.getProperty("line.separator"),StringUtil.SIMPLE_ORDINATE_FORMAT=new DecimalFormat("0.#"),extend(CoordinateSequences.prototype,{interfaces_:function(){return[]},getClass:function(){return CoordinateSequences}}),CoordinateSequences.copyCoord=function(t,e,n,i){for(var r=Math.min(t.getDimension(),n.getDimension()),o=0;r>o;o++)n.setOrdinate(i,o,t.getOrdinate(e,o))},CoordinateSequences.isRing=function(t){var e=t.size();return 0===e?!0:3>=e?!1:t.getOrdinate(0,CoordinateSequence.X)===t.getOrdinate(e-1,CoordinateSequence.X)&&t.getOrdinate(0,CoordinateSequence.Y)===t.getOrdinate(e-1,CoordinateSequence.Y)},CoordinateSequences.isEqual=function(t,e){var n=t.size(),i=e.size();if(n!==i)return!1;for(var r=Math.min(t.getDimension(),e.getDimension()),o=0;n>o;o++)for(var s=0;r>s;s++){var a=t.getOrdinate(o,s),l=e.getOrdinate(o,s);if(!(t.getOrdinate(o,s)===e.getOrdinate(o,s)||Double.isNaN(a)&&Double.isNaN(l)))return!1}return!0},CoordinateSequences.extend=function(t,e,n){var i=t.create(n,e.getDimension()),r=e.size();if(CoordinateSequences.copy(e,0,i,0,r),r>0)for(var o=r;n>o;o++)CoordinateSequences.copy(e,r-1,i,o,1);return i},CoordinateSequences.reverse=function(t){for(var e=t.size()-1,n=Math.trunc(e/2),i=0;n>=i;i++)CoordinateSequences.swap(t,i,e-i)},CoordinateSequences.swap=function(t,e,n){if(e===n)return null;for(var i=0;i<t.getDimension();i++){var r=t.getOrdinate(e,i);t.setOrdinate(e,i,t.getOrdinate(n,i)),t.setOrdinate(n,i,r)}},CoordinateSequences.copy=function(t,e,n,i,r){for(var o=0;r>o;o++)CoordinateSequences.copyCoord(t,e+o,n,i+o)},CoordinateSequences.toString=function(){if(1===arguments.length){var t=arguments[0],e=t.size();if(0===e)return"()";var n=t.getDimension(),i=new StringBuffer;i.append("(");for(var r=0;e>r;r++){r>0&&i.append(" ");for(var o=0;n>o;o++)o>0&&i.append(","),i.append(StringUtil.toString(t.getOrdinate(r,o)))}return i.append(")"),i.toString()}},CoordinateSequences.ensureValidRing=function(t,e){var n=e.size();if(0===n)return e;if(3>=n)return CoordinateSequences.createClosedRing(t,e,4);var i=e.getOrdinate(0,CoordinateSequence.X)===e.getOrdinate(n-1,CoordinateSequence.X)&&e.getOrdinate(0,CoordinateSequence.Y)===e.getOrdinate(n-1,CoordinateSequence.Y);return i?e:CoordinateSequences.createClosedRing(t,e,n+1)},CoordinateSequences.createClosedRing=function(t,e,n){var i=t.create(n,e.getDimension()),r=e.size();CoordinateSequences.copy(e,0,i,0,r);for(var o=r;n>o;o++)CoordinateSequences.copy(e,0,i,o,1);return i},inherits(LineString,Geometry),extend(LineString.prototype,{computeEnvelopeInternal:function(){return this.isEmpty()?new Envelope:this.points.expandEnvelope(new Envelope)},isRing:function(){return this.isClosed()&&this.isSimple()},getSortIndex:function(){return Geometry.SORTINDEX_LINESTRING},getCoordinates:function(){return this.points.toCoordinateArray()},equalsExact:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(!this.isEquivalentClass(t))return!1;var n=t;if(this.points.size()!==n.points.size())return!1;for(var i=0;i<this.points.size();i++)if(!this.equal(this.points.getCoordinate(i),n.points.getCoordinate(i),e))return!1;return!0}return Geometry.prototype.equalsExact.apply(this,arguments)},normalize:function(){for(var t=0;t<Math.trunc(this.points.size()/2);t++){var e=this.points.size()-1-t;if(!this.points.getCoordinate(t).equals(this.points.getCoordinate(e)))return this.points.getCoordinate(t).compareTo(this.points.getCoordinate(e))>0&&CoordinateSequences.reverse(this.points),null}},getCoordinate:function(){return this.isEmpty()?null:this.points.getCoordinate(0)},getBoundaryDimension:function(){return this.isClosed()?Dimension.FALSE:0},isClosed:function(){return this.isEmpty()?!1:this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints()-1))},getEndPoint:function(){return this.isEmpty()?null:this.getPointN(this.getNumPoints()-1)},getDimension:function(){return 1},getLength:function(){return CGAlgorithms.computeLength(this.points)},getNumPoints:function(){return this.points.size()},reverse:function(){var t=this.points.clone();CoordinateSequences.reverse(t);var e=this.getFactory().createLineString(t);return e},compareToSameClass:function(){if(1===arguments.length){for(var t=arguments[0],e=t,n=0,i=0;n<this.points.size()&&i<e.points.size();){var r=this.points.getCoordinate(n).compareTo(e.points.getCoordinate(i));if(0!==r)return r;n++,i++}return n<this.points.size()?1:i<e.points.size()?-1:0}if(2===arguments.length){var t=arguments[0],o=arguments[1],e=t;return o.compare(this.points,e.points)}},apply:function(){if(hasInterface(arguments[0],CoordinateFilter))for(var t=arguments[0],e=0;e<this.points.size();e++)t.filter(this.points.getCoordinate(e));else if(hasInterface(arguments[0],CoordinateSequenceFilter)){var t=arguments[0];if(0===this.points.size())return null;for(var e=0;e<this.points.size()&&(t.filter(this.points,e),!t.isDone());e++);t.isGeometryChanged()&&this.geometryChanged()}else if(hasInterface(arguments[0],GeometryFilter)){var t=arguments[0];t.filter(this)}else if(hasInterface(arguments[0],GeometryComponentFilter$1)){var t=arguments[0];t.filter(this)}},getBoundary:function(){return new BoundaryOp(this).getBoundary()},isEquivalentClass:function(t){return t instanceof LineString},clone:function(){var t=Geometry.prototype.clone.call(this);return t.points=this.points.clone(),t},getCoordinateN:function(t){return this.points.getCoordinate(t)},getGeometryType:function(){return"LineString"},copy:function(){return new LineString(this.points.copy(),this.factory)},getCoordinateSequence:function(){return this.points},isEmpty:function(){return 0===this.points.size()},init:function(t){if(null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),1===t.size())throw new IllegalArgumentException("Invalid number of points in LineString (found "+t.size()+" - must be 0 or >= 2)");this.points=t},isCoordinate:function(t){for(var e=0;e<this.points.size();e++)if(this.points.getCoordinate(e).equals(t))return!0;return!1},getStartPoint:function(){return this.isEmpty()?null:this.getPointN(0)},getPointN:function(t){return this.getFactory().createPoint(this.points.getCoordinate(t))},interfaces_:function(){return[Lineal]},getClass:function(){return LineString}}),LineString.serialVersionUID=0x2b2b51ba435c8e00,extend(Puntal.prototype,{interfaces_:function(){return[]},getClass:function(){return Puntal}}),inherits(Point,Geometry),extend(Point.prototype,{computeEnvelopeInternal:function(){if(this.isEmpty())return new Envelope;var t=new Envelope;return t.expandToInclude(this.coordinates.getX(0),this.coordinates.getY(0)),t},getSortIndex:function(){return Geometry.SORTINDEX_POINT},getCoordinates:function(){return this.isEmpty()?[]:[this.getCoordinate()]},equalsExact:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.isEquivalentClass(t)?this.isEmpty()&&t.isEmpty()?!0:this.isEmpty()!==t.isEmpty()?!1:this.equal(t.getCoordinate(),this.getCoordinate(),e):!1}return Geometry.prototype.equalsExact.apply(this,arguments)},normalize:function(){},getCoordinate:function(){return 0!==this.coordinates.size()?this.coordinates.getCoordinate(0):null},getBoundaryDimension:function(){return Dimension.FALSE},getDimension:function(){return 0},getNumPoints:function(){return this.isEmpty()?0:1},reverse:function(){return this.copy()},getX:function(){if(null===this.getCoordinate())throw new IllegalStateException("getX called on empty Point");return this.getCoordinate().x},compareToSameClass:function(){if(1===arguments.length){var t=arguments[0],e=t;return this.getCoordinate().compareTo(e.getCoordinate())}if(2===arguments.length){var t=arguments[0],n=arguments[1],e=t;return n.compare(this.coordinates,e.coordinates)}},apply:function(){if(hasInterface(arguments[0],CoordinateFilter)){var t=arguments[0];if(this.isEmpty())return null;t.filter(this.getCoordinate())}else if(hasInterface(arguments[0],CoordinateSequenceFilter)){var t=arguments[0];if(this.isEmpty())return null;t.filter(this.coordinates,0),t.isGeometryChanged()&&this.geometryChanged()}else if(hasInterface(arguments[0],GeometryFilter)){var t=arguments[0];t.filter(this)}else if(hasInterface(arguments[0],GeometryComponentFilter$1)){var t=arguments[0];t.filter(this)}},getBoundary:function(){return this.getFactory().createGeometryCollection(null)},clone:function(){var t=Geometry.prototype.clone.call(this);return t.coordinates=this.coordinates.clone(),t},getGeometryType:function(){return"Point"},copy:function(){return new Point(this.coordinates.copy(),this.factory)},getCoordinateSequence:function(){return this.coordinates},getY:function(){if(null===this.getCoordinate())throw new IllegalStateException("getY called on empty Point");return this.getCoordinate().y},isEmpty:function(){return 0===this.coordinates.size()},init:function(t){null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),Assert.isTrue(t.size()<=1),this.coordinates=t},isSimple:function(){return!0},interfaces_:function(){return[Puntal]},getClass:function(){return Point}}),Point.serialVersionUID=0x44077bad161cbc00,extend(Polygonal.prototype,{interfaces_:function(){return[]},getClass:function(){return Polygonal}}),inherits(Polygon,Geometry),extend(Polygon.prototype,{computeEnvelopeInternal:function(){return this.shell.getEnvelopeInternal()},getSortIndex:function(){return Geometry.SORTINDEX_POLYGON},getCoordinates:function(){if(this.isEmpty())return[];for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=this.shell.getCoordinates(),i=0;i<n.length;i++)e++,t[e]=n[i];for(var r=0;r<this.holes.length;r++)for(var o=this.holes[r].getCoordinates(),s=0;s<o.length;s++)e++,t[e]=o[s];return t},getArea:function(){var t=0;t+=Math.abs(CGAlgorithms.signedArea(this.shell.getCoordinateSequence()));for(var e=0;e<this.holes.length;e++)t-=Math.abs(CGAlgorithms.signedArea(this.holes[e].getCoordinateSequence()));return t},isRectangle:function(){if(0!==this.getNumInteriorRing())return!1;if(null===this.shell)return!1;if(5!==this.shell.getNumPoints())return!1;for(var t=this.shell.getCoordinateSequence(),e=this.getEnvelopeInternal(),n=0;5>n;n++){var i=t.getX(n);if(i!==e.getMinX()&&i!==e.getMaxX())return!1;var r=t.getY(n);if(r!==e.getMinY()&&r!==e.getMaxY())return!1}for(var o=t.getX(0),s=t.getY(0),n=1;4>=n;n++){var i=t.getX(n),r=t.getY(n),a=i!==o,l=r!==s;if(a===l)return!1;o=i,s=r}return!0},equalsExact:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(!this.isEquivalentClass(t))return!1;var n=t,i=this.shell,r=n.shell;if(!i.equalsExact(r,e))return!1;if(this.holes.length!==n.holes.length)return!1;for(var o=0;o<this.holes.length;o++)if(!this.holes[o].equalsExact(n.holes[o],e))return!1;return!0}return Geometry.prototype.equalsExact.apply(this,arguments)},normalize:function(){if(0===arguments.length){this.normalize(this.shell,!0);for(var t=0;t<this.holes.length;t++)this.normalize(this.holes[t],!1);Arrays.sort(this.holes)}else if(2===arguments.length){
var e=arguments[0],n=arguments[1];if(e.isEmpty())return null;var i=new Array(e.getCoordinates().length-1).fill(null);System.arraycopy(e.getCoordinates(),0,i,0,i.length);var r=CoordinateArrays.minCoordinate(e.getCoordinates());CoordinateArrays.scroll(i,r),System.arraycopy(i,0,e.getCoordinates(),0,i.length),e.getCoordinates()[i.length]=i[0],CGAlgorithms.isCCW(e.getCoordinates())===n&&CoordinateArrays.reverse(e.getCoordinates())}},getCoordinate:function(){return this.shell.getCoordinate()},getNumInteriorRing:function(){return this.holes.length},getBoundaryDimension:function(){return 1},getDimension:function(){return 2},getLength:function(){var t=0;t+=this.shell.getLength();for(var e=0;e<this.holes.length;e++)t+=this.holes[e].getLength();return t},getNumPoints:function(){for(var t=this.shell.getNumPoints(),e=0;e<this.holes.length;e++)t+=this.holes[e].getNumPoints();return t},reverse:function(){var t=this.copy();t.shell=this.shell.clone().reverse(),t.holes=new Array(this.holes.length).fill(null);for(var e=0;e<this.holes.length;e++)t.holes[e]=this.holes[e].clone().reverse();return t},convexHull:function(){return this.getExteriorRing().convexHull()},compareToSameClass:function(){if(1===arguments.length){var t=arguments[0],e=this.shell,n=t.shell;return e.compareToSameClass(n)}if(2===arguments.length){var t=arguments[0],i=arguments[1],r=t,e=this.shell,n=r.shell,o=e.compareToSameClass(n,i);if(0!==o)return o;for(var s=this.getNumInteriorRing(),a=r.getNumInteriorRing(),l=0;s>l&&a>l;){var u=this.getInteriorRingN(l),c=r.getInteriorRingN(l),h=u.compareToSameClass(c,i);if(0!==h)return h;l++}return s>l?1:a>l?-1:0}},apply:function(){if(hasInterface(arguments[0],CoordinateFilter)){var t=arguments[0];this.shell.apply(t);for(var e=0;e<this.holes.length;e++)this.holes[e].apply(t)}else if(hasInterface(arguments[0],CoordinateSequenceFilter)){var t=arguments[0];if(this.shell.apply(t),!t.isDone())for(var e=0;e<this.holes.length&&(this.holes[e].apply(t),!t.isDone());e++);t.isGeometryChanged()&&this.geometryChanged()}else if(hasInterface(arguments[0],GeometryFilter)){var t=arguments[0];t.filter(this)}else if(hasInterface(arguments[0],GeometryComponentFilter$1)){var t=arguments[0];t.filter(this),this.shell.apply(t);for(var e=0;e<this.holes.length;e++)this.holes[e].apply(t)}},getBoundary:function(){if(this.isEmpty())return this.getFactory().createMultiLineString();var t=new Array(this.holes.length+1).fill(null);t[0]=this.shell;for(var e=0;e<this.holes.length;e++)t[e+1]=this.holes[e];return t.length<=1?this.getFactory().createLinearRing(t[0].getCoordinateSequence()):this.getFactory().createMultiLineString(t)},clone:function(){var t=Geometry.prototype.clone.call(this);t.shell=this.shell.clone(),t.holes=new Array(this.holes.length).fill(null);for(var e=0;e<this.holes.length;e++)t.holes[e]=this.holes[e].clone();return t},getGeometryType:function(){return"Polygon"},copy:function(){for(var t=this.shell.copy(),e=new Array(this.holes.length).fill(null),n=0;n<e.length;n++)e[n]=this.holes[n].copy();return new Polygon(t,e,this.factory)},getExteriorRing:function(){return this.shell},isEmpty:function(){return this.shell.isEmpty()},getInteriorRingN:function(t){return this.holes[t]},interfaces_:function(){return[Polygonal]},getClass:function(){return Polygon}}),Polygon.serialVersionUID=-0x307ffefd8dc97200,inherits(MultiPoint,GeometryCollection),extend(MultiPoint.prototype,{getSortIndex:function(){return Geometry.SORTINDEX_MULTIPOINT},isValid:function(){return!0},equalsExact:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.isEquivalentClass(t)?GeometryCollection.prototype.equalsExact.call(this,t,e):!1}return GeometryCollection.prototype.equalsExact.apply(this,arguments)},getCoordinate:function(){if(1===arguments.length){var t=arguments[0];return this.geometries[t].getCoordinate()}return GeometryCollection.prototype.getCoordinate.apply(this,arguments)},getBoundaryDimension:function(){return Dimension.FALSE},getDimension:function(){return 0},getBoundary:function(){return this.getFactory().createGeometryCollection(null)},getGeometryType:function(){return"MultiPoint"},copy:function(){for(var t=new Array(this.geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this.geometries[e].copy();return new MultiPoint(t,this.factory)},interfaces_:function(){return[Puntal]},getClass:function(){return MultiPoint}}),MultiPoint.serialVersionUID=-0x6fb1ed4162e0fc00,inherits(LinearRing,LineString),extend(LinearRing.prototype,{getSortIndex:function(){return Geometry.SORTINDEX_LINEARRING},getBoundaryDimension:function(){return Dimension.FALSE},isClosed:function(){return this.isEmpty()?!0:LineString.prototype.isClosed.call(this)},reverse:function(){var t=this.points.clone();CoordinateSequences.reverse(t);var e=this.getFactory().createLinearRing(t);return e},validateConstruction:function(){if(!this.isEmpty()&&!LineString.prototype.isClosed.call(this))throw new IllegalArgumentException("Points of LinearRing do not form a closed linestring");if(this.getCoordinateSequence().size()>=1&&this.getCoordinateSequence().size()<LinearRing.MINIMUM_VALID_SIZE)throw new IllegalArgumentException("Invalid number of points in LinearRing (found "+this.getCoordinateSequence().size()+" - must be 0 or >= 4)")},getGeometryType:function(){return"LinearRing"},copy:function(){return new LinearRing(this.points.copy(),this.factory)},interfaces_:function(){return[]},getClass:function(){return LinearRing}}),LinearRing.MINIMUM_VALID_SIZE=4,LinearRing.serialVersionUID=-0x3b229e262367a600,inherits(MultiPolygon,GeometryCollection),extend(MultiPolygon.prototype,{getSortIndex:function(){return Geometry.SORTINDEX_MULTIPOLYGON},equalsExact:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.isEquivalentClass(t)?GeometryCollection.prototype.equalsExact.call(this,t,e):!1}return GeometryCollection.prototype.equalsExact.apply(this,arguments)},getBoundaryDimension:function(){return 1},getDimension:function(){return 2},reverse:function(){for(var t=this.geometries.length,e=new Array(t).fill(null),n=0;n<this.geometries.length;n++)e[n]=this.geometries[n].reverse();return this.getFactory().createMultiPolygon(e)},getBoundary:function(){if(this.isEmpty())return this.getFactory().createMultiLineString();for(var t=new ArrayList,e=0;e<this.geometries.length;e++)for(var n=this.geometries[e],i=n.getBoundary(),r=0;r<i.getNumGeometries();r++)t.add(i.getGeometryN(r));var o=new Array(t.size()).fill(null);return this.getFactory().createMultiLineString(t.toArray(o))},getGeometryType:function(){return"MultiPolygon"},copy:function(){for(var t=new Array(this.geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this.geometries[e].copy();return new MultiPolygon(t,this.factory)},interfaces_:function(){return[Polygonal]},getClass:function(){return MultiPolygon}}),MultiPolygon.serialVersionUID=-0x7a5aa1369171980,extend(GeometryEditor.prototype,{setCopyUserData:function(t){this.isUserDataCopied=t},edit:function(t,e){if(null===t)return null;var n=this.editInternal(t,e);return this.isUserDataCopied&&n.setUserData(t.getUserData()),n},editInternal:function(t,e){return null===this.factory&&(this.factory=t.getFactory()),t instanceof GeometryCollection?this.editGeometryCollection(t,e):t instanceof Polygon?this.editPolygon(t,e):t instanceof Point?e.edit(t,this.factory):t instanceof LineString?e.edit(t,this.factory):(Assert.shouldNeverReachHere("Unsupported Geometry class: "+t.getClass().getName()),null)},editGeometryCollection:function(t,e){for(var n=e.edit(t,this.factory),i=new ArrayList,r=0;r<n.getNumGeometries();r++){var o=this.edit(n.getGeometryN(r),e);null===o||o.isEmpty()||i.add(o)}return n.getClass()===MultiPoint?this.factory.createMultiPoint(i.toArray([])):n.getClass()===MultiLineString?this.factory.createMultiLineString(i.toArray([])):n.getClass()===MultiPolygon?this.factory.createMultiPolygon(i.toArray([])):this.factory.createGeometryCollection(i.toArray([]))},editPolygon:function(t,e){var n=e.edit(t,this.factory);if(null===n&&(n=this.factory.createPolygon(null)),n.isEmpty())return n;var i=this.edit(n.getExteriorRing(),e);if(null===i||i.isEmpty())return this.factory.createPolygon();for(var r=new ArrayList,o=0;o<n.getNumInteriorRing();o++){var s=this.edit(n.getInteriorRingN(o),e);null===s||s.isEmpty()||r.add(s)}return this.factory.createPolygon(i,r.toArray([]))},interfaces_:function(){return[]},getClass:function(){return GeometryEditor}}),GeometryEditor.GeometryEditorOperation=GeometryEditorOperation,extend(NoOpGeometryOperation.prototype,{edit:function(t,e){return t},interfaces_:function(){return[GeometryEditorOperation]},getClass:function(){return NoOpGeometryOperation}}),extend(CoordinateOperation.prototype,{edit:function(t,e){if(t instanceof LinearRing)return e.createLinearRing(this.editCoordinates(t.getCoordinates(),t));if(t instanceof LineString)return e.createLineString(this.editCoordinates(t.getCoordinates(),t));if(t instanceof Point){var n=this.editCoordinates(t.getCoordinates(),t);return n.length>0?e.createPoint(n[0]):e.createPoint()}return t},interfaces_:function(){return[GeometryEditorOperation]},getClass:function(){return CoordinateOperation}}),extend(CoordinateSequenceOperation.prototype,{edit:function(t,e){return t instanceof LinearRing?e.createLinearRing(this.edit(t.getCoordinateSequence(),t)):t instanceof LineString?e.createLineString(this.edit(t.getCoordinateSequence(),t)):t instanceof Point?e.createPoint(this.edit(t.getCoordinateSequence(),t)):t},interfaces_:function(){return[GeometryEditorOperation]},getClass:function(){return CoordinateSequenceOperation}}),GeometryEditor.NoOpGeometryOperation=NoOpGeometryOperation,GeometryEditor.CoordinateOperation=CoordinateOperation,GeometryEditor.CoordinateSequenceOperation=CoordinateSequenceOperation,extend(CoordinateArraySequence.prototype,{setOrdinate:function(t,e,n){switch(e){case CoordinateSequence.X:this.coordinates[t].x=n;break;case CoordinateSequence.Y:this.coordinates[t].y=n;break;case CoordinateSequence.Z:this.coordinates[t].z=n;break;default:throw new IllegalArgumentException("invalid ordinateIndex")}},size:function(){return this.coordinates.length},getOrdinate:function(t,e){switch(e){case CoordinateSequence.X:return this.coordinates[t].x;case CoordinateSequence.Y:return this.coordinates[t].y;case CoordinateSequence.Z:return this.coordinates[t].z}return Double.NaN},getCoordinate:function(){if(1===arguments.length){var t=arguments[0];return this.coordinates[t]}if(2===arguments.length){var e=arguments[0],n=arguments[1];n.x=this.coordinates[e].x,n.y=this.coordinates[e].y,n.z=this.coordinates[e].z}},getCoordinateCopy:function(t){return new Coordinate(this.coordinates[t])},getDimension:function(){return this.dimension},getX:function(t){return this.coordinates[t].x},clone:function(){for(var t=new Array(this.size()).fill(null),e=0;e<this.coordinates.length;e++)t[e]=this.coordinates[e].clone();return new CoordinateArraySequence(t,this.dimension)},expandEnvelope:function(t){for(var e=0;e<this.coordinates.length;e++)t.expandToInclude(this.coordinates[e]);return t},copy:function(){for(var t=new Array(this.size()).fill(null),e=0;e<this.coordinates.length;e++)t[e]=this.coordinates[e].copy();return new CoordinateArraySequence(t,this.dimension)},toString:function(){if(this.coordinates.length>0){var t=new StringBuffer(17*this.coordinates.length);t.append("("),t.append(this.coordinates[0]);for(var e=1;e<this.coordinates.length;e++)t.append(", "),t.append(this.coordinates[e]);return t.append(")"),t.toString()}return"()"},getY:function(t){return this.coordinates[t].y},toCoordinateArray:function(){return this.coordinates},interfaces_:function(){return[CoordinateSequence,Serializable]},getClass:function(){return CoordinateArraySequence}}),CoordinateArraySequence.serialVersionUID=-0xcb44a778db18e00,extend(CoordinateArraySequenceFactory.prototype,{readResolve:function(){return CoordinateArraySequenceFactory.instance()},create:function(){if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return new CoordinateArraySequence(t)}if(hasInterface(arguments[0],CoordinateSequence)){var e=arguments[0];return new CoordinateArraySequence(e)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return i>3&&(i=3),2>i?new CoordinateArraySequence(n):new CoordinateArraySequence(n,i)}},interfaces_:function(){return[CoordinateSequenceFactory,Serializable]},getClass:function(){return CoordinateArraySequenceFactory}}),CoordinateArraySequenceFactory.instance=function(){return CoordinateArraySequenceFactory.instanceObject},CoordinateArraySequenceFactory.serialVersionUID=-0x38e49fa6cf6f2e00,CoordinateArraySequenceFactory.instanceObject=new CoordinateArraySequenceFactory,HashMap.prototype=new Map$1,HashMap.prototype.get=function(t){return this.map_.get(t)||null},HashMap.prototype.put=function(t,e){return this.map_.set(t,e),e},HashMap.prototype.values=function(){var t=new ArrayList;return Array.from(this.map_.values()).forEach(function(e){return t.add(e)}),t},HashMap.prototype.entrySet=function(){var t=new HashSet;return this.map_.entries().forEach(function(e){return t.add(e)}),t},HashMap.prototype.size=function(){return this.map_.size()},extend(PrecisionModel.prototype,{equals:function(t){if(!(t instanceof PrecisionModel))return!1;var e=t;return this.modelType===e.modelType&&this.scale===e.scale},compareTo:function(t){var e=t,n=this.getMaximumSignificantDigits(),i=e.getMaximumSignificantDigits();return new Integer(n).compareTo(new Integer(i))},getScale:function(){return this.scale},isFloating:function(){return this.modelType===PrecisionModel.FLOATING||this.modelType===PrecisionModel.FLOATING_SINGLE},getType:function(){return this.modelType},toString:function(){var t="UNKNOWN";return this.modelType===PrecisionModel.FLOATING?t="Floating":this.modelType===PrecisionModel.FLOATING_SINGLE?t="Floating-Single":this.modelType===PrecisionModel.FIXED&&(t="Fixed (Scale="+this.getScale()+")"),t},makePrecise:function(){if("number"==typeof arguments[0]){var t=arguments[0];if(Double.isNaN(t))return t;if(this.modelType===PrecisionModel.FLOATING_SINGLE){var e=t;return e}return this.modelType===PrecisionModel.FIXED?Math.round(t*this.scale)/this.scale:t}if(arguments[0]instanceof Coordinate){var n=arguments[0];if(this.modelType===PrecisionModel.FLOATING)return null;n.x=this.makePrecise(n.x),n.y=this.makePrecise(n.y)}},getMaximumSignificantDigits:function(){var t=16;return this.modelType===PrecisionModel.FLOATING?t=16:this.modelType===PrecisionModel.FLOATING_SINGLE?t=6:this.modelType===PrecisionModel.FIXED&&(t=1+Math.trunc(Math.ceil(Math.log(this.getScale())/Math.log(10)))),t},setScale:function(t){this.scale=Math.abs(t)},interfaces_:function(){return[Serializable,Comparable]},getClass:function(){return PrecisionModel}}),PrecisionModel.mostPrecise=function(t,e){return t.compareTo(e)>=0?t:e},extend(Type.prototype,{readResolve:function(){return Type.nameToTypeMap.get(this.name)},toString:function(){return this.name},interfaces_:function(){return[Serializable]},getClass:function(){return Type}}),Type.serialVersionUID=-552860263173159e4,Type.nameToTypeMap=new HashMap,PrecisionModel.Type=Type,PrecisionModel.serialVersionUID=0x6bee6404e9a25c00,PrecisionModel.FIXED=new Type("FIXED"),PrecisionModel.FLOATING=new Type("FLOATING"),PrecisionModel.FLOATING_SINGLE=new Type("FLOATING SINGLE"),PrecisionModel.maximumPreciseValue=9007199254740992,extend(GeometryFactory.prototype,{toGeometry:function(t){return t.isNull()?this.createPoint(null):t.getMinX()===t.getMaxX()&&t.getMinY()===t.getMaxY()?this.createPoint(new Coordinate(t.getMinX(),t.getMinY())):t.getMinX()===t.getMaxX()||t.getMinY()===t.getMaxY()?this.createLineString([new Coordinate(t.getMinX(),t.getMinY()),new Coordinate(t.getMaxX(),t.getMaxY())]):this.createPolygon(this.createLinearRing([new Coordinate(t.getMinX(),t.getMinY()),new Coordinate(t.getMinX(),t.getMaxY()),new Coordinate(t.getMaxX(),t.getMaxY()),new Coordinate(t.getMaxX(),t.getMinY()),new Coordinate(t.getMinX(),t.getMinY())]),null)},createLineString:function(){if(0===arguments.length)return this.createLineString(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return this.createLineString(null!==t?this.getCoordinateSequenceFactory().create(t):null)}if(hasInterface(arguments[0],CoordinateSequence)){var t=arguments[0];return new LineString(t,this)}}},createMultiLineString:function(){if(0===arguments.length)return new MultiLineString(null,this);if(1===arguments.length){var t=arguments[0];return new MultiLineString(t,this)}},buildGeometry:function(t){for(var e=null,n=!1,i=!1,r=t.iterator();r.hasNext();){var o=r.next(),s=o.getClass();null===e&&(e=s),s!==e&&(n=!0),o.isGeometryCollectionOrDerived()&&(i=!0)}if(null===e)return this.createGeometryCollection();if(n||i)return this.createGeometryCollection(GeometryFactory.toGeometryArray(t));var a=t.iterator().next(),l=t.size()>1;if(l){if(a instanceof Polygon)return this.createMultiPolygon(GeometryFactory.toPolygonArray(t));if(a instanceof LineString)return this.createMultiLineString(GeometryFactory.toLineStringArray(t));if(a instanceof Point)return this.createMultiPoint(GeometryFactory.toPointArray(t));Assert.shouldNeverReachHere("Unhandled class: "+a.getClass().getName())}return a},createMultiPointFromCoords:function(t){return this.createMultiPoint(null!==t?this.getCoordinateSequenceFactory().create(t):null)},createPoint:function(){if(0===arguments.length)return this.createPoint(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Coordinate){var t=arguments[0];return this.createPoint(null!==t?this.getCoordinateSequenceFactory().create([t]):null)}if(hasInterface(arguments[0],CoordinateSequence)){var e=arguments[0];return new Point(e,this)}}},getCoordinateSequenceFactory:function(){return this.coordinateSequenceFactory},createPolygon:function(){if(0===arguments.length)return new Polygon(null,null,this);if(1===arguments.length){if(hasInterface(arguments[0],CoordinateSequence)){var t=arguments[0];return this.createPolygon(this.createLinearRing(t))}if(arguments[0]instanceof Array){var t=arguments[0];return this.createPolygon(this.createLinearRing(t))}if(arguments[0]instanceof LinearRing){var e=arguments[0];return this.createPolygon(e,null)}}else if(2===arguments.length){var e=arguments[0],n=arguments[1];return new Polygon(e,n,this)}},getSRID:function(){return this.SRID},createGeometryCollection:function(){if(0===arguments.length)return new GeometryCollection(null,this);if(1===arguments.length){var t=arguments[0];return new GeometryCollection(t,this)}},createGeometry:function(t){var e=new GeometryEditor(this);return e.edit(t,{edit:function(){if(2===arguments.length){var t=arguments[0];arguments[1];return this.coordinateSequenceFactory.create(t)}}})},getPrecisionModel:function(){return this.precisionModel},createLinearRing:function(){if(0===arguments.length)return this.createLinearRing(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return this.createLinearRing(null!==t?this.getCoordinateSequenceFactory().create(t):null)}if(hasInterface(arguments[0],CoordinateSequence)){var t=arguments[0];return new LinearRing(t,this)}}},createMultiPolygon:function(){if(0===arguments.length)return new MultiPolygon(null,this);if(1===arguments.length){var t=arguments[0];return new MultiPolygon(t,this)}},createMultiPoint:function(){if(0===arguments.length)return new MultiPoint(null,this);if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return new MultiPoint(t,this)}if(arguments[0]instanceof Array){var e=arguments[0];return this.createMultiPoint(null!==e?this.getCoordinateSequenceFactory().create(e):null)}if(hasInterface(arguments[0],CoordinateSequence)){var e=arguments[0];if(null===e)return this.createMultiPoint(new Array(0).fill(null));for(var n=new Array(e.size()).fill(null),i=0;i<e.size();i++){var r=this.getCoordinateSequenceFactory().create(1,e.getDimension());CoordinateSequences.copy(e,i,r,0,1),n[i]=this.createPoint(r)}return this.createMultiPoint(n)}}},interfaces_:function(){return[Serializable]},getClass:function(){return GeometryFactory}}),GeometryFactory.toMultiPolygonArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},GeometryFactory.toGeometryArray=function(t){if(null===t)return null;var e=new Array(t.size()).fill(null);return t.toArray(e)},GeometryFactory.getDefaultCoordinateSequenceFactory=function(){return CoordinateArraySequenceFactory.instance()},GeometryFactory.toMultiLineStringArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},GeometryFactory.toLineStringArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},GeometryFactory.toMultiPointArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},GeometryFactory.toLinearRingArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},GeometryFactory.toPointArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},GeometryFactory.toPolygonArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},GeometryFactory.createPointFromInternalCoord=function(t,e){return e.getPrecisionModel().makePrecise(t),e.getFactory().createPoint(t)},GeometryFactory.serialVersionUID=-0x5ea75f2051eeb400;var regExes={typeStr:/^\s*(\w+)\s*\(\s*(.*)\s*\)\s*$/,emptyTypeStr:/^\s*(\w+)\s*EMPTY\s*$/,spaces:/\s+/,parenComma:/\)\s*,\s*\(/,doubleParenComma:/\)\s*\)\s*,\s*\(\s*\(/,trimParens:/^\s*\(?(.*?)\)?\s*$/};extend(WKTParser.prototype,{read:function(t){var e,n,i;t=t.replace(/[\n\r]/g," ");var r=regExes.typeStr.exec(t);if(-1!==t.search("EMPTY")&&(r=regExes.emptyTypeStr.exec(t),r[2]=void 0),r&&(n=r[1].toLowerCase(),i=r[2],parse[n]&&(e=parse[n].apply(this,[i]))),void 0===e)throw new Error("Could not parse WKT "+t);return e},write:function(t){return this.extractGeometry(t)},extractGeometry:function(t){var e=t.getGeometryType().toLowerCase();if(!extract[e])return null;var n,i=e.toUpperCase();return n=t.isEmpty()?i+" EMPTY":i+"("+extract[e].apply(this,[t])+")"}});var extract={coordinate:function(t){return t.x+" "+t.y},point:function(t){return extract.coordinate.call(this,t.coordinates.coordinates[0])},multipoint:function(t){for(var e=[],n=0,i=t.geometries.length;i>n;++n)e.push("("+extract.point.apply(this,[t.geometries[n]])+")");return e.join(",")},linestring:function(t){for(var e=[],n=0,i=t.points.coordinates.length;i>n;++n)e.push(extract.coordinate.apply(this,[t.points.coordinates[n]]));return e.join(",")},linearring:function(t){for(var e=[],n=0,i=t.points.coordinates.length;i>n;++n)e.push(extract.coordinate.apply(this,[t.points.coordinates[n]]));return e.join(",")},multilinestring:function(t){for(var e=[],n=0,i=t.geometries.length;i>n;++n)e.push("("+extract.linestring.apply(this,[t.geometries[n]])+")");return e.join(",")},polygon:function(t){var e=[];e.push("("+extract.linestring.apply(this,[t.shell])+")");for(var n=0,i=t.holes.length;i>n;++n)e.push("("+extract.linestring.apply(this,[t.holes[n]])+")");return e.join(",")},multipolygon:function(t){for(var e=[],n=0,i=t.geometries.length;i>n;++n)e.push("("+extract.polygon.apply(this,[t.geometries[n]])+")");return e.join(",")},geometrycollection:function(t){for(var e=[],n=0,i=t.geometries.length;i>n;++n)e.push(this.extractGeometry(t.geometries[n]));return e.join(",")}},parse={point:function(t){if(void 0===t)return this.geometryFactory.createPoint();var e=t.trim().split(regExes.spaces);return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(e[0]),Number.parseFloat(e[1])))},multipoint:function(t){if(void 0===t)return this.geometryFactory.createMultiPoint();for(var e,n=t.trim().split(","),i=[],r=0,o=n.length;o>r;++r)e=n[r].replace(regExes.trimParens,"$1"),i.push(parse.point.apply(this,[e]));return this.geometryFactory.createMultiPoint(i)},linestring:function(t){if(void 0===t)return this.geometryFactory.createLineString();for(var e,n=t.trim().split(","),i=[],r=0,o=n.length;o>r;++r)e=n[r].trim().split(regExes.spaces),i.push(new Coordinate(Number.parseFloat(e[0]),Number.parseFloat(e[1])));return this.geometryFactory.createLineString(i)},linearring:function(t){if(void 0===t)return this.geometryFactory.createLinearRing();for(var e,n=t.trim().split(","),i=[],r=0,o=n.length;o>r;++r)e=n[r].trim().split(regExes.spaces),i.push(new Coordinate(Number.parseFloat(e[0]),Number.parseFloat(e[1])));return this.geometryFactory.createLinearRing(i)},multilinestring:function(t){if(void 0===t)return this.geometryFactory.createMultiLineString();for(var e,n=t.trim().split(regExes.parenComma),i=[],r=0,o=n.length;o>r;++r)e=n[r].replace(regExes.trimParens,"$1"),i.push(parse.linestring.apply(this,[e]));return this.geometryFactory.createMultiLineString(i)},polygon:function(t){if(void 0===t)return this.geometryFactory.createPolygon();for(var e,n,i,r,o=t.trim().split(regExes.parenComma),s=[],a=0,l=o.length;l>a;++a)e=o[a].replace(regExes.trimParens,"$1"),n=parse.linestring.apply(this,[e]),i=this.geometryFactory.createLinearRing(n.points),0===a?r=i:s.push(i);return this.geometryFactory.createPolygon(r,s)},multipolygon:function(t){if(void 0===t)return this.geometryFactory.createMultiPolygon();for(var e,n=t.trim().split(regExes.doubleParenComma),i=[],r=0,o=n.length;o>r;++r)e=n[r].replace(regExes.trimParens,"$1"),i.push(parse.polygon.apply(this,[e]));return this.geometryFactory.createMultiPolygon(i)},geometrycollection:function(t){if(void 0===t)return this.geometryFactory.createGeometryCollection();t=t.replace(/,\s*([A-Za-z])/g,"|$1");for(var e=t.trim().split("|"),n=[],i=0,r=e.length;r>i;++i)n.push(this.read(e[i]));return this.geometryFactory.createGeometryCollection(n)}};extend(WKTWriter.prototype,{write:function(t){return this.parser.write(t)},toLineString:function(t,e){if(2!==arguments.length)throw new Error("Not implemented");return"LINESTRING ( "+t.x+" "+t.y+", "+e.x+" "+e.y+" )"}}),extend(LineIntersector.prototype,{getIndexAlongSegment:function(t,e){return this.computeIntLineIndex(),this.intLineIndex[t][e]},getTopologySummary:function(){var t=new StringBuffer;return this.isEndPoint()&&t.append(" endpoint"),this._isProper&&t.append(" proper"),this.isCollinear()&&t.append(" collinear"),t.toString()},computeIntersection:function(t,e,n,i){this.inputLines[0][0]=t,this.inputLines[0][1]=e,this.inputLines[1][0]=n,this.inputLines[1][1]=i,this.result=this.computeIntersect(t,e,n,i)},getIntersectionNum:function(){return this.result},computeIntLineIndex:function(){if(0===arguments.length)null===this.intLineIndex&&(this.intLineIndex=Array(2).fill().map(function(){return Array(2)}),this.computeIntLineIndex(0),this.computeIntLineIndex(1));else if(1===arguments.length){var t=arguments[0],e=this.getEdgeDistance(t,0),n=this.getEdgeDistance(t,1);e>n?(this.intLineIndex[t][0]=0,this.intLineIndex[t][1]=1):(this.intLineIndex[t][0]=1,this.intLineIndex[t][1]=0)}},isProper:function(){return this.hasIntersection()&&this._isProper},setPrecisionModel:function(t){this.precisionModel=t},isInteriorIntersection:function(){if(0===arguments.length)return this.isInteriorIntersection(0)?!0:!!this.isInteriorIntersection(1);if(1===arguments.length){for(var t=arguments[0],e=0;e<this.result;e++)if(!this.intPt[e].equals2D(this.inputLines[t][0])&&!this.intPt[e].equals2D(this.inputLines[t][1]))return!0;return!1}},getIntersection:function(t){return this.intPt[t]},isEndPoint:function(){return this.hasIntersection()&&!this._isProper},hasIntersection:function(){return this.result!==LineIntersector.NO_INTERSECTION},getEdgeDistance:function(t,e){var n=LineIntersector.computeEdgeDistance(this.intPt[e],this.inputLines[t][0],this.inputLines[t][1]);return n},isCollinear:function(){return this.result===LineIntersector.COLLINEAR_INTERSECTION},toString:function(){return WKTWriter.toLineString(this.inputLines[0][0],this.inputLines[0][1])+" - "+WKTWriter.toLineString(this.inputLines[1][0],this.inputLines[1][1])+this.getTopologySummary()},getEndpoint:function(t,e){return this.inputLines[t][e]},isIntersection:function(t){for(var e=0;e<this.result;e++)if(this.intPt[e].equals2D(t))return!0;return!1},getIntersectionAlongSegment:function(t,e){return this.computeIntLineIndex(),this.intPt[this.intLineIndex[t][e]]},interfaces_:function(){return[]},getClass:function(){return LineIntersector}}),LineIntersector.computeEdgeDistance=function(t,e,n){var i=Math.abs(n.x-e.x),r=Math.abs(n.y-e.y),o=-1;if(t.equals(e))o=0;else if(t.equals(n))o=i>r?i:r;else{var s=Math.abs(t.x-e.x),a=Math.abs(t.y-e.y);o=i>r?s:a,0!==o||t.equals(e)||(o=Math.max(s,a))}return Assert.isTrue(!(0===o&&!t.equals(e)),"Bad distance calculation"),o},LineIntersector.nonRobustComputeEdgeDistance=function(t,e,n){var i=t.x-e.x,r=t.y-e.y,o=Math.sqrt(i*i+r*r);return Assert.isTrue(!(0===o&&!t.equals(e)),"Invalid distance calculation"),o},LineIntersector.DONT_INTERSECT=0,LineIntersector.DO_INTERSECT=1,LineIntersector.COLLINEAR=2,LineIntersector.NO_INTERSECTION=0,LineIntersector.POINT_INTERSECTION=1,LineIntersector.COLLINEAR_INTERSECTION=2,inherits(RobustLineIntersector,LineIntersector),extend(RobustLineIntersector.prototype,{isInSegmentEnvelopes:function(t){var e=new Envelope(this.inputLines[0][0],this.inputLines[0][1]),n=new Envelope(this.inputLines[1][0],this.inputLines[1][1]);return e.contains(t)&&n.contains(t)},computeIntersection:function(){if(3!==arguments.length)return LineIntersector.prototype.computeIntersection.apply(this,arguments);var t=arguments[0],e=arguments[1],n=arguments[2];return this._isProper=!1,Envelope.intersects(e,n,t)&&0===CGAlgorithms.orientationIndex(e,n,t)&&0===CGAlgorithms.orientationIndex(n,e,t)?(this._isProper=!0,(t.equals(e)||t.equals(n))&&(this._isProper=!1),this.result=LineIntersector.POINT_INTERSECTION,null):void(this.result=LineIntersector.NO_INTERSECTION)},normalizeToMinimum:function(t,e,n,i,r){r.x=this.smallestInAbsValue(t.x,e.x,n.x,i.x),r.y=this.smallestInAbsValue(t.y,e.y,n.y,i.y),t.x-=r.x,t.y-=r.y,e.x-=r.x,e.y-=r.y,n.x-=r.x,n.y-=r.y,i.x-=r.x,i.y-=r.y},safeHCoordinateIntersection:function(t,e,n,i){var r=null;try{r=HCoordinate.intersection(t,e,n,i)}catch(o){if(!(o instanceof NotRepresentableException))throw o;r=RobustLineIntersector.nearestEndpoint(t,e,n,i)}finally{}return r},intersection:function(t,e,n,i){var r=this.intersectionWithNormalization(t,e,n,i);return this.isInSegmentEnvelopes(r)||(r=new Coordinate(RobustLineIntersector.nearestEndpoint(t,e,n,i))),null!==this.precisionModel&&this.precisionModel.makePrecise(r),r},smallestInAbsValue:function(t,e,n,i){var r=t,o=Math.abs(r);return Math.abs(e)<o&&(r=e,o=Math.abs(e)),Math.abs(n)<o&&(r=n,o=Math.abs(n)),Math.abs(i)<o&&(r=i),r},checkDD:function(t,e,n,i,r){var o=CGAlgorithmsDD.intersection(t,e,n,i),s=this.isInSegmentEnvelopes(o);System.out.println("DD in env = "+s+"  --------------------- "+o),r.distance(o)>1e-4&&System.out.println("Distance = "+r.distance(o))},intersectionWithNormalization:function(t,e,n,i){var r=new Coordinate(t),o=new Coordinate(e),s=new Coordinate(n),a=new Coordinate(i),l=new Coordinate;this.normalizeToEnvCentre(r,o,s,a,l);var u=this.safeHCoordinateIntersection(r,o,s,a);return u.x+=l.x,u.y+=l.y,u},computeCollinearIntersection:function(t,e,n,i){var r=Envelope.intersects(t,e,n),o=Envelope.intersects(t,e,i),s=Envelope.intersects(n,i,t),a=Envelope.intersects(n,i,e);return r&&o?(this.intPt[0]=n,this.intPt[1]=i,LineIntersector.COLLINEAR_INTERSECTION):s&&a?(this.intPt[0]=t,this.intPt[1]=e,LineIntersector.COLLINEAR_INTERSECTION):r&&s?(this.intPt[0]=n,this.intPt[1]=t,!n.equals(t)||o||a?LineIntersector.COLLINEAR_INTERSECTION:LineIntersector.POINT_INTERSECTION):r&&a?(this.intPt[0]=n,this.intPt[1]=e,!n.equals(e)||o||s?LineIntersector.COLLINEAR_INTERSECTION:LineIntersector.POINT_INTERSECTION):o&&s?(this.intPt[0]=i,this.intPt[1]=t,!i.equals(t)||r||a?LineIntersector.COLLINEAR_INTERSECTION:LineIntersector.POINT_INTERSECTION):o&&a?(this.intPt[0]=i,this.intPt[1]=e,!i.equals(e)||r||s?LineIntersector.COLLINEAR_INTERSECTION:LineIntersector.POINT_INTERSECTION):LineIntersector.NO_INTERSECTION;
},normalizeToEnvCentre:function(t,e,n,i,r){var o=t.x<e.x?t.x:e.x,s=t.y<e.y?t.y:e.y,a=t.x>e.x?t.x:e.x,l=t.y>e.y?t.y:e.y,u=n.x<i.x?n.x:i.x,c=n.y<i.y?n.y:i.y,h=n.x>i.x?n.x:i.x,d=n.y>i.y?n.y:i.y,g=o>u?o:u,f=h>a?a:h,p=s>c?s:c,m=d>l?l:d,y=(g+f)/2,v=(p+m)/2;r.x=y,r.y=v,t.x-=r.x,t.y-=r.y,e.x-=r.x,e.y-=r.y,n.x-=r.x,n.y-=r.y,i.x-=r.x,i.y-=r.y},computeIntersect:function(t,e,n,i){if(this._isProper=!1,!Envelope.intersects(t,e,n,i))return LineIntersector.NO_INTERSECTION;var r=CGAlgorithms.orientationIndex(t,e,n),o=CGAlgorithms.orientationIndex(t,e,i);if(r>0&&o>0||0>r&&0>o)return LineIntersector.NO_INTERSECTION;var s=CGAlgorithms.orientationIndex(n,i,t),a=CGAlgorithms.orientationIndex(n,i,e);if(s>0&&a>0||0>s&&0>a)return LineIntersector.NO_INTERSECTION;var l=0===r&&0===o&&0===s&&0===a;return l?this.computeCollinearIntersection(t,e,n,i):(0===r||0===o||0===s||0===a?(this._isProper=!1,t.equals2D(n)||t.equals2D(i)?this.intPt[0]=t:e.equals2D(n)||e.equals2D(i)?this.intPt[0]=e:0===r?this.intPt[0]=new Coordinate(n):0===o?this.intPt[0]=new Coordinate(i):0===s?this.intPt[0]=new Coordinate(t):0===a&&(this.intPt[0]=new Coordinate(e))):(this._isProper=!0,this.intPt[0]=this.intersection(t,e,n,i)),LineIntersector.POINT_INTERSECTION)},interfaces_:function(){return[]},getClass:function(){return RobustLineIntersector}}),RobustLineIntersector.nearestEndpoint=function(t,e,n,i){var r=t,o=CGAlgorithms.distancePointLine(t,n,i),s=CGAlgorithms.distancePointLine(e,n,i);return o>s&&(o=s,r=e),s=CGAlgorithms.distancePointLine(n,t,e),o>s&&(o=s,r=n),s=CGAlgorithms.distancePointLine(i,t,e),o>s&&(o=s,r=i),r},extend(RobustDeterminant.prototype,{interfaces_:function(){return[]},getClass:function(){return RobustDeterminant}}),RobustDeterminant.orientationIndex=function(t,e,n){var i=e.x-t.x,r=e.y-t.y,o=n.x-e.x,s=n.y-e.y;return RobustDeterminant.signOfDet2x2(i,r,o,s)},RobustDeterminant.signOfDet2x2=function(t,e,n,i){var r=null,o=null,s=null,a=0;if(r=1,0===t||0===i)return 0===e||0===n?0:e>0?n>0?-r:r:n>0?r:-r;if(0===e||0===n)return i>0?t>0?r:-r:t>0?-r:r;if(e>0?i>0?i>=e||(r=-r,o=t,t=n,n=o,o=e,e=i,i=o):-i>=e?(r=-r,n=-n,i=-i):(o=t,t=-n,n=o,o=e,e=-i,i=o):i>0?i>=-e?(r=-r,t=-t,e=-e):(o=-t,t=n,n=o,o=-e,e=i,i=o):e>=i?(t=-t,e=-e,n=-n,i=-i):(r=-r,o=-t,t=-n,n=o,o=-e,e=-i,i=o),t>0){if(!(n>0))return r;if(!(n>=t))return r}else{if(n>0)return-r;if(!(t>=n))return-r;r=-r,t=-t,n=-n}for(;;){if(a+=1,s=Math.floor(n/t),n-=s*t,i-=s*e,0>i)return-r;if(i>e)return r;if(t>n+n){if(i+i>e)return r}else{if(e>i+i)return-r;n=t-n,i=e-i,r=-r}if(0===i)return 0===n?0:-r;if(0===n)return r;if(s=Math.floor(t/n),t-=s*n,e-=s*i,0>e)return r;if(e>i)return-r;if(n>t+t){if(e+e>i)return-r}else{if(i>e+e)return r;t=n-t,e=i-e,r=-r}if(0===e)return 0===t?0:r;if(0===t)return-r}},extend(RayCrossingCounter.prototype,{countSegment:function(t,e){if(t.x<this.p.x&&e.x<this.p.x)return null;if(this.p.x===e.x&&this.p.y===e.y)return this.isPointOnSegment=!0,null;if(t.y===this.p.y&&e.y===this.p.y){var n=t.x,i=e.x;return n>i&&(n=e.x,i=t.x),this.p.x>=n&&this.p.x<=i&&(this.isPointOnSegment=!0),null}if(t.y>this.p.y&&e.y<=this.p.y||e.y>this.p.y&&t.y<=this.p.y){var r=t.x-this.p.x,o=t.y-this.p.y,s=e.x-this.p.x,a=e.y-this.p.y,l=RobustDeterminant.signOfDet2x2(r,o,s,a);if(0===l)return this.isPointOnSegment=!0,null;o>a&&(l=-l),l>0&&this.crossingCount++}},isPointInPolygon:function(){return this.getLocation()!==Location.EXTERIOR},getLocation:function(){return this.isPointOnSegment?Location.BOUNDARY:this.crossingCount%2===1?Location.INTERIOR:Location.EXTERIOR},isOnSegment:function(){return this.isPointOnSegment},interfaces_:function(){return[]},getClass:function(){return RayCrossingCounter}}),RayCrossingCounter.locatePointInRing=function(){if(arguments[0]instanceof Coordinate&&hasInterface(arguments[1],CoordinateSequence)){for(var t=arguments[0],e=arguments[1],n=new RayCrossingCounter(t),i=new Coordinate,r=new Coordinate,o=1;o<e.size();o++)if(e.getCoordinate(o,i),e.getCoordinate(o-1,r),n.countSegment(i,r),n.isOnSegment())return n.getLocation();return n.getLocation()}if(arguments[0]instanceof Coordinate&&arguments[1]instanceof Array){for(var t=arguments[0],e=arguments[1],n=new RayCrossingCounter(t),o=1;o<e.length;o++){var i=e[o],r=e[o-1];if(n.countSegment(i,r),n.isOnSegment())return n.getLocation()}return n.getLocation()}},extend(CGAlgorithms.prototype,{interfaces_:function(){return[]},getClass:function(){return CGAlgorithms}}),CGAlgorithms.orientationIndex=function(t,e,n){return CGAlgorithmsDD.orientationIndex(t,e,n)},CGAlgorithms.signedArea=function(){if(arguments[0]instanceof Array){var t=arguments[0];if(t.length<3)return 0;for(var e=0,n=t[0].x,i=1;i<t.length-1;i++){var r=t[i].x-n,o=t[i+1].y,s=t[i-1].y;e+=r*(s-o)}return e/2}if(hasInterface(arguments[0],CoordinateSequence)){var t=arguments[0],a=t.size();if(3>a)return 0;var l=new Coordinate,u=new Coordinate,c=new Coordinate;t.getCoordinate(0,u),t.getCoordinate(1,c);var n=u.x;c.x-=n;for(var e=0,i=1;a-1>i;i++)l.y=u.y,u.x=c.x,u.y=c.y,t.getCoordinate(i+1,c),c.x-=n,e+=u.x*(l.y-c.y);return e/2}},CGAlgorithms.distanceLineLine=function(t,e,n,i){if(t.equals(e))return CGAlgorithms.distancePointLine(t,n,i);if(n.equals(i))return CGAlgorithms.distancePointLine(i,t,e);var r=!1;if(Envelope.intersects(t,e,n,i)){var o=(e.x-t.x)*(i.y-n.y)-(e.y-t.y)*(i.x-n.x);if(0===o)r=!0;else{var s=(t.y-n.y)*(i.x-n.x)-(t.x-n.x)*(i.y-n.y),a=(t.y-n.y)*(e.x-t.x)-(t.x-n.x)*(e.y-t.y),l=a/o,u=s/o;(0>u||u>1||0>l||l>1)&&(r=!0)}}else r=!0;return r?MathUtil.min(CGAlgorithms.distancePointLine(t,n,i),CGAlgorithms.distancePointLine(e,n,i),CGAlgorithms.distancePointLine(n,t,e),CGAlgorithms.distancePointLine(i,t,e)):0},CGAlgorithms.isPointInRing=function(t,e){return CGAlgorithms.locatePointInRing(t,e)!==Location.EXTERIOR},CGAlgorithms.computeLength=function(t){var e=t.size();if(1>=e)return 0;var n=0,i=new Coordinate;t.getCoordinate(0,i);for(var r=i.x,o=i.y,s=1;e>s;s++){t.getCoordinate(s,i);var a=i.x,l=i.y,u=a-r,c=l-o;n+=Math.sqrt(u*u+c*c),r=a,o=l}return n},CGAlgorithms.isCCW=function(t){var e=t.length-1;if(3>e)throw new IllegalArgumentException("Ring has fewer than 4 points, so orientation cannot be determined");for(var n=t[0],i=0,r=1;e>=r;r++){var o=t[r];o.y>n.y&&(n=o,i=r)}var s=i;do s-=1,0>s&&(s=e);while(t[s].equals2D(n)&&s!==i);var a=i;do a=(a+1)%e;while(t[a].equals2D(n)&&a!==i);var l=t[s],u=t[a];if(l.equals2D(n)||u.equals2D(n)||l.equals2D(u))return!1;var c=CGAlgorithms.computeOrientation(l,n,u),h=!1;return h=0===c?l.x>u.x:c>0},CGAlgorithms.locatePointInRing=function(t,e){return RayCrossingCounter.locatePointInRing(t,e)},CGAlgorithms.distancePointLinePerpendicular=function(t,e,n){var i=(n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y),r=((e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y))/i;return Math.abs(r)*Math.sqrt(i)},CGAlgorithms.computeOrientation=function(t,e,n){return CGAlgorithms.orientationIndex(t,e,n)},CGAlgorithms.distancePointLine=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(0===e.length)throw new IllegalArgumentException("Line array must contain at least one vertex");for(var n=t.distance(e[0]),i=0;i<e.length-1;i++){var r=CGAlgorithms.distancePointLine(t,e[i],e[i+1]);n>r&&(n=r)}return n}if(3===arguments.length){var t=arguments[0],o=arguments[1],s=arguments[2];if(o.x===s.x&&o.y===s.y)return t.distance(o);var a=(s.x-o.x)*(s.x-o.x)+(s.y-o.y)*(s.y-o.y),l=((t.x-o.x)*(s.x-o.x)+(t.y-o.y)*(s.y-o.y))/a;if(0>=l)return t.distance(o);if(l>=1)return t.distance(s);var u=((o.y-t.y)*(s.x-o.x)-(o.x-t.x)*(s.y-o.y))/a;return Math.abs(u)*Math.sqrt(a)}},CGAlgorithms.isOnLine=function(t,e){for(var n=new RobustLineIntersector,i=1;i<e.length;i++){var r=e[i-1],o=e[i];if(n.computeIntersection(t,r,o),n.hasIntersection())return!0}return!1},CGAlgorithms.CLOCKWISE=-1,CGAlgorithms.RIGHT=CGAlgorithms.CLOCKWISE,CGAlgorithms.COUNTERCLOCKWISE=1,CGAlgorithms.LEFT=CGAlgorithms.COUNTERCLOCKWISE,CGAlgorithms.COLLINEAR=0,CGAlgorithms.STRAIGHT=CGAlgorithms.COLLINEAR,extend(LineSegment.prototype,{minX:function(){return Math.min(this.p0.x,this.p1.x)},orientationIndex:function(){if(arguments[0]instanceof LineSegment){var t=arguments[0],e=CGAlgorithms.orientationIndex(this.p0,this.p1,t.p0),n=CGAlgorithms.orientationIndex(this.p0,this.p1,t.p1);return e>=0&&n>=0?Math.max(e,n):0>=e&&0>=n?Math.max(e,n):0}if(arguments[0]instanceof Coordinate){var i=arguments[0];return CGAlgorithms.orientationIndex(this.p0,this.p1,i)}},toGeometry:function(t){return t.createLineString([this.p0,this.p1])},isVertical:function(){return this.p0.x===this.p1.x},equals:function(t){if(!(t instanceof LineSegment))return!1;var e=t;return this.p0.equals(e.p0)&&this.p1.equals(e.p1)},intersection:function(t){var e=new RobustLineIntersector;return e.computeIntersection(this.p0,this.p1,t.p0,t.p1),e.hasIntersection()?e.getIntersection(0):null},project:function(){if(arguments[0]instanceof Coordinate){var t=arguments[0];if(t.equals(this.p0)||t.equals(this.p1))return new Coordinate(t);var e=this.projectionFactor(t),n=new Coordinate;return n.x=this.p0.x+e*(this.p1.x-this.p0.x),n.y=this.p0.y+e*(this.p1.y-this.p0.y),n}if(arguments[0]instanceof LineSegment){var i=arguments[0],r=this.projectionFactor(i.p0),o=this.projectionFactor(i.p1);if(r>=1&&o>=1)return null;if(0>=r&&0>=o)return null;var s=this.project(i.p0);0>r&&(s=this.p0),r>1&&(s=this.p1);var a=this.project(i.p1);return 0>o&&(a=this.p0),o>1&&(a=this.p1),new LineSegment(s,a)}},normalize:function(){this.p1.compareTo(this.p0)<0&&this.reverse()},angle:function(){return Math.atan2(this.p1.y-this.p0.y,this.p1.x-this.p0.x)},getCoordinate:function(t){return 0===t?this.p0:this.p1},distancePerpendicular:function(t){return CGAlgorithms.distancePointLinePerpendicular(t,this.p0,this.p1)},minY:function(){return Math.min(this.p0.y,this.p1.y)},midPoint:function(){return LineSegment.midPoint(this.p0,this.p1)},projectionFactor:function(t){if(t.equals(this.p0))return 0;if(t.equals(this.p1))return 1;var e=this.p1.x-this.p0.x,n=this.p1.y-this.p0.y,i=e*e+n*n;if(0>=i)return Double.NaN;var r=((t.x-this.p0.x)*e+(t.y-this.p0.y)*n)/i;return r},closestPoints:function(t){var e=this.intersection(t);if(null!==e)return[e,e];var n=new Array(2).fill(null),i=Double.MAX_VALUE,r=null,o=this.closestPoint(t.p0);i=o.distance(t.p0),n[0]=o,n[1]=t.p0;var s=this.closestPoint(t.p1);r=s.distance(t.p1),i>r&&(i=r,n[0]=s,n[1]=t.p1);var a=t.closestPoint(this.p0);r=a.distance(this.p0),i>r&&(i=r,n[0]=this.p0,n[1]=a);var l=t.closestPoint(this.p1);return r=l.distance(this.p1),i>r&&(i=r,n[0]=this.p1,n[1]=l),n},closestPoint:function(t){var e=this.projectionFactor(t);if(e>0&&1>e)return this.project(t);var n=this.p0.distance(t),i=this.p1.distance(t);return i>n?this.p0:this.p1},maxX:function(){return Math.max(this.p0.x,this.p1.x)},getLength:function(){return this.p0.distance(this.p1)},compareTo:function(t){var e=t,n=this.p0.compareTo(e.p0);return 0!==n?n:this.p1.compareTo(e.p1)},reverse:function(){var t=this.p0;this.p0=this.p1,this.p1=t},equalsTopo:function(t){return this.p0.equals(t.p0)&&this.p1.equals(t.p1)||this.p0.equals(t.p1)&&this.p1.equals(t.p0)},lineIntersection:function(t){try{var e=HCoordinate.intersection(this.p0,this.p1,t.p0,t.p1);return e}catch(t){if(!(t instanceof NotRepresentableException))throw t}finally{}return null},maxY:function(){return Math.max(this.p0.y,this.p1.y)},pointAlongOffset:function(t,e){var n=this.p0.x+t*(this.p1.x-this.p0.x),i=this.p0.y+t*(this.p1.y-this.p0.y),r=this.p1.x-this.p0.x,o=this.p1.y-this.p0.y,s=Math.sqrt(r*r+o*o),a=0,l=0;if(0!==e){if(0>=s)throw new IllegalStateException("Cannot compute offset from zero-length line segment");a=e*r/s,l=e*o/s}var u=n-l,c=i+a,h=new Coordinate(u,c);return h},setCoordinates:function(){if(1===arguments.length){var t=arguments[0];this.setCoordinates(t.p0,t.p1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.p0.x=e.x,this.p0.y=e.y,this.p1.x=n.x,this.p1.y=n.y}},segmentFraction:function(t){var e=this.projectionFactor(t);return 0>e?e=0:(e>1||Double.isNaN(e))&&(e=1),e},toString:function(){return"LINESTRING( "+this.p0.x+" "+this.p0.y+", "+this.p1.x+" "+this.p1.y+")"},isHorizontal:function(){return this.p0.y===this.p1.y},distance:function(){if(arguments[0]instanceof LineSegment){var t=arguments[0];return CGAlgorithms.distanceLineLine(this.p0,this.p1,t.p0,t.p1)}if(arguments[0]instanceof Coordinate){var e=arguments[0];return CGAlgorithms.distancePointLine(e,this.p0,this.p1)}},pointAlong:function(t){var e=new Coordinate;return e.x=this.p0.x+t*(this.p1.x-this.p0.x),e.y=this.p0.y+t*(this.p1.y-this.p0.y),e},hashCode:function(){var t=java.lang.Double.doubleToLongBits(this.p0.x);t^=31*java.lang.Double.doubleToLongBits(this.p0.y);var e=Math.trunc(t)^Math.trunc(t>>32),n=java.lang.Double.doubleToLongBits(this.p1.x);n^=31*java.lang.Double.doubleToLongBits(this.p1.y);var i=Math.trunc(n)^Math.trunc(n>>32);return e^i},interfaces_:function(){return[Comparable,Serializable]},getClass:function(){return LineSegment}}),LineSegment.midPoint=function(t,e){return new Coordinate((t.x+e.x)/2,(t.y+e.y)/2)},LineSegment.serialVersionUID=0x2d2172135f411c00,extend(IntersectionMatrix.prototype,{isIntersects:function(){return!this.isDisjoint()},isCovers:function(){var t=IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR])||IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.BOUNDARY])||IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.INTERIOR])||IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.BOUNDARY]);return t&&this.matrix[Location.EXTERIOR][Location.INTERIOR]===Dimension.FALSE&&this.matrix[Location.EXTERIOR][Location.BOUNDARY]===Dimension.FALSE},isCoveredBy:function(){var t=IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR])||IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.BOUNDARY])||IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.INTERIOR])||IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.BOUNDARY]);return t&&this.matrix[Location.INTERIOR][Location.EXTERIOR]===Dimension.FALSE&&this.matrix[Location.BOUNDARY][Location.EXTERIOR]===Dimension.FALSE},set:function(){if(1===arguments.length)for(var t=arguments[0],e=0;e<t.length;e++){var n=Math.trunc(e/3),i=e%3;this.matrix[n][i]=Dimension.toDimensionValue(t.charAt(e))}else if(3===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2];this.matrix[r][o]=s}},isContains:function(){return IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR])&&this.matrix[Location.EXTERIOR][Location.INTERIOR]===Dimension.FALSE&&this.matrix[Location.EXTERIOR][Location.BOUNDARY]===Dimension.FALSE},setAtLeast:function(){if(1===arguments.length)for(var t=arguments[0],e=0;e<t.length;e++){var n=Math.trunc(e/3),i=e%3;this.setAtLeast(n,i,Dimension.toDimensionValue(t.charAt(e)))}else if(3===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2];this.matrix[r][o]<s&&(this.matrix[r][o]=s)}},setAtLeastIfValid:function(t,e,n){t>=0&&e>=0&&this.setAtLeast(t,e,n)},isWithin:function(){return IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR])&&this.matrix[Location.INTERIOR][Location.EXTERIOR]===Dimension.FALSE&&this.matrix[Location.BOUNDARY][Location.EXTERIOR]===Dimension.FALSE},isTouches:function(t,e){return t>e?this.isTouches(e,t):t===Dimension.A&&e===Dimension.A||t===Dimension.L&&e===Dimension.L||t===Dimension.L&&e===Dimension.A||t===Dimension.P&&e===Dimension.A||t===Dimension.P&&e===Dimension.L?this.matrix[Location.INTERIOR][Location.INTERIOR]===Dimension.FALSE&&(IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.BOUNDARY])||IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.INTERIOR])||IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.BOUNDARY])):!1},isOverlaps:function(t,e){return t===Dimension.P&&e===Dimension.P||t===Dimension.A&&e===Dimension.A?IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR])&&IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.EXTERIOR])&&IntersectionMatrix.isTrue(this.matrix[Location.EXTERIOR][Location.INTERIOR]):t===Dimension.L&&e===Dimension.L?1===this.matrix[Location.INTERIOR][Location.INTERIOR]&&IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.EXTERIOR])&&IntersectionMatrix.isTrue(this.matrix[Location.EXTERIOR][Location.INTERIOR]):!1},isEquals:function(t,e){return t!==e?!1:IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR])&&this.matrix[Location.INTERIOR][Location.EXTERIOR]===Dimension.FALSE&&this.matrix[Location.BOUNDARY][Location.EXTERIOR]===Dimension.FALSE&&this.matrix[Location.EXTERIOR][Location.INTERIOR]===Dimension.FALSE&&this.matrix[Location.EXTERIOR][Location.BOUNDARY]===Dimension.FALSE},toString:function(){for(var t=new StringBuffer("123456789"),e=0;3>e;e++)for(var n=0;3>n;n++)t.setCharAt(3*e+n,Dimension.toDimensionSymbol(this.matrix[e][n]));return t.toString()},setAll:function(t){for(var e=0;3>e;e++)for(var n=0;3>n;n++)this.matrix[e][n]=t},get:function(t,e){return this.matrix[t][e]},transpose:function(){var t=this.matrix[1][0];return this.matrix[1][0]=this.matrix[0][1],this.matrix[0][1]=t,t=this.matrix[2][0],this.matrix[2][0]=this.matrix[0][2],this.matrix[0][2]=t,t=this.matrix[2][1],this.matrix[2][1]=this.matrix[1][2],this.matrix[1][2]=t,this},matches:function(t){if(9!==t.length)throw new IllegalArgumentException("Should be length 9: "+t);for(var e=0;3>e;e++)for(var n=0;3>n;n++)if(!IntersectionMatrix.matches(this.matrix[e][n],t.charAt(3*e+n)))return!1;return!0},add:function(t){for(var e=0;3>e;e++)for(var n=0;3>n;n++)this.setAtLeast(e,n,t.get(e,n))},isDisjoint:function(){return this.matrix[Location.INTERIOR][Location.INTERIOR]===Dimension.FALSE&&this.matrix[Location.INTERIOR][Location.BOUNDARY]===Dimension.FALSE&&this.matrix[Location.BOUNDARY][Location.INTERIOR]===Dimension.FALSE&&this.matrix[Location.BOUNDARY][Location.BOUNDARY]===Dimension.FALSE},isCrosses:function(t,e){return t===Dimension.P&&e===Dimension.L||t===Dimension.P&&e===Dimension.A||t===Dimension.L&&e===Dimension.A?IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR])&&IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.EXTERIOR]):t===Dimension.L&&e===Dimension.P||t===Dimension.A&&e===Dimension.P||t===Dimension.A&&e===Dimension.L?IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR])&&IntersectionMatrix.isTrue(this.matrix[Location.EXTERIOR][Location.INTERIOR]):t===Dimension.L&&e===Dimension.L?0===this.matrix[Location.INTERIOR][Location.INTERIOR]:!1},interfaces_:function(){return[Clonable]},getClass:function(){return IntersectionMatrix}}),IntersectionMatrix.matches=function(){if(Number.isInteger(arguments[0])&&"string"==typeof arguments[1]){var t=arguments[0],e=arguments[1];return e===Dimension.SYM_DONTCARE?!0:e===Dimension.SYM_TRUE&&(t>=0||t===Dimension.TRUE)?!0:e===Dimension.SYM_FALSE&&t===Dimension.FALSE?!0:e===Dimension.SYM_P&&t===Dimension.P?!0:e===Dimension.SYM_L&&t===Dimension.L?!0:e===Dimension.SYM_A&&t===Dimension.A}if("string"==typeof arguments[0]&&"string"==typeof arguments[1]){var n=arguments[0],i=arguments[1],r=new IntersectionMatrix(n);return r.matches(i)}},IntersectionMatrix.isTrue=function(t){return t>=0||t===Dimension.TRUE},extend(Centroid.prototype,{addPoint:function(t){this.ptCount+=1,this.ptCentSum.x+=t.x,this.ptCentSum.y+=t.y},setBasePoint:function(t){null===this.areaBasePt&&(this.areaBasePt=t)},addLineSegments:function(t){for(var e=0,n=0;n<t.length-1;n++){var i=t[n].distance(t[n+1]);if(0!==i){e+=i;var r=(t[n].x+t[n+1].x)/2;this.lineCentSum.x+=i*r;var o=(t[n].y+t[n+1].y)/2;this.lineCentSum.y+=i*o}}this.totalLength+=e,0===e&&t.length>0&&this.addPoint(t[0])},addHole:function(t){for(var e=CGAlgorithms.isCCW(t),n=0;n<t.length-1;n++)this.addTriangle(this.areaBasePt,t[n],t[n+1],e);this.addLineSegments(t)},getCentroid:function(){var t=new Coordinate;if(Math.abs(this.areasum2)>0)t.x=this.cg3.x/3/this.areasum2,t.y=this.cg3.y/3/this.areasum2;else if(this.totalLength>0)t.x=this.lineCentSum.x/this.totalLength,t.y=this.lineCentSum.y/this.totalLength;else{if(!(this.ptCount>0))return null;t.x=this.ptCentSum.x/this.ptCount,t.y=this.ptCentSum.y/this.ptCount}return t},addShell:function(t){t.length>0&&this.setBasePoint(t[0]);for(var e=!CGAlgorithms.isCCW(t),n=0;n<t.length-1;n++)this.addTriangle(this.areaBasePt,t[n],t[n+1],e);this.addLineSegments(t)},addTriangle:function(t,e,n,i){var r=i?1:-1;Centroid.centroid3(t,e,n,this.triangleCent3);var o=Centroid.area2(t,e,n);this.cg3.x+=r*o*this.triangleCent3.x,this.cg3.y+=r*o*this.triangleCent3.y,this.areasum2+=r*o},add:function(){if(arguments[0]instanceof Polygon){var t=arguments[0];this.addShell(t.getExteriorRing().getCoordinates());for(var e=0;e<t.getNumInteriorRing();e++)this.addHole(t.getInteriorRingN(e).getCoordinates())}else if(arguments[0]instanceof Geometry){var n=arguments[0];if(n.isEmpty())return null;if(n instanceof Point)this.addPoint(n.getCoordinate());else if(n instanceof LineString)this.addLineSegments(n.getCoordinates());else if(n instanceof Polygon){var i=n;this.add(i)}else if(n instanceof GeometryCollection)for(var r=n,e=0;e<r.getNumGeometries();e++)this.add(r.getGeometryN(e))}},interfaces_:function(){return[]},getClass:function(){return Centroid}}),Centroid.area2=function(t,e,n){return(e.x-t.x)*(n.y-t.y)-(n.x-t.x)*(e.y-t.y)},Centroid.centroid3=function(t,e,n,i){return i.x=t.x+e.x+n.x,i.y=t.y+e.y+n.y,null},Centroid.getCentroid=function(t){var e=new Centroid(t);return e.getCentroid()},EmptyStackException.prototype=new Error,EmptyStackException.prototype.name="EmptyStackException",Stack.prototype=new List,Stack.prototype.add=function(t){return this.array_.push(t),!0},Stack.prototype.get=function(t){if(0>t||t>=this.size())throw new IndexOutOfBoundsException;return this.array_[t]},Stack.prototype.push=function(t){return this.array_.push(t),t},Stack.prototype.pop=function(t){if(0===this.array_.length)throw new EmptyStackException;return this.array_.pop()},Stack.prototype.peek=function(){if(0===this.array_.length)throw new EmptyStackException;return this.array_[this.array_.length-1]},Stack.prototype.empty=function(){return 0===this.array_.length},Stack.prototype.isEmpty=function(){return this.empty()},Stack.prototype.search=function(t){return this.array_.indexOf(t)},Stack.prototype.size=function(){return this.array_.length},Stack.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;n>e;e++)t.push(this.array_[e]);return t},extend(UniqueCoordinateArrayFilter.prototype,{filter:function(t){this.treeSet.contains(t)||(this.list.add(t),this.treeSet.add(t))},getCoordinates:function(){var t=new Array(this.list.size()).fill(null);return this.list.toArray(t)},interfaces_:function(){return[CoordinateFilter]},getClass:function(){return UniqueCoordinateArrayFilter}}),UniqueCoordinateArrayFilter.filterCoordinates=function(t){for(var e=new UniqueCoordinateArrayFilter,n=0;n<t.length;n++)e.filter(t[n]);return e.getCoordinates()},extend(ConvexHull.prototype,{preSort:function(t){for(var e=null,n=1;n<t.length;n++)(t[n].y<t[0].y||t[n].y===t[0].y&&t[n].x<t[0].x)&&(e=t[0],t[0]=t[n],t[n]=e);return Arrays.sort(t,1,t.length,new RadialComparator(t[0])),t},computeOctRing:function(t){var e=this.computeOctPts(t),n=new CoordinateList;return n.add(e,!1),n.size()<3?null:(n.closeRing(),n.toCoordinateArray())},lineOrPolygon:function(t){if(t=this.cleanRing(t),3===t.length)return this.geomFactory.createLineString([t[0],t[1]]);var e=this.geomFactory.createLinearRing(t);return this.geomFactory.createPolygon(e,null)},cleanRing:function(t){Assert.equals(t[0],t[t.length-1]);for(var e=new ArrayList,n=null,i=0;i<=t.length-2;i++){var r=t[i],o=t[i+1];r.equals(o)||null!==n&&this.isBetween(n,r,o)||(e.add(r),n=r)}e.add(t[t.length-1]);var s=new Array(e.size()).fill(null);return e.toArray(s)},isBetween:function(t,e,n){if(0!==CGAlgorithms.computeOrientation(t,e,n))return!1;if(t.x!==n.x){if(t.x<=e.x&&e.x<=n.x)return!0;if(n.x<=e.x&&e.x<=t.x)return!0}if(t.y!==n.y){if(t.y<=e.y&&e.y<=n.y)return!0;if(n.y<=e.y&&e.y<=t.y)return!0}return!1},reduce:function(t){var e=this.computeOctRing(t);if(null===e)return t;for(var n=new TreeSet,i=0;i<e.length;i++)n.add(e[i]);for(var i=0;i<t.length;i++)CGAlgorithms.isPointInRing(t[i],e)||n.add(t[i]);var r=CoordinateArrays.toCoordinateArray(n);return r.length<3?this.padArray3(r):r},getConvexHull:function(){if(0===this.inputPts.length)return this.geomFactory.createGeometryCollection(null);if(1===this.inputPts.length)return this.geomFactory.createPoint(this.inputPts[0]);if(2===this.inputPts.length)return this.geomFactory.createLineString(this.inputPts);var t=this.inputPts;this.inputPts.length>50&&(t=this.reduce(this.inputPts));var e=this.preSort(t),n=this.grahamScan(e),i=this.toCoordinateArray(n);return this.lineOrPolygon(i)},padArray3:function(t){for(var e=new Array(3).fill(null),n=0;n<e.length;n++)n<t.length?e[n]=t[n]:e[n]=t[0];return e},computeOctPts:function(t){for(var e=new Array(8).fill(null),n=0;n<e.length;n++)e[n]=t[0];for(var i=1;i<t.length;i++)t[i].x<e[0].x&&(e[0]=t[i]),t[i].x-t[i].y<e[1].x-e[1].y&&(e[1]=t[i]),t[i].y>e[2].y&&(e[2]=t[i]),t[i].x+t[i].y>e[3].x+e[3].y&&(e[3]=t[i]),t[i].x>e[4].x&&(e[4]=t[i]),t[i].x-t[i].y>e[5].x-e[5].y&&(e[5]=t[i]),t[i].y<e[6].y&&(e[6]=t[i]),t[i].x+t[i].y<e[7].x+e[7].y&&(e[7]=t[i]);return e},toCoordinateArray:function(t){for(var e=new Array(t.size()).fill(null),n=0;n<t.size();n++){var i=t.get(n);e[n]=i}return e},grahamScan:function(t){var e=null,n=new Stack;e=n.push(t[0]),e=n.push(t[1]),e=n.push(t[2]);for(var i=3;i<t.length;i++){for(e=n.pop();!n.empty()&&CGAlgorithms.computeOrientation(n.peek(),e,t[i])>0;)e=n.pop();e=n.push(e),e=n.push(t[i])}return e=n.push(t[0]),n},interfaces_:function(){return[]},getClass:function(){return ConvexHull}}),ConvexHull.extractCoordinates=function(t){var e=new UniqueCoordinateArrayFilter;return t.apply(e),e.getCoordinates()},extend(RadialComparator.prototype,{compare:function(t,e){var n=t,i=e;return RadialComparator.polarCompare(this.origin,n,i)},interfaces_:function(){return[Comparator]},getClass:function(){return RadialComparator}}),RadialComparator.polarCompare=function(t,e,n){var i=e.x-t.x,r=e.y-t.y,o=n.x-t.x,s=n.y-t.y,a=CGAlgorithms.computeOrientation(t,e,n);if(a===CGAlgorithms.COUNTERCLOCKWISE)return 1;if(a===CGAlgorithms.CLOCKWISE)return-1;var l=i*i+r*r,u=o*o+s*s;return u>l?-1:l>u?1:0},ConvexHull.RadialComparator=RadialComparator,extend(InteriorPointArea.prototype,{addPolygon:function(t){if(t.isEmpty())return null;var e=null,n=0,i=this.horizontalBisector(t);if(0===i.getLength())n=0,e=i.getCoordinate();else{var r=i.intersection(t),o=this.widestGeometry(r);n=o.getEnvelopeInternal().getWidth(),e=InteriorPointArea.centre(o.getEnvelopeInternal())}(null===this.interiorPoint||n>this.maxWidth)&&(this.interiorPoint=e,this.maxWidth=n)},getInteriorPoint:function(){return this.interiorPoint},widestGeometry:function t(){if(arguments[0]instanceof GeometryCollection){var e=arguments[0];if(e.isEmpty())return e;for(var t=e.getGeometryN(0),n=1;n<e.getNumGeometries();n++)e.getGeometryN(n).getEnvelopeInternal().getWidth()>t.getEnvelopeInternal().getWidth()&&(t=e.getGeometryN(n));return t}if(arguments[0]instanceof Geometry){var i=arguments[0];return i instanceof GeometryCollection?this.widestGeometry(i):i}},horizontalBisector:function(t){var e=t.getEnvelopeInternal(),n=SafeBisectorFinder.getBisectorY(t);return this.factory.createLineString([new Coordinate(e.getMinX(),n),new Coordinate(e.getMaxX(),n)])},add:function(t){if(t instanceof Polygon)this.addPolygon(t);else if(t instanceof GeometryCollection)for(var e=t,n=0;n<e.getNumGeometries();n++)this.add(e.getGeometryN(n))},interfaces_:function(){return[]},getClass:function(){return InteriorPointArea}}),InteriorPointArea.centre=function(t){return new Coordinate(InteriorPointArea.avg(t.getMinX(),t.getMaxX()),InteriorPointArea.avg(t.getMinY(),t.getMaxY()))},InteriorPointArea.avg=function(t,e){return(t+e)/2},extend(SafeBisectorFinder.prototype,{updateInterval:function(t){t<=this.centreY?t>this.loY&&(this.loY=t):t>this.centreY&&t<this.hiY&&(this.hiY=t)},getBisectorY:function(){this.process(this.poly.getExteriorRing());for(var t=0;t<this.poly.getNumInteriorRing();t++)this.process(this.poly.getInteriorRingN(t));var e=InteriorPointArea.avg(this.hiY,this.loY);return e},process:function(t){for(var e=t.getCoordinateSequence(),n=0;n<e.size();n++){var i=e.getY(n);this.updateInterval(i)}},interfaces_:function(){return[]},getClass:function(){return SafeBisectorFinder}}),SafeBisectorFinder.getBisectorY=function(t){var e=new SafeBisectorFinder(t);return e.getBisectorY()},InteriorPointArea.SafeBisectorFinder=SafeBisectorFinder,extend(InteriorPointLine.prototype,{addEndpoints:function(){if(arguments[0]instanceof Geometry){var t=arguments[0];if(t instanceof LineString)this.addEndpoints(t.getCoordinates());else if(t instanceof GeometryCollection)for(var e=t,n=0;n<e.getNumGeometries();n++)this.addEndpoints(e.getGeometryN(n))}else if(arguments[0]instanceof Array){var i=arguments[0];this.add(i[0]),this.add(i[i.length-1])}},getInteriorPoint:function(){return this.interiorPoint},addInterior:function(){if(arguments[0]instanceof Geometry){var t=arguments[0];if(t instanceof LineString)this.addInterior(t.getCoordinates());else if(t instanceof GeometryCollection)for(var e=t,n=0;n<e.getNumGeometries();n++)this.addInterior(e.getGeometryN(n))}else if(arguments[0]instanceof Array)for(var i=arguments[0],n=1;n<i.length-1;n++)this.add(i[n])},add:function(t){var e=t.distance(this.centroid);e<this.minDistance&&(this.interiorPoint=new Coordinate(t),this.minDistance=e)},interfaces_:function(){return[]},getClass:function(){return InteriorPointLine}}),extend(InteriorPointPoint.prototype,{getInteriorPoint:function(){return this.interiorPoint},add:function(){if(arguments[0]instanceof Geometry){var t=arguments[0];if(t instanceof Point)this.add(t.getCoordinate());else if(t instanceof GeometryCollection)for(var e=t,n=0;n<e.getNumGeometries();n++)this.add(e.getGeometryN(n))}else if(arguments[0]instanceof Coordinate){var i=arguments[0],r=i.distance(this.centroid);r<this.minDistance&&(this.interiorPoint=new Coordinate(i),this.minDistance=r)}},interfaces_:function(){return[]},getClass:function(){return InteriorPointPoint}}),extend(Angle$1.prototype,{interfaces_:function(){return[]},getClass:function(){return Angle$1}}),Angle$1.toDegrees=function(t){return 180*t/Math.PI},Angle$1.normalize=function(t){for(;t>Math.PI;)t-=Angle$1.PI_TIMES_2;for(;t<=-Math.PI;)t+=Angle$1.PI_TIMES_2;return t},Angle$1.angle=function(){if(1===arguments.length){var t=arguments[0];return Math.atan2(t.y,t.x)}if(2===arguments.length){var e=arguments[0],n=arguments[1],i=n.x-e.x,r=n.y-e.y;return Math.atan2(r,i)}},Angle$1.isAcute=function(t,e,n){var i=t.x-e.x,r=t.y-e.y,o=n.x-e.x,s=n.y-e.y,a=i*o+r*s;return a>0},Angle$1.isObtuse=function(t,e,n){var i=t.x-e.x,r=t.y-e.y,o=n.x-e.x,s=n.y-e.y,a=i*o+r*s;return 0>a},Angle$1.interiorAngle=function(t,e,n){var i=Angle$1.angle(e,t),r=Angle$1.angle(e,n);return Math.abs(r-i)},Angle$1.normalizePositive=function(t){if(0>t){for(;0>t;)t+=Angle$1.PI_TIMES_2;t>=Angle$1.PI_TIMES_2&&(t=0)}else{for(;t>=Angle$1.PI_TIMES_2;)t-=Angle$1.PI_TIMES_2;0>t&&(t=0)}return t},Angle$1.angleBetween=function(t,e,n){var i=Angle$1.angle(e,t),r=Angle$1.angle(e,n);return Angle$1.diff(i,r)},Angle$1.diff=function(t,e){var n=null;return n=e>t?e-t:t-e,n>Math.PI&&(n=2*Math.PI-n),n},Angle$1.toRadians=function(t){return t*Math.PI/180},Angle$1.getTurn=function(t,e){var n=Math.sin(e-t);return n>0?Angle$1.COUNTERCLOCKWISE:0>n?Angle$1.CLOCKWISE:Angle$1.NONE},Angle$1.angleBetweenOriented=function(t,e,n){var i=Angle$1.angle(e,t),r=Angle$1.angle(e,n),o=r-i;return o<=-Math.PI?o+Angle$1.PI_TIMES_2:o>Math.PI?o-Angle$1.PI_TIMES_2:o},Angle$1.PI_TIMES_2=2*Math.PI,Angle$1.PI_OVER_2=Math.PI/2,Angle$1.PI_OVER_4=Math.PI/4,Angle$1.COUNTERCLOCKWISE=CGAlgorithms.COUNTERCLOCKWISE,Angle$1.CLOCKWISE=CGAlgorithms.CLOCKWISE,Angle$1.NONE=CGAlgorithms.COLLINEAR,extend(Triangle.prototype,{area:function(){return Triangle.area(this.p0,this.p1,this.p2)},signedArea:function(){return Triangle.signedArea(this.p0,this.p1,this.p2);
},interpolateZ:function(t){if(null===t)throw new IllegalArgumentException("Supplied point is null.");return Triangle.interpolateZ(t,this.p0,this.p1,this.p2)},longestSideLength:function(){return Triangle.longestSideLength(this.p0,this.p1,this.p2)},isAcute:function(){return Triangle.isAcute(this.p0,this.p1,this.p2)},circumcentre:function(){return Triangle.circumcentre(this.p0,this.p1,this.p2)},area3D:function(){return Triangle.area3D(this.p0,this.p1,this.p2)},centroid:function(){return Triangle.centroid(this.p0,this.p1,this.p2)},inCentre:function(){return Triangle.inCentre(this.p0,this.p1,this.p2)},interfaces_:function(){return[]},getClass:function(){return Triangle}}),Triangle.area=function(t,e,n){return Math.abs(((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2)},Triangle.signedArea=function(t,e,n){return((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2},Triangle.det=function(t,e,n,i){return t*i-e*n},Triangle.interpolateZ=function(t,e,n,i){var r=e.x,o=e.y,s=n.x-r,a=i.x-r,l=n.y-o,u=i.y-o,c=s*u-a*l,h=t.x-r,d=t.y-o,g=(u*h-a*d)/c,f=(-l*h+s*d)/c,p=e.z+g*(n.z-e.z)+f*(i.z-e.z);return p},Triangle.longestSideLength=function(t,e,n){var i=t.distance(e),r=e.distance(n),o=n.distance(t),s=i;return r>s&&(s=r),o>s&&(s=o),s},Triangle.isAcute=function(t,e,n){return Angle.isAcute(t,e,n)&&Angle.isAcute(e,n,t)?!!Angle.isAcute(n,t,e):!1},Triangle.circumcentre=function(t,e,n){var i=n.x,r=n.y,o=t.x-i,s=t.y-r,a=e.x-i,l=e.y-r,u=2*Triangle.det(o,s,a,l),c=Triangle.det(s,o*o+s*s,l,a*a+l*l),h=Triangle.det(o,o*o+s*s,a,a*a+l*l),d=i-c/u,g=r+h/u;return new Coordinate(d,g)},Triangle.perpendicularBisector=function(t,e){var n=e.x-t.x,i=e.y-t.y,r=new HCoordinate(t.x+n/2,t.y+i/2,1),o=new HCoordinate(t.x-i+n/2,t.y+n+i/2,1);return new HCoordinate(r,o)},Triangle.angleBisector=function(t,e,n){var i=e.distance(t),r=e.distance(n),o=i/(i+r),s=n.x-t.x,a=n.y-t.y,l=new Coordinate(t.x+o*s,t.y+o*a);return l},Triangle.area3D=function(t,e,n){var i=e.x-t.x,r=e.y-t.y,o=e.z-t.z,s=n.x-t.x,a=n.y-t.y,l=n.z-t.z,u=r*l-o*a,c=o*s-i*l,h=i*a-r*s,d=u*u+c*c+h*h,g=Math.sqrt(d)/2;return g},Triangle.centroid=function(t,e,n){var i=(t.x+e.x+n.x)/3,r=(t.y+e.y+n.y)/3;return new Coordinate(i,r)},Triangle.inCentre=function(t,e,n){var i=e.distance(n),r=t.distance(n),o=t.distance(e),s=i+r+o,a=(i*t.x+r*e.x+o*n.x)/s,l=(i*t.y+r*e.y+o*n.y)/s;return new Coordinate(a,l)},extend(MinimumBoundingCircle.prototype,{getRadius:function(){return this.compute(),this.radius},getDiameter:function(){switch(this.compute(),this.extremalPts.length){case 0:return this.input.getFactory().createLineString();case 1:return this.input.getFactory().createPoint(this.centre)}var t=this.extremalPts[0],e=this.extremalPts[1];return this.input.getFactory().createLineString([t,e])},getExtremalPoints:function(){return this.compute(),this.extremalPts},computeCirclePoints:function(){if(this.input.isEmpty())return this.extremalPts=new Array(0).fill(null),null;if(1===this.input.getNumPoints()){var t=this.input.getCoordinates();return this.extremalPts=[new Coordinate(t[0])],null}var e=this.input.convexHull(),n=e.getCoordinates(),t=n;if(n[0].equals2D(n[n.length-1])&&(t=new Array(n.length-1).fill(null),CoordinateArrays.copyDeep(n,0,t,0,n.length-1)),t.length<=2)return this.extremalPts=CoordinateArrays.copyDeep(t),null;for(var i=MinimumBoundingCircle.lowestPoint(t),r=MinimumBoundingCircle.pointWitMinAngleWithX(t,i),o=0;o<t.length;o++){var s=MinimumBoundingCircle.pointWithMinAngleWithSegment(t,i,r);if(Angle.isObtuse(i,s,r))return this.extremalPts=[new Coordinate(i),new Coordinate(r)],null;if(Angle.isObtuse(s,i,r))i=s;else{if(!Angle.isObtuse(s,r,i))return this.extremalPts=[new Coordinate(i),new Coordinate(r),new Coordinate(s)],null;r=s}}Assert.shouldNeverReachHere("Logic failure in Minimum Bounding Circle algorithm!")},compute:function(){return null!==this.extremalPts?null:(this.computeCirclePoints(),this.computeCentre(),void(null!==this.centre&&(this.radius=this.centre.distance(this.extremalPts[0]))))},getFarthestPoints:function(){switch(this.compute(),this.extremalPts.length){case 0:return this.input.getFactory().createLineString();case 1:return this.input.getFactory().createPoint(this.centre)}var t=this.extremalPts[0],e=this.extremalPts[this.extremalPts.length-1];return this.input.getFactory().createLineString([t,e])},getCircle:function(){if(this.compute(),null===this.centre)return this.input.getFactory().createPolygon();var t=this.input.getFactory().createPoint(this.centre);return 0===this.radius?t:t.buffer(this.radius)},getCentre:function(){return this.compute(),this.centre},computeCentre:function(){switch(this.extremalPts.length){case 0:this.centre=null;break;case 1:this.centre=this.extremalPts[0];break;case 2:this.centre=new Coordinate((this.extremalPts[0].x+this.extremalPts[1].x)/2,(this.extremalPts[0].y+this.extremalPts[1].y)/2);break;case 3:this.centre=Triangle.circumcentre(this.extremalPts[0],this.extremalPts[1],this.extremalPts[2])}},interfaces_:function(){return[]},getClass:function(){return MinimumBoundingCircle}}),MinimumBoundingCircle.pointWitMinAngleWithX=function(t,e){for(var n=Double.MAX_VALUE,i=null,r=0;r<t.length;r++){var o=t[r];if(o!==e){var s=o.x-e.x,a=o.y-e.y;0>a&&(a=-a);var l=Math.sqrt(s*s+a*a),u=a/l;n>u&&(n=u,i=o)}}return i},MinimumBoundingCircle.lowestPoint=function(t){for(var e=t[0],n=1;n<t.length;n++)t[n].y<e.y&&(e=t[n]);return e},MinimumBoundingCircle.pointWithMinAngleWithSegment=function(t,e,n){for(var i=Double.MAX_VALUE,r=null,o=0;o<t.length;o++){var s=t[o];if(s!==e&&s!==n){var a=Angle.angleBetween(e,s,n);i>a&&(i=a,r=s)}}return r},extend(MinimumDiameter.prototype,{getWidthCoordinate:function(){return this.computeMinimumDiameter(),this.minWidthPt},getSupportingSegment:function(){return this.computeMinimumDiameter(),this.inputGeom.getFactory().createLineString([this.minBaseSeg.p0,this.minBaseSeg.p1])},getDiameter:function(){if(this.computeMinimumDiameter(),null===this.minWidthPt)return this.inputGeom.getFactory().createLineString(null);var t=this.minBaseSeg.project(this.minWidthPt);return this.inputGeom.getFactory().createLineString([t,this.minWidthPt])},computeWidthConvex:function(t){t instanceof Polygon?this.convexHullPts=t.getExteriorRing().getCoordinates():this.convexHullPts=t.getCoordinates(),0===this.convexHullPts.length?(this.minWidth=0,this.minWidthPt=null,this.minBaseSeg=null):1===this.convexHullPts.length?(this.minWidth=0,this.minWidthPt=this.convexHullPts[0],this.minBaseSeg.p0=this.convexHullPts[0],this.minBaseSeg.p1=this.convexHullPts[0]):2===this.convexHullPts.length||3===this.convexHullPts.length?(this.minWidth=0,this.minWidthPt=this.convexHullPts[0],this.minBaseSeg.p0=this.convexHullPts[0],this.minBaseSeg.p1=this.convexHullPts[1]):this.computeConvexRingMinDiameter(this.convexHullPts)},computeConvexRingMinDiameter:function(t){this.minWidth=Double.MAX_VALUE;for(var e=1,n=new LineSegment,i=0;i<t.length-1;i++)n.p0=t[i],n.p1=t[i+1],e=this.findMaxPerpDistance(t,n,e)},computeMinimumDiameter:function(){if(null!==this.minWidthPt)return null;if(this.isConvex)this.computeWidthConvex(this.inputGeom);else{var t=new ConvexHull(this.inputGeom).getConvexHull();this.computeWidthConvex(t)}},getLength:function(){return this.computeMinimumDiameter(),this.minWidth},findMaxPerpDistance:function(t,e,n){for(var i=e.distancePerpendicular(t[n]),r=i,o=n,s=o;r>=i;)i=r,o=s,s=MinimumDiameter.nextIndex(t,o),r=e.distancePerpendicular(t[s]);return i<this.minWidth&&(this.minPtIndex=o,this.minWidth=i,this.minWidthPt=t[this.minPtIndex],this.minBaseSeg=new LineSegment(e)),o},getMinimumRectangle:function(){if(this.computeMinimumDiameter(),0===this.minWidth)return this.minBaseSeg.p0.equals2D(this.minBaseSeg.p1)?this.inputGeom.getFactory().createPoint(this.minBaseSeg.p0):this.minBaseSeg.toGeometry(this.inputGeom.getFactory());for(var t=this.minBaseSeg.p1.x-this.minBaseSeg.p0.x,e=this.minBaseSeg.p1.y-this.minBaseSeg.p0.y,n=Double.MAX_VALUE,i=-Double.MAX_VALUE,r=Double.MAX_VALUE,o=-Double.MAX_VALUE,s=0;s<this.convexHullPts.length;s++){var a=MinimumDiameter.computeC(t,e,this.convexHullPts[s]);a>i&&(i=a),n>a&&(n=a);var l=MinimumDiameter.computeC(-e,t,this.convexHullPts[s]);l>o&&(o=l),r>l&&(r=l)}var u=MinimumDiameter.computeSegmentForLine(-t,-e,o),c=MinimumDiameter.computeSegmentForLine(-t,-e,r),h=MinimumDiameter.computeSegmentForLine(-e,t,i),d=MinimumDiameter.computeSegmentForLine(-e,t,n),g=h.lineIntersection(u),f=d.lineIntersection(u),p=d.lineIntersection(c),m=h.lineIntersection(c),y=this.inputGeom.getFactory().createLinearRing([g,f,p,m,g]);return this.inputGeom.getFactory().createPolygon(y,null)},interfaces_:function(){return[]},getClass:function(){return MinimumDiameter}}),MinimumDiameter.nextIndex=function(t,e){return e++,e>=t.length&&(e=0),e},MinimumDiameter.computeC=function(t,e,n){return t*n.y-e*n.x},MinimumDiameter.getMinimumDiameter=function(t){return new MinimumDiameter(t).getDiameter()},MinimumDiameter.getMinimumRectangle=function(t){return new MinimumDiameter(t).getMinimumRectangle()},MinimumDiameter.computeSegmentForLine=function(t,e,n){var i=null,r=null;return Math.abs(e)>Math.abs(t)?(i=new Coordinate(0,n/e),r=new Coordinate(1,n/e-t/e)):(i=new Coordinate(n/t,0),r=new Coordinate(n/t-e/t,1)),new LineSegment(i,r)},extend(GeometryTransformer.prototype,{transformPoint:function(t,e){return this.factory.createPoint(this.transformCoordinates(t.getCoordinateSequence(),t))},transformPolygon:function(t,e){var n=!0,i=this.transformLinearRing(t.getExteriorRing(),t);null!==i&&i instanceof LinearRing&&!i.isEmpty()||(n=!1);for(var r=new ArrayList,o=0;o<t.getNumInteriorRing();o++){var s=this.transformLinearRing(t.getInteriorRingN(o),t);null===s||s.isEmpty()||(s instanceof LinearRing||(n=!1),r.add(s))}if(n)return this.factory.createPolygon(i,r.toArray([]));var a=new ArrayList;return null!==i&&a.add(i),a.addAll(r),this.factory.buildGeometry(a)},createCoordinateSequence:function(t){return this.factory.getCoordinateSequenceFactory().create(t)},getInputGeometry:function(){return this.inputGeom},transformMultiLineString:function(t,e){for(var n=new ArrayList,i=0;i<t.getNumGeometries();i++){var r=this.transformLineString(t.getGeometryN(i),t);null!==r&&(r.isEmpty()||n.add(r))}return this.factory.buildGeometry(n)},transformCoordinates:function(t,e){return this.copy(t)},transformLineString:function(t,e){return this.factory.createLineString(this.transformCoordinates(t.getCoordinateSequence(),t))},transformMultiPoint:function(t,e){for(var n=new ArrayList,i=0;i<t.getNumGeometries();i++){var r=this.transformPoint(t.getGeometryN(i),t);null!==r&&(r.isEmpty()||n.add(r))}return this.factory.buildGeometry(n)},transformMultiPolygon:function(t,e){for(var n=new ArrayList,i=0;i<t.getNumGeometries();i++){var r=this.transformPolygon(t.getGeometryN(i),t);null!==r&&(r.isEmpty()||n.add(r))}return this.factory.buildGeometry(n)},copy:function(t){return t.clone()},transformGeometryCollection:function(t,e){for(var n=new ArrayList,i=0;i<t.getNumGeometries();i++){var r=this.transform(t.getGeometryN(i));null!==r&&(this.pruneEmptyGeometry&&r.isEmpty()||n.add(r))}return this.preserveGeometryCollectionType?this.factory.createGeometryCollection(GeometryFactory.toGeometryArray(n)):this.factory.buildGeometry(n)},transform:function(t){if(this.inputGeom=t,this.factory=t.getFactory(),t instanceof Point)return this.transformPoint(t,null);if(t instanceof MultiPoint)return this.transformMultiPoint(t,null);if(t instanceof LinearRing)return this.transformLinearRing(t,null);if(t instanceof LineString)return this.transformLineString(t,null);if(t instanceof MultiLineString)return this.transformMultiLineString(t,null);if(t instanceof Polygon)return this.transformPolygon(t,null);if(t instanceof MultiPolygon)return this.transformMultiPolygon(t,null);if(t instanceof GeometryCollection)return this.transformGeometryCollection(t,null);throw new IllegalArgumentException("Unknown Geometry subtype: "+t.getClass().getName())},transformLinearRing:function(t,e){var n=this.transformCoordinates(t.getCoordinateSequence(),t);if(null===n)return this.factory.createLinearRing(null);var i=n.size();return i>0&&4>i&&!this.preserveType?this.factory.createLineString(n):this.factory.createLinearRing(n)},interfaces_:function(){return[]},getClass:function(){return GeometryTransformer}}),extend(Densifier.prototype,{getResultGeometry:function(){return new DensifyTransformer(this.distanceTolerance).transform(this.inputGeom)},setDistanceTolerance:function(t){if(0>=t)throw new IllegalArgumentException("Tolerance must be positive");this.distanceTolerance=t},interfaces_:function(){return[]},getClass:function(){return Densifier}}),Densifier.densifyPoints=function(t,e,n){for(var i=new LineSegment,r=new CoordinateList,o=0;o<t.length-1;o++){i.p0=t[o],i.p1=t[o+1],r.add(i.p0,!1);var s=i.getLength(),a=Math.trunc(s/e)+1;if(a>1)for(var l=s/a,u=1;a>u;u++){var c=u*l/s,h=i.pointAlong(c);n.makePrecise(h),r.add(h,!1)}}return r.add(t[t.length-1],!1),r.toCoordinateArray()},Densifier.densify=function(t,e){var n=new Densifier(t);return n.setDistanceTolerance(e),n.getResultGeometry()},inherits(DensifyTransformer,GeometryTransformer),extend(DensifyTransformer.prototype,{transformMultiPolygon:function(t,e){var n=GeometryTransformer.prototype.transformMultiPolygon.call(this,t,e);return this.createValidArea(n)},transformPolygon:function(t,e){var n=GeometryTransformer.prototype.transformPolygon.call(this,t,e);return e instanceof MultiPolygon?n:this.createValidArea(n)},transformCoordinates:function(t,e){var n=t.toCoordinateArray(),i=Densifier.densifyPoints(n,this.distanceTolerance,e.getPrecisionModel());return e instanceof LineString&&1===i.length&&(i=new Array(0).fill(null)),this.factory.getCoordinateSequenceFactory().create(i)},createValidArea:function(t){return t.buffer(0)},interfaces_:function(){return[]},getClass:function(){return DensifyTransformer}}),Densifier.DensifyTransformer=DensifyTransformer,extend(Quadrant.prototype,{interfaces_:function(){return[]},getClass:function(){return Quadrant}}),Quadrant.isNorthern=function(t){return t===Quadrant.NE||t===Quadrant.NW},Quadrant.isOpposite=function(t,e){if(t===e)return!1;var n=(t-e+4)%4;return 2===n},Quadrant.commonHalfPlane=function(t,e){if(t===e)return t;var n=(t-e+4)%4;if(2===n)return-1;var i=e>t?t:e,r=t>e?t:e;return 0===i&&3===r?3:i},Quadrant.isInHalfPlane=function(t,e){return e===Quadrant.SE?t===Quadrant.SE||t===Quadrant.SW:t===e||t===e+1},Quadrant.quadrant=function(){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){var t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new IllegalArgumentException("Cannot compute the quadrant for point ( "+t+", "+e+" )");return t>=0?e>=0?Quadrant.NE:Quadrant.SE:e>=0?Quadrant.NW:Quadrant.SW}if(arguments[0]instanceof Coordinate&&arguments[1]instanceof Coordinate){var n=arguments[0],i=arguments[1];if(i.x===n.x&&i.y===n.y)throw new IllegalArgumentException("Cannot compute the quadrant for two identical points "+n);return i.x>=n.x?i.y>=n.y?Quadrant.NE:Quadrant.SE:i.y>=n.y?Quadrant.NW:Quadrant.SW}},Quadrant.NE=0,Quadrant.NW=1,Quadrant.SW=2,Quadrant.SE=3,extend(HalfEdge.prototype,{find:function(t){var e=this;do{if(null===e)return null;if(e.dest().equals2D(t))return e;e=e.oNext()}while(e!==this);return null},dest:function(){return this._sym._orig},oNext:function(){return this._sym._next},insert:function(t){if(this.oNext()===this)return this.insertAfter(t),null;var e=this.compareTo(t),n=this;do{var i=n.oNext(),r=i.compareTo(t);if(r!==e||i===this)return n.insertAfter(t),null;n=i}while(n!==this);Assert.shouldNeverReachHere()},insertAfter:function(t){Assert.equals(this._orig,t.orig());var e=this.oNext();this._sym.setNext(t),t.sym().setNext(e)},degree:function t(){var t=0,e=this;do t++,e=e.oNext();while(e!==this);return t},equals:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this._orig.equals2D(t)&&this._sym._orig.equals(e)}},deltaY:function(){return this._sym._orig.y-this._orig.y},sym:function(){return this._sym},prev:function(){return this._sym.next()._sym},compareAngularDirection:function(t){var e=this.deltaX(),n=this.deltaY(),i=t.deltaX(),r=t.deltaY();if(e===i&&n===r)return 0;var o=Quadrant.quadrant(e,n),s=Quadrant.quadrant(i,r);return o>s?1:s>o?-1:CGAlgorithms.computeOrientation(t._orig,t.dest(),this.dest())},prevNode:function(){for(var t=this;2===t.degree();)if(t=t.prev(),t===this)return null;return t},compareTo:function(t){var e=t,n=this.compareAngularDirection(e);return n},next:function(){return this._next},setSym:function(t){this._sym=t},orig:function(){return this._orig},toString:function(){return"HE("+this._orig.x+" "+this._orig.y+", "+this._sym._orig.x+" "+this._sym._orig.y+")"},setNext:function(t){this._next=t},init:function(t){this.setSym(t),t.setSym(this),this.setNext(t),t.setNext(this)},deltaX:function(){return this._sym._orig.x-this._orig.x},interfaces_:function(){return[]},getClass:function(){return HalfEdge}}),HalfEdge.init=function(t,e){if(null!==t._sym||null!==e._sym||null!==t._next||null!==e._next)throw new IllegalStateException("Edges are already initialized");return t.init(e),t},HalfEdge.create=function(t,e){var n=new HalfEdge(t),i=new HalfEdge(e);return n.init(i),n},inherits(MarkHalfEdge,HalfEdge),extend(MarkHalfEdge.prototype,{mark:function(){this._isMarked=!0},setMark:function(t){this._isMarked=t},isMarked:function(){return this._isMarked},interfaces_:function(){return[]},getClass:function(){return MarkHalfEdge}}),MarkHalfEdge.setMarkBoth=function(t,e){t.setMark(e),t.sym().setMark(e)},MarkHalfEdge.isMarked=function(t){return t.isMarked()},MarkHalfEdge.setMark=function(t,e){t.setMark(e)},MarkHalfEdge.markBoth=function(t){t.mark(),t.sym().mark()},MarkHalfEdge.mark=function(t){t.mark()},extend(EdgeGraph.prototype,{insert:function(t,e,n){var i=this.create(t,e);null!==n?n.insert(i):this.vertexMap.put(t,i);var r=this.vertexMap.get(e);return null!==r?r.insert(i.sym()):this.vertexMap.put(e,i.sym()),i},create:function(t,e){var n=this.createEdge(t),i=this.createEdge(e);return HalfEdge.init(n,i),n},createEdge:function(t){return new HalfEdge(t)},addEdge:function(t,e){if(!EdgeGraph.isValidEdge(t,e))return null;var n=this.vertexMap.get(t),i=null;if(null!==n&&(i=n.find(e)),null!==i)return i;var r=this.insert(t,e,n);return r},getVertexEdges:function(){return this.vertexMap.values()},findEdge:function(t,e){var n=this.vertexMap.get(t);return null===n?null:n.find(e)},interfaces_:function(){return[]},getClass:function(){return EdgeGraph}}),EdgeGraph.isValidEdge=function(t,e){var n=e.compareTo(t);return 0!==n},inherits(DissolveHalfEdge,MarkHalfEdge),extend(DissolveHalfEdge.prototype,{setStart:function(){this._isStart=!0},isStart:function(){return this._isStart},interfaces_:function(){return[]},getClass:function(){return DissolveHalfEdge}}),inherits(DissolveEdgeGraph,EdgeGraph),extend(DissolveEdgeGraph.prototype,{createEdge:function(t){return new DissolveHalfEdge(t)},interfaces_:function(){return[]},getClass:function(){return DissolveEdgeGraph}}),extend(LineDissolver.prototype,{addLine:function(t){this.lines.add(this.factory.createLineString(t.toCoordinateArray()))},updateRingStartEdge:function(t){return t.isStart()||(t=t.sym(),t.isStart())?null===this.ringStartEdge?(this.ringStartEdge=t,null):void(t.orig().compareTo(this.ringStartEdge.orig())<0&&(this.ringStartEdge=t)):null},getResult:function(){return null===this.result&&this.computeResult(),this.result},process:function(t){var e=t.prevNode();null===e&&(e=t),this.stackEdges(e),this.buildLines()},buildRing:function(t){var e=new CoordinateList,n=t;for(e.add(n.orig().copy(),!1);2===n.sym().degree();){var i=n.next();if(i===t)break;e.add(i.orig().copy(),!1),n=i}e.add(n.dest().copy(),!1),this.addLine(e)},buildLine:function(t){var e=new CoordinateList,n=t;for(this.ringStartEdge=null,MarkHalfEdge.markBoth(n),e.add(n.orig().copy(),!1);2===n.sym().degree();){this.updateRingStartEdge(n);var i=n.next();if(i===t)return this.buildRing(this.ringStartEdge),null;e.add(i.orig().copy(),!1),n=i,MarkHalfEdge.markBoth(n)}e.add(n.dest().copy(),!1),this.stackEdges(n.sym()),this.addLine(e)},stackEdges:function(t){var e=t;do MarkHalfEdge.isMarked(e)||this.nodeEdgeStack.add(e),e=e.oNext();while(e!==t)},computeResult:function(){for(var t=this.graph.getVertexEdges(),e=t.iterator();e.hasNext();){var n=e.next();MarkHalfEdge.isMarked(n)||this.process(n)}this.result=this.factory.buildGeometry(this.lines)},buildLines:function(){for(;!this.nodeEdgeStack.empty();){var t=this.nodeEdgeStack.pop();MarkHalfEdge.isMarked(t)||this.buildLine(t)}},add:function(){if(arguments[0]instanceof Geometry){var t=arguments[0];t.apply({interfaces_:function(){return[GeometryComponentFilter$1]},filter:function(t){t instanceof LineString&&this.add(t)}})}else if(hasInterface(arguments[0],Collection))for(var e=arguments[0],n=e.iterator();n.hasNext();){var i=n.next();this.add(i)}else if(arguments[0]instanceof LineString){var r=arguments[0];null===this.factory&&(this.factory=r.getFactory());for(var o=r.getCoordinateSequence(),s=!1,n=1;n<o.size();n++){var a=this.graph.addEdge(o.getCoordinate(n-1),o.getCoordinate(n));null!==a&&(s||(a.setStart(),s=!0))}}},interfaces_:function(){return[]},getClass:function(){return LineDissolver}}),LineDissolver.dissolve=function(t){var e=new LineDissolver;return e.add(t),e.getResult()},extend(NodeBase.prototype,{hasChildren:function(){for(var t=0;4>t;t++)if(null!==this.subnode[t])return!0;return!1},isPrunable:function(){return!(this.hasChildren()||this.hasItems())},addAllItems:function(t){t.addAll(this.items);for(var e=0;4>e;e++)null!==this.subnode[e]&&this.subnode[e].addAllItems(t);return t},getNodeCount:function(){for(var t=0,e=0;4>e;e++)null!==this.subnode[e]&&(t+=this.subnode[e].size());return t+1},size:function(){for(var t=0,e=0;4>e;e++)null!==this.subnode[e]&&(t+=this.subnode[e].size());return t+this.items.size()},addAllItemsFromOverlapping:function(t,e){if(!this.isSearchMatch(t))return null;e.addAll(this.items);for(var n=0;4>n;n++)null!==this.subnode[n]&&this.subnode[n].addAllItemsFromOverlapping(t,e)},visitItems:function(t,e){for(var n=this.items.iterator();n.hasNext();)e.visitItem(n.next())},hasItems:function(){return!this.items.isEmpty()},remove:function(t,e){if(!this.isSearchMatch(t))return!1;for(var n=!1,i=0;4>i;i++)if(null!==this.subnode[i]&&(n=this.subnode[i].remove(t,e))){this.subnode[i].isPrunable()&&(this.subnode[i]=null);break}return n?n:n=this.items.remove(e)},visit:function(t,e){if(!this.isSearchMatch(t))return null;this.visitItems(t,e);for(var n=0;4>n;n++)null!==this.subnode[n]&&this.subnode[n].visit(t,e)},getItems:function(){return this.items},depth:function(){for(var t=0,e=0;4>e;e++)if(null!==this.subnode[e]){var n=this.subnode[e].depth();n>t&&(t=n)}return t+1},isEmpty:function t(){var t=!0;this.items.isEmpty()||(t=!1);for(var e=0;4>e;e++)null!==this.subnode[e]&&(this.subnode[e].isEmpty()||(t=!1));return t},add:function(t){this.items.add(t)},interfaces_:function(){return[Serializable]},getClass:function(){return NodeBase}}),NodeBase.getSubnodeIndex=function(t,e,n){var i=-1;return t.getMinX()>=e&&(t.getMinY()>=n&&(i=3),t.getMaxY()<=n&&(i=1)),t.getMaxX()<=e&&(t.getMinY()>=n&&(i=2),t.getMaxY()<=n&&(i=0)),i};var exponent=require("math-float64-exponent");DoubleBits.exponent=function(t){return exponent(t)},DoubleBits.powerOf2=function(t){return Math.pow(2,t)},extend(Key.prototype,{getLevel:function(){return this.level},computeKey:function(){if(1===arguments.length){var t=arguments[0];for(this.level=Key.computeQuadLevel(t),this.env=new Envelope,this.computeKey(this.level,t);!this.env.contains(t);)this.level+=1,this.computeKey(this.level,t)}else if(2===arguments.length){var e=arguments[0],t=arguments[1],n=DoubleBits.powerOf2(e);this.pt.x=Math.floor(t.getMinX()/n)*n,this.pt.y=Math.floor(t.getMinY()/n)*n,this.env.init(this.pt.x,this.pt.x+n,this.pt.y,this.pt.y+n)}},getEnvelope:function(){return this.env},getCentre:function(){return new Coordinate((this.env.getMinX()+this.env.getMaxX())/2,(this.env.getMinY()+this.env.getMaxY())/2)},getPoint:function(){return this.pt},interfaces_:function(){return[]},getClass:function(){return Key}}),Key.computeQuadLevel=function(t){var e=t.getWidth(),n=t.getHeight(),i=e>n?e:n,r=DoubleBits.exponent(i)+1;return r},inherits(Node,NodeBase),extend(Node.prototype,{find:function(t){var e=NodeBase.getSubnodeIndex(t,this.centrex,this.centrey);if(-1===e)return this;if(null!==this.subnode[e]){var n=this.subnode[e];return n.find(t)}return this},isSearchMatch:function(t){return this.env.intersects(t)},getSubnode:function(t){return null===this.subnode[t]&&(this.subnode[t]=this.createSubnode(t)),this.subnode[t]},getEnvelope:function(){return this.env},getNode:function(t){var e=NodeBase.getSubnodeIndex(t,this.centrex,this.centrey);if(-1!==e){var n=this.getSubnode(e);return n.getNode(t)}return this},createSubnode:function(t){var e=0,n=0,i=0,r=0;switch(t){case 0:e=this.env.getMinX(),n=this.centrex,i=this.env.getMinY(),r=this.centrey;break;case 1:e=this.centrex,n=this.env.getMaxX(),i=this.env.getMinY(),r=this.centrey;break;case 2:e=this.env.getMinX(),n=this.centrex,i=this.centrey,r=this.env.getMaxY();break;case 3:e=this.centrex,n=this.env.getMaxX(),i=this.centrey,r=this.env.getMaxY()}var o=new Envelope(e,n,i,r),s=new Node(o,this.level-1);return s},insertNode:function(t){Assert.isTrue(null===this.env||this.env.contains(t.env));var e=NodeBase.getSubnodeIndex(t.env,this.centrex,this.centrey);if(t.level===this.level-1)this.subnode[e]=t;else{var n=this.createSubnode(e);n.insertNode(t),this.subnode[e]=n}},interfaces_:function(){return[]},getClass:function(){return Node}}),Node.createNode=function(t){var e=new Key(t),n=new Node(e.getEnvelope(),e.getLevel());return n},Node.createExpanded=function(t,e){var n=new Envelope(e);null!==t&&n.expandToInclude(t.env);var i=Node.createNode(n);return null!==t&&i.insertNode(t),i},extend(IntervalSize.prototype,{interfaces_:function(){return[]},getClass:function(){return IntervalSize}}),IntervalSize.isZeroWidth=function(t,e){var n=e-t;if(0===n)return!0;var i=Math.max(Math.abs(t),Math.abs(e)),r=n/i,o=DoubleBits.exponent(r);return o<=IntervalSize.MIN_BINARY_EXPONENT},IntervalSize.MIN_BINARY_EXPONENT=-50,inherits(Root,NodeBase),extend(Root.prototype,{insert:function(t,e){var n=NodeBase.getSubnodeIndex(t,Root.origin.x,Root.origin.y);if(-1===n)return this.add(e),null;var i=this.subnode[n];if(null===i||!i.getEnvelope().contains(t)){var r=Node.createExpanded(i,t);this.subnode[n]=r}this.insertContained(this.subnode[n],t,e)},isSearchMatch:function(t){return!0},insertContained:function(t,e,n){Assert.isTrue(t.getEnvelope().contains(e));var i=IntervalSize.isZeroWidth(e.getMinX(),e.getMaxX()),r=IntervalSize.isZeroWidth(e.getMinY(),e.getMaxY()),o=null;o=i||r?t.find(e):t.getNode(e),o.add(n)},interfaces_:function(){return[]},getClass:function(){return Root}}),Root.origin=new Coordinate(0,0),extend(SpatialIndex.prototype,{insert:function(t,e){},remove:function(t,e){},query:function(){if(1===arguments.length){arguments[0]}else if(2===arguments.length){arguments[0],arguments[1]}},interfaces_:function(){return[]},getClass:function(){return SpatialIndex}}),extend(ItemVisitor.prototype,{visitItem:function(t){},interfaces_:function(){return[]},getClass:function(){return ItemVisitor}}),extend(ArrayListVisitor.prototype,{visitItem:function(t){this.items.add(t)},getItems:function(){return this.items},interfaces_:function(){return[ItemVisitor]},getClass:function(){return ArrayListVisitor}}),extend(Quadtree.prototype,{size:function(){return null!==this.root?this.root.size():0},insert:function(t,e){this.collectStats(t);var n=Quadtree.ensureExtent(t,this.minExtent);this.root.insert(n,e)},query:function(){if(1===arguments.length){var t=arguments[0],e=new ArrayListVisitor;return this.query(t,e),e.getItems()}if(2===arguments.length){var t=arguments[0],n=arguments[1];this.root.visit(t,n)}},queryAll:function(){var t=new ArrayList;return this.root.addAllItems(t),t},remove:function(t,e){var n=Quadtree.ensureExtent(t,this.minExtent);return this.root.remove(n,e)},collectStats:function(t){var e=t.getWidth();e<this.minExtent&&e>0&&(this.minExtent=e);var n=t.getHeight();n<this.minExtent&&n>0&&(this.minExtent=n)},depth:function(){return null!==this.root?this.root.depth():0},isEmpty:function(){return null===this.root},interfaces_:function(){return[SpatialIndex,Serializable]},getClass:function(){return Quadtree}}),Quadtree.ensureExtent=function(t,e){var n=t.getMinX(),i=t.getMaxX(),r=t.getMinY(),o=t.getMaxY();return n!==i&&r!==o?t:(n===i&&(n-=e/2,i=n+e/2),r===o&&(r-=e/2,o=r+e/2),new Envelope(n,i,r,o))},Quadtree.serialVersionUID=-0x678b60c967a25400,extend(Boundable.prototype,{getBounds:function(){},interfaces_:function(){return[]},getClass:function(){return Boundable}}),extend(ItemBoundable.prototype,{getItem:function(){return this.item},getBounds:function(){return this.bounds},interfaces_:function(){return[Boundable,Serializable]},getClass:function(){return ItemBoundable}}),extend(PriorityQueue.prototype,{poll:function(){if(this.isEmpty())return null;var t=this.items.get(1);return this.items.set(1,this.items.get(this._size)),this._size-=1,this.reorder(1),t},size:function(){return this._size},reorder:function(t){for(var e=null,n=this.items.get(t);2*t<=this._size&&(e=2*t,e!==this._size&&this.items.get(e+1).compareTo(this.items.get(e))<0&&e++,this.items.get(e).compareTo(n)<0);t=e)this.items.set(t,this.items.get(e));this.items.set(t,n)},clear:function(){this._size=0,this.items.clear()},isEmpty:function(){return 0===this._size},add:function(t){this.items.add(null),this._size+=1;var e=this._size;for(this.items.set(0,t);t.compareTo(this.items.get(Math.trunc(e/2)))<0;e/=2)this.items.set(e,this.items.get(Math.trunc(e/2)));this.items.set(e,t)},interfaces_:function(){return[]},getClass:function(){return PriorityQueue}}),extend(AbstractNode.prototype,{getLevel:function(){return this.level},size:function(){return this.childBoundables.size()},getChildBoundables:function(){return this.childBoundables},addChildBoundable:function(t){Assert.isTrue(null===this.bounds),this.childBoundables.add(t)},isEmpty:function(){return this.childBoundables.isEmpty()},getBounds:function(){return null===this.bounds&&(this.bounds=this.computeBounds()),this.bounds},interfaces_:function(){return[Boundable,Serializable]},getClass:function(){return AbstractNode}}),AbstractNode.serialVersionUID=0x5a1e55ec41369800;var Collections={reverseOrder:function(){return{compare:function(t,e){return e.compareTo(t)}}},min:function(t){return Collections.sort(t),t.get(0)},sort:function(t,e){var n=t.toArray();e?Arrays.sort(n,e):Arrays.sort(n);for(var i=t.iterator(),r=0,o=n.length;o>r;r++)i.next(),i.set(n[r])},singletonList:function(t){var e=new ArrayList;return e.add(t),e}};extend(BoundablePair.prototype,{expandToQueue:function(t,e){var n=BoundablePair.isComposite(this.boundable1),i=BoundablePair.isComposite(this.boundable2);if(n&&i)return BoundablePair.area(this.boundable1)>BoundablePair.area(this.boundable2)?(this.expand(this.boundable1,this.boundable2,t,e),null):(this.expand(this.boundable2,this.boundable1,t,e),null);if(n)return this.expand(this.boundable1,this.boundable2,t,e),null;if(i)return this.expand(this.boundable2,this.boundable1,t,e),null;throw new IllegalArgumentException("neither boundable is composite")},isLeaves:function(){return!(BoundablePair.isComposite(this.boundable1)||BoundablePair.isComposite(this.boundable2))},compareTo:function(t){var e=t;return this._distance<e._distance?-1:this._distance>e._distance?1:0},expand:function(t,e,n,i){for(var r=t.getChildBoundables(),o=r.iterator();o.hasNext();){var s=o.next(),a=new BoundablePair(s,e,this.itemDistance);a.getDistance()<i&&n.add(a)}},getBoundable:function(t){return 0===t?this.boundable1:this.boundable2},getDistance:function(){return this._distance},distance:function(){return this.isLeaves()?this.itemDistance.distance(this.boundable1,this.boundable2):this.boundable1.getBounds().distance(this.boundable2.getBounds())},interfaces_:function(){return[Comparable]},getClass:function(){return BoundablePair}}),BoundablePair.area=function(t){return t.getBounds().getArea();
},BoundablePair.isComposite=function(t){return t instanceof AbstractNode},extend(AbstractSTRtree.prototype,{getNodeCapacity:function(){return this.nodeCapacity},lastNode:function(t){return t.get(t.size()-1)},size:function t(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.size(this.root));if(1===arguments.length){for(var e=arguments[0],t=0,n=e.getChildBoundables().iterator();n.hasNext();){var i=n.next();i instanceof AbstractNode?t+=this.size(i):i instanceof ItemBoundable&&(t+=1)}return t}},removeItem:function(t,e){for(var n=null,i=t.getChildBoundables().iterator();i.hasNext();){var r=i.next();r instanceof ItemBoundable&&r.getItem()===e&&(n=r)}return null!==n?(t.getChildBoundables().remove(n),!0):!1},itemsTree:function(){if(0===arguments.length){this.build();var t=this.itemsTree(this.root);return null===t?new ArrayList:t}if(1===arguments.length){for(var e=arguments[0],n=new ArrayList,i=e.getChildBoundables().iterator();i.hasNext();){var r=i.next();if(r instanceof AbstractNode){var o=this.itemsTree(r);null!==o&&n.add(o)}else r instanceof ItemBoundable?n.add(r.getItem()):Assert.shouldNeverReachHere()}return n.size()<=0?null:n}},insert:function(t,e){Assert.isTrue(!this.built,"Cannot insert items into an STR packed R-tree after it has been built."),this.itemBoundables.add(new ItemBoundable(t,e))},boundablesAtLevel:function(){if(1===arguments.length){var t=arguments[0],e=new ArrayList;return this.boundablesAtLevel(t,this.root,e),e}if(3===arguments.length){var t=arguments[0],n=arguments[1],i=arguments[2];if(Assert.isTrue(t>-2),n.getLevel()===t)return i.add(n),null;for(var r=n.getChildBoundables().iterator();r.hasNext();){var o=r.next();o instanceof AbstractNode?this.boundablesAtLevel(t,o,i):(Assert.isTrue(o instanceof ItemBoundable),-1===t&&i.add(o))}return null}},query:function(){if(1===arguments.length){var t=arguments[0];this.build();var e=new ArrayList;return this.isEmpty()?e:(this.getIntersectsOp().intersects(this.root.getBounds(),t)&&this.query(t,this.root,e),e)}if(2===arguments.length){var t=arguments[0],n=arguments[1];if(this.build(),this.isEmpty())return null;this.getIntersectsOp().intersects(this.root.getBounds(),t)&&this.query(t,this.root,n)}else if(3===arguments.length)if(hasInterface(arguments[2],ItemVisitor)&&arguments[0]instanceof Object&&arguments[1]instanceof AbstractNode)for(var t=arguments[0],i=arguments[1],n=arguments[2],r=i.getChildBoundables(),o=0;o<r.size();o++){var s=r.get(o);this.getIntersectsOp().intersects(s.getBounds(),t)&&(s instanceof AbstractNode?this.query(t,s,n):s instanceof ItemBoundable?n.visitItem(s.getItem()):Assert.shouldNeverReachHere())}else if(hasInterface(arguments[2],List)&&arguments[0]instanceof Object&&arguments[1]instanceof AbstractNode)for(var t=arguments[0],i=arguments[1],a=arguments[2],r=i.getChildBoundables(),o=0;o<r.size();o++){var s=r.get(o);this.getIntersectsOp().intersects(s.getBounds(),t)&&(s instanceof AbstractNode?this.query(t,s,a):s instanceof ItemBoundable?a.add(s.getItem()):Assert.shouldNeverReachHere())}},build:function(){return this.built?null:(this.root=this.itemBoundables.isEmpty()?this.createNode(0):this.createHigherLevels(this.itemBoundables,-1),this.itemBoundables=null,void(this.built=!0))},getRoot:function(){return this.build(),this.root},remove:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.build(),this.getIntersectsOp().intersects(this.root.getBounds(),t)?this.remove(t,this.root,e):!1}if(3===arguments.length){var t=arguments[0],n=arguments[1],e=arguments[2],i=this.removeItem(n,e);if(i)return!0;for(var r=null,o=n.getChildBoundables().iterator();o.hasNext();){var s=o.next();if(this.getIntersectsOp().intersects(s.getBounds(),t)&&s instanceof AbstractNode&&(i=this.remove(t,s,e))){r=s;break}}return null!==r&&r.getChildBoundables().isEmpty()&&n.getChildBoundables().remove(r),i}},createHigherLevels:function(t,e){Assert.isTrue(!t.isEmpty());var n=this.createParentBoundables(t,e+1);return 1===n.size()?n.get(0):this.createHigherLevels(n,e+1)},depth:function(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.depth(this.root));if(1===arguments.length){for(var t=arguments[0],e=0,n=t.getChildBoundables().iterator();n.hasNext();){var i=n.next();if(i instanceof AbstractNode){var r=this.depth(i);r>e&&(e=r)}}return e+1}},createParentBoundables:function(t,e){Assert.isTrue(!t.isEmpty());var n=new ArrayList;n.add(this.createNode(e));var i=new ArrayList(t);Collections.sort(i,this.getComparator());for(var r=i.iterator();r.hasNext();){var o=r.next();this.lastNode(n).getChildBoundables().size()===this.getNodeCapacity()&&n.add(this.createNode(e)),this.lastNode(n).addChildBoundable(o)}return n},isEmpty:function(){return this.built?this.root.isEmpty():this.itemBoundables.isEmpty()},interfaces_:function(){return[Serializable]},getClass:function(){return AbstractSTRtree}}),AbstractSTRtree.compareDoubles=function(t,e){return t>e?1:e>t?-1:0},AbstractSTRtree.IntersectsOp=IntersectsOp$1,AbstractSTRtree.serialVersionUID=-0x35ef64c82d4c5400,AbstractSTRtree.DEFAULT_NODE_CAPACITY=10,extend(ItemDistance.prototype,{distance:function(t,e){},interfaces_:function(){return[]},getClass:function(){return ItemDistance}}),inherits(STRtree,AbstractSTRtree),extend(STRtree.prototype,{createParentBoundablesFromVerticalSlices:function(t,e){Assert.isTrue(t.length>0);for(var n=new ArrayList,i=0;i<t.length;i++)n.addAll(this.createParentBoundablesFromVerticalSlice(t[i],e));return n},createNode:function(t){return new STRtreeNode(t)},size:function(){return 0===arguments.length?AbstractSTRtree.prototype.size.call(this):AbstractSTRtree.prototype.size.apply(this,arguments)},insert:function(){if(2!==arguments.length)return AbstractSTRtree.prototype.insert.apply(this,arguments);var t=arguments[0],e=arguments[1];return t.isNull()?null:void AbstractSTRtree.prototype.insert.call(this,t,e)},getIntersectsOp:function(){return STRtree.intersectsOp},verticalSlices:function(t,e){for(var n=Math.trunc(Math.ceil(t.size()/e)),i=new Array(e).fill(null),r=t.iterator(),o=0;e>o;o++){i[o]=new ArrayList;for(var s=0;r.hasNext()&&n>s;){var a=r.next();i[o].add(a),s++}}return i},query:function(){if(1===arguments.length){var t=arguments[0];return AbstractSTRtree.prototype.query.call(this,t)}if(2===arguments.length){var t=arguments[0],e=arguments[1];AbstractSTRtree.prototype.query.call(this,t,e)}else if(3===arguments.length)if(hasInterface(arguments[2],ItemVisitor)&&arguments[0]instanceof Object&&arguments[1]instanceof AbstractNode){var n=arguments[0],i=arguments[1],e=arguments[2];AbstractSTRtree.prototype.query.call(this,n,i,e)}else if(hasInterface(arguments[2],List)&&arguments[0]instanceof Object&&arguments[1]instanceof AbstractNode){var n=arguments[0],i=arguments[1],r=arguments[2];AbstractSTRtree.prototype.query.call(this,n,i,r)}},getComparator:function(){return STRtree.yComparator},createParentBoundablesFromVerticalSlice:function(t,e){return AbstractSTRtree.prototype.createParentBoundables.call(this,t,e)},remove:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return AbstractSTRtree.prototype.remove.call(this,t,e)}return AbstractSTRtree.prototype.remove.apply(this,arguments)},depth:function(){return 0===arguments.length?AbstractSTRtree.prototype.depth.call(this):AbstractSTRtree.prototype.depth.apply(this,arguments)},createParentBoundables:function(t,e){Assert.isTrue(!t.isEmpty());var n=Math.trunc(Math.ceil(t.size()/this.getNodeCapacity())),i=new ArrayList(t);Collections.sort(i,STRtree.xComparator);var r=this.verticalSlices(i,Math.trunc(Math.ceil(Math.sqrt(n))));return this.createParentBoundablesFromVerticalSlices(r,e)},nearestNeighbour:function(){if(1===arguments.length){if(hasInterface(arguments[0],ItemDistance)){var t=arguments[0],e=new BoundablePair(this.getRoot(),this.getRoot(),t);return this.nearestNeighbour(e)}if(arguments[0]instanceof BoundablePair){var n=arguments[0];return this.nearestNeighbour(n,Double.POSITIVE_INFINITY)}}else if(2===arguments.length){if(arguments[0]instanceof STRtree&&hasInterface(arguments[1],ItemDistance)){var i=arguments[0],t=arguments[1],e=new BoundablePair(this.getRoot(),i.getRoot(),t);return this.nearestNeighbour(e)}if(arguments[0]instanceof BoundablePair&&"number"==typeof arguments[1]){var n=arguments[0],r=arguments[1],o=r,s=null,a=new PriorityQueue;for(a.add(n);!a.isEmpty()&&o>0;){var l=a.poll(),u=l.getDistance();if(u>=o)break;l.isLeaves()?(o=u,s=l):l.expandToQueue(a,o)}return[s.getBoundable(0).getItem(),s.getBoundable(1).getItem()]}}else if(3===arguments.length){var c=arguments[0],h=arguments[1],t=arguments[2],d=new ItemBoundable(c,h),e=new BoundablePair(this.getRoot(),d,t);return this.nearestNeighbour(e)[0]}},interfaces_:function(){return[SpatialIndex,Serializable]},getClass:function(){return STRtree}}),STRtree.centreX=function(t){return STRtree.avg(t.getMinX(),t.getMaxX())},STRtree.avg=function(t,e){return(t+e)/2},STRtree.centreY=function(t){return STRtree.avg(t.getMinY(),t.getMaxY())},inherits(STRtreeNode,AbstractNode),extend(STRtreeNode.prototype,{computeBounds:function(){for(var t=null,e=this.getChildBoundables().iterator();e.hasNext();){var n=e.next();null===t?t=new Envelope(n.getBounds()):t.expandToInclude(n.getBounds())}return t},interfaces_:function(){return[]},getClass:function(){return STRtreeNode}}),STRtree.STRtreeNode=STRtreeNode,STRtree.serialVersionUID=0x39920f7d5f261e0,STRtree.xComparator={interfaces_:function(){return[Comparator]},compare:function(t,e){return AbstractSTRtree.compareDoubles(STRtree.centreX(t.getBounds()),STRtree.centreX(e.getBounds()))}},STRtree.yComparator={interfaces_:function(){return[Comparator]},compare:function(t,e){return AbstractSTRtree.compareDoubles(STRtree.centreY(t.getBounds()),STRtree.centreY(e.getBounds()))}},STRtree.intersectsOp={interfaces_:function(){return[IntersectsOp]},intersects:function(t,e){return t.intersects(e)}},STRtree.DEFAULT_NODE_CAPACITY=10;var geometryTypes=["Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon"];extend(GeoJSONParser.prototype,{read:function(t){var e=void 0;e="string"==typeof t?JSON.parse(t):t;var n=e.type;if(!parse$1[n])throw new Error("Unknown GeoJSON type: "+e.type);return-1!==geometryTypes.indexOf(n)?parse$1[n].apply(this,[e.coordinates]):"GeometryCollection"===n?parse$1[n].apply(this,[e.geometries]):this.parse[n].apply(this,[e])},write:function(t){var e=t.getGeometryType();if(!extract$1[e])throw new Error("Geometry is not supported");return extract$1[e].apply(this,[t])}});var parse$1={Feature:function(t){var e={};for(var n in t)e[n]=t[n];if(t.geometry){var i=t.geometry.type;if(!this.parse[i])throw new Error("Unknown GeoJSON type: "+t.type);e.geometry=this.read(t.geometry)}return t.bbox&&(e.bbox=this.parse.bbox.apply(this,[t.bbox])),e},FeatureCollection:function(t){var e={};if(t.features){e.features=[];for(var n=0;n<t.features.length;++n)e.features.push(this.read(t.features[n]))}return t.bbox&&(e.bbox=this.parse.bbox.apply(this,[t.bbox])),e},coordinates:function t(e){for(var t=[],n=0;n<e.length;++n){var i=e[n];t.push(new Coordinate(i[0],i[1]))}return t},bbox:function(t){return this.geometryFactory.createLinearRing([new Coordinate(t[0],t[1]),new Coordinate(t[2],t[1]),new Coordinate(t[2],t[3]),new Coordinate(t[0],t[3]),new Coordinate(t[0],t[1])])},Point:function(t){var e=new Coordinate(t[0],t[1]);return this.geometryFactory.createPoint(e)},MultiPoint:function(t){for(var e=[],n=0;n<t.length;++n)e.push(parse$1.Point.apply(this,[t[n]]));return this.geometryFactory.createMultiPoint(e)},LineString:function(t){var e=parse$1.coordinates.apply(this,[t]);return this.geometryFactory.createLineString(e)},MultiLineString:function(t){for(var e=[],n=0;n<t.length;++n)e.push(parse$1.LineString.apply(this,[t[n]]));return this.geometryFactory.createMultiLineString(e)},Polygon:function(t){for(var e=parse$1.coordinates.apply(this,[t[0]]),n=this.geometryFactory.createLinearRing(e),i=[],r=1;r<t.length;++r){var o=t[r],s=parse$1.coordinates.apply(this,[o]),a=this.geometryFactory.createLinearRing(s);i.push(a)}return this.geometryFactory.createPolygon(n,i)},MultiPolygon:function(t){for(var e=[],n=0;n<t.length;++n){var i=t[n];e.push(parse$1.Polygon.apply(this,[i]))}return this.geometryFactory.createMultiPolygon(e)},GeometryCollection:function(t){for(var e=[],n=0;n<t.length;++n){var i=t[n];e.push(this.read(i))}return this.geometryFactory.createGeometryCollection(e)}},extract$1={coordinate:function(t){return[t.x,t.y]},Point:function(t){var e=extract$1.coordinate.apply(this,[t.getCoordinate()]);return{type:"Point",coordinates:e}},MultiPoint:function(t){for(var e=[],n=0;n<t.geometries.length;++n){var i=t.geometries[n],r=extract$1.Point.apply(this,[i]);e.push(r.coordinates)}return{type:"MultiPoint",coordinates:e}},LineString:function(t){for(var e=[],n=t.getCoordinates(),i=0;i<n.length;++i){var r=n[i];e.push(extract$1.coordinate.apply(this,[r]))}return{type:"LineString",coordinates:e}},MultiLineString:function(t){for(var e=[],n=0;n<t.geometries.length;++n){var i=t.geometries[n],r=extract$1.LineString.apply(this,[i]);e.push(r.coordinates)}return{type:"MultiLineString",coordinates:e}},Polygon:function(t){var e=[],n=extract$1.LineString.apply(this,[t.shell]);e.push(n.coordinates);for(var i=0;i<t.holes.length;++i){var r=t.holes[i],o=extract$1.LineString.apply(this,[r]);e.push(o.coordinates)}return{type:"Polygon",coordinates:e}},MultiPolygon:function(t){for(var e=[],n=0;n<t.geometries.length;++n){var i=t.geometries[n],r=extract$1.Polygon.apply(this,[i]);e.push(r.coordinates)}return{type:"MultiPolygon",coordinates:e}},GeometryCollection:function(t){for(var e=[],n=0;n<t.geometries.length;++n){var i=t.geometries[n],r=i.getGeometryType().slice(10);e.push(extract$1[r].apply(this,[i]))}return{type:"GeometryCollection",geometries:e}}};extend(GeoJSONReader.prototype,{read:function(t){var e=this.parser.read(t);return this.precisionModel.getType()===PrecisionModel.FIXED&&this.reducePrecision(e),e},reducePrecision:function(t){var e,n;if(t.coordinate)this.precisionModel.makePrecise(t.coordinate);else if(t.points)for(e=0,n=t.points.length;n>e;e++)this.precisionModel.makePrecise(t.points[e]);else if(t.geometries)for(e=0,n=t.geometries.length;n>e;e++)this.reducePrecision(t.geometries[e])}}),extend(GeoJSONWriter.prototype,{write:function(t){return this.parser.write(t)}}),extend(WKTReader.prototype,{read:function(t){var e=this.parser.read(t);return this.precisionModel.getType()===PrecisionModel.FIXED&&this.reducePrecision(e),e},reducePrecision:function(t){if(t.coordinate)this.precisionModel.makePrecise(t.coordinate);else if(t.points)for(var e=0,n=t.points.coordinates.length;n>e;e++)this.precisionModel.makePrecise(t.points.coordinates[e]);else if(t.geometries)for(var e=0,n=t.geometries.length;n>e;e++)this.reducePrecision(t.geometries[e])}}),extend(OL3Parser.prototype,{read:function(t){return t instanceof ol.geom.Point?this.convertFromPoint(t):t instanceof ol.geom.LineString?this.convertFromLineString(t):t instanceof ol.geom.LinearRing?this.convertFromLinearRing(t):t instanceof ol.geom.Polygon?this.convertFromPolygon(t):t instanceof ol.geom.MultiPoint?this.convertFromMultiPoint(t):t instanceof ol.geom.MultiLineString?this.convertFromMultiLineString(t):t instanceof ol.geom.MultiPolygon?this.convertFromMultiPolygon(t):t instanceof ol.geom.GeometryCollection?this.convertFromCollection(t):void 0},convertFromPoint:function(t){var e=t.getCoordinates();return this.geometryFactory.createPoint(new Coordinate(e[0],e[1]))},convertFromLineString:function(t){return this.geometryFactory.createLineString(t.getCoordinates().map(function(t){return new Coordinate(t[0],t[1])}))},convertFromLinearRing:function(t){return this.geometryFactory.createLinearRing(t.getCoordinates().map(function(t){return new Coordinate(t[0],t[1])}))},convertFromPolygon:function(t){for(var e=t.getLinearRings(),n=null,i=[],r=0;r<e.length;r++){var o=this.convertFromLinearRing(e[r]);0===r?n=o:i.push(o)}return this.geometryFactory.createPolygon(n,i)},convertFromMultiPoint:function(t){var e=t.getPoints().map(function(t){return this.convertFromPoint(t)},this);return this.geometryFactory.createMultiPoint(e)},convertFromMultiLineString:function(t){var e=t.getLineStrings().map(function(t){return this.convertFromLineString(t)},this);return this.geometryFactory.createMultiLineString(e)},convertFromMultiPolygon:function(t){var e=t.getPolygons().map(function(t){return this.convertFromPolygon(t)},this);return this.geometryFactory.createMultiPolygon(e)},convertFromCollection:function(t){var e=t.getGeometries().map(function(t){return this.read(t)},this);return this.geometryFactory.createGeometryCollection(e)},write:function(t){return"Point"===t.getGeometryType()?this.convertToPoint(t.getCoordinate()):"LineString"===t.getGeometryType()?this.convertToLineString(t):"LinearRing"===t.getGeometryType()?this.convertToLinearRing(t):"Polygon"===t.getGeometryType()?this.convertToPolygon(t):"MultiPoint"===t.getGeometryType()?this.convertToMultiPoint(t):"MultiLineString"===t.getGeometryType()?this.convertToMultiLineString(t):"MultiPolygon"===t.getGeometryType()?this.convertToMultiPolygon(t):"GeometryCollection"===t.getGeometryType()?this.convertToCollection(t):void 0},convertToPoint:function(t){return new ol.geom.Point([t.x,t.y])},convertToLineString:function(t){var e=t.points.coordinates.map(p2c);return new ol.geom.LineString(e)},convertToLinearRing:function(t){var e=t.points.coordinates.map(p2c);return new ol.geom.LinearRing(e)},convertToPolygon:function(t){for(var e=[t.shell.points.coordinates.map(p2c)],n=0;n<t.holes.length;n++)e.push(t.holes[n].points.coordinates.map(p2c));return new ol.geom.Polygon(e)},convertToMultiPoint:function(t){return new ol.geom.MultiPoint(t.getCoordinates().map(p2c))},convertToMultiLineString:function(t){for(var e=[],n=0;n<t.geometries.length;n++)e.push(this.convertToLineString(t.geometries[n]).getCoordinates());return new ol.geom.MultiLineString(e)},convertToMultiPolygon:function(t){for(var e=[],n=0;n<t.geometries.length;n++)e.push(this.convertToPolygon(t.geometries[n]).getCoordinates());return new ol.geom.MultiPolygon(e)},convertToCollection:function(t){for(var e=[],n=0;n<t.geometries.length;n++){var i=t.geometries[n];e.push(this.write(i))}return new ol.geom.GeometryCollection(e)}});var io={GeoJSONReader:GeoJSONReader,GeoJSONWriter:GeoJSONWriter,OL3Parser:OL3Parser,WKTReader:WKTReader,WKTWriter:WKTWriter};extend(SegmentPointComparator.prototype,{interfaces_:function(){return[]},getClass:function(){return SegmentPointComparator}}),SegmentPointComparator.relativeSign=function(t,e){return e>t?-1:t>e?1:0},SegmentPointComparator.compare=function(t,e,n){if(e.equals2D(n))return 0;var i=SegmentPointComparator.relativeSign(e.x,n.x),r=SegmentPointComparator.relativeSign(e.y,n.y);switch(t){case 0:return SegmentPointComparator.compareValue(i,r);case 1:return SegmentPointComparator.compareValue(r,i);case 2:return SegmentPointComparator.compareValue(r,-i);case 3:return SegmentPointComparator.compareValue(-i,r);case 4:return SegmentPointComparator.compareValue(-i,-r);case 5:return SegmentPointComparator.compareValue(-r,-i);case 6:return SegmentPointComparator.compareValue(-r,i);case 7:return SegmentPointComparator.compareValue(i,-r)}return Assert.shouldNeverReachHere("invalid octant value"),0},SegmentPointComparator.compareValue=function(t,e){return 0>t?-1:t>0?1:0>e?-1:e>0?1:0},extend(SegmentNode.prototype,{getCoordinate:function(){return this.coord},print:function(t){t.print(this.coord),t.print(" seg # = "+this.segmentIndex)},compareTo:function(t){var e=t;return this.segmentIndex<e.segmentIndex?-1:this.segmentIndex>e.segmentIndex?1:this.coord.equals2D(e.coord)?0:SegmentPointComparator.compare(this.segmentOctant,this.coord,e.coord)},isEndPoint:function(t){return 0!==this.segmentIndex||this._isInterior?this.segmentIndex===t:!0},isInterior:function(){return this._isInterior},interfaces_:function(){return[Comparable]},getClass:function(){return SegmentNode}}),extend(SegmentNodeList.prototype,{getSplitCoordinates:function(){var t=new CoordinateList;this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next();this.addEdgeCoordinates(n,i,t),n=i}return t.toCoordinateArray()},addCollapsedNodes:function(){var t=new ArrayList;this.findCollapsesFromInsertedNodes(t),this.findCollapsesFromExistingVertices(t);for(var e=t.iterator();e.hasNext();){var n=e.next().intValue();this.add(this.edge.getCoordinate(n),n)}},print:function(t){t.println("Intersections:");for(var e=this.iterator();e.hasNext();){var n=e.next();n.print(t)}},findCollapsesFromExistingVertices:function(t){for(var e=0;e<this.edge.size()-2;e++){var n=this.edge.getCoordinate(e),i=(this.edge.getCoordinate(e+1),this.edge.getCoordinate(e+2));n.equals2D(i)&&t.add(new Integer(e+1))}},addEdgeCoordinates:function(t,e,n){var i=e.segmentIndex-t.segmentIndex+2,r=this.edge.getCoordinate(e.segmentIndex),o=e.isInterior()||!e.coord.equals2D(r);o||i--;n.add(new Coordinate(t.coord),!1);for(var s=t.segmentIndex+1;s<=e.segmentIndex;s++)n.add(this.edge.getCoordinate(s));o&&n.add(new Coordinate(e.coord))},iterator:function(){return this.nodeMap.values().iterator()},addSplitEdges:function(t){this.addEndpoints(),this.addCollapsedNodes();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next(),r=this.createSplitEdge(n,i);t.add(r),n=i}},findCollapseIndex:function(t,e,n){if(!t.coord.equals2D(e.coord))return!1;var i=e.segmentIndex-t.segmentIndex;return e.isInterior()||i--,1===i?(n[0]=t.segmentIndex+1,!0):!1},findCollapsesFromInsertedNodes:function(t){for(var e=new Array(1).fill(null),n=this.iterator(),i=n.next();n.hasNext();){var r=n.next(),o=this.findCollapseIndex(i,r,e);o&&t.add(new Integer(e[0])),i=r}},getEdge:function(){return this.edge},addEndpoints:function(){var t=this.edge.size()-1;this.add(this.edge.getCoordinate(0),0),this.add(this.edge.getCoordinate(t),t)},createSplitEdge:function(t,e){var n=e.segmentIndex-t.segmentIndex+2,i=this.edge.getCoordinate(e.segmentIndex),r=e.isInterior()||!e.coord.equals2D(i);r||n--;var o=new Array(n).fill(null),s=0;o[s++]=new Coordinate(t.coord);for(var a=t.segmentIndex+1;a<=e.segmentIndex;a++)o[s++]=this.edge.getCoordinate(a);return r&&(o[s]=new Coordinate(e.coord)),new NodedSegmentString(o,this.edge.getData())},add:function(t,e){var n=new SegmentNode(this.edge,t,e,this.edge.getSegmentOctant(e)),i=this.nodeMap.get(n);return null!==i?(Assert.isTrue(i.coord.equals2D(t),"Found equal nodes with different coordinates"),i):(this.nodeMap.put(n,n),n)},checkSplitEdgesCorrectness:function(t){var e=this.edge.getCoordinates(),n=t.get(0),i=n.getCoordinate(0);if(!i.equals2D(e[0]))throw new RuntimeException("bad split edge start point at "+i);var r=t.get(t.size()-1),o=r.getCoordinates(),s=o[o.length-1];if(!s.equals2D(e[e.length-1]))throw new RuntimeException("bad split edge end point at "+s)},interfaces_:function(){return[]},getClass:function(){return SegmentNodeList}}),extend(NodeVertexIterator.prototype,{next:function(){return null===this.currNode?(this.currNode=this.nextNode,this.currSegIndex=this.currNode.segmentIndex,this.readNextNode(),this.currNode):null===this.nextNode?null:this.nextNode.segmentIndex===this.currNode.segmentIndex?(this.currNode=this.nextNode,this.currSegIndex=this.currNode.segmentIndex,this.readNextNode(),this.currNode):(this.nextNode.segmentIndex>this.currNode.segmentIndex,null)},remove:function(){throw new UnsupportedOperationException(this.getClass().getName())},hasNext:function(){return null!==this.nextNode},readNextNode:function(){this.nodeIt.hasNext()?this.nextNode=this.nodeIt.next():this.nextNode=null},interfaces_:function(){return[Iterator]},getClass:function(){return NodeVertexIterator}}),extend(Octant.prototype,{interfaces_:function(){return[]},getClass:function(){return Octant}}),Octant.octant=function(){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){var t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new IllegalArgumentException("Cannot compute the octant for point ( "+t+", "+e+" )");var n=Math.abs(t),i=Math.abs(e);return t>=0?e>=0?n>=i?0:1:n>=i?7:6:e>=0?n>=i?3:2:n>=i?4:5}if(arguments[0]instanceof Coordinate&&arguments[1]instanceof Coordinate){var r=arguments[0],o=arguments[1],s=o.x-r.x,a=o.y-r.y;if(0===s&&0===a)throw new IllegalArgumentException("Cannot compute the octant for two identical points "+r);return Octant.octant(s,a)}},extend(SegmentString.prototype,{getCoordinates:function(){},size:function(){},getCoordinate:function(t){},isClosed:function(){},setData:function(t){},getData:function(){},interfaces_:function(){return[]},getClass:function(){return SegmentString}}),extend(NodableSegmentString.prototype,{addIntersection:function(t,e){},interfaces_:function(){return[SegmentString]},getClass:function(){return NodableSegmentString}}),extend(NodedSegmentString.prototype,{getCoordinates:function(){return this.pts},size:function(){return this.pts.length},getCoordinate:function(t){return this.pts[t]},isClosed:function(){return this.pts[0].equals(this.pts[this.pts.length-1])},getSegmentOctant:function(t){return t===this.pts.length-1?-1:this.safeOctant(this.getCoordinate(t),this.getCoordinate(t+1))},setData:function(t){this.data=t},safeOctant:function(t,e){return t.equals2D(e)?0:Octant.octant(t,e)},getData:function(){return this.data},addIntersection:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.addIntersectionNode(t,e)}else if(4===arguments.length){var n=arguments[0],e=arguments[1],i=(arguments[2],arguments[3]),r=new Coordinate(n.getIntersection(i));this.addIntersection(r,e)}},toString:function(){return WKTWriter.toLineString(new CoordinateArraySequence(this.pts))},getNodeList:function(){return this.nodeList},addIntersectionNode:function(t,e){var n=e,i=n+1;if(i<this.pts.length){var r=this.pts[i];t.equals2D(r)&&(n=i)}var o=this.nodeList.add(t,n);return o},addIntersections:function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++)this.addIntersection(t,e,n,i)},interfaces_:function(){return[NodableSegmentString]},getClass:function(){return NodedSegmentString}}),NodedSegmentString.getNodedSubstrings=function(){if(1===arguments.length){var t=arguments[0],e=new ArrayList;return NodedSegmentString.getNodedSubstrings(t,e),e}if(2===arguments.length)for(var t=arguments[0],n=arguments[1],i=t.iterator();i.hasNext();){var r=i.next();r.getNodeList().addSplitEdges(n)}},extend(MonotoneChainOverlapAction.prototype,{overlap:function(){if(2===arguments.length){arguments[0],arguments[1]}else if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];t.getLineSegment(e,this.overlapSeg1),n.getLineSegment(i,this.overlapSeg2),this.overlap(this.overlapSeg1,this.overlapSeg2)}},interfaces_:function(){return[]},getClass:function(){return MonotoneChainOverlapAction}}),extend(MonotoneChain.prototype,{getLineSegment:function(t,e){e.p0=this.pts[t],e.p1=this.pts[t+1]},computeSelect:function(t,e,n,i){var r=this.pts[e],o=this.pts[n];if(i.tempEnv1.init(r,o),n-e===1)return i.select(this,e),null;if(!t.intersects(i.tempEnv1))return null;var s=Math.trunc((e+n)/2);s>e&&this.computeSelect(t,e,s,i),n>s&&this.computeSelect(t,s,n,i)},getCoordinates:function(){for(var t=new Array(this.end-this.start+1).fill(null),e=0,n=this.start;n<=this.end;n++)t[e++]=this.pts[n];return t},computeOverlaps:function(t,e){this.computeOverlapsInternal(this.start,this.end,t,t.start,t.end,e)},setId:function(t){this.id=t},select:function(t,e){this.computeSelect(t,this.start,this.end,e)},getEnvelope:function(){if(null===this.env){var t=this.pts[this.start],e=this.pts[this.end];this.env=new Envelope(t,e)}return this.env},getEndIndex:function(){return this.end},getStartIndex:function(){return this.start},getContext:function(){return this.context},getId:function(){return this.id},computeOverlapsInternal:function(t,e,n,i,r,o){var s=this.pts[t],a=this.pts[e],l=n.pts[i],u=n.pts[r];if(e-t===1&&r-i===1)return o.overlap(this,t,n,i),null;if(o.tempEnv1.init(s,a),o.tempEnv2.init(l,u),!o.tempEnv1.intersects(o.tempEnv2))return null;var c=Math.trunc((t+e)/2),h=Math.trunc((i+r)/2);c>t&&(h>i&&this.computeOverlapsInternal(t,c,n,i,h,o),r>h&&this.computeOverlapsInternal(t,c,n,h,r,o)),e>c&&(h>i&&this.computeOverlapsInternal(c,e,n,i,h,o),r>h&&this.computeOverlapsInternal(c,e,n,h,r,o))},interfaces_:function(){return[]},getClass:function(){return MonotoneChain}}),extend(MonotoneChainBuilder.prototype,{interfaces_:function(){return[]},getClass:function(){return MonotoneChainBuilder}}),MonotoneChainBuilder.getChainStartIndices=function(t){var e=0,n=new ArrayList;n.add(new Integer(e));do{var i=MonotoneChainBuilder.findChainEnd(t,e);n.add(new Integer(i)),e=i}while(e<t.length-1);var r=MonotoneChainBuilder.toIntArray(n);return r},MonotoneChainBuilder.findChainEnd=function(t,e){for(var n=e;n<t.length-1&&t[n].equals2D(t[n+1]);)n++;if(n>=t.length-1)return t.length-1;for(var i=Quadrant.quadrant(t[n],t[n+1]),r=e+1;r<t.length;){if(!t[r-1].equals2D(t[r])){var o=Quadrant.quadrant(t[r-1],t[r]);if(o!==i)break}r++}return r-1},MonotoneChainBuilder.getChains=function(){if(1===arguments.length){var t=arguments[0];return MonotoneChainBuilder.getChains(t,null)}if(2===arguments.length){for(var t=arguments[0],e=arguments[1],n=new ArrayList,i=MonotoneChainBuilder.getChainStartIndices(t),r=0;r<i.length-1;r++){var o=new MonotoneChain(t,i[r],i[r+1],e);n.add(o)}return n}},MonotoneChainBuilder.toIntArray=function(t){for(var e=new Array(t.size()).fill(null),n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e},extend(Noder.prototype,{computeNodes:function(t){},getNodedSubstrings:function(){},interfaces_:function(){return[]},getClass:function(){return Noder}}),extend(SinglePassNoder.prototype,{setSegmentIntersector:function(t){this.segInt=t},interfaces_:function(){return[Noder]},getClass:function(){return SinglePassNoder}}),inherits(MCIndexNoder,SinglePassNoder),extend(MCIndexNoder.prototype,{getMonotoneChains:function(){return this.monoChains},getNodedSubstrings:function(){return NodedSegmentString.getNodedSubstrings(this.nodedSegStrings)},getIndex:function(){return this.index},add:function(t){for(var e=MonotoneChainBuilder.getChains(t.getCoordinates(),t),n=e.iterator();n.hasNext();){var i=n.next();i.setId(this.idCounter++),this.index.insert(i.getEnvelope(),i),this.monoChains.add(i)}},computeNodes:function(t){this.nodedSegStrings=t;for(var e=t.iterator();e.hasNext();)this.add(e.next());this.intersectChains()},intersectChains:function(){for(var t=new SegmentOverlapAction(this.segInt),e=this.monoChains.iterator();e.hasNext();)for(var n=e.next(),i=this.index.query(n.getEnvelope()),r=i.iterator();r.hasNext();){var o=r.next();if(o.getId()>n.getId()&&(n.computeOverlaps(o,t),this.nOverlaps++),this.segInt.isDone())return null}},interfaces_:function(){return[]},getClass:function(){return MCIndexNoder}}),inherits(SegmentOverlapAction,MonotoneChainOverlapAction),extend(SegmentOverlapAction.prototype,{overlap:function(){if(4!==arguments.length)return MonotoneChainOverlapAction.prototype.overlap.apply(this,arguments);var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3],r=t.getContext(),o=n.getContext();this.si.processIntersections(r,e,o,i)},interfaces_:function(){return[]},getClass:function(){return SegmentOverlapAction}}),MCIndexNoder.SegmentOverlapAction=SegmentOverlapAction,extend(ScaledNoder.prototype,{rescale:function(){if(hasInterface(arguments[0],Collection))for(var t=arguments[0],e=t.iterator();e.hasNext();){var n=e.next();this.rescale(n.getCoordinates())}else if(arguments[0]instanceof Array){var i=arguments[0],r=null,o=null;2===i.length&&(r=new Coordinate(i[0]),o=new Coordinate(i[1]));for(var e=0;e<i.length;e++)i[e].x=i[e].x/this.scaleFactor+this.offsetX,i[e].y=i[e].y/this.scaleFactor+this.offsetY;2===i.length&&i[0].equals2D(i[1])&&System.out.println(i)}},scale:function(){if(hasInterface(arguments[0],Collection)){for(var t=arguments[0],e=new ArrayList,n=t.iterator();n.hasNext();){var i=n.next();e.add(new NodedSegmentString(this.scale(i.getCoordinates()),i.getData()))}return e}if(arguments[0]instanceof Array){
for(var r=arguments[0],o=new Array(r.length).fill(null),n=0;n<r.length;n++)o[n]=new Coordinate(Math.round((r[n].x-this.offsetX)*this.scaleFactor),Math.round((r[n].y-this.offsetY)*this.scaleFactor),r[n].z);var s=CoordinateArrays.removeRepeatedPoints(o);return s}},isIntegerPrecision:function(){return 1===this.scaleFactor},getNodedSubstrings:function(){var t=this.noder.getNodedSubstrings();return this.isScaled&&this.rescale(t),t},computeNodes:function(t){var e=t;this.isScaled&&(e=this.scale(t)),this.noder.computeNodes(e)},interfaces_:function(){return[Noder]},getClass:function(){return ScaledNoder}}),extend(GeometryCollectionIterator.prototype,{next:function(){if(this.atStart)return this.atStart=!1,GeometryCollectionIterator.isAtomic(this.parent)&&this.index++,this.parent;if(null!==this.subcollectionIterator){if(this.subcollectionIterator.hasNext())return this.subcollectionIterator.next();this.subcollectionIterator=null}if(this.index>=this.max)throw new NoSuchElementException;var t=this.parent.getGeometryN(this.index++);return t instanceof GeometryCollection?(this.subcollectionIterator=new GeometryCollectionIterator(t),this.subcollectionIterator.next()):t},remove:function(){throw new UnsupportedOperationException(this.getClass().getName())},hasNext:function(){if(this.atStart)return!0;if(null!==this.subcollectionIterator){if(this.subcollectionIterator.hasNext())return!0;this.subcollectionIterator=null}return!(this.index>=this.max)},interfaces_:function(){return[Iterator]},getClass:function(){return GeometryCollectionIterator}}),GeometryCollectionIterator.isAtomic=function(t){return!(t instanceof GeometryCollection)},extend(PointLocator.prototype,{locateInPolygonRing:function(t,e){return e.getEnvelopeInternal().intersects(t)?CGAlgorithms.locatePointInRing(t,e.getCoordinates()):Location.EXTERIOR},intersects:function(t,e){return this.locate(t,e)!==Location.EXTERIOR},updateLocationInfo:function(t){t===Location.INTERIOR&&(this.isIn=!0),t===Location.BOUNDARY&&this.numBoundaries++},computeLocation:function(t,e){if(e instanceof Point&&this.updateLocationInfo(this.locate(t,e)),e instanceof LineString)this.updateLocationInfo(this.locate(t,e));else if(e instanceof Polygon)this.updateLocationInfo(this.locate(t,e));else if(e instanceof MultiLineString)for(var n=e,i=0;i<n.getNumGeometries();i++){var r=n.getGeometryN(i);this.updateLocationInfo(this.locate(t,r))}else if(e instanceof MultiPolygon)for(var o=e,i=0;i<o.getNumGeometries();i++){var s=o.getGeometryN(i);this.updateLocationInfo(this.locate(t,s))}else if(e instanceof GeometryCollection)for(var a=new GeometryCollectionIterator(e);a.hasNext();){var l=a.next();l!==e&&this.computeLocation(t,l)}},locate:function(){if(arguments[0]instanceof Coordinate&&arguments[1]instanceof Polygon){var t=arguments[0],e=arguments[1];if(e.isEmpty())return Location.EXTERIOR;var n=e.getExteriorRing(),i=this.locateInPolygonRing(t,n);if(i===Location.EXTERIOR)return Location.EXTERIOR;if(i===Location.BOUNDARY)return Location.BOUNDARY;for(var r=0;r<e.getNumInteriorRing();r++){var o=e.getInteriorRingN(r),s=this.locateInPolygonRing(t,o);if(s===Location.INTERIOR)return Location.EXTERIOR;if(s===Location.BOUNDARY)return Location.BOUNDARY}return Location.INTERIOR}if(arguments[0]instanceof Coordinate&&arguments[1]instanceof LineString){var t=arguments[0],a=arguments[1];if(!a.getEnvelopeInternal().intersects(t))return Location.EXTERIOR;var l=a.getCoordinates();return a.isClosed()||!t.equals(l[0])&&!t.equals(l[l.length-1])?CGAlgorithms.isOnLine(t,l)?Location.INTERIOR:Location.EXTERIOR:Location.BOUNDARY}if(arguments[0]instanceof Coordinate&&arguments[1]instanceof Point){var t=arguments[0],u=arguments[1],c=u.getCoordinate();return c.equals2D(t)?Location.INTERIOR:Location.EXTERIOR}if(arguments[0]instanceof Coordinate&&arguments[1]instanceof Geometry){var t=arguments[0],h=arguments[1];return h.isEmpty()?Location.EXTERIOR:h instanceof LineString?this.locate(t,h):h instanceof Polygon?this.locate(t,h):(this.isIn=!1,this.numBoundaries=0,this.computeLocation(t,h),this.boundaryRule.isInBoundary(this.numBoundaries)?Location.BOUNDARY:this.numBoundaries>0||this.isIn?Location.INTERIOR:Location.EXTERIOR)}},interfaces_:function(){return[]},getClass:function(){return PointLocator}}),extend(Position.prototype,{interfaces_:function(){return[]},getClass:function(){return Position}}),Position.opposite=function(t){return t===Position.LEFT?Position.RIGHT:t===Position.RIGHT?Position.LEFT:t},Position.ON=0,Position.LEFT=1,Position.RIGHT=2,extend(MonotoneChain$1.prototype,{computeIntersections:function(t,e){this.mce.computeIntersectsForChain(this.chainIndex,t.mce,t.chainIndex,e)},interfaces_:function(){return[]},getClass:function(){return MonotoneChain$1}}),extend(SweepLineEvent.prototype,{isDelete:function(){return this.eventType===SweepLineEvent.DELETE},setDeleteEventIndex:function(t){this.deleteEventIndex=t},getObject:function(){return this.obj},compareTo:function(t){var e=t;return this.xValue<e.xValue?-1:this.xValue>e.xValue?1:this.eventType<e.eventType?-1:this.eventType>e.eventType?1:0},getInsertEvent:function(){return this.insertEvent},isInsert:function(){return this.eventType===SweepLineEvent.INSERT},isSameLabel:function(t){return null===this.label?!1:this.label===t.label},getDeleteEventIndex:function(){return this.deleteEventIndex},interfaces_:function(){return[Comparable]},getClass:function(){return SweepLineEvent}}),SweepLineEvent.INSERT=1,SweepLineEvent.DELETE=2,extend(EdgeSetIntersector.prototype,{interfaces_:function(){return[]},getClass:function(){return EdgeSetIntersector}}),extend(SegmentIntersector.prototype,{isTrivialIntersection:function(t,e,n,i){if(t===n&&1===this.li.getIntersectionNum()){if(SegmentIntersector.isAdjacentSegments(e,i))return!0;if(t.isClosed()){var r=t.getNumPoints()-1;if(0===e&&i===r||0===i&&e===r)return!0}}return!1},getProperIntersectionPoint:function(){return this.properIntersectionPoint},setIsDoneIfProperInt:function(t){this.isDoneWhenProperInt=t},hasProperInteriorIntersection:function(){return this.hasProperInterior},isBoundaryPointInternal:function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next(),r=i.getCoordinate();if(t.isIntersection(r))return!0}return!1},hasProperIntersection:function(){return this.hasProper},hasIntersection:function(){return this._hasIntersection},isDone:function(){return this._isDone},isBoundaryPoint:function(t,e){return null===e?!1:this.isBoundaryPointInternal(t,e[0])?!0:!!this.isBoundaryPointInternal(t,e[1])},setBoundaryNodes:function(t,e){this.bdyNodes=new Array(2).fill(null),this.bdyNodes[0]=t,this.bdyNodes[1]=e},addIntersections:function(t,e,n,i){if(t===n&&e===i)return null;this.numTests++;var r=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[i],a=n.getCoordinates()[i+1];this.li.computeIntersection(r,o,s,a),this.li.hasIntersection()&&(this.recordIsolated&&(t.setIsolated(!1),n.setIsolated(!1)),this.numIntersections++,this.isTrivialIntersection(t,e,n,i)||(this._hasIntersection=!0,!this.includeProper&&this.li.isProper()||(t.addIntersections(this.li,e,0),n.addIntersections(this.li,i,1)),this.li.isProper()&&(this.properIntersectionPoint=this.li.getIntersection(0).copy(),this.hasProper=!0,this.isDoneWhenProperInt&&(this._isDone=!0),this.isBoundaryPoint(this.li,this.bdyNodes)||(this.hasProperInterior=!0))))},interfaces_:function(){return[]},getClass:function(){return SegmentIntersector}}),SegmentIntersector.isAdjacentSegments=function(t,e){return 1===Math.abs(t-e)},inherits(SimpleMCSweepLineIntersector,EdgeSetIntersector),extend(SimpleMCSweepLineIntersector.prototype,{prepareEvents:function(){Collections.sort(this.events);for(var t=0;t<this.events.size();t++){var e=this.events.get(t);e.isDelete()&&e.getInsertEvent().setDeleteEventIndex(t)}},computeIntersections:function(){if(1===arguments.length){var t=arguments[0];this.nOverlaps=0,this.prepareEvents();for(var e=0;e<this.events.size();e++){var n=this.events.get(e);if(n.isInsert()&&this.processOverlaps(e,n.getDeleteEventIndex(),n,t),t.isDone())break}}else if(3===arguments.length)if(arguments[2]instanceof SegmentIntersector&&hasInterface(arguments[0],List)&&hasInterface(arguments[1],List)){var i=arguments[0],r=arguments[1],t=arguments[2];this.addEdges(i,i),this.addEdges(r,r),this.computeIntersections(t)}else if("boolean"==typeof arguments[2]&&hasInterface(arguments[0],List)&&arguments[1]instanceof SegmentIntersector){var o=arguments[0],t=arguments[1],s=arguments[2];s?this.addEdges(o,null):this.addEdges(o),this.computeIntersections(t)}},addEdge:function(t,e){for(var n=t.getMonotoneChainEdge(),i=n.getStartIndexes(),r=0;r<i.length-1;r++){var o=new MonotoneChain$1(n,r),s=new SweepLineEvent(e,n.getMinX(r),o);this.events.add(s),this.events.add(new SweepLineEvent(n.getMaxX(r),s))}},processOverlaps:function(t,e,n,i){for(var r=n.getObject(),o=t;e>o;o++){var s=this.events.get(o);if(s.isInsert()){var a=s.getObject();n.isSameLabel(s)||(r.computeIntersections(a,i),this.nOverlaps++)}}},addEdges:function(){if(1===arguments.length)for(var t=arguments[0],e=t.iterator();e.hasNext();){var n=e.next();this.addEdge(n,n)}else if(2===arguments.length)for(var t=arguments[0],i=arguments[1],e=t.iterator();e.hasNext();){var n=e.next();this.addEdge(n,i)}},interfaces_:function(){return[]},getClass:function(){return SimpleMCSweepLineIntersector}}),extend(TopologyLocation.prototype,{setAllLocations:function(t){for(var e=0;e<this.location.length;e++)this.location[e]=t},isNull:function(){for(var t=0;t<this.location.length;t++)if(this.location[t]!==Location.NONE)return!1;return!0},setAllLocationsIfNull:function(t){for(var e=0;e<this.location.length;e++)this.location[e]===Location.NONE&&(this.location[e]=t)},isLine:function(){return 1===this.location.length},merge:function(t){if(t.location.length>this.location.length){var e=new Array(3).fill(null);e[Position.ON]=this.location[Position.ON],e[Position.LEFT]=Location.NONE,e[Position.RIGHT]=Location.NONE,this.location=e}for(var n=0;n<this.location.length;n++)this.location[n]===Location.NONE&&n<t.location.length&&(this.location[n]=t.location[n])},getLocations:function(){return this.location},flip:function(){if(this.location.length<=1)return null;var t=this.location[Position.LEFT];this.location[Position.LEFT]=this.location[Position.RIGHT],this.location[Position.RIGHT]=t},toString:function(){var t=new StringBuffer;return this.location.length>1&&t.append(Location.toLocationSymbol(this.location[Position.LEFT])),t.append(Location.toLocationSymbol(this.location[Position.ON])),this.location.length>1&&t.append(Location.toLocationSymbol(this.location[Position.RIGHT])),t.toString()},setLocations:function(t,e,n){this.location[Position.ON]=t,this.location[Position.LEFT]=e,this.location[Position.RIGHT]=n},get:function(t){return t<this.location.length?this.location[t]:Location.NONE},isArea:function(){return this.location.length>1},isAnyNull:function(){for(var t=0;t<this.location.length;t++)if(this.location[t]===Location.NONE)return!0;return!1},setLocation:function(){if(1===arguments.length){var t=arguments[0];this.setLocation(Position.ON,t)}else if(2===arguments.length){var e=arguments[0],t=arguments[1];this.location[e]=t}},init:function(t){this.location=new Array(t).fill(null),this.setAllLocations(Location.NONE)},isEqualOnSide:function(t,e){return this.location[e]===t.location[e]},allPositionsEqual:function(t){for(var e=0;e<this.location.length;e++)if(this.location[e]!==t)return!1;return!0},interfaces_:function(){return[]},getClass:function(){return TopologyLocation}}),extend(Label.prototype,{getGeometryCount:function(){var t=0;return this.elt[0].isNull()||t++,this.elt[1].isNull()||t++,t},setAllLocations:function(t,e){this.elt[t].setAllLocations(e)},isNull:function(t){return this.elt[t].isNull()},setAllLocationsIfNull:function(){if(1===arguments.length){var t=arguments[0];this.setAllLocationsIfNull(0,t),this.setAllLocationsIfNull(1,t)}else if(2===arguments.length){var e=arguments[0],t=arguments[1];this.elt[e].setAllLocationsIfNull(t)}},isLine:function(t){return this.elt[t].isLine()},merge:function(t){for(var e=0;2>e;e++)null===this.elt[e]&&null!==t.elt[e]?this.elt[e]=new TopologyLocation(t.elt[e]):this.elt[e].merge(t.elt[e])},flip:function(){this.elt[0].flip(),this.elt[1].flip()},getLocation:function(){if(1===arguments.length){var t=arguments[0];return this.elt[t].get(Position.ON)}if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.elt[t].get(e)}},toString:function(){var t=new StringBuffer;return null!==this.elt[0]&&(t.append("A:"),t.append(this.elt[0].toString())),null!==this.elt[1]&&(t.append(" B:"),t.append(this.elt[1].toString())),t.toString()},isArea:function(){if(0===arguments.length)return this.elt[0].isArea()||this.elt[1].isArea();if(1===arguments.length){var t=arguments[0];return this.elt[t].isArea()}},isAnyNull:function(t){return this.elt[t].isAnyNull()},setLocation:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.elt[t].setLocation(Position.ON,e)}else if(3===arguments.length){var t=arguments[0],n=arguments[1],e=arguments[2];this.elt[t].setLocation(n,e)}},isEqualOnSide:function(t,e){return this.elt[0].isEqualOnSide(t.elt[0],e)&&this.elt[1].isEqualOnSide(t.elt[1],e)},allPositionsEqual:function(t,e){return this.elt[t].allPositionsEqual(e)},toLine:function(t){this.elt[t].isArea()&&(this.elt[t]=new TopologyLocation(this.elt[t].location[0]))},interfaces_:function(){return[]},getClass:function(){return Label}}),Label.toLineLabel=function(t){for(var e=new Label(Location.NONE),n=0;2>n;n++)e.setLocation(n,t.getLocation(n));return e},extend(PointOnGeometryLocator.prototype,{locate:function(t){},interfaces_:function(){return[]},getClass:function(){return PointOnGeometryLocator}}),extend(IntervalRTreeNode$1.prototype,{getMin:function(){return this.min},intersects:function(t,e){return!(this.min>e||this.max<t)},getMax:function(){return this.max},toString:function(){return WKTWriter.toLineString(new Coordinate(this.min,0),new Coordinate(this.max,0))},interfaces_:function(){return[]},getClass:function(){return IntervalRTreeNode$1}}),extend(NodeComparator.prototype,{compare:function(t,e){var n=t,i=e,r=(n.min+n.max)/2,o=(i.min+i.max)/2;return o>r?-1:r>o?1:0},interfaces_:function(){return[Comparator]},getClass:function(){return NodeComparator}}),IntervalRTreeNode$1.NodeComparator=NodeComparator,inherits(IntervalRTreeLeafNode,IntervalRTreeNode$1),extend(IntervalRTreeLeafNode.prototype,{query:function(t,e,n){return this.intersects(t,e)?void n.visitItem(this.item):null},interfaces_:function(){return[]},getClass:function(){return IntervalRTreeLeafNode}}),inherits(IntervalRTreeBranchNode,IntervalRTreeNode$1),extend(IntervalRTreeBranchNode.prototype,{buildExtent:function(t,e){this.min=Math.min(t.min,e.min),this.max=Math.max(t.max,e.max)},query:function(t,e,n){return this.intersects(t,e)?(null!==this.node1&&this.node1.query(t,e,n),void(null!==this.node2&&this.node2.query(t,e,n))):null},interfaces_:function(){return[]},getClass:function(){return IntervalRTreeBranchNode}}),extend(SortedPackedIntervalRTree.prototype,{buildTree:function(){Collections.sort(this.leaves,new IntervalRTreeNode.NodeComparator);for(var t=this.leaves,e=null,n=new ArrayList;;){if(this.buildLevel(t,n),1===n.size())return n.get(0);e=t,t=n,n=e}},insert:function(t,e,n){if(null!==this.root)throw new IllegalStateException("Index cannot be added to once it has been queried");this.leaves.add(new IntervalRTreeLeafNode(t,e,n))},query:function(t,e,n){this.init(),this.root.query(t,e,n)},buildRoot:function(){return null!==this.root?null:void(this.root=this.buildTree())},printNode:function(t){System.out.println(WKTWriter.toLineString(new Coordinate(t.min,this.level),new Coordinate(t.max,this.level)))},init:function(){return null!==this.root?null:void this.buildRoot()},buildLevel:function(t,e){this.level++,e.clear();for(var n=0;n<t.size();n+=2){var i=t.get(n),r=n+1<t.size()?t.get(n):null;if(null===r)e.add(i);else{var o=new IntervalRTreeBranchNode(t.get(n),t.get(n+1));e.add(o)}}},interfaces_:function(){return[]},getClass:function(){return SortedPackedIntervalRTree}}),extend(LinearComponentExtracter.prototype,{filter:function(t){if(this.isForcedToLineString&&t instanceof LinearRing){var e=t.getFactory().createLineString(t.getCoordinateSequence());return this.lines.add(e),null}t instanceof LineString&&this.lines.add(t)},setForceToLineString:function(t){this.isForcedToLineString=t},interfaces_:function(){return[GeometryComponentFilter$1]},getClass:function(){return LinearComponentExtracter}}),LinearComponentExtracter.getGeometry=function(){if(1===arguments.length){var t=arguments[0];return t.getFactory().buildGeometry(LinearComponentExtracter.getLines(t))}if(2===arguments.length){var t=arguments[0],e=arguments[1];return t.getFactory().buildGeometry(LinearComponentExtracter.getLines(t,e))}},LinearComponentExtracter.getLines=function(){if(1===arguments.length){var t=arguments[0];return LinearComponentExtracter.getLines(t,!1)}if(2===arguments.length){if(hasInterface(arguments[0],Collection)&&hasInterface(arguments[1],Collection)){for(var e=arguments[0],n=arguments[1],i=e.iterator();i.hasNext();){var r=i.next();LinearComponentExtracter.getLines(r,n)}return n}if(arguments[0]instanceof Geometry&&"boolean"==typeof arguments[1]){var t=arguments[0],o=arguments[1],s=new ArrayList;return t.apply(new LinearComponentExtracter(s,o)),s}if(arguments[0]instanceof Geometry&&hasInterface(arguments[1],Collection)){var t=arguments[0],a=arguments[1];return t instanceof LineString?a.add(t):t.apply(new LinearComponentExtracter(a)),a}}else if(3===arguments.length){if("boolean"==typeof arguments[2]&&hasInterface(arguments[0],Collection)&&hasInterface(arguments[1],Collection)){for(var e=arguments[0],l=arguments[1],o=arguments[2],i=e.iterator();i.hasNext();){var r=i.next();LinearComponentExtracter.getLines(r,l,o)}return l}if("boolean"==typeof arguments[2]&&arguments[0]instanceof Geometry&&hasInterface(arguments[1],Collection)){var t=arguments[0],u=arguments[1],o=arguments[2];return t.apply(new LinearComponentExtracter(u,o)),u}}},extend(IndexedPointInAreaLocator.prototype,{locate:function(t){var e=new RayCrossingCounter(t),n=new SegmentVisitor(e);return this.index.query(t.y,t.y,n),e.getLocation()},interfaces_:function(){return[PointOnGeometryLocator]},getClass:function(){return IndexedPointInAreaLocator}}),extend(SegmentVisitor.prototype,{visitItem:function(t){var e=t;this.counter.countSegment(e.getCoordinate(0),e.getCoordinate(1))},interfaces_:function(){return[ItemVisitor]},getClass:function(){return SegmentVisitor}}),extend(IntervalIndexedGeometry.prototype,{init:function(t){for(var e=LinearComponentExtracter.getLines(t),n=e.iterator();n.hasNext();){var i=n.next(),r=i.getCoordinates();this.addLine(r)}},addLine:function(t){for(var e=1;e<t.length;e++){var n=new LineSegment(t[e-1],t[e]),i=Math.min(n.p0.y,n.p1.y),r=Math.max(n.p0.y,n.p1.y);this.index.insert(i,r,n)}},query:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new ArrayListVisitor;return this.index.query(t,e,n),n.getItems()}if(3===arguments.length){var t=arguments[0],e=arguments[1],i=arguments[2];this.index.query(t,e,i)}},interfaces_:function(){return[]},getClass:function(){return IntervalIndexedGeometry}}),IndexedPointInAreaLocator.SegmentVisitor=SegmentVisitor,IndexedPointInAreaLocator.IntervalIndexedGeometry=IntervalIndexedGeometry,extend(EdgeIntersection.prototype,{getSegmentIndex:function(){return this.segmentIndex},getCoordinate:function(){return this.coord},print:function(t){t.print(this.coord),t.print(" seg # = "+this.segmentIndex),t.println(" dist = "+this.dist)},compareTo:function(t){var e=t;return this.compare(e.segmentIndex,e.dist)},isEndPoint:function(t){return 0===this.segmentIndex&&0===this.dist?!0:this.segmentIndex===t},toString:function(){return this.coord+" seg # = "+this.segmentIndex+" dist = "+this.dist},getDistance:function(){return this.dist},compare:function(t,e){return this.segmentIndex<t?-1:this.segmentIndex>t?1:this.dist<e?-1:this.dist>e?1:0},interfaces_:function(){return[Comparable]},getClass:function(){return EdgeIntersection}}),extend(EdgeIntersectionList.prototype,{print:function(t){t.println("Intersections:");for(var e=this.iterator();e.hasNext();){var n=e.next();n.print(t)}},iterator:function(){return this.nodeMap.values().iterator()},addSplitEdges:function(t){this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next(),r=this.createSplitEdge(n,i);t.add(r),n=i}},addEndpoints:function(){var t=this.edge.pts.length-1;this.add(this.edge.pts[0],0,0),this.add(this.edge.pts[t],t,0)},createSplitEdge:function(t,e){var n=e.segmentIndex-t.segmentIndex+2,i=this.edge.pts[e.segmentIndex],r=e.dist>0||!e.coord.equals2D(i);r||n--;var o=new Array(n).fill(null),s=0;o[s++]=new Coordinate(t.coord);for(var a=t.segmentIndex+1;a<=e.segmentIndex;a++)o[s++]=this.edge.pts[a];return r&&(o[s]=e.coord),new Edge(o,new Label(this.edge.label))},add:function(t,e,n){var i=new EdgeIntersection(t,e,n),r=this.nodeMap.get(i);return null!==r?r:(this.nodeMap.put(i,i),i)},isIntersection:function(t){for(var e=this.iterator();e.hasNext();){var n=e.next();if(n.coord.equals(t))return!0}return!1},interfaces_:function(){return[]},getClass:function(){return EdgeIntersectionList}}),extend(MonotoneChainIndexer.prototype,{getChainStartIndices:function(t){var e=0,n=new ArrayList;n.add(new Integer(e));do{var i=this.findChainEnd(t,e);n.add(new Integer(i)),e=i}while(e<t.length-1);var r=MonotoneChainIndexer.toIntArray(n);return r},findChainEnd:function(t,e){for(var n=Quadrant.quadrant(t[e],t[e+1]),i=e+1;i<t.length;){var r=Quadrant.quadrant(t[i-1],t[i]);if(r!==n)break;i++}return i-1},interfaces_:function(){return[]},getClass:function(){return MonotoneChainIndexer}}),MonotoneChainIndexer.toIntArray=function(t){for(var e=new Array(t.size()).fill(null),n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e},extend(MonotoneChainEdge.prototype,{getCoordinates:function(){return this.pts},getMaxX:function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e>n?e:n},getMinX:function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return n>e?e:n},computeIntersectsForChain:function(){if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.computeIntersectsForChain(this.startIndex[t],this.startIndex[t+1],e,e.startIndex[n],e.startIndex[n+1],i)}else if(6===arguments.length){var r=arguments[0],o=arguments[1],e=arguments[2],s=arguments[3],a=arguments[4],l=arguments[5],u=this.pts[r],c=this.pts[o],h=e.pts[s],d=e.pts[a];if(o-r===1&&a-s===1)return l.addIntersections(this.e,r,e.e,s),null;if(this.env1.init(u,c),this.env2.init(h,d),!this.env1.intersects(this.env2))return null;var g=Math.trunc((r+o)/2),f=Math.trunc((s+a)/2);g>r&&(f>s&&this.computeIntersectsForChain(r,g,e,s,f,l),a>f&&this.computeIntersectsForChain(r,g,e,f,a,l)),o>g&&(f>s&&this.computeIntersectsForChain(g,o,e,s,f,l),a>f&&this.computeIntersectsForChain(g,o,e,f,a,l))}},getStartIndexes:function(){return this.startIndex},computeIntersects:function(t,e){for(var n=0;n<this.startIndex.length-1;n++)for(var i=0;i<t.startIndex.length-1;i++)this.computeIntersectsForChain(n,t,i,e)},interfaces_:function(){return[]},getClass:function(){return MonotoneChainEdge}}),extend(Depth.prototype,{getDepth:function(t,e){return this.depth[t][e]},setDepth:function(t,e,n){this.depth[t][e]=n},isNull:function(){if(0===arguments.length){for(var t=0;2>t;t++)for(var e=0;3>e;e++)if(this.depth[t][e]!==Depth.NULL_VALUE)return!1;return!0}if(1===arguments.length){var n=arguments[0];return this.depth[n][1]===Depth.NULL_VALUE}if(2===arguments.length){var n=arguments[0],i=arguments[1];return this.depth[n][i]===Depth.NULL_VALUE}},normalize:function(){for(var t=0;2>t;t++)if(!this.isNull(t)){var e=this.depth[t][1];this.depth[t][2]<e&&(e=this.depth[t][2]),0>e&&(e=0);for(var n=1;3>n;n++){var i=0;this.depth[t][n]>e&&(i=1),this.depth[t][n]=i}}},getDelta:function(t){return this.depth[t][Position.RIGHT]-this.depth[t][Position.LEFT]},getLocation:function(t,e){return this.depth[t][e]<=0?Location.EXTERIOR:Location.INTERIOR},toString:function(){return"A: "+this.depth[0][1]+","+this.depth[0][2]+" B: "+this.depth[1][1]+","+this.depth[1][2]},add:function(){if(1===arguments.length)for(var t=arguments[0],e=0;2>e;e++)for(var n=1;3>n;n++){var i=t.getLocation(e,n);i!==Location.EXTERIOR&&i!==Location.INTERIOR||(this.isNull(e,n)?this.depth[e][n]=Depth.depthAtLocation(i):this.depth[e][n]+=Depth.depthAtLocation(i))}else if(3===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2];s===Location.INTERIOR&&this.depth[r][o]++}},interfaces_:function(){return[]},getClass:function(){return Depth}}),Depth.depthAtLocation=function(t){return t===Location.EXTERIOR?0:t===Location.INTERIOR?1:Depth.NULL_VALUE},Depth.NULL_VALUE=-1,extend(GraphComponent.prototype,{setVisited:function(t){this._isVisited=t},setInResult:function(t){this._isInResult=t},isCovered:function(){return this._isCovered},isCoveredSet:function(){return this._isCoveredSet},setLabel:function(t){this.label=t},getLabel:function(){return this.label},setCovered:function(t){this._isCovered=t,this._isCoveredSet=!0},updateIM:function(t){Assert.isTrue(this.label.getGeometryCount()>=2,"found partial label"),this.computeIM(t)},isInResult:function(){return this._isInResult},isVisited:function(){return this._isVisited},interfaces_:function(){return[]},getClass:function(){return GraphComponent}}),inherits(Edge,GraphComponent),extend(Edge.prototype,{getDepth:function(){return this.depth},getCollapsedEdge:function(){var t=new Array(2).fill(null);t[0]=this.pts[0],t[1]=this.pts[1];var e=new Edge(t,Label.toLineLabel(this.label));return e},isIsolated:function(){return this._isIsolated},getCoordinates:function(){return this.pts},setIsolated:function(t){this._isIsolated=t},setName:function(t){this.name=t},equals:function(t){if(!(t instanceof Edge))return!1;var e=t;if(this.pts.length!==e.pts.length)return!1;for(var n=!0,i=!0,r=this.pts.length,o=0;o<this.pts.length;o++)if(this.pts[o].equals2D(e.pts[o])||(n=!1),this.pts[o].equals2D(e.pts[--r])||(i=!1),!n&&!i)return!1;return!0},getCoordinate:function(){if(0===arguments.length)return this.pts.length>0?this.pts[0]:null;if(1===arguments.length){var t=arguments[0];return this.pts[t]}},print:function(t){t.print("edge "+this.name+": "),t.print("LINESTRING (");for(var e=0;e<this.pts.length;e++)e>0&&t.print(","),t.print(this.pts[e].x+" "+this.pts[e].y);t.print(")  "+this.label+" "+this.depthDelta)},computeIM:function(t){Edge.updateIM(this.label,t)},isCollapsed:function(){return this.label.isArea()?3!==this.pts.length?!1:!!this.pts[0].equals(this.pts[2]):!1},isClosed:function(){return this.pts[0].equals(this.pts[this.pts.length-1])},getMaximumSegmentIndex:function(){return this.pts.length-1},getDepthDelta:function(){return this.depthDelta},getNumPoints:function(){return this.pts.length},printReverse:function(t){t.print("edge "+this.name+": ");for(var e=this.pts.length-1;e>=0;e--)t.print(this.pts[e]+" ");t.println("")},getMonotoneChainEdge:function(){return null===this.mce&&(this.mce=new MonotoneChainEdge(this)),this.mce},getEnvelope:function(){if(null===this.env){this.env=new Envelope;for(var t=0;t<this.pts.length;t++)this.env.expandToInclude(this.pts[t])}return this.env},addIntersection:function(t,e,n,i){var r=new Coordinate(t.getIntersection(i)),o=e,s=t.getEdgeDistance(n,i),a=o+1;if(a<this.pts.length){var l=this.pts[a];r.equals2D(l)&&(o=a,s=0)}this.eiList.add(r,o,s)},toString:function(){var t=new StringBuffer;t.append("edge "+this.name+": "),t.append("LINESTRING (");for(var e=0;e<this.pts.length;e++)e>0&&t.append(","),t.append(this.pts[e].x+" "+this.pts[e].y);return t.append(")  "+this.label+" "+this.depthDelta),t.toString()},isPointwiseEqual:function(t){if(this.pts.length!==t.pts.length)return!1;for(var e=0;e<this.pts.length;e++)if(!this.pts[e].equals2D(t.pts[e]))return!1;return!0},setDepthDelta:function(t){this.depthDelta=t},getEdgeIntersectionList:function(){return this.eiList},addIntersections:function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++)this.addIntersection(t,e,n,i)},interfaces_:function(){return[]},getClass:function(){return Edge}}),Edge.updateIM=function(){if(2!==arguments.length)return GraphComponent.prototype.updateIM.apply(this,arguments);var t=arguments[0],e=arguments[1];e.setAtLeastIfValid(t.getLocation(0,Position.ON),t.getLocation(1,Position.ON),1),t.isArea()&&(e.setAtLeastIfValid(t.getLocation(0,Position.LEFT),t.getLocation(1,Position.LEFT),2),e.setAtLeastIfValid(t.getLocation(0,Position.RIGHT),t.getLocation(1,Position.RIGHT),2))},inherits(Node$1,GraphComponent),extend(Node$1.prototype,{isIncidentEdgeInResult:function(){for(var t=this.getEdges().getEdges().iterator();t.hasNext();){var e=t.next();if(e.getEdge().isInResult())return!0}return!1},isIsolated:function(){return 1===this.label.getGeometryCount()},getCoordinate:function(){return this.coord},print:function(t){t.println("node "+this.coord+" lbl: "+this.label)},computeIM:function(t){},computeMergedLocation:function(t,e){var n=Location.NONE;if(n=this.label.getLocation(e),!t.isNull(e)){var i=t.getLocation(e);n!==Location.BOUNDARY&&(n=i)}return n},setLabel:function(){if(2!==arguments.length)return GraphComponent.prototype.setLabel.apply(this,arguments);var t=arguments[0],e=arguments[1];null===this.label?this.label=new Label(t,e):this.label.setLocation(t,e)},getEdges:function(){return this.edges},mergeLabel:function(){if(arguments[0]instanceof Node$1){var t=arguments[0];this.mergeLabel(t.label)}else if(arguments[0]instanceof Label)for(var e=arguments[0],n=0;2>n;n++){var i=this.computeMergedLocation(e,n),r=this.label.getLocation(n);r===Location.NONE&&this.label.setLocation(n,i)}},add:function(t){this.edges.insert(t),t.setNode(this)},setLabelBoundary:function(t){if(null===this.label)return null;var e=Location.NONE;null!==this.label&&(e=this.label.getLocation(t));var n=null;switch(e){case Location.BOUNDARY:n=Location.INTERIOR;break;case Location.INTERIOR:n=Location.BOUNDARY;break;default:n=Location.BOUNDARY}this.label.setLocation(t,n)},interfaces_:function(){return[]},getClass:function(){return Node$1}}),extend(NodeMap.prototype,{find:function(t){return this.nodeMap.get(t)},addNode:function(){if(arguments[0]instanceof Coordinate){var t=arguments[0],e=this.nodeMap.get(t);return null===e&&(e=this.nodeFact.createNode(t),this.nodeMap.put(t,e)),e}if(arguments[0]instanceof Node$1){var n=arguments[0],e=this.nodeMap.get(n.getCoordinate());return null===e?(this.nodeMap.put(n.getCoordinate(),n),n):(e.mergeLabel(n),e)}},print:function(t){for(var e=this.iterator();e.hasNext();){var n=e.next();n.print(t)}},iterator:function(){return this.nodeMap.values().iterator()},values:function(){return this.nodeMap.values()},getBoundaryNodes:function(t){for(var e=new ArrayList,n=this.iterator();n.hasNext();){var i=n.next();i.getLabel().getLocation(t)===Location.BOUNDARY&&e.add(i)}return e},add:function(t){var e=t.getCoordinate(),n=this.addNode(e);n.add(t)},interfaces_:function(){return[]},getClass:function(){return NodeMap}}),extend(EdgeEnd.prototype,{compareDirection:function(t){return this.dx===t.dx&&this.dy===t.dy?0:this.quadrant>t.quadrant?1:this.quadrant<t.quadrant?-1:CGAlgorithms.computeOrientation(t.p0,t.p1,this.p1)},getDy:function(){return this.dy},getCoordinate:function(){return this.p0},setNode:function(t){this.node=t},print:function(t){var e=Math.atan2(this.dy,this.dx),n=this.getClass().getName(),i=n.lastIndexOf("."),r=n.substring(i+1);t.print("  "+r+": "+this.p0+" - "+this.p1+" "+this.quadrant+":"+e+"   "+this.label)},compareTo:function(t){var e=t;return this.compareDirection(e)},getDirectedCoordinate:function(){return this.p1},getDx:function(){return this.dx},getLabel:function(){return this.label},getEdge:function(){return this.edge},getQuadrant:function(){return this.quadrant},getNode:function(){return this.node},toString:function(){var t=Math.atan2(this.dy,this.dx),e=this.getClass().getName(),n=e.lastIndexOf("."),i=e.substring(n+1);
return"  "+i+": "+this.p0+" - "+this.p1+" "+this.quadrant+":"+t+"   "+this.label},computeLabel:function(t){},init:function(t,e){this.p0=t,this.p1=e,this.dx=e.x-t.x,this.dy=e.y-t.y,this.quadrant=Quadrant.quadrant(this.dx,this.dy),Assert.isTrue(!(0===this.dx&&0===this.dy),"EdgeEnd with identical endpoints found")},interfaces_:function(){return[Comparable]},getClass:function(){return EdgeEnd}}),inherits(TopologyException,RuntimeException),extend(TopologyException.prototype,{getCoordinate:function(){return this.pt},interfaces_:function(){return[]},getClass:function(){return TopologyException}}),TopologyException.msgWithCoord=function(t,e){return null!==e?t+" [ "+e+" ]":t},inherits(DirectedEdge,EdgeEnd),extend(DirectedEdge.prototype,{getNextMin:function(){return this.nextMin},getDepth:function(t){return this.depth[t]},setVisited:function(t){this._isVisited=t},computeDirectedLabel:function(){this.label=new Label(this.edge.getLabel()),this._isForward||this.label.flip()},getNext:function(){return this.next},setDepth:function(t,e){if(-999!==this.depth[t]&&this.depth[t]!==e)throw new TopologyException("assigned depths do not match",this.getCoordinate());this.depth[t]=e},isInteriorAreaEdge:function t(){for(var t=!0,e=0;2>e;e++)this.label.isArea(e)&&this.label.getLocation(e,Position.LEFT)===Location.INTERIOR&&this.label.getLocation(e,Position.RIGHT)===Location.INTERIOR||(t=!1);return t},setNextMin:function(t){this.nextMin=t},print:function(t){EdgeEnd.prototype.print.call(this,t),t.print(" "+this.depth[Position.LEFT]+"/"+this.depth[Position.RIGHT]),t.print(" ("+this.getDepthDelta()+")"),this._isInResult&&t.print(" inResult")},setMinEdgeRing:function(t){this.minEdgeRing=t},isLineEdge:function(){var t=this.label.isLine(0)||this.label.isLine(1),e=!this.label.isArea(0)||this.label.allPositionsEqual(0,Location.EXTERIOR),n=!this.label.isArea(1)||this.label.allPositionsEqual(1,Location.EXTERIOR);return t&&e&&n},setEdgeRing:function(t){this.edgeRing=t},getMinEdgeRing:function(){return this.minEdgeRing},getDepthDelta:function(){var t=this.edge.getDepthDelta();return this._isForward||(t=-t),t},setInResult:function(t){this._isInResult=t},getSym:function(){return this.sym},isForward:function(){return this._isForward},getEdge:function(){return this.edge},printEdge:function(t){this.print(t),t.print(" "),this._isForward?this.edge.print(t):this.edge.printReverse(t)},setSym:function(t){this.sym=t},setVisitedEdge:function(t){this.setVisited(t),this.sym.setVisited(t)},setEdgeDepths:function(t,e){var n=this.getEdge().getDepthDelta();this._isForward||(n=-n);var i=1;t===Position.LEFT&&(i=-1);var r=Position.opposite(t),o=n*i,s=e+o;this.setDepth(t,e),this.setDepth(r,s)},getEdgeRing:function(){return this.edgeRing},isInResult:function(){return this._isInResult},setNext:function(t){this.next=t},isVisited:function(){return this._isVisited},interfaces_:function(){return[]},getClass:function(){return DirectedEdge}}),DirectedEdge.depthFactor=function(t,e){return t===Location.EXTERIOR&&e===Location.INTERIOR?1:t===Location.INTERIOR&&e===Location.EXTERIOR?-1:0},extend(NodeFactory.prototype,{createNode:function(t){return new Node$1(t,null)},interfaces_:function(){return[]},getClass:function(){return NodeFactory}}),extend(PlanarGraph.prototype,{printEdges:function(t){t.println("Edges:");for(var e=0;e<this.edges.size();e++){t.println("edge "+e+":");var n=this.edges.get(e);n.print(t),n.eiList.print(t)}},find:function(t){return this.nodes.find(t)},addNode:function(){if(arguments[0]instanceof Node$1){var t=arguments[0];return this.nodes.addNode(t)}if(arguments[0]instanceof Coordinate){var e=arguments[0];return this.nodes.addNode(e)}},getNodeIterator:function(){return this.nodes.iterator()},linkResultDirectedEdges:function(){for(var t=this.nodes.iterator();t.hasNext();){var e=t.next();e.getEdges().linkResultDirectedEdges()}},debugPrintln:function(t){System.out.println(t)},isBoundaryNode:function(t,e){var n=this.nodes.find(e);if(null===n)return!1;var i=n.getLabel();return null!==i&&i.getLocation(t)===Location.BOUNDARY},linkAllDirectedEdges:function(){for(var t=this.nodes.iterator();t.hasNext();){var e=t.next();e.getEdges().linkAllDirectedEdges()}},matchInSameDirection:function(t,e,n,i){return t.equals(n)?CGAlgorithms.computeOrientation(t,e,i)===CGAlgorithms.COLLINEAR&&Quadrant.quadrant(t,e)===Quadrant.quadrant(n,i):!1},getEdgeEnds:function(){return this.edgeEndList},debugPrint:function(t){System.out.print(t)},getEdgeIterator:function(){return this.edges.iterator()},findEdgeInSameDirection:function(t,e){for(var n=0;n<this.edges.size();n++){var i=this.edges.get(n),r=i.getCoordinates();if(this.matchInSameDirection(t,e,r[0],r[1]))return i;if(this.matchInSameDirection(t,e,r[r.length-1],r[r.length-2]))return i}return null},insertEdge:function(t){this.edges.add(t)},findEdgeEnd:function(t){for(var e=this.getEdgeEnds().iterator();e.hasNext();){var n=e.next();if(n.getEdge()===t)return n}return null},addEdges:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.edges.add(n);var i=new DirectedEdge(n,!0),r=new DirectedEdge(n,!1);i.setSym(r),r.setSym(i),this.add(i),this.add(r)}},add:function(t){this.nodes.add(t),this.edgeEndList.add(t)},getNodes:function(){return this.nodes.values()},findEdge:function(t,e){for(var n=0;n<this.edges.size();n++){var i=this.edges.get(n),r=i.getCoordinates();if(t.equals(r[0])&&e.equals(r[1]))return i}return null},interfaces_:function(){return[]},getClass:function(){return PlanarGraph}}),PlanarGraph.linkResultDirectedEdges=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();n.getEdges().linkResultDirectedEdges()}},inherits(GeometryGraph,PlanarGraph),extend(GeometryGraph.prototype,{insertBoundaryPoint:function(t,e){var n=this.nodes.addNode(e),i=n.getLabel(),r=1,o=Location.NONE;o=i.getLocation(t,Position.ON),o===Location.BOUNDARY&&r++;var s=GeometryGraph.determineBoundary(this.boundaryNodeRule,r);i.setLocation(t,s)},computeSelfNodes:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.computeSelfNodes(t,e,!1)}if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=new SegmentIntersector(t,!0,!1);i.setIsDoneIfProperInt(n);var r=this.createEdgeSetIntersector(),o=this.parentGeom instanceof LinearRing||this.parentGeom instanceof Polygon||this.parentGeom instanceof MultiPolygon,s=e||!o;return r.computeIntersections(this.edges,i,s),this.addSelfIntersectionNodes(this.argIndex),i}},computeSplitEdges:function(t){for(var e=this.edges.iterator();e.hasNext();){var n=e.next();n.eiList.addSplitEdges(t)}},computeEdgeIntersections:function(t,e,n){var i=new SegmentIntersector(e,n,!0);i.setBoundaryNodes(this.getBoundaryNodes(),t.getBoundaryNodes());var r=this.createEdgeSetIntersector();return r.computeIntersections(this.edges,t.edges,i),i},getGeometry:function(){return this.parentGeom},getBoundaryNodeRule:function(){return this.boundaryNodeRule},hasTooFewPoints:function(){return this._hasTooFewPoints},addPoint:function(){if(arguments[0]instanceof Point){var t=arguments[0],e=t.getCoordinate();this.insertPoint(this.argIndex,e,Location.INTERIOR)}else if(arguments[0]instanceof Coordinate){var n=arguments[0];this.insertPoint(this.argIndex,n,Location.INTERIOR)}},addPolygon:function(t){this.addPolygonRing(t.getExteriorRing(),Location.EXTERIOR,Location.INTERIOR);for(var e=0;e<t.getNumInteriorRing();e++){var n=t.getInteriorRingN(e);this.addPolygonRing(n,Location.INTERIOR,Location.EXTERIOR)}},addEdge:function(t){this.insertEdge(t);var e=t.getCoordinates();this.insertPoint(this.argIndex,e[0],Location.BOUNDARY),this.insertPoint(this.argIndex,e[e.length-1],Location.BOUNDARY)},addLineString:function(t){var e=CoordinateArrays.removeRepeatedPoints(t.getCoordinates());if(e.length<2)return this._hasTooFewPoints=!0,this.invalidPoint=e[0],null;var n=new Edge(e,new Label(this.argIndex,Location.INTERIOR));this.lineEdgeMap.put(t,n),this.insertEdge(n),Assert.isTrue(e.length>=2,"found LineString with single point"),this.insertBoundaryPoint(this.argIndex,e[0]),this.insertBoundaryPoint(this.argIndex,e[e.length-1])},getInvalidPoint:function(){return this.invalidPoint},getBoundaryPoints:function(){for(var t=this.getBoundaryNodes(),e=new Array(t.size()).fill(null),n=0,i=t.iterator();i.hasNext();){var r=i.next();e[n++]=r.getCoordinate().copy()}return e},getBoundaryNodes:function(){return null===this.boundaryNodes&&(this.boundaryNodes=this.nodes.getBoundaryNodes(this.argIndex)),this.boundaryNodes},addSelfIntersectionNode:function(t,e,n){return this.isBoundaryNode(t,e)?null:void(n===Location.BOUNDARY&&this.useBoundaryDeterminationRule?this.insertBoundaryPoint(t,e):this.insertPoint(t,e,n))},addPolygonRing:function(t,e,n){if(t.isEmpty())return null;var i=CoordinateArrays.removeRepeatedPoints(t.getCoordinates());if(i.length<4)return this._hasTooFewPoints=!0,this.invalidPoint=i[0],null;var r=e,o=n;CGAlgorithms.isCCW(i)&&(r=n,o=e);var s=new Edge(i,new Label(this.argIndex,Location.BOUNDARY,r,o));this.lineEdgeMap.put(t,s),this.insertEdge(s),this.insertPoint(this.argIndex,i[0],Location.BOUNDARY)},insertPoint:function(t,e,n){var i=this.nodes.addNode(e),r=i.getLabel();null===r?i.label=new Label(t,n):r.setLocation(t,n)},createEdgeSetIntersector:function(){return new SimpleMCSweepLineIntersector},addSelfIntersectionNodes:function(t){for(var e=this.edges.iterator();e.hasNext();)for(var n=e.next(),i=n.getLabel().getLocation(t),r=n.eiList.iterator();r.hasNext();){var o=r.next();this.addSelfIntersectionNode(t,o.coord,i)}},add:function(){if(1!==arguments.length)return PlanarGraph.prototype.add.apply(this,arguments);var t=arguments[0];if(t.isEmpty())return null;if(t instanceof MultiPolygon&&(this.useBoundaryDeterminationRule=!1),t instanceof Polygon)this.addPolygon(t);else if(t instanceof LineString)this.addLineString(t);else if(t instanceof Point)this.addPoint(t);else if(t instanceof MultiPoint)this.addCollection(t);else if(t instanceof MultiLineString)this.addCollection(t);else if(t instanceof MultiPolygon)this.addCollection(t);else{if(!(t instanceof GeometryCollection))throw new UnsupportedOperationException(t.getClass().getName());this.addCollection(t)}},addCollection:function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);this.add(n)}},locate:function(t){return hasInterface(this.parentGeom,Polygonal)&&this.parentGeom.getNumGeometries()>50?(null===this.areaPtLocator&&(this.areaPtLocator=new IndexedPointInAreaLocator(this.parentGeom)),this.areaPtLocator.locate(t)):this.ptLocator.locate(t,this.parentGeom)},findEdge:function(){if(1===arguments.length){var t=arguments[0];return this.lineEdgeMap.get(t)}return PlanarGraph.prototype.findEdge.apply(this,arguments)},interfaces_:function(){return[]},getClass:function(){return GeometryGraph}}),GeometryGraph.determineBoundary=function(t,e){return t.isInBoundary(e)?Location.BOUNDARY:Location.INTERIOR},extend(IsSimpleOp.prototype,{isSimpleMultiPoint:function(t){if(t.isEmpty())return!0;for(var e=new TreeSet,n=0;n<t.getNumGeometries();n++){var i=t.getGeometryN(n),r=i.getCoordinate();if(e.contains(r))return this.nonSimpleLocation=r,!1;e.add(r)}return!0},isSimplePolygonal:function(t){for(var e=LinearComponentExtracter.getLines(t),n=e.iterator();n.hasNext();){var i=n.next();if(!this.isSimpleLinearGeometry(i))return!1}return!0},hasClosedEndpointIntersection:function(t){for(var e=new TreeMap,n=t.getEdgeIterator();n.hasNext();){var i=n.next(),r=(i.getMaximumSegmentIndex(),i.isClosed()),o=i.getCoordinate(0);this.addEndpoint(e,o,r);var s=i.getCoordinate(i.getNumPoints()-1);this.addEndpoint(e,s,r)}for(var n=e.values().iterator();n.hasNext();){var a=n.next();if(a.isClosed&&2!==a.degree)return this.nonSimpleLocation=a.getCoordinate(),!0}return!1},getNonSimpleLocation:function(){return this.nonSimpleLocation},isSimpleLinearGeometry:function(t){if(t.isEmpty())return!0;var e=new GeometryGraph(0,t),n=new RobustLineIntersector,i=e.computeSelfNodes(n,!0);return i.hasIntersection()?i.hasProperIntersection()?(this.nonSimpleLocation=i.getProperIntersectionPoint(),!1):this.hasNonEndpointIntersection(e)?!1:!this.isClosedEndpointsInInterior||!this.hasClosedEndpointIntersection(e):!0},hasNonEndpointIntersection:function(t){for(var e=t.getEdgeIterator();e.hasNext();)for(var n=e.next(),i=n.getMaximumSegmentIndex(),r=n.getEdgeIntersectionList().iterator();r.hasNext();){var o=r.next();if(!o.isEndPoint(i))return this.nonSimpleLocation=o.getCoordinate(),!0}return!1},addEndpoint:function(t,e,n){var i=t.get(e);null===i&&(i=new EndpointInfo(e),t.put(e,i)),i.addEndpoint(n)},computeSimple:function(t){return this.nonSimpleLocation=null,t.isEmpty()?!0:t instanceof LineString?this.isSimpleLinearGeometry(t):t instanceof MultiLineString?this.isSimpleLinearGeometry(t):t instanceof MultiPoint?this.isSimpleMultiPoint(t):hasInterface(t,Polygonal)?this.isSimplePolygonal(t):t instanceof GeometryCollection?this.isSimpleGeometryCollection(t):!0},isSimple:function(){return this.nonSimpleLocation=null,this.computeSimple(this.inputGeom)},isSimpleGeometryCollection:function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);if(!this.computeSimple(n))return!1}return!0},interfaces_:function(){return[]},getClass:function(){return IsSimpleOp}}),extend(EndpointInfo.prototype,{addEndpoint:function(t){this.degree++,this.isClosed|=t},getCoordinate:function(){return this.pt},interfaces_:function(){return[]},getClass:function(){return EndpointInfo}}),IsSimpleOp.EndpointInfo=EndpointInfo,extend(BufferParameters.prototype,{getEndCapStyle:function(){return this.endCapStyle},isSingleSided:function(){return this._isSingleSided},setQuadrantSegments:function(t){this.quadrantSegments=t,0===this.quadrantSegments&&(this.joinStyle=BufferParameters.JOIN_BEVEL),this.quadrantSegments<0&&(this.joinStyle=BufferParameters.JOIN_MITRE,this.mitreLimit=Math.abs(this.quadrantSegments)),0>=t&&(this.quadrantSegments=1),this.joinStyle!==BufferParameters.JOIN_ROUND&&(this.quadrantSegments=BufferParameters.DEFAULT_QUADRANT_SEGMENTS)},getJoinStyle:function(){return this.joinStyle},setJoinStyle:function(t){this.joinStyle=t},setSimplifyFactor:function(t){this.simplifyFactor=0>t?0:t},getSimplifyFactor:function(){return this.simplifyFactor},getQuadrantSegments:function(){return this.quadrantSegments},setEndCapStyle:function(t){this.endCapStyle=t},getMitreLimit:function(){return this.mitreLimit},setMitreLimit:function(t){this.mitreLimit=t},setSingleSided:function(t){this._isSingleSided=t},interfaces_:function(){return[]},getClass:function(){return BufferParameters}}),BufferParameters.bufferDistanceError=function(t){var e=Math.PI/2/t;return 1-Math.cos(e/2)},BufferParameters.CAP_ROUND=1,BufferParameters.CAP_FLAT=2,BufferParameters.CAP_SQUARE=3,BufferParameters.JOIN_ROUND=1,BufferParameters.JOIN_MITRE=2,BufferParameters.JOIN_BEVEL=3,BufferParameters.DEFAULT_QUADRANT_SEGMENTS=8,BufferParameters.DEFAULT_MITRE_LIMIT=5,BufferParameters.DEFAULT_SIMPLIFY_FACTOR=.01,extend(RightmostEdgeFinder.prototype,{getCoordinate:function(){return this.minCoord},getRightmostSide:function(t,e){var n=this.getRightmostSideOfSegment(t,e);return 0>n&&(n=this.getRightmostSideOfSegment(t,e-1)),0>n&&(this.minCoord=null,this.checkForRightmostCoordinate(t)),n},findRightmostEdgeAtVertex:function(){var t=this.minDe.getEdge().getCoordinates();Assert.isTrue(this.minIndex>0&&this.minIndex<t.length,"rightmost point expected to be interior vertex of edge");var e=t[this.minIndex-1],n=t[this.minIndex+1],i=CGAlgorithms.computeOrientation(this.minCoord,n,e),r=!1;e.y<this.minCoord.y&&n.y<this.minCoord.y&&i===CGAlgorithms.COUNTERCLOCKWISE?r=!0:e.y>this.minCoord.y&&n.y>this.minCoord.y&&i===CGAlgorithms.CLOCKWISE&&(r=!0),r&&(this.minIndex=this.minIndex-1)},getRightmostSideOfSegment:function(t,e){var n=t.getEdge(),i=n.getCoordinates();if(0>e||e+1>=i.length)return-1;if(i[e].y===i[e+1].y)return-1;var r=Position.LEFT;return i[e].y<i[e+1].y&&(r=Position.RIGHT),r},getEdge:function(){return this.orientedDe},checkForRightmostCoordinate:function(t){for(var e=t.getEdge().getCoordinates(),n=0;n<e.length-1;n++)(null===this.minCoord||e[n].x>this.minCoord.x)&&(this.minDe=t,this.minIndex=n,this.minCoord=e[n])},findRightmostEdgeAtNode:function(){var t=this.minDe.getNode(),e=t.getEdges();this.minDe=e.getRightmostEdge(),this.minDe.isForward()||(this.minDe=this.minDe.getSym(),this.minIndex=this.minDe.getEdge().getCoordinates().length-1)},findEdge:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();n.isForward()&&this.checkForRightmostCoordinate(n)}Assert.isTrue(0!==this.minIndex||this.minCoord.equals(this.minDe.getCoordinate()),"inconsistency in rightmost processing"),0===this.minIndex?this.findRightmostEdgeAtNode():this.findRightmostEdgeAtVertex(),this.orientedDe=this.minDe;var i=this.getRightmostSide(this.minDe,this.minIndex);i===Position.LEFT&&(this.orientedDe=this.minDe.getSym())},interfaces_:function(){return[]},getClass:function(){return RightmostEdgeFinder}}),LinkedList.prototype.addLast=function(t){this.array_.push(t)},LinkedList.prototype.removeFirst=function(){return this.array_.shift()},LinkedList.prototype.isEmpty=function(){return 0===this.array_.length},extend(BufferSubgraph.prototype,{clearVisitedEdges:function(){for(var t=this.dirEdgeList.iterator();t.hasNext();){var e=t.next();e.setVisited(!1)}},getRightmostCoordinate:function(){return this.rightMostCoord},computeNodeDepth:function(t){for(var e=null,n=t.getEdges().iterator();n.hasNext();){var i=n.next();if(i.isVisited()||i.getSym().isVisited()){e=i;break}}if(null===e)throw new TopologyException("unable to find edge to compute depths at "+t.getCoordinate());t.getEdges().computeDepths(e);for(var n=t.getEdges().iterator();n.hasNext();){var i=n.next();i.setVisited(!0),this.copySymDepths(i)}},computeDepth:function(t){this.clearVisitedEdges();var e=this.finder.getEdge();e.getNode(),e.getLabel();e.setEdgeDepths(Position.RIGHT,t),this.copySymDepths(e),this.computeDepths(e)},create:function(t){this.addReachable(t),this.finder.findEdge(this.dirEdgeList),this.rightMostCoord=this.finder.getCoordinate()},findResultEdges:function(){for(var t=this.dirEdgeList.iterator();t.hasNext();){var e=t.next();e.getDepth(Position.RIGHT)>=1&&e.getDepth(Position.LEFT)<=0&&!e.isInteriorAreaEdge()&&e.setInResult(!0)}},computeDepths:function(t){var e=new HashSet,n=new LinkedList,i=t.getNode();for(n.addLast(i),e.add(i),t.setVisited(!0);!n.isEmpty();){var r=n.removeFirst();e.add(r),this.computeNodeDepth(r);for(var o=r.getEdges().iterator();o.hasNext();){var s=o.next(),a=s.getSym();if(!a.isVisited()){var l=a.getNode();e.contains(l)||(n.addLast(l),e.add(l))}}}},compareTo:function(t){var e=t;return this.rightMostCoord.x<e.rightMostCoord.x?-1:this.rightMostCoord.x>e.rightMostCoord.x?1:0},getEnvelope:function(){if(null===this.env){for(var t=new Envelope,e=this.dirEdgeList.iterator();e.hasNext();)for(var n=e.next(),i=n.getEdge().getCoordinates(),r=0;r<i.length-1;r++)t.expandToInclude(i[r]);this.env=t}return this.env},addReachable:function(t){var e=new Stack;for(e.add(t);!e.empty();){var n=e.pop();this.add(n,e)}},copySymDepths:function(t){var e=t.getSym();e.setDepth(Position.LEFT,t.getDepth(Position.RIGHT)),e.setDepth(Position.RIGHT,t.getDepth(Position.LEFT))},add:function(t,e){t.setVisited(!0),this.nodes.add(t);for(var n=t.getEdges().iterator();n.hasNext();){var i=n.next();this.dirEdgeList.add(i);var r=i.getSym(),o=r.getNode();o.isVisited()||e.push(o)}},getNodes:function(){return this.nodes},getDirectedEdges:function(){return this.dirEdgeList},interfaces_:function(){return[Comparable]},getClass:function(){return BufferSubgraph}}),extend(EdgeRing.prototype,{computeRing:function(){if(null!==this.ring)return null;for(var t=new Array(this.pts.size()).fill(null),e=0;e<this.pts.size();e++)t[e]=this.pts.get(e);this.ring=this.geometryFactory.createLinearRing(t),this._isHole=CGAlgorithms.isCCW(this.ring.getCoordinates())},isIsolated:function(){return 1===this.label.getGeometryCount()},computePoints:function(t){this.startDe=t;var e=t,n=!0;do{if(null===e)throw new TopologyException("Found null DirectedEdge");if(e.getEdgeRing()===this)throw new TopologyException("Directed Edge visited twice during ring-building at "+e.getCoordinate());this.edges.add(e);var i=e.getLabel();Assert.isTrue(i.isArea()),this.mergeLabel(i),this.addPoints(e.getEdge(),e.isForward(),n),n=!1,this.setEdgeRing(e,this),e=this.getNext(e)}while(e!==this.startDe)},getLinearRing:function(){return this.ring},getCoordinate:function(t){return this.pts.get(t)},computeMaxNodeDegree:function(){this.maxNodeDegree=0;var t=this.startDe;do{var e=t.getNode(),n=e.getEdges().getOutgoingDegree(this);n>this.maxNodeDegree&&(this.maxNodeDegree=n),t=this.getNext(t)}while(t!==this.startDe);this.maxNodeDegree*=2},addPoints:function(t,e,n){var i=t.getCoordinates();if(e){var r=1;n&&(r=0);for(var o=r;o<i.length;o++)this.pts.add(i[o])}else{var r=i.length-2;n&&(r=i.length-1);for(var o=r;o>=0;o--)this.pts.add(i[o])}},isHole:function(){return this._isHole},setInResult:function(){var t=this.startDe;do t.getEdge().setInResult(!0),t=t.getNext();while(t!==this.startDe)},containsPoint:function(t){var e=this.getLinearRing(),n=e.getEnvelopeInternal();if(!n.contains(t))return!1;if(!CGAlgorithms.isPointInRing(t,e.getCoordinates()))return!1;for(var i=this.holes.iterator();i.hasNext();){var r=i.next();if(r.containsPoint(t))return!1}return!0},addHole:function(t){this.holes.add(t)},isShell:function(){return null===this.shell},getLabel:function(){return this.label},getEdges:function(){return this.edges},getMaxNodeDegree:function(){return this.maxNodeDegree<0&&this.computeMaxNodeDegree(),this.maxNodeDegree},getShell:function(){return this.shell},mergeLabel:function(){if(1===arguments.length){var t=arguments[0];this.mergeLabel(t,0),this.mergeLabel(t,1)}else if(2===arguments.length){var t=arguments[0],e=arguments[1],n=t.getLocation(e,Position.RIGHT);if(n===Location.NONE)return null;if(this.label.getLocation(e)===Location.NONE)return this.label.setLocation(e,n),null}},setShell:function(t){this.shell=t,null!==t&&t.addHole(this)},toPolygon:function(t){for(var e=new Array(this.holes.size()).fill(null),n=0;n<this.holes.size();n++)e[n]=this.holes.get(n).getLinearRing();var i=t.createPolygon(this.getLinearRing(),e);return i},interfaces_:function(){return[]},getClass:function(){return EdgeRing}}),inherits(MinimalEdgeRing,EdgeRing),extend(MinimalEdgeRing.prototype,{setEdgeRing:function(t,e){t.setMinEdgeRing(e)},getNext:function(t){return t.getNextMin()},interfaces_:function(){return[]},getClass:function(){return MinimalEdgeRing}}),inherits(MaximalEdgeRing,EdgeRing),extend(MaximalEdgeRing.prototype,{buildMinimalRings:function(){var t=new ArrayList,e=this.startDe;do{if(null===e.getMinEdgeRing()){var n=new MinimalEdgeRing(e,this.geometryFactory);t.add(n)}e=e.getNext()}while(e!==this.startDe);return t},setEdgeRing:function(t,e){t.setEdgeRing(e)},linkDirectedEdgesForMinimalEdgeRings:function(){var t=this.startDe;do{var e=t.getNode();e.getEdges().linkMinimalDirectedEdges(this),t=t.getNext()}while(t!==this.startDe)},getNext:function(t){return t.getNext()},interfaces_:function(){return[]},getClass:function(){return MaximalEdgeRing}}),extend(PolygonBuilder.prototype,{sortShellsAndHoles:function(t,e,n){for(var i=t.iterator();i.hasNext();){var r=i.next();r.isHole()?n.add(r):e.add(r)}},computePolygons:function(t){for(var e=new ArrayList,n=t.iterator();n.hasNext();){var i=n.next(),r=i.toPolygon(this.geometryFactory);e.add(r)}return e},placeFreeHoles:function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next();if(null===i.getShell()){var r=this.findEdgeRingContaining(i,t);if(null===r)throw new TopologyException("unable to assign hole to a shell",i.getCoordinate(0));i.setShell(r)}}},buildMinimalEdgeRings:function(t,e,n){for(var i=new ArrayList,r=t.iterator();r.hasNext();){var o=r.next();if(o.getMaxNodeDegree()>2){o.linkDirectedEdgesForMinimalEdgeRings();var s=o.buildMinimalRings(),a=this.findShell(s);null!==a?(this.placePolygonHoles(a,s),e.add(a)):n.addAll(s)}else i.add(o)}return i},containsPoint:function(t){for(var e=this.shellList.iterator();e.hasNext();){var n=e.next();if(n.containsPoint(t))return!0}return!1},buildMaximalEdgeRings:function(t){for(var e=new ArrayList,n=t.iterator();n.hasNext();){var i=n.next();if(i.isInResult()&&i.getLabel().isArea()&&null===i.getEdgeRing()){var r=new MaximalEdgeRing(i,this.geometryFactory);e.add(r),r.setInResult()}}return e},placePolygonHoles:function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next();i.isHole()&&i.setShell(t)}},getPolygons:function(){var t=this.computePolygons(this.shellList);return t},findEdgeRingContaining:function(t,e){for(var n=t.getLinearRing(),i=n.getEnvelopeInternal(),r=n.getCoordinateN(0),o=null,s=null,a=e.iterator();a.hasNext();){var l=a.next(),u=l.getLinearRing(),c=u.getEnvelopeInternal();null!==o&&(s=o.getLinearRing().getEnvelopeInternal());var h=!1;c.contains(i)&&CGAlgorithms.isPointInRing(r,u.getCoordinates())&&(h=!0),h&&(null===o||s.contains(c))&&(o=l)}return o},findShell:function(t){for(var e=0,n=null,i=t.iterator();i.hasNext();){var r=i.next();r.isHole()||(n=r,e++)}return Assert.isTrue(1>=e,"found two shells in MinimalEdgeRing list"),n},add:function(){if(1===arguments.length){var t=arguments[0];this.add(t.getEdgeEnds(),t.getNodes())}else if(2===arguments.length){var e=arguments[0],n=arguments[1];PlanarGraph.linkResultDirectedEdges(n);var i=this.buildMaximalEdgeRings(e),r=new ArrayList,o=this.buildMinimalEdgeRings(i,this.shellList,r);this.sortShellsAndHoles(o,this.shellList,r),this.placeFreeHoles(this.shellList,r)}},interfaces_:function(){return[]},getClass:function(){return PolygonBuilder}}),extend(BufferInputLineSimplifier.prototype,{isDeletable:function(t,e,n,i){var r=this.inputLine[t],o=this.inputLine[e],s=this.inputLine[n];return this.isConcave(r,o,s)&&this.isShallow(r,o,s,i)?this.isShallowSampled(r,o,t,n,i):!1},deleteShallowConcavities:function(){for(var t=1,e=(this.inputLine.length-1,this.findNextNonDeletedIndex(t)),n=this.findNextNonDeletedIndex(e),i=!1;n<this.inputLine.length;){var r=!1;this.isDeletable(t,e,n,this.distanceTol)&&(this.isDeleted[e]=BufferInputLineSimplifier.DELETE,r=!0,i=!0),t=r?n:e,e=this.findNextNonDeletedIndex(t),n=this.findNextNonDeletedIndex(e)}return i},isShallowConcavity:function(t,e,n,i){var r=CGAlgorithms.computeOrientation(t,e,n),o=r===this.angleOrientation;if(!o)return!1;var s=CGAlgorithms.distancePointLine(e,t,n);return i>s},isShallowSampled:function(t,e,n,i,r){var o=Math.trunc((i-n)/BufferInputLineSimplifier.NUM_PTS_TO_CHECK);0>=o&&(o=1);for(var s=n;i>s;s+=o)if(!this.isShallow(t,e,this.inputLine[s],r))return!1;return!0},isConcave:function t(e,n,i){var r=CGAlgorithms.computeOrientation(e,n,i),t=r===this.angleOrientation;return t},simplify:function(t){this.distanceTol=Math.abs(t),0>t&&(this.angleOrientation=CGAlgorithms.CLOCKWISE),this.isDeleted=new Array(this.inputLine.length).fill(null);var e=!1;do e=this.deleteShallowConcavities();while(e);return this.collapseLine()},findNextNonDeletedIndex:function(t){for(var e=t+1;e<this.inputLine.length&&this.isDeleted[e]===BufferInputLineSimplifier.DELETE;)e++;return e},isShallow:function(t,e,n,i){var r=CGAlgorithms.distancePointLine(e,t,n);return i>r},collapseLine:function(){for(var t=new CoordinateList,e=0;e<this.inputLine.length;e++)this.isDeleted[e]!==BufferInputLineSimplifier.DELETE&&t.add(this.inputLine[e]);return t.toCoordinateArray()},interfaces_:function(){return[]},getClass:function(){return BufferInputLineSimplifier}}),BufferInputLineSimplifier.simplify=function(t,e){var n=new BufferInputLineSimplifier(t);return n.simplify(e)},BufferInputLineSimplifier.INIT=0,BufferInputLineSimplifier.DELETE=1,BufferInputLineSimplifier.KEEP=1,BufferInputLineSimplifier.NUM_PTS_TO_CHECK=10,extend(OffsetSegmentString.prototype,{getCoordinates:function(){var t=this.ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);return t},setPrecisionModel:function(t){this.precisionModel=t},addPt:function(t){var e=new Coordinate(t);return this.precisionModel.makePrecise(e),this.isRedundant(e)?null:void this.ptList.add(e)},reverse:function(){},addPts:function(t,e){if(e)for(var n=0;n<t.length;n++)this.addPt(t[n]);else for(var n=t.length-1;n>=0;n--)this.addPt(t[n])},isRedundant:function(t){if(this.ptList.size()<1)return!1;var e=this.ptList.get(this.ptList.size()-1),n=t.distance(e);return n<this.minimimVertexDistance},toString:function(){var t=new GeometryFactory,e=t.createLineString(this.getCoordinates());return e.toString()},closeRing:function(){if(this.ptList.size()<1)return null;var t=new Coordinate(this.ptList.get(0)),e=this.ptList.get(this.ptList.size()-1),n=null;return this.ptList.size()>=2&&(n=this.ptList.get(this.ptList.size()-2)),t.equals(e)?null:void this.ptList.add(t)},setMinimumVertexDistance:function(t){this.minimimVertexDistance=t},interfaces_:function(){return[]},getClass:function(){return OffsetSegmentString}}),OffsetSegmentString.COORDINATE_ARRAY_TYPE=new Array(0).fill(null),extend(OffsetSegmentGenerator.prototype,{addNextSegment:function(t,e){if(this.s0=this.s1,this.s1=this.s2,this.s2=t,this.seg0.setCoordinates(this.s0,this.s1),this.computeOffsetSegment(this.seg0,this.side,this.distance,this.offset0),this.seg1.setCoordinates(this.s1,this.s2),this.computeOffsetSegment(this.seg1,this.side,this.distance,this.offset1),this.s1.equals(this.s2))return null;var n=CGAlgorithms.computeOrientation(this.s0,this.s1,this.s2),i=n===CGAlgorithms.CLOCKWISE&&this.side===Position.LEFT||n===CGAlgorithms.COUNTERCLOCKWISE&&this.side===Position.RIGHT;0===n?this.addCollinear(e):i?this.addOutsideTurn(n,e):this.addInsideTurn(n,e)},addLineEndCap:function(t,e){var n=new LineSegment(t,e),i=new LineSegment;this.computeOffsetSegment(n,Position.LEFT,this.distance,i);var r=new LineSegment;this.computeOffsetSegment(n,Position.RIGHT,this.distance,r);var o=e.x-t.x,s=e.y-t.y,a=Math.atan2(s,o);switch(this.bufParams.getEndCapStyle()){case BufferParameters.CAP_ROUND:this.segList.addPt(i.p1),this.addFilletArc(e,a+Math.PI/2,a-Math.PI/2,CGAlgorithms.CLOCKWISE,this.distance),this.segList.addPt(r.p1);break;case BufferParameters.CAP_FLAT:this.segList.addPt(i.p1),this.segList.addPt(r.p1);break;case BufferParameters.CAP_SQUARE:var l=new Coordinate;l.x=Math.abs(this.distance)*Math.cos(a),l.y=Math.abs(this.distance)*Math.sin(a);var u=new Coordinate(i.p1.x+l.x,i.p1.y+l.y),c=new Coordinate(r.p1.x+l.x,r.p1.y+l.y);this.segList.addPt(u),this.segList.addPt(c)}},getCoordinates:function(){var t=this.segList.getCoordinates();return t},addMitreJoin:function(t,e,n,i){var r=!0,o=null;try{o=HCoordinate.intersection(e.p0,e.p1,n.p0,n.p1);var s=0>=i?1:o.distance(t)/Math.abs(i);s>this.bufParams.getMitreLimit()&&(r=!1)}catch(t){if(!(t instanceof NotRepresentableException))throw t;o=new Coordinate(0,0),r=!1}finally{}r?this.segList.addPt(o):this.addLimitedMitreJoin(e,n,i,this.bufParams.getMitreLimit())},addFilletCorner:function(t,e,n,i,r){var o=e.x-t.x,s=e.y-t.y,a=Math.atan2(s,o),l=n.x-t.x,u=n.y-t.y,c=Math.atan2(u,l);i===CGAlgorithms.CLOCKWISE?c>=a&&(a+=2*Math.PI):a>=c&&(a-=2*Math.PI),this.segList.addPt(e),this.addFilletArc(t,a,c,i,r),this.segList.addPt(n)},addOutsideTurn:function(t,e){return this.offset0.p1.distance(this.offset1.p0)<this.distance*OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR?(this.segList.addPt(this.offset0.p1),null):void(this.bufParams.getJoinStyle()===BufferParameters.JOIN_MITRE?this.addMitreJoin(this.s1,this.offset0,this.offset1,this.distance):this.bufParams.getJoinStyle()===BufferParameters.JOIN_BEVEL?this.addBevelJoin(this.offset0,this.offset1):(e&&this.segList.addPt(this.offset0.p1),this.addFilletCorner(this.s1,this.offset0.p1,this.offset1.p0,t,this.distance),this.segList.addPt(this.offset1.p0)))},createSquare:function(t){this.segList.addPt(new Coordinate(t.x+this.distance,t.y+this.distance)),this.segList.addPt(new Coordinate(t.x+this.distance,t.y-this.distance)),this.segList.addPt(new Coordinate(t.x-this.distance,t.y-this.distance)),this.segList.addPt(new Coordinate(t.x-this.distance,t.y+this.distance)),this.segList.closeRing()},addSegments:function(t,e){
this.segList.addPts(t,e)},addFirstSegment:function(){this.segList.addPt(this.offset1.p0)},addLastSegment:function(){this.segList.addPt(this.offset1.p1)},initSideSegments:function(t,e,n){this.s1=t,this.s2=e,this.side=n,this.seg1.setCoordinates(t,e),this.computeOffsetSegment(this.seg1,n,this.distance,this.offset1)},addLimitedMitreJoin:function(t,e,n,i){var r=this.seg0.p1,o=Angle.angle(r,this.seg0.p0),s=(Angle.angle(r,this.seg1.p1),Angle.angleBetweenOriented(this.seg0.p0,r,this.seg1.p1)),a=s/2,l=Angle.normalize(o+a),u=Angle.normalize(l+Math.PI),c=i*n,h=c*Math.abs(Math.sin(a)),d=n-h,g=r.x+c*Math.cos(u),f=r.y+c*Math.sin(u),p=new Coordinate(g,f),m=new LineSegment(r,p),y=m.pointAlongOffset(1,d),v=m.pointAlongOffset(1,-d);this.side===Position.LEFT?(this.segList.addPt(y),this.segList.addPt(v)):(this.segList.addPt(v),this.segList.addPt(y))},computeOffsetSegment:function(t,e,n,i){var r=e===Position.LEFT?1:-1,o=t.p1.x-t.p0.x,s=t.p1.y-t.p0.y,a=Math.sqrt(o*o+s*s),l=r*n*o/a,u=r*n*s/a;i.p0.x=t.p0.x-u,i.p0.y=t.p0.y+l,i.p1.x=t.p1.x-u,i.p1.y=t.p1.y+l},addFilletArc:function(t,e,n,i,r){var o=i===CGAlgorithms.CLOCKWISE?-1:1,s=Math.abs(e-n),a=Math.trunc(s/this.filletAngleQuantum+.5);if(1>a)return null;var l=null,u=null;l=0,u=s/a;for(var c=l,h=new Coordinate;s>c;){var d=e+o*c;h.x=t.x+r*Math.cos(d),h.y=t.y+r*Math.sin(d),this.segList.addPt(h),c+=u}},addInsideTurn:function(t,e){if(this.li.computeIntersection(this.offset0.p0,this.offset0.p1,this.offset1.p0,this.offset1.p1),this.li.hasIntersection())this.segList.addPt(this.li.getIntersection(0));else if(this._hasNarrowConcaveAngle=!0,this.offset0.p1.distance(this.offset1.p0)<this.distance*OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR)this.segList.addPt(this.offset0.p1);else{if(this.segList.addPt(this.offset0.p1),this.closingSegLengthFactor>0){var n=new Coordinate((this.closingSegLengthFactor*this.offset0.p1.x+this.s1.x)/(this.closingSegLengthFactor+1),(this.closingSegLengthFactor*this.offset0.p1.y+this.s1.y)/(this.closingSegLengthFactor+1));this.segList.addPt(n);var i=new Coordinate((this.closingSegLengthFactor*this.offset1.p0.x+this.s1.x)/(this.closingSegLengthFactor+1),(this.closingSegLengthFactor*this.offset1.p0.y+this.s1.y)/(this.closingSegLengthFactor+1));this.segList.addPt(i)}else this.segList.addPt(this.s1);this.segList.addPt(this.offset1.p0)}},createCircle:function(t){var e=new Coordinate(t.x+this.distance,t.y);this.segList.addPt(e),this.addFilletArc(t,0,2*Math.PI,-1,this.distance),this.segList.closeRing()},addBevelJoin:function(t,e){this.segList.addPt(t.p1),this.segList.addPt(e.p0)},init:function(t){this.distance=t,this.maxCurveSegmentError=t*(1-Math.cos(this.filletAngleQuantum/2)),this.segList=new OffsetSegmentString,this.segList.setPrecisionModel(this.precisionModel),this.segList.setMinimumVertexDistance(t*OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)},addCollinear:function(t){this.li.computeIntersection(this.s0,this.s1,this.s1,this.s2);var e=this.li.getIntersectionNum();e>=2&&(this.bufParams.getJoinStyle()===BufferParameters.JOIN_BEVEL||this.bufParams.getJoinStyle()===BufferParameters.JOIN_MITRE?(t&&this.segList.addPt(this.offset0.p1),this.segList.addPt(this.offset1.p0)):this.addFilletCorner(this.s1,this.offset0.p1,this.offset1.p0,CGAlgorithms.CLOCKWISE,this.distance))},closeRing:function(){this.segList.closeRing()},hasNarrowConcaveAngle:function(){return this._hasNarrowConcaveAngle},interfaces_:function(){return[]},getClass:function(){return OffsetSegmentGenerator}}),OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR=.001,OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR=.001,OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR=1e-6,OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR=80,extend(OffsetCurveBuilder.prototype,{getOffsetCurve:function(t,e){if(this.distance=e,0===e)return null;var n=0>e,i=Math.abs(e),r=this.getSegGen(i);t.length<=1?this.computePointCurve(t[0],r):this.computeOffsetCurve(t,n,r);var o=r.getCoordinates();return n&&CoordinateArrays.reverse(o),o},computeSingleSidedBufferCurve:function(t,e,n){var i=this.simplifyTolerance(this.distance);if(e){n.addSegments(t,!0);var r=BufferInputLineSimplifier.simplify(t,-i),o=r.length-1;n.initSideSegments(r[o],r[o-1],Position.LEFT),n.addFirstSegment();for(var s=o-2;s>=0;s--)n.addNextSegment(r[s],!0)}else{n.addSegments(t,!1);var a=BufferInputLineSimplifier.simplify(t,i),l=a.length-1;n.initSideSegments(a[0],a[1],Position.LEFT),n.addFirstSegment();for(var s=2;l>=s;s++)n.addNextSegment(a[s],!0)}n.addLastSegment(),n.closeRing()},computeRingBufferCurve:function(t,e,n){var i=this.simplifyTolerance(this.distance);e===Position.RIGHT&&(i=-i);var r=BufferInputLineSimplifier.simplify(t,i),o=r.length-1;n.initSideSegments(r[o-1],r[0],e);for(var s=1;o>=s;s++){var a=1!==s;n.addNextSegment(r[s],a)}n.closeRing()},computeLineBufferCurve:function(t,e){var n=this.simplifyTolerance(this.distance),i=BufferInputLineSimplifier.simplify(t,n),r=i.length-1;e.initSideSegments(i[0],i[1],Position.LEFT);for(var o=2;r>=o;o++)e.addNextSegment(i[o],!0);e.addLastSegment(),e.addLineEndCap(i[r-1],i[r]);var s=BufferInputLineSimplifier.simplify(t,-n),a=s.length-1;e.initSideSegments(s[a],s[a-1],Position.LEFT);for(var o=a-2;o>=0;o--)e.addNextSegment(s[o],!0);e.addLastSegment(),e.addLineEndCap(s[1],s[0]),e.closeRing()},computePointCurve:function(t,e){switch(this.bufParams.getEndCapStyle()){case BufferParameters.CAP_ROUND:e.createCircle(t);break;case BufferParameters.CAP_SQUARE:e.createSquare(t)}},getLineCurve:function(t,e){if(this.distance=e,0>e&&!this.bufParams.isSingleSided())return null;if(0===e)return null;var n=Math.abs(e),i=this.getSegGen(n);if(t.length<=1)this.computePointCurve(t[0],i);else if(this.bufParams.isSingleSided()){var r=0>e;this.computeSingleSidedBufferCurve(t,r,i)}else this.computeLineBufferCurve(t,i);var o=i.getCoordinates();return o},getBufferParameters:function(){return this.bufParams},simplifyTolerance:function(t){return t*this.bufParams.getSimplifyFactor()},getRingCurve:function(t,e,n){if(this.distance=n,t.length<=2)return this.getLineCurve(t,n);if(0===n)return OffsetCurveBuilder.copyCoordinates(t);var i=this.getSegGen(n);return this.computeRingBufferCurve(t,e,i),i.getCoordinates()},computeOffsetCurve:function(t,e,n){var i=this.simplifyTolerance(this.distance);if(e){var r=BufferInputLineSimplifier.simplify(t,-i),o=r.length-1;n.initSideSegments(r[o],r[o-1],Position.LEFT),n.addFirstSegment();for(var s=o-2;s>=0;s--)n.addNextSegment(r[s],!0)}else{var a=BufferInputLineSimplifier.simplify(t,i),l=a.length-1;n.initSideSegments(a[0],a[1],Position.LEFT),n.addFirstSegment();for(var s=2;l>=s;s++)n.addNextSegment(a[s],!0)}n.addLastSegment()},getSegGen:function(t){return new OffsetSegmentGenerator(this.precisionModel,this.bufParams,t)},interfaces_:function(){return[]},getClass:function(){return OffsetCurveBuilder}}),OffsetCurveBuilder.copyCoordinates=function(t){for(var e=new Array(t.length).fill(null),n=0;n<e.length;n++)e[n]=new Coordinate(t[n]);return e},extend(SubgraphDepthLocater.prototype,{findStabbedSegments:function(){if(1===arguments.length){for(var t=arguments[0],e=new ArrayList,n=this.subgraphs.iterator();n.hasNext();){var i=n.next(),r=i.getEnvelope();t.y<r.getMinY()||t.y>r.getMaxY()||this.findStabbedSegments(t,i.getDirectedEdges(),e)}return e}if(3===arguments.length)if(hasInterface(arguments[2],List)&&arguments[0]instanceof Coordinate&&arguments[1]instanceof DirectedEdge)for(var t=arguments[0],o=arguments[1],s=arguments[2],a=o.getEdge().getCoordinates(),n=0;n<a.length-1;n++){this.seg.p0=a[n],this.seg.p1=a[n+1],this.seg.p0.y>this.seg.p1.y&&this.seg.reverse();var l=Math.max(this.seg.p0.x,this.seg.p1.x);if(!(l<t.x||this.seg.isHorizontal()||t.y<this.seg.p0.y||t.y>this.seg.p1.y||CGAlgorithms.computeOrientation(this.seg.p0,this.seg.p1,t)===CGAlgorithms.RIGHT)){var u=o.getDepth(Position.LEFT);this.seg.p0.equals(a[n])||(u=o.getDepth(Position.RIGHT));var c=new DepthSegment(this.seg,u);s.add(c)}}else if(hasInterface(arguments[2],List)&&arguments[0]instanceof Coordinate&&hasInterface(arguments[1],List))for(var t=arguments[0],h=arguments[1],d=arguments[2],n=h.iterator();n.hasNext();){var g=n.next();g.isForward()&&this.findStabbedSegments(t,g,d)}},getDepth:function(t){var e=this.findStabbedSegments(t);if(0===e.size())return 0;var n=Collections.min(e);return n.leftDepth},interfaces_:function(){return[]},getClass:function(){return SubgraphDepthLocater}}),extend(DepthSegment.prototype,{compareTo:function(t){var e=t;if(this.upwardSeg.minX()>=e.upwardSeg.maxX())return 1;if(this.upwardSeg.maxX()<=e.upwardSeg.minX())return-1;var n=this.upwardSeg.orientationIndex(e.upwardSeg);return 0!==n?n:(n=-1*e.upwardSeg.orientationIndex(this.upwardSeg),0!==n?n:this.upwardSeg.compareTo(e.upwardSeg))},compareX:function(t,e){var n=t.p0.compareTo(e.p0);return 0!==n?n:t.p1.compareTo(e.p1)},toString:function(){return this.upwardSeg.toString()},interfaces_:function(){return[Comparable]},getClass:function(){return DepthSegment}}),SubgraphDepthLocater.DepthSegment=DepthSegment,extend(OffsetCurveSetBuilder.prototype,{addPoint:function(t){if(this.distance<=0)return null;var e=t.getCoordinates(),n=this.curveBuilder.getLineCurve(e,this.distance);this.addCurve(n,Location.EXTERIOR,Location.INTERIOR)},addPolygon:function(t){var e=this.distance,n=Position.LEFT;this.distance<0&&(e=-this.distance,n=Position.RIGHT);var i=t.getExteriorRing(),r=CoordinateArrays.removeRepeatedPoints(i.getCoordinates());if(this.distance<0&&this.isErodedCompletely(i,this.distance))return null;if(this.distance<=0&&r.length<3)return null;this.addPolygonRing(r,e,n,Location.EXTERIOR,Location.INTERIOR);for(var o=0;o<t.getNumInteriorRing();o++){var s=t.getInteriorRingN(o),a=CoordinateArrays.removeRepeatedPoints(s.getCoordinates());this.distance>0&&this.isErodedCompletely(s,-this.distance)||this.addPolygonRing(a,e,Position.opposite(n),Location.INTERIOR,Location.EXTERIOR)}},isTriangleErodedCompletely:function(t,e){var n=new Triangle(t[0],t[1],t[2]),i=n.inCentre(),r=CGAlgorithms.distancePointLine(i,n.p0,n.p1);return r<Math.abs(e)},addLineString:function(t){if(this.distance<=0&&!this.curveBuilder.getBufferParameters().isSingleSided())return null;var e=CoordinateArrays.removeRepeatedPoints(t.getCoordinates()),n=this.curveBuilder.getLineCurve(e,this.distance);this.addCurve(n,Location.EXTERIOR,Location.INTERIOR)},addCurve:function(t,e,n){if(null===t||t.length<2)return null;var i=new NodedSegmentString(t,new Label(0,Location.BOUNDARY,e,n));this.curveList.add(i)},getCurves:function(){return this.add(this.inputGeom),this.curveList},addPolygonRing:function(t,e,n,i,r){if(0===e&&t.length<LinearRing.MINIMUM_VALID_SIZE)return null;var o=i,s=r;t.length>=LinearRing.MINIMUM_VALID_SIZE&&CGAlgorithms.isCCW(t)&&(o=r,s=i,n=Position.opposite(n));var a=this.curveBuilder.getRingCurve(t,n,e);this.addCurve(a,o,s)},add:function(t){if(t.isEmpty())return null;if(t instanceof Polygon)this.addPolygon(t);else if(t instanceof LineString)this.addLineString(t);else if(t instanceof Point)this.addPoint(t);else if(t instanceof MultiPoint)this.addCollection(t);else if(t instanceof MultiLineString)this.addCollection(t);else if(t instanceof MultiPolygon)this.addCollection(t);else{if(!(t instanceof GeometryCollection))throw new UnsupportedOperationException(t.getClass().getName());this.addCollection(t)}},isErodedCompletely:function(t,e){var n=t.getCoordinates();if(n.length<4)return 0>e;if(4===n.length)return this.isTriangleErodedCompletely(n,e);var i=t.getEnvelopeInternal(),r=Math.min(i.getHeight(),i.getWidth());return 0>e&&2*Math.abs(e)>r},addCollection:function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);this.add(n)}},interfaces_:function(){return[]},getClass:function(){return OffsetCurveSetBuilder}}),extend(SimplePointInAreaLocator.prototype,{locate:function(t){return SimplePointInAreaLocator.locate(t,this.geom)},interfaces_:function(){return[PointOnGeometryLocator]},getClass:function(){return SimplePointInAreaLocator}}),SimplePointInAreaLocator.isPointInRing=function(t,e){return e.getEnvelopeInternal().intersects(t)?CGAlgorithms.isPointInRing(t,e.getCoordinates()):!1},SimplePointInAreaLocator.containsPointInPolygon=function(t,e){if(e.isEmpty())return!1;var n=e.getExteriorRing();if(!SimplePointInAreaLocator.isPointInRing(t,n))return!1;for(var i=0;i<e.getNumInteriorRing();i++){var r=e.getInteriorRingN(i);if(SimplePointInAreaLocator.isPointInRing(t,r))return!1}return!0},SimplePointInAreaLocator.containsPoint=function(t,e){if(e instanceof Polygon)return SimplePointInAreaLocator.containsPointInPolygon(t,e);if(e instanceof GeometryCollection)for(var n=new GeometryCollectionIterator(e);n.hasNext();){var i=n.next();if(i!==e&&SimplePointInAreaLocator.containsPoint(t,i))return!0}return!1},SimplePointInAreaLocator.locate=function(t,e){return e.isEmpty()?Location.EXTERIOR:SimplePointInAreaLocator.containsPoint(t,e)?Location.INTERIOR:Location.EXTERIOR},extend(EdgeEndStar.prototype,{getNextCW:function(t){this.getEdges();var e=this.edgeList.indexOf(t),n=e-1;return 0===e&&(n=this.edgeList.size()-1),this.edgeList.get(n)},propagateSideLabels:function(t){for(var e=Location.NONE,n=this.iterator();n.hasNext();){var i=n.next(),r=i.getLabel();r.isArea(t)&&r.getLocation(t,Position.LEFT)!==Location.NONE&&(e=r.getLocation(t,Position.LEFT))}if(e===Location.NONE)return null;for(var o=e,n=this.iterator();n.hasNext();){var i=n.next(),r=i.getLabel();if(r.getLocation(t,Position.ON)===Location.NONE&&r.setLocation(t,Position.ON,o),r.isArea(t)){var s=r.getLocation(t,Position.LEFT),a=r.getLocation(t,Position.RIGHT);if(a!==Location.NONE){if(a!==o)throw new TopologyException("side location conflict",i.getCoordinate());s===Location.NONE&&Assert.shouldNeverReachHere("found single null side (at "+i.getCoordinate()+")"),o=s}else Assert.isTrue(r.getLocation(t,Position.LEFT)===Location.NONE,"found single null side"),r.setLocation(t,Position.RIGHT,o),r.setLocation(t,Position.LEFT,o)}}},getCoordinate:function(){var t=this.iterator();if(!t.hasNext())return null;var e=t.next();return e.getCoordinate()},print:function(t){System.out.println("EdgeEndStar:   "+this.getCoordinate());for(var e=this.iterator();e.hasNext();){var n=e.next();n.print(t)}},isAreaLabelsConsistent:function(t){return this.computeEdgeEndLabels(t.getBoundaryNodeRule()),this.checkAreaLabelsConsistent(0)},checkAreaLabelsConsistent:function(t){var e=this.getEdges();if(e.size()<=0)return!0;var n=e.size()-1,i=e.get(n).getLabel(),r=i.getLocation(t,Position.LEFT);Assert.isTrue(r!==Location.NONE,"Found unlabelled area edge");for(var o=r,s=this.iterator();s.hasNext();){var a=s.next(),l=a.getLabel();Assert.isTrue(l.isArea(t),"Found non-area edge");var u=l.getLocation(t,Position.LEFT),c=l.getLocation(t,Position.RIGHT);if(u===c)return!1;if(c!==o)return!1;o=u}return!0},findIndex:function(t){this.iterator();for(var e=0;e<this.edgeList.size();e++){var n=this.edgeList.get(e);if(n===t)return e}return-1},iterator:function(){return this.getEdges().iterator()},getEdges:function(){return null===this.edgeList&&(this.edgeList=new ArrayList(this.edgeMap.values())),this.edgeList},getLocation:function(t,e,n){return this.ptInAreaLocation[t]===Location.NONE&&(this.ptInAreaLocation[t]=SimplePointInAreaLocator.locate(e,n[t].getGeometry())),this.ptInAreaLocation[t]},toString:function(){var t=new StringBuffer;t.append("EdgeEndStar:   "+this.getCoordinate()),t.append("\n");for(var e=this.iterator();e.hasNext();){var n=e.next();t.append(n),t.append("\n")}return t.toString()},computeEdgeEndLabels:function(t){for(var e=this.iterator();e.hasNext();){var n=e.next();n.computeLabel(t)}},computeLabelling:function(t){this.computeEdgeEndLabels(t[0].getBoundaryNodeRule()),this.propagateSideLabels(0),this.propagateSideLabels(1);for(var e=[!1,!1],n=this.iterator();n.hasNext();)for(var i=n.next(),r=i.getLabel(),o=0;2>o;o++)r.isLine(o)&&r.getLocation(o)===Location.BOUNDARY&&(e[o]=!0);for(var n=this.iterator();n.hasNext();)for(var i=n.next(),r=i.getLabel(),o=0;2>o;o++)if(r.isAnyNull(o)){var s=Location.NONE;if(e[o])s=Location.EXTERIOR;else{var a=i.getCoordinate();s=this.getLocation(o,a,t)}r.setAllLocationsIfNull(o,s)}},getDegree:function(){return this.edgeMap.size()},insertEdgeEnd:function(t,e){this.edgeMap.put(t,e),this.edgeList=null},interfaces_:function(){return[]},getClass:function(){return EdgeEndStar}}),inherits(DirectedEdgeStar,EdgeEndStar),extend(DirectedEdgeStar.prototype,{linkResultDirectedEdges:function(){this.getResultAreaEdges();for(var t=null,e=null,n=this.SCANNING_FOR_INCOMING,i=0;i<this.resultAreaEdgeList.size();i++){var r=this.resultAreaEdgeList.get(i),o=r.getSym();if(r.getLabel().isArea())switch(null===t&&r.isInResult()&&(t=r),n){case this.SCANNING_FOR_INCOMING:if(!o.isInResult())continue;e=o,n=this.LINKING_TO_OUTGOING;break;case this.LINKING_TO_OUTGOING:if(!r.isInResult())continue;e.setNext(r),n=this.SCANNING_FOR_INCOMING}}if(n===this.LINKING_TO_OUTGOING){if(null===t)throw new TopologyException("no outgoing dirEdge found",this.getCoordinate());Assert.isTrue(t.isInResult(),"unable to link last incoming dirEdge"),e.setNext(t)}},insert:function(t){var e=t;this.insertEdgeEnd(e,e)},getRightmostEdge:function(){var t=this.getEdges(),e=t.size();if(1>e)return null;var n=t.get(0);if(1===e)return n;var i=t.get(e-1),r=n.getQuadrant(),o=i.getQuadrant();if(Quadrant.isNorthern(r)&&Quadrant.isNorthern(o))return n;if(!Quadrant.isNorthern(r)&&!Quadrant.isNorthern(o))return i;return 0!==n.getDy()?n:0!==i.getDy()?i:(Assert.shouldNeverReachHere("found two horizontal edges incident on node"),null)},print:function(t){System.out.println("DirectedEdgeStar: "+this.getCoordinate());for(var e=this.iterator();e.hasNext();){var n=e.next();t.print("out "),n.print(t),t.println(),t.print("in "),n.getSym().print(t),t.println()}},getResultAreaEdges:function(){if(null!==this.resultAreaEdgeList)return this.resultAreaEdgeList;this.resultAreaEdgeList=new ArrayList;for(var t=this.iterator();t.hasNext();){var e=t.next();(e.isInResult()||e.getSym().isInResult())&&this.resultAreaEdgeList.add(e)}return this.resultAreaEdgeList},updateLabelling:function(t){for(var e=this.iterator();e.hasNext();){var n=e.next(),i=n.getLabel();i.setAllLocationsIfNull(0,t.getLocation(0)),i.setAllLocationsIfNull(1,t.getLocation(1))}},linkAllDirectedEdges:function(){this.getEdges();for(var t=null,e=null,n=this.edgeList.size()-1;n>=0;n--){var i=this.edgeList.get(n),r=i.getSym();null===e&&(e=r),null!==t&&r.setNext(t),t=i}e.setNext(t)},computeDepths:function(){if(1===arguments.length){var t=arguments[0],e=this.findIndex(t),n=(t.getLabel(),t.getDepth(Position.LEFT)),i=t.getDepth(Position.RIGHT),r=this.computeDepths(e+1,this.edgeList.size(),n),o=this.computeDepths(0,e,r);if(o!==i)throw new TopologyException("depth mismatch at "+t.getCoordinate())}else if(3===arguments.length){for(var s=arguments[0],a=arguments[1],l=arguments[2],u=l,c=s;a>c;c++){var h=this.edgeList.get(c);h.getLabel();h.setEdgeDepths(Position.RIGHT,u),u=h.getDepth(Position.LEFT)}return u}},mergeSymLabels:function(){for(var t=this.iterator();t.hasNext();){var e=t.next(),n=e.getLabel();n.merge(e.getSym().getLabel())}},linkMinimalDirectedEdges:function(t){for(var e=null,n=null,i=this.SCANNING_FOR_INCOMING,r=this.resultAreaEdgeList.size()-1;r>=0;r--){var o=this.resultAreaEdgeList.get(r),s=o.getSym();switch(null===e&&o.getEdgeRing()===t&&(e=o),i){case this.SCANNING_FOR_INCOMING:if(s.getEdgeRing()!==t)continue;n=s,i=this.LINKING_TO_OUTGOING;break;case this.LINKING_TO_OUTGOING:if(o.getEdgeRing()!==t)continue;n.setNextMin(o),i=this.SCANNING_FOR_INCOMING}}i===this.LINKING_TO_OUTGOING&&(Assert.isTrue(null!==e,"found null for first outgoing dirEdge"),Assert.isTrue(e.getEdgeRing()===t,"unable to link last incoming dirEdge"),n.setNextMin(e))},getOutgoingDegree:function(){if(0===arguments.length){for(var t=0,e=this.iterator();e.hasNext();){var n=e.next();n.isInResult()&&t++}return t}if(1===arguments.length){for(var i=arguments[0],t=0,e=this.iterator();e.hasNext();){var n=e.next();n.getEdgeRing()===i&&t++}return t}},getLabel:function(){return this.label},findCoveredLineEdges:function(){for(var t=Location.NONE,e=this.iterator();e.hasNext();){var n=e.next(),i=n.getSym();if(!n.isLineEdge()){if(n.isInResult()){t=Location.INTERIOR;break}if(i.isInResult()){t=Location.EXTERIOR;break}}}if(t===Location.NONE)return null;for(var r=t,e=this.iterator();e.hasNext();){var n=e.next(),i=n.getSym();n.isLineEdge()?n.getEdge().setCovered(r===Location.INTERIOR):(n.isInResult()&&(r=Location.EXTERIOR),i.isInResult()&&(r=Location.INTERIOR))}},computeLabelling:function(t){EdgeEndStar.prototype.computeLabelling.call(this,t),this.label=new Label(Location.NONE);for(var e=this.iterator();e.hasNext();)for(var n=e.next(),i=n.getEdge(),r=i.getLabel(),o=0;2>o;o++){var s=r.getLocation(o);s!==Location.INTERIOR&&s!==Location.BOUNDARY||this.label.setLocation(o,Location.INTERIOR)}},interfaces_:function(){return[]},getClass:function(){return DirectedEdgeStar}}),inherits(OverlayNodeFactory,NodeFactory),extend(OverlayNodeFactory.prototype,{createNode:function(t){return new Node$1(t,new DirectedEdgeStar)},interfaces_:function(){return[]},getClass:function(){return OverlayNodeFactory}}),extend(OrientedCoordinateArray.prototype,{compareTo:function(t){var e=t,n=OrientedCoordinateArray.compareOriented(this.pts,this._orientation,e.pts,e._orientation);return n},interfaces_:function(){return[Comparable]},getClass:function(){return OrientedCoordinateArray}}),OrientedCoordinateArray.orientation=function(t){return 1===CoordinateArrays.increasingDirection(t)},OrientedCoordinateArray.compareOriented=function(t,e,n,i){for(var r=e?1:-1,o=i?1:-1,s=e?t.length:-1,a=i?n.length:-1,l=e?0:t.length-1,u=i?0:n.length-1;;){var c=t[l].compareTo(n[u]);if(0!==c)return c;l+=r,u+=o;var h=l===s,d=u===a;if(h&&!d)return-1;if(!h&&d)return 1;if(h&&d)return 0}},extend(EdgeList.prototype,{print:function(t){t.print("MULTILINESTRING ( ");for(var e=0;e<this.edges.size();e++){var n=this.edges.get(e);e>0&&t.print(","),t.print("(");for(var i=n.getCoordinates(),r=0;r<i.length;r++)r>0&&t.print(","),t.print(i[r].x+" "+i[r].y);t.println(")")}t.print(")  ")},addAll:function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next())},findEdgeIndex:function(t){for(var e=0;e<this.edges.size();e++)if(this.edges.get(e).equals(t))return e;return-1},iterator:function(){return this.edges.iterator()},getEdges:function(){return this.edges},get:function(t){return this.edges.get(t)},findEqualEdge:function(t){var e=new OrientedCoordinateArray(t.getCoordinates()),n=this.ocaMap.get(e);return n},add:function(t){this.edges.add(t);var e=new OrientedCoordinateArray(t.getCoordinates());this.ocaMap.put(e,t)},interfaces_:function(){return[]},getClass:function(){return EdgeList}}),extend(SegmentIntersector$1.prototype,{processIntersections:function(t,e,n,i){},isDone:function(){},interfaces_:function(){return[]},getClass:function(){return SegmentIntersector$1}}),extend(IntersectionAdder.prototype,{isTrivialIntersection:function(t,e,n,i){if(t===n&&1===this.li.getIntersectionNum()){if(IntersectionAdder.isAdjacentSegments(e,i))return!0;if(t.isClosed()){var r=t.size()-1;if(0===e&&i===r||0===i&&e===r)return!0}}return!1},getProperIntersectionPoint:function(){return this.properIntersectionPoint},hasProperInteriorIntersection:function(){return this.hasProperInterior},getLineIntersector:function(){return this.li},hasProperIntersection:function(){return this.hasProper},processIntersections:function(t,e,n,i){if(t===n&&e===i)return null;this.numTests++;var r=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[i],a=n.getCoordinates()[i+1];this.li.computeIntersection(r,o,s,a),this.li.hasIntersection()&&(this.numIntersections++,this.li.isInteriorIntersection()&&(this.numInteriorIntersections++,this.hasInterior=!0),this.isTrivialIntersection(t,e,n,i)||(this._hasIntersection=!0,t.addIntersections(this.li,e,0),n.addIntersections(this.li,i,1),this.li.isProper()&&(this.numProperIntersections++,this.hasProper=!0,this.hasProperInterior=!0)))},hasIntersection:function(){return this._hasIntersection},isDone:function(){return!1},hasInteriorIntersection:function(){return this.hasInterior},interfaces_:function(){return[SegmentIntersector$1]},getClass:function(){return IntersectionAdder}}),IntersectionAdder.isAdjacentSegments=function(t,e){return 1===Math.abs(t-e)},extend(BufferBuilder.prototype,{setWorkingPrecisionModel:function(t){this.workingPrecisionModel=t},insertUniqueEdge:function(t){var e=this.edgeList.findEqualEdge(t);if(null!==e){var n=e.getLabel(),i=t.getLabel();e.isPointwiseEqual(t)||(i=new Label(t.getLabel()),i.flip()),n.merge(i);var r=BufferBuilder.depthDelta(i),o=e.getDepthDelta(),s=o+r;e.setDepthDelta(s)}else this.edgeList.add(t),t.setDepthDelta(BufferBuilder.depthDelta(t.getLabel()))},buildSubgraphs:function(t,e){for(var n=new ArrayList,i=t.iterator();i.hasNext();){var r=i.next(),o=r.getRightmostCoordinate(),s=new SubgraphDepthLocater(n),a=s.getDepth(o);r.computeDepth(a),r.findResultEdges(),n.add(r),e.add(r.getDirectedEdges(),r.getNodes())}},createSubgraphs:function(t){for(var e=new ArrayList,n=t.getNodes().iterator();n.hasNext();){var i=n.next();if(!i.isVisited()){var r=new BufferSubgraph;r.create(i),e.add(r)}}return Collections.sort(e,Collections.reverseOrder()),e},createEmptyResultGeometry:function(){var t=this.geomFact.createPolygon();return t},getNoder:function(t){if(null!==this.workingNoder)return this.workingNoder;var e=new MCIndexNoder,n=new RobustLineIntersector;return n.setPrecisionModel(t),e.setSegmentIntersector(new IntersectionAdder(n)),e},buffer:function(t,e){var n=this.workingPrecisionModel;null===n&&(n=t.getPrecisionModel()),this.geomFact=t.getFactory();var i=new OffsetCurveBuilder(n,this.bufParams),r=new OffsetCurveSetBuilder(t,e,i),o=r.getCurves();if(o.size()<=0)return this.createEmptyResultGeometry();this.computeNodedEdges(o,n),this.graph=new PlanarGraph(new OverlayNodeFactory),this.graph.addEdges(this.edgeList.getEdges());var s=this.createSubgraphs(this.graph),a=new PolygonBuilder(this.geomFact);this.buildSubgraphs(s,a);var l=a.getPolygons();if(l.size()<=0)return this.createEmptyResultGeometry();var u=this.geomFact.buildGeometry(l);return u},computeNodedEdges:function(t,e){var n=this.getNoder(e);n.computeNodes(t);for(var i=n.getNodedSubstrings(),r=i.iterator();r.hasNext();){var o=r.next(),s=o.getCoordinates();if(2!==s.length||!s[0].equals2D(s[1])){var a=o.getData(),l=new Edge(o.getCoordinates(),new Label(a));this.insertUniqueEdge(l)}}},setNoder:function(t){this.workingNoder=t},interfaces_:function(){return[]},getClass:function(){return BufferBuilder}}),BufferBuilder.depthDelta=function(t){var e=t.getLocation(0,Position.LEFT),n=t.getLocation(0,Position.RIGHT);return e===Location.INTERIOR&&n===Location.EXTERIOR?1:e===Location.EXTERIOR&&n===Location.INTERIOR?-1:0},BufferBuilder.convertSegStrings=function(t){for(var e=new GeometryFactory,n=new ArrayList;t.hasNext();){var i=t.next(),r=e.createLineString(i.getCoordinates());n.add(r)}return e.buildGeometry(n)},extend(NodingValidator.prototype,{checkEndPtVertexIntersections:function(){if(0===arguments.length)for(var t=this.segStrings.iterator();t.hasNext();){var e=t.next(),n=e.getCoordinates();this.checkEndPtVertexIntersections(n[0],this.segStrings),this.checkEndPtVertexIntersections(n[n.length-1],this.segStrings)}else if(2===arguments.length)for(var i=arguments[0],r=arguments[1],t=r.iterator();t.hasNext();)for(var e=t.next(),n=e.getCoordinates(),o=1;o<n.length-1;o++)if(n[o].equals(i))throw new RuntimeException("found endpt/interior pt intersection at index "+o+" :pt "+i)},checkInteriorIntersections:function(){if(0===arguments.length)for(var t=this.segStrings.iterator();t.hasNext();)for(var e=t.next(),n=this.segStrings.iterator();n.hasNext();){var i=n.next();this.checkInteriorIntersections(e,i)}else if(2===arguments.length)for(var r=arguments[0],o=arguments[1],s=r.getCoordinates(),a=o.getCoordinates(),l=0;l<s.length-1;l++)for(var u=0;u<a.length-1;u++)this.checkInteriorIntersections(r,l,o,u);else if(4===arguments.length){var c=arguments[0],h=arguments[1],d=arguments[2],g=arguments[3];if(c===d&&h===g)return null;var f=c.getCoordinates()[h],p=c.getCoordinates()[h+1],m=d.getCoordinates()[g],y=d.getCoordinates()[g+1];if(this.li.computeIntersection(f,p,m,y),this.li.hasIntersection()&&(this.li.isProper()||this.hasInteriorIntersection(this.li,f,p)||this.hasInteriorIntersection(this.li,m,y)))throw new RuntimeException("found non-noded intersection at "+f+"-"+p+" and "+m+"-"+y)}},checkValid:function(){this.checkEndPtVertexIntersections(),this.checkInteriorIntersections(),this.checkCollapses()},checkCollapses:function(){if(0===arguments.length)for(var t=this.segStrings.iterator();t.hasNext();){var e=t.next();this.checkCollapses(e)}else if(1===arguments.length)for(var n=arguments[0],i=n.getCoordinates(),t=0;t<i.length-2;t++)this.checkCollapse(i[t],i[t+1],i[t+2])},hasInteriorIntersection:function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++){var r=t.getIntersection(i);if(!r.equals(e)&&!r.equals(n))return!0}return!1},checkCollapse:function(t,e,n){if(t.equals(n))throw new RuntimeException("found non-noded collapse at "+NodingValidator.fact.createLineString([t,e,n]))},interfaces_:function(){return[]},getClass:function(){return NodingValidator}}),NodingValidator.fact=new GeometryFactory,extend(HotPixel.prototype,{intersectsScaled:function(t,e){var n=Math.min(t.x,e.x),i=Math.max(t.x,e.x),r=Math.min(t.y,e.y),o=Math.max(t.y,e.y),s=this.maxx<n||this.minx>i||this.maxy<r||this.miny>o;if(s)return!1;var a=this.intersectsToleranceSquare(t,e);return Assert.isTrue(!(s&&a),"Found bad envelope test"),a},initCorners:function(t){var e=.5;this.minx=t.x-e,this.maxx=t.x+e,this.miny=t.y-e,this.maxy=t.y+e,this.corner[0]=new Coordinate(this.maxx,this.maxy),this.corner[1]=new Coordinate(this.minx,this.maxy),this.corner[2]=new Coordinate(this.minx,this.miny),this.corner[3]=new Coordinate(this.maxx,this.miny)},intersects:function(t,e){return 1===this.scaleFactor?this.intersectsScaled(t,e):(this.copyScaled(t,this.p0Scaled),this.copyScaled(e,this.p1Scaled),this.intersectsScaled(this.p0Scaled,this.p1Scaled))},scale:function(t){return Math.round(t*this.scaleFactor)},getCoordinate:function(){return this.originalPt},copyScaled:function(t,e){e.x=this.scale(t.x),e.y=this.scale(t.y)},getSafeEnvelope:function(){if(null===this.safeEnv){var t=HotPixel.SAFE_ENV_EXPANSION_FACTOR/this.scaleFactor;this.safeEnv=new Envelope(this.originalPt.x-t,this.originalPt.x+t,this.originalPt.y-t,this.originalPt.y+t)}return this.safeEnv},intersectsPixelClosure:function(t,e){return this.li.computeIntersection(t,e,this.corner[0],this.corner[1]),this.li.hasIntersection()?!0:(this.li.computeIntersection(t,e,this.corner[1],this.corner[2]),this.li.hasIntersection()?!0:(this.li.computeIntersection(t,e,this.corner[2],this.corner[3]),this.li.hasIntersection()?!0:(this.li.computeIntersection(t,e,this.corner[3],this.corner[0]),!!this.li.hasIntersection())))},intersectsToleranceSquare:function(t,e){var n=!1,i=!1;return this.li.computeIntersection(t,e,this.corner[0],this.corner[1]),this.li.isProper()?!0:(this.li.computeIntersection(t,e,this.corner[1],this.corner[2]),this.li.isProper()?!0:(this.li.hasIntersection()&&(n=!0),this.li.computeIntersection(t,e,this.corner[2],this.corner[3]),this.li.isProper()?!0:(this.li.hasIntersection()&&(i=!0),this.li.computeIntersection(t,e,this.corner[3],this.corner[0]),this.li.isProper()?!0:n&&i?!0:t.equals(this.pt)?!0:!!e.equals(this.pt))))},addSnappedNode:function(t,e){var n=t.getCoordinate(e),i=t.getCoordinate(e+1);return this.intersects(n,i)?(t.addIntersection(this.getCoordinate(),e),!0):!1},interfaces_:function(){return[]},getClass:function(){return HotPixel}}),HotPixel.SAFE_ENV_EXPANSION_FACTOR=.75,extend(MonotoneChainSelectAction.prototype,{select:function(){if(1===arguments.length){arguments[0]}else if(2===arguments.length){var t=arguments[0],e=arguments[1];t.getLineSegment(e,this.selectedSegment),this.select(this.selectedSegment)}},interfaces_:function(){return[]},getClass:function(){
return MonotoneChainSelectAction}}),extend(MCIndexPointSnapper.prototype,{snap:function(){if(1===arguments.length){var t=arguments[0];return this.snap(t,null,-1)}if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=t.getSafeEnvelope(),r=new HotPixelSnapAction(t,e,n);return this.index.query(i,{interfaces_:function(){return[ItemVisitor]},visitItem:function(t){var e=t;e.select(i,r)}}),r.isNodeAdded()}},interfaces_:function(){return[]},getClass:function(){return MCIndexPointSnapper}}),inherits(HotPixelSnapAction,MonotoneChainSelectAction),extend(HotPixelSnapAction.prototype,{isNodeAdded:function(){return this._isNodeAdded},select:function(){if(2!==arguments.length)return MonotoneChainSelectAction.prototype.select.apply(this,arguments);var t=arguments[0],e=arguments[1],n=t.getContext();return null!==this.parentEdge&&n===this.parentEdge&&e===this.hotPixelVertexIndex?null:void(this._isNodeAdded=this.hotPixel.addSnappedNode(n,e))},interfaces_:function(){return[]},getClass:function(){return HotPixelSnapAction}}),MCIndexPointSnapper.HotPixelSnapAction=HotPixelSnapAction,extend(InteriorIntersectionFinderAdder.prototype,{processIntersections:function(t,e,n,i){if(t===n&&e===i)return null;var r=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[i],a=n.getCoordinates()[i+1];if(this.li.computeIntersection(r,o,s,a),this.li.hasIntersection()&&this.li.isInteriorIntersection()){for(var l=0;l<this.li.getIntersectionNum();l++)this.interiorIntersections.add(this.li.getIntersection(l));t.addIntersections(this.li,e,0),n.addIntersections(this.li,i,1)}},isDone:function(){return!1},getInteriorIntersections:function(){return this.interiorIntersections},interfaces_:function(){return[SegmentIntersector$1]},getClass:function(){return InteriorIntersectionFinderAdder}}),extend(MCIndexSnapRounder.prototype,{checkCorrectness:function(t){var e=NodedSegmentString.getNodedSubstrings(t),n=new NodingValidator(e);try{n.checkValid()}catch(t){if(!(t instanceof Exception))throw t;t.printStackTrace()}finally{}},getNodedSubstrings:function(){return NodedSegmentString.getNodedSubstrings(this.nodedSegStrings)},snapRound:function(t,e){var n=this.findInteriorIntersections(t,e);this.computeIntersectionSnaps(n),this.computeVertexSnaps(t)},findInteriorIntersections:function(t,e){var n=new InteriorIntersectionFinderAdder(e);return this.noder.setSegmentIntersector(n),this.noder.computeNodes(t),n.getInteriorIntersections()},computeVertexSnaps:function(){if(hasInterface(arguments[0],Collection))for(var t=arguments[0],e=t.iterator();e.hasNext();){var n=e.next();this.computeVertexSnaps(n)}else if(arguments[0]instanceof NodedSegmentString)for(var i=arguments[0],r=i.getCoordinates(),o=0;o<r.length;o++){var s=new HotPixel(r[o],this.scaleFactor,this.li),a=this.pointSnapper.snap(s,i,o);a&&i.addIntersection(r[o],o)}},computeNodes:function(t){this.nodedSegStrings=t,this.noder=new MCIndexNoder,this.pointSnapper=new MCIndexPointSnapper(this.noder.getIndex()),this.snapRound(t,this.li)},computeIntersectionSnaps:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),i=new HotPixel(n,this.scaleFactor,this.li);this.pointSnapper.snap(i)}},interfaces_:function(){return[Noder]},getClass:function(){return MCIndexSnapRounder}}),extend(BufferOp.prototype,{bufferFixedPrecision:function(t){var e=new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1)),t.getScale()),n=new BufferBuilder(this.bufParams);n.setWorkingPrecisionModel(t),n.setNoder(e),this.resultGeometry=n.buffer(this.argGeom,this.distance)},bufferReducedPrecision:function(){if(0===arguments.length){for(var t=BufferOp.MAX_PRECISION_DIGITS;t>=0;t--){try{this.bufferReducedPrecision(t)}catch(t){if(!(t instanceof TopologyException))throw t;this.saveException=t}finally{}if(null!==this.resultGeometry)return null}throw this.saveException}if(1===arguments.length){var e=arguments[0],n=BufferOp.precisionScaleFactor(this.argGeom,this.distance,e),i=new PrecisionModel(n);this.bufferFixedPrecision(i)}},computeGeometry:function(){if(this.bufferOriginalPrecision(),null!==this.resultGeometry)return null;var t=this.argGeom.getFactory().getPrecisionModel();t.getType()===PrecisionModel.FIXED?this.bufferFixedPrecision(t):this.bufferReducedPrecision()},setQuadrantSegments:function(t){this.bufParams.setQuadrantSegments(t)},bufferOriginalPrecision:function(){try{var t=new BufferBuilder(this.bufParams);this.resultGeometry=t.buffer(this.argGeom,this.distance)}catch(t){if(!(t instanceof RuntimeException))throw t;this.saveException=t}finally{}},getResultGeometry:function(t){return this.distance=t,this.computeGeometry(),this.resultGeometry},setEndCapStyle:function(t){this.bufParams.setEndCapStyle(t)},interfaces_:function(){return[]},getClass:function(){return BufferOp}}),BufferOp.bufferOp=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new BufferOp(t),i=n.getResultGeometry(e);return i}if(3===arguments.length){if(Number.isInteger(arguments[2])&&arguments[0]instanceof Geometry&&"number"==typeof arguments[1]){var t=arguments[0],e=arguments[1],r=arguments[2],o=new BufferOp(t);o.setQuadrantSegments(r);var i=o.getResultGeometry(e);return i}if(arguments[2]instanceof BufferParameters&&arguments[0]instanceof Geometry&&"number"==typeof arguments[1]){var t=arguments[0],e=arguments[1],s=arguments[2],o=new BufferOp(t,s),i=o.getResultGeometry(e);return i}}else if(4===arguments.length){var t=arguments[0],e=arguments[1],r=arguments[2],a=arguments[3],o=new BufferOp(t);o.setQuadrantSegments(r),o.setEndCapStyle(a);var i=o.getResultGeometry(e);return i}},BufferOp.precisionScaleFactor=function(t,e,n){var i=t.getEnvelopeInternal(),r=MathUtil.max(Math.abs(i.getMaxX()),Math.abs(i.getMaxY()),Math.abs(i.getMinX()),Math.abs(i.getMinY())),o=e>0?e:0,s=r+2*o,a=Math.trunc(Math.log(s)/Math.log(10)+1),l=n-a,u=Math.pow(10,l);return u},BufferOp.CAP_ROUND=BufferParameters.CAP_ROUND,BufferOp.CAP_BUTT=BufferParameters.CAP_FLAT,BufferOp.CAP_FLAT=BufferParameters.CAP_FLAT,BufferOp.CAP_SQUARE=BufferParameters.CAP_SQUARE,BufferOp.MAX_PRECISION_DIGITS=12,extend(PolygonExtracter.prototype,{filter:function(t){t instanceof Polygon&&this.comps.add(t)},interfaces_:function(){return[GeometryFilter]},getClass:function(){return PolygonExtracter}}),PolygonExtracter.getPolygons=function(){if(1===arguments.length){var t=arguments[0];return PolygonExtracter.getPolygons(t,new ArrayList)}if(2===arguments.length){var t=arguments[0],e=arguments[1];return t instanceof Polygon?e.add(t):t instanceof GeometryCollection&&t.apply(new PolygonExtracter(e)),e}},extend(GeometryLocation.prototype,{isInsideArea:function(){return this.segIndex===GeometryLocation.INSIDE_AREA},getCoordinate:function(){return this.pt},getGeometryComponent:function(){return this.component},getSegmentIndex:function(){return this.segIndex},interfaces_:function(){return[]},getClass:function(){return GeometryLocation}}),GeometryLocation.INSIDE_AREA=-1,extend(PointExtracter.prototype,{filter:function(t){t instanceof Point&&this.pts.add(t)},interfaces_:function(){return[GeometryFilter]},getClass:function(){return PointExtracter}}),PointExtracter.getPoints=function(){if(1===arguments.length){var t=arguments[0];return t instanceof Point?Collections.singletonList(t):PointExtracter.getPoints(t,new ArrayList)}if(2===arguments.length){var t=arguments[0],e=arguments[1];return t instanceof Point?e.add(t):t instanceof GeometryCollection&&t.apply(new PointExtracter(e)),e}},extend(ConnectedElementLocationFilter.prototype,{filter:function(t){(t instanceof Point||t instanceof LineString||t instanceof Polygon)&&this.locations.add(new GeometryLocation(t,0,t.getCoordinate()))},interfaces_:function(){return[GeometryFilter]},getClass:function(){return ConnectedElementLocationFilter}}),ConnectedElementLocationFilter.getLocations=function(t){var e=new ArrayList;return t.apply(new ConnectedElementLocationFilter(e)),e},extend(DistanceOp.prototype,{computeContainmentDistance:function(){if(0===arguments.length){var t=new Array(2).fill(null);if(this.computeContainmentDistance(0,t),this.minDistance<=this.terminateDistance)return null;this.computeContainmentDistance(1,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],i=1-e,r=PolygonExtracter.getPolygons(this.geom[e]);if(r.size()>0){var o=ConnectedElementLocationFilter.getLocations(this.geom[i]);if(this.computeContainmentDistance(o,r,n),this.minDistance<=this.terminateDistance)return this.minDistanceLocation[i]=n[0],this.minDistanceLocation[e]=n[1],null}}else if(3===arguments.length)if(arguments[2]instanceof Array&&hasInterface(arguments[0],List)&&hasInterface(arguments[1],List)){for(var s=arguments[0],a=arguments[1],l=arguments[2],u=0;u<s.size();u++)for(var c=s.get(u),h=0;h<a.size();h++)if(this.computeContainmentDistance(c,a.get(h),l),this.minDistance<=this.terminateDistance)return null}else if(arguments[2]instanceof Array&&arguments[0]instanceof GeometryLocation&&arguments[1]instanceof Polygon){var d=arguments[0],g=arguments[1],f=arguments[2],p=d.getCoordinate();if(Location.EXTERIOR!==this.ptLocator.locate(p,g))return this.minDistance=0,f[0]=d,f[1]=new GeometryLocation(g,p),null}},computeMinDistanceLinesPoints:function(t,e,n){for(var i=0;i<t.size();i++)for(var r=t.get(i),o=0;o<e.size();o++){var s=e.get(o);if(this.computeMinDistance(r,s,n),this.minDistance<=this.terminateDistance)return null}},computeFacetDistance:function(){var t=new Array(2).fill(null),e=LinearComponentExtracter.getLines(this.geom[0]),n=LinearComponentExtracter.getLines(this.geom[1]),i=PointExtracter.getPoints(this.geom[0]),r=PointExtracter.getPoints(this.geom[1]);return this.computeMinDistanceLines(e,n,t),this.updateMinDistance(t,!1),this.minDistance<=this.terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(e,r,t),this.updateMinDistance(t,!1),this.minDistance<=this.terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(n,i,t),this.updateMinDistance(t,!0),this.minDistance<=this.terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistancePoints(i,r,t),void this.updateMinDistance(t,!1))))},nearestLocations:function(){return this.computeMinDistance(),this.minDistanceLocation},updateMinDistance:function(t,e){return null===t[0]?null:void(e?(this.minDistanceLocation[0]=t[1],this.minDistanceLocation[1]=t[0]):(this.minDistanceLocation[0]=t[0],this.minDistanceLocation[1]=t[1]))},nearestPoints:function(){this.computeMinDistance();var t=[this.minDistanceLocation[0].getCoordinate(),this.minDistanceLocation[1].getCoordinate()];return t},computeMinDistance:function(){if(0===arguments.length){if(null!==this.minDistanceLocation)return null;if(this.minDistanceLocation=new Array(2).fill(null),this.computeContainmentDistance(),this.minDistance<=this.terminateDistance)return null;this.computeFacetDistance()}else if(3===arguments.length)if(arguments[2]instanceof Array&&arguments[0]instanceof LineString&&arguments[1]instanceof Point){var t=arguments[0],e=arguments[1],n=arguments[2];if(t.getEnvelopeInternal().distance(e.getEnvelopeInternal())>this.minDistance)return null;for(var i=t.getCoordinates(),r=e.getCoordinate(),o=0;o<i.length-1;o++){var s=CGAlgorithms.distancePointLine(r,i[o],i[o+1]);if(s<this.minDistance){this.minDistance=s;var a=new LineSegment(i[o],i[o+1]),l=a.closestPoint(r);n[0]=new GeometryLocation(t,o,l),n[1]=new GeometryLocation(e,0,r)}if(this.minDistance<=this.terminateDistance)return null}}else if(arguments[2]instanceof Array&&arguments[0]instanceof LineString&&arguments[1]instanceof LineString){var u=arguments[0],c=arguments[1],n=arguments[2];if(u.getEnvelopeInternal().distance(c.getEnvelopeInternal())>this.minDistance)return null;for(var i=u.getCoordinates(),h=c.getCoordinates(),o=0;o<i.length-1;o++)for(var d=0;d<h.length-1;d++){var s=CGAlgorithms.distanceLineLine(i[o],i[o+1],h[d],h[d+1]);if(s<this.minDistance){this.minDistance=s;var g=new LineSegment(i[o],i[o+1]),f=new LineSegment(h[d],h[d+1]),p=g.closestPoints(f);n[0]=new GeometryLocation(u,o,p[0]),n[1]=new GeometryLocation(c,d,p[1])}if(this.minDistance<=this.terminateDistance)return null}}},computeMinDistancePoints:function(t,e,n){for(var i=0;i<t.size();i++)for(var r=t.get(i),o=0;o<e.size();o++){var s=e.get(o),a=r.getCoordinate().distance(s.getCoordinate());if(a<this.minDistance&&(this.minDistance=a,n[0]=new GeometryLocation(r,0,r.getCoordinate()),n[1]=new GeometryLocation(s,0,s.getCoordinate())),this.minDistance<=this.terminateDistance)return null}},distance:function(){if(null===this.geom[0]||null===this.geom[1])throw new IllegalArgumentException("null geometries are not supported");return this.geom[0].isEmpty()||this.geom[1].isEmpty()?0:(this.computeMinDistance(),this.minDistance)},computeMinDistanceLines:function(t,e,n){for(var i=0;i<t.size();i++)for(var r=t.get(i),o=0;o<e.size();o++){var s=e.get(o);if(this.computeMinDistance(r,s,n),this.minDistance<=this.terminateDistance)return null}},interfaces_:function(){return[]},getClass:function(){return DistanceOp}}),DistanceOp.distance=function(t,e){var n=new DistanceOp(t,e);return n.distance()},DistanceOp.isWithinDistance=function(t,e,n){var i=new DistanceOp(t,e,n);return i.distance()<=n},DistanceOp.nearestPoints=function(t,e){var n=new DistanceOp(t,e);return n.nearestPoints()},extend(EdgeString.prototype,{getCoordinates:function(){if(null===this.coordinates){for(var t=0,e=0,n=new CoordinateList,i=this.directedEdges.iterator();i.hasNext();){var r=i.next();r.getEdgeDirection()?t++:e++,n.add(r.getEdge().getLine().getCoordinates(),!1,r.getEdgeDirection())}this.coordinates=n.toCoordinateArray(),e>t&&CoordinateArrays.reverse(this.coordinates)}return this.coordinates},toLineString:function(){return this.factory.createLineString(this.getCoordinates())},add:function(t){this.directedEdges.add(t)},interfaces_:function(){return[]},getClass:function(){return EdgeString}}),extend(GraphComponent$1.prototype,{setVisited:function(t){this._isVisited=t},isMarked:function(){return this._isMarked},setData:function(t){this.data=t},getData:function(){return this.data},setMarked:function(t){this._isMarked=t},getContext:function(){return this.data},isVisited:function(){return this._isVisited},setContext:function(t){this.data=t},interfaces_:function(){return[]},getClass:function(){return GraphComponent$1}}),GraphComponent$1.getComponentWithVisitedState=function(t,e){for(;t.hasNext();){var n=t.next();if(n.isVisited()===e)return n}return null},GraphComponent$1.setVisited=function(t,e){for(;t.hasNext();){var n=t.next();n.setVisited(e)}},GraphComponent$1.setMarked=function(t,e){for(;t.hasNext();){var n=t.next();n.setMarked(e)}},inherits(DirectedEdge$1,GraphComponent$1),extend(DirectedEdge$1.prototype,{isRemoved:function(){return null===this.parentEdge},compareDirection:function(t){return this.quadrant>t.quadrant?1:this.quadrant<t.quadrant?-1:CGAlgorithms.computeOrientation(t.p0,t.p1,this.p1)},getCoordinate:function(){return this.from.getCoordinate()},print:function(t){var e=this.getClass().getName(),n=e.lastIndexOf("."),i=e.substring(n+1);t.print("  "+i+": "+this.p0+" - "+this.p1+" "+this.quadrant+":"+this.angle)},getDirectionPt:function(){return this.p1},getAngle:function(){return this.angle},compareTo:function(t){var e=t;return this.compareDirection(e)},getFromNode:function(){return this.from},getSym:function(){return this.sym},setEdge:function(t){this.parentEdge=t},remove:function(){this.sym=null,this.parentEdge=null},getEdge:function(){return this.parentEdge},getQuadrant:function(){return this.quadrant},setSym:function(t){this.sym=t},getToNode:function(){return this.to},getEdgeDirection:function(){return this.edgeDirection},interfaces_:function(){return[Comparable]},getClass:function(){return DirectedEdge$1}}),DirectedEdge$1.toEdges=function(t){for(var e=new ArrayList,n=t.iterator();n.hasNext();)e.add(n.next().parentEdge);return e},inherits(LineMergeDirectedEdge,DirectedEdge$1),extend(LineMergeDirectedEdge.prototype,{getNext:function(){return 2!==this.getToNode().getDegree()?null:this.getToNode().getOutEdges().getEdges().get(0)===this.getSym()?this.getToNode().getOutEdges().getEdges().get(1):(Assert.isTrue(this.getToNode().getOutEdges().getEdges().get(1)===this.getSym()),this.getToNode().getOutEdges().getEdges().get(0))},interfaces_:function(){return[]},getClass:function(){return LineMergeDirectedEdge}}),inherits(Edge$1,GraphComponent$1),extend(Edge$1.prototype,{isRemoved:function(){return null===this.dirEdge},setDirectedEdges:function(t,e){this.dirEdge=[t,e],t.setEdge(this),e.setEdge(this),t.setSym(e),e.setSym(t),t.getFromNode().addOutEdge(t),e.getFromNode().addOutEdge(e)},getDirEdge:function(){if(Number.isInteger(arguments[0])){var t=arguments[0];return this.dirEdge[t]}if(arguments[0]instanceof Node$2){var e=arguments[0];return this.dirEdge[0].getFromNode()===e?this.dirEdge[0]:this.dirEdge[1].getFromNode()===e?this.dirEdge[1]:null}},remove:function(){this.dirEdge=null},getOppositeNode:function(t){return this.dirEdge[0].getFromNode()===t?this.dirEdge[0].getToNode():this.dirEdge[1].getFromNode()===t?this.dirEdge[1].getToNode():null},interfaces_:function(){return[]},getClass:function(){return Edge$1}}),extend(DirectedEdgeStar$1.prototype,{getNextEdge:function(t){var e=this.getIndex(t);return this.outEdges.get(this.getIndex(e+1))},getCoordinate:function(){var t=this.iterator();if(!t.hasNext())return null;var e=t.next();return e.getCoordinate()},iterator:function(){return this.sortEdges(),this.outEdges.iterator()},sortEdges:function(){this.sorted||(Collections.sort(this.outEdges),this.sorted=!0)},remove:function(t){this.outEdges.remove(t)},getEdges:function(){return this.sortEdges(),this.outEdges},getNextCWEdge:function(t){var e=this.getIndex(t);return this.outEdges.get(this.getIndex(e-1))},getIndex:function(){if(arguments[0]instanceof Edge$1){var t=arguments[0];this.sortEdges();for(var e=0;e<this.outEdges.size();e++){var n=this.outEdges.get(e);if(n.getEdge()===t)return e}return-1}if(arguments[0]instanceof DirectedEdge$1){var i=arguments[0];this.sortEdges();for(var e=0;e<this.outEdges.size();e++){var n=this.outEdges.get(e);if(n===i)return e}return-1}if(Number.isInteger(arguments[0])){var r=arguments[0],o=r%this.outEdges.size();return 0>o&&(o+=this.outEdges.size()),o}},add:function(t){this.outEdges.add(t),this.sorted=!1},getDegree:function(){return this.outEdges.size()},interfaces_:function(){return[]},getClass:function(){return DirectedEdgeStar$1}}),inherits(Node$2,GraphComponent$1),extend(Node$2.prototype,{isRemoved:function(){return null===this.pt},addOutEdge:function(t){this.deStar.add(t)},getCoordinate:function(){return this.pt},getOutEdges:function(){return this.deStar},remove:function(){if(0===arguments.length)this.pt=null;else if(1===arguments.length){var t=arguments[0];this.deStar.remove(t)}},getIndex:function(t){return this.deStar.getIndex(t)},getDegree:function(){return this.deStar.getDegree()},interfaces_:function(){return[]},getClass:function(){return Node$2}}),Node$2.getEdgesBetween=function(t,e){var n=DirectedEdge$1.toEdges(t.getOutEdges().getEdges()),i=new HashSet(n),r=DirectedEdge$1.toEdges(e.getOutEdges().getEdges());return i.retainAll(r),i},inherits(LineMergeEdge,Edge$1),extend(LineMergeEdge.prototype,{getLine:function(){return this.line},interfaces_:function(){return[]},getClass:function(){return LineMergeEdge}}),extend(NodeMap$1.prototype,{find:function(t){return this.nodeMap.get(t)},iterator:function(){return this.nodeMap.values().iterator()},remove:function(t){return this.nodeMap.remove(t)},values:function(){return this.nodeMap.values()},add:function(t){return this.nodeMap.put(t.getCoordinate(),t),t},interfaces_:function(){return[]},getClass:function(){return NodeMap$1}}),extend(PlanarGraph$1.prototype,{findNodesOfDegree:function(t){for(var e=new ArrayList,n=this.nodeIterator();n.hasNext();){var i=n.next();i.getDegree()===t&&e.add(i)}return e},dirEdgeIterator:function(){return this.dirEdges.iterator()},edgeIterator:function(){return this.edges.iterator()},remove:function(){if(arguments[0]instanceof Edge$1){var t=arguments[0];this.remove(t.getDirEdge(0)),this.remove(t.getDirEdge(1)),this.edges.remove(t),t.remove()}else if(arguments[0]instanceof DirectedEdge$1){var e=arguments[0],n=e.getSym();null!==n&&n.setSym(null),e.getFromNode().remove(e),e.remove(),this.dirEdges.remove(e)}else if(arguments[0]instanceof Node$2){for(var i=arguments[0],r=i.getOutEdges().getEdges(),o=r.iterator();o.hasNext();){var s=o.next(),n=s.getSym();null!==n&&this.remove(n),this.dirEdges.remove(s);var a=s.getEdge();null!==a&&this.edges.remove(a)}this.nodeMap.remove(i.getCoordinate()),i.remove()}},findNode:function(t){return this.nodeMap.find(t)},getEdges:function(){return this.edges},nodeIterator:function(){return this.nodeMap.iterator()},contains:function(){if(arguments[0]instanceof Edge$1){var t=arguments[0];return this.edges.contains(t)}if(arguments[0]instanceof DirectedEdge$1){var e=arguments[0];return this.dirEdges.contains(e)}},add:function(){if(arguments[0]instanceof Node$2){var t=arguments[0];this.nodeMap.add(t)}else if(arguments[0]instanceof Edge$1){var e=arguments[0];this.edges.add(e),this.add(e.getDirEdge(0)),this.add(e.getDirEdge(1))}else if(arguments[0]instanceof DirectedEdge$1){var n=arguments[0];this.dirEdges.add(n)}},getNodes:function(){return this.nodeMap.values()},interfaces_:function(){return[]},getClass:function(){return PlanarGraph$1}}),inherits(LineMergeGraph,PlanarGraph$1),extend(LineMergeGraph.prototype,{addEdge:function(t){if(t.isEmpty())return null;var e=CoordinateArrays.removeRepeatedPoints(t.getCoordinates());if(e.length<=1)return null;var n=e[0],i=e[e.length-1],r=this.getNode(n),o=this.getNode(i),s=new LineMergeDirectedEdge(r,o,e[1],!0),a=new LineMergeDirectedEdge(o,r,e[e.length-2],!1),l=new LineMergeEdge(t);l.setDirectedEdges(s,a),this.add(l)},getNode:function(t){var e=this.findNode(t);return null===e&&(e=new Node$2(t),this.add(e)),e},interfaces_:function(){return[]},getClass:function(){return LineMergeGraph}}),extend(LineMerger.prototype,{buildEdgeStringsForUnprocessedNodes:function(){for(var t=this.graph.getNodes().iterator();t.hasNext();){var e=t.next();e.isMarked()||(Assert.isTrue(2===e.getDegree()),this.buildEdgeStringsStartingAt(e),e.setMarked(!0))}},buildEdgeStringsForNonDegree2Nodes:function(){for(var t=this.graph.getNodes().iterator();t.hasNext();){var e=t.next();2!==e.getDegree()&&(this.buildEdgeStringsStartingAt(e),e.setMarked(!0))}},buildEdgeStringsForObviousStartNodes:function(){this.buildEdgeStringsForNonDegree2Nodes()},getMergedLineStrings:function(){return this.merge(),this.mergedLineStrings},buildEdgeStringsStartingAt:function(t){for(var e=t.getOutEdges().iterator();e.hasNext();){var n=e.next();n.getEdge().isMarked()||this.edgeStrings.add(this.buildEdgeStringStartingWith(n))}},merge:function(){if(null!==this.mergedLineStrings)return null;GraphComponent$1.setMarked(this.graph.nodeIterator(),!1),GraphComponent$1.setMarked(this.graph.edgeIterator(),!1),this.edgeStrings=new ArrayList,this.buildEdgeStringsForObviousStartNodes(),this.buildEdgeStringsForIsolatedLoops(),this.mergedLineStrings=new ArrayList;for(var t=this.edgeStrings.iterator();t.hasNext();){var e=t.next();this.mergedLineStrings.add(e.toLineString())}},buildEdgeStringStartingWith:function(t){var e=new EdgeString(this.factory),n=t;do e.add(n),n.getEdge().setMarked(!0),n=n.getNext();while(null!==n&&n!==t);return e},add:function(){if(arguments[0]instanceof Geometry){var t=arguments[0];t.apply({interfaces_:function(){return[GeometryComponentFilter$1]},filter:function(t){t instanceof LineString&&this.add(t)}})}else if(hasInterface(arguments[0],Collection)){var e=arguments[0];this.mergedLineStrings=null;for(var n=e.iterator();n.hasNext();){var i=n.next();this.add(i)}}else if(arguments[0]instanceof LineString){var r=arguments[0];null===this.factory&&(this.factory=r.getFactory()),this.graph.addEdge(r)}},buildEdgeStringsForIsolatedLoops:function(){this.buildEdgeStringsForUnprocessedNodes()},interfaces_:function(){return[]},getClass:function(){return LineMerger}}),extend(BasicSegmentString.prototype,{getCoordinates:function(){return this.pts},size:function(){return this.pts.length},getCoordinate:function(t){return this.pts[t]},isClosed:function(){return this.pts[0].equals(this.pts[this.pts.length-1])},getSegmentOctant:function(t){return t===this.pts.length-1?-1:Octant.octant(this.getCoordinate(t),this.getCoordinate(t+1))},setData:function(t){this.data=t},getData:function(){return this.data},toString:function(){return WKTWriter.toLineString(new CoordinateArraySequence(this.pts))},interfaces_:function(){return[SegmentString]},getClass:function(){return BasicSegmentString}}),extend(InteriorIntersectionFinder.prototype,{getInteriorIntersection:function(){return this.interiorIntersection},setCheckEndSegmentsOnly:function(t){this.isCheckEndSegmentsOnly=t},getIntersectionSegments:function(){return this.intSegments},count:function(){return this.intersectionCount},getIntersections:function(){return this.intersections},setFindAllIntersections:function(t){this.findAllIntersections=t},setKeepIntersections:function(t){this.keepIntersections=t},processIntersections:function(t,e,n,i){if(!this.findAllIntersections&&this.hasIntersection())return null;if(t===n&&e===i)return null;if(this.isCheckEndSegmentsOnly){var r=this.isEndSegment(t,e)||this.isEndSegment(n,i);if(!r)return null}var o=t.getCoordinates()[e],s=t.getCoordinates()[e+1],a=n.getCoordinates()[i],l=n.getCoordinates()[i+1];this.li.computeIntersection(o,s,a,l),this.li.hasIntersection()&&this.li.isInteriorIntersection()&&(this.intSegments=new Array(4).fill(null),this.intSegments[0]=o,this.intSegments[1]=s,this.intSegments[2]=a,this.intSegments[3]=l,this.interiorIntersection=this.li.getIntersection(0),this.keepIntersections&&this.intersections.add(this.interiorIntersection),this.intersectionCount++)},isEndSegment:function(t,e){return 0===e?!0:e>=t.size()-2},hasIntersection:function(){return null!==this.interiorIntersection},isDone:function(){return this.findAllIntersections?!1:null!==this.interiorIntersection},interfaces_:function(){return[SegmentIntersector$1]},getClass:function(){return InteriorIntersectionFinder}}),InteriorIntersectionFinder.createAllIntersectionsFinder=function(t){var e=new InteriorIntersectionFinder(t);return e.setFindAllIntersections(!0),e},InteriorIntersectionFinder.createAnyIntersectionFinder=function(t){return new InteriorIntersectionFinder(t)},InteriorIntersectionFinder.createIntersectionCounter=function(t){var e=new InteriorIntersectionFinder(t);return e.setFindAllIntersections(!0),e.setKeepIntersections(!1),e},extend(FastNodingValidator.prototype,{execute:function(){return null!==this.segInt?null:void this.checkInteriorIntersections()},getIntersections:function(){return this.segInt.getIntersections()},isValid:function(){return this.execute(),this._isValid},setFindAllIntersections:function(t){this.findAllIntersections=t},checkInteriorIntersections:function(){this._isValid=!0,this.segInt=new InteriorIntersectionFinder(this.li),this.segInt.setFindAllIntersections(this.findAllIntersections);var t=new MCIndexNoder;return t.setSegmentIntersector(this.segInt),t.computeNodes(this.segStrings),this.segInt.hasIntersection()?(this._isValid=!1,null):void 0},checkValid:function(){if(this.execute(),!this._isValid)throw new TopologyException(this.getErrorMessage(),this.segInt.getInteriorIntersection())},getErrorMessage:function(){if(this._isValid)return"no intersections found";var t=this.segInt.getIntersectionSegments();return"found non-noded intersection between "+WKTWriter.toLineString(t[0],t[1])+" and "+WKTWriter.toLineString(t[2],t[3])},interfaces_:function(){return[]},getClass:function(){return FastNodingValidator}}),FastNodingValidator.computeIntersections=function(t){var e=new FastNodingValidator(t);return e.setFindAllIntersections(!0),e.isValid(),e.getIntersections()},extend(EdgeNodingValidator.prototype,{checkValid:function(){this.nv.checkValid()},interfaces_:function(){return[]},getClass:function(){return EdgeNodingValidator}}),EdgeNodingValidator.toSegmentStrings=function(t){for(var e=new ArrayList,n=t.iterator();n.hasNext();){var i=n.next();e.add(new BasicSegmentString(i.getCoordinates(),i))}return e},EdgeNodingValidator.checkValid=function(t){var e=new EdgeNodingValidator(t);e.checkValid()},extend(LineBuilder.prototype,{collectLines:function(t){for(var e=this.op.getGraph().getEdgeEnds().iterator();e.hasNext();){var n=e.next();this.collectLineEdge(n,t,this.lineEdgesList),this.collectBoundaryTouchEdge(n,t,this.lineEdgesList)}},labelIsolatedLine:function(t,e){var n=this.ptLocator.locate(t.getCoordinate(),this.op.getArgGeometry(e));t.getLabel().setLocation(e,n)},build:function(t){return this.findCoveredLineEdges(),this.collectLines(t),this.buildLines(t),this.resultLineList},collectLineEdge:function(t,e,n){var i=t.getLabel(),r=t.getEdge();t.isLineEdge()&&(t.isVisited()||!OverlayOp.isResultOfOp(i,e)||r.isCovered()||(n.add(r),t.setVisitedEdge(!0)))},findCoveredLineEdges:function(){for(var t=this.op.getGraph().getNodes().iterator();t.hasNext();){var e=t.next();e.getEdges().findCoveredLineEdges()}for(var n=this.op.getGraph().getEdgeEnds().iterator();n.hasNext();){var i=n.next(),r=i.getEdge();if(i.isLineEdge()&&!r.isCoveredSet()){var o=this.op.isCoveredByA(i.getCoordinate());r.setCovered(o)}}},labelIsolatedLines:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),i=n.getLabel();n.isIsolated()&&(i.isNull(0)?this.labelIsolatedLine(n,0):this.labelIsolatedLine(n,1))}},buildLines:function(t){for(var e=this.lineEdgesList.iterator();e.hasNext();){var n=e.next(),i=(n.getLabel(),this.geometryFactory.createLineString(n.getCoordinates()));this.resultLineList.add(i),n.setInResult(!0)}},collectBoundaryTouchEdge:function(t,e,n){var i=t.getLabel();return t.isLineEdge()?null:t.isVisited()?null:t.isInteriorAreaEdge()?null:t.getEdge().isInResult()?null:(Assert.isTrue(!(t.isInResult()||t.getSym().isInResult())||!t.getEdge().isInResult()),void(OverlayOp.isResultOfOp(i,e)&&e===OverlayOp.INTERSECTION&&(n.add(t.getEdge()),t.setVisitedEdge(!0))))},interfaces_:function(){return[]},getClass:function(){return LineBuilder}}),extend(PointBuilder.prototype,{filterCoveredNodeToPoint:function(t){var e=t.getCoordinate();if(!this.op.isCoveredByLA(e)){var n=this.geometryFactory.createPoint(e);this.resultPointList.add(n)}},extractNonCoveredResultNodes:function(t){for(var e=this.op.getGraph().getNodes().iterator();e.hasNext();){var n=e.next();if(!(n.isInResult()||n.isIncidentEdgeInResult()||0!==n.getEdges().getDegree()&&t!==OverlayOp.INTERSECTION)){var i=n.getLabel();OverlayOp.isResultOfOp(i,t)&&this.filterCoveredNodeToPoint(n)}}},build:function(t){return this.extractNonCoveredResultNodes(t),this.resultPointList},interfaces_:function(){return[]},getClass:function(){return PointBuilder}}),extend(GeometryGraphOperation.prototype,{getArgGeometry:function(t){return this.arg[t].getGeometry()},setComputationPrecision:function(t){this.resultPrecisionModel=t,this.li.setPrecisionModel(this.resultPrecisionModel)},interfaces_:function(){return[]},getClass:function(){return GeometryGraphOperation}}),inherits(OverlayOp,GeometryGraphOperation),extend(OverlayOp.prototype,{insertUniqueEdge:function(t){var e=this.edgeList.findEqualEdge(t);if(null!==e){var n=e.getLabel(),i=t.getLabel();e.isPointwiseEqual(t)||(i=new Label(t.getLabel()),i.flip());var r=e.getDepth();r.isNull()&&r.add(n),r.add(i),n.merge(i)}else this.edgeList.add(t)},getGraph:function(){return this.graph},cancelDuplicateResultEdges:function(){for(var t=this.graph.getEdgeEnds().iterator();t.hasNext();){var e=t.next(),n=e.getSym();e.isInResult()&&n.isInResult()&&(e.setInResult(!1),n.setInResult(!1))}},isCoveredByLA:function(t){return this.isCovered(t,this.resultLineList)?!0:!!this.isCovered(t,this.resultPolyList)},computeGeometry:function(t,e,n,i){var r=new ArrayList;return r.addAll(t),r.addAll(e),r.addAll(n),r.isEmpty()?OverlayOp.createEmptyResult(i,this.arg[0].getGeometry(),this.arg[1].getGeometry(),this.geomFact):this.geomFact.buildGeometry(r)},mergeSymLabels:function(){
for(var t=this.graph.getNodes().iterator();t.hasNext();){var e=t.next();e.getEdges().mergeSymLabels()}},isCovered:function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next(),r=this.ptLocator.locate(t,i);if(r!==Location.EXTERIOR)return!0}return!1},replaceCollapsedEdges:function(){for(var t=new ArrayList,e=this.edgeList.iterator();e.hasNext();){var n=e.next();n.isCollapsed()&&(e.remove(),t.add(n.getCollapsedEdge()))}this.edgeList.addAll(t)},updateNodeLabelling:function(){for(var t=this.graph.getNodes().iterator();t.hasNext();){var e=t.next(),n=e.getEdges().getLabel();e.getLabel().merge(n)}},getResultGeometry:function(t){return this.computeOverlay(t),this.resultGeom},insertUniqueEdges:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.insertUniqueEdge(n)}},computeOverlay:function(t){this.copyPoints(0),this.copyPoints(1),this.arg[0].computeSelfNodes(this.li,!1),this.arg[1].computeSelfNodes(this.li,!1),this.arg[0].computeEdgeIntersections(this.arg[1],this.li,!0);var e=new ArrayList;this.arg[0].computeSplitEdges(e),this.arg[1].computeSplitEdges(e);this.insertUniqueEdges(e),this.computeLabelsFromDepths(),this.replaceCollapsedEdges(),EdgeNodingValidator.checkValid(this.edgeList.getEdges()),this.graph.addEdges(this.edgeList.getEdges()),this.computeLabelling(),this.labelIncompleteNodes(),this.findResultAreaEdges(t),this.cancelDuplicateResultEdges();var n=new PolygonBuilder(this.geomFact);n.add(this.graph),this.resultPolyList=n.getPolygons();var i=new LineBuilder(this,this.geomFact,this.ptLocator);this.resultLineList=i.build(t);var r=new PointBuilder(this,this.geomFact,this.ptLocator);this.resultPointList=r.build(t),this.resultGeom=this.computeGeometry(this.resultPointList,this.resultLineList,this.resultPolyList,t)},labelIncompleteNode:function(t,e){var n=this.ptLocator.locate(t.getCoordinate(),this.arg[e].getGeometry());t.getLabel().setLocation(e,n)},copyPoints:function(t){for(var e=this.arg[t].getNodeIterator();e.hasNext();){var n=e.next(),i=this.graph.addNode(n.getCoordinate());i.setLabel(t,n.getLabel().getLocation(t))}},findResultAreaEdges:function(t){for(var e=this.graph.getEdgeEnds().iterator();e.hasNext();){var n=e.next(),i=n.getLabel();i.isArea()&&!n.isInteriorAreaEdge()&&OverlayOp.isResultOfOp(i.getLocation(0,Position.RIGHT),i.getLocation(1,Position.RIGHT),t)&&n.setInResult(!0)}},computeLabelsFromDepths:function(){for(var t=this.edgeList.iterator();t.hasNext();){var e=t.next(),n=e.getLabel(),i=e.getDepth();if(!i.isNull()){i.normalize();for(var r=0;2>r;r++)n.isNull(r)||!n.isArea()||i.isNull(r)||(0===i.getDelta(r)?n.toLine(r):(Assert.isTrue(!i.isNull(r,Position.LEFT),"depth of LEFT side has not been initialized"),n.setLocation(r,Position.LEFT,i.getLocation(r,Position.LEFT)),Assert.isTrue(!i.isNull(r,Position.RIGHT),"depth of RIGHT side has not been initialized"),n.setLocation(r,Position.RIGHT,i.getLocation(r,Position.RIGHT))))}}},computeLabelling:function(){for(var t=this.graph.getNodes().iterator();t.hasNext();){var e=t.next();e.getEdges().computeLabelling(this.arg)}this.mergeSymLabels(),this.updateNodeLabelling()},labelIncompleteNodes:function(){for(var t=0,e=this.graph.getNodes().iterator();e.hasNext();){var n=e.next(),i=n.getLabel();n.isIsolated()&&(t++,i.isNull(0)?this.labelIncompleteNode(n,0):this.labelIncompleteNode(n,1)),n.getEdges().updateLabelling(i)}},isCoveredByA:function(t){return!!this.isCovered(t,this.resultPolyList)},interfaces_:function(){return[]},getClass:function(){return OverlayOp}}),OverlayOp.overlayOp=function(t,e,n){var i=new OverlayOp(t,e),r=i.getResultGeometry(n);return r},OverlayOp.isResultOfOp=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=t.getLocation(0),i=t.getLocation(1);return OverlayOp.isResultOfOp(n,i,e)}if(3===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2];switch(r===Location.BOUNDARY&&(r=Location.INTERIOR),o===Location.BOUNDARY&&(o=Location.INTERIOR),s){case OverlayOp.INTERSECTION:return r===Location.INTERIOR&&o===Location.INTERIOR;case OverlayOp.UNION:return r===Location.INTERIOR||o===Location.INTERIOR;case OverlayOp.DIFFERENCE:return r===Location.INTERIOR&&o!==Location.INTERIOR;case OverlayOp.SYMDIFFERENCE:return r===Location.INTERIOR&&o!==Location.INTERIOR||r!==Location.INTERIOR&&o===Location.INTERIOR}return!1}},OverlayOp.createEmptyResult=function(t,e,n,i){var r=null;switch(OverlayOp.resultDimension(t,e,n)){case-1:r=i.createGeometryCollection(new Array(0).fill(null));break;case 0:r=i.createPoint();break;case 1:r=i.createLineString();break;case 2:r=i.createPolygon()}return r},OverlayOp.resultDimension=function(t,e,n){var i=e.getDimension(),r=n.getDimension(),o=-1;switch(t){case OverlayOp.INTERSECTION:o=Math.min(i,r);break;case OverlayOp.UNION:o=Math.max(i,r);break;case OverlayOp.DIFFERENCE:o=i;break;case OverlayOp.SYMDIFFERENCE:o=Math.max(i,r)}return o},OverlayOp.INTERSECTION=1,OverlayOp.UNION=2,OverlayOp.DIFFERENCE=3,OverlayOp.SYMDIFFERENCE=4,inherits(PolygonizeDirectedEdge,DirectedEdge$1),extend(PolygonizeDirectedEdge.prototype,{getNext:function(){return this.next},isInRing:function(){return null!==this.edgeRing},setRing:function(t){this.edgeRing=t},setLabel:function(t){this.label=t},getLabel:function(){return this.label},setNext:function(t){this.next=t},getRing:function(){return this.edgeRing},interfaces_:function(){return[]},getClass:function(){return PolygonizeDirectedEdge}}),inherits(PolygonizeEdge,Edge$1),extend(PolygonizeEdge.prototype,{getLine:function(){return this.line},interfaces_:function(){return[]},getClass:function(){return PolygonizeEdge}}),extend(EdgeRing$1.prototype,{isIncluded:function(){return this._isIncluded},getCoordinates:function(){if(null===this.ringPts){for(var t=new CoordinateList,e=this.deList.iterator();e.hasNext();){var n=e.next(),i=n.getEdge();EdgeRing$1.addEdge(i.getLine().getCoordinates(),n.getEdgeDirection(),t)}this.ringPts=t.toCoordinateArray()}return this.ringPts},isIncludedSet:function(){return this._isIncludedSet},isValid:function(){return this.getCoordinates(),this.ringPts.length<=3?!1:(this.getRing(),this.ring.isValid())},build:function(t){var e=t;do this.add(e),e.setRing(this),e=e.getNext(),Assert.isTrue(null!==e,"found null DE in ring"),Assert.isTrue(e===t||!e.isInRing(),"found DE already in ring");while(e!==t)},isOuterHole:function(){return this._isHole?!this.hasShell():!1},getPolygon:function(){var t=null;if(null!==this.holes){t=new Array(this.holes.size()).fill(null);for(var e=0;e<this.holes.size();e++)t[e]=this.holes.get(e)}var n=this.factory.createPolygon(this.ring,t);return n},isHole:function(){return this._isHole},isProcessed:function(){return this._isProcessed},addHole:function(){if(arguments[0]instanceof LinearRing){var t=arguments[0];null===this.holes&&(this.holes=new ArrayList),this.holes.add(t)}else if(arguments[0]instanceof EdgeRing$1){var e=arguments[0];e.setShell(this);var n=e.getRing();null===this.holes&&(this.holes=new ArrayList),this.holes.add(n)}},setIncluded:function(t){this._isIncluded=t,this._isIncludedSet=!0},getOuterHole:function(){if(this.isHole())return null;for(var t=0;t<this.deList.size();t++){var e=this.deList.get(t),n=e.getSym().getRing();if(n.isOuterHole())return n}return null},computeHole:function(){var t=this.getRing();this._isHole=CGAlgorithms.isCCW(t.getCoordinates())},hasShell:function(){return null!==this.shell},isOuterShell:function(){return null!==this.getOuterHole()},getLineString:function(){return this.getCoordinates(),this.factory.createLineString(this.ringPts)},toString:function(){return WKTWriter.toLineString(new CoordinateArraySequence(this.getCoordinates()))},getShell:function(){return this.isHole()?this.shell:this},add:function(t){this.deList.add(t)},getRing:function(){if(null!==this.ring)return this.ring;this.getCoordinates(),this.ringPts.length<3&&System.out.println(this.ringPts);try{this.ring=this.factory.createLinearRing(this.ringPts)}catch(t){if(!(t instanceof Exception))throw t;System.out.println(this.ringPts)}finally{}return this.ring},updateIncluded:function(){if(this.isHole())return null;for(var t=0;t<this.deList.size();t++){var e=this.deList.get(t),n=e.getSym().getRing().getShell();if(null!==n&&n.isIncludedSet())return this.setIncluded(!n.isIncluded()),null}},setShell:function(t){this.shell=t},setProcessed:function(t){this._isProcessed=t},interfaces_:function(){return[]},getClass:function(){return EdgeRing$1}}),EdgeRing$1.findDirEdgesInRing=function(t){var e=t,n=new ArrayList;do n.add(e),e=e.getNext(),Assert.isTrue(null!==e,"found null DE in ring"),Assert.isTrue(e===t||!e.isInRing(),"found DE already in ring");while(e!==t);return n},EdgeRing$1.addEdge=function(t,e,n){if(e)for(var i=0;i<t.length;i++)n.add(t[i],!1);else for(var i=t.length-1;i>=0;i--)n.add(t[i],!1)},EdgeRing$1.findEdgeRingContaining=function(t,e){for(var n=t.getRing(),i=n.getEnvelopeInternal(),r=n.getCoordinateN(0),o=null,s=null,a=e.iterator();a.hasNext();){var l=a.next(),u=l.getRing(),c=u.getEnvelopeInternal();if(!c.equals(i)&&c.contains(i)){r=CoordinateArrays.ptNotInList(n.getCoordinates(),u.getCoordinates());var h=!1;CGAlgorithms.isPointInRing(r,u.getCoordinates())&&(h=!0),h&&(null===o||s.contains(c))&&(o=l,s=o.getRing().getEnvelopeInternal())}}return o},extend(EnvelopeComparator.prototype,{compare:function(t,e){var n=t,i=e;return n.getRing().getEnvelope().compareTo(i.getRing().getEnvelope())},interfaces_:function(){return[Comparator]},getClass:function(){return EnvelopeComparator}}),EdgeRing$1.EnvelopeComparator=EnvelopeComparator,inherits(PolygonizeGraph,PlanarGraph$1),extend(PolygonizeGraph.prototype,{findEdgeRing:function(t){var e=new EdgeRing$1(this.factory);return e.build(t),e},computeDepthParity:function(){if(0===arguments.length)for(;;){var t=null;if(null===t)return null;this.computeDepthParity(t)}else if(1===arguments.length){arguments[0]}},computeNextCWEdges:function(){for(var t=this.nodeIterator();t.hasNext();){var e=t.next();PolygonizeGraph.computeNextCWEdges(e)}},addEdge:function(t){if(t.isEmpty())return null;var e=CoordinateArrays.removeRepeatedPoints(t.getCoordinates());if(e.length<2)return null;var n=e[0],i=e[e.length-1],r=this.getNode(n),o=this.getNode(i),s=new PolygonizeDirectedEdge(r,o,e[1],!0),a=new PolygonizeDirectedEdge(o,r,e[e.length-2],!1),l=new PolygonizeEdge(t);l.setDirectedEdges(s,a),this.add(l)},deleteCutEdges:function(){this.computeNextCWEdges(),PolygonizeGraph.findLabeledEdgeRings(this.dirEdges);for(var t=new ArrayList,e=this.dirEdges.iterator();e.hasNext();){var n=e.next();if(!n.isMarked()){var i=n.getSym();if(n.getLabel()===i.getLabel()){n.setMarked(!0),i.setMarked(!0);var r=n.getEdge();t.add(r.getLine())}}}return t},getEdgeRings:function(){this.computeNextCWEdges(),PolygonizeGraph.label(this.dirEdges,-1);var t=PolygonizeGraph.findLabeledEdgeRings(this.dirEdges);this.convertMaximalToMinimalEdgeRings(t);for(var e=new ArrayList,n=this.dirEdges.iterator();n.hasNext();){var i=n.next();if(!i.isMarked()&&!i.isInRing()){var r=this.findEdgeRing(i);e.add(r)}}return e},getNode:function(t){var e=this.findNode(t);return null===e&&(e=new Node$2(t),this.add(e)),e},convertMaximalToMinimalEdgeRings:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),i=n.getLabel(),r=PolygonizeGraph.findIntersectionNodes(n,i);if(null!==r)for(var o=r.iterator();o.hasNext();){var s=o.next();PolygonizeGraph.computeNextCCWEdges(s,i)}}},deleteDangles:function(){for(var t=this.findNodesOfDegree(1),e=new HashSet,n=new Stack,i=t.iterator();i.hasNext();)n.push(i.next());for(;!n.isEmpty();){var r=n.pop();PolygonizeGraph.deleteAllEdges(r);for(var o=r.getOutEdges().getEdges(),i=o.iterator();i.hasNext();){var s=i.next();s.setMarked(!0);var a=s.getSym();null!==a&&a.setMarked(!0);var l=s.getEdge();e.add(l.getLine());var u=s.getToNode();1===PolygonizeGraph.getDegreeNonDeleted(u)&&n.push(u)}}return e},interfaces_:function(){return[]},getClass:function(){return PolygonizeGraph}}),PolygonizeGraph.findLabeledEdgeRings=function(t){for(var e=new ArrayList,n=1,i=t.iterator();i.hasNext();){var r=i.next();if(!(r.isMarked()||r.getLabel()>=0)){e.add(r);var o=EdgeRing$1.findDirEdgesInRing(r);PolygonizeGraph.label(o,n),n++}}return e},PolygonizeGraph.getDegreeNonDeleted=function(t){for(var e=t.getOutEdges().getEdges(),n=0,i=e.iterator();i.hasNext();){var r=i.next();r.isMarked()||n++}return n},PolygonizeGraph.deleteAllEdges=function(t){for(var e=t.getOutEdges().getEdges(),n=e.iterator();n.hasNext();){var i=n.next();i.setMarked(!0);var r=i.getSym();null!==r&&r.setMarked(!0)}},PolygonizeGraph.label=function(t,e){for(var n=t.iterator();n.hasNext();){var i=n.next();i.setLabel(e)}},PolygonizeGraph.computeNextCWEdges=function(t){for(var e=t.getOutEdges(),n=null,i=null,r=e.getEdges().iterator();r.hasNext();){var o=r.next();if(!o.isMarked()){if(null===n&&(n=o),null!==i){var s=i.getSym();s.setNext(o)}i=o}}if(null!==i){var s=i.getSym();s.setNext(n)}},PolygonizeGraph.computeNextCCWEdges=function(t,e){for(var n=t.getOutEdges(),i=null,r=null,o=n.getEdges(),s=o.size()-1;s>=0;s--){var a=o.get(s),l=a.getSym(),u=null;a.getLabel()===e&&(u=a);var c=null;l.getLabel()===e&&(c=l),null===u&&null===c||(null!==c&&(r=c),null!==u&&(null!==r&&(r.setNext(u),r=null),null===i&&(i=u)))}null!==r&&(Assert.isTrue(null!==i),r.setNext(i))},PolygonizeGraph.getDegree=function(t,e){for(var n=t.getOutEdges().getEdges(),i=0,r=n.iterator();r.hasNext();){var o=r.next();o.getLabel()===e&&i++}return i},PolygonizeGraph.findIntersectionNodes=function(t,e){var n=t,i=null;do{var r=n.getFromNode();PolygonizeGraph.getDegree(r,e)>1&&(null===i&&(i=new ArrayList),i.add(r)),n=n.getNext(),Assert.isTrue(null!==n,"found null DE in ring"),Assert.isTrue(n===t||!n.isInRing(),"found DE already in ring")}while(n!==t);return i},extend(Polygonizer.prototype,{getGeometry:function(){return null===this.geomFactory&&(this.geomFactory=new GeometryFactory),this.polygonize(),this.extractOnlyPolygonal?this.geomFactory.buildGeometry(this.polyList):this.geomFactory.createGeometryCollection(GeometryFactory.toGeometryArray(this.polyList))},getInvalidRingLines:function(){return this.polygonize(),this.invalidRingLines},findValidRings:function(t,e,n){for(var i=t.iterator();i.hasNext();){var r=i.next();r.isValid()?e.add(r):n.add(r.getLineString())}},polygonize:function(){if(null!==this.polyList)return null;if(this.polyList=new ArrayList,null===this.graph)return null;this.dangles=this.graph.deleteDangles(),this.cutEdges=this.graph.deleteCutEdges();var t=this.graph.getEdgeRings(),e=new ArrayList;this.invalidRingLines=new ArrayList,this.isCheckingRingsValid?this.findValidRings(t,e,this.invalidRingLines):e=t,this.findShellsAndHoles(e),Polygonizer.assignHolesToShells(this.holeList,this.shellList),Collections.sort(this.shellList,new EdgeRing$1.EnvelopeComparator);var n=!0;this.extractOnlyPolygonal&&(Polygonizer.findDisjointShells(this.shellList),n=!1),this.polyList=Polygonizer.extractPolygons(this.shellList,n)},getDangles:function(){return this.polygonize(),this.dangles},getCutEdges:function(){return this.polygonize(),this.cutEdges},getPolygons:function(){return this.polygonize(),this.polyList},add:function(){if(hasInterface(arguments[0],Collection))for(var t=arguments[0],e=t.iterator();e.hasNext();){var n=e.next();this.add(n)}else if(arguments[0]instanceof LineString){var i=arguments[0];this.geomFactory=i.getFactory(),null===this.graph&&(this.graph=new PolygonizeGraph(this.geomFactory)),this.graph.addEdge(i)}else if(arguments[0]instanceof Geometry){var r=arguments[0];r.apply(this.lineStringAdder)}},setCheckRingsValid:function(t){this.isCheckingRingsValid=t},findShellsAndHoles:function(t){this.holeList=new ArrayList,this.shellList=new ArrayList;for(var e=t.iterator();e.hasNext();){var n=e.next();n.computeHole(),n.isHole()?this.holeList.add(n):this.shellList.add(n)}},interfaces_:function(){return[]},getClass:function(){return Polygonizer}}),Polygonizer.findOuterShells=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),i=n.getOuterHole();null===i||i.isProcessed()||(n.setIncluded(!0),i.setProcessed(!0))}},Polygonizer.extractPolygons=function(t,e){for(var n=new ArrayList,i=t.iterator();i.hasNext();){var r=i.next();(e||r.isIncluded())&&n.add(r.getPolygon())}return n},Polygonizer.assignHolesToShells=function(t,e){for(var n=t.iterator();n.hasNext();){var i=n.next();Polygonizer.assignHoleToShell(i,e)}},Polygonizer.assignHoleToShell=function(t,e){var n=EdgeRing$1.findEdgeRingContaining(t,e);null!==n&&n.addHole(t)},Polygonizer.findDisjointShells=function(t){Polygonizer.findOuterShells(t);var e=null;do{e=!1;for(var n=t.iterator();n.hasNext();){var i=n.next();i.isIncludedSet()||(i.updateIncluded(),i.isIncludedSet()||(e=!0))}}while(e)},extend(LineStringAdder.prototype,{filter:function(t){t instanceof LineString&&this.p.add(t)},interfaces_:function(){return[GeometryComponentFilter$1]},getClass:function(){return LineStringAdder}}),Polygonizer.LineStringAdder=LineStringAdder,extend(EdgeEndBuilder.prototype,{createEdgeEndForNext:function(t,e,n,i){var r=n.segmentIndex+1;if(r>=t.getNumPoints()&&null===i)return null;var o=t.getCoordinate(r);null!==i&&i.segmentIndex===n.segmentIndex&&(o=i.coord);var s=new EdgeEnd(t,n.coord,o,new Label(t.getLabel()));e.add(s)},createEdgeEndForPrev:function(t,e,n,i){var r=n.segmentIndex;if(0===n.dist){if(0===r)return null;r--}var o=t.getCoordinate(r);null!==i&&i.segmentIndex>=r&&(o=i.coord);var s=new Label(t.getLabel());s.flip();var a=new EdgeEnd(t,n.coord,o,s);e.add(a)},computeEdgeEnds:function(){if(1===arguments.length){for(var t=arguments[0],e=new ArrayList,n=t;n.hasNext();){var i=n.next();this.computeEdgeEnds(i,e)}return e}if(2===arguments.length){var r=arguments[0],o=arguments[1],s=r.getEdgeIntersectionList();s.addEndpoints();var a=s.iterator(),l=null,u=null;if(!a.hasNext())return null;var c=a.next();do l=u,u=c,c=null,a.hasNext()&&(c=a.next()),null!==u&&(this.createEdgeEndForPrev(r,o,u,l),this.createEdgeEndForNext(r,o,u,c));while(null!==u)}},interfaces_:function(){return[]},getClass:function(){return EdgeEndBuilder}}),inherits(EdgeEndBundle,EdgeEnd),extend(EdgeEndBundle.prototype,{insert:function(t){this.edgeEnds.add(t)},print:function(t){t.println("EdgeEndBundle--> Label: "+this.label);for(var e=this.iterator();e.hasNext();){var n=e.next();n.print(t),t.println()}},iterator:function(){return this.edgeEnds.iterator()},getEdgeEnds:function(){return this.edgeEnds},computeLabelOn:function(t,e){for(var n=0,i=!1,r=this.iterator();r.hasNext();){var o=r.next(),s=o.getLabel().getLocation(t);s===Location.BOUNDARY&&n++,s===Location.INTERIOR&&(i=!0)}var s=Location.NONE;i&&(s=Location.INTERIOR),n>0&&(s=GeometryGraph.determineBoundary(e,n)),this.label.setLocation(t,s)},computeLabelSide:function(t,e){for(var n=this.iterator();n.hasNext();){var i=n.next();if(i.getLabel().isArea()){var r=i.getLabel().getLocation(t,e);if(r===Location.INTERIOR)return this.label.setLocation(t,e,Location.INTERIOR),null;r===Location.EXTERIOR&&this.label.setLocation(t,e,Location.EXTERIOR)}}},getLabel:function(){return this.label},computeLabelSides:function(t){this.computeLabelSide(t,Position.LEFT),this.computeLabelSide(t,Position.RIGHT)},updateIM:function(t){Edge.updateIM(this.label,t)},computeLabel:function(t){for(var e=!1,n=this.iterator();n.hasNext();){var i=n.next();i.getLabel().isArea()&&(e=!0)}e?this.label=new Label(Location.NONE,Location.NONE,Location.NONE):this.label=new Label(Location.NONE);for(var r=0;2>r;r++)this.computeLabelOn(r,t),e&&this.computeLabelSides(r)},interfaces_:function(){return[]},getClass:function(){return EdgeEndBundle}}),inherits(EdgeEndBundleStar,EdgeEndStar),extend(EdgeEndBundleStar.prototype,{updateIM:function(t){for(var e=this.iterator();e.hasNext();){var n=e.next();n.updateIM(t)}},insert:function(t){var e=this.edgeMap.get(t);null===e?(e=new EdgeEndBundle(t),this.insertEdgeEnd(t,e)):e.insert(t)},interfaces_:function(){return[]},getClass:function(){return EdgeEndBundleStar}}),inherits(RelateNode,Node$1),extend(RelateNode.prototype,{updateIMFromEdges:function(t){this.edges.updateIM(t)},computeIM:function(t){t.setAtLeastIfValid(this.label.getLocation(0),this.label.getLocation(1),0)},interfaces_:function(){return[]},getClass:function(){return RelateNode}}),inherits(RelateNodeFactory,NodeFactory),extend(RelateNodeFactory.prototype,{createNode:function(t){return new RelateNode(t,new EdgeEndBundleStar)},interfaces_:function(){return[]},getClass:function(){return RelateNodeFactory}}),extend(RelateComputer.prototype,{insertEdgeEnds:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.nodes.add(n)}},computeProperIntersectionIM:function(t,e){var n=this.arg[0].getGeometry().getDimension(),i=this.arg[1].getGeometry().getDimension(),r=t.hasProperIntersection(),o=t.hasProperInteriorIntersection();2===n&&2===i?r&&e.setAtLeast("212101212"):2===n&&1===i?(r&&e.setAtLeast("FFF0FFFF2"),o&&e.setAtLeast("1FFFFF1FF")):1===n&&2===i?(r&&e.setAtLeast("F0FFFFFF2"),o&&e.setAtLeast("1F1FFFFFF")):1===n&&1===i&&o&&e.setAtLeast("0FFFFFFFF")},labelIsolatedEdges:function(t,e){for(var n=this.arg[t].getEdgeIterator();n.hasNext();){var i=n.next();i.isIsolated()&&(this.labelIsolatedEdge(i,e,this.arg[e].getGeometry()),this.isolatedEdges.add(i))}},labelIsolatedEdge:function(t,e,n){if(n.getDimension()>0){var i=this.ptLocator.locate(t.getCoordinate(),n);t.getLabel().setAllLocations(e,i)}else t.getLabel().setAllLocations(e,Location.EXTERIOR)},computeIM:function(){var t=new IntersectionMatrix;if(t.set(Location.EXTERIOR,Location.EXTERIOR,2),!this.arg[0].getGeometry().getEnvelopeInternal().intersects(this.arg[1].getGeometry().getEnvelopeInternal()))return this.computeDisjointIM(t),t;this.arg[0].computeSelfNodes(this.li,!1),this.arg[1].computeSelfNodes(this.li,!1);var e=this.arg[0].computeEdgeIntersections(this.arg[1],this.li,!1);this.computeIntersectionNodes(0),this.computeIntersectionNodes(1),this.copyNodesAndLabels(0),this.copyNodesAndLabels(1),this.labelIsolatedNodes(),this.computeProperIntersectionIM(e,t);var n=new EdgeEndBuilder,i=n.computeEdgeEnds(this.arg[0].getEdgeIterator());this.insertEdgeEnds(i);var r=n.computeEdgeEnds(this.arg[1].getEdgeIterator());return this.insertEdgeEnds(r),this.labelNodeEdges(),this.labelIsolatedEdges(0,1),this.labelIsolatedEdges(1,0),this.updateIM(t),t},labelNodeEdges:function(){for(var t=this.nodes.iterator();t.hasNext();){var e=t.next();e.getEdges().computeLabelling(this.arg)}},copyNodesAndLabels:function(t){for(var e=this.arg[t].getNodeIterator();e.hasNext();){var n=e.next(),i=this.nodes.addNode(n.getCoordinate());i.setLabel(t,n.getLabel().getLocation(t))}},labelIntersectionNodes:function(t){for(var e=this.arg[t].getEdgeIterator();e.hasNext();)for(var n=e.next(),i=n.getLabel().getLocation(t),r=n.getEdgeIntersectionList().iterator();r.hasNext();){var o=r.next(),s=this.nodes.find(o.coord);s.getLabel().isNull(t)&&(i===Location.BOUNDARY?s.setLabelBoundary(t):s.setLabel(t,Location.INTERIOR))}},labelIsolatedNode:function(t,e){var n=this.ptLocator.locate(t.getCoordinate(),this.arg[e].getGeometry());t.getLabel().setAllLocations(e,n)},computeIntersectionNodes:function(t){for(var e=this.arg[t].getEdgeIterator();e.hasNext();)for(var n=e.next(),i=n.getLabel().getLocation(t),r=n.getEdgeIntersectionList().iterator();r.hasNext();){var o=r.next(),s=this.nodes.addNode(o.coord);i===Location.BOUNDARY?s.setLabelBoundary(t):s.getLabel().isNull(t)&&s.setLabel(t,Location.INTERIOR)}},labelIsolatedNodes:function(){for(var t=this.nodes.iterator();t.hasNext();){var e=t.next(),n=e.getLabel();Assert.isTrue(n.getGeometryCount()>0,"node with empty label found"),e.isIsolated()&&(n.isNull(0)?this.labelIsolatedNode(e,0):this.labelIsolatedNode(e,1))}},updateIM:function(t){for(var e=this.isolatedEdges.iterator();e.hasNext();){var n=e.next();n.updateIM(t)}for(var i=this.nodes.iterator();i.hasNext();){var r=i.next();r.updateIM(t),r.updateIMFromEdges(t)}},computeDisjointIM:function(t){var e=this.arg[0].getGeometry();e.isEmpty()||(t.set(Location.INTERIOR,Location.EXTERIOR,e.getDimension()),t.set(Location.BOUNDARY,Location.EXTERIOR,e.getBoundaryDimension()));var n=this.arg[1].getGeometry();n.isEmpty()||(t.set(Location.EXTERIOR,Location.INTERIOR,n.getDimension()),t.set(Location.EXTERIOR,Location.BOUNDARY,n.getBoundaryDimension()))},interfaces_:function(){return[]},getClass:function(){return RelateComputer}}),inherits(RelateOp$1,GeometryGraphOperation),extend(RelateOp$1.prototype,{getIntersectionMatrix:function(){return this._relate.computeIM()},interfaces_:function(){return[]},getClass:function(){return RelateOp$1}}),RelateOp$1.relate=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new RelateOp$1(t,e),i=n.getIntersectionMatrix();return i}if(3===arguments.length){var t=arguments[0],e=arguments[1],r=arguments[2],n=new RelateOp$1(t,e,r),i=n.getIntersectionMatrix();return i}},extend(GeometryCombiner.prototype,{extractElements:function(t,e){if(null===t)return null;for(var n=0;n<t.getNumGeometries();n++){var i=t.getGeometryN(n);this.skipEmpty&&i.isEmpty()||e.add(i)}},combine:function(){for(var t=new ArrayList,e=this.inputGeoms.iterator();e.hasNext();){var n=e.next();this.extractElements(n,t)}return 0===t.size()?null!==this.geomFactory?this.geomFactory.createGeometryCollection(null):null:this.geomFactory.buildGeometry(t)},interfaces_:function(){return[]},getClass:function(){return GeometryCombiner}}),GeometryCombiner.combine=function(){if(1===arguments.length){var t=arguments[0],e=new GeometryCombiner(t);return e.combine()}if(2===arguments.length){var n=arguments[0],i=arguments[1],e=new GeometryCombiner(GeometryCombiner.createList(n,i));return e.combine()}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],e=new GeometryCombiner(GeometryCombiner.createList(n,i,r));return e.combine()}},GeometryCombiner.extractFactory=function(t){return t.isEmpty()?null:t.iterator().next().getFactory()},GeometryCombiner.createList=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new ArrayList;return n.add(t),n.add(e),n}if(3===arguments.length){var t=arguments[0],e=arguments[1],i=arguments[2],n=new ArrayList;return n.add(t),n.add(e),n.add(i),n}},extend(CascadedPolygonUnion.prototype,{reduceToGeometries:function(t){for(var e=new ArrayList,n=t.iterator();n.hasNext();){var i=n.next(),r=null;hasInterface(i,List)?r=this.unionTree(i):i instanceof Geometry&&(r=i),e.add(r)}return e},extractByEnvelope:function(t,e,n){for(var i=new ArrayList,r=0;r<e.getNumGeometries();r++){var o=e.getGeometryN(r);o.getEnvelopeInternal().intersects(t)?i.add(o):n.add(o)}return this.geomFactory.buildGeometry(i)},unionOptimized:function(t,e){var n=t.getEnvelopeInternal(),i=e.getEnvelopeInternal();if(!n.intersects(i)){var r=GeometryCombiner.combine(t,e);return r}if(t.getNumGeometries()<=1&&e.getNumGeometries()<=1)return this.unionActual(t,e);var o=n.intersection(i);return this.unionUsingEnvelopeIntersection(t,e,o)},union:function(){if(null===this.inputPolys)throw new IllegalStateException("union() method cannot be called twice");if(this.inputPolys.isEmpty())return null;this.geomFactory=this.inputPolys.iterator().next().getFactory();for(var t=new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY),e=this.inputPolys.iterator();e.hasNext();){var n=e.next();t.insert(n.getEnvelopeInternal(),n)}this.inputPolys=null;var i=t.itemsTree(),r=this.unionTree(i);return r},binaryUnion:function(){if(1===arguments.length){var t=arguments[0];return this.binaryUnion(t,0,t.size())}if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];if(1>=n-e){var i=CascadedPolygonUnion.getGeometry(t,e);return this.unionSafe(i,null)}if(n-e===2)return this.unionSafe(CascadedPolygonUnion.getGeometry(t,e),CascadedPolygonUnion.getGeometry(t,e+1));var r=Math.trunc((n+e)/2),i=this.binaryUnion(t,e,r),o=this.binaryUnion(t,r,n);return this.unionSafe(i,o)}},repeatedUnion:function(t){for(var e=null,n=t.iterator();n.hasNext();){var i=n.next();e=null===e?i.copy():e.union(i)}return e},unionSafe:function(t,e){return null===t&&null===e?null:null===t?e.copy():null===e?t.copy():this.unionOptimized(t,e)},unionActual:function(t,e){return CascadedPolygonUnion.restrictToPolygons(t.union(e))},unionTree:function(t){var e=this.reduceToGeometries(t),n=this.binaryUnion(e);return n},unionUsingEnvelopeIntersection:function(t,e,n){var i=new ArrayList,r=this.extractByEnvelope(n,t,i),o=this.extractByEnvelope(n,e,i),s=this.unionActual(r,o);i.add(s);var a=GeometryCombiner.combine(i);return a},bufferUnion:function(){if(1===arguments.length){var t=arguments[0],e=t.get(0).getFactory(),n=e.buildGeometry(t),i=n.buffer(0);return i}if(2===arguments.length){var r=arguments[0],o=arguments[1],e=r.getFactory(),n=e.createGeometryCollection([r,o]),i=n.buffer(0);return i}},interfaces_:function(){return[]},getClass:function(){return CascadedPolygonUnion}}),CascadedPolygonUnion.restrictToPolygons=function(t){if(hasInterface(t,Polygonal))return t;var e=PolygonExtracter.getPolygons(t);return 1===e.size()?e.get(0):t.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(e))},CascadedPolygonUnion.getGeometry=function(t,e){return e>=t.size()?null:t.get(e)},CascadedPolygonUnion.union=function(t){var e=new CascadedPolygonUnion(t);return e.union()},CascadedPolygonUnion.STRTREE_NODE_CAPACITY=4,extend(PointGeometryUnion.prototype,{union:function(){for(var t=new PointLocator,e=new TreeSet,n=0;n<this.pointGeom.getNumGeometries();n++){var i=this.pointGeom.getGeometryN(n),r=i.getCoordinate(),o=t.locate(r,this.otherGeom);o===Location.EXTERIOR&&e.add(r)}if(0===e.size())return this.otherGeom;var s=null,a=CoordinateArrays.toCoordinateArray(e);return s=1===a.length?this.geomFact.createPoint(a[0]):this.geomFact.createMultiPointFromCoords(a),GeometryCombiner.combine(s,this.otherGeom)},interfaces_:function(){return[]},getClass:function(){return PointGeometryUnion}}),PointGeometryUnion.union=function(t,e){var n=new PointGeometryUnion(t,e);return n.union()},extend(LineStringSnapper.prototype,{snapVertices:function(t,e){for(var n=this._isClosed?t.size()-1:t.size(),i=0;n>i;i++){var r=t.get(i),o=this.findSnapForVertex(r,e);null!==o&&(t.set(i,new Coordinate(o)),0===i&&this._isClosed&&t.set(t.size()-1,new Coordinate(o)))}},findSnapForVertex:function(t,e){for(var n=0;n<e.length;n++){if(t.equals2D(e[n]))return null;if(t.distance(e[n])<this.snapTolerance)return e[n]}return null},snapTo:function(t){var e=new CoordinateList(this.srcPts);this.snapVertices(e,t),this.snapSegments(e,t);var n=e.toCoordinateArray();return n},snapSegments:function(t,e){if(0===e.length)return null;var n=e.length;e[0].equals2D(e[e.length-1])&&(n=e.length-1);for(var i=0;n>i;i++){var r=e[i],o=this.findSegmentIndexToSnap(r,t);o>=0&&t.add(o+1,new Coordinate(r),!1)}},findSegmentIndexToSnap:function(t,e){for(var n=Double.MAX_VALUE,i=-1,r=0;r<e.size()-1;r++){if(this.seg.p0=e.get(r),this.seg.p1=e.get(r+1),this.seg.p0.equals2D(t)||this.seg.p1.equals2D(t)){if(this.allowSnappingToSourceVertices)continue;return-1}var o=this.seg.distance(t);o<this.snapTolerance&&n>o&&(n=o,i=r)}return i},setAllowSnappingToSourceVertices:function(t){this.allowSnappingToSourceVertices=t},interfaces_:function(){return[]},getClass:function(){return LineStringSnapper}}),LineStringSnapper.isClosed=function(t){return t.length<=1?!1:t[0].equals2D(t[t.length-1])},extend(GeometrySnapper.prototype,{snapTo:function(t,e){var n=this.extractTargetCoordinates(t),i=new SnapTransformer(e,n);return i.transform(this.srcGeom)},snapToSelf:function(t,e){var n=this.extractTargetCoordinates(this.srcGeom),i=new SnapTransformer(t,n,!0),r=i.transform(this.srcGeom),o=r;return e&&hasInterface(o,Polygonal)&&(o=r.buffer(0)),o},computeSnapTolerance:function(t){var e=this.computeMinimumSegmentLength(t),n=e/10;return n},extractTargetCoordinates:function(t){for(var e=new TreeSet,n=t.getCoordinates(),i=0;i<n.length;i++)e.add(n[i]);return e.toArray(new Array(0).fill(null))},computeMinimumSegmentLength:function(t){for(var e=Double.MAX_VALUE,n=0;n<t.length-1;n++){var i=t[n].distance(t[n+1]);e>i&&(e=i)}return e},interfaces_:function(){return[]},getClass:function(){return GeometrySnapper}}),GeometrySnapper.snap=function(t,e,n){
var i=new Array(2).fill(null),r=new GeometrySnapper(t);i[0]=r.snapTo(e,n);var o=new GeometrySnapper(e);return i[1]=o.snapTo(i[0],n),i},GeometrySnapper.computeOverlaySnapTolerance=function(){if(1===arguments.length){var t=arguments[0],e=GeometrySnapper.computeSizeBasedSnapTolerance(t),n=t.getPrecisionModel();if(n.getType()===PrecisionModel.FIXED){var i=1/n.getScale()*2/1.415;i>e&&(e=i)}return e}if(2===arguments.length){var r=arguments[0],o=arguments[1];return Math.min(GeometrySnapper.computeOverlaySnapTolerance(r),GeometrySnapper.computeOverlaySnapTolerance(o))}},GeometrySnapper.computeSizeBasedSnapTolerance=function(t){var e=t.getEnvelopeInternal(),n=Math.min(e.getHeight(),e.getWidth()),i=n*GeometrySnapper.SNAP_PRECISION_FACTOR;return i},GeometrySnapper.snapToSelf=function(t,e,n){var i=new GeometrySnapper(t);return i.snapToSelf(e,n)},GeometrySnapper.SNAP_PRECISION_FACTOR=1e-9,inherits(SnapTransformer,GeometryTransformer),extend(SnapTransformer.prototype,{snapLine:function(t,e){var n=new LineStringSnapper(t,this.snapTolerance);return n.setAllowSnappingToSourceVertices(this.isSelfSnap),n.snapTo(e)},transformCoordinates:function(t,e){var n=t.toCoordinateArray(),i=this.snapLine(n,this.snapPts);return this.factory.getCoordinateSequenceFactory().create(i)},interfaces_:function(){return[]},getClass:function(){return SnapTransformer}}),extend(CommonBits.prototype,{getCommon:function(){return Double.longBitsToDouble(this.commonBits)},add:function(t){var e=Double.doubleToLongBits(t);if(this.isFirst)return this.commonBits=e,this.commonSignExp=CommonBits.signExpBits(this.commonBits),this.isFirst=!1,null;var n=CommonBits.signExpBits(e);return n!==this.commonSignExp?(this.commonBits=0,null):(this.commonMantissaBitsCount=CommonBits.numCommonMostSigMantissaBits(this.commonBits,e),void(this.commonBits=CommonBits.zeroLowerBits(this.commonBits,64-(12+this.commonMantissaBitsCount))))},toString:function(){if(1===arguments.length){var t=arguments[0],e=Double.longBitsToDouble(t),n=Long.toBinaryString(t),i="0000000000000000000000000000000000000000000000000000000000000000"+n,r=i.substring(i.length-64),o=r.substring(0,1)+"  "+r.substring(1,12)+"(exp) "+r.substring(12)+" [ "+e+" ]";return o}},interfaces_:function(){return[]},getClass:function(){return CommonBits}}),CommonBits.getBit=function(t,e){var n=1<<e;return 0!==(t&n)?1:0},CommonBits.signExpBits=function(t){return t>>52},CommonBits.zeroLowerBits=function(t,e){var n=(1<<e)-1,i=~n,r=t&i;return r},CommonBits.numCommonMostSigMantissaBits=function(t,e){for(var n=0,i=52;i>=0;i--){if(CommonBits.getBit(t,i)!==CommonBits.getBit(e,i))return n;n++}return 52},extend(CommonBitsRemover.prototype,{addCommonBits:function(t){var e=new Translater(this.commonCoord);t.apply(e),t.geometryChanged()},removeCommonBits:function(t){if(0===this.commonCoord.x&&0===this.commonCoord.y)return t;var e=new Coordinate(this.commonCoord);e.x=-e.x,e.y=-e.y;var n=new Translater(e);return t.apply(n),t.geometryChanged(),t},getCommonCoordinate:function(){return this.commonCoord},add:function(t){t.apply(this.ccFilter),this.commonCoord=this.ccFilter.getCommonCoordinate()},interfaces_:function(){return[]},getClass:function(){return CommonBitsRemover}}),extend(CommonCoordinateFilter.prototype,{filter:function(t){this.commonBitsX.add(t.x),this.commonBitsY.add(t.y)},getCommonCoordinate:function(){return new Coordinate(this.commonBitsX.getCommon(),this.commonBitsY.getCommon())},interfaces_:function(){return[CoordinateFilter]},getClass:function(){return CommonCoordinateFilter}}),extend(Translater.prototype,{filter:function(t,e){var n=t.getOrdinate(e,0)+this.trans.x,i=t.getOrdinate(e,1)+this.trans.y;t.setOrdinate(e,0,n),t.setOrdinate(e,1,i)},isDone:function(){return!1},isGeometryChanged:function(){return!0},interfaces_:function(){return[CoordinateSequenceFilter]},getClass:function(){return Translater}}),CommonBitsRemover.CommonCoordinateFilter=CommonCoordinateFilter,CommonBitsRemover.Translater=Translater,extend(SnapOverlayOp.prototype,{selfSnap:function(t){var e=new GeometrySnapper(t),n=e.snapTo(t,this.snapTolerance);return n},removeCommonBits:function(t){this.cbr=new CommonBitsRemover,this.cbr.add(t[0]),this.cbr.add(t[1]);var e=new Array(2).fill(null);return e[0]=this.cbr.removeCommonBits(t[0].copy()),e[1]=this.cbr.removeCommonBits(t[1].copy()),e},prepareResult:function(t){return this.cbr.addCommonBits(t),t},getResultGeometry:function(t){var e=this.snap(this.geom),n=OverlayOp.overlayOp(e[0],e[1],t);return this.prepareResult(n)},checkValid:function(t){t.isValid()||System.out.println("Snapped geometry is invalid")},computeSnapTolerance:function(){this.snapTolerance=GeometrySnapper.computeOverlaySnapTolerance(this.geom[0],this.geom[1])},snap:function(t){var e=this.removeCommonBits(t),n=GeometrySnapper.snap(e[0],e[1],this.snapTolerance);return n},interfaces_:function(){return[]},getClass:function(){return SnapOverlayOp}}),SnapOverlayOp.overlayOp=function(t,e,n){var i=new SnapOverlayOp(t,e);return i.getResultGeometry(n)},SnapOverlayOp.union=function(t,e){return SnapOverlayOp.overlayOp(t,e,OverlayOp.UNION)},SnapOverlayOp.intersection=function(t,e){return SnapOverlayOp.overlayOp(t,e,OverlayOp.INTERSECTION)},SnapOverlayOp.symDifference=function(t,e){return SnapOverlayOp.overlayOp(t,e,OverlayOp.SYMDIFFERENCE)},SnapOverlayOp.difference=function(t,e){return SnapOverlayOp.overlayOp(t,e,OverlayOp.DIFFERENCE)},extend(SnapIfNeededOverlayOp.prototype,{getResultGeometry:function(t){var e=null,n=!1,i=null;try{e=OverlayOp.overlayOp(this.geom[0],this.geom[1],t);var r=!0;r&&(n=!0)}catch(t){if(!(t instanceof RuntimeException))throw t;i=t}finally{}if(!n)try{e=SnapOverlayOp.overlayOp(this.geom[0],this.geom[1],t)}catch(t){throw t instanceof RuntimeException?i:t}finally{}return e},interfaces_:function(){return[]},getClass:function(){return SnapIfNeededOverlayOp}}),SnapIfNeededOverlayOp.overlayOp=function(t,e,n){var i=new SnapIfNeededOverlayOp(t,e);return i.getResultGeometry(n)},SnapIfNeededOverlayOp.union=function(t,e){return SnapIfNeededOverlayOp.overlayOp(t,e,OverlayOp.UNION)},SnapIfNeededOverlayOp.intersection=function(t,e){return SnapIfNeededOverlayOp.overlayOp(t,e,OverlayOp.INTERSECTION)},SnapIfNeededOverlayOp.symDifference=function(t,e){return SnapIfNeededOverlayOp.overlayOp(t,e,OverlayOp.SYMDIFFERENCE)},SnapIfNeededOverlayOp.difference=function(t,e){return SnapIfNeededOverlayOp.overlayOp(t,e,OverlayOp.DIFFERENCE)},extend(GeometryExtracter.prototype,{filter:function(t){(null===this.clz||GeometryExtracter.isOfClass(t,this.clz))&&this.comps.add(t)},interfaces_:function(){return[GeometryFilter]},getClass:function(){return GeometryExtracter}}),GeometryExtracter.isOfClass=function(t,e){return e.isAssignableFrom(t.getClass())},GeometryExtracter.extract=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return GeometryExtracter.extract(t,e,new ArrayList)}if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];return GeometryExtracter.isOfClass(t,e)?n.add(t):t instanceof GeometryCollection&&t.apply(new GeometryExtracter(e,n)),n}},extend(UnaryUnionOp.prototype,{unionNoOpt:function(t){var e=this.geomFact.createPoint();return SnapIfNeededOverlayOp.overlayOp(t,e,OverlayOp.UNION)},unionWithNull:function(t,e){return null===t&&null===e?null:null===e?t:null===t?e:t.union(e)},extract:function(){if(hasInterface(arguments[0],Collection))for(var t=arguments[0],e=t.iterator();e.hasNext();){var n=e.next();this.extract(n)}else if(arguments[0]instanceof Geometry){var i=arguments[0];null===this.geomFact&&(this.geomFact=i.getFactory()),GeometryExtracter.extract(i,Polygon,this.polygons),GeometryExtracter.extract(i,LineString,this.lines),GeometryExtracter.extract(i,Point,this.points)}},union:function t(){if(null===this.geomFact)return null;var e=null;if(this.points.size()>0){var n=this.geomFact.buildGeometry(this.points);e=this.unionNoOpt(n)}var i=null;if(this.lines.size()>0){var r=this.geomFact.buildGeometry(this.lines);i=this.unionNoOpt(r)}var o=null;this.polygons.size()>0&&(o=CascadedPolygonUnion.union(this.polygons));var s=this.unionWithNull(i,o),t=null;return t=null===e?s:null===s?e:PointGeometryUnion.union(e,s),null===t?this.geomFact.createGeometryCollection(null):t},interfaces_:function(){return[]},getClass:function(){return UnaryUnionOp}}),UnaryUnionOp.union=function(){if(1===arguments.length){if(hasInterface(arguments[0],Collection)){var t=arguments[0],e=new UnaryUnionOp(t);return e.union()}if(arguments[0]instanceof Geometry){var n=arguments[0],e=new UnaryUnionOp(n);return e.union()}}else if(2===arguments.length){var t=arguments[0],i=arguments[1],e=new UnaryUnionOp(t,i);return e.union()}},extend(ConnectedInteriorTester.prototype,{visitInteriorRing:function(t,e){var n=t.getCoordinates(),i=n[0],r=ConnectedInteriorTester.findDifferentPoint(n,i),o=e.findEdgeInSameDirection(i,r),s=e.findEdgeEnd(o),a=null;s.getLabel().getLocation(0,Position.RIGHT)===Location.INTERIOR?a=s:s.getSym().getLabel().getLocation(0,Position.RIGHT)===Location.INTERIOR&&(a=s.getSym()),Assert.isTrue(null!==a,"unable to find dirEdge with Interior on RHS"),this.visitLinkedDirectedEdges(a)},visitShellInteriors:function(t,e){if(t instanceof Polygon){var n=t;this.visitInteriorRing(n.getExteriorRing(),e)}if(t instanceof MultiPolygon)for(var i=t,r=0;r<i.getNumGeometries();r++){var n=i.getGeometryN(r);this.visitInteriorRing(n.getExteriorRing(),e)}},getCoordinate:function(){return this.disconnectedRingcoord},setInteriorEdgesInResult:function(t){for(var e=t.getEdgeEnds().iterator();e.hasNext();){var n=e.next();n.getLabel().getLocation(0,Position.RIGHT)===Location.INTERIOR&&n.setInResult(!0)}},visitLinkedDirectedEdges:function(t){var e=t,n=t;do Assert.isTrue(null!==n,"found null Directed Edge"),n.setVisited(!0),n=n.getNext();while(n!==e)},buildEdgeRings:function(t){for(var e=new ArrayList,n=t.iterator();n.hasNext();){var i=n.next();if(i.isInResult()&&null===i.getEdgeRing()){var r=new MaximalEdgeRing(i,this.geometryFactory);r.linkDirectedEdgesForMinimalEdgeRings();var o=r.buildMinimalRings();e.addAll(o)}}return e},hasUnvisitedShellEdge:function(t){for(var e=0;e<t.size();e++){var n=t.get(e);if(!n.isHole()){var i=n.getEdges(),r=i.get(0);if(r.getLabel().getLocation(0,Position.RIGHT)===Location.INTERIOR)for(var o=0;o<i.size();o++)if(r=i.get(o),!r.isVisited())return this.disconnectedRingcoord=r.getCoordinate(),!0}}return!1},isInteriorsConnected:function(){var t=new ArrayList;this.geomGraph.computeSplitEdges(t);var e=new PlanarGraph(new OverlayNodeFactory);e.addEdges(t),this.setInteriorEdgesInResult(e),e.linkResultDirectedEdges();var n=this.buildEdgeRings(e.getEdgeEnds());return this.visitShellInteriors(this.geomGraph.getGeometry(),e),!this.hasUnvisitedShellEdge(n)},interfaces_:function(){return[]},getClass:function(){return ConnectedInteriorTester}}),ConnectedInteriorTester.findDifferentPoint=function(t,e){for(var n=0;n<t.length;n++)if(!t[n].equals(e))return t[n];return null},extend(NodeBase$1.prototype,{hasChildren:function(){for(var t=0;2>t;t++)if(null!==this.subnode[t])return!0;return!1},isPrunable:function(){return!(this.hasChildren()||this.hasItems())},addAllItems:function(t){t.addAll(this.items);for(var e=0;2>e;e++)null!==this.subnode[e]&&this.subnode[e].addAllItems(t);return t},size:function(){for(var t=0,e=0;2>e;e++)null!==this.subnode[e]&&(t+=this.subnode[e].size());return t+this.items.size()},addAllItemsFromOverlapping:function(t,e){return null===t||this.isSearchMatch(t)?(e.addAll(this.items),null!==this.subnode[0]&&this.subnode[0].addAllItemsFromOverlapping(t,e),void(null!==this.subnode[1]&&this.subnode[1].addAllItemsFromOverlapping(t,e))):null},hasItems:function(){return!this.items.isEmpty()},remove:function(t,e){if(!this.isSearchMatch(t))return!1;for(var n=!1,i=0;2>i;i++)if(null!==this.subnode[i]&&(n=this.subnode[i].remove(t,e))){this.subnode[i].isPrunable()&&(this.subnode[i]=null);break}return n?n:n=this.items.remove(e)},getItems:function(){return this.items},depth:function(){for(var t=0,e=0;2>e;e++)if(null!==this.subnode[e]){var n=this.subnode[e].depth();n>t&&(t=n)}return t+1},nodeSize:function(){for(var t=0,e=0;2>e;e++)null!==this.subnode[e]&&(t+=this.subnode[e].nodeSize());return t+1},add:function(t){this.items.add(t)},interfaces_:function(){return[]},getClass:function(){return NodeBase$1}}),NodeBase$1.getSubnodeIndex=function(t,e){var n=-1;return t.min>=e&&(n=1),t.max<=e&&(n=0),n},extend(Interval.prototype,{expandToInclude:function(t){t.max>this.max&&(this.max=t.max),t.min<this.min&&(this.min=t.min)},getWidth:function(){return this.max-this.min},overlaps:function(){if(1===arguments.length){var t=arguments[0];return this.overlaps(t.min,t.max)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return!(this.min>n||this.max<e)}},getMin:function(){return this.min},toString:function(){return"["+this.min+", "+this.max+"]"},contains:function(){if(1===arguments.length){if(arguments[0]instanceof Interval){var t=arguments[0];return this.contains(t.min,t.max)}if("number"==typeof arguments[0]){var e=arguments[0];return e>=this.min&&e<=this.max}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return n>=this.min&&i<=this.max}},init:function(t,e){this.min=t,this.max=e,t>e&&(this.min=e,this.max=t)},getMax:function(){return this.max},interfaces_:function(){return[]},getClass:function(){return Interval}}),extend(Key$1.prototype,{getInterval:function(){return this.interval},getLevel:function(){return this.level},computeKey:function(t){for(this.level=Key$1.computeLevel(t),this.interval=new Interval,this.computeInterval(this.level,t);!this.interval.contains(t);)this.level+=1,this.computeInterval(this.level,t)},computeInterval:function(t,e){var n=DoubleBits.powerOf2(t);this.pt=Math.floor(e.getMin()/n)*n,this.interval.init(this.pt,this.pt+n)},getPoint:function(){return this.pt},interfaces_:function(){return[]},getClass:function(){return Key$1}}),Key$1.computeLevel=function(t){var e=t.getWidth(),n=DoubleBits.exponent(e)+1;return n},inherits(Node$3,NodeBase$1),extend(Node$3.prototype,{getInterval:function(){return this.interval},find:function(t){var e=NodeBase$1.getSubnodeIndex(t,this.centre);if(-1===e)return this;if(null!==this.subnode[e]){var n=this.subnode[e];return n.find(t)}return this},insert:function(t){Assert.isTrue(null===this.interval||this.interval.contains(t.interval));var e=NodeBase$1.getSubnodeIndex(t.interval,this.centre);if(t.level===this.level-1)this.subnode[e]=t;else{var n=this.createSubnode(e);n.insert(t),this.subnode[e]=n}},isSearchMatch:function(t){return t.overlaps(this.interval)},getSubnode:function(t){return null===this.subnode[t]&&(this.subnode[t]=this.createSubnode(t)),this.subnode[t]},getNode:function(t){var e=NodeBase$1.getSubnodeIndex(t,this.centre);if(-1!==e){var n=this.getSubnode(e);return n.getNode(t)}return this},createSubnode:function(t){var e=0,n=0;switch(t){case 0:e=this.interval.getMin(),n=this.centre;break;case 1:e=this.centre,n=this.interval.getMax()}var i=new Interval(e,n),r=new Node$3(i,this.level-1);return r},interfaces_:function(){return[]},getClass:function(){return Node$3}}),Node$3.createNode=function(t){var e=new Key$1(t),n=new Node$3(e.getInterval(),e.getLevel());return n},Node$3.createExpanded=function(t,e){var n=new Interval(e);null!==t&&n.expandToInclude(t.interval);var i=Node$3.createNode(n);return null!==t&&i.insert(t),i},inherits(Root$1,NodeBase$1),extend(Root$1.prototype,{insert:function(t,e){var n=NodeBase$1.getSubnodeIndex(t,Root$1.origin);if(-1===n)return this.add(e),null;var i=this.subnode[n];if(null===i||!i.getInterval().contains(t)){var r=Node$3.createExpanded(i,t);this.subnode[n]=r}this.insertContained(this.subnode[n],t,e)},isSearchMatch:function(t){return!0},insertContained:function(t,e,n){Assert.isTrue(t.getInterval().contains(e));var i=IntervalSize.isZeroWidth(e.getMin(),e.getMax()),r=null;r=i?t.find(e):t.getNode(e),r.add(n)},interfaces_:function(){return[]},getClass:function(){return Root$1}}),Root$1.origin=0,extend(Bintree.prototype,{size:function(){return null!==this.root?this.root.size():0},insert:function(t,e){this.collectStats(t);var n=Bintree.ensureExtent(t,this.minExtent);this.root.insert(n,e)},query:function(){if(1===arguments.length){if("number"==typeof arguments[0]){var t=arguments[0];return this.query(new Interval(t,t))}if(arguments[0]instanceof Interval){var e=arguments[0],n=new ArrayList;return this.query(e,n),n}}else if(2===arguments.length){var e=arguments[0],i=arguments[1];this.root.addAllItemsFromOverlapping(e,i)}},iterator:function(){var t=new ArrayList;return this.root.addAllItems(t),t.iterator()},remove:function(t,e){var n=Bintree.ensureExtent(t,this.minExtent);return this.root.remove(n,e)},collectStats:function(t){var e=t.getWidth();e<this.minExtent&&e>0&&(this.minExtent=e)},depth:function(){return null!==this.root?this.root.depth():0},nodeSize:function(){return null!==this.root?this.root.nodeSize():0},interfaces_:function(){return[]},getClass:function(){return Bintree}}),Bintree.ensureExtent=function(t,e){var n=t.getMin(),i=t.getMax();return n!==i?t:(n===i&&(n-=e/2,i=n+e/2),new Interval(n,i))},extend(PointInRing.prototype,{isInside:function(t){},interfaces_:function(){return[]},getClass:function(){return PointInRing}}),extend(MCPointInRing.prototype,{testLineSegment:function(t,e){var n=null,i=null,r=null,o=null,s=null,a=e.p0,l=e.p1;i=a.x-t.x,r=a.y-t.y,o=l.x-t.x,s=l.y-t.y,(r>0&&0>=s||s>0&&0>=r)&&(n=RobustDeterminant.signOfDet2x2(i,r,o,s)/(s-r),n>0&&this.crossings++)},buildIndex:function(){this.tree=new Bintree;for(var t=CoordinateArrays.removeRepeatedPoints(this.ring.getCoordinates()),e=MonotoneChainBuilder.getChains(t),n=0;n<e.size();n++){var i=e.get(n),r=i.getEnvelope();this.interval.min=r.getMinY(),this.interval.max=r.getMaxY(),this.tree.insert(this.interval,i)}},testMonotoneChain:function(t,e,n){n.select(t,e)},isInside:function(t){this.crossings=0;var e=new Envelope(Double.NEGATIVE_INFINITY,Double.POSITIVE_INFINITY,t.y,t.y);this.interval.min=t.y,this.interval.max=t.y;for(var n=this.tree.query(this.interval),i=new MCSelecter(this,t),r=n.iterator();r.hasNext();){var o=r.next();this.testMonotoneChain(e,i,o)}return this.crossings%2===1},interfaces_:function(){return[PointInRing]},getClass:function(){return MCPointInRing}}),inherits(MCSelecter,MonotoneChainSelectAction),extend(MCSelecter.prototype,{select:function(){if(1!==arguments.length)return MonotoneChainSelectAction.prototype.select.apply(this,arguments);var t=arguments[0];this.mcp.testLineSegment(this.p,t)},interfaces_:function(){return[]},getClass:function(){return MCSelecter}}),MCPointInRing.MCSelecter=MCSelecter,extend(RelateNodeGraph.prototype,{insertEdgeEnds:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.nodes.add(n)}},getNodeIterator:function(){return this.nodes.iterator()},copyNodesAndLabels:function(t,e){for(var n=t.getNodeIterator();n.hasNext();){var i=n.next(),r=this.nodes.addNode(i.getCoordinate());r.setLabel(e,i.getLabel().getLocation(e))}},build:function(t){this.computeIntersectionNodes(t,0),this.copyNodesAndLabels(t,0);var e=new EdgeEndBuilder,n=e.computeEdgeEnds(t.getEdgeIterator());this.insertEdgeEnds(n)},computeIntersectionNodes:function(t,e){for(var n=t.getEdgeIterator();n.hasNext();)for(var i=n.next(),r=i.getLabel().getLocation(e),o=i.getEdgeIntersectionList().iterator();o.hasNext();){var s=o.next(),a=this.nodes.addNode(s.coord);r===Location.BOUNDARY?a.setLabelBoundary(e):a.getLabel().isNull(e)&&a.setLabel(e,Location.INTERIOR)}},interfaces_:function(){return[]},getClass:function(){return RelateNodeGraph}}),extend(ConsistentAreaTester.prototype,{isNodeEdgeAreaLabelsConsistent:function(){for(var t=this.nodeGraph.getNodeIterator();t.hasNext();){var e=t.next();if(!e.getEdges().isAreaLabelsConsistent(this.geomGraph))return this.invalidPoint=e.getCoordinate().copy(),!1}return!0},getInvalidPoint:function(){return this.invalidPoint},hasDuplicateRings:function(){for(var t=this.nodeGraph.getNodeIterator();t.hasNext();)for(var e=t.next(),n=e.getEdges().iterator();n.hasNext();){var i=n.next();if(i.getEdgeEnds().size()>1)return this.invalidPoint=i.getEdge().getCoordinate(0),!0}return!1},isNodeConsistentArea:function(){var t=this.geomGraph.computeSelfNodes(this.li,!0,!0);return t.hasProperIntersection()?(this.invalidPoint=t.getProperIntersectionPoint(),!1):(this.nodeGraph.build(this.geomGraph),this.isNodeEdgeAreaLabelsConsistent())},interfaces_:function(){return[]},getClass:function(){return ConsistentAreaTester}}),extend(IndexedNestedRingTester.prototype,{buildIndex:function(){this.index=new STRtree;for(var t=0;t<this.rings.size();t++){var e=this.rings.get(t),n=e.getEnvelopeInternal();this.index.insert(n,e)}},getNestedPoint:function(){return this.nestedPt},isNonNested:function(){this.buildIndex();for(var t=0;t<this.rings.size();t++)for(var e=this.rings.get(t),n=e.getCoordinates(),i=this.index.query(e.getEnvelopeInternal()),r=0;r<i.size();r++){var o=i.get(r),s=o.getCoordinates();if(e!==o&&e.getEnvelopeInternal().intersects(o.getEnvelopeInternal())){var a=IsValidOp.findPtNotNode(n,o,this.graph);if(null!==a){var l=CGAlgorithms.isPointInRing(a,s);if(l)return this.nestedPt=a,!1}}}return!0},add:function(t){this.rings.add(t),this.totalEnv.expandToInclude(t.getEnvelopeInternal())},interfaces_:function(){return[]},getClass:function(){return IndexedNestedRingTester}}),extend(TopologyValidationError.prototype,{getErrorType:function(){return this.errorType},getMessage:function(){return TopologyValidationError.errMsg[this.errorType]},getCoordinate:function(){return this.pt},toString:function(){var t="";return null!==this.pt&&(t=" at or near point "+this.pt),this.getMessage()+t},interfaces_:function(){return[]},getClass:function(){return TopologyValidationError}}),TopologyValidationError.ERROR=0,TopologyValidationError.REPEATED_POINT=1,TopologyValidationError.HOLE_OUTSIDE_SHELL=2,TopologyValidationError.NESTED_HOLES=3,TopologyValidationError.DISCONNECTED_INTERIOR=4,TopologyValidationError.SELF_INTERSECTION=5,TopologyValidationError.RING_SELF_INTERSECTION=6,TopologyValidationError.NESTED_SHELLS=7,TopologyValidationError.DUPLICATE_RINGS=8,TopologyValidationError.TOO_FEW_POINTS=9,TopologyValidationError.INVALID_COORDINATE=10,TopologyValidationError.RING_NOT_CLOSED=11,TopologyValidationError.errMsg=["Topology Validation Error","Repeated Point","Hole lies outside shell","Holes are nested","Interior is disconnected","Self-intersection","Ring Self-intersection","Nested shells","Duplicate Rings","Too few distinct points in geometry component","Invalid Coordinate","Ring is not closed"],extend(IsValidOp.prototype,{checkInvalidCoordinates:function(){if(arguments[0]instanceof Array){for(var t=arguments[0],e=0;e<t.length;e++)if(!IsValidOp.isValid(t[e]))return this.validErr=new TopologyValidationError(TopologyValidationError.INVALID_COORDINATE,t[e]),null}else if(arguments[0]instanceof Polygon){var n=arguments[0];if(this.checkInvalidCoordinates(n.getExteriorRing().getCoordinates()),null!==this.validErr)return null;for(var e=0;e<n.getNumInteriorRing();e++)if(this.checkInvalidCoordinates(n.getInteriorRingN(e).getCoordinates()),null!==this.validErr)return null}},checkHolesNotNested:function(t,e){for(var n=new IndexedNestedRingTester(e),i=0;i<t.getNumInteriorRing();i++){var r=t.getInteriorRingN(i);n.add(r)}var o=n.isNonNested();o||(this.validErr=new TopologyValidationError(TopologyValidationError.NESTED_HOLES,n.getNestedPoint()))},checkConsistentArea:function(t){var e=new ConsistentAreaTester(t),n=e.isNodeConsistentArea();return n?void(e.hasDuplicateRings()&&(this.validErr=new TopologyValidationError(TopologyValidationError.DUPLICATE_RINGS,e.getInvalidPoint()))):(this.validErr=new TopologyValidationError(TopologyValidationError.SELF_INTERSECTION,e.getInvalidPoint()),null)},isValid:function(){return this.checkValid(this.parentGeometry),null===this.validErr},checkShellInsideHole:function(t,e,n){var i=t.getCoordinates(),r=e.getCoordinates(),o=IsValidOp.findPtNotNode(i,e,n);if(null!==o){var s=CGAlgorithms.isPointInRing(o,r);if(!s)return o}var a=IsValidOp.findPtNotNode(r,t,n);if(null!==a){var l=CGAlgorithms.isPointInRing(a,i);return l?a:null}return Assert.shouldNeverReachHere("points in shell and hole appear to be equal"),null},checkNoSelfIntersectingRings:function(t){for(var e=t.getEdgeIterator();e.hasNext();){var n=e.next();if(this.checkNoSelfIntersectingRing(n.getEdgeIntersectionList()),null!==this.validErr)return null}},checkConnectedInteriors:function(t){var e=new ConnectedInteriorTester(t);e.isInteriorsConnected()||(this.validErr=new TopologyValidationError(TopologyValidationError.DISCONNECTED_INTERIOR,e.getCoordinate()))},checkNoSelfIntersectingRing:function(t){for(var e=new TreeSet,n=!0,i=t.iterator();i.hasNext();){var r=i.next();if(n)n=!1;else{if(e.contains(r.coord))return this.validErr=new TopologyValidationError(TopologyValidationError.RING_SELF_INTERSECTION,r.coord),null;e.add(r.coord)}}},checkHolesInShell:function(t,e){for(var n=t.getExteriorRing(),i=new MCPointInRing(n),r=0;r<t.getNumInteriorRing();r++){var o=t.getInteriorRingN(r),s=IsValidOp.findPtNotNode(o.getCoordinates(),n,e);if(null===s)return null;var a=!i.isInside(s);if(a)return this.validErr=new TopologyValidationError(TopologyValidationError.HOLE_OUTSIDE_SHELL,s),null}},checkTooFewPoints:function(t){return t.hasTooFewPoints()?(this.validErr=new TopologyValidationError(TopologyValidationError.TOO_FEW_POINTS,t.getInvalidPoint()),null):void 0},getValidationError:function(){return this.checkValid(this.parentGeometry),this.validErr},checkValid:function(){if(arguments[0]instanceof Point){var t=arguments[0];this.checkInvalidCoordinates(t.getCoordinates())}else if(arguments[0]instanceof MultiPoint){var e=arguments[0];this.checkInvalidCoordinates(e.getCoordinates())}else if(arguments[0]instanceof LinearRing){var n=arguments[0];if(this.checkInvalidCoordinates(n.getCoordinates()),null!==this.validErr)return null;if(this.checkClosedRing(n),null!==this.validErr)return null;var i=new GeometryGraph(0,n);if(this.checkTooFewPoints(i),null!==this.validErr)return null;var r=new RobustLineIntersector;i.computeSelfNodes(r,!0,!0),this.checkNoSelfIntersectingRings(i)}else if(arguments[0]instanceof LineString){var o=arguments[0];if(this.checkInvalidCoordinates(o.getCoordinates()),null!==this.validErr)return null;var i=new GeometryGraph(0,o);this.checkTooFewPoints(i)}else if(arguments[0]instanceof Polygon){var s=arguments[0];if(this.checkInvalidCoordinates(s),null!==this.validErr)return null;if(this.checkClosedRings(s),null!==this.validErr)return null;var i=new GeometryGraph(0,s);if(this.checkTooFewPoints(i),null!==this.validErr)return null;if(this.checkConsistentArea(i),null!==this.validErr)return null;if(!this.isSelfTouchingRingFormingHoleValid&&(this.checkNoSelfIntersectingRings(i),null!==this.validErr))return null;if(this.checkHolesInShell(s,i),null!==this.validErr)return null;if(this.checkHolesNotNested(s,i),null!==this.validErr)return null;this.checkConnectedInteriors(i)}else if(arguments[0]instanceof MultiPolygon){for(var a=arguments[0],l=0;l<a.getNumGeometries();l++){var u=a.getGeometryN(l);if(this.checkInvalidCoordinates(u),null!==this.validErr)return null;if(this.checkClosedRings(u),null!==this.validErr)return null}var i=new GeometryGraph(0,a);if(this.checkTooFewPoints(i),null!==this.validErr)return null;if(this.checkConsistentArea(i),null!==this.validErr)return null;if(!this.isSelfTouchingRingFormingHoleValid&&(this.checkNoSelfIntersectingRings(i),null!==this.validErr))return null;for(var l=0;l<a.getNumGeometries();l++){var u=a.getGeometryN(l);if(this.checkHolesInShell(u,i),null!==this.validErr)return null}for(var l=0;l<a.getNumGeometries();l++){var u=a.getGeometryN(l);if(this.checkHolesNotNested(u,i),null!==this.validErr)return null}if(this.checkShellsNotNested(a,i),null!==this.validErr)return null;this.checkConnectedInteriors(i)}else if(arguments[0]instanceof GeometryCollection)for(var c=arguments[0],l=0;l<c.getNumGeometries();l++){var h=c.getGeometryN(l);if(this.checkValid(h),null!==this.validErr)return null}else if(arguments[0]instanceof Geometry){var d=arguments[0];if(this.validErr=null,d.isEmpty())return null;if(d instanceof Point)this.checkValid(d);else if(d instanceof MultiPoint)this.checkValid(d);else if(d instanceof LinearRing)this.checkValid(d);else if(d instanceof LineString)this.checkValid(d);else if(d instanceof Polygon)this.checkValid(d);else if(d instanceof MultiPolygon)this.checkValid(d);else{if(!(d instanceof GeometryCollection))throw new UnsupportedOperationException(d.getClass().getName());this.checkValid(d)}}},setSelfTouchingRingFormingHoleValid:function(t){this.isSelfTouchingRingFormingHoleValid=t},checkShellNotNested:function(t,e,n){var i=t.getCoordinates(),r=e.getExteriorRing(),o=r.getCoordinates(),s=IsValidOp.findPtNotNode(i,r,n);if(null===s)return null;var a=CGAlgorithms.isPointInRing(s,o);if(!a)return null;if(e.getNumInteriorRing()<=0)return this.validErr=new TopologyValidationError(TopologyValidationError.NESTED_SHELLS,s),null;for(var l=null,u=0;u<e.getNumInteriorRing();u++){var c=e.getInteriorRingN(u);if(l=this.checkShellInsideHole(t,c,n),null===l)return null}this.validErr=new TopologyValidationError(TopologyValidationError.NESTED_SHELLS,l)},checkClosedRings:function(t){if(this.checkClosedRing(t.getExteriorRing()),null!==this.validErr)return null;for(var e=0;e<t.getNumInteriorRing();e++)if(this.checkClosedRing(t.getInteriorRingN(e)),null!==this.validErr)return null},checkClosedRing:function(t){if(!t.isClosed()){var e=null;t.getNumPoints()>=1&&(e=t.getCoordinateN(0)),this.validErr=new TopologyValidationError(TopologyValidationError.RING_NOT_CLOSED,e)}},checkShellsNotNested:function(t,e){for(var n=0;n<t.getNumGeometries();n++)for(var i=t.getGeometryN(n),r=i.getExteriorRing(),o=0;o<t.getNumGeometries();o++)if(n!==o){var s=t.getGeometryN(o);if(this.checkShellNotNested(r,s,e),null!==this.validErr)return null}},interfaces_:function(){return[]},getClass:function(){return IsValidOp}}),IsValidOp.findPtNotNode=function(t,e,n){for(var i=n.findEdge(e),r=i.getEdgeIntersectionList(),o=0;o<t.length;o++){var s=t[o];if(!r.isIntersection(s))return s}return null},IsValidOp.isValid=function(){if(arguments[0]instanceof Geometry){var t=arguments[0],e=new IsValidOp(t);return e.isValid()}if(arguments[0]instanceof Coordinate){var n=arguments[0];return Double.isNaN(n.x)?!1:Double.isInfinite(n.x)?!1:Double.isNaN(n.y)?!1:!Double.isInfinite(n.y)}},inherits(PrecisionReducerCoordinateOperation,GeometryEditor.CoordinateOperation),extend(PrecisionReducerCoordinateOperation.prototype,{editCoordinates:function(t,e){if(0===t.length)return null;for(var n=new Array(t.length).fill(null),i=0;i<t.length;i++){var r=new Coordinate(t[i]);this.targetPM.makePrecise(r),n[i]=r}var o=new CoordinateList(n,!1),s=o.toCoordinateArray(),a=0;e instanceof LineString&&(a=2),e instanceof LinearRing&&(a=4);var l=n;return this.removeCollapsed&&(l=null),s.length<a?l:s},interfaces_:function(){return[]},getClass:function(){return PrecisionReducerCoordinateOperation}}),extend(GeometryPrecisionReducer.prototype,{fixPolygonalTopology:function(t){var e=t;this.changePrecisionModel||(e=this.changePM(t,this.targetPM));var n=e.buffer(0),i=n;return this.changePrecisionModel||(i=t.getFactory().createGeometry(n)),i},reducePointwise:function(t){var e=null;if(this.changePrecisionModel){var n=this.createFactory(t.getFactory(),this.targetPM);e=new GeometryEditor(n)}else e=new GeometryEditor;var i=this.removeCollapsed;t.getDimension()>=2&&(i=!0);var r=e.edit(t,new PrecisionReducerCoordinateOperation(this.targetPM,i));return r},changePM:function(t,e){var n=this.createEditor(t.getFactory(),e);return n.edit(t,new GeometryEditor.NoOpGeometryOperation)},setRemoveCollapsedComponents:function(t){this.removeCollapsed=t},createFactory:function(t,e){var n=new GeometryFactory(e,t.getSRID(),t.getCoordinateSequenceFactory());return n},setChangePrecisionModel:function(t){this.changePrecisionModel=t},reduce:function(t){var e=this.reducePointwise(t);return this.isPointwise?e:hasInterface(e,Polygonal)?e.isValid()?e:this.fixPolygonalTopology(e):e;
},setPointwise:function(t){this.isPointwise=t},createEditor:function(t,e){if(t.getPrecisionModel()===e)return new GeometryEditor;var n=this.createFactory(t,e),i=new GeometryEditor(n);return i},interfaces_:function(){return[]},getClass:function(){return GeometryPrecisionReducer}}),GeometryPrecisionReducer.reduce=function(t,e){var n=new GeometryPrecisionReducer(e);return n.reduce(t)},GeometryPrecisionReducer.reducePointwise=function(t,e){var n=new GeometryPrecisionReducer(e);return n.setPointwise(!0),n.reduce(t)},extend(DouglasPeuckerLineSimplifier.prototype,{simplifySection:function(t,e){if(t+1===e)return null;this.seg.p0=this.pts[t],this.seg.p1=this.pts[e];for(var n=-1,i=t,r=t+1;e>r;r++){var o=this.seg.distance(this.pts[r]);o>n&&(n=o,i=r)}if(n<=this.distanceTolerance)for(var r=t+1;e>r;r++)this.usePt[r]=!1;else this.simplifySection(t,i),this.simplifySection(i,e)},setDistanceTolerance:function(t){this.distanceTolerance=t},simplify:function(){this.usePt=new Array(this.pts.length).fill(null);for(var t=0;t<this.pts.length;t++)this.usePt[t]=!0;this.simplifySection(0,this.pts.length-1);for(var e=new CoordinateList,t=0;t<this.pts.length;t++)this.usePt[t]&&e.add(new Coordinate(this.pts[t]));return e.toCoordinateArray()},interfaces_:function(){return[]},getClass:function(){return DouglasPeuckerLineSimplifier}}),DouglasPeuckerLineSimplifier.simplify=function(t,e){var n=new DouglasPeuckerLineSimplifier(t);return n.setDistanceTolerance(e),n.simplify()},extend(DouglasPeuckerSimplifier.prototype,{setEnsureValid:function(t){this.isEnsureValidTopology=t},getResultGeometry:function(){return this.inputGeom.isEmpty()?this.inputGeom.copy():new DPTransformer(this.isEnsureValidTopology,this.distanceTolerance).transform(this.inputGeom)},setDistanceTolerance:function(t){if(0>t)throw new IllegalArgumentException("Tolerance must be non-negative");this.distanceTolerance=t},interfaces_:function(){return[]},getClass:function(){return DouglasPeuckerSimplifier}}),DouglasPeuckerSimplifier.simplify=function(t,e){var n=new DouglasPeuckerSimplifier(t);return n.setDistanceTolerance(e),n.getResultGeometry()},inherits(DPTransformer,GeometryTransformer),extend(DPTransformer.prototype,{transformPolygon:function(t,e){if(t.isEmpty())return null;var n=GeometryTransformer.prototype.transformPolygon.call(this,t,e);return e instanceof MultiPolygon?n:this.createValidArea(n)},createValidArea:function(t){return this.isEnsureValidTopology?t.buffer(0):t},transformCoordinates:function(t,e){var n=t.toCoordinateArray(),i=null;return i=0===n.length?new Array(0).fill(null):DouglasPeuckerLineSimplifier.simplify(n,this.distanceTolerance),this.factory.getCoordinateSequenceFactory().create(i)},transformMultiPolygon:function(t,e){var n=GeometryTransformer.prototype.transformMultiPolygon.call(this,t,e);return this.createValidArea(n)},transformLinearRing:function(t,e){var n=e instanceof Polygon,i=GeometryTransformer.prototype.transformLinearRing.call(this,t,e);return!n||i instanceof LinearRing?i:null},interfaces_:function(){return[]},getClass:function(){return DPTransformer}}),DouglasPeuckerSimplifier.DPTransformer=DPTransformer,inherits(TaggedLineSegment,LineSegment),extend(TaggedLineSegment.prototype,{getIndex:function(){return this.index},getParent:function(){return this.parent},interfaces_:function(){return[]},getClass:function(){return TaggedLineSegment}}),extend(TaggedLineString.prototype,{addToResult:function(t){this.resultSegs.add(t)},asLineString:function(){return this.parentLine.getFactory().createLineString(TaggedLineString.extractCoordinates(this.resultSegs))},getResultSize:function(){var t=this.resultSegs.size();return 0===t?0:t+1},getParent:function(){return this.parentLine},getSegment:function(t){return this.segs[t]},getParentCoordinates:function(){return this.parentLine.getCoordinates()},getMinimumSize:function(){return this.minimumSize},asLinearRing:function(){return this.parentLine.getFactory().createLinearRing(TaggedLineString.extractCoordinates(this.resultSegs))},getSegments:function(){return this.segs},init:function(){var t=this.parentLine.getCoordinates();this.segs=new Array(t.length-1).fill(null);for(var e=0;e<t.length-1;e++){var n=new TaggedLineSegment(t[e],t[e+1],this.parentLine,e);this.segs[e]=n}},getResultCoordinates:function(){return TaggedLineString.extractCoordinates(this.resultSegs)},interfaces_:function(){return[]},getClass:function(){return TaggedLineString}}),TaggedLineString.extractCoordinates=function(t){for(var e=new Array(t.size()+1).fill(null),n=null,i=0;i<t.size();i++)n=t.get(i),e[i]=n.p0;return e[e.length-1]=n.p1,e},extend(LineSegmentIndex.prototype,{remove:function(t){this.index.remove(new Envelope(t.p0,t.p1),t)},add:function(){if(arguments[0]instanceof TaggedLineString)for(var t=arguments[0],e=t.getSegments(),n=0;n<e.length;n++){var i=e[n];this.add(i)}else if(arguments[0]instanceof LineSegment){var r=arguments[0];this.index.insert(new Envelope(r.p0,r.p1),r)}},query:function(t){var e=new Envelope(t.p0,t.p1),n=new LineSegmentVisitor(t);this.index.query(e,n);var i=n.getItems();return i},interfaces_:function(){return[]},getClass:function(){return LineSegmentIndex}}),extend(LineSegmentVisitor.prototype,{visitItem:function(t){var e=t;Envelope.intersects(e.p0,e.p1,this.querySeg.p0,this.querySeg.p1)&&this.items.add(t)},getItems:function(){return this.items},interfaces_:function(){return[ItemVisitor]},getClass:function(){return LineSegmentVisitor}}),extend(TaggedLineStringSimplifier.prototype,{flatten:function(t,e){var n=this.linePts[t],i=this.linePts[e],r=new LineSegment(n,i);return this.remove(this.line,t,e),this.outputIndex.add(r),r},hasBadIntersection:function(t,e,n){return this.hasBadOutputIntersection(n)?!0:!!this.hasBadInputIntersection(t,e,n)},setDistanceTolerance:function(t){this.distanceTolerance=t},simplifySection:function(t,e,n){n+=1;var i=new Array(2).fill(null);if(t+1===e){var r=this.line.getSegment(t);return this.line.addToResult(r),null}var o=!0;if(this.line.getResultSize()<this.line.getMinimumSize()){var s=n+1;s<this.line.getMinimumSize()&&(o=!1)}var a=new Array(1).fill(null),l=this.findFurthestPoint(this.linePts,t,e,a);a[0]>this.distanceTolerance&&(o=!1);var u=new LineSegment;if(u.p0=this.linePts[t],u.p1=this.linePts[e],i[0]=t,i[1]=e,this.hasBadIntersection(this.line,i,u)&&(o=!1),o){var r=this.flatten(t,e);return this.line.addToResult(r),null}this.simplifySection(t,l,n),this.simplifySection(l,e,n)},hasBadOutputIntersection:function(t){for(var e=this.outputIndex.query(t),n=e.iterator();n.hasNext();){var i=n.next();if(this.hasInteriorIntersection(i,t))return!0}return!1},findFurthestPoint:function(t,e,n,i){var r=new LineSegment;r.p0=t[e],r.p1=t[n];for(var o=-1,s=e,a=e+1;n>a;a++){var l=t[a],u=r.distance(l);u>o&&(o=u,s=a)}return i[0]=o,s},simplify:function(t){this.line=t,this.linePts=t.getParentCoordinates(),this.simplifySection(0,this.linePts.length-1,0)},remove:function(t,e,n){for(var i=e;n>i;i++){var r=t.getSegment(i);this.inputIndex.remove(r)}},hasInteriorIntersection:function(t,e){return this.li.computeIntersection(t.p0,t.p1,e.p0,e.p1),this.li.isInteriorIntersection()},hasBadInputIntersection:function(t,e,n){for(var i=this.inputIndex.query(n),r=i.iterator();r.hasNext();){var o=r.next();if(this.hasInteriorIntersection(o,n)){if(TaggedLineStringSimplifier.isInLineSection(t,e,o))continue;return!0}}return!1},interfaces_:function(){return[]},getClass:function(){return TaggedLineStringSimplifier}}),TaggedLineStringSimplifier.isInLineSection=function(t,e,n){if(n.getParent()!==t.getParent())return!1;var i=n.getIndex();return i>=e[0]&&i<e[1]},extend(TaggedLinesSimplifier.prototype,{setDistanceTolerance:function(t){this.distanceTolerance=t},simplify:function(t){for(var e=t.iterator();e.hasNext();)this.inputIndex.add(e.next());for(var e=t.iterator();e.hasNext();){var n=new TaggedLineStringSimplifier(this.inputIndex,this.outputIndex);n.setDistanceTolerance(this.distanceTolerance),n.simplify(e.next())}},interfaces_:function(){return[]},getClass:function(){return TaggedLinesSimplifier}}),extend(TopologyPreservingSimplifier.prototype,{getResultGeometry:function(){if(this.inputGeom.isEmpty())return this.inputGeom.copy();this.linestringMap=new HashMap,this.inputGeom.apply(new LineStringMapBuilderFilter(this)),this.lineSimplifier.simplify(this.linestringMap.values());var t=new LineStringTransformer(this.linestringMap).transform(this.inputGeom);return t},setDistanceTolerance:function(t){if(0>t)throw new IllegalArgumentException("Tolerance must be non-negative");this.lineSimplifier.setDistanceTolerance(t)},interfaces_:function(){return[]},getClass:function(){return TopologyPreservingSimplifier}}),TopologyPreservingSimplifier.simplify=function(t,e){var n=new TopologyPreservingSimplifier(t);return n.setDistanceTolerance(e),n.getResultGeometry()},inherits(LineStringTransformer,GeometryTransformer),extend(LineStringTransformer.prototype,{transformCoordinates:function(t,e){if(0===t.size())return null;if(e instanceof LineString){var n=this.linestringMap.get(e);return this.createCoordinateSequence(n.getResultCoordinates())}return GeometryTransformer.prototype.transformCoordinates.call(this,t,e)},interfaces_:function(){return[]},getClass:function(){return LineStringTransformer}}),extend(LineStringMapBuilderFilter.prototype,{filter:function(t){if(t instanceof LineString){var e=t;if(e.isEmpty())return null;var n=e.isClosed()?4:2,i=new TaggedLineString(e,n);this.tps.linestringMap.put(e,i)}},interfaces_:function(){return[GeometryComponentFilter$1]},getClass:function(){return LineStringMapBuilderFilter}}),TopologyPreservingSimplifier.LineStringTransformer=LineStringTransformer,TopologyPreservingSimplifier.LineStringMapBuilderFilter=LineStringMapBuilderFilter,extend(SplitSegment.prototype,{splitAt:function(){if(1===arguments.length){var t=arguments[0],e=this.minimumLen/this.segLen;if(t.distance(this.seg.p0)<this.minimumLen)return this.splitPt=this.seg.pointAlong(e),null;if(t.distance(this.seg.p1)<this.minimumLen)return this.splitPt=SplitSegment.pointAlongReverse(this.seg,e),null;this.splitPt=t}else if(2===arguments.length){var n=arguments[0],i=arguments[1],r=this.getConstrainedLength(n),o=r/this.segLen;i.equals2D(this.seg.p0)?this.splitPt=this.seg.pointAlong(o):this.splitPt=SplitSegment.pointAlongReverse(this.seg,o)}},setMinimumLength:function(t){this.minimumLen=t},getConstrainedLength:function(t){return t<this.minimumLen?this.minimumLen:t},getSplitPoint:function(){return this.splitPt},interfaces_:function(){return[]},getClass:function(){return SplitSegment}}),SplitSegment.pointAlongReverse=function(t,e){var n=new Coordinate;return n.x=t.p1.x-e*(t.p1.x-t.p0.x),n.y=t.p1.y-e*(t.p1.y-t.p0.y),n},extend(ConstraintSplitPointFinder.prototype,{findSplitPoint:function(t,e){},interfaces_:function(){return[]},getClass:function(){return ConstraintSplitPointFinder}}),extend(NonEncroachingSplitPointFinder.prototype,{findSplitPoint:function(t,e){var n=t.getLineSegment(),i=n.getLength(),r=i/2,o=new SplitSegment(n),s=NonEncroachingSplitPointFinder.projectedSplitPoint(t,e),a=2*s.distance(e)*.8,l=a;return l>r&&(l=r),o.setMinimumLength(l),o.splitAt(s),o.getSplitPoint()},interfaces_:function(){return[ConstraintSplitPointFinder]},getClass:function(){return NonEncroachingSplitPointFinder}}),NonEncroachingSplitPointFinder.projectedSplitPoint=function(t,e){var n=t.getLineSegment(),i=n.project(e);return i},extend(TrianglePredicate.prototype,{interfaces_:function(){return[]},getClass:function(){return TrianglePredicate}}),TrianglePredicate.triArea=function(t,e,n){return(e.x-t.x)*(n.y-t.y)-(e.y-t.y)*(n.x-t.x)},TrianglePredicate.isInCircleDDNormalized=function(t,e,n,i){var r=DD.valueOf(t.x).selfSubtract(i.x),o=DD.valueOf(t.y).selfSubtract(i.y),s=DD.valueOf(e.x).selfSubtract(i.x),a=DD.valueOf(e.y).selfSubtract(i.y),l=DD.valueOf(n.x).selfSubtract(i.x),u=DD.valueOf(n.y).selfSubtract(i.y),c=r.multiply(a).selfSubtract(s.multiply(o)),h=s.multiply(u).selfSubtract(l.multiply(a)),d=l.multiply(o).selfSubtract(r.multiply(u)),g=r.multiply(r).selfAdd(o.multiply(o)),f=s.multiply(s).selfAdd(a.multiply(a)),p=l.multiply(l).selfAdd(u.multiply(u)),m=g.selfMultiply(h).selfAdd(f.selfMultiply(d)).selfAdd(p.selfMultiply(c)),y=m.doubleValue()>0;return y},TrianglePredicate.checkRobustInCircle=function(t,e,n,i){var r=TrianglePredicate.isInCircleNonRobust(t,e,n,i),o=TrianglePredicate.isInCircleDDSlow(t,e,n,i),s=TrianglePredicate.isInCircleCC(t,e,n,i),a=Triangle.circumcentre(t,e,n);System.out.println("p radius diff a = "+Math.abs(i.distance(a)-t.distance(a))/t.distance(a)),r===o&&r===s||(System.out.println("inCircle robustness failure (double result = "+r+", DD result = "+o+", CC result = "+s+")"),System.out.println(WKTWriter.toLineString(new CoordinateArraySequence([t,e,n,i]))),System.out.println("Circumcentre = "+WKTWriter.toPoint(a)+" radius = "+t.distance(a)),System.out.println("p radius diff a = "+Math.abs(i.distance(a)/t.distance(a)-1)),System.out.println("p radius diff b = "+Math.abs(i.distance(a)/e.distance(a)-1)),System.out.println("p radius diff c = "+Math.abs(i.distance(a)/n.distance(a)-1)),System.out.println())},TrianglePredicate.isInCircleDDFast=function(t,e,n,i){var r=DD.sqr(t.x).selfAdd(DD.sqr(t.y)).selfMultiply(TrianglePredicate.triAreaDDFast(e,n,i)),o=DD.sqr(e.x).selfAdd(DD.sqr(e.y)).selfMultiply(TrianglePredicate.triAreaDDFast(t,n,i)),s=DD.sqr(n.x).selfAdd(DD.sqr(n.y)).selfMultiply(TrianglePredicate.triAreaDDFast(t,e,i)),a=DD.sqr(i.x).selfAdd(DD.sqr(i.y)).selfMultiply(TrianglePredicate.triAreaDDFast(t,e,n)),l=r.selfSubtract(o).selfAdd(s).selfSubtract(a),u=l.doubleValue()>0;return u},TrianglePredicate.isInCircleCC=function(t,e,n,i){var r=Triangle.circumcentre(t,e,n),o=t.distance(r),s=i.distance(r)-o;return 0>=s},TrianglePredicate.isInCircleNormalized=function(t,e,n,i){var r=t.x-i.x,o=t.y-i.y,s=e.x-i.x,a=e.y-i.y,l=n.x-i.x,u=n.y-i.y,c=r*a-s*o,h=s*u-l*a,d=l*o-r*u,g=r*r+o*o,f=s*s+a*a,p=l*l+u*u,m=g*h+f*d+p*c;return m>0},TrianglePredicate.isInCircleDDSlow=function(t,e,n,i){var r=DD.valueOf(i.x),o=DD.valueOf(i.y),s=DD.valueOf(t.x),a=DD.valueOf(t.y),l=DD.valueOf(e.x),u=DD.valueOf(e.y),c=DD.valueOf(n.x),h=DD.valueOf(n.y),d=s.multiply(s).add(a.multiply(a)).multiply(TrianglePredicate.triAreaDDSlow(l,u,c,h,r,o)),g=l.multiply(l).add(u.multiply(u)).multiply(TrianglePredicate.triAreaDDSlow(s,a,c,h,r,o)),f=c.multiply(c).add(h.multiply(h)).multiply(TrianglePredicate.triAreaDDSlow(s,a,l,u,r,o)),p=r.multiply(r).add(o.multiply(o)).multiply(TrianglePredicate.triAreaDDSlow(s,a,l,u,c,h)),m=d.subtract(g).add(f).subtract(p),y=m.doubleValue()>0;return y},TrianglePredicate.isInCircleNonRobust=function(t,e,n,i){var r=(t.x*t.x+t.y*t.y)*TrianglePredicate.triArea(e,n,i)-(e.x*e.x+e.y*e.y)*TrianglePredicate.triArea(t,n,i)+(n.x*n.x+n.y*n.y)*TrianglePredicate.triArea(t,e,i)-(i.x*i.x+i.y*i.y)*TrianglePredicate.triArea(t,e,n)>0;return r},TrianglePredicate.isInCircleRobust=function(t,e,n,i){return TrianglePredicate.isInCircleNormalized(t,e,n,i)},TrianglePredicate.triAreaDDSlow=function(t,e,n,i,r,o){return n.subtract(t).multiply(o.subtract(e)).subtract(i.subtract(e).multiply(r.subtract(t)))},TrianglePredicate.triAreaDDFast=function(t,e,n){var i=DD.valueOf(e.x).selfSubtract(t.x).selfMultiply(DD.valueOf(n.y).selfSubtract(t.y)),r=DD.valueOf(e.y).selfSubtract(t.y).selfMultiply(DD.valueOf(n.x).selfSubtract(t.x));return i.selfSubtract(r)},extend(Vertex.prototype,{circleCenter:function(t,e){var n=new Vertex(this.getX(),this.getY()),i=this.bisector(n,t),r=this.bisector(t,e),o=new HCoordinate(i,r),s=null;try{s=new Vertex(o.getX(),o.getY())}catch(i){if(!(i instanceof NotRepresentableException))throw i;System.err.println("a: "+n+"  b: "+t+"  c: "+e),System.err.println(i)}finally{}return s},dot:function(t){return this.p.x*t.getX()+this.p.y*t.getY()},magn:function(){return Math.sqrt(this.p.x*this.p.x+this.p.y*this.p.y)},getZ:function(){return this.p.z},bisector:function(t,e){var n=e.getX()-t.getX(),i=e.getY()-t.getY(),r=new HCoordinate(t.getX()+n/2,t.getY()+i/2,1),o=new HCoordinate(t.getX()-i+n/2,t.getY()+n+i/2,1);return new HCoordinate(r,o)},equals:function(){if(1===arguments.length){var t=arguments[0];return this.p.x===t.getX()&&this.p.y===t.getY()}if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.p.distance(t.getCoordinate())<e}},getCoordinate:function(){return this.p},isInCircle:function(t,e,n){return TrianglePredicate.isInCircleRobust(t.p,e.p,n.p,this.p)},interpolateZValue:function(t,e,n){var i=t.getX(),r=t.getY(),o=e.getX()-i,s=n.getX()-i,a=e.getY()-r,l=n.getY()-r,u=o*l-s*a,c=this.getX()-i,h=this.getY()-r,d=(l*c-s*h)/u,g=(-a*c+o*h)/u,f=t.getZ()+d*(e.getZ()-t.getZ())+g*(n.getZ()-t.getZ());return f},midPoint:function(t){var e=(this.p.x+t.getX())/2,n=(this.p.y+t.getY())/2,i=(this.p.z+t.getZ())/2;return new Vertex(e,n,i)},rightOf:function(t){return this.isCCW(t.dest(),t.orig())},isCCW:function(t,e){return(t.p.x-this.p.x)*(e.p.y-this.p.y)-(t.p.y-this.p.y)*(e.p.x-this.p.x)>0},getX:function(){return this.p.x},crossProduct:function(t){return this.p.x*t.getY()-this.p.y*t.getX()},setZ:function(t){this.p.z=t},times:function(t){return new Vertex(t*this.p.x,t*this.p.y)},cross:function(){return new Vertex(this.p.y,-this.p.x)},leftOf:function(t){return this.isCCW(t.orig(),t.dest())},toString:function(){return"POINT ("+this.p.x+" "+this.p.y+")"},sub:function(t){return new Vertex(this.p.x-t.getX(),this.p.y-t.getY())},getY:function(){return this.p.y},classify:function(t,e){var n=this,i=e.sub(t),r=n.sub(t),o=i.crossProduct(r);return o>0?Vertex.LEFT:0>o?Vertex.RIGHT:i.getX()*r.getX()<0||i.getY()*r.getY()<0?Vertex.BEHIND:i.magn()<r.magn()?Vertex.BEYOND:t.equals(n)?Vertex.ORIGIN:e.equals(n)?Vertex.DESTINATION:Vertex.BETWEEN},sum:function(t){return new Vertex(this.p.x+t.getX(),this.p.y+t.getY())},distance:function(t,e){return Math.sqrt(Math.pow(e.getX()-t.getX(),2)+Math.pow(e.getY()-t.getY(),2))},circumRadiusRatio:function(t,e){var n=this.circleCenter(t,e),i=this.distance(n,t),r=this.distance(this,t),o=this.distance(t,e);return r>o&&(r=o),o=this.distance(e,this),r>o&&(r=o),i/r},interfaces_:function(){return[]},getClass:function(){return Vertex}}),Vertex.interpolateZ=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=e.distance(n),r=t.distance(e),o=n.z-e.z,s=e.z+o*(r/i);return s}if(4===arguments.length){var t=arguments[0],a=arguments[1],l=arguments[2],u=arguments[3],c=a.x,h=a.y,d=l.x-c,g=u.x-c,f=l.y-h,p=u.y-h,m=d*p-g*f,y=t.x-c,v=t.y-h,x=(p*y-g*v)/m,C=(-f*y+d*v)/m,E=a.z+x*(l.z-a.z)+C*(u.z-a.z);return E}},Vertex.LEFT=0,Vertex.RIGHT=1,Vertex.BEYOND=2,Vertex.BEHIND=3,Vertex.BETWEEN=4,Vertex.ORIGIN=5,Vertex.DESTINATION=6,inherits(ConstraintVertex,Vertex),extend(ConstraintVertex.prototype,{getConstraint:function(){return this.constraint},setOnConstraint:function(t){this._isOnConstraint=t},merge:function(t){t._isOnConstraint&&(this._isOnConstraint=!0,this.constraint=t.constraint)},isOnConstraint:function(){return this._isOnConstraint},setConstraint:function(t){this._isOnConstraint=!0,this.constraint=t},interfaces_:function(){return[]},getClass:function(){return ConstraintVertex}}),extend(QuadEdge.prototype,{equalsNonOriented:function(t){return this.equalsOriented(t)?!0:!!this.equalsOriented(t.sym())},toLineSegment:function(){return new LineSegment(this.vertex.getCoordinate(),this.dest().getCoordinate())},dest:function(){return this.sym().orig()},oNext:function(){return this.next},equalsOriented:function(t){return!(!this.orig().getCoordinate().equals2D(t.orig().getCoordinate())||!this.dest().getCoordinate().equals2D(t.dest().getCoordinate()))},dNext:function(){return this.sym().oNext().sym()},lPrev:function(){return this.next.sym()},rPrev:function(){return this.sym().oNext()},rot:function(){return this._rot},oPrev:function(){return this._rot.next._rot},sym:function(){return this._rot._rot},setOrig:function(t){this.vertex=t},lNext:function(){return this.invRot().oNext().rot()},getLength:function(){return this.orig().getCoordinate().distance(this.dest().getCoordinate())},invRot:function(){return this._rot.sym()},setDest:function(t){this.sym().setOrig(t)},setData:function(t){this.data=t},getData:function(){return this.data},delete:function(){this._rot=null},orig:function(){return this.vertex},rNext:function(){return this._rot.next.invRot()},toString:function(){var t=this.vertex.getCoordinate(),e=this.dest().getCoordinate();return WKTWriter.toLineString(t,e)},isLive:function(){return null!==this._rot},getPrimary:function(){return this.orig().getCoordinate().compareTo(this.dest().getCoordinate())<=0?this:this.sym()},dPrev:function(){return this.invRot().oNext().invRot()},setNext:function(t){this.next=t},interfaces_:function(){return[]},getClass:function(){return QuadEdge}}),QuadEdge.makeEdge=function(t,e){var n=new QuadEdge,i=new QuadEdge,r=new QuadEdge,o=new QuadEdge;n._rot=i,i._rot=r,r._rot=o,o._rot=n,n.setNext(n),i.setNext(o),r.setNext(r),o.setNext(i);var s=n;return s.setOrig(t),s.setDest(e),s},QuadEdge.swap=function(t){var e=t.oPrev(),n=t.sym().oPrev();QuadEdge.splice(t,e),QuadEdge.splice(t.sym(),n),QuadEdge.splice(t,e.lNext()),QuadEdge.splice(t.sym(),n.lNext()),t.setOrig(e.dest()),t.setDest(n.dest())},QuadEdge.splice=function(t,e){var n=t.oNext().rot(),i=e.oNext().rot(),r=e.oNext(),o=t.oNext(),s=i.oNext(),a=n.oNext();t.setNext(r),e.setNext(o),n.setNext(s),i.setNext(a)},QuadEdge.connect=function(t,e){var n=QuadEdge.makeEdge(t.dest(),e.orig());return QuadEdge.splice(n,t.lNext()),QuadEdge.splice(n.sym(),e),n},extend(IncrementalDelaunayTriangulator.prototype,{insertSite:function(t){var e=this.subdiv.locate(t);if(this.subdiv.isVertexOfEdge(e,t))return e;this.subdiv.isOnEdge(e,t.getCoordinate())&&(e=e.oPrev(),this.subdiv.delete(e.oNext()));var n=this.subdiv.makeEdge(e.orig(),t);QuadEdge.splice(n,e);var i=n;do n=this.subdiv.connect(e,n.sym()),e=n.oPrev();while(e.lNext()!==i);for(;;){var r=e.oPrev();if(r.dest().rightOf(e)&&t.isInCircle(e.orig(),r.dest(),e.dest()))QuadEdge.swap(e),e=e.oPrev();else{if(e.oNext()===i)return n;e=e.oNext().lPrev()}}},insertSites:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.insertSite(n)}},interfaces_:function(){return[]},getClass:function(){return IncrementalDelaunayTriangulator}}),extend(QuadEdgeLocator.prototype,{locate:function(t){},interfaces_:function(){return[]},getClass:function(){return QuadEdgeLocator}}),extend(LastFoundQuadEdgeLocator.prototype,{init:function(){this.lastEdge=this.findEdge()},locate:function(t){this.lastEdge.isLive()||this.init();var e=this.subdiv.locateFromEdge(t,this.lastEdge);return this.lastEdge=e,e},findEdge:function(){var t=this.subdiv.getEdges();return t.iterator().next()},interfaces_:function(){return[QuadEdgeLocator]},getClass:function(){return LastFoundQuadEdgeLocator}}),inherits(LocateFailureException,RuntimeException),extend(LocateFailureException.prototype,{getSegment:function(){return this.seg},interfaces_:function(){return[]},getClass:function(){return LocateFailureException}}),LocateFailureException.msgWithSpatial=function(t,e){return null!==e?t+" [ "+e+" ]":t},extend(TriangleVisitor.prototype,{visit:function(t){},interfaces_:function(){return[]},getClass:function(){return TriangleVisitor}}),extend(QuadEdgeSubdivision.prototype,{getTriangleVertices:function(t){var e=new TriangleVertexListVisitor;return this.visitTriangles(e,t),e.getTriangleVertices()},isFrameVertex:function(t){return t.equals(this.frameVertex[0])?!0:t.equals(this.frameVertex[1])?!0:!!t.equals(this.frameVertex[2])},isVertexOfEdge:function(t,e){return!(!e.equals(t.orig(),this.tolerance)&&!e.equals(t.dest(),this.tolerance))},connect:function(t,e){var n=QuadEdge.connect(t,e);return this.quadEdges.add(n),n},getVoronoiCellPolygon:function(t,e){var n=new ArrayList,i=t;do{var r=t.rot().orig().getCoordinate();n.add(r),t=t.oPrev()}while(t!==i);var o=new CoordinateList;o.addAll(n,!1),o.closeRing(),o.size()<4&&(System.out.println(o),o.add(o.get(o.size()-1),!0));var s=o.toCoordinateArray(),a=e.createPolygon(e.createLinearRing(s),null),l=i.orig();return a.setUserData(l.getCoordinate()),a},setLocator:function(t){this.locator=t},initSubdiv:function(){var t=this.makeEdge(this.frameVertex[0],this.frameVertex[1]),e=this.makeEdge(this.frameVertex[1],this.frameVertex[2]);QuadEdge.splice(t.sym(),e);var n=this.makeEdge(this.frameVertex[2],this.frameVertex[0]);return QuadEdge.splice(e.sym(),n),QuadEdge.splice(n.sym(),t),t},isFrameBorderEdge:function(t){var e=new Array(3).fill(null);QuadEdgeSubdivision.getTriangleEdges(t,e);var n=new Array(3).fill(null);QuadEdgeSubdivision.getTriangleEdges(t.sym(),n);var i=t.lNext().dest();if(this.isFrameVertex(i))return!0;var r=t.sym().lNext().dest();return!!this.isFrameVertex(r)},makeEdge:function(t,e){var n=QuadEdge.makeEdge(t,e);return this.quadEdges.add(n),n},visitTriangles:function(t,e){this.visitedKey++;var n=new Stack;n.push(this.startingEdge);for(var i=new HashSet;!n.empty();){var r=n.pop();if(!i.contains(r)){var o=this.fetchTriangleToVisit(r,n,e,i);null!==o&&t.visit(o)}}},isFrameEdge:function(t){return!(!this.isFrameVertex(t.orig())&&!this.isFrameVertex(t.dest()))},isOnEdge:function(t,e){this.seg.setCoordinates(t.orig().getCoordinate(),t.dest().getCoordinate());var n=this.seg.distance(e);return n<this.edgeCoincidenceTolerance},getEnvelope:function(){return new Envelope(this.frameEnv)},createFrame:function(t){var e=t.getWidth(),n=t.getHeight(),i=0;i=e>n?10*e:10*n,this.frameVertex[0]=new Vertex((t.getMaxX()+t.getMinX())/2,t.getMaxY()+i),this.frameVertex[1]=new Vertex(t.getMinX()-i,t.getMinY()-i),this.frameVertex[2]=new Vertex(t.getMaxX()+i,t.getMinY()-i),this.frameEnv=new Envelope(this.frameVertex[0].getCoordinate(),this.frameVertex[1].getCoordinate()),this.frameEnv.expandToInclude(this.frameVertex[2].getCoordinate())},getTriangleCoordinates:function(t){var e=new TriangleCoordinatesVisitor;return this.visitTriangles(e,t),e.getTriangles()},getVertices:function(t){for(var e=new HashSet,n=this.quadEdges.iterator();n.hasNext();){var i=n.next(),r=i.orig();!t&&this.isFrameVertex(r)||e.add(r);var o=i.dest();!t&&this.isFrameVertex(o)||e.add(o)}return e},fetchTriangleToVisit:function(t,e,n,i){var r=t,o=0,s=!1;do{this.triEdges[o]=r,this.isFrameEdge(r)&&(s=!0);var a=r.sym();i.contains(a)||e.push(a),i.add(r),o++,r=r.lNext()}while(r!==t);return s&&!n?null:this.triEdges},getEdges:function(){if(0===arguments.length)return this.quadEdges;if(1===arguments.length){for(var t=arguments[0],e=this.getPrimaryEdges(!1),n=new Array(e.size()).fill(null),i=0,r=e.iterator();r.hasNext();){var o=r.next();n[i++]=t.createLineString([o.orig().getCoordinate(),o.dest().getCoordinate()])}return t.createMultiLineString(n)}},getVertexUniqueEdges:function(t){for(var e=new ArrayList,n=new HashSet,i=this.quadEdges.iterator();i.hasNext();){var r=i.next(),o=r.orig();n.contains(o)||(n.add(o),!t&&this.isFrameVertex(o)||e.add(r));var s=r.sym(),a=s.orig();n.contains(a)||(n.add(a),!t&&this.isFrameVertex(a)||e.add(s))}return e},getTriangleEdges:function(t){var e=new TriangleEdgesListVisitor;return this.visitTriangles(e,t),e.getTriangleEdges()},getPrimaryEdges:function(t){this.visitedKey++;var e=new ArrayList,n=new Stack;n.push(this.startingEdge);for(var i=new HashSet;!n.empty();){var r=n.pop();if(!i.contains(r)){var o=r.getPrimary();!t&&this.isFrameEdge(o)||e.add(o),n.push(r.oNext()),n.push(r.sym().oNext()),i.add(r),i.add(r.sym())}}return e},delete:function(t){QuadEdge.splice(t,t.oPrev()),QuadEdge.splice(t.sym(),t.sym().oPrev());var e=t.sym(),n=t.rot(),i=t.rot().sym();this.quadEdges.remove(t),this.quadEdges.remove(e),this.quadEdges.remove(n),this.quadEdges.remove(i),t.delete(),e.delete(),n.delete(),i.delete()},locateFromEdge:function(t,e){for(var n=0,i=this.quadEdges.size(),r=e;;){if(n++,n>i)throw new LocateFailureException(r.toLineSegment());if(t.equals(r.orig())||t.equals(r.dest()))break;if(t.rightOf(r))r=r.sym();else if(t.rightOf(r.oNext())){if(t.rightOf(r.dPrev()))break;r=r.dPrev()}else r=r.oNext()}return r},getTolerance:function(){return this.tolerance},getVoronoiCellPolygons:function(t){this.visitTriangles(new TriangleCircumcentreVisitor,!0);for(var e=new ArrayList,n=this.getVertexUniqueEdges(!1),i=n.iterator();i.hasNext();){var r=i.next();e.add(this.getVoronoiCellPolygon(r,t))}return e},getVoronoiDiagram:function(t){var e=this.getVoronoiCellPolygons(t);return t.createGeometryCollection(GeometryFactory.toGeometryArray(e))},getTriangles:function(t){for(var e=this.getTriangleCoordinates(!1),n=new Array(e.size()).fill(null),i=0,r=e.iterator();r.hasNext();){var o=r.next();n[i++]=t.createPolygon(t.createLinearRing(o),null)}return t.createGeometryCollection(n)},insertSite:function(t){var e=this.locate(t);if(t.equals(e.orig(),this.tolerance)||t.equals(e.dest(),this.tolerance))return e;var n=this.makeEdge(e.orig(),t);QuadEdge.splice(n,e);var i=n;do n=this.connect(e,n.sym()),e=n.oPrev();while(e.lNext()!==i);return i},locate:function(){if(1===arguments.length){if(arguments[0]instanceof Vertex){var t=arguments[0];return this.locator.locate(t)}if(arguments[0]instanceof Coordinate){var e=arguments[0];return this.locator.locate(new Vertex(e))}}else if(2===arguments.length){var n=arguments[0],i=arguments[1],r=this.locator.locate(new Vertex(n));if(null===r)return null;var o=r;r.dest().getCoordinate().equals2D(n)&&(o=r.sym());var s=o;do{if(s.dest().getCoordinate().equals2D(i))return s;s=s.oNext()}while(s!==o);return null}},interfaces_:function(){return[]},getClass:function(){return QuadEdgeSubdivision}}),QuadEdgeSubdivision.getTriangleEdges=function(t,e){if(e[0]=t,e[1]=e[0].lNext(),e[2]=e[1].lNext(),e[2].lNext()!==e[0])throw new IllegalArgumentException("Edges do not form a triangle")},extend(TriangleCircumcentreVisitor.prototype,{visit:function(t){for(var e=t[0].orig().getCoordinate(),n=t[1].orig().getCoordinate(),i=t[2].orig().getCoordinate(),r=Triangle.circumcentre(e,n,i),o=new Vertex(r),s=0;3>s;s++)t[s].rot().setOrig(o)},interfaces_:function(){return[TriangleVisitor]},getClass:function(){return TriangleCircumcentreVisitor}}),extend(TriangleEdgesListVisitor.prototype,{getTriangleEdges:function(){return this.triList},visit:function(t){this.triList.add(t.clone())},interfaces_:function(){return[TriangleVisitor]},getClass:function(){return TriangleEdgesListVisitor}}),extend(TriangleVertexListVisitor.prototype,{visit:function(t){this.triList.add([t[0].orig(),t[1].orig(),t[2].orig()])},getTriangleVertices:function(){return this.triList},interfaces_:function(){return[TriangleVisitor]},getClass:function(){return TriangleVertexListVisitor}}),extend(TriangleCoordinatesVisitor.prototype,{checkTriangleSize:function(t){var e="";t.length>=2?e=WKTWriter.toLineString(t[0],t[1]):t.length>=1&&(e=WKTWriter.toPoint(t[0]))},visit:function(t){this.coordList.clear();for(var e=0;3>e;e++){var n=t[e].orig();this.coordList.add(n.getCoordinate())}if(this.coordList.size()>0){this.coordList.closeRing();var i=this.coordList.toCoordinateArray();if(4!==i.length)return null;this.triCoords.add(i)}},getTriangles:function(){return this.triCoords},interfaces_:function(){return[TriangleVisitor]},getClass:function(){return TriangleCoordinatesVisitor}}),QuadEdgeSubdivision.TriangleCircumcentreVisitor=TriangleCircumcentreVisitor,QuadEdgeSubdivision.TriangleEdgesListVisitor=TriangleEdgesListVisitor,QuadEdgeSubdivision.TriangleVertexListVisitor=TriangleVertexListVisitor,QuadEdgeSubdivision.TriangleCoordinatesVisitor=TriangleCoordinatesVisitor,QuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR=1e3,extend(Segment.prototype,{getLineSegment:function(){return this.ls},getEndZ:function(){var t=this.ls.getCoordinate(1);return t.z},getStartZ:function(){var t=this.ls.getCoordinate(0);return t.z},intersection:function(t){return this.ls.intersection(t.getLineSegment())},getStart:function(){return this.ls.getCoordinate(0)},getEnd:function(){return this.ls.getCoordinate(1)},getEndY:function(){var t=this.ls.getCoordinate(1);return t.y},getStartX:function(){var t=this.ls.getCoordinate(0);return t.x},equalsTopo:function(t){return this.ls.equalsTopo(t.getLineSegment())},getStartY:function(){var t=this.ls.getCoordinate(0);return t.y},setData:function(t){
this.data=t},getData:function(){return this.data},getEndX:function(){var t=this.ls.getCoordinate(1);return t.x},toString:function(){return this.ls.toString()},interfaces_:function(){return[]},getClass:function(){return Segment}}),extend(KdNodeVisitor.prototype,{visit:function(t){},interfaces_:function(){return[]},getClass:function(){return KdNodeVisitor}}),extend(KdNode.prototype,{isRepeated:function(){return this.count>1},getRight:function(){return this.right},getCoordinate:function(){return this.p},setLeft:function(t){this.left=t},getX:function(){return this.p.x},getData:function(){return this.data},getCount:function(){return this.count},getLeft:function(){return this.left},getY:function(){return this.p.y},increment:function(){this.count=this.count+1},setRight:function(t){this.right=t},interfaces_:function(){return[]},getClass:function(){return KdNode}}),extend(KdTree.prototype,{insert:function(){if(1===arguments.length){var t=arguments[0];return this.insert(t,null)}if(2===arguments.length){var t=arguments[0],e=arguments[1];if(null===this.root)return this.root=new KdNode(t,e),this.root;if(this.tolerance>0){var n=this.findBestMatchNode(t);if(null!==n)return n.increment(),n}return this.insertExact(t,e)}},query:function(){var t=arguments,e=this;if(1===arguments.length){var n=arguments[0],i=new ArrayList;return this.query(n,i),i}if(2===arguments.length)if(arguments[0]instanceof Envelope&&hasInterface(arguments[1],List))!function(){var n=t[0],i=t[1];e.queryNode(e.root,n,!0,{interfaces_:function(){return[KdNodeVisitor]},visit:function(t){i.add(t)}})}();else if(arguments[0]instanceof Envelope&&hasInterface(arguments[1],KdNodeVisitor)){var n=arguments[0],r=arguments[1];this.queryNode(this.root,n,!0,r)}},queryNode:function(t,e,n,i){if(null===t)return null;var r=null,o=null,s=null;n?(r=e.getMinX(),o=e.getMaxX(),s=t.getX()):(r=e.getMinY(),o=e.getMaxY(),s=t.getY());var a=s>r,l=o>=s;a&&this.queryNode(t.getLeft(),e,!n,i),e.contains(t.getCoordinate())&&i.visit(t),l&&this.queryNode(t.getRight(),e,!n,i)},findBestMatchNode:function(t){var e=new BestMatchVisitor(t,this.tolerance);return this.query(e.queryEnvelope(),e),e.getNode()},isEmpty:function(){return null===this.root},insertExact:function(t,e){for(var n=this.root,i=this.root,r=!0,o=!0;null!==n;){if(null!==n){var s=t.distance(n.getCoordinate())<=this.tolerance;if(s)return n.increment(),n}o=r?t.x<n.getX():t.y<n.getY(),i=n,n=o?n.getLeft():n.getRight(),r=!r}this.numberOfNodes=this.numberOfNodes+1;var a=new KdNode(t,e);return o?i.setLeft(a):i.setRight(a),a},interfaces_:function(){return[]},getClass:function(){return KdTree}}),KdTree.toCoordinates=function(){if(1===arguments.length){var t=arguments[0];return KdTree.toCoordinates(t,!1)}if(2===arguments.length){for(var t=arguments[0],e=arguments[1],n=new CoordinateList,i=t.iterator();i.hasNext();)for(var r=i.next(),o=e?r.getCount():1,s=0;o>s;s++)n.add(r.getCoordinate(),!0);return n.toCoordinateArray()}},extend(BestMatchVisitor.prototype,{visit:function(t){var e=this.p.distance(t.getCoordinate()),n=e<=this.tolerance;if(!n)return null;var i=!1;(null===this.matchNode||e<this.matchDist||null!==this.matchNode&&e===this.matchDist&&t.getCoordinate().compareTo(this.matchNode.getCoordinate())<1)&&(i=!0),i&&(this.matchNode=t,this.matchDist=e)},queryEnvelope:function(){var t=new Envelope(this.p);return t.expandBy(this.tolerance),t},getNode:function(){return this.matchNode},interfaces_:function(){return[KdNodeVisitor]},getClass:function(){return BestMatchVisitor}}),KdTree.BestMatchVisitor=BestMatchVisitor,extend(ConformingDelaunayTriangulator.prototype,{getInitialVertices:function(){return this.initialVertices},getKDT:function(){return this.kdt},enforceConstraints:function(){this.addConstraintVertices();var t=0,e=0;do e=this.enforceGabriel(this.segments),t++;while(e>0&&t<ConformingDelaunayTriangulator.MAX_SPLIT_ITER)},insertSites:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.insertSite(n)}},getVertexFactory:function(){return this.vertexFactory},getPointArray:function(){for(var t=new Array(this.initialVertices.size()+this.segVertices.size()).fill(null),e=0,n=this.initialVertices.iterator();n.hasNext();){var i=n.next();t[e++]=i.getCoordinate()}for(var r=this.segVertices.iterator();r.hasNext();){var i=r.next();t[e++]=i.getCoordinate()}return t},setConstraints:function(t,e){this.segments=t,this.segVertices=e},computeConvexHull:function(){var t=new GeometryFactory,e=this.getPointArray(),n=new ConvexHull(e,t);this.convexHull=n.getConvexHull()},addConstraintVertices:function(){this.computeConvexHull(),this.insertSites(this.segVertices)},findNonGabrielPoint:function(t){var e=t.getStart(),n=t.getEnd(),i=new Coordinate((e.x+n.x)/2,(e.y+n.y)/2),r=e.distance(i),o=new Envelope(i);o.expandBy(r);for(var s=this.kdt.query(o),a=null,l=Double.MAX_VALUE,u=s.iterator();u.hasNext();){var c=u.next(),h=c.getCoordinate();if(!h.equals2D(e)&&!h.equals2D(n)){var d=i.distance(h);if(r>d){var g=d;(null===a||l>g)&&(a=h,l=g)}}}return a},getConstraintSegments:function(){return this.segments},setSplitPointFinder:function(t){this.splitFinder=t},getConvexHull:function(){return this.convexHull},getTolerance:function(){return this.tolerance},enforceGabriel:function(t){for(var e=new ArrayList,n=0,i=new ArrayList,r=t.iterator();r.hasNext();){var o=r.next(),s=this.findNonGabrielPoint(o);if(null!==s){this.splitPt=this.splitFinder.findSplitPoint(o,s);var a=this.createVertex(this.splitPt,o),l=(this.insertSite(a),new Segment(o.getStartX(),o.getStartY(),o.getStartZ(),a.getX(),a.getY(),a.getZ(),o.getData())),u=new Segment(a.getX(),a.getY(),a.getZ(),o.getEndX(),o.getEndY(),o.getEndZ(),o.getData());e.add(l),e.add(u),i.add(o),n+=1}}return t.removeAll(i),t.addAll(e),n},createVertex:function(){if(1===arguments.length){var t=arguments[0],e=null;return e=null!==this.vertexFactory?this.vertexFactory.createVertex(t,null):new ConstraintVertex(t)}if(2===arguments.length){var t=arguments[0],n=arguments[1],e=null;return e=null!==this.vertexFactory?this.vertexFactory.createVertex(t,n):new ConstraintVertex(t),e.setOnConstraint(!0),e}},getSubdivision:function(){return this.subdiv},computeBoundingBox:function(){var t=ConformingDelaunayTriangulator.computeVertexEnvelope(this.initialVertices),e=ConformingDelaunayTriangulator.computeVertexEnvelope(this.segVertices),n=new Envelope(t);n.expandToInclude(e);var i=.2*n.getWidth(),r=.2*n.getHeight(),o=Math.max(i,r);this.computeAreaEnv=new Envelope(n),this.computeAreaEnv.expandBy(o)},setVertexFactory:function(t){this.vertexFactory=t},formInitialDelaunay:function(){this.computeBoundingBox(),this.subdiv=new QuadEdgeSubdivision(this.computeAreaEnv,this.tolerance),this.subdiv.setLocator(new LastFoundQuadEdgeLocator(this.subdiv)),this.incDel=new IncrementalDelaunayTriangulator(this.subdiv),this.insertSites(this.initialVertices)},insertSite:function(){if(arguments[0]instanceof ConstraintVertex){var t=arguments[0],e=this.kdt.insert(t.getCoordinate(),t);if(e.isRepeated()){var n=e.getData();return n.merge(t),n}return this.incDel.insertSite(t),t}if(arguments[0]instanceof Coordinate){var i=arguments[0];this.insertSite(this.createVertex(i))}},interfaces_:function(){return[]},getClass:function(){return ConformingDelaunayTriangulator}}),ConformingDelaunayTriangulator.computeVertexEnvelope=function(t){for(var e=new Envelope,n=t.iterator();n.hasNext();){var i=n.next();e.expandToInclude(i.getCoordinate())}return e},ConformingDelaunayTriangulator.MAX_SPLIT_ITER=99,extend(DelaunayTriangulationBuilder.prototype,{create:function(){if(null!==this.subdiv)return null;var t=DelaunayTriangulationBuilder.envelope(this.siteCoords),e=DelaunayTriangulationBuilder.toVertices(this.siteCoords);this.subdiv=new QuadEdgeSubdivision(t,this.tolerance);var n=new IncrementalDelaunayTriangulator(this.subdiv);n.insertSites(e)},setTolerance:function(t){this.tolerance=t},setSites:function(){if(arguments[0]instanceof Geometry){var t=arguments[0];this.siteCoords=DelaunayTriangulationBuilder.extractUniqueCoordinates(t)}else if(hasInterface(arguments[0],Collection)){var e=arguments[0];this.siteCoords=DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(e))}},getEdges:function(t){return this.create(),this.subdiv.getEdges(t)},getSubdivision:function(){return this.create(),this.subdiv},getTriangles:function(t){return this.create(),this.subdiv.getTriangles(t)},interfaces_:function(){return[]},getClass:function(){return DelaunayTriangulationBuilder}}),DelaunayTriangulationBuilder.extractUniqueCoordinates=function(t){if(null===t)return new CoordinateList;var e=t.getCoordinates();return DelaunayTriangulationBuilder.unique(e)},DelaunayTriangulationBuilder.envelope=function(t){for(var e=new Envelope,n=t.iterator();n.hasNext();){var i=n.next();e.expandToInclude(i)}return e},DelaunayTriangulationBuilder.unique=function(t){var e=CoordinateArrays.copyDeep(t);Arrays.sort(e);var n=new CoordinateList(e,!1);return n},DelaunayTriangulationBuilder.toVertices=function(t){for(var e=new ArrayList,n=t.iterator();n.hasNext();){var i=n.next();e.add(new Vertex(i))}return e},extend(ConformingDelaunayTriangulationBuilder.prototype,{createSiteVertices:function(t){for(var e=new ArrayList,n=t.iterator();n.hasNext();){var i=n.next();this.constraintVertexMap.containsKey(i)||e.add(new ConstraintVertex(i))}return e},create:function(){if(null!==this.subdiv)return null;var t=DelaunayTriangulationBuilder.envelope(this.siteCoords),e=new ArrayList;null!==this.constraintLines&&(t.expandToInclude(this.constraintLines.getEnvelopeInternal()),this.createVertices(this.constraintLines),e=ConformingDelaunayTriangulationBuilder.createConstraintSegments(this.constraintLines));var n=this.createSiteVertices(this.siteCoords),i=new ConformingDelaunayTriangulator(n,this.tolerance);i.setConstraints(e,new ArrayList(this.constraintVertexMap.values())),i.formInitialDelaunay(),i.enforceConstraints(),this.subdiv=i.getSubdivision()},setTolerance:function(t){this.tolerance=t},setConstraints:function(t){this.constraintLines=t},setSites:function(t){this.siteCoords=DelaunayTriangulationBuilder.extractUniqueCoordinates(t)},getEdges:function(t){return this.create(),this.subdiv.getEdges(t)},getSubdivision:function(){return this.create(),this.subdiv},getTriangles:function(t){return this.create(),this.subdiv.getTriangles(t)},createVertices:function(t){for(var e=t.getCoordinates(),n=0;n<e.length;n++){var i=new ConstraintVertex(e[n]);this.constraintVertexMap.put(e[n],i)}},interfaces_:function(){return[]},getClass:function(){return ConformingDelaunayTriangulationBuilder}}),ConformingDelaunayTriangulationBuilder.createConstraintSegments=function(){if(1===arguments.length){for(var t=arguments[0],e=LinearComponentExtracter.getLines(t),n=new ArrayList,i=e.iterator();i.hasNext();){var r=i.next();ConformingDelaunayTriangulationBuilder.createConstraintSegments(r,n)}return n}if(2===arguments.length)for(var o=arguments[0],s=arguments[1],a=o.getCoordinates(),i=1;i<a.length;i++)s.add(new Segment(a[i-1],a[i]))},extend(VoronoiDiagramBuilder.prototype,{create:function(){if(null!==this.subdiv)return null;var t=DelaunayTriangulationBuilder.envelope(this.siteCoords);this.diagramEnv=t;var e=Math.max(this.diagramEnv.getWidth(),this.diagramEnv.getHeight());this.diagramEnv.expandBy(e),null!==this.clipEnv&&this.diagramEnv.expandToInclude(this.clipEnv);var n=DelaunayTriangulationBuilder.toVertices(this.siteCoords);this.subdiv=new QuadEdgeSubdivision(t,this.tolerance);var i=new IncrementalDelaunayTriangulator(this.subdiv);i.insertSites(n)},getDiagram:function(t){this.create();var e=this.subdiv.getVoronoiDiagram(t);return VoronoiDiagramBuilder.clipGeometryCollection(e,this.diagramEnv)},setTolerance:function(t){this.tolerance=t},setSites:function(){if(arguments[0]instanceof Geometry){var t=arguments[0];this.siteCoords=DelaunayTriangulationBuilder.extractUniqueCoordinates(t)}else if(hasInterface(arguments[0],Collection)){var e=arguments[0];this.siteCoords=DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(e))}},setClipEnvelope:function(t){this.clipEnv=t},getSubdivision:function(){return this.create(),this.subdiv},interfaces_:function(){return[]},getClass:function(){return VoronoiDiagramBuilder}}),VoronoiDiagramBuilder.clipGeometryCollection=function(t,e){for(var n=t.getFactory().toGeometry(e),i=new ArrayList,r=0;r<t.getNumGeometries();r++){var o=t.getGeometryN(r),s=null;e.contains(o.getEnvelopeInternal())?s=o:e.intersects(o.getEnvelopeInternal())&&(s=n.intersection(o),s.setUserData(o.getUserData())),null===s||s.isEmpty()||i.add(s)}return t.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(i))},extend(GeometryCollectionMapper.prototype,{map:function(t){for(var e=new ArrayList,n=0;n<t.getNumGeometries();n++){var i=this.mapOp.map(t.getGeometryN(n));i.isEmpty()||e.add(i)}return t.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(e))},interfaces_:function(){return[]},getClass:function(){return GeometryCollectionMapper}}),GeometryCollectionMapper.map=function(t,e){var n=new GeometryCollectionMapper(e);return n.map(t)},extend(RectangleContains.prototype,{isContainedInBoundary:function(t){if(t instanceof Polygon)return!1;if(t instanceof Point)return this.isPointContainedInBoundary(t);if(t instanceof LineString)return this.isLineStringContainedInBoundary(t);for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);if(!this.isContainedInBoundary(n))return!1}return!0},isLineSegmentContainedInBoundary:function(t,e){if(t.equals(e))return this.isPointContainedInBoundary(t);if(t.x===e.x){if(t.x===this.rectEnv.getMinX()||t.x===this.rectEnv.getMaxX())return!0}else if(t.y===e.y&&(t.y===this.rectEnv.getMinY()||t.y===this.rectEnv.getMaxY()))return!0;return!1},isLineStringContainedInBoundary:function(t){for(var e=t.getCoordinateSequence(),n=new Coordinate,i=new Coordinate,r=0;r<e.size()-1;r++)if(e.getCoordinate(r,n),e.getCoordinate(r+1,i),!this.isLineSegmentContainedInBoundary(n,i))return!1;return!0},isPointContainedInBoundary:function(){if(arguments[0]instanceof Point){var t=arguments[0];return this.isPointContainedInBoundary(t.getCoordinate())}if(arguments[0]instanceof Coordinate){var e=arguments[0];return e.x===this.rectEnv.getMinX()||e.x===this.rectEnv.getMaxX()||e.y===this.rectEnv.getMinY()||e.y===this.rectEnv.getMaxY()}},contains:function(t){return this.rectEnv.contains(t.getEnvelopeInternal())?!this.isContainedInBoundary(t):!1},interfaces_:function(){return[]},getClass:function(){return RectangleContains}}),RectangleContains.contains=function(t,e){var n=new RectangleContains(t);return n.contains(e)},extend(RectangleLineIntersector.prototype,{intersects:function(t,e){var n=new Envelope(t,e);if(!this.rectEnv.intersects(n))return!1;if(this.rectEnv.intersects(t))return!0;if(this.rectEnv.intersects(e))return!0;if(t.compareTo(e)>0){var i=t;t=e,e=i}var r=!1;return e.y>t.y&&(r=!0),r?this.li.computeIntersection(t,e,this.diagDown0,this.diagDown1):this.li.computeIntersection(t,e,this.diagUp0,this.diagUp1),!!this.li.hasIntersection()},interfaces_:function(){return[]},getClass:function(){return RectangleLineIntersector}}),extend(ShortCircuitedGeometryVisitor.prototype,{applyTo:function(t){for(var e=0;e<t.getNumGeometries()&&!this._isDone;e++){var n=t.getGeometryN(e);if(n instanceof GeometryCollection)this.applyTo(n);else if(this.visit(n),this.isDone())return this._isDone=!0,null}},interfaces_:function(){return[]},getClass:function(){return ShortCircuitedGeometryVisitor}}),extend(RectangleIntersects.prototype,{intersects:function(t){if(!this.rectEnv.intersects(t.getEnvelopeInternal()))return!1;var e=new EnvelopeIntersectsVisitor(this.rectEnv);if(e.applyTo(t),e.intersects())return!0;var n=new GeometryContainsPointVisitor(this.rectangle);if(n.applyTo(t),n.containsPoint())return!0;var i=new RectangleIntersectsSegmentVisitor(this.rectangle);return i.applyTo(t),!!i.intersects()},interfaces_:function(){return[]},getClass:function(){return RectangleIntersects}}),RectangleIntersects.intersects=function(t,e){var n=new RectangleIntersects(t);return n.intersects(e)},inherits(EnvelopeIntersectsVisitor,ShortCircuitedGeometryVisitor),extend(EnvelopeIntersectsVisitor.prototype,{isDone:function(){return this._intersects===!0},visit:function(t){var e=t.getEnvelopeInternal();return this.rectEnv.intersects(e)?this.rectEnv.contains(e)?(this._intersects=!0,null):e.getMinX()>=this.rectEnv.getMinX()&&e.getMaxX()<=this.rectEnv.getMaxX()?(this._intersects=!0,null):e.getMinY()>=this.rectEnv.getMinY()&&e.getMaxY()<=this.rectEnv.getMaxY()?(this._intersects=!0,null):void 0:null},intersects:function(){return this._intersects},interfaces_:function(){return[]},getClass:function(){return EnvelopeIntersectsVisitor}}),inherits(GeometryContainsPointVisitor,ShortCircuitedGeometryVisitor),extend(GeometryContainsPointVisitor.prototype,{isDone:function(){return this._containsPoint===!0},visit:function(t){if(!(t instanceof Polygon))return null;var e=t.getEnvelopeInternal();if(!this.rectEnv.intersects(e))return null;for(var n=new Coordinate,i=0;4>i;i++)if(this.rectSeq.getCoordinate(i,n),e.contains(n)&&SimplePointInAreaLocator.containsPointInPolygon(n,t))return this._containsPoint=!0,null},containsPoint:function(){return this._containsPoint},interfaces_:function(){return[]},getClass:function(){return GeometryContainsPointVisitor}}),inherits(RectangleIntersectsSegmentVisitor,ShortCircuitedGeometryVisitor),extend(RectangleIntersectsSegmentVisitor.prototype,{intersects:function(){return this.hasIntersection},isDone:function(){return this.hasIntersection===!0},visit:function(t){var e=t.getEnvelopeInternal();if(!this.rectEnv.intersects(e))return null;var n=LinearComponentExtracter.getLines(t);this.checkIntersectionWithLineStrings(n)},checkIntersectionWithLineStrings:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();if(this.checkIntersectionWithSegments(n),this.hasIntersection)return null}},checkIntersectionWithSegments:function(t){for(var e=t.getCoordinateSequence(),n=1;n<e.size();n++)if(e.getCoordinate(n-1,this.p0),e.getCoordinate(n,this.p1),this.rectIntersector.intersects(this.p0,this.p1))return this.hasIntersection=!0,null},interfaces_:function(){return[]},getClass:function(){return RectangleIntersectsSegmentVisitor}}),function(){patch()}();var jsts={version:"1.0.1 (1c3991a)",algorithm:{Centroid:Centroid,CGAlgorithms:CGAlgorithms,ConvexHull:ConvexHull,InteriorPointArea:InteriorPointArea,InteriorPointLine:InteriorPointLine,InteriorPointPoint:InteriorPointPoint,RobustLineIntersector:RobustLineIntersector,MinimumBoundingCircle:MinimumBoundingCircle,MinimumDiameter:MinimumDiameter},densify:{Densifier:Densifier},dissolve:{LineDissolver:LineDissolver},geom:{Coordinate:Coordinate,Envelope:Envelope,LineSegment:LineSegment,GeometryFactory:GeometryFactory,Geometry:Geometry,Point:Point,LineString:LineString,LinearRing:LinearRing,Polygon:MultiPolygon,GeometryCollection:GeometryCollection,MultiPoint:MultiPoint,MultiLineString:MultiLineString,MultiPolygon:MultiPolygon,Dimension:Dimension,IntersectionMatrix:IntersectionMatrix},index:{quadtree:{Quadtree:Quadtree},strtree:{STRtree:STRtree}},io:io,noding:{MCIndexNoder:MCIndexNoder,ScaledNoder:ScaledNoder,SegmentString:SegmentString},operation:{BoundaryOp:BoundaryOp,IsSimpleOp:IsSimpleOp,buffer:{BufferOp:BufferOp},distance:{DistanceOp:DistanceOp},linemerge:{LineMerger:LineMerger},overlay:{OverlayOp:OverlayOp},polygonize:{Polygonizer:Polygonizer},relate:{RelateOp:RelateOp$1},union:{CascadedPolygonUnion:CascadedPolygonUnion,UnaryUnionOp:UnaryUnionOp},valid:{IsValidOp:IsValidOp}},precision:{GeometryPrecisionReducer:GeometryPrecisionReducer},simplify:{DouglasPeuckerSimplifier:DouglasPeuckerSimplifier,TopologyPreservingSimplifier:TopologyPreservingSimplifier},triangulate:{ConformingDelaunayTriangulationBuilder:ConformingDelaunayTriangulationBuilder,DelaunayTriangulationBuilder:DelaunayTriangulationBuilder,VoronoiDiagramBuilder:VoronoiDiagramBuilder}};module.exports=jsts;
