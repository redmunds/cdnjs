"use strict";function loadStateFromLocalStorage(t,e){function a(){t.__stateLoadedFromLS=!0,e()}if(ls){var o=getLocalStorageKey(t);if(o!==!1){var r=!1;try{var s=JSON.parse(ls.getItem(o));s&&(r=!0,t.setState(s,a))}catch(e){console&&console.warn("Unable to load state for",getDisplayName(t),"from localStorage.")}r||a()}}}function getDisplayName(t){return t.displayName||t.constructor.displayName||t.constructor.name}function getLocalStorageKey(t){return t.getLocalStorageKey?t.getLocalStorageKey():t.props.localStorageKey!==!1&&("function"==typeof t.props.localStorageKey?t.props.localStorageKey.call(t):t.props.localStorageKey||getDisplayName(t)||"react-localstorage")}function getStateFilterKeys(t){return t.getStateFilterKeys?"string"==typeof t.getStateFilterKeys()?[t.getStateFilterKeys()]:t.getStateFilterKeys():"string"==typeof t.props.stateFilterKeys?[t.props.stateFilterKeys]:t.props.stateFilterKeys}function getSyncState(t,e){var a=getStateFilterKeys(t);if(!a||!e)return e;for(var o,r={},s=0;s<a.length;s++)o=a[s],e.hasOwnProperty(o)&&(r[o]=e[o]);return r}var warn=require("./lib/warning"),hasLocalStorage="localStorage"in global,ls,testKey;if(hasLocalStorage){testKey="react-localstorage.mixin.test-key";try{ls=global.localStorage,ls.setItem(testKey,"foo"),ls.removeItem(testKey)}catch(t){hasLocalStorage=!1}}process.browser&&warn(hasLocalStorage,"localStorage not found. Component state will not be stored to localStorage."),module.exports={componentWillUpdate:function(t,e){if(hasLocalStorage&&this.__stateLoadedFromLS){var a=getLocalStorageKey(this);if(a!==!1){var o=ls.getItem(a);o&&"production"!==process.env.NODE_ENV&&warn(o===JSON.stringify(getSyncState(this,this.state)),"While component "+getDisplayName(this)+" was saving state to localStorage, the localStorage entry was modified by another actor. This can happen when multiple components are using the same localStorage key. Set the property `localStorageKey` on "+getDisplayName(this)+"."),ls.setItem(a,JSON.stringify(getSyncState(this,e)))}}},componentDidMount:function(){if(hasLocalStorage){var t=this;loadStateFromLocalStorage(this,function(){ls.setItem(getLocalStorageKey(t),JSON.stringify(getSyncState(t,t.state)))})}}};
//# sourceMappingURL=react-localstorage.min.js.map