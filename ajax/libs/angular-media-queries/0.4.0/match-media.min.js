angular.module("matchMedia",[]).run(function(){window.matchMedia||(window.matchMedia=function(){"use strict";var t=window.styleMedia||window.media;if(!t){var e=document.createElement("style"),i=document.getElementsByTagName("script")[0],n=null;e.type="text/css",e.id="matchmediajs-test",i.parentNode.insertBefore(e,i),n="getComputedStyle"in window&&window.getComputedStyle(e,null)||e.currentStyle,t={matchMedium:function(t){var i="@media "+t+"{ #matchmediajs-test { width: 1px; } }";return e.styleSheet?e.styleSheet.cssText=i:e.textContent=i,"1px"===n.width}}}return function(e){return{matches:t.matchMedium(e||"all"),media:e||"all"}}}())}).service("screenSize",["$rootScope",function(t){"use strict";var e={lg:"(min-width: 1200px)",md:"(min-width: 992px) and (max-width: 1199px)",sm:"(min-width: 768px) and (max-width: 991px)",xs:"(max-width: 767px)"},i=this,n=function(e,i){i=i||t;var n=i.$root.$$phase;"$apply"===n||"$digest"===n?e&&"function"==typeof e&&e():i.$apply(e)};this.is=function(t){var i=this.rules||e;if("string"!=typeof t&&"[object Array]"===Object.prototype.toString.call(t))throw new Error("screenSize requires array or comma-separated list");return"string"==typeof t&&(t=t.split(/\s*,\s*/)),t.some(function(t,e,n){return window.matchMedia(i[t]).matches?!0:void 0})},this.on=function(t,e,r){return window.addEventListener("resize",function(s){n(e(i.is(t)),r)}),i.is(t)},this.when=function(t,e,r){return window.addEventListener("resize",function(s){i.is(t)===!0&&n(e(i.is(t)),r)}),i.is(t)}}]);
//# sourceMappingURL=match-media.min.js.map