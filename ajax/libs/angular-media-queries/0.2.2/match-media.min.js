angular.module("matchMedia",[]).run(function(){window.matchMedia||(window.matchMedia=function(){"use strict";var t=window.styleMedia||window.media;if(!t){var e=document.createElement("style"),i=document.getElementsByTagName("script")[0],n=null;e.type="text/css",e.id="matchmediajs-test",i.parentNode.insertBefore(e,i),n="getComputedStyle"in window&&window.getComputedStyle(e,null)||e.currentStyle,t={matchMedium:function(t){var i="@media "+t+"{ #matchmediajs-test { width: 1px; } }";return e.styleSheet?e.styleSheet.cssText=i:e.textContent=i,"1px"===n.width}}}return function(e){return{matches:t.matchMedium(e||"all"),media:e||"all"}}}())}).service("screenSize",function(){"use strict";var t={lg:"(min-width: 1200px)",md:"(min-width: 992px) and (max-width: 1199px)",sm:"(min-width: 768px) and (max-width: 991px)",xs:"(max-width: 767px)"};this.is=function(e){var i=this.rules||t;if("string"!=typeof e&&"array"!=typeof e)throw new Error("screenSize requires array or comma-separated list");return"string"==typeof e&&(e=e.split(/\s*,\s*/)),e.some(function(t,e,n){return window.matchMedia(i[t]).matches?!0:void 0})}});
//# sourceMappingURL=match-media.min.js.map