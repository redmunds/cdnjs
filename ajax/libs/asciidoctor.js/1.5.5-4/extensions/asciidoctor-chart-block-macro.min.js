Opal.modules["chart-block-macro/extension"]=function(t){function e(t,e){return"number"==typeof t&&"number"==typeof e?t+e:t["$+"](e)}var r=t.top,n=t,a=t.nil,i=(t.breaker,t.slice,t.klass),$=t.hash2,s=t.range;return t.add_stubs(["$==","$include","$use_dsl","$named","$name_positional_attributes","$normalize_asset_path","$read_asset","$nil?","$empty?","$resolve_engine","$document","$parse","$process","$create_pass_block","$on_context","$parse_content_as","$source","$at_location","$key?","$downcase","$[]","$attributes","$===","$prepare_data","$bar","$line","$step","$spline","$get_chart_id","$create_chart_div","$chart_bar_script","$to_html","$chart_line_script","$chart_step_script","$chart_spline_script","$+","$uuid","$shift","$with_index","$unshift","$map","$get_chart_height","$get_chart_width","$to_s","$join","$%","$index","$gsub","$each_line","$chomp","$push","$split","$each","$open","$chr","$rand"]),n.get("RUBY_ENGINE")["$=="]("opal"),r.$include(t.get("Asciidoctor")),function(e,r){function n(){}var s,c=n=i(e,r,"ChartBlockMacro",n),o=(c.$$proto,c.$$scope);return c.$use_dsl(),c.$named("chart"),c.$name_positional_attributes("type","width","height"),t.defn(c,"$process",s=function(t,e,r){var n,i,s=this,c=a,h=a,l=a,u=a,_=a;return c=t.$normalize_asset_path(e,"target"),h=t.$read_asset(c,$(["warn_on_failure","normalize"],{warn_on_failure:!0,normalize:!0})),(n=(i=h["$nil?"]())!==!1&&i!==a&&null!=i?i:h["$empty?"]())===a||null==n||n.$$is_boolean&&1!=n?(l=o.get("ChartBackend").$resolve_engine(r,t.$document()),u=o.get("PlainRubyCSV").$parse(h),_=o.get("ChartBackend").$process(l,r,u),s.$create_pass_block(t,_,r,$(["subs"],{subs:a}))):a},s.$$arity=3),a&&"process"}(n.base,n.get("Extensions").$$scope.get("BlockMacroProcessor")),function(e,r){function n(){}var s,c=n=i(e,r,"ChartBlockProcessor",n),o=(c.$$proto,c.$$scope);return c.$use_dsl(),c.$named("chart"),c.$on_context("literal"),c.$name_positional_attributes("type","width","height"),c.$parse_content_as("raw"),t.defn(c,"$process",s=function(t,e,r){var n=this,i=a,s=a,c=a;return i=o.get("ChartBackend").$resolve_engine(r,t.$document()),s=o.get("PlainRubyCSV").$parse(e.$source()),c=o.get("ChartBackend").$process(i,r,s),n.$create_pass_block(t,c,r,$(["subs"],{subs:a}))},s.$$arity=3),a&&"process"}(n.base,n.get("Extensions").$$scope.get("BlockProcessor")),function(e,r){function n(){}var $,s=n=i(e,r,"ChartAssetsDocinfoProcessor",n),c=(s.$$proto,s.$$scope);return s.$use_dsl(),s.$at_location("header"),t.cdecl(c,"C3JS_STYLESHEET",'<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/c3/0.3.0/c3.min.css">'),t.cdecl(c,"D3JS_SCRIPT",'<script src="http://cdnjs.cloudflare.com/ajax/libs/d3/3.4.11/d3.min.js" charset="utf-8"></script>'),t.cdecl(c,"C3JS_SCRIPT",'<script src="http://cdnjs.cloudflare.com/ajax/libs/c3/0.3.0/c3.min.js"></script>'),t.cdecl(c,"CHARTIST_STYLESHEET",'<link rel="stylesheet" href="http://cdn.jsdelivr.net/chartist.js/latest/chartist.min.css">'),t.cdecl(c,"CHARTIST_SCRIPT",'<script src="http://cdn.jsdelivr.net/chartist.js/latest/chartist.min.js"></script>'),t.cdecl(c,"CHARTJS_SCRIPT",'<script src="http://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.min.js"></script>'),t.defn(s,"$process",$=function(t){return"\n"+c.get("C3JS_STYLESHEET")+"\n"+c.get("D3JS_SCRIPT")+"\n"+c.get("C3JS_SCRIPT")+"\n"+c.get("CHARTIST_STYLESHEET")+"\n"+c.get("CHARTIST_SCRIPT")+"\n"+c.get("CHARTJS_SCRIPT")},$.$$arity=1),a&&"process"}(n.base,n.get("Extensions").$$scope.get("DocinfoProcessor")),function(e,r){function n(){}var $,s,c=n=i(e,r,"ChartBackend",n),o=(c.$$proto,c.$$scope);return t.defs(c,"$resolve_engine",$=function(t,e){var r;return(r=t["$key?"]("engine"))===a||null==r||r.$$is_boolean&&1!=r?(r=e.$attributes()["$key?"]("chart-engine"))===a||null==r||r.$$is_boolean&&1!=r?"c3js":e.$attributes()["$[]"]("chart-engine").$downcase():t["$[]"]("engine").$downcase()},$.$$arity=2),t.defs(c,"$process",s=function(e,r,n){var i,$,s=a,c=a,h=a,l=a;return s=r["$[]"]("type"),function(){return c=e,"c3js"["$==="](c)?($=o.get("C3jsChartBuilder").$prepare_data(n),i=t.to_ary($),h=null==i[0]?a:i[0],l=null==i[1]?a:i[1],$,function(){return c=s,"bar"["$==="](c)?o.get("C3jsChartBuilder").$bar(h,l,r):"line"["$==="](c)?o.get("C3jsChartBuilder").$line(h,l,r):"step"["$==="](c)?o.get("C3jsChartBuilder").$step(h,l,r):"spline"["$==="](c)?o.get("C3jsChartBuilder").$spline(h,l,r):o.get("C3jsChartBuilder").$line(h,l,r)}()):"chartist"["$==="](c)?($=o.get("ChartistChartBuilder").$prepare_data(n),i=t.to_ary($),h=null==i[0]?a:i[0],l=null==i[1]?a:i[1],$,function(){return c=s,"bar"["$==="](c)?o.get("ChartistChartBuilder").$bar(h,l,r):"line"["$==="](c)?o.get("ChartistChartBuilder").$line(h,l,r):o.get("ChartistChartBuilder").$line(h,l,r)}()):"chartjs"["$==="](c)?($=o.get("ChartjsChartBuilder").$prepare_data(n),i=t.to_ary($),h=null==i[0]?a:i[0],l=null==i[1]?a:i[1],$,function(){return c=s,"line"["$==="](c)?o.get("ChartjsChartBuilder").$line(h,l,r):o.get("ChartjsChartBuilder").$line(h,l,r)}()):a}()},s.$$arity=3),a&&"process"}(n.base,null),function(r,n){function $(){}var s,c,o,h,l,u,_,d,p,g,f,y,b,v,C=$=i(r,n,"C3jsChartBuilder",$),m=(C.$$proto,C.$$scope);return t.defs(C,"$bar",s=function(t,e,r){var n=this,i=a,$=a,s=a;return i=n.$get_chart_id(),$=n.$create_chart_div(i),s=n.$chart_bar_script(i,t,e,r),n.$to_html($,s)},s.$$arity=3),t.defs(C,"$line",c=function(t,e,r){var n=this,i=a,$=a,s=a;return i=n.$get_chart_id(),$=n.$create_chart_div(i),s=n.$chart_line_script(i,t,e,r),n.$to_html($,s)},c.$$arity=3),t.defs(C,"$step",o=function(t,e,r){var n=this,i=a,$=a,s=a;return i=n.$get_chart_id(),$=n.$create_chart_div(i),s=n.$chart_step_script(i,t,e,r),n.$to_html($,s)},o.$$arity=3),t.defs(C,"$spline",h=function(t,e,r){var n=this,i=a,$=a,s=a;return i=n.$get_chart_id(),$=n.$create_chart_div(i),s=n.$chart_spline_script(i,t,e,r),n.$to_html($,s)},h.$$arity=3),t.defs(C,"$create_chart_div",l=function(t){return'<div id="'+t+'"></div>'},l.$$arity=1),t.defs(C,"$get_chart_id",u=function(){return e("chart",m.get("PlainRubyRandom").$uuid())},u.$$arity=0),t.defs(C,"$prepare_data",_=function(t){var e,r,n,i=this,$=a;return $=t["$[]"](0),t.$shift(),(e=(r=t.$map()).$with_index,e.$$p=(n=function(t,e){n.$$s||this;return null==t&&(t=a),null==e&&(e=a),t.$unshift(""+e)},n.$$s=i,n.$$arity=2,n),e).call(r),[t,$]},_.$$arity=1),t.defs(C,"$chart_bar_script",d=function(t,e,r,n){var i=this,$=a,s=a;return $=i.$get_chart_height(n),s=i.$get_chart_width(n),'\n<script type="text/javascript">\nc3.generate({\n  bindto: \'#'+t+"',\n  size: { height: "+$+", width: "+s+" },\n  data: {\n    columns: "+e.$to_s()+",\n    type: 'bar'\n  },\n  axis: {\n    x: {\n      type: 'category',\n      categories: "+r.$to_s()+"\n    }\n  }\n});\n</script>"},d.$$arity=4),t.defs(C,"$chart_line_script",p=function(t,e,r,n){var i=this,$=a,s=a;return $=i.$get_chart_height(n),s=i.$get_chart_width(n),'\n<script type="text/javascript">\nc3.generate({\n  bindto: \'#'+t+"',\n  size: { height: "+$+", width: "+s+" },\n  data: {\n    columns: "+e.$to_s()+"\n  },\n  axis: {\n    x: {\n      type: 'category',\n      categories: "+r.$to_s()+"\n    }\n  }\n});\n</script>"},p.$$arity=4),t.defs(C,"$chart_step_script",g=function(t,e,r,n){var i=this,$=a,s=a;return $=i.$get_chart_height(n),s=i.$get_chart_width(n),'\n<script type="text/javascript">\nc3.generate({\n  bindto: \'#'+t+"',\n  size: { height: "+$+", width: "+s+" },\n  data: {\n    columns: "+e.$to_s()+",\n    type: 'step'\n  },\n  axis: {\n    x: {\n      type: 'category',\n      categories: "+r.$to_s()+"\n    }\n  }\n});\n</script>"},g.$$arity=4),t.defs(C,"$chart_spline_script",f=function(t,e,r,n){var i=this,$=a,s=a;return $=i.$get_chart_height(n),s=i.$get_chart_width(n),'\n<script type="text/javascript">\nc3.generate({\n  bindto: \'#'+t+"',\n  size: { height: "+$+", width: "+s+" },\n  data: {\n    columns: "+e.$to_s()+",\n    type: 'spline'\n  },\n  axis: {\n    x: {\n      type: 'category',\n      categories: "+r.$to_s()+"\n    }\n  }\n});\n</script>"},f.$$arity=4),t.defs(C,"$to_html",y=function(t,e){return"\n    "+t+"\n    "+e+"\n    "},y.$$arity=2),t.defs(C,"$get_chart_height",b=function(t){var e;return(e=t["$key?"]("height"))===a||null==e||e.$$is_boolean&&1!=e?"400":t["$[]"]("height")},b.$$arity=1),t.defs(C,"$get_chart_width",v=function(t){var e;return(e=t["$key?"]("width"))===a||null==e||e.$$is_boolean&&1!=e?"600":t["$[]"]("width")},v.$$arity=1),a&&"get_chart_width"}(n.base,null),function(r,n){function s(){}var c,o,h,l,u=s=i(r,n,"ChartjsChartBuilder",s),_=(u.$$proto,u.$$scope);return t.defs(u,"$line",c=function(t,r,n){var i,s,c,o=this,h=a,l=a,u=a,d=a,p=a,g=a,f=a,y=a,b=a;return h=[$(["r","g","b"],{r:220,g:220,b:220}),$(["r","g","b"],{r:151,g:187,b:205})],l=(i=(s=t).$map,i.$$p=(c=function(e){var r=(c.$$s||this,a),n=a;return null==e&&(e=a),r=h["$[]"](t.$index(e)["$%"](2)),n="rgba("+r["$[]"]("r")+","+r["$[]"]("g")+","+r["$[]"]("b")+",1.0)",'\n{\n  fillColor: "'+n.$gsub("1.0","0.2")+'",\n  strokeColor: "'+n+'",\n  pointColor: "'+n+'",\n  pointHighlightStroke: "'+n+'",\n  pointStrokeColor: "#fff",\n  pointHighlightFill: "#fff",\n  data: '+e.$to_s()+"\n}\n      "},c.$$s=o,c.$$arity=1,c),i).call(s).$join(","),u=e("chart",_.get("PlainRubyRandom").$uuid()),d=o.$get_chart_height(n),p=o.$get_chart_width(n),g='<div style="width:'+p+"px; height:"+d+'px"><canvas id="'+u+'"></canvas></div>',f='var ctx = document.getElementById("'+u+'").getContext("2d");',y="var data = {\n  labels: "+r.$to_s()+",\n  datasets: [\n    "+l+"\n  ]\n};",b="var chart = new Chart(ctx).Line(data, {responsive : true});","\n    "+g+'<script type="text/javascript">window.onload = function() {\n    '+f+"\n    "+y+"\n    "+b+"\n}\n</script>"},c.$$arity=3),t.defs(u,"$prepare_data",o=function(t){var e=a;return e=t["$[]"](0),t.$shift(),[t,e]},o.$$arity=1),t.defs(u,"$get_chart_height",h=function(t){var e;return(e=t["$key?"]("height"))===a||null==e||e.$$is_boolean&&1!=e?"400":t["$[]"]("height")},h.$$arity=1),t.defs(u,"$get_chart_width",l=function(t){var e;return(e=t["$key?"]("width"))===a||null==e||e.$$is_boolean&&1!=e?"600":t["$[]"]("width")},l.$$arity=1),a&&"get_chart_width"}(n.base,null),function(r,n){function $(){}var s,c,o,h,l,u,_,d,p,g,f=$=i(r,n,"ChartistChartBuilder",$),y=(f.$$proto,f.$$scope);return t.defs(f,"$bar",s=function(t,e,r){var n=this,i=a,$=a,s=a;return i=n.$get_chart_id(),$=n.$create_chart_div(i),s=n.$chart_bar_script(i,t,e,r),n.$to_html($,s)},s.$$arity=3),t.defs(f,"$line",c=function(t,e,r){var n=this,i=a,$=a,s=a;return i=n.$get_chart_id(),$=n.$create_chart_div(i),s=n.$chart_line_script(i,t,e,r),n.$to_html($,s)},c.$$arity=3),t.defs(f,"$create_chart_div",o=function(t){return'<div id="'+t+'"class="ct-chart"></div>'},o.$$arity=1),t.defs(f,"$get_chart_id",h=function(){return e("chart",y.get("PlainRubyRandom").$uuid())},h.$$arity=0),t.defs(f,"$prepare_data",l=function(t){var e=a;return e=t["$[]"](0),t.$shift(),[t,e]},l.$$arity=1),t.defs(f,"$chart_bar_script",u=function(t,e,r,n){var i=this,$=a,s=a;return $=i.$get_chart_height(n),s=i.$get_chart_width(n),'\n<script type="text/javascript">\nvar options = {\n  height: \''+$+'\',\n  colors:["#72B3CC", "#8EB33B"]\n};\nvar data = {\n  labels: '+r.$to_s()+",\n  series: "+e.$to_s()+"\n};\nnew Chartist.Bar('#"+t+"', data, options);\n</script>"},u.$$arity=4),t.defs(f,"$chart_line_script",_=function(t,e,r,n){var i=this,$=a,s=a;return $=i.$get_chart_height(n),s=i.$get_chart_width(n),'\n<script type="text/javascript">\nvar options = {\n  height: \''+$+"',\n  width: '"+s+'\',\n  colors:["#72B3CC", "#8EB33B"]\n};\nvar data = {\n  labels: '+r.$to_s()+",\n  series: "+e.$to_s()+"\n};\nnew Chartist.Line('#"+t+"', data, options);\n</script>"},_.$$arity=4),t.defs(f,"$to_html",d=function(t,e){return"\n    "+t+"\n    "+e+"\n    "},d.$$arity=2),t.defs(f,"$get_chart_height",p=function(t){var e;return(e=t["$key?"]("height"))===a||null==e||e.$$is_boolean&&1!=e?"400":t["$[]"]("height")},p.$$arity=1),t.defs(f,"$get_chart_width",g=function(t){var e;return(e=t["$key?"]("width"))===a||null==e||e.$$is_boolean&&1!=e?"600":t["$[]"]("width")},g.$$arity=1),a&&"get_chart_width"}(n.base,null),function(e,r){function n(){}var $,s,c=n=i(e,r,"PlainRubyCSV",n),o=(c.$$proto,c.$$scope);return t.defs(c,"$parse",$=function(t){var e,r,n,i=this,$=a;return $=[],(e=(r=t).$each_line,e.$$p=(n=function(t){var e=(n.$$s||this,a);return null==t&&(t=a),e=t.$chomp(),$.$push(e.$split(","))},n.$$s=i,n.$$arity=1,n),e).call(r),$},$.$$arity=1),t.defs(c,"$read",s=function(t){var e,r,n,i=this,$=a;return $=[],(e=(r=o.get("File").$open(t)).$each,e.$$p=(n=function(t){var e=(n.$$s||this,a);return null==t&&(t=a),e=t.$chomp(),$.$push(e.$split(","))},n.$$s=i,n.$$arity=1,n),e).call(r),$},s.$$arity=1),a&&"read"}(n.base,null),function(r,n){function $(){}var c,o=$=i(r,n,"PlainRubyRandom",$);o.$$proto,o.$$scope;return t.defs(o,"$uuid",c=function(){var t,r,n,a=this;return(t=(r=s(0,8,!0)).$map,t.$$p=(n=function(){var t=n.$$s||this;return e(65,t.$rand(26)).$chr()},n.$$s=a,n.$$arity=0,n),t).call(r).$join()},c.$$arity=0),a&&"uuid"}(n.base,null)},function(t){var e,r,n,a=t.top,i=t,$=t.nil;t.breaker,t.slice;return t.add_stubs(["$==","$require","$register","$basebackend?","$document","$block_macro","$block","$docinfo_processor"]),i.get("RUBY_ENGINE")["$=="]("opal")&&a.$require("chart-block-macro/extension"),(e=(r=i.get("Extensions")).$register,e.$$p=(n=function(){var t,e=n.$$s||this;return(t=e.$document()["$basebackend?"]("html"))===$||null==t||t.$$is_boolean&&1!=t?$:(e.$block_macro(i.get("ChartBlockMacro")),e.$block(i.get("ChartBlockProcessor")),e.$docinfo_processor(i.get("ChartAssetsDocinfoProcessor")))},n.$$s=a,n.$$arity=0,n),e).call(r)}(Opal);
//# sourceMappingURL=asciidoctor-chart-block-macro.min.js.map