{"version":3,"sources":["demand.js"],"names":["global","document","localStorage","JSON","XMLHttpRequest","setTimeout","clearTimeout","config","demand","self","this","context","isInstanceOf","Module","Loader","NULL","dependencies","arrayPrototypeSlice","call","arguments","forEach","resolveDependency","Pledge","all","provide","loader","resolved","type","dPointer","mPointer","path","isTypeOf","STRING_STRING","definition","queue","current","resolve","defereds","modules","defer","pledge","timeout","cached","store","items","process","when","log","FUNCTION_EMPTY","Error","configure","aConfig","key","aCache","cache","aStorage","storage","aDebug","debug","aVersion","version","aTimeout","aLifetime","lifetime","aBase","base","aPattern","pattern","aProbes","probes","aModules","STRING_BOOLEAN","isPositiveInteger","Math","min","max","Pattern","url","isObject","settings","dependency","index","DEMAND_ID","PROVIDE_ID","SETTINGS_ID","DEMAND_PREFIX_SCOPED","scopedDemand","bind","clear","list","assign","id","factory","getTimestamp","Date","addTimestamp","aUrl","resolver","href","value","search","param","aMessage","console","STRING_UNDEFINED","toString","regex","expression","modifier","RegExp","escape","aValue","replace","regexMatchSpecial","removeProtocol","regexMatchProtocol","isAbsolute","aPath","regexIsAbsolute","test","object","module","isFinite","floor","executor","handle","PLEDGE_RESOLVED","reject","PLEDGE_REJECTED","aState","aParameter","state","PLEDGE_PENDING","listener","aHandler","apply","rejected","then","aResolved","aRejected","push","aModule","aStack","message","stack","weight","length","regexPattern","regexUrl","Queue","aParent","defered","DEMAND_PREFIX_HANDLER","aDefinition","aDependencies","regexMatchUrl","regexMatchLsState","storageAdapter","handlerJavascript","storageLocalstorage","Array","prototype","slice","arrayPrototypeConcat","concat","target","getElementsByTagName","createElement","DEMAND_PREFIX","DEMAND_PREFIX_STORAGE","DEMAND_PREFIX_VALIDATOR","STORAGE_PREFIX","STORAGE_SUFFIX_STATE","STORAGE_SUFFIX_VALUE","XHR","XDR","XDomainRequest","regexMatchHandler","regexMatchSourcemap","regexMatchFull","hasRemainingSpace","defaults","handler","match","pointer","isLoader","matches","get","parse","getItem","expires","set","spaceBefore","remainingSpace","setItem","stringify","error","removeItem","indexOf","expired","onPreRequest","onPostRequest","replacement","source","exec","onPostProcess","script","async","text","setAttribute","appendChild","aResolve","aReject","aPledges","checkState","countResolved","countTotal","aPledge","aIndex","race","result","traverse","depth","indention","join","item","remove","add","aLoader","onPreProcess","shift","probe","xhr","retrieve","onprogress","ontimeout","onerror","onabort","onload","status","responseText","open","send","readyState","abort","location","kPointer","keys","Object","adapter","main","exception"],"mappings":"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","file":"demand.js","sourcesContent":["/**\n * Qoopido demand\n *\n * Promise like module loader (XHR) with localStorage caching\n *\n * Copyright (c) 2015 Dirk Lueth\n *\n * Dual licensed under the MIT and GPL licenses.\n *  - http://www.opensource.org/licenses/mit-license.php\n *  - http://www.gnu.org/copyleft/gpl.html\n *\n * @author Dirk Lueth <info@qoopido.com>\n */\n\n;(function(global, document, localStorage, JSON, XMLHttpRequest, setTimeout, clearTimeout, config) {\n\t'use strict';\n\n\tvar // shortcuts\n\t\t\tarrayPrototypeSlice     = Array.prototype.slice,\n\t\t\tarrayPrototypeConcat    = Array.prototype.concat,\n\t\t\ttarget                  = document.getElementsByTagName('head')[0],\n\t\t\tresolver                = document.createElement('a'),\n\t\t// constants\n\t\t\tPROVIDE_ID              = 'provide',\n\t\t\tDEMAND_ID               = 'demand',\n\t\t\tSETTINGS_ID             = 'settings',\n\t\t\tDEMAND_PREFIX           = '/' + DEMAND_ID + '/',\n\t\t\tDEMAND_PREFIX_SCOPED    = DEMAND_PREFIX + 'scoped/',\n\t\t\tDEMAND_PREFIX_HANDLER   = DEMAND_PREFIX + 'handler/',\n\t\t\tDEMAND_PREFIX_STORAGE   = DEMAND_PREFIX + 'storage/',\n\t\t\tDEMAND_PREFIX_VALIDATOR = DEMAND_PREFIX + 'validator/',\n\t\t\tSTORAGE_PREFIX          = '[' + DEMAND_ID + ']',\n\t\t\tSTORAGE_SUFFIX_STATE    = '[state]',\n\t\t\tSTORAGE_SUFFIX_VALUE    = '[value]',\n\t\t\tSTRING_UNDEFINED        = 'undefined',\n\t\t\tSTRING_STRING           = 'string',\n\t\t\tSTRING_BOOLEAN          = 'boolean',\n\t\t\tPLEDGE_PENDING          = 'pending',\n\t\t\tPLEDGE_RESOLVED         = 'resolved',\n\t\t\tPLEDGE_REJECTED         = 'rejected',\n\t\t\tFUNCTION_EMPTY          = function() {},\n\t\t\tNULL                    = null,\n\t\t\tXHR                     = XMLHttpRequest,\n\t\t\tXDR                     = 'XDomainRequest' in global &&  global.XDomainRequest || XHR,\n\t\t// regular expressions\n\t\t\tregexIsAbsolute         = /^\\//i,\n\t\t\tregexMatchHandler       = /^([-\\w]+\\/?)+!/,\n\t\t\tregexMatchSpecial       = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\n\t\t\tregexMatchSourcemap     = /\\/\\/#\\s+sourceMappingURL\\s*=\\s*(.+?)\\.map/g,\n\t\t\tregexMatchProtocol      = /^http(s?):/,\n\t\t\tregexMatchFull          = /^(http(s?):|)\\/\\//,\n\t\t\tregexMatchUrl, regexMatchLsState,\n\t\t// flags\n\t\t\thasRemainingSpace       = localStorage && 'remainingSpace' in localStorage,\n\t\t// general storage & objects\n\t\t\tdefaults                = { cache: true, storage: 'localstorage', handler: 'js', debug: false, version: '1.0.0', lifetime: 0, timeout: 5, base: '/' },\n\t\t\tmodules                 = {},\n\t\t\tdefereds                = {},\n\t\t\tpattern                 = {},\n\t\t\tprobes                  = {},\n\t\t\tsettings                = {},\n\t\t\tqueue, resolve, storageAdapter,\n\t\t// handler\n\t\t\thandlerJavascript,\n\t\t// storage\n\t\t\tstorageLocalstorage,\n\t\t// configuration\n\t\t\tbase, cache, storage, debug, timeout, version, lifetime;\n\n\t/**\n\t * demand required modules\n\t *\n\t * Will take any number of string arguments and return a Pledge.all\n\t * that resolves when all dependencies are resolved and rejects when\n\t * at least one dependency is rejected. Both, the resolved and\n\t * rejected callbacks will get all dependencies resolved or rejected\n\t * as arguments.\n\t *\n\t * If the scope of the call is of type \"Module\" relative paths are\n\t * resolved in relation to the parent module.\n\t *\n\t * @param {...String} dependency\n\t *\n\t * @returns {Pledge}\n\t *\n\t * @exports /demand\n\t */\n\tfunction demand() {\n\t\tvar self         = this,\n\t\t\tcontext      = isInstanceOf(self, Module) || isInstanceOf(self, Loader) ? self : NULL,\n\t\t\tdependencies = arrayPrototypeSlice.call(arguments);\n\n\t\tdependencies.forEach(resolveDependency, context);\n\n\t\treturn Pledge.all(dependencies);\n\t}\n\n\t/**\n\t * provide modules\n\t *\n\t * Will either take two arguments, a \"path\" as a string first\n\t * and a \"definition\" function second or only a \"definition\"\n\t * function in case of an anonymous provide from a loaded module.\n\t *\n\t * In case of an anonymous provide it will be matched against\n\t * the queue to find the loader being resolved by this provide.\n\t * In case there is no loader in queue an error is thrown.\n\t *\n\t * When provide detects a duplicate a warning will be logged to\n\t * console in case the \"debug\" configuration option is set to true.\n\t *\n\t * @param {String} [path]\n\t * @param {Function} definition\n\t *\n\t * @returns {void|{when: Function}}\n\t *\n\t * @exports /provide\n\t */\n\tfunction provide() {\n\t\tvar self       = this,\n\t\t\tcontext    = isInstanceOf(self, Module) || isInstanceOf(self, Loader) ? self : NULL,\n\t\t\tpath       = isTypeOf(arguments[0], STRING_STRING) ? arguments[0] : NULL,\n\t\t\tdefinition = !path ? arguments[0] : arguments[1],\n\t\t\tloader, dependencies, resolved, type, dPointer, mPointer;\n\n\t\tif(queue.current && (!path || path === queue.current.path)) {\n\t\t\tloader = queue.current;\n\t\t\tpath   = loader.type + '!' + loader.path;\n\t\t}\n\n\t\tif(path) {\n\t\t\tresolved = resolve.path(path, context);\n\t\t\ttype     = resolved.type;\n\t\t\tpath     = resolved.path;\n\t\t\tdPointer = defereds[type] || (defereds[type] = {});\n\t\t\tmPointer = modules[type] || (modules[type] = {});\n\n\t\t\tif(!mPointer[path] || loader) {\n\t\t\t\tif(!loader) {\n\t\t\t\t\tdPointer[path] = Pledge.defer();\n\t\t\t\t\tmPointer[path] = dPointer[path].pledge;\n\t\t\t\t}\n\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tnew Module(type + '!' + path, definition, dependencies);\n\n\t\t\t\t\tif(loader) {\n\t\t\t\t\t\tloader.timeout = clearTimeout(loader.timeout);\n\n\t\t\t\t\t\t!loader.cached && loader.store();\n\t\t\t\t\t\tqueue.items > 0 && queue.process();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn { when: function() { dependencies = arguments; } };\n\t\t\t} else {\n\t\t\t\tlog('duplicate found for module ' + resolved.path);\n\n\t\t\t\treturn { when: FUNCTION_EMPTY };\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error('unspecified anonymous provide');\n\t\t}\n\t}\n\n\t/**\n\t * alter demand configuration\n\t *\n\t * @param {Object} aConfig\n\t */\n\tfunction configure(aConfig) {\n\t\tvar aCache    = aConfig.cache,\n\t\t\taStorage  = aConfig.storage,\n\t\t\taDebug    = aConfig.debug,\n\t\t\taVersion  = aConfig.version,\n\t\t\taTimeout  = aConfig.timeout,\n\t\t\taLifetime = aConfig.lifetime,\n\t\t\taBase     = aConfig.base,\n\t\t\taPattern  = aConfig.pattern,\n\t\t\taProbes   = aConfig.probes,\n\t\t\taModules  = aConfig.modules,\n\t\t\tkey;\n\n\t\tcache   = isTypeOf(aCache, STRING_BOOLEAN)  ? aCache   : cache;\n\t\tstorage = isTypeOf(aStorage, STRING_STRING) ? aStorage : storage;\n\t\tdebug   = isTypeOf(aDebug, STRING_BOOLEAN)  ? aDebug   : debug;\n\t\tversion = isTypeOf(aVersion, STRING_STRING) ? aVersion : version;\n\n\t\tif(isPositiveInteger(aTimeout)) {\n\t\t\ttimeout   = Math.min(Math.max(aTimeout, 2), 10) * 1000;\n\t\t}\n\n\t\tif(isPositiveInteger(aLifetime)) {\n\t\t\tlifetime = aLifetime * 1000;\n\t\t}\n\n\t\tif(isTypeOf(aBase, STRING_STRING)) {\n\t\t\tbase = pattern.base = new Pattern('', resolve.url(aBase));\n\t\t}\n\n\t\tif(isObject(aPattern)) {\n\t\t\tfor(key in aPattern) {\n\t\t\t\tkey !== 'base' && (pattern[key] = new Pattern(key, aPattern[key]));\n\t\t\t}\n\t\t}\n\n\t\tif(isObject(aProbes)) {\n\t\t\tfor(key in aProbes) {\n\t\t\t\tprobes[key] = aProbes[key];\n\t\t\t}\n\t\t}\n\n\t\tif(isObject(aModules)) {\n\t\t\tfor(key in aModules) {\n\t\t\t\tsettings[key] = aModules[key];\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * resolve dependency names to existing Modules or a new Loader\n\t *\n\t * @param {String} dependency\n\t * @param {Number} index\n\t * @param {Object[]} dependencies\n\t *\n\t * @this Module|Loader\n\t */\n\tfunction resolveDependency(dependency, index, dependencies) {\n\t\tvar self     = this,\n\t\t\tresolved = resolve.path(dependency, self),\n\t\t\ttype     = resolved.type,\n\t\t\tpath     = resolved.path,\n\t\t\tmPointer = modules[type] || (modules[type] = {}),\n\t\t\tdefinition;\n\n\t\tif(!defereds[type]) {\n\t\t\tdefereds[type] = {};\n\t\t}\n\n\t\tif(self && (dependency === DEMAND_ID || dependency === PROVIDE_ID || dependency === SETTINGS_ID) && !mPointer[path]) {\n\t\t\tswitch(dependency) {\n\t\t\t\tcase DEMAND_ID:\n\t\t\t\t\tpath = DEMAND_PREFIX_SCOPED + DEMAND_ID + path;\n\n\t\t\t\t\tdefinition = function() {\n\t\t\t\t\t\tvar scopedDemand = demand.bind(self);\n\n\t\t\t\t\t\tscopedDemand.configure = demand.configure;\n\t\t\t\t\t\tscopedDemand.clear     = demand.clear;\n\t\t\t\t\t\tscopedDemand.list      = demand.list;\n\n\t\t\t\t\t\treturn scopedDemand;\n\t\t\t\t\t};\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase PROVIDE_ID:\n\t\t\t\t\tpath = DEMAND_PREFIX_SCOPED + PROVIDE_ID + path;\n\n\t\t\t\t\tdefinition = function() {\n\t\t\t\t\t\treturn provide.bind(self);\n\t\t\t\t\t};\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase SETTINGS_ID:\n\t\t\t\t\tpath = DEMAND_PREFIX_SCOPED + SETTINGS_ID + self.path;\n\n\t\t\t\t\tdefinition = function() {\n\t\t\t\t\t\treturn settings[self.path] || NULL;\n\t\t\t\t\t};\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tprovide(path, definition);\n\t\t}\n\n\t\tdependencies[index] = mPointer[path] || (mPointer[path] = (new Loader(dependency, self)).pledge);\n\t}\n\n\t/**\n\t * Shortcut to globally provide internal functions as modules\n\t *\n\t * @param {String} id\n\t * @param {Function} factory\n\t */\n\tfunction assign(id, factory) {\n\t\tprovide(id, function() { return factory; });\n\t}\n\n\t/**\n\t * Get the current timestamp\n\t *\n\t * @returns {Number}\n\t */\n\tfunction getTimestamp() {\n\t\treturn +new Date();\n\t}\n\n\t/**\n\t * add timestamp to a given URL\n\t *\n\t * @param {String} aUrl\n\t *\n\t * @returns {String}\n\t */\n\tfunction addTimestamp(aUrl) {\n\t\tresolver.href = aUrl;\n\n\t\tvar value = resolver.search,\n\t\t\tparam = 'demand[timestamp]=' + getTimestamp();\n\n\t\tresolver.search += (value && value !== '?') ? '&' + param : '?' + param;\n\n\t\treturn resolver.href;\n\t}\n\n\t/**\n\t * log a message to the console\n\t *\n\t * @param {String|Error} aMessage\n\t */\n\tfunction log(aMessage) {\n\t\tvar type = (isInstanceOf(aMessage, Error)) ? 'error' : 'warn';\n\n\t\tif(!isTypeOf(console, STRING_UNDEFINED) && (debug || type !== 'warn')) {\n\t\t\tconsole[type](aMessage.toString());\n\t\t}\n\t}\n\n\t/**\n\t * generate a new RegExp\n\t *\n\t * @param {String} expression\n\t * @param {{String}} [modifier]\n\t *\n\t * @returns {RegExp}\n\t */\n\tfunction regex(expression, modifier) {\n\t\treturn new RegExp(expression, modifier);\n\t}\n\n\t/**\n\t * escape a string to be used in a RegExp\n\t *\n\t * @param {String} aValue\n\t *\n\t * @returns {String}\n\t */\n\tfunction escape(aValue) {\n\t\treturn aValue.replace(regexMatchSpecial, '\\\\$&');\n\t}\n\n\t/**\n\t * remove the protocol portion from any URL\n\t *\n\t * @param {String} url\n\t *\n\t * @returns {String}\n\t */\n\tfunction removeProtocol(url) {\n\t\treturn url.replace(regexMatchProtocol, '');\n\t}\n\n\t/**\n\t * check whether a given path is absolute\n\t *\n\t * @param {String} aPath\n\t *\n\t * @returns {Boolean}\n\t */\n\tfunction isAbsolute(aPath) {\n\t\treturn regexIsAbsolute.test(aPath);\n\t}\n\n\t/**\n\t * check whether a passed object is an instance of a certain type\n\t *\n\t * @param {*} object\n\t * @param {*} module\n\t *\n\t * @returns {Boolean}\n\t *\n\t * @exports /demand/validator/isInstanceOf\n\t */\n\tfunction isInstanceOf(object, module) {\n\t\treturn object instanceof module;\n\t}\n\n\t/**\n\t * check wheter a given object is of a certain type\n\t *\n\t * @param {*} object\n\t * @param {String} type\n\t *\n\t * @returns {Boolean}\n\t *\n\t * @exports /demand/validator/isTypeOf\n\t */\n\tfunction isTypeOf(object, type) {\n\t\treturn typeof object === type;\n\t}\n\n\t/**\n\t * check whether a given object is an object\n\t *\n\t * @param {*} object\n\t *\n\t * @returns {Boolean}\n\t *\n\t * @exports /demand/validator/isObject\n\t */\n\tfunction isObject(object) {\n\t\treturn object && isTypeOf(object, 'object');\n\t}\n\n\t/**\n\t * check whether a given value is a positive integer\n\t *\n\t * @param {*} value\n\t *\n\t * @returns {Boolean}\n\t *\n\t * @exports /demand/validator/isPositiveInteger\n\t */\n\tfunction isPositiveInteger(value) {\n\t\treturn isTypeOf(value, 'number') && isFinite(value) && Math.floor(value) === value && value >= 0;\n\t}\n\n\tresolve = {\n\t\t/**\n\t\t * resolve any given url\n\t\t *\n\t\t * @param {String} aUrl\n\t\t *\n\t\t * @returns {String}\n\t\t */\n\t\turl: function(aUrl) {\n\t\t\tresolver.href = aUrl;\n\n\t\t\treturn resolver.href;\n\t\t},\n\t\t/**\n\t\t * resolve any given path\n\t\t *\n\t\t * if context is either \"Loader\" or \"Module\" nothing will\n\t\t * be returned but instead \"handler\" and \"path\" will be\n\t\t * set directly on context. In case of \"Loader\" an\n\t\t * additional property \"url\" will be set as well.\n\t\t *\n\t\t * @param {String} aPath\n\t\t * @param {Module|Loader} [aParent]\n\t\t *\n\t\t * @returns {void|{type: String, path: String}}\n\t\t */\n\t\tpath: function(aPath, aParent) {\n\t\t\tvar self     = this,\n\t\t\t\tpointer  = aPath.match(regexMatchHandler) || defaults.handler,\n\t\t\t\tisLoader = isInstanceOf(self, Loader),\n\t\t\t\tkey, match;\n\n\t\t\tif(!isTypeOf(pointer, STRING_STRING)) {\n\t\t\t\taPath   = aPath.replace(regex('^' + escape(pointer[0])), '');\n\n\t\t\t\tpointer = pointer[0].slice(0, -1);\n\t\t\t}\n\n\t\t\tif(!regexMatchFull.test(aPath)) {\n\t\t\t\tif(!isAbsolute(aPath)) {\n\t\t\t\t\t\taPath = '/' + resolve.url(((aParent && aParent.path && resolve.url(aParent.path + '/../')) || '/') + aPath).replace(regexMatchUrl, '');\n\t\t\t\t}\n\n\t\t\t\tfor(key in pattern) {\n\t\t\t\t\tpattern[key].matches(aPath) && (!match || match.weight < pattern[key].weight) && (match = pattern[key]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(isLoader || isInstanceOf(self, Module)) {\n\t\t\t\tself.type = pointer;\n\t\t\t\tself.path = aPath;\n\n\t\t\t\tisLoader && (self.url = match ? removeProtocol(resolve.url(match.process(aPath))) : aPath);\n\t\t\t} else {\n\t\t\t\treturn { type: pointer, path: aPath };\n\t\t\t}\n\t\t}\n\t};\n\n\tstorageLocalstorage = {\n\t\t/**\n\t\t * retrieve cache for a given path and URL\n\t\t *\n\t\t * @param {String} aPath\n\t\t * @param {String} aUrl\n\t\t *\n\t\t * @returns {void|String}\n\t\t */\n\t\tget: function(aPath, aUrl) {\n\t\t\tvar id, state;\n\n\t\t\tif(localStorage) {\n\t\t\t\tid    = STORAGE_PREFIX + '[' + aPath + ']';\n\t\t\t\tstate = JSON.parse(localStorage.getItem(id + STORAGE_SUFFIX_STATE));\n\n\t\t\t\tif(state && state.version === version && state.url === aUrl && (state.expires === 0 || state.expires > getTimestamp())) {\n\t\t\t\t\treturn localStorage.getItem(id + STORAGE_SUFFIX_VALUE);\n\t\t\t\t} else {\n\t\t\t\t\tstorageLocalstorage.clear.path(aPath);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * store cache for a given path, value and url\n\t\t *\n\t\t * @param {String} aPath\n\t\t * @param {String} aValue\n\t\t * @param {String} aUrl\n\t\t */\n\t\tset: function(aPath, aValue, aUrl) {\n\t\t\tvar id, spaceBefore;\n\n\t\t\tif(localStorage) {\n\t\t\t\tid = STORAGE_PREFIX + '[' + aPath + ']';\n\n\t\t\t\ttry {\n\t\t\t\t\tspaceBefore = hasRemainingSpace ? localStorage.remainingSpace : NULL;\n\n\t\t\t\t\tlocalStorage.setItem(id + STORAGE_SUFFIX_VALUE, aValue);\n\t\t\t\t\tlocalStorage.setItem(id + STORAGE_SUFFIX_STATE, JSON.stringify({ version: version, expires: lifetime > 0 ? getTimestamp() + lifetime : 0, url: aUrl }));\n\n\t\t\t\t\t// strict equality check with \"===\" is required due to spaceBefore might be \"0\"\n\t\t\t\t\tif(spaceBefore !== NULL && localStorage.remainingSpace === spaceBefore) {\n\t\t\t\t\t\tthrow 'QUOTA_EXCEEDED_ERR';\n\t\t\t\t\t}\n\t\t\t\t} catch(error) {\n\t\t\t\t\tlog('unable to cache module ' + aPath);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * clear either a given path, all cached  or expired resources\n\t\t *\n\t\t * @param {String|Boolean} [aPath]\n\t\t */\n\t\tclear: {\n\t\t\tpath: function(aPath) {\n\t\t\t\tvar id;\n\n\t\t\t\tif(localStorage) {\n\t\t\t\t\tid = STORAGE_PREFIX + '[' + aPath + ']';\n\n\t\t\t\t\tlocalStorage.removeItem(id + STORAGE_SUFFIX_STATE);\n\t\t\t\t\tlocalStorage.removeItem(id + STORAGE_SUFFIX_VALUE);\n\t\t\t\t}\n\t\t\t},\n\t\t\tall: function() {\n\t\t\t\tvar key;\n\n\t\t\t\tif(localStorage) {\n\t\t\t\t\tfor(key in localStorage) {\n\t\t\t\t\t\tkey.indexOf(STORAGE_PREFIX) === 0 && (localStorage.removeItem(key));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\texpired: function() {\n\t\t\t\tvar key, match, state;\n\n\t\t\t\tif(localStorage) {\n\t\t\t\t\tfor(key in localStorage) {\n\t\t\t\t\t\tmatch = key.match(regexMatchLsState);\n\n\t\t\t\t\t\tif(match) {\n\t\t\t\t\t\t\tstate = JSON.parse(localStorage.getItem(STORAGE_PREFIX + '[' + match[1] + ']' + STORAGE_SUFFIX_STATE));\n\n\t\t\t\t\t\t\tif(state && state.expires > 0 && state.expires <= getTimestamp()) {\n\t\t\t\t\t\t\t\tstorageLocalstorage.clear.path(match[1]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\thandlerJavascript = {\n\t\t/**\n\t\t * Enables modification of the URL that gets requested\n\t\t *\n\t\t * @this Loader\n\t\t */\n\t\tonPreRequest: function() {\n\t\t\tvar self = this,\n\t\t\t\turl  = self.url;\n\n\t\t\tself.url = url.slice(-3) !== '.js' ? url + '.js' : url;\n\t\t},\n\t\t/**\n\t\t * handles modifying of JavaScript module's source prior to caching\n\t\t *\n\t\t * Rewrites sourcemap URL to an absolute URL in relation to the URL the module was loaded from\n\t\t *\n\t\t * @this Loader\n\t\t */\n\t\tonPostRequest: function() {\n\t\t\tvar self   = this,\n\t\t\t\turl    = self.url,\n\t\t\t\tsource = self.source,\n\t\t\t\tmatch, replacement;\n\n\t\t\twhile(match = regexMatchSourcemap.exec(source)) {\n\t\t\t\treplacement = removeProtocol(resolve.url(url + '/../' + match[1]));\n\t\t\t\tsource      = source.replace(match[0], '//# sourcemap=' + replacement + '.map');\n\t\t\t}\n\n\t\t\tself.source = source;\n\t\t},\n\t\t/**\n\t\t * handles resolving of JavaScript modules\n\t\t *\n\t\t * @this Loader\n\t\t */\n\t\tonPostProcess: function() {\n\t\t\tvar self   = this,\n\t\t\t\tsource = self.source,\n\t\t\t\tscript;\n\n\t\t\tscript       = document.createElement('script');\n\t\t\tscript.async = true;\n\t\t\tscript.text  = source;\n\n\t\t\tscript.setAttribute('demand-type', self.type);\n\t\t\tscript.setAttribute('demand-path', self.path);\n\n\t\t\ttarget.appendChild(script);\n\t\t}\n\t};\n\n\t/**\n\t * provides promise like behaviour\n\t *\n\t * unlike native Promises and polyfills a Pledge\n\t * can be resolved and rejected with multiple values\n\t * which will all get applied\n\t *\n\t * @param {Function} executor\n\t *\n\t * @constructor\n\t * @exports /pledge\n\t */\n\tfunction Pledge(executor) {\n\t\tvar self     = this,\n\t\t\tlistener = { resolved: [], rejected: [] };\n\n\t\tfunction resolve() {\n\t\t\thandle(PLEDGE_RESOLVED, arguments);\n\t\t}\n\n\t\tfunction reject() {\n\t\t\thandle(PLEDGE_REJECTED, arguments);\n\t\t}\n\n\t\tfunction handle(aState, aParameter) {\n\t\t\tif(self.state === PLEDGE_PENDING) {\n\t\t\t\tself.state = aState;\n\t\t\t\tself.value = aParameter;\n\n\t\t\t\tlistener[aState].forEach(function(aHandler) {\n\t\t\t\t\taHandler.apply(NULL, aParameter);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.then = function(aResolved, aRejected) {\n\t\t\tif(self.state === PLEDGE_PENDING) {\n\t\t\t\taResolved && listener[PLEDGE_RESOLVED].push(aResolved);\n\t\t\t\taRejected && listener[PLEDGE_REJECTED].push(aRejected);\n\t\t\t} else {\n\t\t\t\tswitch(self.state) {\n\t\t\t\t\tcase PLEDGE_RESOLVED:\n\t\t\t\t\t\taResolved && aResolved.apply(NULL, self.value);\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PLEDGE_REJECTED:\n\t\t\t\t\t\taRejected && aRejected.apply(NULL, self.value);\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\texecutor(resolve, reject);\n\t}\n\n\tPledge.prototype = {\n\t\tstate:  PLEDGE_PENDING,\n\t\tvalue:  NULL,\n\t\tthen:   NULL\n\t};\n\n\t/**\n\t * provides Promise.defer like behaviour\n\t *\n\t * @returns {Object}\n\t */\n\tPledge.defer = function() {\n\t\tvar self = {};\n\n\t\tself.pledge = new Pledge(function(aResolve, aReject) {\n\t\t\tself.resolve = aResolve;\n\t\t\tself.reject  = aReject;\n\t\t});\n\n\t\treturn self;\n\t};\n\n\t/**\n\t * provides Promise.all like behaviour\n\t *\n\t * unlike native Promise.all Pledge.all will not reject on the\n\t * first rejected Pledge but when all Pledges ere either\n\t * resolved or rejected. Rejection callbacks will get passed\n\t * all rejected reasons, not only the first one.\n\t *\n\t * @param {Object[]} aPledges\n\t *\n\t * @returns {Pledge}\n\t */\n\tPledge.all = function(aPledges) {\n\t\tvar defered       = Pledge.defer(),\n\t\t\tpledge        = defered.pledge,\n\t\t\tresolved      = [],\n\t\t\trejected      = [],\n\t\t\tcountTotal    = aPledges.length,\n\t\t\tcountResolved = 0;\n\n\t\tfunction checkState() {\n\t\t\tif(countResolved === countTotal) {\n\t\t\t\tdefered.resolve.apply(NULL, arrayPrototypeConcat.apply([], resolved));\n\t\t\t} else if(rejected.length + countResolved === countTotal) {\n\t\t\t\tdefered.reject.apply(NULL, arrayPrototypeConcat.apply([], rejected));\n\t\t\t}\n\t\t}\n\n\t\taPledges.forEach(function(aPledge, aIndex) {\n\t\t\taPledge.then(\n\t\t\t\tfunction() {\n\t\t\t\t\tresolved[aIndex] = arrayPrototypeSlice.call(arguments);\n\n\t\t\t\t\tcountResolved++;\n\n\t\t\t\t\tcheckState();\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\trejected.push(arrayPrototypeSlice.call(arguments));\n\n\t\t\t\t\tcheckState();\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\treturn pledge;\n\t};\n\n\t/**\n\t * provides Promise.race like behaviour\n\t *\n\t * @param {Object[]} aPledges\n\t *\n\t * @returns {Pledge}\n\t */\n\tPledge.race = function(aPledges) {\n\t\tvar defered = Pledge.defer();\n\n\t\taPledges.forEach(function(aPledge) {\n\t\t\taPledge.then(\n\t\t\t\tdefered.resolve,\n\t\t\t\tdefered.reject\n\t\t\t);\n\t\t});\n\n\t\treturn defered.pledge;\n\t};\n\n\t/**\n\t * internal error class\n\t *\n\t * @param {String} aMessage\n\t * @param {String} [aModule]\n\t * @param {Object[]} [aStack]\n\t *\n\t * @constructor\n\t */\n\tfunction Error(aMessage, aModule, aStack) {\n\t\tvar self = this;\n\n\t\tself.message = aMessage;\n\n\t\taModule && (self.module  = aModule);\n\t\taStack && (self.stack = arrayPrototypeSlice.call(aStack));\n\t}\n\n\tError.prototype = {\n\t\tmessage: NULL,\n\t\tmodule:  NULL,\n\t\tstack:   NULL,\n\t\t/**\n\t\t * handles output to console\n\t\t *\n\t\t * @returns {String}\n\t\t */\n\t\ttoString: function() {\n\t\t\tvar self   = this,\n\t\t\t\tresult = STORAGE_PREFIX + ' ' + self.message + ' ' + (self.module || '');\n\n\t\t\tif(self.stack) {\n\t\t\t\tresult = Error.traverse(self.stack, result, 1);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t};\n\n\t/**\n\t * handles recursion of stack on output to console\n\t *\n\t * @param {Object[]} stack\n\t * @param {String} value\n\t * @param {Number} depth\n\t *\n\t * @returns {String}\n\t */\n\tError.traverse = function(stack, value, depth) {\n\t\tvar indention = new Array(depth + 1).join(' ');\n\n\t\tstack.forEach(function(item) {\n\t\t\tvalue += '\\n' + indention + '> ' + item.message + ' ' + item.module;\n\n\t\t\tif(item.stack) {\n\t\t\t\tvalue = Error.traverse(item.stack, value, depth + 1);\n\t\t\t}\n\t\t});\n\n\t\treturn value;\n\t};\n\n\t/**\n\t * abstraction for pattern matching of paths\n\t *\n\t * @param {String} aPattern\n\t * @param {String} aUrl\n\t *\n\t * @constructor\n\t */\n\tfunction Pattern(aPattern, aUrl) {\n\t\tvar self = this;\n\n\t\tself.weight       = aPattern.length;\n\t\tself.url          = resolve.url(aUrl);\n\t\tself.regexPattern = regex('^' + escape(aPattern));\n\t\tself.regexUrl     = regex('^' + escape(aUrl));\n\t}\n\n\tPattern.prototype = {\n\t\tweight:       0,\n\t\turl:          NULL,\n\t\tregexPattern: NULL,\n\t\tregexUrl:     NULL,\n\t\t/**\n\t\t * check whether a given path matches the pattern\n\t\t *\n\t\t * @param {String} aPath\n\t\t *\n\t\t * @returns {Boolean}\n\t\t */\n\t\tmatches: function(aPath) {\n\t\t\treturn this.regexPattern.test(aPath);\n\t\t},\n\t\t/**\n\t\t * remove this pattern's URL from a given URL\n\t\t *\n\t\t * @param {String} aUrl\n\t\t *\n\t\t * @returns {String}\n\t\t */\n\t\tremove: function(aUrl) {\n\t\t\treturn aUrl.replace(this.regexUrl, '');\n\t\t},\n\t\t/**\n\t\t * process this pattern for a given path\n\t\t *\n\t\t * @param {String} aPath\n\t\t *\n\t\t * @returns {String}\n\t\t */\n\t\tprocess: function(aPath) {\n\t\t\tvar self = this;\n\n\t\t\treturn aPath.replace(self.regexPattern, self.url);\n\t\t}\n\t};\n\n\t/**\n\t * Queue handling for anonymous (loaded) modules\n\t *\n\t * @constructor\n\t */\n\tfunction Queue() {\n\t\tvar self = this;\n\n\t\tself.current = NULL;\n\t\tself.queue   = [];\n\t}\n\n\tQueue.prototype = {\n\t\tcurrent: NULL,\n\t\tqueue:   NULL,\n\t\titems:   0,\n\t\t/**\n\t\t * add an item to the queue\n\t\t *\n\t\t * @param {Loader} aLoader\n\t\t */\n\t\tadd: function(aLoader) {\n\t\t\tvar self    = this,\n\t\t\t\tqueue   = self.queue,\n\t\t\t\thandler = aLoader.handler;\n\n\t\t\thandler.onPreProcess && handler.onPreProcess(aLoader);\n\n\t\t\tqueue.push(aLoader);\n\n\t\t\tself.items++;\n\n\t\t\tself.items === 1 && self.process();\n\t\t},\n\t\t/**\n\t\t * process the queue\n\t\t */\n\t\tprocess: function() {\n\t\t\tvar self    = this,\n\t\t\t\tcurrent = self.current,\n\t\t\t\tqueue   = self.queue,\n\t\t\t\tdefered, path, handler, result;\n\n\t\t\tif(current) {\n\t\t\t\tself.current = NULL;\n\n\t\t\t\tqueue.shift();\n\t\t\t\tself.items--;\n\t\t\t}\n\n\t\t\tif(self.items) {\n\t\t\t\tcurrent = self.current = self.queue[0];\n\t\t\t\tdefered = current.defered;\n\t\t\t\tpath    = current.path;\n\t\t\t\thandler = current.handler;\n\n\t\t\t\thandler.onPostProcess && handler.onPostProcess.call(current);\n\n\t\t\t\tif(current.probe && current.pledge.state === PLEDGE_PENDING) {\n\t\t\t\t\tif(result = current.probe()) {\n\t\t\t\t\t\tprovide(function() { return result; });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdefered.reject(new Error('probe failed for module', path));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * module loader\n\t *\n\t * @param {String} aPath\n\t * @param {Module} [aParent]\n\t *\n\t * @constructor\n\t */\n\tfunction Loader(aPath, aParent) {\n\t\tvar self    = this,\n\t\t\tdefered, pledge;\n\n\t\tresolve.path.call(self, aPath, aParent);\n\n\t\tdefered = self.defered = defereds[self.type][self.path] || (defereds[self.type][self.path] = Pledge.defer());\n\t\tpledge  = self.pledge  = defered.pledge;\n\n\t\taParent && pledge.then(NULL, log);\n\n\t\tdemand(DEMAND_PREFIX_HANDLER + self.type)\n\t\t\t.then(\n\t\t\t\tself.process.bind(self),\n\t\t\t\tdefered.reject\n\t\t\t);\n\t}\n\n\tLoader.prototype = {\n\t\thandler: NULL,\n\t\turl:     NULL,\n\t\tdefered: NULL,\n\t\tpledge:  NULL,\n\t\tcached:  NULL,\n\t\tsource:  NULL,\n\t\ttimeout: NULL,\n\t\tprobe:   NULL,\n\t\tprocess: function(handler) {\n\t\t\tvar self    = this,\n\t\t\t\tdefered = self.defered,\n\t\t\t\txhr;\n\n\t\t\thandler.onPreRequest && handler.onPreRequest.call(self);\n\t\t\tself.retrieve();\n\n\t\t\tself.handler = handler;\n\t\t\tself.probe   = probes[self.path];\n\n\t\t\tif(self.cached || !self.url) {\n\t\t\t\tqueue.add(self);\n\t\t\t} else {\n\t\t\t\txhr            = regexMatchUrl.test(self.url) ? new XHR() : new XDR();\n\t\t\t\txhr.onprogress = FUNCTION_EMPTY;\n\t\t\t\txhr.ontimeout  = xhr.onerror = xhr.onabort = function() { defered.reject(new Error('unable to load module', self.path)); };\n\t\t\t\txhr.onload     = function() {\n\t\t\t\t\tself.timeout = clearTimeout(self.timeout);\n\n\t\t\t\t\tif(!('status' in xhr) || xhr.status === 200) {\n\t\t\t\t\t\tself.source = xhr.responseText;\n\n\t\t\t\t\t\thandler.onPostRequest && handler.onPostRequest.call(self);\n\n\t\t\t\t\t\tqueue.add(self);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdefered.reject(new Error('unable to load module', self.path));\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\txhr.open('GET', addTimestamp(self.url), true);\n\t\t\t\txhr.send();\n\n\t\t\t\tself.timeout = setTimeout(function() { if(xhr.readyState < 4) { xhr.abort(); } }, timeout);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * store loaders result in localStorage\n\t\t */\n\t\tstore: function() {\n\t\t\tvar self = this;\n\n\t\t\tcache && self.source && storageAdapter.set(self.path, self.source, self.url);\n\t\t},\n\t\t/**\n\t\t * retrieve cache for loader\n\t\t */\n\t\tretrieve: function() {\n\t\t\tvar self   = this,\n\t\t\t\tsource = cache && storageAdapter.get(self.path, self.url),\n\t\t\t\tcached = self.cached = !!(source);\n\n\t\t\tcached && (self.source = source);\n\t\t}\n\t};\n\n\t/**\n\t * module\n\t *\n\t * @param {String} aPath\n\t * @param {Function} aDefinition\n\t * @param {Object[]} aDependencies\n\t *\n\t * @constructor\n\t */\n\tfunction Module(aPath, aDefinition, aDependencies) {\n\t\tvar self = this,\n\t\t\tpath, defered, pledge;\n\n\t\tresolve.path.call(self, aPath);\n\n\t\tpath    = self.path;\n\t\tdefered = defereds[self.type][path];\n\t\tpledge  = self.pledge = defered.pledge;\n\n\t\tpledge.then(NULL, function() { log(new Error('unable to resolve module', path, arguments));});\n\n\t\tif(aDependencies && aDependencies.length > 0) {\n\t\t\tdemand\n\t\t\t\t.apply(self, aDependencies)\n\t\t\t\t.then(\n\t\t\t\t\tfunction() { defered.resolve(aDefinition.apply(NULL, arguments)); },\n\t\t\t\t\tfunction() { defered.reject(new Error('unable to resolve dependencies for', path, arguments)); }\n\t\t\t\t);\n\t\t} else {\n\t\t\tdefered.resolve(aDefinition());\n\t\t}\n\t}\n\n\tModule.prototype = {\n\t\ttype:   NULL,\n\t\tpath:   NULL,\n\t\tpledge: NULL\n\t};\n\n\t// initialization\n\t\t// regex\n\t\t\tregexMatchUrl     = regex('^' + escape(resolve.url('/')));\n\t\t\tregexMatchLsState = regex('^' + escape(STORAGE_PREFIX + '\\[(.+?)\\]' + STORAGE_SUFFIX_STATE + '$'));\n\n\t\t// create queue\n\t\t\tqueue = new Queue();\n\n\t\t// add pattern for \"/demand\" to point to original demand URL\n\t\t\tpattern['/' + DEMAND_ID] = new Pattern('/' + DEMAND_ID, resolve.url(((config && config.url) || location.href) + '/../').slice(0, -1));\n\n\t\t// configure\n\t\t\tconfigure(defaults) && config && config.settings && configure(config.settings);\n\n\t\t// register in global scope\n\t\t\tdemand.configure  = configure;\n\t\t\tdemand.list       = function(state) {\n\t\t\t\tvar keys = {},\n\t\t\t\t\thandler, kPointer, mPointer, path;\n\n\t\t\t\tfor(handler in modules) {\n\t\t\t\t\tif(state) {\n\t\t\t\t\t\tkPointer = keys[handler] = [];\n\t\t\t\t\t\tmPointer = modules[handler];\n\n\t\t\t\t\t\tfor(path in mPointer) {\n\t\t\t\t\t\t\tif(mPointer[path].state === state) {\n\t\t\t\t\t\t\t\tkPointer.push(path);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkeys[handler] = Object.keys(modules[handler]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn keys;\n\t\t\t};\n\n\t\t\tglobal.demand     = demand;\n\t\t\tglobal.provide    = provide;\n\n\t\t// register modules\n\t\t\tassign(DEMAND_PREFIX + 'pledge', Pledge);\n\t\t\tassign(DEMAND_PREFIX + 'function/resolve/url', resolve.url);\n\t\t\tassign(DEMAND_PREFIX + 'modifier/removeProtocol', removeProtocol);\n\t\t\tassign(DEMAND_PREFIX_VALIDATOR + 'isObject', isObject);\n\t\t\tassign(DEMAND_PREFIX_VALIDATOR + 'isTypeOf', isTypeOf);\n\t\t\tassign(DEMAND_PREFIX_VALIDATOR + 'isInstanceOf', isInstanceOf);\n\t\t\tassign(DEMAND_PREFIX_VALIDATOR + 'isPositiveInteger', isPositiveInteger);\n\t\t\tassign(DEMAND_PREFIX_STORAGE + defaults.storage, storageLocalstorage);\n\t\t\tassign(DEMAND_PREFIX_HANDLER + defaults.handler, handlerJavascript);\n\n\t// load main script\n\t\tdemand(DEMAND_PREFIX_STORAGE + storage)\n\t\t\t.then(\n\t\t\t\tfunction(adapter) {\n\t\t\t\t\tstorageAdapter = adapter;\n\t\t\t\t\tdemand.clear   = storageAdapter.clear;\n\n\t\t\t\t\tstorageAdapter.clear.expired();\n\n\t\t\t\t\tif(config && config.main) {\n\t\t\t\t\t\tdemand(config.main);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n}(this, document, (function() { try { return 'localStorage' in this && localStorage; } catch(exception) { return false; } }()), JSON, XMLHttpRequest, setTimeout, clearTimeout, 'demand' in this && demand));"],"sourceRoot":"/source/"}