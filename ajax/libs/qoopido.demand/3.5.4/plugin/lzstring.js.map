{"version":3,"sources":["plugin/lzstring.js"],"names":["definition","path","iterate","isObject","isTypeOf","onPostConfigure","options","pattern","length","key","value","push","weight","state","enabled","compressUTF16","uncompressed","bitsPerChar","i","contextDictionary","contextDictionaryToCreate","contextC","contextWc","contextW","contextEnlargeIn","contextDictSize","contextNumBits","contextData","contextDataVal","contextDataPosition","ii","charAt","objectPrototypeHasOwnProperty","call","charCodeAt","getCharFromInt","Math","pow","String","join","decompressUTF16","compressed","resetValue","next","w","resb","c","dictionary","enlargeIn","dictSize","numBits","entry","result","data","val","getNextValue","position","index","bits","maxpower","mathPow22","power","mathPow28","stringFormCharCode","mathPow216","a","compress","input","decompress","isEnabled","pointer","match","indexOf","fromCharCode","Object","prototype","hasOwnProperty","demand","on","loader","source","deferred","pledge","cache","provide"],"mappings":"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","file":"lzstring.js","sourcesContent":["/**\n * Qoopido.demand plugin/lzstring\n *\n * Based on lz-string:\n *   Repo:    https://github.com/pieroxy/lz-string\n *   License: https://github.com/pieroxy/lz-string/blob/master/LICENSE.txt\n *\n * Copyright (c) 2016 Dirk Lueth\n *\n * Dual licensed under the MIT and GPL licenses.\n *  - http://www.opensource.org/licenses/mit-license.php\n *  - http://www.gnu.org/copyleft/gpl.html\n *\n * @author Dirk Lueth <info@qoopido.com>\n */\n\n/* global demand provide */\n\n(function() {\n\t'use strict';\n\n\tfunction definition(path, iterate, isObject, isTypeOf) {\n\t\tvar stringFormCharCode            = String.fromCharCode,\n\t\t\tobjectPrototypeHasOwnProperty = Object.prototype.hasOwnProperty,\n\t\t\tmathPow22                     = Math.pow(2, 2),\n\t\t\tmathPow28                     = Math.pow(2, 8),\n\t\t\tmathPow216                    = Math.pow(2, 16),\n\t\t\tpattern                       = [ { pattern: path, weight: path.length, state: false }],\n\t\t\tenabled;\n\t\t\n\t\tfunction onPostConfigure(options) {\n\t\t\tif(isObject(options)) {\n\t\t\t\tpattern.length = 0;\n\t\t\t\t\n\t\t\t\titerate(options, function(key, value) {\n\t\t\t\t\tpattern.push({ pattern: key, weight: key.length, state: value });\n\t\t\t\t});\n\t\t\t} else if(isTypeOf(options, 'boolean')) {\n\t\t\t\tenabled = options;\n\t\t\t}\n\t\t}\n\t\t\n\t\tdemand.on('postConfigure:' + path, onPostConfigure);\n\n\t\tfunction compressUTF16(uncompressed, bitsPerChar) {\n\t\t\tvar contextDictionary         = {},\n\t\t\t\tcontextDictionaryToCreate = {},\n\t\t\t\tcontextC                  = '',\n\t\t\t\tcontextWc                 = '',\n\t\t\t\tcontextW                  = '',\n\t\t\t\tcontextEnlargeIn          = 2,\n\t\t\t\tcontextDictSize           = 3,\n\t\t\t\tcontextNumBits            = 2,\n\t\t\t\tcontextData               = [],\n\t\t\t\tcontextDataVal            = 0,\n\t\t\t\tcontextDataPosition       = 0,\n\t\t\t\tii = 0, i, value;\n\n\t\t\tbitsPerChar -= 1;\n\n\t\t\tfor(; uncompressed[ii]; ii++) {\n\t\t\t\tcontextC = uncompressed.charAt(ii);\n\n\t\t\t\tif(!objectPrototypeHasOwnProperty.call(contextDictionary, contextC)) {\n\t\t\t\t\tcontextDictionary[contextC]         = contextDictSize++;\n\t\t\t\t\tcontextDictionaryToCreate[contextC] = true;\n\t\t\t\t}\n\n\t\t\t\tcontextWc = contextW + contextC;\n\n\t\t\t\tif(objectPrototypeHasOwnProperty.call(contextDictionary, contextWc)) {\n\t\t\t\t\tcontextW = contextWc;\n\t\t\t\t} else {\n\t\t\t\t\tif(objectPrototypeHasOwnProperty.call(contextDictionaryToCreate, contextW)) {\n\t\t\t\t\t\tif(contextW.charCodeAt(0) < 256) {\n\t\t\t\t\t\t\tfor(i = 0 ; i < contextNumBits ; i++) {\n\t\t\t\t\t\t\t\tcontextDataVal = (contextDataVal << 1);\n\n\t\t\t\t\t\t\t\tif(contextDataPosition === bitsPerChar) {\n\t\t\t\t\t\t\t\t\tcontextData.push(getCharFromInt(contextDataVal));\n\n\t\t\t\t\t\t\t\t\tcontextDataPosition = 0;\n\t\t\t\t\t\t\t\t\tcontextDataVal      = 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcontextDataPosition++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvalue = contextW.charCodeAt(0);\n\n\t\t\t\t\t\t\tfor(i = 0 ; i < 8 ; i++) {\n\t\t\t\t\t\t\t\tcontextDataVal = (contextDataVal << 1) | (value&1);\n\n\t\t\t\t\t\t\t\tif(contextDataPosition === bitsPerChar) {\n\t\t\t\t\t\t\t\t\tcontextData.push(getCharFromInt(contextDataVal));\n\n\t\t\t\t\t\t\t\t\tcontextDataPosition = 0;\n\t\t\t\t\t\t\t\t\tcontextDataVal      = 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcontextDataPosition++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvalue = value >> 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvalue = 1;\n\n\t\t\t\t\t\t\tfor(i = 0 ; i < contextNumBits ; i++) {\n\t\t\t\t\t\t\t\tcontextDataVal = (contextDataVal << 1) | value;\n\n\t\t\t\t\t\t\t\tif(contextDataPosition === bitsPerChar) {\n\t\t\t\t\t\t\t\t\tcontextData.push(getCharFromInt(contextDataVal));\n\n\t\t\t\t\t\t\t\t\tcontextDataPosition = 0;\n\t\t\t\t\t\t\t\t\tcontextDataVal      = 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcontextDataPosition++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvalue = contextW.charCodeAt(0);\n\n\t\t\t\t\t\t\tfor(i = 0 ; i < 16 ; i++) {\n\t\t\t\t\t\t\t\tcontextDataVal = (contextDataVal << 1) | (value&1);\n\n\t\t\t\t\t\t\t\tif(contextDataPosition === bitsPerChar) {\n\t\t\t\t\t\t\t\t\tcontextData.push(getCharFromInt(contextDataVal));\n\n\t\t\t\t\t\t\t\t\tcontextDataPosition = 0;\n\t\t\t\t\t\t\t\t\tcontextDataVal      = 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcontextDataPosition++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvalue = value >> 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontextEnlargeIn--;\n\n\t\t\t\t\t\tif(contextEnlargeIn === 0) {\n\t\t\t\t\t\t\tcontextEnlargeIn = Math.pow(2, contextNumBits);\n\n\t\t\t\t\t\t\tcontextNumBits++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdelete contextDictionaryToCreate[contextW];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = contextDictionary[contextW];\n\n\t\t\t\t\t\tfor(i = 0 ; i < contextNumBits ; i++) {\n\t\t\t\t\t\t\tcontextDataVal = (contextDataVal << 1) | (value&1);\n\n\t\t\t\t\t\t\tif(contextDataPosition === bitsPerChar) {\n\t\t\t\t\t\t\t\tcontextData.push(getCharFromInt(contextDataVal));\n\n\t\t\t\t\t\t\t\tcontextDataPosition = 0;\n\t\t\t\t\t\t\t\tcontextDataVal      = 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcontextDataPosition++;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvalue = value >> 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcontextEnlargeIn--;\n\n\t\t\t\t\tif(contextEnlargeIn === 0) {\n\t\t\t\t\t\tcontextEnlargeIn = Math.pow(2, contextNumBits);\n\n\t\t\t\t\t\tcontextNumBits++;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontextDictionary[contextWc] = contextDictSize++;\n\t\t\t\t\tcontextW                      = String(contextC);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (contextW !== '') {\n\t\t\t\tif(objectPrototypeHasOwnProperty.call(contextDictionaryToCreate, contextW)) {\n\t\t\t\t\tif(contextW.charCodeAt(0) < 256) {\n\t\t\t\t\t\tfor(i = 0 ; i < contextNumBits ; i++) {\n\t\t\t\t\t\t\tcontextDataVal = (contextDataVal << 1);\n\n\t\t\t\t\t\t\tif(contextDataPosition === bitsPerChar) {\n\t\t\t\t\t\t\t\tcontextData.push(getCharFromInt(contextDataVal));\n\n\t\t\t\t\t\t\t\tcontextDataPosition = 0;\n\t\t\t\t\t\t\t\tcontextDataVal      = 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcontextDataPosition++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvalue = contextW.charCodeAt(0);\n\n\t\t\t\t\t\tfor(i = 0 ; i < 8 ; i++) {\n\t\t\t\t\t\t\tcontextDataVal = (contextDataVal << 1) | (value&1);\n\n\t\t\t\t\t\t\tif(contextDataPosition === bitsPerChar) {\n\t\t\t\t\t\t\t\tcontextData.push(getCharFromInt(contextDataVal));\n\n\t\t\t\t\t\t\t\tcontextDataPosition = 0;\n\t\t\t\t\t\t\t\tcontextDataVal      = 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcontextDataPosition++;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvalue = value >> 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = 1;\n\n\t\t\t\t\t\tfor(i = 0 ; i < contextNumBits ; i++) {\n\t\t\t\t\t\t\tcontextDataVal = (contextDataVal << 1) | value;\n\n\t\t\t\t\t\t\tif(contextDataPosition === bitsPerChar) {\n\t\t\t\t\t\t\t\tcontextData.push(getCharFromInt(contextDataVal));\n\n\t\t\t\t\t\t\t\tcontextDataPosition = 0;\n\t\t\t\t\t\t\t\tcontextDataVal      = 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcontextDataPosition++;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvalue = contextW.charCodeAt(0);\n\n\t\t\t\t\t\tfor(i = 0 ; i < 16 ; i++) {\n\t\t\t\t\t\t\tcontextDataVal = (contextDataVal << 1) | (value&1);\n\n\t\t\t\t\t\t\tif(contextDataPosition === bitsPerChar) {\n\t\t\t\t\t\t\t\tcontextData.push(getCharFromInt(contextDataVal));\n\n\t\t\t\t\t\t\t\tcontextDataPosition = 0;\n\t\t\t\t\t\t\t\tcontextDataVal      = 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcontextDataPosition++;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvalue = value >> 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcontextEnlargeIn--;\n\n\t\t\t\t\tif(contextEnlargeIn === 0) {\n\t\t\t\t\t\tcontextEnlargeIn = Math.pow(2, contextNumBits);\n\n\t\t\t\t\t\tcontextNumBits++;\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete contextDictionaryToCreate[contextW];\n\t\t\t\t} else {\n\t\t\t\t\tvalue = contextDictionary[contextW];\n\n\t\t\t\t\tfor(i = 0 ; i < contextNumBits ; i++) {\n\t\t\t\t\t\tcontextDataVal = (contextDataVal << 1) | (value&1);\n\n\t\t\t\t\t\tif(contextDataPosition === bitsPerChar) {\n\t\t\t\t\t\t\tcontextData.push(getCharFromInt(contextDataVal));\n\n\t\t\t\t\t\t\tcontextDataPosition = 0;\n\t\t\t\t\t\t\tcontextDataVal      = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontextDataPosition++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvalue = value >> 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcontextEnlargeIn--;\n\n\t\t\t\tif(contextEnlargeIn === 0) {\n\t\t\t\t\tcontextNumBits++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvalue = 2;\n\n\t\t\tfor(i = 0 ; i < contextNumBits ; i++) {\n\t\t\t\tcontextDataVal = (contextDataVal << 1) | (value&1);\n\n\t\t\t\tif(contextDataPosition === bitsPerChar) {\n\t\t\t\t\tcontextData.push(getCharFromInt(contextDataVal));\n\n\t\t\t\t\tcontextDataPosition = 0;\n\t\t\t\t\tcontextDataVal      = 0;\n\t\t\t\t} else {\n\t\t\t\t\tcontextDataPosition++;\n\t\t\t\t}\n\n\t\t\t\tvalue = value >> 1;\n\t\t\t}\n\n\t\t\twhile(true) { // eslint-disable-line no-constant-condition\n\t\t\t\tcontextDataVal = (contextDataVal << 1);\n\n\t\t\t\tif(contextDataPosition === bitsPerChar) {\n\t\t\t\t\tcontextData.push(getCharFromInt(contextDataVal));\n\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tcontextDataPosition++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn contextData.join('');\n\t\t}\n\n\t\tfunction decompressUTF16(compressed, length, resetValue) {\n\t\t\tvar dictionary = [],\n\t\t\t\tenlargeIn  = 4,\n\t\t\t\tdictSize   = 4,\n\t\t\t\tnumBits    = 3,\n\t\t\t\tentry      = '',\n\t\t\t\tresult     = [],\n\t\t\t\tdata       = { val: getNextValue(compressed, 0), position: resetValue, index: 1 },\n\t\t\t\tbits       = 0,\n\t\t\t\tmaxpower   = mathPow22,\n\t\t\t\tpower      = 1,\n\t\t\t\tnext, i, w, resb, c;\n\n\t\t\tfor(i = 0; i < 3; i++) {\n\t\t\t\tdictionary[i] = i;\n\t\t\t}\n\n\t\t\twhile(power !== maxpower) {\n\t\t\t\tresb = data.val & data.position;\n\n\t\t\t\tdata.position >>= 1;\n\n\t\t\t\tif(data.position === 0) {\n\t\t\t\t\tdata.position = resetValue;\n\t\t\t\t\tdata.val      = getNextValue(compressed, data.index++);\n\t\t\t\t}\n\n\t\t\t\tbits |= (resb > 0 ? 1 : 0) * power;\n\t\t\t\tpower <<= 1;\n\t\t\t}\n\n\t\t\tnext = bits;\n\n\t\t\tswitch(next) {\n\t\t\t\tcase 0:\n\t\t\t\t\tbits     = 0;\n\t\t\t\t\tmaxpower = mathPow28;\n\t\t\t\t\tpower    = 1;\n\n\t\t\t\t\twhile(power !== maxpower) {\n\t\t\t\t\t\tresb = data.val & data.position;\n\n\t\t\t\t\t\tdata.position >>= 1;\n\n\t\t\t\t\t\tif(data.position === 0) {\n\t\t\t\t\t\t\tdata.position = resetValue;\n\t\t\t\t\t\t\tdata.val      = getNextValue(compressed, data.index++);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbits |= (resb>0 ? 1 : 0) * power;\n\t\t\t\t\t\tpower <<= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tc = stringFormCharCode(bits);\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tbits     = 0;\n\t\t\t\t\tmaxpower = mathPow216;\n\t\t\t\t\tpower    = 1;\n\n\t\t\t\t\twhile(power !== maxpower) {\n\t\t\t\t\t\tresb = data.val & data.position;\n\n\t\t\t\t\t\tdata.position >>= 1;\n\n\t\t\t\t\t\tif(data.position === 0) {\n\t\t\t\t\t\t\tdata.position = resetValue;\n\t\t\t\t\t\t\tdata.val      = getNextValue(compressed, data.index++);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbits |= (resb>0 ? 1 : 0) * power;\n\t\t\t\t\t\tpower <<= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tc = stringFormCharCode(bits);\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tdictionary[3] = c;\n\t\t\tw             = c;\n\n\t\t\tresult.push(c);\n\n\t\t\twhile(true) { // eslint-disable-line no-constant-condition\n\t\t\t\tif(data.index > length) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\n\t\t\t\tbits     = 0;\n\t\t\t\tmaxpower = Math.pow(2, numBits);\n\t\t\t\tpower    = 1;\n\n\t\t\t\twhile(power !== maxpower) {\n\t\t\t\t\tresb = data.val & data.position;\n\n\t\t\t\t\tdata.position >>= 1;\n\n\t\t\t\t\tif(data.position === 0) {\n\t\t\t\t\t\tdata.position = resetValue;\n\t\t\t\t\t\tdata.val      = getNextValue(compressed, data.index++);\n\t\t\t\t\t}\n\n\t\t\t\t\tbits |= (resb>0 ? 1 : 0) * power;\n\t\t\t\t\tpower <<= 1;\n\t\t\t\t}\n\n\t\t\t\tswitch(c = bits) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tbits     = 0;\n\t\t\t\t\t\tmaxpower = mathPow28;\n\t\t\t\t\t\tpower    = 1;\n\n\t\t\t\t\t\twhile(power !== maxpower) {\n\t\t\t\t\t\t\tresb = data.val & data.position;\n\n\t\t\t\t\t\t\tdata.position >>= 1;\n\n\t\t\t\t\t\t\tif(data.position === 0) {\n\t\t\t\t\t\t\t\tdata.position = resetValue;\n\t\t\t\t\t\t\t\tdata.val      = getNextValue(compressed, data.index++);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbits |= (resb>0 ? 1 : 0) * power;\n\t\t\t\t\t\t\tpower <<= 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdictionary[dictSize++] = stringFormCharCode(bits);\n\t\t\t\t\t\tc                      = dictSize - 1;\n\n\t\t\t\t\t\tenlargeIn--;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tbits     = 0;\n\t\t\t\t\t\tmaxpower = mathPow216;\n\t\t\t\t\t\tpower    = 1;\n\n\t\t\t\t\t\twhile(power !== maxpower) {\n\t\t\t\t\t\t\tresb = data.val & data.position;\n\n\t\t\t\t\t\t\tdata.position >>= 1;\n\n\t\t\t\t\t\t\tif(data.position === 0) {\n\t\t\t\t\t\t\t\tdata.position = resetValue;\n\t\t\t\t\t\t\t\tdata.val      = getNextValue(compressed, data.index++);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbits |= (resb>0 ? 1 : 0) * power;\n\n\t\t\t\t\t\t\tpower <<= 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdictionary[dictSize++] = stringFormCharCode(bits);\n\t\t\t\t\t\tc                      = dictSize - 1;\n\n\t\t\t\t\t\tenlargeIn--;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturn result.join('');\n\t\t\t\t}\n\n\t\t\t\tif(enlargeIn === 0) {\n\t\t\t\t\tenlargeIn = Math.pow(2, numBits);\n\n\t\t\t\t\tnumBits++;\n\t\t\t\t}\n\n\t\t\t\tif(dictionary[c]) {\n\t\t\t\t\tentry = dictionary[c];\n\t\t\t\t} else {\n\t\t\t\t\tif(c === dictSize) {\n\t\t\t\t\t\tentry = w + w.charAt(0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult.push(entry);\n\n\t\t\t\tdictionary[dictSize++] = w + entry.charAt(0);\n\n\t\t\t\tenlargeIn--;\n\n\t\t\t\tw = entry;\n\n\t\t\t\tif(enlargeIn === 0) {\n\t\t\t\t\tenlargeIn = Math.pow(2, numBits);\n\n\t\t\t\t\tnumBits++;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\tfunction getCharFromInt(a) {\n\t\t\treturn stringFormCharCode(a + 32);\n\t\t}\n\n\t\tfunction getNextValue(compressed, index) {\n\t\t\treturn compressed.charCodeAt(index) - 32;\n\t\t}\n\n\t\tfunction compress(input) {\n\t\t\treturn input ? compressUTF16(input, 15) + ' ' : '';\n\t\t}\n\n\t\tfunction decompress(compressed) {\n\t\t\treturn compressed ? decompressUTF16(compressed, compressed.length, 16384) : '';\n\t\t}\n\n\t\tfunction isEnabled(path) {\n\t\t\tvar i = 0, pointer, match;\n\n\t\t\tfor(; (pointer = pattern[i]); i++) {\n\t\t\t\tif(path.indexOf(pointer.pattern) === 0 && (!match || pointer.weight > match.weight)) {\n\t\t\t\t\tmatch = pointer;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn match ? match.state : false;\n\t\t}\n\n\t\tdemand\n\t\t\t.on('preCache', function(loader) {\n\t\t\t\tif(enabled || isEnabled(loader.path)) {\n\t\t\t\t\tloader.source = compress(loader.source);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on('preProcess', function(loader) {\n\t\t\t\tif(loader.deferred.pledge.cache === 'hit' && (enabled || isEnabled(loader.path))) {\n\t\t\t\t\tloader.source = decompress(loader.source);\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn {\n\t\t\tcompress:   compress,\n\t\t\tdecompress: decompress\n\t\t};\n\t}\n\n\tprovide([ 'path', '/demand/function/iterate', '/demand/validator/isObject', '/demand/validator/isTypeOf' ], definition);\n}());"]}