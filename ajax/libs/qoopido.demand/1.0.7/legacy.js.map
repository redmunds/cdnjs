{"version":3,"sources":["legacy.js"],"names":["functionPrototype","objectPrototype","arrayPrototype","arrayPrototypeSlice","slice","objectPrototypeToString","toString","bind","context","parameter","target","Constructor","bound","self","this","call","arguments","apply","concat","prototype","TypeError","forEach","callback","object","length","i","Object","Array","isArray","value","Function"],"mappings":"AAAA;AACA,CAaE,SAASA,EAAmBC,EAAiBC,GAC9C,YAEA,IAAIC,GAA0BD,EAAeE,MAC5CC,EAA0BJ,EAAgBK,QAEvCN,GAAkBO,OACrBP,EAAkBO,KAAO,SAASC,GACjC,GACCC,GAAWC,EAAQC,EAAaC,EAD7BC,EAAOC,IAGX,IAAmB,kBAATD,GAWT,MAVAJ,GAAcN,EAAoBY,KAAKC,UAAW,GAClDN,EAAcG,EACdF,EAAc,aACdC,EAAc,WACb,MAAOF,GAAOO,MAAMJ,YAAgBF,GAAcE,EAAOL,EAASC,EAAUS,OAAOf,EAAoBY,KAAKC,cAG7GL,EAAYQ,UAAYN,EAAKM,UAC7BP,EAAMO,UAAkB,GAAIR,GAErBC,CAEP,MAAM,IAAIQ,WAAU,0EAKnBlB,EAAemB,UAClBnB,EAAemB,QAAU,SAASC,EAAUd,GAC3C,GACCe,GAAQC,EADLX,EAAOC,KACMW,EAAI,CAErB,IAAY,OAATZ,EAgBF,KAAM,IAAIO,WAAU,8BAZpB,IAHAG,EAASG,OAAOb,GAChBW,EAASD,EAAOC,SAAW,EAEJ,kBAAbF,GAST,KAAM,IAAIF,WAAUE,EAAW,qBAR/B,MAAUE,EAAJC,GACFA,IAAKF,IACPD,EAASP,KAAKP,EAASe,EAAOE,GAAIA,EAAGF,GAGtCE,MAWDE,MAAMC,UACTD,MAAMC,QAAU,SAAUC,GACzB,MAA+C,mBAAxCxB,EAAwBU,KAAKc,MAGrCC,SAASX,UAAWO,OAAOP,UAAWQ,MAAMR","file":"legacy.js","sourcesContent":["/**\n * Qoopido demand - legacy polyfills\n *\n * Polyfills required to provide IE8 compatibility\n *\n * Copyright (c) 2015 Dirk Lueth\n *\n * Dual licensed under the MIT and GPL licenses.\n *  - http://www.opensource.org/licenses/mit-license.php\n *  - http://www.gnu.org/copyleft/gpl.html\n *\n * @author Dirk Lueth <info@qoopido.com>\n */\n\n;(function(functionPrototype, objectPrototype, arrayPrototype) {\n\t'use strict';\n\n\tvar arrayPrototypeSlice     = arrayPrototype.slice,\n\t\tobjectPrototypeToString = objectPrototype.toString;\n\n\tif(!functionPrototype.bind) {\n\t\tfunctionPrototype.bind = function(context) {\n\t\t\tvar self = this,\n\t\t\t\tparameter, target, Constructor, bound;\n\n\t\t\tif(typeof self === 'function') {\n\t\t\t\tparameter   = arrayPrototypeSlice.call(arguments, 1);\n\t\t\t\ttarget      = self;\n\t\t\t\tConstructor = function() {};\n\t\t\t\tbound       = function() {\n\t\t\t\t\treturn target.apply(self instanceof Constructor ? self : context, parameter.concat(arrayPrototypeSlice.call(arguments)));\n\t\t\t\t};\n\n\t\t\t\tConstructor.prototype = self.prototype;\n\t\t\t\tbound.prototype       = new Constructor();\n\n\t\t\t\treturn bound;\n\t\t\t} else {\n\t\t\t\tthrow new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n\t\t\t}\n\t\t};\n\t}\n\n\tif(!arrayPrototype.forEach) {\n\t\tarrayPrototype.forEach = function(callback, context) {\n\t\t\tvar self = this,\n\t\t\t\tobject, length, i = 0;\n\n\t\t\tif(self !== null) {\n\t\t\t\tobject = Object(self);\n\t\t\t\tlength = object.length >>> 0;\n\n\t\t\t\tif(typeof callback === 'function') {\n\t\t\t\t\twhile(i < length) {\n\t\t\t\t\t\tif(i in object) {\n\t\t\t\t\t\t\tcallback.call(context, object[i], i, object);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError(callback + ' is not a function');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new TypeError('this is null or not defined');\n\t\t\t}\n\t\t};\n\t}\n\n\tif(!Array.isArray) {\n\t\tArray.isArray = function (value) {\n\t\t\treturn objectPrototypeToString.call(value) === '[object Array]';\n\t\t};\n\t}\n}(Function.prototype, Object.prototype, Array.prototype));"],"sourceRoot":"/source/"}