{"version":3,"sources":["css.js","handler/css.js"],"names":["document","setTimeout","definition","provide","resolveUrl","prepare","aUrl","slice","resolve","aPath","aValue","style","createElement","sheet","styleSheet","type","media","cssText","innerHTML","setAttribute","target","appendChild","modify","match","base","regexMatchCssUrl","exec","replace","getElementsByTagName","when"],"mappings":"AAAA;AACA,CCWE,SAASA,EAAUC,GACpB,YAKA,SAASC,GAAWC,EAASC,GAC5B,OAQCC,QAAS,SAASC,GACjB,MAA0B,SAAnBA,EAAKC,MAAM,IAAiBD,EAAO,OAASA,GAQpDE,QAAS,SAASC,EAAOC,GACxB,GAAIC,GAAQX,EAASY,cAAc,SAClCC,EAAQF,EAAMG,UAEfH,GAAMI,KAAQ,WACdJ,EAAMK,MAAQ,SACbH,IAAUA,EAAMI,QAAUP,KAAaC,EAAMO,UAAYR,GAE1DC,EAAMQ,aAAa,cAAeV,GAElCW,EAAOC,YAAYV,GAEnBV,EAAW,WACVE,EAAQ,WAAa,MAAOQ,QAa9BW,OAAQ,SAAShB,EAAMI,GAItB,IAHA,GACCa,GADGC,EAAOpB,EAAWE,EAAO,OAGtBiB,EAAQE,EAAiBC,KAAKhB,IACpCA,EAASA,EAAOiB,QAAQJ,EAAM,GAAI,OAASnB,EAAWoB,EAAOD,EAAM,IAAM,IAG1E,OAAOb,KAvDV,GAAIU,GAAmBpB,EAAS4B,qBAAqB,QAAQ,GAC5DH,EAAmB,2DA2DpBtB,SAAQD,GACN2B,KAAK,WAAY,iBAClB7B,SAAUC","file":"handler/css.js","sourcesContent":[null,"/**\n * Qoopido.demand handler text/css\n *\n * Copyright (c) 2015 Dirk Lueth\n *\n * Dual licensed under the MIT and GPL licenses.\n *  - http://www.opensource.org/licenses/mit-license.php\n *  - http://www.gnu.org/copyleft/gpl.html\n *\n * @author Dirk Lueth <info@qoopido.com>\n */\n\n;(function(document, setTimeout) {\n\t'use strict';\n\n\tvar target           = document.getElementsByTagName('head')[0],\n\t\tregexMatchCssUrl = /url\\(\\s*(?:\"|'|)(?!data:|http:|https:|\\/)(.+?)(?:\"|'|)\\)/g;\n\n\tfunction definition(provide, resolveUrl) {\n\t\treturn {\n\t\t\t/**\n\t\t\t * Enables modification of the URL that gets requested\n\t\t\t *\n\t\t\t * @param {String} aUrl\n\t\t\t *\n\t\t\t * @returns {String}\n\t\t\t */\n\t\t\tprepare: function(aUrl) {\n\t\t\t\treturn aUrl.slice(-4) !== '.css' ? aUrl + '.css' : aUrl;\n\t\t\t},\n\t\t\t/**\n\t\t\t * handles resolving of CSS modules\n\t\t\t *\n\t\t\t * @param {String} aPath\n\t\t\t * @param {String} aValue\n\t\t\t */\n\t\t\tresolve: function(aPath, aValue) {\n\t\t\t\tvar style = document.createElement('style'),\n\t\t\t\t\tsheet = style.styleSheet;\n\n\t\t\t\tstyle.type  = 'text/css';\n\t\t\t\tstyle.media = 'only x';\n\t\t\t\t(sheet && (sheet.cssText = aValue)) || (style.innerHTML = aValue);\n\n\t\t\t\tstyle.setAttribute('demand-path', aPath);\n\n\t\t\t\ttarget.appendChild(style);\n\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tprovide(function() { return style; });\n\t\t\t\t});\n\t\t\t},\n\t\t\t/**\n\t\t\t * handles modifying of CSS module's source prior to caching\n\t\t\t *\n\t\t\t * Rewrites relative CSS URLs to an absolute URL in relation to the URL the module was loaded from\n\t\t\t *\n\t\t\t * @param {String} aUrl\n\t\t\t * @param {String} aValue\n\t\t\t *\n\t\t\t * @returns {String}\n\t\t\t */\n\t\t\tmodify: function(aUrl, aValue) {\n\t\t\t\tvar base = resolveUrl(aUrl + '/..'),\n\t\t\t\t\tmatch;\n\n\t\t\t\twhile((match = regexMatchCssUrl.exec(aValue))) {\n\t\t\t\t\taValue = aValue.replace(match[0], 'url(' + resolveUrl(base + match[1]) + ')');\n\t\t\t\t}\n\n\t\t\t\treturn aValue;\n\t\t\t}\n\t\t};\n\t}\n\n\tprovide(definition)\n\t\t.when('/provide', '/resolve/url');\n}(document, setTimeout));"],"sourceRoot":"/source/"}