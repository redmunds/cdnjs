{"version":3,"sources":["/extras/handler/css.js"],"names":["document","definition","abstractHandler","resolveUrl","url","resolver","href","replaceUri","source","match","replacement","regexIsAbsoluteUri","test","replace","HandlerCss","target","getElementsByTagName","createElement","regexMatchUrl","regexMatchImport","regexIsAbsolutePath","regexMatchType","prototype","validate","type","onPreRequest","this","slice","onPostRequest","base","host","exec","process","element","querySelector","id","setAttribute","appendChild","tagName","styleSheet","cssText","textContent","provide","extends"],"mappings":";CAAC,SAASA,GACT,YAEA,SAASC,GAAWC,GASnB,QAASC,GAAWC,GAGnB,MAFAC,GAASC,KAAOF,EAETC,EAGR,QAASE,GAAWC,EAAQC,EAAOC,GAKlC,MAJIC,GAAmBC,KAAKH,EAAM,MACjCD,EAASA,EAAOK,QAAQJ,EAAM,GAAIC,IAG5BF,EAGR,QAASM,MAtBT,GAAIC,GAAsBf,EAASgB,qBAAqB,QAAQ,GAC/DX,EAAsBL,EAASiB,cAAc,KAC7CC,EAAsB,oCACtBC,EAAsB,4BACtBC,EAAsB,OACtBT,EAAsB,yBACtBU,EAAsB,YAmEvB,OAjDAP,GAAWQ,WACVC,SAAU,SAASC,GAClB,MAAOH,GAAeT,KAAKY,IAE5BC,aAAc,WACb,GAAIrB,GAAOsB,KAAKtB,GAEhBsB,MAAKtB,IAAwB,SAAlBA,EAAIuB,OAAM,GAAiBvB,EAAM,OAASA,GAEtDwB,cAAe,WAOd,IANA,GAICnB,GAJGL,EAAUD,EAAWuB,KAAKtB,IAAM,OACnCyB,EAAUzB,EAAIE,KACdwB,EAAU,KAAO1B,EAAI0B,KACrBtB,EAAUkB,KAAKlB,OAGTC,EAAQS,EAAca,KAAKvB,IACjCA,EAASD,EAAWC,EAAQC,EAAO,QAAUN,EAAWiB,EAAoBR,KAAKH,EAAM,IAAMqB,EAAOrB,EAAM,GAAKoB,EAAOpB,EAAM,IAAIH,KAAO,KAGxI,MAAOG,EAAQU,EAAiBY,KAAKvB,IACpCA,EAASD,EAAWC,EAAQC,EAAO,YAAcN,EAAWiB,EAAoBR,KAAKH,EAAM,IAAMqB,EAAOrB,EAAM,GAAKoB,EAAOpB,EAAM,IAAIH,KAAO,IAG5IoB,MAAKlB,OAASA,GAEfwB,QAAS,WACR,GAAIC,GAAUjC,EAASkC,cAAc,eAAiBR,KAAKS,GAAK,KAE5DF,KACHA,EAAejC,EAASiB,cAAc,SACtCgB,EAAQT,KAAO,WAEfS,EAAQG,aAAa,YAAaV,KAAKS,IACvCpB,EAAOsB,YAAYJ,IAGG,UAApBA,EAAQK,UACPL,EAAQM,WACVN,EAAQM,WAAWC,QAAUd,KAAKlB,OAElCyB,EAAQQ,YAAcf,KAAKlB,QAI7BkC,QAAQ,WAAa,MAAOT,OAIvB,IAAKnB,EAAW6B,QAAQzC,IAGhCwC,SAAU,4BAA8BzC,IACvCD","file":"css.js","sourcesContent":["(function(document) {\n\t'use strict';\n\n\tfunction definition(abstractHandler) {\n\t\tvar target              = document.getElementsByTagName('head')[0],\n\t\t\tresolver            = document.createElement('a'),\n\t\t\tregexMatchUrl       = /url\\s*\\(\\s*[\"']?(.+?)[\"']?\\s*\\)/gi,\n\t\t\tregexMatchImport    = /@import\\s+[\"'](.+?)[\"']/gi,\n\t\t\tregexIsAbsolutePath = /^\\//i,\n\t\t\tregexIsAbsoluteUri  = /^data:|http(s?):|\\/\\//i,\n\t\t\tregexMatchType      = /^text\\/css/;\n\n\t\tfunction resolveUrl(url) {\n\t\t\tresolver.href = url;\n\n\t\t\treturn resolver;\n\t\t}\n\n\t\tfunction replaceUri(source, match, replacement) {\n\t\t\tif(!regexIsAbsoluteUri.test(match[1])) {\n\t\t\t\tsource = source.replace(match[0], replacement);\n\t\t\t}\n\n\t\t\treturn source;\n\t\t}\n\n\t\tfunction HandlerCss() {}\n\n\t\tHandlerCss.prototype = {\n\t\t\tvalidate: function(type) {\n\t\t\t\treturn regexMatchType.test(type);\n\t\t\t},\n\t\t\tonPreRequest: function() {\n\t\t\t\tvar url  = this.url;\n\n\t\t\t\tthis.url = url.slice(-4) !== '.css' ? url + '.css' : url;\n\t\t\t},\n\t\t\tonPostRequest: function() {\n\t\t\t\tvar url     = resolveUrl(this.url + '/..'),\n\t\t\t\t\tbase    = url.href,\n\t\t\t\t\thost    = '//' + url.host,\n\t\t\t\t\tsource  = this.source,\n\t\t\t\t\tmatch;\n\n\t\t\t\twhile((match = regexMatchUrl.exec(source))) {\n\t\t\t\t\tsource = replaceUri(source, match, 'url(\"' + resolveUrl(regexIsAbsolutePath.test(match[1]) ? host + match[1] : base + match[1]).href + '\")');\n\t\t\t\t}\n\n\t\t\t\twhile((match = regexMatchImport.exec(source))) {\n\t\t\t\t\tsource = replaceUri(source, match, '@import \"' + resolveUrl(regexIsAbsolutePath.test(match[1]) ? host + match[1] : base + match[1]).href + '\"');\n\t\t\t\t}\n\n\t\t\t\tthis.source = source;\n\t\t\t},\n\t\t\tprocess: function() {\n\t\t\t\tvar element = document.querySelector('[demand-id=\"' + this.id + '\"]');\n\n\t\t\t\tif(!element) {\n\t\t\t\t\telement      = document.createElement('style');\n\t\t\t\t\telement.type = 'text/css';\n\n\t\t\t\t\telement.setAttribute('demand-id', this.id);\n\t\t\t\t\ttarget.appendChild(element);\n\t\t\t\t}\n\n\t\t\t\tif(element.tagName === 'STYLE') {\n\t\t\t\t\tif(element.styleSheet) {\n\t\t\t\t\t\telement.styleSheet.cssText = this.source;\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.textContent = this.source;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprovide(function() { return element; });\n\t\t\t}\n\t\t};\n\n\t\treturn new (HandlerCss.extends(abstractHandler));\n\t}\n\n\tprovide([ '/demand/abstract/handler' ], definition);\n}(document));"]}