{"version":3,"sources":["bundle.js","handler/bundle.js"],"names":["document","definition","settings","removeProtocol","resolveUrl","matchType","onPostRequest","match","replacement","self","this","url","source","regexMatchSourcemap","exec","replace","onPreProcess","aLoader","module","script","defered","modules","path","i","undefined","createElement","async","text","setAttribute","type","target","appendChild","demand","apply","then","resolve","arguments","setTimeout","provide","reject","getElementsByTagName","when"],"mappings":"AAAA;AACA,CCWE,SAASA,GACV,YAKA,SAASC,GAAWC,EAAUC,EAAgBC,GAC7C,OACCC,UAAW,kCAQXC,cAAe,WAMd,IALA,GAGCC,GAAOC,EAHJC,EAASC,KACZC,EAASF,EAAKE,IACdC,EAASH,EAAKG,OAGTL,EAAQM,EAAoBC,KAAKF,IACtCJ,EAAcL,EAAeC,EAAWO,EAAM,OAASJ,EAAM,KAC7DK,EAAcA,EAAOG,QAAQR,EAAM,GAAI,iBAAmBC,EAAc,OAGzEC,GAAKG,OAASA,GAOfI,aAAc,SAASC,GAOtB,IANA,GAIQC,GAAQC,EAJZV,EAAUQ,EACbL,EAAUH,EAAKG,OACfQ,EAAUX,EAAKW,QACfC,EAAUnB,EAASO,EAAKa,MACxBC,EAAI,EAE2BC,UAAzBN,EAASG,EAAQE,IAAmBA,IAC1CF,EAAQE,GAAK,QAAUL,CAGxBC,GAAenB,EAASyB,cAAc,UACtCN,EAAOO,OAAQ,EACfP,EAAOQ,KAAQf,EAEfO,EAAOS,aAAa,cAAenB,EAAKoB,MACxCV,EAAOS,aAAa,cAAenB,EAAKa,MAExCQ,EAAOC,YAAYZ,GAEnBa,OACGC,MAAM,KAAMZ,GACZa,KACC,WACCd,EAAQe,QAAQF,MAAM,KAAMG,WAE5BC,WAAW,WACVC,QAAQ,WAAa,OAAO,OAG9BlB,EAAQmB,UA7Df,GAAIT,GAAsB9B,EAASwC,qBAAqB,QAAQ,GAC/D3B,EAAsB,4CAkEvByB,SAAQrC,GACNwC,KAAK,WAAY,kCAAmC,+BAAgC,yBACrFzC","file":"handler/bundle.js","sourcesContent":[null,"/**\n * Qoopido.demand handler/bundle\n *\n * Copyright (c) 2015 Dirk Lueth\n *\n * Dual licensed under the MIT and GPL licenses.\n *  - http://www.opensource.org/licenses/mit-license.php\n *  - http://www.gnu.org/copyleft/gpl.html\n *\n * @author Dirk Lueth <info@qoopido.com>\n */\n\n;(function(document) {\n\t'use strict';\n\n\tvar target              = document.getElementsByTagName('head')[0],\n\t\tregexMatchSourcemap = /\\/\\/#\\s+sourceMappingURL\\s*=\\s*(.+?)\\.map/g;\n\n\tfunction definition(settings, removeProtocol, resolveUrl) {\n\t\treturn {\n\t\t\tmatchType: /^(application|text)\\/javascript/,\n\t\t\t/**\n\t\t\t * handles modifying of JavaScript module's source prior to caching\n\t\t\t *\n\t\t\t * Rewrites sourcemap URL to an absolute URL in relation to the URL the module was loaded from\n\t\t\t *\n\t\t\t * @this Loader\n\t\t\t */\n\t\t\tonPostRequest: function() {\n\t\t\t\tvar self   = this,\n\t\t\t\t\turl    = self.url,\n\t\t\t\t\tsource = self.source,\n\t\t\t\t\tmatch, replacement;\n\n\t\t\t\twhile(match = regexMatchSourcemap.exec(source)) {\n\t\t\t\t\treplacement = removeProtocol(resolveUrl(url + '/../' + match[1]));\n\t\t\t\t\tsource      = source.replace(match[0], '//# sourcemap=' + replacement + '.map');\n\t\t\t\t}\n\n\t\t\t\tself.source = source;\n\t\t\t},\n\t\t\t/**\n\t\t\t * handles pre-processing of loaded JavaScript bundles\n\t\t\t *\n\t\t\t * @this Loader\n\t\t\t */\n\t\t\tonPreProcess: function(aLoader) {\n\t\t\t\tvar self    = aLoader,\n\t\t\t\t\tsource  = self.source,\n\t\t\t\t\tdefered = self.defered,\n\t\t\t\t\tmodules = settings[self.path],\n\t\t\t\t\ti = 0, module, script;\n\n\t\t\t\tfor(; (module = modules[i]) !== undefined; i++) {\n\t\t\t\t\tmodules[i] = 'mock!' + module;\n\t\t\t\t}\n\n\t\t\t\tscript       = document.createElement('script');\n\t\t\t\tscript.async = true;\n\t\t\t\tscript.text  = source;\n\n\t\t\t\tscript.setAttribute('demand-type', self.type);\n\t\t\t\tscript.setAttribute('demand-path', self.path);\n\n\t\t\t\ttarget.appendChild(script);\n\n\t\t\t\tdemand\n\t\t\t\t\t\t.apply(null, modules)\n\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\tdefered.resolve.apply(null, arguments);\n\n\t\t\t\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t\t\t\tprovide(function() { return true; });\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdefered.reject\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t};\n\t}\n\n\tprovide(definition)\n\t\t.when('settings', '/demand/modifier/removeProtocol', '/demand/function/resolve/url', '/demand/handler/mock');\n}(document));"],"sourceRoot":"/source/"}