{"version":3,"sources":["handler/css.js"],"names":["document","resolveUrl","url","resolver","href","replaceUri","source","match","replacement","regexIsAbsoluteUri","test","replace","definition","matchType","onPreRequest","self","this","slice","onPostRequest","base","host","regexMatchUrl","exec","regexIsAbsolutePath","regexMatchImport","process","element","querySelector","path","createElement","type","setAttribute","target","appendChild","tagName","styleSheet","cssText","textContent","provide","getElementsByTagName"],"mappings":";CAYC,SAASA,GACT,YASA,SAASC,GAAWC,GAGnB,MAFAC,GAASC,KAAOF,EAETC,EAGR,QAASE,GAAWC,EAAQC,EAAOC,GAKlC,MAJIC,GAAmBC,KAAKH,EAAM,MACjCD,EAASA,EAAOK,QAAQJ,EAAM,GAAIC,IAG5BF,EAGR,QAASM,KACR,OACCC,UAAW,aACXC,aAAc,WACb,GAAIC,GAAOC,KACVd,EAAOa,EAAKb,GAEba,GAAKb,IAAwB,SAAlBA,EAAIe,OAAM,GAAiBf,EAAM,OAASA,GAEtDgB,cAAe,WAQd,IAPA,GAKCX,GALGQ,EAAUC,KACbd,EAAUD,EAAWc,EAAKb,IAAM,OAChCiB,EAAUjB,EAAIE,KACdgB,EAAU,KAAOlB,EAAIkB,KACrBd,EAAUS,EAAKT,OAGTC,EAAQc,EAAcC,KAAKhB,IACjCA,EAASD,EAAWC,EAAQC,EAAO,QAAUN,EAAWsB,EAAoBb,KAAKH,EAAM,IAAMa,EAAOb,EAAM,GAAKY,EAAOZ,EAAM,IAAIH,KAAO,KAGxI,MAAOG,EAAQiB,EAAiBF,KAAKhB,IACpCA,EAASD,EAAWC,EAAQC,EAAO,YAAcN,EAAWsB,EAAoBb,KAAKH,EAAM,IAAMa,EAAOb,EAAM,GAAKY,EAAOZ,EAAM,IAAIH,KAAO,IAG5IW,GAAKT,OAASA,GAEfmB,QAAS,WACR,GAAIV,GAAUC,KACbU,EAAU1B,EAAS2B,cAAc,iBAAmBZ,EAAKa,KAAO,MAChEtB,EAAUS,EAAKT,MAEZoB,KACHA,EAAe1B,EAAS6B,cAAc,SACtCH,EAAQI,KAAO,WAEfJ,EAAQK,aAAa,cAAehB,EAAKa,MACzCI,EAAOC,YAAYP,IAGG,UAApBA,EAAQQ,UACPR,EAAQS,WACVT,EAAQS,WAAWC,QAAU9B,EAE7BoB,EAAQW,YAAc/B,GAIxBgC,QAAQ,WAAa,MAAOZ,OArE/B,GAAIM,GAAsBhC,EAASuC,qBAAqB,QAAQ,GAC/DpC,EAAsBH,EAAS6B,cAAc,KAC7CR,EAAsB,oCACtBG,EAAsB,4BACtBD,EAAsB,OACtBd,EAAsB,wBAqEvB6B,SAAQ1B,IACPZ","file":"css.js","sourcesContent":["/**\n * Qoopido.demand handler/css\n *\n * Copyright (c) 2016 Dirk Lueth\n *\n * Dual licensed under the MIT and GPL licenses.\n *  - http://www.opensource.org/licenses/mit-license.php\n *  - http://www.gnu.org/copyleft/gpl.html\n *\n * @author Dirk Lueth <info@qoopido.com>\n */\n\n(function(document) {\n\t'use strict';\n\n\tvar target              = document.getElementsByTagName('head')[0],\n\t\tresolver            = document.createElement('a'),\n\t\tregexMatchUrl       = /url\\s*\\(\\s*[\"']?(.+?)[\"']?\\s*\\)/gi,\n\t\tregexMatchImport    = /@import\\s+[\"'](.+?)[\"']/gi,\n\t\tregexIsAbsolutePath = /^\\//i,\n\t\tregexIsAbsoluteUri  = /^data:|http(s?):|\\/\\//i;\n\n\tfunction resolveUrl(url) {\n\t\tresolver.href = url;\n\n\t\treturn resolver;\n\t}\n\n\tfunction replaceUri(source, match, replacement) {\n\t\tif(!regexIsAbsoluteUri.test(match[1])) {\n\t\t\tsource = source.replace(match[0], replacement);\n\t\t}\n\n\t\treturn source;\n\t}\n\n\tfunction definition() {\n\t\treturn {\n\t\t\tmatchType: /^text\\/css/,\n\t\t\tonPreRequest: function() {\n\t\t\t\tvar self = this,\n\t\t\t\t\turl  = self.url;\n\n\t\t\t\tself.url = url.slice(-4) !== '.css' ? url + '.css' : url;\n\t\t\t},\n\t\t\tonPostRequest: function() {\n\t\t\t\tvar self    = this,\n\t\t\t\t\turl     = resolveUrl(self.url + '/..'),\n\t\t\t\t\tbase    = url.href,\n\t\t\t\t\thost    = '//' + url.host,\n\t\t\t\t\tsource  = self.source,\n\t\t\t\t\tmatch;\n\n\t\t\t\twhile((match = regexMatchUrl.exec(source))) {\n\t\t\t\t\tsource = replaceUri(source, match, 'url(\"' + resolveUrl(regexIsAbsolutePath.test(match[1]) ? host + match[1] : base + match[1]).href + '\")');\n\t\t\t\t}\n\n\t\t\t\twhile((match = regexMatchImport.exec(source))) {\n\t\t\t\t\tsource = replaceUri(source, match, '@import \"' + resolveUrl(regexIsAbsolutePath.test(match[1]) ? host + match[1] : base + match[1]).href + '\"');\n\t\t\t\t}\n\n\t\t\t\tself.source = source;\n\t\t\t},\n\t\t\tprocess: function() {\n\t\t\t\tvar self    = this,\n\t\t\t\t\telement = document.querySelector('[demand-path=\"' + self.path + '\"]'),\n\t\t\t\t\tsource  = self.source;\n\n\t\t\t\tif(!element) {\n\t\t\t\t\telement      = document.createElement('style');\n\t\t\t\t\telement.type = 'text/css';\n\n\t\t\t\t\telement.setAttribute('demand-path', self.path);\n\t\t\t\t\ttarget.appendChild(element);\n\t\t\t\t}\n\n\t\t\t\tif(element.tagName === 'STYLE') {\n\t\t\t\t\tif(element.styleSheet) {\n\t\t\t\t\t\telement.styleSheet.cssText = source;\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.textContent = source;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprovide(function() { return element; });\n\t\t\t}\n\t\t};\n\t}\n\n\tprovide(definition);\n}(document));"]}