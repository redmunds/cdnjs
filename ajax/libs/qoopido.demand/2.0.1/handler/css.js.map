{"version":3,"sources":["css.js","handler/css.js"],"names":["document","setTimeout","definition","resolveUrl","matchType","onPreRequest","self","this","url","slice","onPostRequest","match","base","source","regexMatchCssUrl","exec","replace","process","style","createElement","type","styleSheet","cssText","innerHTML","setAttribute","path","target","appendChild","provide","getElementsByTagName"],"mappings":"AAAA;AACA,CCWE,SAASA,EAAUC,GACpB,YAKA,SAASC,GAAWC,GACnB,OACCC,UAAW,aACXC,aAAc,WACb,GAAIC,GAAOC,KACVC,EAAOF,EAAKE,GAEbF,GAAKE,IAAwB,SAAlBA,EAAIC,MAAM,IAAiBD,EAAM,OAASA,GAEtDE,cAAe,WAMd,IALA,GAGCC,GAHGL,EAASC,KACZK,EAAST,EAAWG,EAAKE,IAAM,OAC/BK,EAASP,EAAKO,OAGRF,EAAQG,EAAiBC,KAAKF,IACpCA,EAASA,EAAOG,QAAQL,EAAM,GAAI,OAASR,EAAWS,EAAOD,EAAM,IAAM,IAG1EL,GAAKO,OAASA,GAEfI,QAAS,WACR,GAAIX,GAASC,KACZW,EAASlB,EAASmB,cAAc,SAChCN,EAASP,EAAKO,MAEfK,GAAME,KAAO,WAEVF,EAAMG,WACRH,EAAMG,WAAWC,QAAUT,EAE3BK,EAAMK,UAAYV,EAGnBK,EAAMM,aAAa,cAAelB,EAAKmB,MAEvCC,EAAOC,YAAYT,GAEnBjB,EAAW,WACV2B,QAAQ,WAAa,MAAOV,SA1ChC,GAAIQ,GAAmB1B,EAAS6B,qBAAqB,QAAQ,GAC5Df,EAAmB,2DA+CpBc,UAAU,+BAAiC1B,IAC1CF,SAAUC","file":"handler/css.js","sourcesContent":[null,"/**\n * Qoopido.demand handler/css\n *\n * Copyright (c) 2015 Dirk Lueth\n *\n * Dual licensed under the MIT and GPL licenses.\n *  - http://www.opensource.org/licenses/mit-license.php\n *  - http://www.gnu.org/copyleft/gpl.html\n *\n * @author Dirk Lueth <info@qoopido.com>\n */\n\n;(function(document, setTimeout) {\n\t'use strict';\n\n\tvar target           = document.getElementsByTagName('head')[0],\n\t\tregexMatchCssUrl = /url\\(\\s*(?:\"|'|)(?!data:|http:|https:|\\/)(.+?)(?:\"|'|)\\)/g;\n\n\tfunction definition(resolveUrl) {\n\t\treturn {\n\t\t\tmatchType: /^text\\/css/,\n\t\t\tonPreRequest: function() {\n\t\t\t\tvar self = this,\n\t\t\t\t\turl  = self.url;\n\n\t\t\t\tself.url = url.slice(-4) !== '.css' ? url + '.css' : url;\n\t\t\t},\n\t\t\tonPostRequest: function() {\n\t\t\t\tvar self   = this,\n\t\t\t\t\tbase   = resolveUrl(self.url + '/..'),\n\t\t\t\t\tsource = self.source,\n\t\t\t\t\tmatch;\n\n\t\t\t\twhile((match = regexMatchCssUrl.exec(source))) {\n\t\t\t\t\tsource = source.replace(match[0], 'url(' + resolveUrl(base + match[1]) + ')');\n\t\t\t\t}\n\n\t\t\t\tself.source = source;\n\t\t\t},\n\t\t\tprocess: function() {\n\t\t\t\tvar self   = this,\n\t\t\t\t\tstyle  = document.createElement('style'),\n\t\t\t\t\tsource = self.source;\n\n\t\t\t\tstyle.type = 'text/css';\n\n\t\t\t\tif(style.styleSheet) {\n\t\t\t\t\tstyle.styleSheet.cssText = source;\n\t\t\t\t} else {\n\t\t\t\t\tstyle.innerHTML = source;\n\t\t\t\t}\n\n\t\t\t\tstyle.setAttribute('demand-path', self.path);\n\n\t\t\t\ttarget.appendChild(style);\n\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tprovide(function() { return style; });\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\n\tprovide([ '/demand/function/resolveUrl' ], definition);\n}(document, setTimeout));"],"sourceRoot":"/source/"}