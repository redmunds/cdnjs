{"version":3,"sources":["css.js","handler/css.js"],"names":["document","setTimeout","resolveUrl","url","resolver","href","definition","matchType","onPreRequest","self","this","slice","onPostRequest","match","base","host","source","regexMatchUrl","exec","regexIsAbsoluteUri","test","replace","regexIsAbsolutePath","regexMatchImport","process","style","createElement","type","styleSheet","cssText","textContent","setAttribute","path","target","appendChild","provide","getElementsByTagName"],"mappings":"AAAA;AACA,CCWC,SAASA,EAAUC,GACnB,YASA,SAASC,GAAWC,GAGnB,MAFAC,GAASC,KAAOF,EAETC,EAGR,QAASE,KACR,OACCC,UAAW,aACXC,aAAc,WACb,GAAIC,GAAOC,KACVP,EAAOM,EAAKN,GAEbM,GAAKN,IAAwB,SAAlBA,EAAIQ,MAAM,IAAiBR,EAAM,OAASA,GAEtDS,cAAe,WAQd,IAPA,GAKCC,GALGJ,EAAUC,KACbP,EAAUD,EAAWO,EAAKN,IAAM,OAChCW,EAAUX,EAAIE,KACdU,EAAU,KAAOZ,EAAIY,KACrBC,EAAUP,EAAKO,OAGTH,EAAQI,EAAcC,KAAKF,IAC7BG,EAAmBC,KAAKP,EAAM,MACjCG,EAASA,EAAOK,QAAQR,EAAM,GAAI,QAAUX,EAAWoB,EAAoBF,KAAKP,EAAM,IAAME,EAAOF,EAAM,GAAKC,EAAOD,EAAM,IAAIR,KAAO,MAIxI,MAAOQ,EAAQU,EAAiBL,KAAKF,IAChCG,EAAmBC,KAAKP,EAAM,MACjCG,EAASA,EAAOK,QAAQR,EAAM,GAAI,YAAcX,EAAWoB,EAAoBF,KAAKP,EAAM,IAAME,EAAOF,EAAM,GAAKC,EAAOD,EAAM,IAAIR,KAAO,KAI5II,GAAKO,OAASA,GAEfQ,QAAS,WACR,GAAIf,GAASC,KACZe,EAASzB,EAAS0B,cAAc,SAChCV,EAASP,EAAKO,MAEfS,GAAME,KAAO,WAEVF,EAAMG,WACRH,EAAMG,WAAWC,QAAUb,EAE3BS,EAAMK,YAAcd,EAGrBS,EAAMM,aAAa,cAAetB,EAAKuB,MAEvCC,EAAOC,YAAYT,GAEnBxB,EAAW,WACVkC,QAAQ,WAAa,MAAOV,SA9DhC,GAAIQ,GAAsBjC,EAASoC,qBAAqB,QAAQ,GAC/DhC,EAAsBJ,EAAS0B,cAAc,KAC7CT,EAAsB,oCACtBM,EAAsB,4BACtBD,EAAsB,OACtBH,EAAsB,wBA+DvBgB,SAAQ7B,IACPN,SAAUC","file":"handler/css.js","sourcesContent":[null,"/**\n * Qoopido.demand handler/css\n *\n * Copyright (c) 2015 Dirk Lueth\n *\n * Dual licensed under the MIT and GPL licenses.\n *  - http://www.opensource.org/licenses/mit-license.php\n *  - http://www.gnu.org/copyleft/gpl.html\n *\n * @author Dirk Lueth <info@qoopido.com>\n */\n\n(function(document, setTimeout) {\n\t'use strict';\n\n\tvar target              = document.getElementsByTagName('head')[0],\n\t\tresolver            = document.createElement('a'),\n\t\tregexMatchUrl       = /url\\s*\\(\\s*[\"']?(.+?)[\"']?\\s*\\)/gi,\n\t\tregexMatchImport    = /@import\\s+[\"'](.+?)[\"']/gi,\n\t\tregexIsAbsolutePath = /^\\//i,\n\t\tregexIsAbsoluteUri  = /^data:|http(s?):|\\/\\//i;\n\n\tfunction resolveUrl(url) {\n\t\tresolver.href = url;\n\n\t\treturn resolver;\n\t}\n\n\tfunction definition() {\n\t\treturn {\n\t\t\tmatchType: /^text\\/css/,\n\t\t\tonPreRequest: function() {\n\t\t\t\tvar self = this,\n\t\t\t\t\turl  = self.url;\n\n\t\t\t\tself.url = url.slice(-4) !== '.css' ? url + '.css' : url;\n\t\t\t},\n\t\t\tonPostRequest: function() {\n\t\t\t\tvar self    = this,\n\t\t\t\t\turl     = resolveUrl(self.url + '/..'),\n\t\t\t\t\tbase    = url.href,\n\t\t\t\t\thost    = '//' + url.host,\n\t\t\t\t\tsource  = self.source,\n\t\t\t\t\tmatch;\n\n\t\t\t\twhile((match = regexMatchUrl.exec(source))) {\n\t\t\t\t\tif(!regexIsAbsoluteUri.test(match[1])) {\n\t\t\t\t\t\tsource = source.replace(match[0], 'url(\"' + resolveUrl(regexIsAbsolutePath.test(match[1]) ? host + match[1] : base + match[1]).href + '\")');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile((match = regexMatchImport.exec(source))) {\n\t\t\t\t\tif(!regexIsAbsoluteUri.test(match[1])) {\n\t\t\t\t\t\tsource = source.replace(match[0], '@import \"' + resolveUrl(regexIsAbsolutePath.test(match[1]) ? host + match[1] : base + match[1]).href + '\"');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tself.source = source;\n\t\t\t},\n\t\t\tprocess: function() {\n\t\t\t\tvar self   = this,\n\t\t\t\t\tstyle  = document.createElement('style'),\n\t\t\t\t\tsource = self.source;\n\n\t\t\t\tstyle.type = 'text/css';\n\n\t\t\t\tif(style.styleSheet) {\n\t\t\t\t\tstyle.styleSheet.cssText = source;\n\t\t\t\t} else {\n\t\t\t\t\tstyle.textContent = source;\n\t\t\t\t}\n\n\t\t\t\tstyle.setAttribute('demand-path', self.path);\n\n\t\t\t\ttarget.appendChild(style);\n\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tprovide(function() { return style; });\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\n\tprovide(definition);\n}(document, setTimeout));"],"sourceRoot":"/source/"}