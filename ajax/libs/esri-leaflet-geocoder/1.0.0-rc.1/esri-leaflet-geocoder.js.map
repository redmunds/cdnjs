{"version":3,"file":"esri-leaflet-geocoder.js","sources":["../src/EsriLeafletGeocoding.js","../src/Tasks/Geocode.js","../src/Tasks/ReverseGeocode.js","../src/Tasks/Suggest.js","../src/Services/Geocoding.js","../src/Controls/Geosearch.js","../src/Providers/ArcgisOnlineGeocoder.js","../src/Providers/FeatureLayer.js","../src/Providers/GeocodeService.js","../src/Providers/MapService.js"],"names":["EsriLeafletGeocoding","WorldGeocodingService","Tasks","Services","Controls","window","L","esri","Geocoding","Esri","Geocode","Task","extend","path","params","outSr","forStorage","outFields","maxLocations","setters","address","neighborhood","city","subregion","region","postal","country","text","category","token","key","fields","within","bounds","latLngBounds","console","log","this","bbox","Util","boundsToExtent","nearby","latlng","radius","latLng","location","lng","lat","distance","Math","min","max","run","callback","context","searchExtent","request","error","response","processor","_processFindResponse","_processFindAddressCandidatesResponse","results","undefined","call","i","locations","length","extentToBounds","extent","push","name","score","feature","attributes","Score","LatLng","geometry","y","x","properties","candidates","candidate","geocode","url","options","ReverseGeocode","outSR","language","result","reverseGeocode","Suggest","pad","center","getCenter","ne","getNorthWest","distanceTo","suggest","Service","includes","Mixin","Events","initialize","cleanUrl","setOptions","prototype","reverse","warn","geocoding","Geosearch","Control","position","zoomToResult","useMapBounds","collapseAfterResult","expanded","allowMultipleResults","useArcgisWorldGeocoder","providers","placeholder","geocoder","Providers","ArcGISOnline","maxResults","_pendingSuggestions","_geocode","provider","activeRequests","allResults","bind","concat","_boundsFromResults","fire","_map","fitBounds","DomUtil","removeClass","_input","clear","blur","_searchBounds","_suggest","addClass","createCallback","suggestions","value","_suggestions","innerHTML","style","display","_lastRender","nodes","parentElement","removeChild","_renderSuggestions","label","getBounds","getZoom","currentGroup","list","header","suggestion","create","textContent","innerText","suggestionItem","magicKey","nullIsland","LatLngBounds","isValid","equals","_wrapper","onAdd","map","attributionControl","addAttribution","DomEvent","addListener","focus","e","target","srcElement","selectedPosition","querySelectorAll","selected","keyCode","preventDefault","previousItem","nextItem","abort","id","_EsriLeafletCallbacks","limitExecByInterval","which","_lastValue","disableClickPropagation","onRemove","removeAttribution","geosearch","shift","isCollection","FeatureLayer","bufferRadius","formatSuggestion","searchFields","intialize","query","where","_buildQuery","returnGeometry","intersects","idField","raw","objectIdFieldName","count","features","slice","featureIds","_featureBounds","queryString","field","join","geojson","geoJson","type","Circle","GeocodeService","MapService","layer","_getIdField","find","layers","_idField","contains","get","metadata"],"mappings":"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","sourcesContent":["var EsriLeafletGeocoding = {\n  WorldGeocodingService: '//geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/',\n  Tasks: {},\n  Services: {},\n  Controls: {}\n};\n\n// attach to the L.esri global if we can\nif(typeof window !== 'undefined' && window.L && window.L.esri) {\n  window.L.esri.Geocoding = EsriLeafletGeocoding;\n}\n\n// We do not have an 'Esri' variable e.g loading this file directly from source define 'Esri'\nif(!Esri){\n  var Esri = window.L.esri;\n}","EsriLeafletGeocoding.Tasks.Geocode = Esri.Tasks.Task.extend({\n  path: 'find',\n\n  params : {\n    outSr: 4326,\n    forStorage: false,\n    outFields: '*',\n    maxLocations: 20\n  },\n\n  setters: {\n    'address': 'address',\n    'neighborhood': 'neighborhood',\n    'city': 'city',\n    'subregion': 'subregion',\n    'region': 'region',\n    'postal': 'postal',\n    'country': 'country',\n    'text': 'text',\n    'category': 'category[]',\n    'token' : 'token',\n    'key': 'magicKey',\n    'fields': 'outFields[]',\n    'forStorage': 'forStorage',\n    'maxLocations': 'maxLocations'\n  },\n\n  within: function(bounds){\n    bounds = L.latLngBounds(bounds);\n    console.log(bounds);\n    this.params.bbox = Esri.Util.boundsToExtent(bounds);\n  },\n\n  nearby: function(latlng, radius){\n    latlng = L.latLng(latlng);\n    this.params.location = latlng.lng + ',' + latlng.lat;\n    this.params.distance = Math.min(Math.max(radius, 2000), 50000);\n  },\n\n  run: function(callback, context){\n    this.path = (this.params.text) ? 'find' : 'findAddressCandidates';\n\n    if(this.path === 'findAddressCandidates' && this.params.bbox) {\n      this.params.searchExtent = this.params.bbox;\n      delete this.params.bbox;\n    }\n\n    return this.request(function(error, response){\n      var processor = (this.path === 'find') ? this._processFindResponse : this._processFindAddressCandidatesResponse;\n      var results = (!error) ? processor(response) : undefined;\n      callback.call(context, error, { results: results }, response);\n    }, this);\n  },\n\n  _processFindResponse: function(response){\n    var results = [];\n\n    for (var i = 0; i < response.locations.length; i++) {\n      var location = response.locations[i];\n      var bounds = Esri.Util.extentToBounds(location.extent);\n\n      results.push({\n        text: location.name,\n        bounds: bounds,\n        score: location.feature.attributes.Score,\n        latlng: new L.LatLng(location.feature.geometry.y, location.feature.geometry.x),\n        properties: location.feature.attributes\n      });\n    }\n\n    return results;\n  },\n\n  _processFindAddressCandidatesResponse: function(response){\n    var results = [];\n\n    for (var i = 0; i < response.candidates.length; i++) {\n      var candidate = response.candidates[i];\n      var bounds = Esri.Util.extentToBounds(candidate.extent);\n\n      results.push({\n        text: candidate.address,\n        bounds: bounds,\n        score: candidate.score,\n        latlng: new L.LatLng(candidate.location.y, candidate.location.x),\n        properties: candidate.attributes\n      });\n    }\n\n    return results;\n  }\n\n});\n\nEsriLeafletGeocoding.Tasks.geocode = function(url, options){\n  return new EsriLeafletGeocoding.Tasks.Geocode(url, options);\n};","EsriLeafletGeocoding.Tasks.ReverseGeocode = Esri.Tasks.Task.extend({\n  path: 'reverseGeocode',\n\n  params : {\n    outSR: 4326\n  },\n  setters: {\n    'distance': 'distance',\n    'language': 'language'\n  },\n\n  latlng: function (latlng) {\n    latlng = L.latLng(latlng);\n    this.params.location = latlng.lng + ',' + latlng.lat;\n    return this;\n  },\n\n  run: function(callback, context){\n    return this.request(function(error, response){\n      var result;\n\n      if(!error){\n        result = {\n          latlng: new L.LatLng(response.location.y, response.location.x),\n          address: response.address\n        };\n      } else {\n        result = undefined;\n      }\n\n      callback.call(context, error, result, response);\n    }, this);\n  }\n});\n\nEsriLeafletGeocoding.Tasks.reverseGeocode = function(url, options){\n  return new EsriLeafletGeocoding.Tasks.ReverseGeocode(url, options);\n};","EsriLeafletGeocoding.Tasks.Suggest = Esri.Tasks.Task.extend({\n  path: 'suggest',\n\n  params : {},\n\n  setters: {\n    text: 'text',\n    category: 'category'\n  },\n\n  within: function(bounds){\n    bounds = L.latLngBounds(bounds);\n    bounds = bounds.pad(0.5);\n    var center = bounds.getCenter();\n    var ne = bounds.getNorthWest();\n    this.params.location = center.lng + ',' + center.lat;\n    this.params.distance = Math.min(Math.max(center.distanceTo(ne), 2000), 50000);\n    return this;\n  },\n\n  nearby: function(latlng, radius){\n    latlng = L.latLng(latlng);\n    this.params.location = latlng.lng + ',' + latlng.lat;\n    this.params.distance = Math.min(Math.max(radius, 2000), 50000);\n    return this;\n  },\n\n  run: function(callback, context){\n    return this.request(function(error, response){\n      callback.call(context, error, response, response);\n    }, this);\n  }\n\n});\n\nEsriLeafletGeocoding.Tasks.suggest = function(url, options){\n  return new EsriLeafletGeocoding.Tasks.Suggest(url, options);\n};","EsriLeafletGeocoding.Services.Geocoding = Esri.Services.Service.extend({\n  includes: L.Mixin.Events,\n\n  initialize: function (url, options) {\n    url = (typeof url === 'string') ? url : EsriLeafletGeocoding.WorldGeocodingService;\n    options = (typeof url === 'object') ? url : (options || {});\n    this.url = Esri.Util.cleanUrl(url);\n    L.Util.setOptions(this, options);\n    Esri.Services.Service.prototype.initialize.call(this, url, options);\n  },\n\n  geocode: function(){\n    return new EsriLeafletGeocoding.Tasks.Geocode(this);\n  },\n\n  reverse: function(){\n    return new EsriLeafletGeocoding.Tasks.ReverseGeocode(this);\n  },\n\n  suggest: function(){\n    if(this.url !== EsriLeafletGeocoding.WorldGeocodingService && console && console.warn){\n      console.warn('Only the ArcGIS Online World Geocoder supports suggestions');\n    }\n    return new EsriLeafletGeocoding.Tasks.Suggest(this);\n  }\n});\n\nEsriLeafletGeocoding.Services.geocoding = function(url, options){\n  return new EsriLeafletGeocoding.Services.Geocoding(url, options);\n};","EsriLeafletGeocoding.Controls.Geosearch = L.Control.extend({\n  includes: L.Mixin.Events,\n  options: {\n    position: 'topleft',\n    zoomToResult: true,\n    useMapBounds: 12,\n    collapseAfterResult: true,\n    expanded: false,\n    forStorage: false,\n    allowMultipleResults: true,\n    useArcgisWorldGeocoder: true,\n    providers: [],\n    placeholder: 'Search for places or addresses'\n  },\n\n  initialize: function (options) {\n    L.Util.setOptions(this, options);\n\n    if(this.options.useArcgisWorldGeocoder){\n      var geocoder = new EsriLeafletGeocoding.Controls.Geosearch.Providers.ArcGISOnline();\n      this.options.providers.push(geocoder);\n    }\n\n    if(this.options.maxResults){\n      for (var i = 0; i < this.options.providers.length; i++) {\n        this.options.providers[i].options.maxResults = this.options.maxResults;\n      }\n    }\n\n    this._pendingSuggestions = [];\n  },\n\n  _geocode: function(text, key, provider){\n    var activeRequests = 0;\n    var allResults = [];\n    var bounds;\n\n    var callback = L.Util.bind(function(error, results){\n      activeRequests--;\n\n      if(results){\n        allResults = allResults.concat(results);\n      }\n\n      if(activeRequests <= 0){\n        bounds = this._boundsFromResults(allResults);\n\n        this.fire('results', {\n          results: allResults,\n          bounds: bounds,\n          latlng: (bounds) ? bounds.getCenter() : undefined,\n          text: text\n        });\n\n        if(this.options.zoomToResult && bounds){\n          this._map.fitBounds(bounds);\n        }\n\n        L.DomUtil.removeClass(this._input, 'geocoder-control-loading');\n\n        this.fire('load');\n\n        this.clear();\n\n        this._input.blur();\n      }\n    }, this);\n\n    if(key){\n      activeRequests++;\n      provider.results( text, key, this._searchBounds(), callback);\n    } else {\n      for (var i = 0; i < this.options.providers.length; i++) {\n        activeRequests++;\n        this.options.providers[i].results(text, key, this._searchBounds(), callback);\n      }\n    }\n  },\n\n  _suggest: function(text){\n    L.DomUtil.addClass(this._input, 'geocoder-control-loading');\n    var activeRequests = this.options.providers.length;\n\n    var createCallback = L.Util.bind(function(text, provider){\n      return L.Util.bind(function(error, suggestions){\n        var i;\n\n        activeRequests = activeRequests - 1;\n\n        if(this._input.value < 2) {\n          this._suggestions.innerHTML = '';\n          this._suggestions.style.display = 'none';\n          return;\n        }\n\n        if(suggestions){\n          for (i = 0; i < suggestions.length; i++) {\n            suggestions[i].provider = provider;\n          }\n        }\n\n        if(provider._lastRender !== text && provider.nodes) {\n          for (i = 0; i < provider.nodes.length; i++) {\n            if(provider.nodes[i].parentElement){\n              this._suggestions.removeChild(provider.nodes[i]);\n            }\n          }\n\n          provider.nodes = [];\n        }\n\n        if(suggestions.length && this._input.value === text) {\n          if(provider.nodes){\n            for (i = 0; i < provider.nodes.length; i++) {\n              if(provider.nodes[i].parentElement){\n                this._suggestions.removeChild(provider.nodes[i]);\n              }\n            }\n          }\n\n          provider._lastRender = text;\n          provider.nodes = this._renderSuggestions(suggestions);\n        }\n\n        if(activeRequests === 0) {\n          L.DomUtil.removeClass(this._input, 'geocoder-control-loading');\n        }\n      }, this);\n    }, this);\n\n    this._pendingSuggestions = [];\n\n    for (var i = 0; i < this.options.providers.length; i++) {\n      var provider = this.options.providers[i];\n      console.log(!!provider);\n      console.log(provider.options.label);\n      var request = provider.suggestions(text, this._searchBounds(), createCallback(text, provider));\n      this._pendingSuggestions.push(request);\n    }\n  },\n\n  _searchBounds: function(){\n    if(this.options.useMapBounds === false) {\n      return null;\n    }\n\n    if(this.options.useMapBounds === true) {\n      return this._map.getBounds();\n    }\n\n    if(this.options.useMapBounds <= this._map.getZoom()) {\n      return this._map.getBounds();\n    }\n\n    return null;\n  },\n\n  _renderSuggestions: function(suggestions){\n    var currentGroup;\n    this._suggestions.style.display = 'block';\n    var nodes = [];\n    var list;\n    var header;\n    for (var i = 0; i < suggestions.length; i++) {\n      var suggestion = suggestions[i];\n      if(!header && this.options.providers.length > 1 && currentGroup !== suggestion.provider.options.label){\n        header = L.DomUtil.create('span', 'geocoder-control-header', this._suggestions);\n        header.textContent = suggestion.provider.options.label;\n        header.innerText = suggestion.provider.options.label;\n        currentGroup = suggestion.provider.options.label;\n        nodes.push(header);\n      }\n\n      if(!list){\n        list = L.DomUtil.create('ul', 'geocoder-control-list', this._suggestions);\n      }\n\n      var suggestionItem = L.DomUtil.create('li', 'geocoder-control-suggestion', list);\n\n      suggestionItem.innerHTML = suggestion.text;\n      suggestionItem.provider = suggestion.provider;\n      suggestionItem['data-magic-key'] = suggestion.magicKey;\n    }\n\n    nodes.push(list);\n    console.log(nodes.length);\n    return nodes;\n  },\n\n  _boundsFromResults: function(results){\n    if(!results.length){\n      return;\n    }\n\n    var nullIsland = new L.LatLngBounds([0,0], [0,0]);\n    var bounds = new L.LatLngBounds();\n\n    for (var i = results.length - 1; i >= 0; i--) {\n      var result = results[i];\n\n      // make sure bounds are valid and not 0,0. sometimes bounds are incorrect or not present\n      if(result.bounds.isValid() && !result.bounds.equals(nullIsland)){\n        bounds.extend(result.bounds);\n      }\n\n      // ensure that the bounds include the results center point\n      bounds.extend(result.latlng);\n    }\n\n    return bounds;\n  },\n\n  clear: function(){\n    this._suggestions.innerHTML = '';\n    this._suggestions.style.display = 'none';\n    this._input.value = '';\n\n    if(this.options.collapseAfterResult){\n      this._input.placeholder = '';\n      L.DomUtil.removeClass(this._wrapper, 'geocoder-control-expanded');\n    }\n  },\n\n  onAdd: function (map) {\n    this._map = map;\n\n    if (map.attributionControl) {\n      map.attributionControl.addAttribution('Geocoding by Esri');\n    }\n\n    this._wrapper = L.DomUtil.create('div', 'geocoder-control ' + ((this.options.expanded) ? ' ' + 'geocoder-control-expanded'  : ''));\n    this._input = L.DomUtil.create('input', 'geocoder-control-input leaflet-bar', this._wrapper);\n\n    this._suggestions = L.DomUtil.create('div', 'geocoder-control-suggestions leaflet-bar', this._wrapper);\n\n    L.DomEvent.addListener(this._input, 'focus', function(e){\n      this._input.placeholder = this.options.placeholder;\n      L.DomUtil.addClass(this._wrapper, 'geocoder-control-expanded');\n    }, this);\n\n    L.DomEvent.addListener(this._wrapper, 'click', function(e){\n      L.DomUtil.addClass(this._wrapper, 'geocoder-control-expanded');\n      this._input.focus();\n    }, this);\n\n    L.DomEvent.addListener(this._suggestions, 'mousedown', function(e){\n      var suggestionItem = e.target || e.srcElement;\n      this._geocode(suggestionItem.innerHTML, suggestionItem['data-magic-key'], suggestionItem.provider);\n      this.clear();\n    }, this);\n\n    L.DomEvent.addListener(this._input, 'blur', function(e){\n      this.clear();\n    }, this);\n\n    L.DomEvent.addListener(this._input, 'keydown', function(e){\n      L.DomUtil.addClass(this._wrapper, 'geocoder-control-expanded');\n\n      var list = this._suggestions.querySelectorAll('.' + 'geocoder-control-suggestion');\n      var selected = this._suggestions.querySelectorAll('.' + 'geocoder-control-selected')[0];\n      var selectedPosition;\n\n      for (var i = 0; i < list.length; i++) {\n        if(list[i] === selected){\n          selectedPosition = i;\n          break;\n        }\n      }\n\n      switch(e.keyCode){\n      case 13:\n        if(selected){\n          this._geocode(selected.innerHTML, selected['data-magic-key'], selected.provider);\n          this.clear();\n        } else if(this.options.allowMultipleResults){\n          this._geocode(this._input.value, undefined);\n          this.clear();\n        } else {\n          L.DomUtil.addClass(list[0], 'geocoder-control-selected');\n        }\n        L.DomEvent.preventDefault(e);\n        break;\n      case 38:\n        if(selected){\n          L.DomUtil.removeClass(selected, 'geocoder-control-selected');\n        }\n\n        var previousItem = list[selectedPosition-1];\n\n        if(selected && previousItem) {\n          L.DomUtil.addClass(previousItem, 'geocoder-control-selected');\n        } else {\n          L.DomUtil.addClass(list[list.length-1], 'geocoder-control-selected');\n        }\n        L.DomEvent.preventDefault(e);\n        break;\n      case 40:\n        if(selected){\n          L.DomUtil.removeClass(selected, 'geocoder-control-selected');\n        }\n\n        var nextItem = list[selectedPosition+1];\n\n        if(selected && nextItem) {\n          L.DomUtil.addClass(nextItem, 'geocoder-control-selected');\n        } else {\n          L.DomUtil.addClass(list[0], 'geocoder-control-selected');\n        }\n        L.DomEvent.preventDefault(e);\n        break;\n      default:\n        // when the input changes we should cancel all pending suggestion requests if possible to avoid result collisions\n        for (var x = 0; x < this._pendingSuggestions.length; x++) {\n          var request = this._pendingSuggestions[x];\n          if(request && request.abort && !request.id){\n            request.abort();\n          //work around an Esri Leaflet bug. Remove for 1.0.0/RC.2\n          } else if(request.id && window._EsriLeafletCallbacks[request.id].abort) {\n            window._EsriLeafletCallbacks[request.id].abort();\n          }\n        }\n        break;\n      }\n    }, this);\n\n    L.DomEvent.addListener(this._input, 'keyup', L.Util.limitExecByInterval(function(e){\n      var key = e.which || e.keyCode;\n      var text = (e.target || e.srcElement).value;\n\n      // require at least 2 characters for suggestions\n      if(text.length < 2) {\n        this._suggestions.innerHTML = '';\n        this._suggestions.style.display = 'none';\n        L.DomUtil.removeClass(this._input, 'geocoder-control-loading');\n        return;\n      }\n\n      // if this is the escape key it will clear the input so clear suggestions\n      if(key === 27){\n        this._suggestions.innerHTML = '';\n        this._suggestions.style.display = 'none';\n        return;\n      }\n\n      // if this is NOT the up/down arrows or enter make a suggestion\n      if(key !== 13 && key !== 38 && key !== 40){\n        if(this._input.value !== this._lastValue){\n          this._lastValue = this._input.value;\n          this._suggest(text);\n        }\n      }\n    }, 50, this), this);\n\n    L.DomEvent.disableClickPropagation(this._wrapper);\n\n    return this._wrapper;\n  },\n\n  onRemove: function (map) {\n    map.attributionControl.removeAttribution('Geocoding by Esri');\n  }\n});\n\nEsriLeafletGeocoding.Controls.geosearch = function(options){\n  return new EsriLeafletGeocoding.Controls.Geosearch(options);\n};\n\nEsriLeafletGeocoding.Controls.Geosearch.Providers = {};","EsriLeafletGeocoding.Controls.Geosearch.Providers.ArcGISOnline = EsriLeafletGeocoding.Services.Geocoding.extend({\n  options: {\n    label: \"Places and Addresses\",\n    maxResults: 5\n  },\n  suggestions: function(text, bounds, callback){\n    var request = this.suggest().text(text);\n\n    if(bounds){\n      request.within(bounds);\n    }\n\n    return request.run(function(error, results, response){\n      var suggestions = [];\n      if(!error){\n        while(response.suggestions.length && suggestions.length <= (this.options.maxResults - 1)){\n          var suggestion = response.suggestions.shift();\n          if(!suggestion.isCollection){\n            suggestions.push({\n              text: suggestion.text,\n              magicKey: suggestion.magicKey\n            });\n          }\n        }\n      }\n      callback(error, suggestions);\n    }, this);\n  },\n\n  results: function(text, key, bounds, callback){\n    var request = this.geocode().text(text);\n\n    if(key){\n      request.key(key);\n    } else {\n      request.maxLocations(this.options.maxResults);\n    }\n\n    if(bounds){\n      request.within(bounds);\n    }\n\n    if(this.options.forStorage){\n      request.forStorage(true);\n    }\n\n    return request.run(function(error, response){\n      callback(error, response.results);\n    }, this);\n  }\n});","EsriLeafletGeocoding.Controls.Geosearch.Providers.FeatureLayer = L.esri.Services.FeatureLayer.extend({\n  options: {\n    label: 'Feature Layer',\n    maxResults: 5,\n    bufferRadius: 1000,\n    formatSuggestion: function(feature){\n      return feature.properties[this.options.searchFields[0]];\n    }\n  },\n  intialize: function(url, options){\n    L.esri.Services.FeatureLayer.prototype.call(this, url, options);\n    L.Util.setOptions(this, options);\n    if(typeof this.options.searchFields === 'string'){\n      this.options.searchFields = [this.options.searchFields];\n    }\n  },\n  suggestions: function(text, bounds, callback){\n    var query = this.query().where(this._buildQuery(text))\n                            .returnGeometry(false);\n\n    if(bounds){\n      query.intersects(bounds);\n    }\n\n    if(this.options.idField){\n      query.fields([this.options.idField].concat(this.options.searchFields));\n    }\n\n    var request = query.run(function(error, results, raw){\n      if(error){\n        callback(error, []);\n      } else {\n        this.options.idField = raw.objectIdFieldName;\n        var suggestions = [];\n        var count = Math.min(results.features.length, this.options.maxResults);\n        for (var i = 0; i < count; i++) {\n          var feature = results.features[i];\n          suggestions.push({\n            text: this.options.formatSuggestion.call(this, feature),\n            magicKey: feature.id\n          });\n        }\n        callback(error, suggestions.slice(0, this.options.maxResults).reverse());\n      }\n    }, this);\n\n    return request;\n  },\n  results: function(text, key, bounds, callback){\n    var query = this.query();\n\n    if(key){\n      query.featureIds([key]);\n    } else {\n      query.where(this._buildQuery(text));\n    }\n\n    if(bounds){\n      query.within(bounds);\n    }\n\n    return query.run(L.Util.bind(function(error, features){\n      var results = [];\n      for (var i = 0; i < features.features.length; i++) {\n        var feature = features.features[i];\n        if(feature){\n          var bounds = this._featureBounds(feature);\n\n          var result = {\n            latlng: bounds.getCenter(),\n            bounds: bounds,\n            text: this.options.formatSuggestion.call(this, feature),\n            properties: feature.properties\n          };\n\n          results.push(result);\n        }\n      }\n      callback(error, results);\n    }, this));\n  },\n  _buildQuery: function(text){\n    var queryString = [];\n\n    for (var i = this.options.searchFields.length - 1; i >= 0; i--) {\n      var field = this.options.searchFields[i];\n      queryString.push(field + \" LIKE '%\" + text + \"%'\"); // jshint ignore:line\n    }\n\n    return queryString.join(' OR ');\n  },\n  _featureBounds: function(feature){\n    var geojson = L.geoJson(feature);\n    if(feature.geometry.type === 'Point'){\n      var center = geojson.getBounds().getCenter();\n      return new L. Circle(center, this.options.bufferRadius).getBounds();\n    } else {\n      return geojson.getBounds();\n    }\n  }\n});","EsriLeafletGeocoding.Controls.Geosearch.Providers.GeocodeService = EsriLeafletGeocoding.Services.Geocoding.extend({\n  options: {\n    label: 'Geocode Server',\n    maxResults: 5\n  },\n\n  suggestions: function(text, bounds, callback){\n    callback(undefined, []);\n    return false;\n  },\n\n  results: function(text, key, bounds, callback){\n    var request = this.geocode().text(text);\n\n    request.maxLocations(this.options.maxResults);\n\n    if(bounds){\n      request.within(bounds);\n    }\n\n    return request.run(function(error, response){\n      callback(error, response.results);\n    }, this);\n  }\n});","EsriLeafletGeocoding.Controls.Geosearch.Providers.MapService = L.esri.Services.MapService.extend({\n  options: {\n    layer: 0,\n    label: 'Map Service',\n    bufferRadius: 1000,\n    maxResults: 5,\n    formatSuggestion: function(feature){\n      return feature.properties[this.options.searchFields[0]];\n    }\n  },\n  initialize: function(url, options){\n    L.esri.Services.MapService.prototype.initialize.call(this, url, options);\n    this._getIdField();\n  },\n  suggestions: function(text, bounds, callback){\n    var request = this.find().text(text).returnGeometry(false).layers(this.options.layer);\n\n    if (this._idField) {\n      request.fields(this.options.searchFields);\n    }\n\n    return request.run(function(error, results){\n      var suggestions = [];\n\n      if(this._idField && !error){\n        var count = Math.min(this.options.maxResults, results.features.length);\n        for (var i = 0; i < count; i++) {\n          var feature = results.features[i];\n          suggestions.push({\n            text: this.options.formatSuggestion.call(this, feature),\n            magicKey: feature.properties[this._idField]\n          });\n        }\n      }\n\n      callback(error, suggestions.reverse());\n    }, this);\n  },\n  results: function(text, key, bounds, callback){\n    var results = [];\n    var request;\n\n    if(key){\n      request = this.query().layer(this.options.layer).featureIds(key);\n    } else {\n      request = this.find().text(text).contains(false).layers(this.options.layer);\n    }\n\n    if(this._idField){\n      request.fields([this.options.searchFields, this.options._idField]);\n    }\n\n    return request.run(function(error, features){\n      if(this._idField && !error){\n        for (var i = 0; i < features.features.length; i++) {\n          var feature = features.features[i];\n          if(feature){\n            var bounds = this._featureBounds(feature);\n            var result = {\n              latlng: bounds.getCenter(),\n              bounds: bounds,\n              text: this.options.formatSuggestion.call(this, feature),\n              properties: feature.properties\n            };\n            results.push(result);\n          }\n        }\n      }\n      callback(error, results.reverse());\n    }, this);\n  },\n  _featureBounds: function(feature){\n    var geojson = L.geoJson(feature);\n    if(feature.geometry.type === 'Point'){\n      var center = geojson.getBounds().getCenter();\n      return new L. Circle(center, this.options.bufferRadius).getBounds();\n    } else {\n      return geojson.getBounds();\n    }\n  },\n  _getIdField: function(){\n    this.get(this.options.layer, {}, function(error, metadata){\n      for (var i = 0; i < metadata.fields.length; i++) {\n        var field = metadata.fields[i];\n        if(field.type === 'esriFieldTypeOID'){\n          this._idField = field.name;\n          this.options.searchFields.push(field.name);\n          break;\n        }\n      }\n    }, this);\n  }\n});"]}